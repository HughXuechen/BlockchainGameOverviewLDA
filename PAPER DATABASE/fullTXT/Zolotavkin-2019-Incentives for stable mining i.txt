Incentives for Stable Mining in Pay Per Last N Shares Pools
1	  
2	  
3	  
4	  
5	  
6	  
7	  
8	  
9	  
10	  
11	  
12	  
13	  
14	  
15	  
16	  
17	  
18	  
19	  
20	  
21	  
22	  
23	  
24	  
25	  
26	  
27	  
28	  
29	  
30	  
31	  
32	  
33	  
34	  
35	  
36	  
37	  
38	  
39	  
40	  
41	  
42	  
43	  
44	  
45	  
46	  
47	  
48	  
49	  
50	  
51	  
52	  
53	  
54	  
55	  
56	  
57	  
60	  
61	  
62	  
63	  
64	  
65	  
Incentives for Stable Mining in Pay Per Last N
Shares Pools
Yevhen Zolotavkin and Julian Garcia
Faculty of Information Technology
Monash University, Clayton
3800 Victoria, Australia
Email: yevhen.zolotavkin@monash.edu, julian.garcia@monash.edu
Abstract—A large number of blockchain consensus protocols
use the Proof of Work (PoW) principle, which relies on miners
who exchange computation for newly minted currency. Their
task is to support consensus, safeguarding the immutability of the
chain’s history. For the sake of regular income, a vast majority of
miners team-up in large independent pools. These pools distribute
among all their members the rewards gathered from individual
miners, thus guaranteeing a stable income for each miner in
the pool. The monetary compensation follows a specific reward
system enforced by the pool administrator. Pay Per Last N Shares
(PPLNS) is one of the most popular reward systems in PoW
pools. Despite many desirable properties, in this paper, we show
that composition of PPLNS pools may be unstable. To better
understand the incentives of miners, we explore the effect of
time preferences in the mining decisions of miners. Using a
game-theoretical model we study conditions for equilibrium in a
game with two different PPLNS pools. We find that the range of
parameters that support equilibria between the pools with large
number of miners is minuscule. This implies that in many cases,
miners may have incentives to migrate towards larger pools,
harming decentralization in the process.
Index Terms—cryptocurrency, blockchain, proof of work, de-
centralization, game theory, time discounting
I. Introduction
Proof-of-Work (PoW) is the principle behind decentralisa-
tion in the vast majority of modern cryptocurrencies. In PoW
cryptocurrencies, consensus is reached by having miners solve
computation puzzles [1]. Miners exchange their computational
effort for the opportunity to earn a monetary payoff [2], [3].
Solo mining entails large income variances. Since miners
prefer stable income, solo mining is very rare and instead,
miners assemble themselves in pools. Inside pools the benefits
from newly discovered blocks are shared by all pool members
in proportion to their individual efforts. All miners solve
puzzles of low complexity, known as “shares”. On submission,
every share is rewarded by the pool manager in proportion
to its complexity. The pool, however, profits when the full
solution of a block puzzle randomly appears among the shares.
This scheme ensures a stable compensation for all the miners.
Pools have different reward schemes, determining how the
work done by miners in their shares translates into currency
compensation [4], [5].
Many reward schemes (e.g., Pay Per Share – PPS, Propor-
tional reward – PROP) are vulnerable to “pool hopping”. This
issue arises because rational miners can increase their returns
by switching their mining activity between different pools [6].
The main advantage of PPLNS pools is its resilience to “pool
hopping” [7]–[9]. PPLNS will only reward the N most recent
shares preceding a discovered block, thereby encouraging pool
loyalty. Figure 1 depicts the case for N = 20 shares. According
to this schematic figure, the sliding window for the most recent
payment contains 8 shares produced by miner A and 12 shares
produced by miner B. Hence, these miners are eligible for 0.4
and 0.6 of the reward, respectively. The parameter N varies
across different pools [10], [11]. The interaction between
/ \
\ / \
\
\
\ / \
\ $/ \
\
\
\ / \
\ / / \
\
\
\ / \
\
\
\ $ \
\ / \
\ /\
\
payments ($)
...
Miner B
60% of Power
\
\
Miner A
40% of Power
/
N=20 (excludes $)
......
t  E
Figure 1. Rewards in PPLNS pool with two miners
behaviour and mining incentives has been previously studied
using game theoretical models [12]–[15]. The idea of these
models is to explore how different protocols and parameters
play along with miners that are rational decision makers.
The goal for most of the protocols in the light of strategic
thinking is to provide incentives that are aligned with desirable
properties of the system.
We present a game theoretical model to study the incentives
of miners in PPLNS pools. Importantly, we allow for miners to
discount time. This is a well-known feature of decision makers
whose choices are rewarded in the future. It is particularly
important for PPLNS given the time features introduced by
the reward windows. Our models shows that agents may have
incentives to migrate. This is done by studying the trade-off
between leaving and staying in your current pool, when pools
have different aggregate computational power and different
sizes of reward window N.
Models of time discounting study valuation discrepancies
that rational agents have about rewards that they receive at
different points in time. For example, by comparing person’s
valuation at an earlier date with one for a later date illustrates
that present valuations are higher than future ones [16]. There
are multiple reasons that can explain the differences in valua-
tions, e.g., the opportunity to invest earlier rewards and earnISBN 978-3-903176-16-4 c© 2019 IFIP
IFIP Networking 2019 1570511975
1Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:37:35 UTC from IEEE Xplore.  Restrictions apply. 
interests on them [17], [18]. In addition, for the infrastructure
run by a pool manager which accounts mining contributions
of the miners, risks of hardware failure or risks associated
with compromised cybersecurity add up with the time [19],
[20]. This also should discount expected future compensation.
In order to express miner incentives, our model uses time
preferences with exponential discounting, as commonly used
model in economics.
It remains unclear why the option of faster compensation
in PPLNS pools has attracted so little attention from the com-
munity [8]. Different pools may offer different compensation
speeds. This fact may play an important role for miners who
seek to increase their short-term future income. On the other
hand, computational effort that has already been contributed
by the miners (in the past) in their initial pool, entitles them
to certain compensation, according to PPLNS defined in that
pool. In the case of leaving their initial pool, rewards for the
previous efforts will be received by the miners at a slower pace.
On the other hand, for stable mining it is sufficient if none of
the miners leaves her pool. Our model demonstrates that, for
example, disproportion in the power of two PPLNS pools with
the same size of reward window N may motivate miners to
relocate to the larger pool. Another form of imbalance may
occur between the pools of comparable power but different
sizes of reward windows. This process accelerates in the pools
that either have higher number of miners or have higher time-
preference.
The lack of incentives for steady mining may cause deple-
tion and disappearance of smaller PPLNS pools which will
create pool market that is dominated by a handful of very
large pools. Such centralization of power, runs counter to the
intent of cryptocurrencies and produces an environment which
is opportune to a number of harmful attacks [12], [14], [21].
Based on our model, we suggest how the disparity between
PPLNS pools can be analyzed and mitigated.
The rest of this paper is organized as follows. A game-
theoretical model for stable mining in two PPLNS pools is
presented in section II. Individual contributions of miners to
their pool are expressed as the amount of energy that was spent
on mining. Given approach simplifies modeling and analysis of
the properties of the system of two PPLNS pools. Conditions
that support stable mining in the system of two PPLNS
pools are analyzed in section III. It includes experimental
simulations that assist us in extending the domains for the
parameters that sustain equilibrium. Results are discussed and
concluded in section IV.
II. A game-theoretical model for stable mining
We define stable mining as an equilibrium in the system of
two PPLNS pools where none of the miners has an incentive
to leave her original pool. Specifying the miners’ incentives
requires detailed analysis of the process of mining and defining
the utility of each miner. In order to accomplish this task we
start with a single PPLNS pool where we represent mining as
a continuous process.
A. Discrete and continuous models of PPLNS mining in a
single pool
Mining in PPLNS pool requires the submission of shares
at discrete moments in time, however, the assumption that the
computational complexity of a single share is small, allows
us to represent mining with a continuous model. The mining
energy E (consumed by all miners) is a central parameter of
the model and can be seen as equivalent to the time t that
measures the duration of mining process.
We assume that all the shares produced by the miners and
submitted to the pool are of equal computational complexity.
The computational efficiency of the mining equipment of all
the miners is equal and remains stable throughout the mining
duration. Hence, we conclude that the production of every
share requires equal amount of electrical energy. This property
is used to measure total computational effort (of any given
miner and on any time interval) in terms of energy spent
in computation. Throughout the paper, we ignore network
delays and assume that individual mining effort is immediately
recorded by the mining pool.
Our model for miner incentives considers the effect from
producing an elementary mining effort at time t0, with duration
Δt → 0. As an example, we will refer to miners A and B,
who contribute 40% and 60% of total power, respectively –
see fig. 2. The power of the pool (pool #1) is denoted P1. The
total power of the system is then P = P1 = PA + PB = 1 – in
general, if there is more than one pool in the system, P ≥ P1.
Thus, we consider the computation of a share requires energy
ΔE = P1Δt = Δt.
We will draw an analogy between discrete and continuous
models and express the corresponding utilities of miner A
(fig. 2). Different components of the utility will be analyzed.
In order to illustrate this analogy, we will separately discuss:
a) past contributions of a miner in the most recent PPLNS
window of size N and her incentive to reward this contribution
by her current mining effort delivered to this pool; b) time-
discounting for the future compensation of her current mining
effort.
1) Utility of miner A arising from the past: For miner A,
we express the mining effort that has been contributed prior
to moment t0 (past, denoted as P on fig. 2), and an expected
compensation of this contribution as a result of her mining at
t0.
/ \
\ / \
\
\
\ / \
\ / \
\
\
\ / \
\ / / \
\
\
\ / \
\
\
\...
Miner B
60% of Power
\
\
Miner A
40% of Power
/
\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\
/ / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / /
\
\ ...
a)
b)
probability to be rewardedprobability to reward
Figure 2. Analogy between discrete and continuous models for mining in
PPLNS pool
2Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:37:35 UTC from IEEE Xplore.  Restrictions apply. 
In the discrete model, for any share that arrived in the
pool, the probability that it was produced by miner A is PA
P1
.
We calculate the proportion of her shares in the most recent
window of size N: FA =
NA
N , where NA =
N∑
i=1
PA
P1
is the number
of shares (in expectation) that were produced by miner A. This
implies that FA =
PA
P1
.
In the continuous model, the contribution of miner A is
measured as a fraction FA =
EA,N
EN
. Here, EN is the energy
necessary to produce N shares, EN = NΔE, and, EA,N is
the energy consumed by miner A during time EN
P1
, which is
computed as EA,N =
EN∫
0
PA
P1
dE =
NΔE∫
0
PA
P1
dE = PA
P1
NΔE. As a result,
FA =
PA
P1
in the continuous model as well.
If miner A continues to work for the pool at t0, she self-
compensates her past contribution FA. The effect of instant
self-compensation for miner A is the expectation of immediate
reward, obtained as a result of her mining during [t0, t0 + Δt].
In the discrete model, the elementary contribution is repre-
sented by a share that is produced in the pool and on average
requires effort ΔE (fig. 2). With probability PA
P1
this share
is delivered by miner A. This elementary contribution has a
chance to become a full solution (to produce a new block B
on the blockchain). The probability to deliver a full solution
as a result of spending ΔE will be denoted Pr
(
B
∣∣∣ΔE
)
. In this
case, the reward R will be distributed between miners A and
B, where miner A will receive her fraction, FA. As a result,
miner A expects to receive an instant self-compensation equal
to FA
PA
P1
R · Pr
(
B
∣∣∣ΔE
)
.
In the continuous case, we also consider a portion ΔE,
produced by the pool at t0 (see fig. 2). Effort ΔEA is the
direct contribution of miner A. It may result in finding a
full solution, which will provide miner A with compensation
FAR. Considering the properties of PoW mining, we infer that
Pr
(
B
∣∣∣ΔEA
)
= Pr
(
B
∣∣∣ PA
P1
ΔE
)
= PA
P1
Pr
(
B
∣∣∣ΔE
)
. Therefore, in such
model, the expected utility for miner A, associated with her
past performance is also FA
PA
P1
R · Pr
(
B
∣∣∣ΔE
)
.
2) Utility of miner A arising in the future: For miner
A, we express the future compensation and corresponding
discounting of the current mining effort that is produced during
[t0, t0 + Δt] – the process of compensation in the future is
denoted with F on fig. 2. With probability
(
1 − PA
P1
Pr
(
B
∣∣∣ΔE
))
her elementary effort does not result in finding B, she expects
to receive a corresponding reward in a gradual manner, later, as
long as her elementary contribution is part of the most recent
reward window.
Time discounting is a common approach to valuate reward
that is ought to be received in the future [16]. It reflects the
preference that rational agents have toward monetary compen-
sation received instantly compared to the equal compensation
to be obtained in the future [16].
In the discrete case, the share will be rewarded as long
as it remains inside current window of size N. We assume
N to be large enough and Pr
(
B
∣∣∣ ΔE
)
is small. Hence,
every subsequent share in the pool in expectation rewards the
elementary contribution of miner A with PA
P1
R
N Pr
(
B
∣∣∣ΔE
)
.
The rate at which shares arrive to the pool is constant and
depends on the power P1. For instance, i shares that arrive into
the pool since moment t0+Δt require ni =
iP
P1
elementary time
intervals Δt. The corresponding time-discounting coefficient
for the compensation induced by share i is denoted as ∀iλ(ni) ∈
(0, 1), ∀i ∈ N
(
λ(ni) > λ(ni+1)
)
. Therefore, the total valuation
for miner A’s future reward is
(
1 − PA
P1
Pr
(
B
∣∣∣ΔE
))
PA
P1
RPr
(
B
∣∣∣
ΔE
)
1
N
N∑
i=1
λ(ni). The parameter D = 1
N
N∑
i=1
λ(ni) is the complete
discounting coefficient.
In the continuous model, the portion of energy PA
P1
ΔE
is delivered by miner A during [t0, t0 + Δt]. It is there-
fore rewarded at every moment t > t0 + Δt, with
R PA
P1
ΔE
EN
Pr
(
B
∣∣∣ ΔE
)
= R PA
P1
P1Δt
EN
Pr
(
B
∣∣∣ ΔE
)
in expectation.
To the reward awarded in the future, miner A applies
continuous decreasing time-discounting function f (t − t0),
such that (∀t ≥ t0)
(
f (t − t0) ∈ (0, 1)
)
. The rewarding
process lasts EN
P1
and covers time interval
[
t0, t0 +
EN
P1
]
.
Hence, for miner A, the future component of the reward
is
(
1 − PA
P1
Pr
(
B
∣∣∣ΔE
))
PA
P1
RPr
(
B
∣∣∣ΔE
)
1
EN
t0+EN/P1∫
t0
P1 f (t − t0)dt. The
parameter D = 1
EN
t0+EN/P1∫
t0
P1 f (t − t0)dt can be used to designate
complete time-discounting coefficient for the effort of miner
A in continuous model.
Now, let us compare expressions for D for discrete and
continuous cases. We consider exponential discounting, com-
monly used in game theory and behavioral economics [17]. For
the discrete model we will use λ(ni) = δ
ni , δ ∈ (0, 1), while
for the continuous model we will use f (t − t0) = e−k(t−t0). For
the continuous case, we have
D = 1
EN
t0+EN/P1∫
t0
P1e−k(t−t0)dt =
1
N
N∑
i=1
e−ik ΔE
P1 ,
which we now will compare with the discrete case
D = 1
N
N∑
i=1
δni .
For the discrete case, it is assumed that ni = iC, where C ∈
R
+ is a constant expressing the intensity of time discounting
for future compensation in the pool. We use property e =
lim
ΔE→0
(
1 − ΔE
)− 1
ΔE
to demonstrate that discrete and continuous
discounting are equivalent if
δ = 1 − ΔE , C =
k
P1
.
3) Total utility of miner A in discrete and continuous
models: The total utility expresses the effect of incremental
mining activity of miner A at moment t0 on her monetary
valuations. It takes into account past and future performance
of the pool. The corresponding complete utility of miner A in
discrete and continuous models is
UA =
PA
P1
RPr
(
B
∣∣∣ΔE
) [
FA +
(
1 − PA
P1
Pr
(
B
∣∣∣ΔE
))
D
]
.
Because lim
ΔE→0
Pr
(
B
∣∣∣ΔE
)
= 0 we can further refer to a simpli-
fied expression of the utility:
3Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:37:35 UTC from IEEE Xplore.  Restrictions apply. 
UA =
PA
P1
RPr
(
B
∣∣∣ΔE
)[
FA +D
]
.
For the provided example of mining in a pool, discrete
and continuous models differ only in their expression for the
time-discounting coefficient D. For the sake of mathematical
tractability, we will work with the continuous model in the
remaining of the paper.
We will further ask what incentives are required for miners
to uninterruptedly remain in their original pool, even in the
presence of other PPLNS pools with different power and
reward windows. We will focus on an extended version of
this mining system, including two PPLNS pools.
B. Incentives with two PPLNS pools
Here we consider two PPLNS pools that have different
power and window sizes. Miners in each of the pools are free
to switch pools. We investigate the conditions required for
miners to avoid switching, remaining in their original pools.
For each miner who is a member of a particular pool we
compare the utility they would derive from mining in pool
#1 versus pool #2. Without loss of generality, we assume the
total power in the system is 1 and the power of pool #1 is
P1 ≤ 0.5. The reward windows are N1 and N2 shares long,
and parameters EN,1 and EN,2 represent the energy each pool
requires to mine N1 and N2 shares respectively. We use disjoint
sets M1 and M2 to denote pool membership. For example,
i ∈M1 indicates that miner i belongs to pool #1.
For each miner i, we compare the utility values Ui,1 and Ui,2,
gathered from mining in pool #1 and pool #2, respectively.
For that miner, corresponding fractional contributions that are
delivered in the past to each of the pools will be denoted Fi,1
and Fi,2, respectively. The discount coefficient for the future
reward in pool #1 is D1,i, discounting for future reward in
pool #2 is D2,i.
For any miner i from pool #1, whose individual power is
pi, her past contribution in the most recent PPLNS window
(capacity EN,1) of that pool is Fi,1 =
pi
P1
. In pool #2, her past
contribution is Fi,2 = 0. For any miner j from pool #2, her
past contribution in pool #1 is F j,1 = 0, and contribution to
pool #2 is F j,2 =
p j
1−P1
.
Let us discuss the values of coefficients D1,i and D2,i
for miner i ∈ M1. Since we analyze a special case when
miners are incentivized to mine uninterruptedly in their pools,
incentives of miner i are calculated under assumption that
all the other miners do not change their pool memberships.
If the miner stays in pool #1, the total power of the pool
is equal to P1 and her elementary contribution of mining
energy piΔt = piΔE at moment t0 will be compensated during
timeframe
[
t0, t0 +
EN,1
P1
]
. If the miner moves to pool #2, the
total power of that pool will be equal to 1 − P1 + pi and
the elementary contribution of mining energy piΔE of that
miner will be compensated during period
[
t0, t0 +
EN,2
1−P1+pi
]
.
Therefore, for each of the decisions of miner i we compute
discount coefficients as follows:
D1,i =
1
EN,1
t0+EN,1/P1∫
t0
P1 f (t − t0)dt ,
D2,i =
1
EN,2
t0+EN,2/(1−P1+pi)∫
t0
(1 − P1 + pi) f (t − t0)dt .
In a similar manner, for miner j ∈ M2 the discounting
coefficients related to the move to pool #1 and to steady mining
in pool #2 are
D1, j =
1
EN,1
t0+EN,1/(P1+p j)∫
t0
(
P1 + p j
)
f (t − t0)dt ,
D2, j =
1
EN,2
t0+EN,2/(1−P1)∫
t0
(1 − P1) f (t − t0)dt ,
respectively.
In order to decide whether to mine steadily in her pool or
to migrate to the other, every miner needs to compare these
utilities. For example, miner i ∈ M1 will continue to mine in
pool #1 if and only if Ui,1 −Ui,2 = piRPr
(
B
∣∣∣ΔE
)[
Fi,1 +D1,i −
Fi,2−D2,i
]
is non-negative. Likewise, miner j ∈M2 will remain
loyal to pool #2 if and only if U j,1−U j,2 = p jRPr
(
B
∣∣∣ΔE
)[
F j,1+
D1, j − F j,2 −D2, j
]
≤ 0. Since piRPr
(
B
∣∣∣ΔE
)
, p jRPr
(
B
∣∣∣ΔE
)
are
non-negative, we can simplify to obtain utilities Ui and U j:⎧⎪⎪⎨⎪⎪⎩
Ui = Fi,1 +D1,i − Fi,2 −D2,i ,
U j = F j,1 +D1, j − F j,2 −D2, j ,
(1)
such that sgn
(
Ui
)
= sgn
(
Ui,1 −Ui,2
)
and sgn
(
U j
)
= sgn
(
U j,1 −
U j,2
)
. For all players to stay put in their pools, we therefore
require:
∀i, j
(((
i ∈M1
) � (Ui ≥ 0
)) ∧ (( j ∈M2
) � (U j ≤ 0
)))
. (2)
We next discuss in detail what is required for this “stable
mining” condition to hold.
III. Requirements for stable mining
In order to determine equilibrium conditions, we assume,
without loss of generality that EN,1 � EN,2. Since the total
power of the system is 1 we use time t and energy E inter-
changeably. Following eqs. (1) and (2), equilibrium between
the pools requires that:
⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
Ui (E0) =
pi
P1
+
1
EN,1
E0+
EN,1
P1∫
E0
f (E − E0) P1dE
− 1
EN,2
E0+
EN,2
1−P1+pi∫
E0
f (E − E0) (1 − P1 + pi)dE ≥ 0 ,
U j (E0) = − p j
1 − P1
− 1
EN,2
E0+
EN,2
1−P1∫
E0
f (E − E0) (1 − P1)dE
+
1
EN,1
E0+
EN,1
P1+p j∫
E0
f (E − E0)
(
P1 + p j
)
dE ≤ 0 .
4Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:37:35 UTC from IEEE Xplore.  Restrictions apply. 
As is customary [16], we use an exponential function for
discounting:
f (E − E0) = e−θ
(E−E0)
EN,1 , (3)
where θ specifies intensity of time-discounting. For example,
if θ = 0.1, miners at moment t0 discount their compensation
expected at time t0 +
EN,1
P with coefficient e−0.1 ≈ 0.9. We will
further express the quantities of interest in terms of the ratio
l = EN,2
EN,1
. Thus, using EN,2 = lEN,1, we obtain:
⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
Ui (E0) =
pi
P1
+
P1
θ
(
1 − e−
θ
P1
)
−1 − P1 + pi
lθ
(
1 − e−
lθ
1−P1+pi
)
≥ 0 ,
U j (E0) = − p j
1 − P1
− 1 − P1
lθ
(
1 − e−
lθ
1−P1
)
+
P1 + p j
θ
(
1 − e
− θ
P1+p j
)
≤ 0 .
(4)
To solve this system we first focus on low intensity of time-
discounting (small θ), in which case we can find analytically
a range of ratios l that satisfy the condition for given M1, M2.
This will be discussed next. Later, Section III-B will deal with
the case of arbitrary θ.
A. The case of small θ
For the first inequality in eq. (4) we use e−
lθ
1−P1+pi ≥ 1− lθ
1−P1+pi
to find the sufficient condition:
e
θ
P1 ≥ P2
1
P2
1
− P1θ + piθ
where we require the denominator P2
1−P1θ+ piθ ≥ 0 implying
θ ≤ P2
1
P1−pi
. We use the fact that e
θ
P1 ≥ 1 + θ
P1
and test the
following sufficient condition:
1 +
θ
P1
≥ P2
1
P2
1
− P1θ + piθ
,
which demands θ ≤ piP1
P1−pi
. If the latter is satisfied, it implies
that the assumption about the denominator is valid because
∀i ∈M1 (P1 ≥ pi).
For the second inequality in eq. (4) we use that e
− θ
P1+p j ≥
1 − θ
P1+pi
and state that
e
lθ
1−P1 ≥ (1 − P1)2
(1 − P1)2 + p jlθ − lθ (1 − P1)
is sufficient if the denominator is positive, which requires
lθ ≤ (1−P1)2
1−P1−p j
. We use the fact e
lθ
1−P1 ≥ 1 + lθ
1−P1
and check
the following condition
1 +
lθ
1 − P1
≥ (1 − P1)2
(1 − P1)2 + p jlθ − lθ (1 − P1)
,
which requires lθ ≤ p j(1−P1)
1−P1−p j
. Satisfying the latter guarantees
that the requirement for a positive denominator is also satisfied
because ∀ j ∈M2
(
1 − P1 ≥ p j
)
. Hence, for the system eq. (4)
it is sufficient that ⎧⎪⎪⎨⎪⎪⎩
θ ≤ piP1
P1−pi
,
lθ ≤ p j(1−P1)
1−P1−p j
.
(5)
The practical importance of this result may be particularly
salient in small pools with relatively uniform distribution of
mining power. In that situation, the first condition of 5 may be
satisfied, leaving us with the less restrictive requirement of the
second condition. In contrast to θ which represents preferences
of the miners, parameter l here can be adjusted by the pool
managers.
However, in larger pools that may include miners with small
power, condition 5 is restrictive. Therefore, we next try to relax
that constraint and deal with arbitrary values of θ.
B. The composition of stable mining pools
In this section we try to find pool compositions that, together
with parameter l, are sufficient to guarantee pool stability for
arbitrary values of θ. For this, let us analyze properties of
miner utilities in each pool.
Remark 1: ∂Ui
∂l ≥ 0. To see this, note that ∂Ui
∂l =
1−P1+pi
l2θ
(
1 − e−
lθ
1−P1+pi
)
− 1
l e−
lθ
1−P1+pi . For this quantity to be pos-
itive we require e
lθ
1−P1+pi ≥ 1 + lθ
1−P1+pi
, which is always true.
This remark shows that Ui is non-decreasing in l. This implies
that ∀i ∈M1
(
l ≥ 1−P1+pi
P1
)
is sufficient to discourage miners in
pool #1 to migrate to pool #2 because at l ≥ 1−P1+pi
P1
utility
Ui ≥ pi
P1
. Another important consequence is that for every
unique tuple
{
P1, θ, pi
}
, Ui = 0 has at most one root in l.
In a similar manner, we will now show how l affects the
utilities of miners in pool #2.
Remark 2: ∂
U j
∂l ≥ 0. To see this, note that ∂
U j
∂l =
1−P1
l2θ
(
1 − e−
lθ
1−P1
)
− 1
l e−
lθ
1−P1 . For this quantity to be positive we
require e
lθ
1−P1 ≥ 1 + lθ
1−P1
, which is always true.
Hence, miners in pool #2 are discouraged to migrate to pool
#1 if ∀ j ∈M2
(
l ≤ 1−P1
P1+p j
)
.
Note that the utilities not only depend on l, but also on the
power of the miners. Thus, we need to further investigate how
this will affect stability.
Remark 3: ∀l, θ
(
∂ Ui
∂pi
≥ 0
)
. To see this, note that ∂ Ui
∂pi
=
1
P1
− 1
lθ
(
1 − e−
lθ
1−P1+pi
)
+ 1
1−P1+pi
e−
lθ
1−P1+pi . For this quantity to be
positive we require e−
lθ
1−P1+pi ≥ (P1−lθ)(1−P1+pi)
P1(1−P1+pi+lθ) . This inequality
is satisfied if P1 − lθ ≤ 0. In case P1 − lθ > 0, we use
that e−
lθ
1−P1+pi ≥ 1 − lθ
1−P1+pi
, it is sufficient that 1 − lθ
1−P1+pi
≥
(P1−lθ)(1−P1+pi)
P1(1−P1+pi+lθ) . We arrive to
P1(1−P1+pi)
2−lθ(1−P1+pi)
2
P1(1−P1+pi)
2−P1l2θ2
≤ 1 which
requires (1 − P1 + pi)
2 ≥ P1lθ. This is satisfied because
P1 ≤ 0.5 and P1 − lθ > 0.
For the second pool, we cannot say much about ∂
U j
∂p j
, since
it requires further conditions on θ, and l. Instead, we consider
the case when the first inequality in eq. (4) is satisfied and
analyze the effect on the second inequality in eq. (4).
We discuss the dependency between l and pi for a special
case Ui = 0. A function L1
0
(pi) will be used to define the
corresponding ratio l. Using remark 1 and remark 3 we infer
that L1
0
(pi) should be non-increasing in pi. The following
result suggests that the second inequality in eq. (4) is satisfied
for all pairs
{
p j, L1
0(p j)
}
.
5Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:37:35 UTC from IEEE Xplore.  Restrictions apply. 
Remark 4: ∀l, θ, pi, p j
((
pi = p j
) � (Ui ≥ U j
))
. We consider
the case pi = p j, thus, for simplicity, individual indices will
be omitted. Our statement requires the following:
p
P1
+ P1
θ
(
1 − e−
θ
P1
)
− 1−P1+p
lθ
(
1 − e−
lθ
1−P1+p
)
≥
≥ − p
1 − P1
− 1 − P1
lθ
(
1 − e−
lθ
1−P1
)
+
P1 + p
θ
(
1 − e−
θ
P1+p
)
.
We use two facts: i) − 1−P1+p
lθ
(
1 − e−
lθ
1−P1+p
)
≥
− 1−P1+p
lθ
(
1 − e−
lθ
1−P1
)
and ii) P1+p
θ
(
1 − e−
θ
P1+p
)
≤
P1+p
θ
(
1 − e−
θ
P1
)
, in order to check if the following (sufficient)
condition holds.
p
P1
+ P1
θ
(
1 − e−
θ
P1
)
− 1−P1+p
lθ
(
1 − e−
lθ
1−P1
)
≥
≥ − p
1 − P1
− 1 − P1
lθ
(
1 − e−
lθ
1−P1
)
+
P1 + p
θ
(
1 − e−
θ
P1
)
.
The latter can be presented as
p
(
1
P1
+
1
1 − P1
)
≥ p
(
1
θ
(
1 − e−
θ
P1
)
+
1
lθ
(
1 − e−
lθ
1−P1
))
,
which is satisfied because θ
P1
≥ 1− e−
θ
P1 and lθ
1−P1
≥ 1− e−
lθ
1−P1 .
For k ∈ M, M = M1 ∪M2 we propose to define M1, M2
and l according to the following rule:⎧⎪⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎪⎩
∃�∗∀k
((
pk ≥ p�∗ � k ∈M1
) ∧ (pk < p�∗ � k ∈M2
))
;∑
M1
pk = P1 ;
l = L1
0
(p�∗ ) .
(6)
Our task is to show that for any given allocation, l = L1
0(p�∗ )
satisfies the inequalities in eq. (4).
We consider pool #1 and the first inequality in eq. (4).
According to remarks 1 and 3 ∀i
(
i ≥ �∗ � L1
0(p�∗ ) ≥ L1
0(pi)
)
.
Because Ui is non-decreasing on l, we conclude that Ui ≥ 0
for l = L1
0(p�∗ ).
Let us now consider pool #2 and the second inequality
in eq. (4). We conclude that U j ≤ 0 because: a) from
remark 4, the second inequality in eq. (4) is satisfied for
all pairs
{
p j, L1
0(p j)
}
; b) according to remarks 1 and 3
∀ j
(
j < �∗ � L1
0(p�∗ ) ≤ L1
0(p j)
)
, and, according to remark 2 the
value of U j can not be higher for lower l.
We ask whether stable mining is possible: a) for values of
l that differ from the requirement in eq. (6); b) for different
allocations of miners in each pool. To answer this questions
we use simulations, as discussed next.
C. Experimental evaluation
1) Description of the experiments: For different θ, P1, we
empirically reconstruct the functions L1
0(p) and L2
0(p). This
will be used to analyze the allocation of miners into M1, M2,
and the corresponding stability interval [lmin, lmax] for l.
For stability we require:
∀i, j
((
i ∈M1
)
∧
(
j ∈M2
)
�
�
(
lmin ≤ lmax
)
∧
(
L1
0(pi) ≤ lmin
)
∧
(
L2
0(p j) ≥ lmax
))
.
Figure 3. Defining [lmin, lmax] using L1
0
(p) and L2
0
(p) for P1 = 0.08, θ =
0.15. Distribution of individual mining power in the system is exponential,
λ = 10−5, size of the set is 105.
To illustrate our methodology, let us discuss a particular
example, depicted in fig. 3. Consider values θ = 0.15 and
P1 = 0.08. Replacing these values in the expression for each
of the utilities, Ui and U j, (see eq. (4)), for each p, we solve
l for Ui = 0, U j = 0, respectively (for every {P1, θ, p} tuple,
there is at most one root on l ∈ R+, see remarks 1 and 2). We
denote these roots L1
0(p) and L2
0(p). The power composition
for both pools is drawn from the distribution shown in fig. 4a.
In the interval of interest p ∈
[
10−9, 10−4
]
, we can allocate
miners to the pools and come up with a range of ratios l that
guarantees that the system is in equilibrium.
We first note that: i) for every miner with power p in
the pool #1, the ratio l that is higher than L1
0(p) guarantees
incentives to stay in the pool; ii) for every miner with power
p in pool #2, the ratio l that is lower than L2
0(p) also
guarantees incentives to stay. Next, we will investigate the
range [lmin, lmax] for the allocation proposed in eq. (6). We find
such threshold value p�∗ to allocate miners to the pools: all the
miners with power p ≥ p�∗ form pool #1, all the miners with
power p < p�∗ form pool #2. Finally, we define lmin = L1
0
(
p�∗
)
and lmax = L2
0
(
p�∗
)
as the endpoints for the interval of stability
for l (see fig. 3). We will consider the size of this interval as a
proxy for stability. Larger intervals imply, that under a certain
distribution of power, we have a more stable system.
(a) Set of 105 samples, exponential
pdf λe−λp, λ = 10−5.
(b) Set of 105 samples, normal pdf
m ≈ 10−5, σ ≈ 2.3 × 10−6.
Figure 4. Histograms of distribution of mining power p in the experimental
sets.
In addition we also ask whether other allocations that
provide larger lmax − lmin are possible. In the experiment, both
6Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:37:35 UTC from IEEE Xplore.  Restrictions apply. 
L1
0(p) and L2
0(p) are monotonically decreasing, which implies
that lmin = L1
0
(
min
i∈M1
pi
)
and lmax = L2
0
(
max
j∈M2
p j
)
for any chosen
allocation M1, M2. These sets are exclusive, power of M1
members should sum up to P1, and, hence, any allocation that
is different to eq. (6) will either increase lmin or reduce lmax.
Our further task is to analyze [lmin, lmax] for different θ
values. To represent different possible compositions of mining
pools [10], [11], we use four sets of different size and power
distribution in the experiments. We consider two main sizes,
namely, set size 104 as equivalent to a pair of large pools;
and set size 105, which may resemble, for instance, the
whole BitCoin network divided in two pools. All the sets are
normalized so that the total sum of values equals 1 (see figs. 4a
and 4b).
2) Experimental results: The specific experimental condi-
tions are as follows:
• Set size 104 samples, exponential pdf λ1e−λ1 x1 , λ1 = 10−4;
• Set size 104 samples, normal pdf, mean m1 ≈ 10−4,
standard deviation σ1 ≈ 2.44 × 10−5;
• Set size 105, exponential pdf λ2e−λ2 x2 , λ2 = 10−5;
• Set size 105, normal pdf, mean m2 ≈ 10−5, standard
deviation σ2 ≈ 2.3 × 10−6.
We choose in all cases an exponential distribution, ex-
plained by the fact that in practice, mining power is un-
evenly distributed among miners in the pool. Typically pool
compositions are characterized by a majority of small-power
miners together with a few very powerful participants (see for
example the distribution in the Kano pool, [10]). Using this
experimental setup, we ask, given a specific distribution of
power, and using the allocation described in eq. (6), what is
the resulting range of l that guarantees stability. The results of
the experiment are depicted on figs. 5 and 6.
It can be seen that lmax − lmin is smaller for the larger set
containing 105 samples. This can be explained by the role of
past contributions of the miners in their original pools. For
larger pools, the power of a miner is small in relation to the
pool power. Hence, such miner may have a higher incentive to
leave her pool for a faster compensation in the other pool. This
requires a tighter interval [lmin, lmax] to support equilibrium,
which makes stability in a system of PPLNS pools hardly
achievable in practice. For all types of distribution and set sizes
the size of lmax−lmin decreases with θ. This is explained by the
fact that prospects of faster compensation (in the other pool)
become more important when compared to past contributions
that remain unchanged.
The plots in figs. 5 and 6, show that all the points are located
under the line l = 1−P1
P1
. This means that the windows sizes
represented by l result in a situation without an equilibrium.
However, it should be noted that many of the mining pools
(especially those mining ETH, XMR, ZEC) define PPLNS
pay-off window in units of time [22]. In these reward systems,
it is common for many pools to have the same window sizes,
which we will denote as TN . For the case of two pools with
power P1 and 1 − P1 the energy capacity of the pay-off
window is TN P1 and TN (1 − P1), respectively. This results
in l = EN,2
EN,1
= 1−P1
P1
. According to our results, this value of l
Figure 5. Endpoints {lmin, lmax} under different θ and P1 = 0.1.
Calculated for exponential and normal distribution of samples, size of
the set is 104.
Figure 6. Endpoints {lmin, lmax} under different θ and P1 = 0.1.
Calculated for exponential and normal distribution of samples, size of
the set is 105.
is the upper bound for lmax on the range of practical θ, and,
therefore can not provide an equilibrium.
Let us further consider examples where conditions for stable
mining are not achievable. For the sake of comparing pools, we
can express the amount of computed hashes as the equivalent
of energy E that is spent on mining. As an example, we look at
two Monero (XMR) PPLNS mining pools whose mining fees
are equal and set to 1%. The mining power of the Monero
Ocean pool [23] is equal to 7.8MH/sec, while the Nano pool
has power 110MH/sec [22]. The pools interpret PPLNS reward
windows differently. For Monero Ocean, the parameter N is
measured in multiples of average XMR complexity, D, e.g.
N = 2D. Given that (at the moment of paper preparation)
average block complexity in XMR network is D ≈ 4.8 × 1010
hashes, we infer that EN,1 = 9.6 × 1010. On the other hand,
the Nano pool measures payout window in time units and
sets it to 6 hours. Using its power estimate we infer that
EN,2 = 2.37 × 1012. According to our results, the equilibrium
value of l = EN,2
EN,1
should be slightly below 110×106
7.8×106 ≈ 14.1,
but, in practice this ratio is 24.69. This higher ratio l may
7Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:37:35 UTC from IEEE Xplore.  Restrictions apply. 
REFERENCES
incentivize miners to leave the larger pool (Nano) and to
join the smaller pool (Monero Ocean). This pattern of mi-
gration from large to small pools can potentially harm de-
centralization in the XMR network. Let us now consider a
Figure 7. Interval of stability [lmin, lmax] for the pair of PPLNS pools Monero
Hash Vault and Monero Ocean based on the synthetic exponential distribution
of individual power of miners, λ = 10−2, size of the set is 102.
different pair of pools. For both XMR mining pools Monero
Hash Vault [24] and Monero Ocean parameter, the PPLNS
reward window is equal to N = 2D meaning EN,1 = EN,2.
The mining power of Monero Hash Vault is only 5.24MH/sec
implying that the equilibrium value for l should not be higher
lmax < (1 − P1)/P1 ≈ 1.49. In practice this ratio l is set to
1. In order to decide if mining (in the system of these two
pools) is stable we conducted an experiment. Since the mining
power of both pools is relatively small, we use the set of 100
samples with exponential distribution of individual power in
a simulation (see fig. 7). As it can be observed, the upper
bound lmax is barely distinguishable from the constant 1.49
for the whole range of θ. In contrast, lmin increases rapidly in
θ. The value of l stays in the range [lmin, lmax] for θ ≤ 0.17.
However, for more intense time discounting θ stable mining
is not possible. Note than a larger number of miners – in the
example 100 – will further constrain the conditions for stable
mining. This situation may incentivize miners from the smaller
pool to leave it for the prospect of higher utility in the larger
pool.
This flow from small to larger pools can threathen certain
pools, while also going against the spirit of the blockchain and
its decentralization. It is common practice for pool adminis-
trators to set N = k × D where k is a small integer number,
explaining why many pools have the same size (for instance,
k = 2 or k = 5 is a popular choice) of reward window while
their mining power may differ substantially. This common
practice may exacerbate this problem.
IV. Discussion
We propose a game-theoretical model to study incentives
for stable mining in the system of 2 PPLNS pools. We define
the utility of individual miners as a function of energy E that
they spend on mining in a particular pool. The model allows
us to analyze the effect of time discounting on the rewards
that will be received by the miners in the future. In order
to express time preferences, we used standard exponential
discounting (eq. (3)). We defined the conditions necessary for
stable mining in a system with two pools, as a situation where
no miner has incentives to leave her pool for the prospect of
higher utility in a different pool (eq. (4)).
Stable mining requires that valuations of the past contri-
butions plus future rewards in the original pool outweigh the
expectation for future rewards in a different pool. In PPLNS
pools with constant mining power this can be achieved by
adjusting the sizes EN,1, EN,2 of the corresponding reward
windows.
The condition we derive for stable mining may be applied
in a system with more than 2 pools. In this case, it is sufficient
that the condition for stable mining is satisfied for every pair
of the pools.
Other parameters can also influence the incentives for
miners to avoid switching pools, as outlined by the sufficient
conditions for stable mining (see eqs. (5) and (6)). We also
extend our results using simulations, which allows us to define
a range [lmin, lmax] of stable values for the ratio l = EN,2
EN,1
, when
we vary discounting θ and different distributions of individual
mining power inside pools.
The range of acceptable values [lmin, lmax] indicates how
constrained is the equilibrium between the pools by the
settings including size of the pools and discounting factor θ.
From figs. 5 and 6 we can conclude that even for moderate
time discounting θ the range of stability is rather small for the
pools with substantially large number of miners.
Multiple outcomes are possible when the condition for
stable mining in the system of two PPLNS pools is not
satisfied. First, miners may have incentives to mine for each
of the pools at different moments in time. It is difficult to
assess what this implies for decentralization in PoW cryptocur-
rencies. Second, re-distribution may lead to other equilibria
with favorable or unfavorable outcomes for decentralization.
In this context, managers, who define values for EN,1 and EN,2
play an important role in the process of decentralization of
PoW cryptocurrencies. Unfortunately, many PPLNS pools of
different size have the same N which creates incentives for the
miners from smaller pools to migrate toward the larger pools.
This should be a subject of further research.
The proposed model for mining in PPLNS pools and the
recommendations for the equilibrium ratio l can guide the
choices of pool managers. In order to avoid negative effects
associated with depleting pools, their reward windows need to
be set accordingly.
One salient feature that we have not studied in this paper, is
the strategic interactions between pool managers and their own
incentives in setting window sizes. In the future, we also plan
to extend this model to systems of many pools and different
mining fees in the presence of network delays.
Our model is instrumental in highlighting the importance
of accounting for realistic features of strategic behavior, e.g.,
time discounting, when analysing protocols for consensus.
8Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:37:35 UTC from IEEE Xplore.  Restrictions apply. 
References
[1] Nakamoto, Satoshi, “Bitcoin: A peer-to-peer electronic
cash system”, 2008, Online; accessed 29 January 2016.
[2] S. Dziembowski, “Introduction to cryptocurrencies”, in
Proceedings of the 22Nd ACM SIGSAC Conference on
Computer and Communications Security, ser. CCS ’15,
Denver, Colorado, USA: ACM, 2015, pp. 1700–1701.
[3] O. Schrijvers, J. Bonneau, D. Boneh, and T. Rough-
garden, “Incentive compatibility of bitcoin mining pool
reward functions”, in Financial Cryptography and Data
Security: 20th International Conference, FC 2016,
Christ Church, Barbados, February 22–26, 2016, Re-
vised Selected Papers, J. Grossklags and B. Preneel,
Eds. Berlin, Heidelberg: Springer Berlin Heidelberg,
2017, pp. 477–498.
[4] Y. Lewenberg, Y. Bachrach, Y. Sompolinsky, A. Zo-
har, and J. S. Rosenschein, “Bitcoin mining pools: A
cooperative game theoretic analysis”, in Proceedings
of the 2015 International Conference on Autonomous
Agents and Multiagent Systems, ser. AAMAS ’15, Istan-
bul, Turkey: International Foundation for Autonomous
Agents and Multiagent Systems, 2015, pp. 919–927.
[5] A. Zamyatin, K. Wolter, S. Werner, P. G. Harrison,
C. E. A. Mulligan, and W. J. Knottenbelt, “Swim-
ming with fishes and sharks: Beneath the surface of
queue-based ethereum mining pools”, in 2017 IEEE
25th International Symposium on Modeling, Analysis,
and Simulation of Computer and Telecommunication
Systems (MASCOTS), 2017, pp. 99–109.
[6] M. Rosenfeld, “Analysis of bitcoin pooled mining re-
ward systems”, arXiv preprint arXiv:1112.4980, 2011.
[7] J. J. G. Chávez and C. K. da Silva Rodrigues, “Auto-
matic hopping among pools and distributed applications
in the bitcoin network”, in 2016 XXI Symposium on Sig-
nal Processing, Images and Artificial Vision (STSIVA),
2016, pp. 1–7.
[8] B. Fisch, R. Pass, and A. Shelat, “Socially optimal
mining pools”, in Web and Internet Economics, N.
R. Devanur and P. Lu, Eds., Cham: Springer Interna-
tional Publishing, 2017, pp. 205–218.
[9] R. Qin, Y. Yuan, S. Wang, and F. Wang, “Economic
issues in bitcoin mining and blockchain research”, in
2018 IEEE Intelligent Vehicles Symposium (IV), 2018,
pp. 268–273.
[10] Kano pool, Pool payout, https://kano.is/index.php?k=
payout, Online; accessed August 13, 2018, 2018.
[11] BCmonster, Mining Statistics, http: / /www.bcmonster.
com/index.php?page=statistics&action=pool, Online;
accessed September 22, 2018, 2018.
[12] K. Chatterjee, A. K. Goharshady, R. Ibsen-Jensen, and
Y. Velner, “Ergodic Mean-Payoff Games for the Anal-
ysis of Attacks in Crypto-Currencies”, in 29th Interna-
tional Conference on Concurrency Theory (CONCUR
2018), vol. 118, Dagstuhl, Germany: Schloss Dagstuhl–
Leibniz-Zentrum fuer Informatik, 2018, 11:1–11:17.
[13] Y. Zolotavkin, J. Garcı́a, and C. Rudolph, “Incentive
compatibility of pay per last n shares in bitcoin mining
pools”, in Decision and Game Theory for Security,
Cham: Springer International Publishing, 2017, pp. 21–
39.
[14] H. Liu, N. Ruan, R. Du, and W. Jia, “On the strategy
and behavior of bitcoin mining with n-attackers”, in
Proceedings of the 2018 on Asia Conference on Com-
puter and Communications Security, ser. ASIACCS ’18,
Incheon, Republic of Korea: ACM, 2018, pp. 357–368.
[15] Y. Kwon, D. Kim, Y. Son, E. Vasserman, and Y. Kim,
“Be selfish and avoid dilemmas: Fork after withholding
(faw) attacks on bitcoin”, in Proceedings of the 2017
ACM SIGSAC Conference on Computer and Communi-
cations Security, ACM, 2017, pp. 195–209.
[16] S. Frederick, G. Loewenstein, and T. O’Donoghue,
“Time discounting and time preference: A critical re-
view”, Journal of Economic Literature, vol. 40, no. 2,
pp. 351–401, 2002.
[17] E. Angner, A Course in Behavioral Economics. Palgrave
Macmillan, 2012.
[18] BlockFi, Earn a 6.2% Annual Yield on Your Crypto,
https : / /blockfi.com /crypto- interest - account/, Online;
accessed March 13, 2019, 2019.
[19] D. Smith, Reliability, Maintainability and Risk: Practi-
cal Methods for Engineers including Reliability Centred
Maintenance and Safety-Related Systems. Elsevier Sci-
ence, 2011.
[20] F. Arnold, H. Hermanns, R. Pulungan, and M. Stoelinga,
“Time-dependent analysis of attacks”, in Principles of
Security and Trust, M. Abadi and S. Kremer, Eds.,
Berlin, Heidelberg: Springer Berlin Heidelberg, 2014,
pp. 285–305.
[21] I. Eyal, “The miner’s dilemma”, in 2015 IEEE Sympo-
sium on Security and Privacy, 2015, pp. 89–103.
[22] Nano pool, Pool hashrate, https: / /xmr.nanopool.org/,
Online; accessed November 13, 2018, 2018.
[23] Moneroocean, Dashboard, https://moneroocean.stream/
#/dashboard, Online; accessed October 5, 2018, 2018.
[24] Monero Hash Vault, Dashboard, https : / / monero .
hashvault.pro/en/dashboard, Online; accessed October
12, 2018, 2018.
9Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:37:35 UTC from IEEE Xplore.  Restrictions apply.