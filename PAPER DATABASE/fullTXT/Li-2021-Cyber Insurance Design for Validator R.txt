Cyber Insurance Design for Validator Rotation in Sharded Blockchain Networks: A Hierarchical Game-Based Approach
3092 IEEE TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, VOL. 18, NO. 3, SEPTEMBER 2021
Cyber Insurance Design for Validator Rotation in
Sharded Blockchain Networks: A Hierarchical
Game-Based Approach
Jing Li , Dusit Niyato , Fellow, IEEE, Choong Seon Hong , Senior Member, IEEE,
Kyung-Joon Park , Senior Member, IEEE, Li Wang , Senior Member, IEEE, and Zhu Han , Fellow, IEEE
Abstract—Sharding is a promising solution to achieving scal-
ability within the blockchain network. A sharded blockchain
network consists of a beacon chain and several committees
powered by the participants (i.e., validators) through the Proof-
of-Stake (PoS) consensus protocol. Efficient and scalable as it
can be, the sharded blockchain based on PoS is vulnerable to
discouragement attack. A discouragement attack occurs when
malicious validators censor messages to discourage validators
from participating in the network. Furthermore, no rate-limiting
validator rotation (enter/exit quickly) makes it more challenging
to detect such an attack. In this paper, considering the unde-
termined rotation and the discouragement attack, we render the
beacon chain an intermediary, allowing the beacon chain to inter-
act with validators and the cyber-insurer, aiming to encourage
the validators’ stable rotation through insurance compensation.
Specifically, we utilize a two-stage hierarchical game-based model
to formulate the complicated interactions under the cyber insur-
ance framework. In the first stage, the beacon chain develops
compensatory strategies according to the insurer’s profile. In the
second stage, the beacon chain designs a series of contracts for
validators, including insurance items, compensatory strategies,
and rotation requirements. Consequently, the proposed scheme
incentivizes validators to remain online by transferring risk to
the cyber insurer and enables the sharded blockchain network to
weaken the attack’s impact through validators’ stable rotation.
This paper presents closed-form solutions for the proposed model,
Manuscript received October 9, 2020; revised March 10, 2021; accepted
May 3, 2021. Date of publication May 6, 2021; date of current version
September 9, 2021. This work is partially supported by NSF EARS-1839818,
CNS1717454, CNS-1731424, and CNS-1702850. This work is also partially
supported in part by the National Natural Science Foundation of China
under Grant No. U2066201 and Grant 61871416, and in part by the Beijing
Municipal Natural Science Foundation under Grant L192030. The associate
editor coordinating the review of this article and approving it for publication
was A. Veneris. (Corresponding author: Jing Li.)
Jing Li is with the Department of Electrical and Computer Engineering,
University of Houston, Houston, TX 77004 USA (e-mail: jli84@uh.edu).
Dusit Niyato is with the School of Computer Science and
Engineering, Nanyang Technological University, Singapore 639798 (e-mail:
dniyato@ntu.edu.sg).
Choong Seon Hong is with the Department of Computer Science and
Engineering, Kyung Hee University, Yongin-si 446-701, South Korea (e-mail:
cshong@khu.ac.kr).
Kyung-Joon Park is with the Department of Information and
Communication Engineering, Daegu Gyeongbuk Institute of Science
and Technology, Daegu 42988, South Korea (e-mail: kjp@dgist.ac.kr).
Li Wang is with the School of Computer Science, Beijing University
of Posts and Telecommunications, Beijing 100088, China (e-mail:
liwang@bupt.edu.cn).
Zhu Han is with the Department of Electrical and Computer Engineering,
University of Houston, Houston, TX 77004 USA, and also with the
Department of Computer Science and Engineering, Kyung Hee University,
Seoul 446-701, South Korea (e-mail: zhan2@uh.edu).
Digital Object Identifier 10.1109/TNSM.2021.3078142
in which the beacon chain and the cyber insurer can gain max-
imized profits. The simulations demonstrate the feasibility and
superiority of the proposed model.
Index Terms—Blockchain, sharding, cyber insurance, discour-
agement attack, Stackelberg game, contract theory.
I. INTRODUCTION
BLOCKCHAIN is an ingenious invention of Nakamoto
and is described in the remarkable project [1]. It is
a permissionless platform with the characteristics of decen-
tralization, tamper-resistance and transparency [2]. With the
advent of Bitcoin (BTC) [3], blockchain technology has
acquired significant attention. Ethereum is another world’s
leading programmable project [4] based on the blockchain
technology framework [5]. Unlike Bitcoin, mostly focusing
on financial issues, Ethereum aims to be a “World Computer,”
which allows everyone to be a developer to write its own
code and create new kinds of applications [5]. A blockchain
is constructed by a series of undeniable blocks, where each
block is generated and confirmed by the different parties.
These blocks are connected before and after within one chain.
The core technology of coordinating all the participants across
the distributed network is called consensus protocol. The first
practicable consensus protocol in the blockchain framework
is known as the Proof of Work (PoW) [1], in which miners
can only win the opportunity of mining block by compet-
ing in hash rate against others. In the early development
stage of the blockchain, PoW indeed provides the benefits,
such as Denial-of-Service (DoS) attack defense and Sybil
attack defense. The success of Bitcoin [4] has proved this
point.
Considering the aggravation of hash rate competition causes
a massive waste of resources, numerous researchers seek
new alternatives that serve the same function. Proof of Stake
(PoS) is first proposed in the Bitcoin Forum [6], i.e., the
leader selection relies on the number of stakes rather than
the computational resources. That means the leader selection
of PoS follows a relative deterministic way compared with
that of PoW, such as by turns. Moreover, there is no need to
issue more rewards to compensate for energy consumption.
As described above, the significant advantages of PoS can
1932-4537 c© 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-0075-9573
https://orcid.org/0000-0002-7442-7416
https://orcid.org/0000-0003-3484-7333
https://orcid.org/0000-0003-4807-6461
https://orcid.org/0000-0002-0973-1614
https://orcid.org/0000-0002-6606-5822
LI et al.: CYBER INSURANCE DESIGN FOR VALIDATOR ROTATION IN SHARDED BLOCKCHAIN NETWORKS 3093
be summarized in three aspects: comparable decentralization,
economic saving, and security [7].
With the extensive research on consensus protocols, more
potential attacks are being studied. Cyber-attacks can take
more implicit forms. Vitalik explores a new type of attack that
may disrupt the whole blockchain network, which is called
Discouragement Attack [8]. A discouragement attack means
the attackers would act maliciously inside a consensus mech-
anism to gradually reduce other validators’ revenue, even at
a certain cost to themselves. The final purpose is to encour-
age the validators to drop out of the mechanism. It is worth
noting that a discouragement attack is the cheapest way to cor-
rupt the incentive scheme of a PoS based blockchain. In the
best case, attackers can do this without losing a cent only by
censoring the honest nodes and driving their reward to zero.
Consequently, they will encourage rational validators to drop
out of the system [9].
Recently, Vitalik published a new idea about the valida-
tor sharding set update [10], which prevented the validators
from withdrawing. In the previous design, every validator
is able to exit/enter the sharding committees at the end of
each round [11]. That means the malicious validators can per-
form a large-scale attack without being detected because the
system cannot perform the detection in a short time. A better
way is to set a withdrawal delay, which means the valida-
tors must wait in a queue for withdrawing before being free
to exit the committee. In a nutshell, this idea is to make time
for the system to detect the attack and malicious nodes, allow-
ing the system to prevent the discouragement attack. However,
there are still some open questions, i.e., determining the with-
drawal delay for all the validators and selecting the validators
in a queue. Considering the risk introduced by the discourage-
ment attack, the blockchain network requires an appropriate
incentive scheme to encourage the validators to stay online
and neutralize the whole network’s risk.
A. Related Work
As the core of blockchain technology, the consensus proto-
col has been the research priority for blockchain experts. With
the advantage of energy-efficient, PoS is increasingly the focus
of research attention. Here are some PoS schemes but are not
completely different from the framework of PoW, e.g., Proof
of Activity [12], Proof of Burn [13] and Proof of Luck [14].
The joint efforts from both industry and academia areas
make great strides in moving blockchain technology forward,
which brings opportunities and benefits for a wide range of
areas, including finance, business, industry. IBM developed a
blockchain platform based on Hyperledger Fabric [15], provid-
ing solutions and services for multiple institutions [16], includ-
ing financial services, supply chain, manufacturing, media, and
entertainment, retail. The applications of blockchain technol-
ogy to some hot industrial areas, e.g., the Internet of Things,
also attracted extensive attention, e.g., Atonomi [17], Chain of
Things [18] and IoTeX [19].
With the decentralized, tamper-resistance nature, the
blockchain-mediated application presents a vast potential.
Choo et al. [20] discuss the ongoing challenges when
applying blockchain in industry, governments, and academia.
Guan et al. [21] adopt the blockchain technology to securely
aggregate and store the near-real-time data and preserve the
users’ privacy. Pal et al. [22] design a decentralized and
asynchronous delegation model by using the blockchain tech-
nology and demonstrate the feasibility by using Ethereum
private blockchain platform. Liang et al. [23] utilize the
blockchain technology to establish a decentralized storage
system, which realizes the dynamic storage and update and
fast repair. Yang et al. [24] introduce the blockchain tech-
nology to help protect the topology privacy in Mobile Edge
Computing (MEC). Keshk et al. [25] apply the blockchain to
build up a privacy-preserving framework in the smart power
networks.
Although blockchain technology presents various advan-
tages, there still exist scalability and efficiency issues inside.
Ethereum 2.0 [26] combines sharding technology and PoS,
focusing on further improving network efficiency in a scalable
way. A creative structure proposed by Ethereum Foundation
is the beacon chain, introducing PoS into Ethereum, where
there was only PoW before. All the data structures inside
the beacon chain are akin to the public chain powered by
Proof of Work. However, the different aspect is that the beacon
chain is operated by a committee composed of many validators
using Proof-of-Stake consensus. Such a committee is pseudo-
randomly assigned to verify a shard of the current block. As
the intermediary between the public chain and the numer-
ous committees, the beacon chain is responsible for managing
administrative transactions throughout the whole blockchain
network with shardings, which include a registry of validator
addresses, the state of each validator, attestations, and links
to shards. The beacon chain can coordinate with the whole
network and ensure a smooth transition between a pure PoW
blockchain system to a pure PoS one.
However, the blockchain network deployed with PoS is vul-
nerable to discouragement attack, a critical threat to most
of the PoS-based blockchains but is less studied. Saito [9]
proposed a solution that can ensure the cost of producing a
block fluctuates depending on the degree of support a node
receives from the rest of the network. They adopted a new
workload measurement that is a derivative of the volume of
transaction fees gathered from other nodes. Apart from devel-
oping a new consensus protocol, applying cryptography is
an alternative. But it is virtually impossible to discriminate
between attackers and honest validators inside a PoS mecha-
nism, especially the attacker sacrificing short-term profit just
looks like a victim. Moreover, relying on consensus devel-
opment and cryptography application to deal with a specific
cyber risk is exceptionally costly to an existing blockchain
network.
One of the most effective ways to transfer cyber risk is
cyber insurance. The market for cyber insurance has vitality
spurred in recent years, which is expected to reach $5 billion
by 2018 and exceed $7.5 billion by 2020 [27]. The market
with colossal potential motivates more and more researchers
to investigate it in various network scenarios. Khalili et al. [28]
have explored the interdependent nature of cybersecurity and
the latest Internet measurement for evaluating the security pos-
ture. They focus on the theoretical details more, the other
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
3094 IEEE TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, VOL. 18, NO. 3, SEPTEMBER 2021
promising works regarding cyber insurance, see, e.g., [29],
[30], and [31]. Their “interdependent nature” idea does an
excellent job explaining the relation between the entities and
the networks, which can also apply to the participants and
the blockchain networks. Feng et al. [32], adopt the cyber
insurance tool to neutralize the cyber risk caused by double-
spending in the blockchain network and model the problem
as a two-stage Stackelberg game. Lu et al. [33] introduce
cyber insurance to heterogeneous wireless networks (HWNs)
and reviews the cyber risks of the enabling technologies for
HWNs. As we discussed above, none of the works consider
the discouragement attack.
B. Motivation and Contribution
Inspired by the above work, we explore the discouragement
attack within the PoS mechanism in the blockchain networks
with shards. We adopt cyber insurance as a risk-management
to mitigate the risk and motivate the validators’ online time
(i.e., withdraw delay [10]). Owing to the anonymity nature
and the weak leadership of the beacon chain, the problems
of hidden information and hidden action coexist. Hidden
information and hidden action are two terms specific to eco-
nomics. In this paper, the validators’ type information is the
hidden information and their efforts after singing the con-
tracts are the hidden action. Besides, considering the cyber
insurer, the interactions of the three parties, i.e., cyber insurer,
blockchain infrastructure provider, and validators, are com-
plex and difficult to analyze. There is not an existing model
that can be applied directly to formulate the problem. One
practical model to set up a cyber insurance framework is
the contract theory [34], which has been extensively studied,
e.g., [35], [36], [37], and [38]. Specifically, we designed a
cyber-insurance framework, modeling the interactions between
the beacon chain and its underlying validators in [38] but
without the role and effect of cyber-insurer. We did not take
the interactions between cyber-insurer and blockchain into
account and just assumed that cyber-insurer could gain noth-
ing from the insurance, which is less applicable in reality.
Therefore, we establish a two-stage hierarchical game model
by combining the Stackelberg game and contract theory, for-
mulating the complicated interactions among cyber-insurer,
blockchain, and validators, and allowing the cyber-insurer and
blockchain to obtain the maximized profits. First of all, we
analyze the discouragement attack model and the expected
loss for all kinds of validators (i.e., malicious, censored, and
uncensored). Then, the cyber-insurer will take the lead in
the upper sub-game of Stage I (more details regarding this
model are given in Section III), determining the premium
and claim factor. Consider that the blockchain infrastructure
provider follows the leader’s rules and determines a discount
factor for premium.In Stage II, the blockchain infrastructure
provider designs a series of contracts for participants, deter-
mining the contract components based on the attack model
and cyber-insurer’s premium and claim factor. By such a
design, the information asymmetry can be overcome by con-
tract theory [34]. As a result, the validator needs to pay only
a discounted premium but is entitled to cyber insurance com-
pensation. The cyber insurer needs to pay only a discounted
claim but will obtain a full premium. It is the blockchain to
compensate for the premium and claim for the cyber insurer
and validators, respectively.
We summarize the main contributions of this paper in the
following.
• We utilize cyber insurance as risk-management (i.e., it
works as an economic mechanism) that motivates the
validators to be online and reduces their losses from
the discouragement attack. The proposed scheme allows
the blockchain to keep more validators with high online
active participation for a required time, which contributes
to the market value and makes time for the developers to
detect discouragement attacks and malicious nodes.
• We propose a hierarchical game model by combing the
Stackelberg game and contract theory together, analyz-
ing the interactions among the cyber-insurer, blockchain
infrastructure provider, and validators, and then formu-
lating the problems in two stages.
• In the hierarchical game model, the cyber-insurer is the
leader in upper Stage I, determining the premium and
claim factor for the validators. Based on the cyber-
insurer’s strategy in Stage I, the blockchain infrastructure
provider, as the follower in lower Stage II, determines the
contract items, including discount and compensation fac-
tors. The validators would be given a set of insurance
contracts in Stage II. Thus, we can maximize the cyber
insurer and blockchain infrastructure provider’s profit and
determine the online duration for the validators.
• Detailed illustrations are given to show the solving pro-
cess. Accordingly, we present the closed-form of the
optimal premium, claim, and compensation parameters
obtained through backward induction. With the exten-
sive simulations, we compare the impacts of different key
parameters on the optimal results and show the profit dif-
ferences between the proposed model and the benchmark
model, demonstrating the feasibility and efficacy of the
proposed model.
The rest of the proposed paper is organized as follows.
In Section II, we present the system model, including the
discouragement attack model, reward distribution, expected
loss, griefing factor, utility models of the beacon chain, cyber
insurer, and validators. In Section III, we provide the specific
design of the contract, including the problem formulation and
optimal solutions. In Section IV, we give the problem for-
mulation and optimal solution of the Stackelberg game. In
Section V, we illustrate the simulation results and the anal-
ysis. In Section VI, we give the conclusion for the proposed
scheme.
II. SYSTEM MODEL
This section will introduce the discouragement attack
model, the reward distribution function, the expected loss, and
then present the utility models for the validators, blockchain,
and the cyber insurer. The overview of the sharded blockchain
with cyber insurance model can be referred to Fig. 1. We con-
sider the market with one cyber insurer and one blockchain
network. From the incentive perspective, the beacon chain tries
to maximize the participation (i.e., delay and online deposits)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: CYBER INSURANCE DESIGN FOR VALIDATOR ROTATION IN SHARDED BLOCKCHAIN NETWORKS 3095
Fig. 1. An overview of the sharded blockchain network with cyber insurance.
of validators to hold its market value. The malicious ones
would like to choose the contract with a small “delay,” but they
cannot escape from the security review when waiting in the
queue. The honest ones prefer contracts with a longer online
time, which means a higher claim for the potential risk.
The core idea of discouragement attack is long-term cen-
sorship on honest participants, which the attackers conduct
through the power of their collusion [8]. As long as some mes-
sages are published for audit, verification, or packaging, the
attackers act illegally inside the PoS consensus mechanism to
reduce other validators’ revenue [39]. Fig. 2 depicts a compar-
ison regarding the discouragement attack effects with/without
cyber-insurance. According to the rewarding function in [8],
the malicious users initiate censorship on these honest users
to decrease the rewards in phase (1). Then in phase (2), the
honest users realize that the rewards are slashed round after
round, even though they vote honestly. Without enough incen-
tives, these honest users will intend to drop out of the system
in phase (3). Finally, the honest users’ withdrawal enables
the malicious users to launch much more severe attacks, such
as the double-spending attack. However, cyber insurance can
guarantee honest users’ rewards by compensating for their loss
in phases (a) and (b). With an unaffected reward, the honest
users will tend to stay in the system for a longer time in
phase (c), which forces the malicious one to drop out of the
system due to the increasing cost.
A. Discouragement Attack Model
Discouragement attack means that the malicious validators
are controlled by the attacker acting illegally inside the con-
sensus mechanism in order to reduce other validators’ revenue.
Although it is virtually impossible to censor any transaction
on a blockchain network, censorship can occur when sign-
ing the signatures [39]. Take the sharded blockchain as an
Fig. 2. How does the cyber-insurance work when discouragement attack
occurs.
example. In [8], there are N validators in a single committee,
sharing a maximum total reward of R in each round. If the total
number of whom signing the messages is M (M ≤ N), then
they can earn a reward of R
N · M
N because of signing a mes-
sage. When the attackers collude to stop including messages
from some other validators (not all validators), the censored
validators will gain nothing because their signatures are not
included in the finalized results [40]. Following that M is vir-
tually reduced, both the reward of attackers and non-censored
validators decreases. Even though the attackers are forced
to inflict economic damage to themselves due to censorship,
they still have the incentive to expect long-term profit in the
future. Consequently, the victims realize that their incentive is
decreasing and then exit the blockchain network. A possible,
as well as the worst case, is that most honest validators drop
out of the network with all attackers remaining, allowing the
attackers to easily launch the double-spending attack or any
other severe attacks on the chain manipulating the finalized
blocks.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
3096 IEEE TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, VOL. 18, NO. 3, SEPTEMBER 2021
To better analyze the attack model, the paper [8] introduces
a useful concept called griefing factor and a reward distribution
function with the bounded griefing factor. The discouragement
attack can be classified into two types: majority attack and
minority attack. A majority attack means the attacker has a
greater power to control a majority of the validators, while the
minority attack is the opposite case. In a majority attack, the
validators can be identified as three types: the malicious val-
idators, the censored validators, and the uncensored validators.
In a minority attack, there are only two types of validators:
the malicious validators and the remaining validators. We will
explain the reward distribution and loss function under the
majority attack in the following. Suppose there are N val-
idators in committee I, n̂ malicious validators, k̂ censored
validators, N − k̂ − n̂ uncensored validators, and the total
reward for each round is R. Each validator contributing to
a PoS blockchain’s work earns R/N if no one is malicious.
But if there exist malicious validators, according to Vitalik’s
idea [41], we have the reward distribution function: R(N−k̂)
N 2 .
Thus, we have the loss function l1 for each censored validator
and the loss function l2 for each uncensored validator:
l1 =
R
N
, (1)
l2 =
R
N
− R(N − k̂)
N 2
=
Rk̂
N 2
. (2)
Thus, we have the expected loss function as follows:
L =
{
k̂
(N − n̂)
l1 +
(N − k̂ − n̂)
(N − n̂)
l2
}
(3)
where k̂/(N − n̂) denotes the probability of being censored,
and (N − k̂− n̂)/(N − n̂) denotes the probability of not being
censored.
B. Cyber Insurer Utility Model
This paper will first classify all the validators into the dif-
ferent types according to their activeness. For the validators of
type-i, the cyber insurer determines the premium pi and cov-
erage factor βi . For the cyber insurer, it can get profit from
the gap between the premium and the claim. The premium
pi is given by the type-i validators, as well as the blockchain
infrastructure provider. The claim is determined by the loss L
and the coverage factor βi . Thus, the cyber insurer’s utility
obtained from a validator can be expressed by
Uc,i (pi , βi ) = pi − βiL. (4)
C. Blockchain Utility Model
The blockchain network is decentralized, which means no
central trusted party is dealing with the administrative transac-
tion. However, it is not the same case in a blockchain network
with shards. According to [5], the beacon chain consists of
the dedicated blocks for recording the administrative transac-
tions. The block managers can be considered to be temporary
leaders. Moreover, the contract items and the related details
on execution can be encoded into a smart contract.
The blockchain infrastructure provider acts as a medium
between the cyber insurer and the validators. It follows the
cyber insurer’s strategies and determines a series of compen-
sation strategies (discount factor,compensation factor) for all
types validators to further incentivize their online time di .
By such design, the whole blockchain network’s value can
be increased by motivating the validators with higher active-
ness to stay online for a longer time. The utility function is
expressed as follows:
Ub,i = Π(θi , di )− αipi −Θ(uβiL), (5)
where Π(·) is an increasing function that is used for calculat-
ing the revenue from validators’ delay di and activeness θi ,
the second term is the compensatory premium for the cyber
insurer with the discount factor αi , and the last term is the
compensatory claim for the validators with the compensation
factor u.
D. Validator Utility Model
The validators are randomly selected from the validator
pool. Thus, there exists a variety of validators with different
activeness. We first classify the validators into different types:
type-1, type-2, . . . , type-i, . . . , type-N. The classification cri-
terion is based on their history activeness in the blockchain.
In order to analyze the activeness of the different validators
without loss of generality, we model the activeness of all the
validators as the Normal Distribution Â with mean μ and vari-
ance σ2. For a certain range of activeness [ai , ai+1), we model
it as a truncated normal distribution Ai , which is expressed as:
Ai (x ;μ, σ, ai , ai+1) =
1
σφ(
x−μ
σ )
Φ(
ai+1−μ
σ )− Φ(ai−μ
σ )
, (6)
where the validators whose activeness lies in interval
[ai , ai+1) belong to type i. The activeness âi observed and
analyzed by the blockchain infrastructure provider contains a
random noise:
π(âi ,N ) = âi −N , (7)
where N is the network delay, a zero mean Gaussian noise
with variance σ′.
All validators have options of not buying a contract, directly
buying an insurance contract from the cyber-insurer, or buying
a mixed contract from the blockchain. Intuitively, an honest
and rational validator tends to buy a contract (either from the
cyber-insurer or blockchain) to prevent monetary loss caused
by discouragement attacks. The single contract from the cyber-
insurer allows the buyers free to enter and exit the blockchain
network. By contrast, a mixed contract provided by blockchain
can additionally offer a discount factor and a compensation
factor in exchange within a fixed length for the validator being
online. For incentive reasons, validators buying mixed con-
tracts from blockchain is profitable. Even having to stay online
for a fixed duration, the validators’ benefits will be protected
by the mixed contract with a lower cost and a higher claim.
We will present and explain the validator’s utility of choosing
contracts of different categories in the following.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: CYBER INSURANCE DESIGN FOR VALIDATOR ROTATION IN SHARDED BLOCKCHAIN NETWORKS 3097
1) No Contract: If the validator does not sign any contract,
it will bear the total cost of its effort as well as the potential
loss caused by the discouragement attack. Therefore, the type-i
validator’s utility per unit time is
u−i = −c[π(âi )]
2 − L. (8)
Thus, the expected utility without contract is as follows:
U−
i = E (−c[π(âi )]
2 − L),
= −câ2i + cσ′2 − L. (9)
Obviously, due to the potential loss, the validator would
choose to do nothing to lower the total cost. Note that “doing
nothing” means the validator will not do any other activities
that the consensus protocol does not require.
2) With Single Contract: If the validator signs the contract
with the cyber insurer directly, it can only obtain the insurance
contract (pi , βi ), where pi is the premium and βi is the claim
factor with 0 ≤ β ≤ 1. Without the compensation factors, the
validator receives the profit as follows:
P
−
i = −pi − L+ βiL. (10)
3) With Mixed Contract: This paper considers the
blockchain infrastructure provider to be an intermediary to
interact with the cyber insurer and the validator, further moti-
vating the validators by providing the mixed contract with a
discount factor and a compensation factor. Thus, the type-
i validators will be provided a series of mixed contracts
{[pi , βi ], [αi , uβi , di ]}, where αi is the discount factor with
0 ≤ α ≤ 1, u is the compensation factor with 0 ≤ u ≤ 1
and di denotes the delay (i.e., the validator’s online time), it
means the validator will receive a discount of the insurance
contract through keeping active online. For a base premium p
and a loss L, the validator receives the profit from the mixed
contract (pi , αi , βi , di ) is defined as follows:
P
+
i = −pi + αipi − L+ βiL+ uβiL. (11)
Thus, we have the profit given by the mixed contract is
defined as follows:
f (pi , αi , βi ) = P
+
i − P
−
i ,
= αipi + uβiL, (12)
which means the type-i validator needs to pay a premium pi−
αipi instead of pi , and obtains (1 + u)βiL as the claim for
the loss.
Intuitively, the validator with a high activeness is desired
by the blockchain infrastructure provider, since a high active-
ness contributes to a more value of the network. To motivate
the validators, a high discount factor should come with a high
coverage factor, which both are offered by the contract. Based
on the cyber insure strategy (pi , βi ), the blockchain infrastruc-
ture provider determines its own policy. We set αi = g(βi ) for
the ease of analysis, with g ′(βi ) > 0 and g ′′(βi ) ≤ 0. Then
f (pi , αi , βi ) can be rewritten as G(pi , αi ) := f (pi , βi , αi ).
With the pre-defined compensation factor u, let (pi , βi , αi , di )
denote the mixed contract {[pi , βi ], [αi , uβi , di ]}. Therefore
Fig. 3. A two-stage hierarchical game model.
we first have the utility function per round for the
validators:
u+i = AiG(pi , αi ) + γAiπ(âi )− c[π(âi )]
2 − h(di ), (13)
where γ is the pre-defined coefficient and the second term
γAiπ(âi ) denotes the benefit from the observed activeness
that is evaluated by the contract, and h(di ) represents capital
lockup cost with the delay di per round, which means the
validator would suffer a loss because its deposit is locked up
in the blockchain network and cannot be redeemed for the
period di the, i.e.,
h(di ) = d{e0D exp {ε0di}}, (14)
where ε0 is the annual interest rate with 0 < ε0 < 1, e0 is the
pre-defined coefficient and D is the lockup deposit. Thus, we
have h(·) is an increasing function of di . The time for each
round is so tiny compared with the online time di , we use the
differentiation to present the discounted value approximately.
III. PROBLEM FORMULATION OF THE
HIERARCHICAL GAME
This section will model the interactions of the cyber insurer,
blockchain infrastructure provider, and validators as a hierar-
chical game, where the interaction between the cyber insurer
and blockchain infrastructure provider is a Stackelberg and the
interaction between the blockchain infrastructure provider and
validators is a contract game. As shown in Fig. 3, Stage I
denotes the Stackelberg game, while Stage II represents the
contract game.
A. Stage I: Stackelberg Game Formulation
The Stackelberg game includes two sub-games of strate-
gies made by the participants in the model. Cyber-insurer
will determine the premium and claim strategies in the upper
game after considering blockchain’s action. The blockchain
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
3098 IEEE TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, VOL. 18, NO. 3, SEPTEMBER 2021
infrastructure provider follows the cyber insurer’s rules and
determines the contracts for validators accordingly in the lower
game. The anonymity of the blockchain network makes it more
difficult for the cyber insurer to have accurate knowledge of
the validators. The cyber insurer can only obtain the proba-
bility distribution of the validators based on their activeness
history. Let λi denote the probability of the type-i valida-
tors with
∑
N
i=1 λi = 1. According to Section II, the revenue
of cyber insurer obtained from all the types of validators is
Uc =
∑
N
i=1{uc(pi , βi )}. Thus, the utility function of the
cyber insurer in the leader’s sub-game is expressed as follows:
Uc =
N∑
i=1
λi{pi − βiL}. (15)
Once acquiring the knowledge of the insurance contract
from the cyber insurer, the blockchain infrastructure provider
determines an incentive policy for each type of the val-
idators in order to gain more market value and resist the
discouragement attack through validators’ rotation. Based on
the premium and claim factor, the blockchain infrastruc-
ture provider determines a discount factor for the validators’
premium and a compensation factor for the validators’ claim.
Thus, we have the utility function for the blockchain infras-
tructure provider as follows:
Ub =
∑
i∈N
λi{Π(θi , di )− piαi −Θ(uβiL)}, (16)
where Π(·) is the evaluation function of the validators’
delay, the second term piαi is the discount premium for the
validators and Θ(·) is the cost of compensation claim.
B. Stage II: Contract Model Design
In Stage II, we elaborate the contract theory framework
to model the interactions between the blockchain infrastruc-
ture provider and the validators. The blockchain infrastructure
provider acts as a medium between the cyber insurer and
the validators. Given an insurance contract with the premium
and claim factor determined by the cyber insurer, the val-
idators obtain a series of contracts from the blockchain. To
incentivize the validators and determine the validators’ delay,
the blockchain infrastructure provider designs a set of con-
tracts, including the discount factor, compensation factor, and
online requirement. Recall the utility function of validators in
Section II-D3, and we will have the expectation function as
follows:
U+
i = E (AiG(pi , αi ) + γAiπ(âi )− c[π(âi )]
2 − h(di )),
= θiG(pi , αi ) + γθi âi − câ2i + cσ′2 − h(di ), (17)
in which θi represents the expected value of the truncated
normal distribution Ai , i.e., θi = E (Ai ).
According to the probability density function of the trun-
cated normal distribution in Section II-D, we have
θi =
∫ ai+1
ai
x 1
σφ(
x−μ
σ )
Φ(
ai+1−μ
σ )− Φ(ai−μ
σ )
d x . (18)
In the utility function in (17), the optimal activeness for a
validator of type-i within the contract can be obtained by a∗i :=
argmaxâi≥0{θiG(pi , αi )+γθi âi−câ2i +cσ′2−h(di )}. Then
we solve this problem by setting its first derivative condition
as zero, which is expressed as
∂U+
i
∂âi
= 0. Given â∗i = γθi
2c , it
is easy to enable optimal activeness to approach the expected
value or a higher one through setting γ. Thus, we rewrite the
utility function in (17) by substituting â∗i = γθi
2c , which is
expressed as
U+
i = θiG(pi , αi ) +
γ2θ2i
4c
+ cσ′2 − h(di ). (19)
We will prove the feasibility of the contract by introducing
the constraints of Individual Rationality (IR) and Incentive
Compatibility (IC). Individual Rationality (IR) and Incentive
Compatibility (IC) are two significant constraints of the con-
tract theory [34], which enable the rational validators to select
the specific contract that is designed for their own types rather
than others.
Definition 1: Individual Rationality (IR). IR means that a
rational type-i (∀i ∈ {1, . . . ,N}) validator will accept a con-
tract only when the utility provided by the contract is not less
than that of no-contract case, i.e.,
U+
i (pi , βi , αi , di ) = θiG(pi , αi ) +
γ2θ2i
4c
+ cσ′2 − h(di )
≥ U−
i (0, 0, 0, 0), (20)
where U−
i (0, 0, 0, 0) denotes the utility function without the
contract.
Definition 2: Incentive Compatibility (IC). IC means that
a type-i validator can only obtain the maximum profit by
choosing the contract (pi , βi , αi , di ) rather than all the other
contracts (pj , βj , αj , dj ) (∀i , j , i �= j ), i.e.,
U+
i (pi , βi , αi , di ) ≥ U+
i (pj , βj , αj , dj ). (21)
A contract is considered to be feasible only when these
two constraints are satisfied. The contract designer can only
maximize its profit with IR and IC constraints. Therefore, the
problem of the contract model can be expressed as:
max
(pi ,βi ,αi ,di )
Ub =
∑
i∈N
λi{Π(θi , di )− piαi −Θ(uβiL)},
(22)
s.t.
(22a) U+
i (pi , βi , αi , di ) ≥ U−
i (0, 0, 0, 0),
(22b) U+
i (pi , βi , αi , di ) ≥ U+
i (pj , βj , αj , dj ),
(22c) θ1 < θ2 < · · · < θN,
wherein (22a) and (22b) are the IR and IC constraints, respec-
tively, and (22c) is the monotonicity condition. Obviously, the
problem (22) is not a convex problem and cannot be solved
directly. Thus, we transform this problem by reducing the
constraints in the following.
IV. OPTIMAL SOLUTION FOR THE HIERARCHICAL GAME
In this section, we apply backward induction to solve the
problems. That means we will first solve Stage II’s problem by
assuming that the solution of Stage I is given. Then we finally
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: CYBER INSURANCE DESIGN FOR VALIDATOR ROTATION IN SHARDED BLOCKCHAIN NETWORKS 3099
Fig. 4. An overview of problem formulation and solution.
obtain all the solutions by substituting them to the problems in
Stage I. As shown in Fig. 4, in Stage II, given the premium#
and claim factor# (‘#’ means that the parameters are assumed
to be known in Stage II), we can obtain the optimal discount
factor and online time by reducing the IR and IC constraints
under the contract framework. Then in Stage I, after substi-
tuting the parameters obtained in Stage II into the objective
function, we finally are able to get the optimal premium∗
and claim factor∗ (‘*’ means that the parameters are the final
optimal solutions). The algorithms for solving the problems
are presented in Algorithm 1 and Algorithm 2.
A. Stage II: Contract Theory Model
In this sub-section, we reduce the numbers of IC and IR
constraints according to the contract theory framework [34]
and then obtain a new optimal problem with the reduced
constraints.
Lemma 1 (Reduction of IR): For all the types, ∀i ∈
{1, . . . ,N}, if we have θ1 < θ2 < · · · < θN, then the IR con-
straint of type-i holds only when the constraint of the lowest
type validator is satisfied.
Proof: Please refer to Appendix Lemma 1 for details.
Lemma 2 (Monotonicity): For any contract (pi , βi , αi , di ),
pi ≥ pj , βi ≥ βj , αi ≥ αj and di ≥ dj if and only if θi ≥ θj .
Proof: Please refer to Appendix Lemma 2 for details.
Lemma 3 (Reduction of IC): There are four definitions
regarding the IC constraints between type-i and type-j
(∀i �= j ):
(a) If ∀j ∈ {1, 2, . . . , i − 1}, the constraints are called
Downward Incentive Constraints (DICs).
(b) If j = i− 1, the constraint is called Local Downward
Incentive Constraint (LDIC).
(c) If ∀j ∈ {i + 1, . . . ,N }, the constraints are called
Upward Incentive Constraints (UICs).
(d) If j = i+ 1, the constraint is called Local Upward
Incentive Constraint (LUIC).
With the monotonicity conditions θ1 < θ2 <
· · · < θN, the DICs can be reduced as LDICs, i.e.,
U+
i (pi , βi , αi , di ) ≥ U+
i (pi−1, βi−1, αi−1, di−1) and the
UICs can be reduced as the LUICs, i.e., U+
i (pi , βi , αi , di ) ≥
U+
i (pi+1, βi+1, αi+1, di+1).
Proof: Please refer to Appendix Lemma 3 for details.
From Lemma 3, we can conclude that Nash
Equilibrium always exists. If an optimal contract port-
folio Ωi = {pi , αi , βi , di} forms an Nash Equilibrium, for
type-i validator and the other alternative contract portfolios
Ω−i , we must have
U+
i (Ωi ) ≥ U+
i (Ω−i ), (23)
which can be derived from Lemma 3. We will also demonstrate
this conclusion through the simulation in Section V.
To solve the new optimization problem defined
in (22), we first reduce the IC constraints for all
the types of contracts (∀i ,∈ {2, . . . ,N}) by setting
U+
i (pi , βi , αi , di ) = U+
i (pi−1, βi−1, αi−1, di−1) and
have the following equations:
θiG(pi , αi ) +
γ2θ2i
4c
+ cσ′2 − h(di )
= θiG(pi−1, αi−1) +
γ2θ2i−1
4c
+ cσ′2 − h(di−1). (24)
For the type-1 utility function, we reduce the IR constraint
by setting U+
i (pi , βi , αi , di ) = U−
i (0, 0, 0, 0) and have
θ1G(p1, α1) +
γ2θ21
4c
+ cσ′2 − h(d1) = −câ21 + cσ′2 − L.
(25)
Then we add all the IC constraints and obtain
θiGi = (θi − θi−1)Gi−1 + · · ·+ θ2G1 + cσ′2 − h(d1).
(26)
where Gi denotes G(pi , αi ). Then, we add the reduced IR
constraint of type-1 in (25) to (26) and have
θiG(pi , αi )− h(di ) =
i−1∑
j=1
Δj −
γ2θ21
4c
− L, (27)
where Δj = (θj+1−θj )G(pj , αj ). Without loss of generality,
we set αi = g(βi ) = e1β
(1−η)
i , Π(θi , di ) = e2h(di ) + e2θ
ε2
i
and Θ(uβiL) = e3θ
ε3
i uβiL, where e1, e2 and e3 are the eval-
uation factors, and ε1 > 0, ε2 > 0, ε3 > 0 and 0 < η < 1
are the pre-defined coefficients. Therefore, we rewrite the
objective function of the blockchain as follows:
max
(pi ,βi ,αi ,di )
Ub =
∑
i∈N
λi
{
e2h(di ) + e2θ
ε2
i − piαi − e3θ
ε3
i uβiL)
}
.
(28)
Based on (27), we have
h(di ) = θiG(pi , αi )−
i−1∑
j=1
Δj +
γ2θ21
4c
+ L. (29)
We rewrite the objective function (28) by
substituting (29), i.e.,
max
(pi ,βi ,αi ,di )
Ub =
∑
i∈N
λi
⎧
⎨
⎩e2
⎡
⎣θiG(pi , αi )−
i−1∑
j=1
Δj +
γ2θ21
4c
+ L
⎤
⎦
+ e2θ
ε2
i − piαi − e3
e
1
(1−η)
1
θε3i uα
1
(1−η)
i L
⎞
⎠
⎫
⎬
⎭. (30)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
3100 IEEE TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, VOL. 18, NO. 3, SEPTEMBER 2021
Algorithm 1 Optimal Solution to the Problem in Stage II
Input: The premium from Stage I: p̂, the claim factor from the Stage
I: β̂, the historical statistical distribution of the validators’ active-
ness: A, the number of types: N, the probability of the different
type validator: λ, and the loss: L;
Output: The discount factor α̂ and the online time d̂ for all the
validators;
1: //Reduction of IC constraints;
2: for i = N; i ≥ 2; i −− do
3: Set U+
i (p̂i , β̂i , αi , di ) = U+
i (p̂i−1, β̂i−1, αi−1, di−1);
4: Set ψi = U+
i (p̂i , β̂i , αi , di ) −
U+
i (p̂i−1, β̂i−1, αi−1, di−1);
5: end for
6: //Reduction of IR constraints;
7: Set U+
1 (p̂1, β̂1, α1, d1) = U−
1 (0, 0, 0, 0);
8: Set ψ1 = U+
1 (p̂1, β̂1, α1, d1)− U−
1 (0, 0, 0, 0);
9: //Add all reduced IC constraints and IR constraint together;
10: for i = N; i ≥ 1; i −− do
11: Set Ψi = ψi ;
12: for j = i − 1; j ≥ 1; j −− do
13: Ψi = Ψi + ψj ;
14: end for
15: end for
16: for i = N; i ≥ 1; i −− do
17: Obtain di from Ψi = 0;
18: Substitute di into the problem: max
(p̂i ,β̂i ,αi ,di )
Ub,i =
Π(θi , di )− piαi −Θ(μβiL);
19: Compute α̂i = argmaxUb,i (αi ) =
e1
{
p̂i [e2e1θi (1−η)−e1(1−η)]
L(e3θε3i μ−e2θi )
} 1−η
η
;
20: Compute d̂i =
1
ε0
log
{
θiG(α̂i )−
∑i−1
j=1 Δj+
γ2θ21
4c
+L
e0ε0D
}
;
21: end for
Algorithm 2 Optimal Solution to the Problem in Stage I
Input: The discount factor α̂, online time d̂ that are obtained from
Stage II, the historical statistical distribution of the validators’
activeness: A, the number of types: N, the probability of the
different type validator: λ, and the loss: L;
Output: The Optimal premium: p∗, claim factor: β∗, discount
factor: α∗, and online time: d∗ for all the validators;
1: for i = N; i ≥ 1; i −− do
2: Transfer βi from α̂i : βi =
{
pi [e2e1θi (1−η)−e1(1−η)]
L(e3θε3i u−e2θi )
} 1
η
;
3: Substitute βi into the problem: Uc,i = pi − βiL;
4: Compute p∗i = argmaxUc,i (pi );
5: Compute β∗i =
{
p∗
i [e2e1θi (1−η)−e1(1−η)]
L(e3θε3i u−e2θi )
} 1
η
;
6: Compute α∗i = e1β
∗
i
(1−η);
7: Compute d∗i = 1
ε0
log
{
θiG(α∗
i )−
∑i−1
j=1 Δj+
γ2θ21
4c
+L
e0ε0D
}
;
8: end for
Therefore, we have the first derivative of αi as follows:
∂Ub(i)
∂αi
=
e2θiuL
(1− η)e
1
1−η
i
α
η
1−η
i + pie2θi
− pi −
e3θ
ε3
i uL
(1− η)e
1
1−η
1
α
η
1−η
i . (31)
Next, by differentiating ∂Ub(i)
∂αi
with respect to αi , we have
∂2Ub(i)
∂α2
i
= −ηuL(e3θε3 − e2θi )
(1− η)2e
( 1
1−η
)
1
α
2η−1
1−η
i . (32)
Obviously, we have ∂2Ub(i)
∂β2
i
< 0 by setting e3θ
ε3
i > e2θi
and come to the conclusion that (28) is a concave function.
Finally, given the premium pi determined by Stage I, we
derive the optimal solution α∗
i of the contract model by setting
∂Ub(i)
∂αi
= 0. We have
α̂i := e1
{
pi [e2e1θi (1− η)− e1(1− η)]
uL(e3θε3i − e2θi )
} 1−η
η
. (33)
According to equation (14) and (27), then we obtain the
optimal online time as follows:
d̂i :=
1
ε0
log
⎧⎨
⎩
θiG(pi , βi )−
∑i−1
j=1Δj +
γ2θ21
4c + L
e0ε0D
⎫⎬
⎭. (34)
B. Stage I: Stackelberg Game Model
Recall αi = g(βi ), then we obtain the optimal claim factor
as follows:
β̂i :=
{
pi [e2e1θi (1− η)− e1(1− η)]
uL(e3θε3i − e2θi )
} 1
η
. (35)
Then transforming (35) to obtain pi , we have
pi =
uL(e3θε3i − e2θi )
[e2e1θi (1− η)− e1(1− η)]
β
η
i . (36)
Substituting (36) into (15), we obtain a new utility function
of the cyber insurer as follows:
Uc =
∑
i∈N
λi
{
L(e3θε3i u − e2θi )
[e2e1θi (1− η)− e1(1− η)]
β
η
i − (1− u)βiL
}
.
(37)
Therefore, we take the first derivative of βi as follows:
∂Uc(i)
∂βi
=
Lη(e3θε3i u − e2θi )
[e2e1θi (1− η)− e1(1− η)]
βη−1
i
− (1− u)L (38)
By differentiating ∂Uc(i)
∂βi
with respect to βi , we have
∂2Uc(i)
∂β2i
=
Lη(η − 1)(e3θ
ε3
i u − e2θi )
[e2e1θi (1− η)− e1(1− η)]
βη−2
i . (39)
Obviously, we have ∂2Uc(i)
∂β2
i
< with 0 < η < 1. Thus, we
can obtain the optimal price of the claim factor by setting
∂Uc(i)
∂βi
= 0, i.e.,
β∗i =
{
η(e3θ
ε3
i u − e2θiu)
[e2e1θi (1− η)− e1(1− η)]
} 1
1−η
. (40)
Finally, we have the optimal price of premium as follows:
p∗i = LF 1
1−η (η)
η
1−η , (41)
where F =
(e3θ
ε3
i u−e2θiu)
[e2e1θi (1−η)−e1(1−η)]
.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: CYBER INSURANCE DESIGN FOR VALIDATOR ROTATION IN SHARDED BLOCKCHAIN NETWORKS 3101
Fig. 5. Probability density of the truncated normal distribution and the normal
distribution.
Fig. 6. The expected activeness for each type validators.
V. SIMULATION RESULTS AND NUMERICAL ANALYSIS
In this section, we first illustrate the distribution of active-
ness, present the expected value for each type of validator,
and then evaluate the impact of the blockchain infrastructure
provider decision on the premium and claim factor. Finally, we
show the utilities of the validators, the profit of the blockchain
infrastructure provider, and the cyber insurer’s revenue.
In the initial phase, we consider the activeness of the whole
validators to be a Normal Distribution with μ = 50 and
σ = 10. In our design, the metric of activeness is uniformly
classified into ten intervals, i.e., each interval denotes a sin-
gle type of validators. When considering the types separately,
the probability density function for each type of activeness
is modeled as the Truncated Normal Distribution with the
same parameters μ = 50, σ = 10. As shown in Fig. 5, we
plot the probability density function (pdf) of truncated normal
distribution (i.e., red dot line) according to the pdf of normal
distribution (i.e., solid blue line). When only considering a cer-
tain type i and its corresponding activeness scope (ai , ai+1],
our plotting result shows that the probability density has been
TABLE I
PARAMETER SETTING
shifted to a higher value. The reason is that the definite inte-
gral on the interval (ai , ai+1] is one while the other elements
outside this interval are set to be zero. The probability den-
sity change also increases the expected value to a value higher
than that of the original normal distribution.
For type i that fits the truncated normal distribution
Ai (μ, σ, ai , ai+1), we present the expected value θi with dif-
ferent σ in Fig. 6. We can see that the expected value increases
along with the σ decreases in the first five types, but in the
last five types, the case is completely opposite. For further
analysis, we set μ = 50, σ = 10, e1 = 0.5, e3 = 10 and
ε3 = 1.3. For the discouragement attack assumption, we set
N = 1000, n̂ = 100, k = 100 and R = 1000 for the analysis
of the parameters. We list the main parameters in Table I.
According to the Stackelberg game principle, the cyber
insurer’s optimal claim and premium strategies depend on
the decisions made by the lower sub-game. We next study
the impact of blockchain infrastructure provider’s decisions.
According to the utility function in (30), the blockchain infras-
tructure provider identifies the weight for each item by using
the evaluation parameters, i.e., e1, e2, e3, η and u. According
to the closed-form of the optimal solution in (40), it is easy
to conclude that the optimal solution β∗i increases along with
e3 and u increase but decreases as e2 and e1 grow.
From Fig. 7(a) and Fig. 7(c), we can observe that the claim
factor increases when η grows but decreases along with the
e2 grows, where η is applied to define the discount factor αi .
However, the claim factor is a parameter that denotes the claim
ratio, which should be less than one. Similar to the previous
two sub-figures, the revenue of cyber-insurer also increases as
the η grows. Fig. 7(a) only illustrates the growing trend of βi ,
wherein βi ≥ 1 cannot be adopted in a real scenario. Thus,
we set η = 0.1 in the following simulations. From Fig. 7(d),
we observe that the compensation factor that the blockchain
infrastructure provider determines can also impact the cyber
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
3102 IEEE TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, VOL. 18, NO. 3, SEPTEMBER 2021
Fig. 7. The impacts of different parameters on the cyber insurer’s decision and revenue.
insurer’s revenue. The claim should also be given considera-
tion since βi ≥ 1 when u>0.1, which is not valid. We examine
the impact by limiting u ≤ 0.1. Fig. 7(d) illustrates that a
higher compensation factor u would lead to a higher cyber
insurer’s revenue.
The discouragement attack can be classified into two types:
majority attack and minority attack. A majority attack means
the attacker has a greater power to control a majority of the
validators, while the minority attack is the opposite case. Thus,
we set N = 1000 validators in total and n̂ = 100 malicious
validators, and let k = 100, k = 300 denote the minority
attack and k = 500, k = 700 denote the majority attack.
Recall the expected loss function in (3), and we can conclude
that the expected loss for each validator will be increased
when the censored validators grow in number, which finally
approaches its reward per round R/N. Given e2 = 1 and
η = 0.1, we have the growing premium and revenue when
increasing the loss, as shown in Fig. 7(e). Besides, Fig. 7(f)
also shows that a higher loss brings a higher revenue for the
cyber insurer. A positive correlation of the loss, premium, and
revenue satisfy the cyber insurer’s benefit requirement.
Based on the optimal solutions of cyber insurer, we next
investigate the impact of different parameters and loss on the
contract (αi , di ) individually. In Fig. 8(a) and Fig. 8(b), we
set e3 = 1.5 and figure out that, the discount factors αi of
all the contracts increase in terms of η and the compensation
factor u. If the metric unit of delay is ‘one day’, then we
set T = 365. According to [26], the deposit is 32 ETH (i.e.,
around 8,500$). Thus, we set e0ε0 = 13.5 and D = 8, 500 to
observe the optimal delay. From Fig. 8(c), we can conclude
that η and u have the same impact on the optimal delay, i.e., a
higher η and a higher u result in a higher optimal delay. Vitalik
suggests “1-3 months to rotate the entire validator set” in [10],
and the setting in Fig. 8(c) exactly satisfies the statement.
We can also examine the impact of compensation fac-
tor u on the profit G(pi , αi ). Due to the higher discount
factor and the claim factor, validators can obtain a higher
profit from the contract (αi , βi ), as shown in Fig. 8(d).
Moreover, a higher compensation factor will bring more
benefits for the cyber insurer as well as the validators.
Still, it does not mean that the blockchain infrastructure
provider compensates them by sacrificing its own profit.
Fig. 8(c) shows that a validator must stay online for a
longer time in order to obtain a larger compensation fac-
tor, wherein a longer delay contributes to a higher profit
for the blockchain network. Similarly, when the attacker
censors more validators, we observe that the validators
gain the increasing profit from their own contracts, as
shown in Fig. 8(e), which is consistent with our previous
assumption in Section II. In Fig. 8(f), it shows that the
blockchain network’s utility increases in terms of loss
growth.
Finally, we compare the premium and the loss of the mixed
contract case with the benchmark scheme ‘single contract’
case, as illustrated in Fig. 9. In Fig. 9(a), we observe that
the premium in both cases increases with the validators’ type.
However, for type-i validators, the premium they need to pay
in the ‘mixed contract’ case is less than that of the ‘sin-
gle contract’ case. In Fig. 9(b), it shows that the loss in
both cases decreases with the validators’ type, which means
the claim they get from the insurance increases with the
validators’ type. Apparently, the ‘mixed contract’ case can
provide more insurance claim than a ‘single contract’ case.
We also prove the feasibility of the proposed contract by
illustrating the IR and IC constraints in Fig. 9(c). Due to
the huge gap of the different utilities, we set a new util-
ity function Ui ,j = U+
i (pj , βj , αj , dj ) − U+
i (p1, β1, α1, d1)
to denote the original utility without loss of generality. We
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: CYBER INSURANCE DESIGN FOR VALIDATOR ROTATION IN SHARDED BLOCKCHAIN NETWORKS 3103
Fig. 8. The impacts of different parameters on blockchain’s strategies and profits.
Fig. 9. The comparison with the single contract, and how the utility varies when signing different contracts.
plot the corresponding utilities of the selected type validators
when signing the different contracts in Fig. 9(c), indicat-
ing that the type-i validator can only achieve maximum
utility when selecting the contract that is exactly designed
for his own type. This also confirms the inequality (23).
For ∀i ∈ {1, . . . ,N}, we have Ui ,i ≥ 0, which means
U+
i (pi , βi , αi , di ) ≥ U+
i (p1, β1, α1, d1). Thus, IC and IR
constraints are both satisfied.
VI. CONCLUSION
This paper first analyzes the discouragement attack model,
the expected loss of the validators in the blockchain networks
with shards, designing cyber insurance under a hierarchical
model with the contract theory and Stackelberg game. The
founders of Ethereum point out that the withdrawal delay
mechanism can resist the discouragement attack. However,
how to determine an appropriate delay is still an open question.
Therefore, we propose an incentive scheme by integrating the
cyber insurance idea to neutralize the cyber risks, determining
the different validators’ withdrawal delays, and providing the
insurance claim for their loss. That means the blockchain
system can keep more online deposits to resist the discour-
agement attack via the ‘delay’ determined in the contract.
Simultaneously, the validators stay online to get insured for
the loss caused by the discouragement attack. Moreover, the
cyber insurer can also benefit from the insurance premium.
With few research works on the discouragement attack, we
analyze the attack model first and then explore the cyber insur-
ance idea under the contract theory framework. Based on the
simulation and analysis, we can conclude that the proposed
contract scheme is able to keep the revenue of cyber-insurer
and encourage the validators to be online by providing cyber
insurance as an incentive.
APPENDIX
PROOF OF LEMMA 1
Lemma 1 (Reduction of IR): For all the types, ∀i ∈
{1, . . . ,N}, if we have θ1 < θ2 < · · · < θN, then the IR con-
straint of type-i holds only when the constraint of the lowest
type validator is satisfied.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
3104 IEEE TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, VOL. 18, NO. 3, SEPTEMBER 2021
Proof: According to the IR constraint U+
i (pi , βi , αi , di ) ≥
U−
i (0, 0, 0, 0), for type-1 validators, we have
U+
1 (p1, β1, α1, d1) ≥ U−
1 (0, 0, 0, 0). (42)
According to the IC constraint U+
i (pi , βi , αi , di ) ≥
U+
i (pj , βj , αj , dj ) and θi > θ1, we have
U+
i (pi , βi , αi , di ) ≥ U+
i (p1, β1, α1, d1),
U+
i (p1, β1, α1, d1) ≥ U+
1 (p1, β1, α1, d1). (43)
Obviously, for given (42) and (43), we can come to the
conclusion that
U+
i (pi , βi , αi , di ) ≥ U−
1 (0, 0, 0, 0). (44)
Thus, we complete this proof.
PROOF OF LEMMA 2
Lemma 2 (Monotonicity): For any contract (pi , βi , αi , di ),
pi ≥ pj , βi ≥ βj , αi ≥ αj and di ≥ dj if and only if θi ≥ θj .
Proof: For ease of expression, we use G(βi ) instead
in the following proofs. According to the IC constraint
U+
i (pi , βi , αi , di ) ≥ U+
i (pj , βj , αj , dj ), we can obtain the
following inequations:
θiG(βi ) +
γ2θ2i
4c
+ cσ′2 − h(di ) ≥ θiG(βj ) +
γ2θ2i
4c
+ cσ′2 − h(dj ), (45)
θjG(βj ) +
γ2θ2j
4c
+ cσ′2 − h(dj ) ≥ θjG(βi ) +
γ2θ2j
4c
+ cσ′2 − h(di ). (46)
Then, we can obtain a new inequation by adding (45)
and (46) together:
(θi − θj )[G(βi )−G(βj )] ≥ 0. (47)
(a) Sufficiency: If θi > θj , we can get G(βi )−G(βj ) ≥ 0
by deriving from (47). As G ′(βi ) > 0, we can conclude that
βi > βj . So the sufficiency condition is proved.
(b) Necessity: The inequation in (47) can be transformed
and rewritten as
θi [G(βi )−G(βj )] ≥ θj [G(βi )−G(βj )], (48)
where G ′(βi ) > 0 and βi > βj . We have G(βi )−G(βj ) > 0
and conclude that θi > θj easily.
Proposition 1: For all the contracts (pi , βi , αi , di ) (∀i ∈
{1, . . . ,N}), we have di ≥ dj , if and only if βi ≥ βj .
Proof: According to the IC constraint expressed in (46), we
have
h(di )− h(dj ) ≥ θj [G(βi )−G(βj )]. (49)
(a) Sufficiency: If βi ≥ βj , we can conclude that G(βi )−
G(βj ) > 0 due to G ′(βi ) > 0. Then, we h(di ) − h(dj ) > 0
and h(di ) > h(dj ). Since h ′(di ) > 0, then di > dj .
(b) Necessity: We have the following inequation according
to the IC constraint expressed in (45):
θi [G(βi )−G(βj )] ≥ h(di )− h(dj ). (50)
If di ≥ dj , we have h(di )− h(dj ) > 0 due to h ′(di ) > 0,
which implies θi [G(βi ) − G(βj )] > 0. Since G ′(βi ) > 0,
then we easily have βi > βj . The proof is completed.
Lemma 2 indicates that in such a feasible contract, the val-
idators who keep active online for a longer time will gain a
higher discount factor and coverage factor.
PROOF OF LEMMA 3
Lemma 3 (Reduction of IC): There are four defini-
tions regarding the IC constraints between type-i and type-j
(∀i �= j ):
(a) If ∀j ∈ {1, 2, . . . , i − 1}, the constraints are called
Downward Incentive Constraints (DICs).
(b) If j = i− 1, the constraint is called Local Downward
Incentive Constraint (LDIC).
(c) If ∀j ∈ {i + 1, . . . ,N }, the constraints are called
Upward Incentive Constraints (UICs).
(d) If j = i+ 1, the constraint is called Local Upward
Incentive Constraint (LUIC).
With the monotonicity conditions θ1 < θ2 <
· · · < θN, the DICs can be reduced as LDICs, i.e.,
U+
i (pi , βi , αi , di ) ≥ U+
i (pi−1, βi−1, αi−1, di−1) and the
UICs can be reduced as the LUICs, i.e., U+
i (pi , βi , αi , di ) ≥
U+
i (pi+1, βi+1, αi+1, di+1).
Proof: All of the validators are classified into different
types, and there exists the IC constraint between any two
types. As a result, there are too many IC constraints in
total, which will increase the difficulty of computation. Here
we will prove that all of the IC constraints can be reduced
as LDICs. Consider three adjacent types, i.e., type i− 1,
type i and type i+ 1, which follows ∀i ∈ {1, . . . ,N − 1}.
According to the IC constraints, we revise this inequation
U+
i (pi , βi , αi , di ) ≥ U+
i (pj , βj , αj , dj ) and then have the
following two inequations:
U+
i (pi , βi , αi , di ) ≥ U+
i+1(pi , βi , αi , di ), (51)
U+
i (pi , βi , αi , di ) ≥ U+
i (pi−1, βi−1, αi−1, di−1). (52)
According to the momotonicity condition θi+1 > θi and
βi ≥ βi−1, we have the inequation:
(θi+1 − θi )G(βi ) ≥ (θi+1 − θi )G(βi−1). (53)
Then we transform the inequation (53) to the following one:
θi+1G(βi ) +
γθ2i+1
4c
− θiG(βi )−
γθ2i
4c
≥ θi+1G(βi−1) +
γθ2i+1
4c
− θiG(βi−1)−
γθ2i
4c
.
(54)
To proceed the reduction of IC constraints, we add (53) to
the inequation (54), and obtain a new inequation, i.e.,
U+
i+1(pi , βi , αi , di ) ≥ U+
i+1(pi−1, βi−1, αi−1, di−1). (55)
Combine the inequation (51) and (55), we can easily get:
U+
i (pi , βi , αi , di ) ≥ U+
i+1(pi , βi , αi , di ), (56)
U+
i+1(pi , βi , αi , di ) ≥ U+
i+1(pi−1, βi−1, αi−1, di−1). (57)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: CYBER INSURANCE DESIGN FOR VALIDATOR ROTATION IN SHARDED BLOCKCHAIN NETWORKS 3105
Repeat the steps described above, we can obtain the follow-
ing constraints:
U+
i+1(pi+1, βi+1, αi+1, di+1) ≥ U+
i+1(βi−1, di−1)
≥ U+
i+1(pi−3, βi−3, αi−3, di−3)
≥ · · ·
≥ U+
i+1(p1, β1, α1, d1)
≥ U+
1 (p1, β1, α1, d1). (58)
Similarly, for the type θi−1 and all the contracts which
follow ∀i ∈ {2, . . . ,N}, we can easily obtain the following
inequations by the same steps above:
U+
i−1(pi−1, βi−1, αi−1, di−1)
≥ U+
i−1(pi+1, βi+1, αi+1, di+1)
≥ · · ·
≥ U+
i−1(pN, βN, αN, dN). (59)
Therefore, we present the proof that if the LDICs are sat-
isfied, all the DICs also hold, as well as the LUICs and UICs
proved in (59).
REFERENCES
[1] S. Nakamoto. (2008). Bitcoin: A Peer-to-Peer Electronic Cash System.
[Online]. Available: https://bitcoin.org/bitcoin.pdf
[2] W. Wang et al., “A survey on consensus mechanisms and min-
ing management in blockchain networks,” 2018. [Online]. Available:
arXiv:1805.02707.
[3] S. Nakamoto. Bitcoin. Accessed: Jan, 2009. [Online]. Available:
https://bitcoin.org/en/
[4] Coinmarketcap. Accessed: Oct. 22, 2020. [Online]. Available:
https://coinmarketcap.com/
[5] Ethereum Foundation. Accessed: Oct. 12, 2020. [Online]. Available:
https://www.ethereum.org/
[6] QuantumMechanic. Proof of Stake Instead of Proof of
Work. Accessed: Jun. 11, 2011. [Online]. Available:
https://bitcointalk.org/index.php?topic=27787.0
[7] V. Buterin. Proof of Stake Faq. Accessed: Mar. 20, 2019.
[Online]. Available: https://github.com/ethereum/wiki/wiki/Proof-
of-Stake-FAQ#what-are-the-benefits-of-proof-of-stake-as-opposed-to-pr
oof-of-work
[8] V. Buterin. Discouragement Attacks. Accessed: Dec. 16, 2018.
[Online]. Available: https://github.com/ethereum/research/blob/master/
papers/discouragement/discouragement.pdf
[9] D. Lancashire. On Discouragement Attacks. Accessed: Dec. 20, 2018.
[Online]. Available: https://org.saito.tech/on-discouragement-attacks/
[10] V. Buterin. Rate-Limiting Entry/Exits, Not Withdrawals. Accessed: Feb.
3, 2019. [Online]. Available: https://ethresear.ch/t/rate-limiting-entry-
exits-not-withdrawals/4942
[11] C. Beekhuizen. Validated: Staking on ETH2 #0. Accessed: Nov.
27, 2019. [Online]. Available: https://blog.ethereum.org/2019/11/27/
Validated-Staking-on-eth2-0/
[12] I. Bentov, C. Lee, A. Mizrahi, and M. Rosenfeld, “Proof of activ-
ity: Extending bitcoin’s proof of work via proof of stake,” ACM
SIGMETRICS Perform. Eval. Rev., vol. 42, no. 3, pp. 34–37, 2014.
[13] P4Titan. SlimCoin: A Peer-to-Peer Crypto-Currency With Proof-of-Burn.
Accessed: May 17, 2014. [Online]. Available: http://slimco.in
[14] M. Milutinovic, W. He, H. Wu, and M. Kanwal, “Proof of luck: An
efficient blockchain consensus protocol,” in Proc. ACM 1st Workshop
Syst. Softw. Trusted Execution, 2016, pp. 1–6.
[15] Hyperledger. Hyperledger Fabric. Accessed: Aug. 2020. [Online].
Available: https://www.hyperledger.org/projects/fabric
[16] IBM. IBM Blockchain Services. Accessed: Sep. 2020. [Online].
Available: https://www.ibm.com/blockchain/services
[17] Atonomi. Atonomi: Bringing Trust and Security to IoT. Accessed:
Aug. 2020. [Online]. Available: https://atonomi.io/
[18] Chain of Things Telegram Group. Chain of Things. Accessed: Apr. 2020.
[Online]. Available: https://www.chainofthings.com/
[19] IoTex. Internet of Trusted Things. Accessed: Apr. 2020. [Online].
Available: https://www.iotex.io/
[20] K.-K. R. Choo, Z. Yan, and W. Meng, “Blockchain in industrial iot appli-
cations: Security and privacy advances, challenges and opportunities,”
IEEE Trans. Ind. Informat., vol. 16, no. 6, pp. 4119–4121, Jun. 2020.
[21] Z. Guan et al., “Privacy-preserving and efficient aggregation based on
blockchain for power grid communications in smart communities,” IEEE
Commun. Mag., vol. 56, no. 7, pp. 82–88, Jul. 2018.
[22] S. Pal, T. Rabehaja, M. Hitchens, V. Varadharajan, and A. Hill, “On the
design of a flexible delegation model for the Internet of Things using
blockchain,” IEEE Trans. Ind. Informat., vol. 16, no. 5, pp. 3521–3530,
May 2020.
[23] W. Liang, Y. Fan, K.-C. Li, D. Zhang, and J.-L. Gaudiot, “Secure data
storage and recovery in industrial blockchain network environments,”
IEEE Trans. Ind. Informat., vol. 16, no. 10, pp. 6543–6552, Oct. 2020.
[24] H. Yang, Y. Liang, J. Yuan, Q. Yao, A. Yu, and J. Zhang, “Distributed
blockchain-based trusted multi-domain collaboration for mobile edge
computing in and beyond,” IEEE Trans. Ind. Informat., vol. 16, no. 11,
pp. 7094–7104, Nov. 2020.
[25] M. Keshk, B. Turnbull, N. Moustafa, D. Vatsalan, and K.-K. R. Choo, “A
privacy-preserving framework based blockchain and deep learning for
protecting smart power networks,” IEEE Trans. Ind. Informat., vol. 16,
no. 8, pp. 5110–5118, Aug. 2020.
[26] E. Foundation. Ethereum 2.0 (Serenity) Phases. Accessed: Sep. 2020.
[Online]. Available: https://docs.ethhub.io/ethereum-roadmap/ethereum-
2.0/eth-2.0-phases/
[27] PWC. (2020). Insurance 2020 & Beyond: Reaping the Dividends
of Cyber Resilience. [Online]. Available: https://www.pwc.com/gx/en/
industries/financial-services/publications/insurance-2020-cyber.html
[28] M. M. Khalili, P. Naghizadeh, and M. Liu, “Designing cyber insurance
policies: The role of pre-screening and security interdependence,” IEEE
Trans. Inf. Forensics Security, vol. 13, no. 9, pp. 2226–2239, Sep. 2018.
[29] M. M. Khalili, P. Naghizadeh, and M. Liu, “Embracing risk depen-
dency in designing cyber-insurance contracts,” in Proc. IEEE 55th Annu.
Allerton Conf. Commun. Control Comput. (Allerton), 2017, pp. 926–933.
[30] M. M. Khalili, P. Naghizadeh, and M. Liu, “Designing cyber insurance
policies: Mitigating moral hazard through security pre-screening,” in
Proc. Int. Conf. Game Theory Netw., 2017, pp. 63–73.
[31] M. M. Khalili, M. Liu, and S. Romanosky, “Embracing and con-
trolling risk dependency in cyber-insurance policy underwriting,” J.
Cybersecurity, vol. 5, no. 1, 2019, Art. no. tyz010.
[32] S. Feng, Z. Xiong, D. Niyato, P. Wang, S. S. Wang, and Y. Zhang,
“Cyber risk management with risk aware cyber-insurance in blockchain
networks,” in Proc. IEEE Global Commun. Conf. (GLOBECOM), 2018,
pp. 1–7.
[33] X. Lu, D. Niyato, H. Jiang, P. Wang, and H. V. Poor, “Cyber insurance
for heterogeneous wireless networks,” IEEE Commun. Mag., vol. 56,
no. 6, pp. 21–27, Jun. 2018.
[34] P. Bolton and M. Dewatripont, Contract Theory. Cambridge, MA, USA:
MIT Press, 2005.
[35] J. Li, T. Liu, D. Niyato, P. Wang, J. Li, and Z. Han, “Contract-based
approach for security deposit in blockchain networks with shards,” in
Proc. IEEE Int. Conf. Blockchain (Blockchain), 2019, pp. 75–82.
[36] J. Kang, Z. Xiong, D. Niyato, S. Xie, and J. Zhang, “Incentive mech-
anism for reliable federated learning: A joint optimization approach
to combining reputation and contract theory,” IEEE Internet Things J.,
vol. 6, no. 6, pp. 10700–10714, Dec. 2019.
[37] Z. Xiong, J. Zhao, D. Niyato, P. Wang, and Y. Zhang, “Design of
contract-based sponsorship scheme in stackelberg game for sponsored
content market,” in Proc. IEEE Global Commun. Conf. (GLOBECOM),
2019, pp. 1–6.
[38] J. Li et al., “A contract-theoretic cyber insurance for withdraw delay in
the blockchain networks with shards,” in Proc. IEEE Int. Conf. Commun.
(ICC), 2020, pp. 1–7.
[39] V. Buterin. The Censorship Problem. Accessed: Jan. 28, 2015.
[Online]. Available: https://blog.ethereum.org/2015/06/06/the-problem-
of-censorship/ 28, 2015.
[40] hackingresear.ch. Discouragement Attacks. Accessed: Nov. 12, 2020.
[Online]. Available: https://hackingresear.ch/discouragement-attacks/
[41] V. Buterin. A Griefing Factor Analysis Model. Accessed: Jun. 2018.
[Online]. Available: https://ethresear.ch/t/a-griefing-factor-analysis-
model/2338 2018.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
3106 IEEE TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, VOL. 18, NO. 3, SEPTEMBER 2021
Jing Li received the B.S. and M.S. degrees in
computer science from North China Electric Power
University, Beijing, China, in 2014 and 2018,
respectively. She is currently pursuing the Ph.D.
degree with Electrical and Computer Engineering
Department, University of Houston, USA. Her
research interests include the blockchain and game
theory.
Dusit Niyato (Fellow, IEEE) received the B.Eng.
degree from the King Mongkuts Institute of
Technology Ladkrabang, Thailand, in 1999, and the
Ph.D. degree in electrical and computer engineer-
ing from the University of Manitoba, Canada, in
2008. He is currently a Professor with the School
of Computer Science and Engineering, Nanyang
Technological University, Singapore. His research
interests are in the areas of Internet of Things,
machine learning, and incentive mechanism design.
Choong Seon Hong (Senior Member, IEEE)
received the B.S. and M.S. degrees in electronic
engineering from Kyung Hee University, Seoul,
South Korea, in 1983 and 1985, respectively, and
the Ph.D. degree from Keio University, Tokyo,
Japan, in 1997. He is working as a Professor
with the Department of Computer Science and
Engineering, Kyung Hee University. His research
interests include future Internet, ad hoc networks,
network management, and network security. He has
served as the General Chair, the TPC Chair/Member,
or an Organizing Committee Member for international conferences, such
as NOMS, IM, APNOMS, E2EMON, CCNC, ADSN, ICPP, DIM, WISA,
BcN, TINA, SAINT, and ICOIN. He was an Associate Editor of the IEEE
TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, the Journal
of Communications and Networks, and an Associate Technical Editor of
IEEE Communications Magazine. He is currently an Associate Editor of the
International Journal of Network Management and Future Internet. He is a
member of ACM, IEICE, IPSJ, KIISE, KICS, KIPS, and OSIA.
Kyung-Joon Park (Senior Member, IEEE) received
the B.S. and M.S. degrees in electrical engineer-
ing, and the Ph.D. degree in electrical engineer-
ing and computer science from Seoul National
University, Seoul, South Korea, in 1998, 2000,
and 2005, respectively. From 2005 to 2006, he
was a Senior Engineer with Samsung Electronics,
Suwon, South Korea. From 2006 to 2010, he
was a Postdoctoral Research Associate with the
Department of Computer Science, University of
Illinois at Urbana–Champaign, Champaign, IL,
USA. He is currently a Professor with the Department of Information and
Communication Engineering, Daegu Gyeongbuk Institute of Science and
Technology, Daegu, South Korea. His research interests include resilient
cyber–physical systems and smart production systems.
Li Wang (Senior Member, IEEE) received the
Ph.D. degree from the Beijing University of Posts
and Telecommunications (BUPT), Beijing, China,
in 2009. She is currently a Full Professor with
the School of Computer Science (National Pilot
Software Engineering School), BUPT, where she
is also an Associate Dean and the Heads of
the High Performance Computing and Networking
Laboratory. She is also a Member of the Key
Laboratory, Universal Wireless Communications,
Ministry of Education, China. She also held Visiting
Positions with the School of Electrical and Computer Engineering, Georgia
Tech, Atlanta, GA, USA, from December 2013 to January 2015, and with
the Department of Signals and Systems, Chalmers University of Technology,
Gothenburg, Sweden, from August to November 2015 and July to August
2018. She has authored/coauthored almost 50 journal papers and two books.
Her current research interests include wireless communications, distributed
networking and storage, vehicular communications, social networks, and
edge AI. She was a recipient of the 2013 Beijing Young Elite Faculty for
Higher Education Award, the Best Paper Awards from several IEEE con-
ferences, e.g., IEEE ICCC 2017, IEEE GLOBECOM 2018, IEEE WCSP
2019, and the Beijing Technology Rising Star Award in 2018. She was the
Symposium Chair of IEEE ICC 2019 on Cognitive Radio and Networks
Symposium and the Tutorial Chair of IEEE VTC 2019-fall. She also
serves as the Vice Chair of Meetings and Conference Committee for IEEE
Communication Society Asia–Pacific Board for the term of 2020–2021,
and chairs the special interest group on Social Behavior Driven Cognitive
Radio Networks for IEEE Technical Committee on Cognitive Networks.
She has served on TPC of multiple IEEE conferences, including IEEE
Infocom, Globecom, International Conference on Communications, IEEE
Wireless Communications and Networking Conference, and IEEE Vehicular
Technology Conference in recent years. She currently serves on the edi-
torial boards for IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY,
IEEE TRANSACTIONS ON GREEN COMMUNICATIONS AND NETWORKING,
Computer Networks, IEEE ACCESS, and China Communications.
Zhu Han (Fellow, IEEE) received the B.S. degree
in electronic engineering from Tsinghua University,
in 1997, and the M.S. and Ph.D. degrees in electri-
cal and computer engineering from the University
of Maryland, College Park, in 1999 and 2003,
respectively. From 2000 to 2002, he was an R&D
Engineer of JDSU, Germantown, Maryland. From
2003 to 2006, he was a Research Associate with the
University of Maryland. From 2006 to 2008, he was
an Assistant Professor with Boise State University,
Idaho. He is currently a John and Rebecca Moores
Professor of Electrical and Computer Engineering Department and the
Computer Science Department, University of Houston, Houston, TX, USA,
as well as in the Department of Computer Science and Engineering, Kyung
Hee University, Seoul, South Korea. His research interests include wire-
less resource allocation and management, wireless communications and
networking, game theory, big data analysis, security, and smart grid. He
received the NSF Career Award in 2010, the Fred W. Ellersick Prize of the
IEEE Communication Society in 2011, the EURASIP Best Paper Award for
the Journal on Advances in Signal Processing in 2015, the IEEE Leonard G.
Abraham Prize in the field of Communications Systems (Best Paper Award in
IEEE JSAC) in 2016, and the several best paper awards in IEEE conferences.
He is also the winner of 2021 IEEE Kiyo Tomiyasu Award, for outstand-
ing early to mid-career contributions to technologies holding the promise
of innovative applications, with the following citation: "for contributions
to game theory and distributed management of autonomous communication
networks." He has been a 1% Highly Cited Researcher since 2017 accord-
ing to Web of Science. He is currently an IEEE Communications Society
Distinguished Lecturer from 2015 to 2018, AAAS Fellow since 2019 and
ACM Distinguished Member since 2019.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:10:17 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice