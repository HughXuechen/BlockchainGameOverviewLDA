Multi-Operator Dynamic Spectrum Sharing for Wireless Communications: A Consortium Blockchain Enabled Framework
IEEE TRANSACTIONS ON COGNITIVE COMMUNICATIONS AND NETWORKING, VOL. 9, NO. 1, FEBRUARY 2023 3
Multi-Operator Dynamic Spectrum Sharing for
Wireless Communications: A Consortium
Blockchain Enabled Framework
Zuguang Li, Wei Wang , Member, IEEE, Qihui Wu , Senior Member, IEEE, and Xianbin Wang , Fellow, IEEE
Abstract—To enable secure and efficient dynamic spectrum
sharing (DSS) with guaranteed revenue and quality of service
(QoS) in future wireless communications, we present a consor-
tium blockchain based DSS framework, where the regulators
supervise the whole process of DSS, and thus the revenue of each
participant can be guaranteed. Each mobile network operator
(MNO) on the chain can adaptively act as a spectrum provider
or spectrum requestor based on their demand, and the spectrum
resource allocation is recorded on the chain with a smart contract.
The optimal spectrum pricing and buying strategies are solved
based on a multi-leader multi-follower (MLMF) Stackelberg
game model, and the equilibrium is solved with the proposed
algorithm. We then build a prototype with Hyperledger Fabric
consortium blockchain, and the average latency is evaluated.
Simulations and prototype evaluations validate the feasibility of
blockchain based DSS and show that the average latency increase
with the participants, which provides useful insights for real
applications.
Index Terms—Multi-operator spectrum sharing, consortium
blockchain, smart contract, Stackelberg game.
I. INTRODUCTION
W ITH the ongoing deployment of the fifth generation
(5G) wireless infrastructure, the research for the next
sixth-generation (6G) wireless networks has started, with a
focus to support diverse smart applications, such as virtual and
augmented reality, holographic communications, ultra-high-
resolution video streaming, etc [1]. With such an ambitious
goal, 6G is anticipated to adopt both evolutionary and dis-
ruptive technologies, including space-air-ground integrated
networking for global ubiquitous coverage, and utilization of
full spectrum ranging from low and mid-band at sub-6 GHz
Manuscript received 12 May 2022; revised 25 August 2022; accepted
27 September 2022. Date of publication 6 October 2022; date of current ver-
sion 8 February 2023. This work was supported in part by the National Key
R&D Program of China under Grant 2020YFB1005900, the National Natural
Science Foundation of China under Grant 62001220, the Natural Science
Foundation of Jiangsu Province BK20200440, the Future Network Scientific
Research Fund Project FNSRFP-2021-YB-03, and the Young Elite Scientist
Sponsorship Program, China Association for Science and Technology. The
associate editor coordinating the review of this article and approving it for
publication was Y. Pei. (Corresponding author: Wei Wang.)
Zuguang Li, Wei Wang, and Qihui Wu are with the College of
Electronic and Information Engineering, Nanjing University of Aeronautics
and Astronautics, Nanjing 211106, China (e-mail: zuguang_li@nuaa.edu.cn;
wei_wang@nuaa.edu.cn; wuqihui2014@sina.com).
Xianbin Wang is with the Department of Electrical and Computer
Engineering, Western University, London, ON N6A 3K7, Canada (e-mail:
xianbin.wang@uwo.ca).
Digital Object Identifier 10.1109/TCCN.2022.3212369
frequencies to millimeter wave (mmWave), terahertz (THz),
and optical bands [2].
While 6G is evolving towards higher frequencies, efficient
spectrum management at the sub-6 GHz band still remains
essential due to its superior indoor propagation property.
Disregard the golden spectrum resources at the sub-6 GHz
band are almost exhaustively licensed, it has been reported that
the actual spectrum utilization rate of this band is only around
15% to 85% [3], which is far from an ideal scenario. The
spectrum shortage and its low utilization rate have motivated
researchers to develop dynamic spectrum sharing (DSS) tech-
nologies, which have been very active research topics over the
past two decades [4], [5], [6], [7], [8]. Despite the development
of numerous DSS solutions since the emergence of cognitive
radio (CR) technologies [9], like the licensed shared access
(LSA) system [10] and the spectrum access system (SAS) for
citizens broadband radio service (CBRS) system [11], large-
scale DSS is still not deployed in practice. One main obstacle
lies in the lack of reasonable incentives for spectrum resource
providers, guaranteed quality of service (QoS) for secondary
users, and security and privacy protection for both partici-
pants, which directly results in the reluctance for sharing of
previously licensed spectrum resources.
As an emerging technology with unique property of trans-
parency, anonymity, immutability, and traceability, blockchain
has been regarded as a promising tool to empower DSS
in future wireless communication networks [12], [13], [14].
Leveraging the cryptographic and signature techniques, the
identity of a participant in a blockchain network can be
verified by others, but it does not need to provide any
private information. With the multi-party jointly maintained
distributed ledgers, the spectrum assets ownership, right to
use and corresponding sharing process can be recorded per-
manently on the chain, and thus the revenue of both the
spectrum resource provider and the resource consumer can be
guaranteed. Moreover, any improper spectrum usage, such as
breaking the power and bandwidth limitations, can be iden-
tified with the assistance of off-chain spectrum monitoring.
Particularly, with the deployed smart contract and spectrum
assets information on the chain, spectrum allocation decision
can be made automatically and reach a consensus with mutual
interference avoidance [15]. Compared with the conventional
centralized database based approaches, the blockchain based
approach shows great potential to facilitate secure and efficient
DSS, and it has been considered as a promising solution by
2332-7731 c© 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-6104-7908
https://orcid.org/0000-0001-6796-8364
https://orcid.org/0000-0003-4890-0748
4 IEEE TRANSACTIONS ON COGNITIVE COMMUNICATIONS AND NETWORKING, VOL. 9, NO. 1, FEBRUARY 2023
the Federal Communications Commission (FCC) of the United
States at the 2018 Mobile World Congress (MWC) [16].
It is worth noting that even though existing works [14],
[17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27],
[28], [29] have been discussed to use public or consortium
blockchain for DSS, the detailed operations are still not
clear, and most of them directly follow a framework sim-
ilar to CR, which cannot be applied in practice. Different
from [26] and [28], in this paper, we consider operator level
spectrum sharing, where the regulators supervise the whole
process of DSS. Each micro or virtual mobile network operator
(MNO) can adaptively act as spectrum provider or spectrum
requestor based on their demand, and we design a multi-leader
multi-follower (MLMF) Stackelberg game to achieve optimal
spectrum pricing and resource allocation to maximize the rev-
enue of all participants. The Stackelberg equilibrium of the
game is analysed and is solved through the best response
approach. Moreover, we build a complete simulation envi-
ronment with Hyperledger Fabric to evaluate the performance
of DSS. The contributions of this paper are summarized as
follows:
• We propose a consortium blockchain-based DSS frame-
work, where the regulators are responsible for reg-
ulating the whole process of DSS, which facilitates
the security and efficiency of DSS among different
operators.
• We model the interactions between multiple buyers and
sellers as a MLMF Stackelberg game, where micro or
virtual MNOs can dynamically share or rent spectrum
resources for their own demand. The optimal spectrum
pricing and resource allocation is optimized to maximize
the revenue of all participants, with the constraints of
available bandwidth of each seller operator (SOP), and
budget of each buyer operator (BOP). The Nash equi-
librium is proved to exist and the optimal solution is
obtained with the proposed algorithm.
• We design a smart contract incorporating the MLMF
Stackelberg game, and build a prototype with
Hyperledger Fabric consortium blockchain to ver-
ify the feasibility of our proposed DSS system. The
average latency performance of the blockchain is
evaluated.
The remainder of this paper is organized as follows. We
discuss related works in Section II and present the system
model in Section III. The MLMF Stackelberg game is formu-
lated in Section IV, followed by the equilibrium analysis and
solutions in Section V. In Section VI, simulation results are
presented, and the performance analysis are also discussed.
Finally, conclusions are given in Section VII.
II. RELATED WORKS
Recently, DSS among multiple operators has been intro-
duced by the industry and academia to enable wireless com-
munication services. In 3GPP Release 15 [30], DSS as a
technology was proposed to provide a migration path from
fourth generation (4G) long term evolution (LTE) to 5G new
radio (NR) by allowing LTE and NR to share the same
frequency band. DSS was also included in Release 16 [31]
and further enhanced in Release 17.
There have been some works considering to use blockchain
for DSS in the literature [14], [17], [18], [19], [20], [21], [22],
[23], [24], [25]. Blockchain as a platform for spectrum allo-
cation was proposed in [18], where secondary users (SUs)
obtain the spectrum access right through buying the idle spec-
trum of primary users (PUs). Combining ring signature, a
privacy protection mechanism was proposed to protect nodes’
identities when they upload data. Likewise, a blockchain-
based proof-of-strategy (PoS) consensus scheme for DSS
between PUs and SUs was proposed in [19], where the ring
signature technique was designed as the privacy protection
method for users. In [20], a blockchain-enabled reverse auc-
tion mechanism was devised for radio access network (RAN)
sharing and dynamic users’ service provision in beyond 5G
(B5G) networks, where a public blockchain is used to record
spontaneous service requests made by users, while a pri-
vate blockchain allows operators and other participants to
share spectrum resources. However, most of them directly fol-
low a framework similar to CR, which cannot be applied
in practice. In [17], the authors constructed a blockchain
based decentralized self-organized trading platform for indus-
trial Internet of Things (IIoT) devices, where the interactions
between the cloud provider and miners are modeled as a
Stackelberg game, which assists the lightweight IoT devices
to offload huge computational tasks to the cloud provider.
In [14], the authors proposed a two-tier hierarchical blockchain
empowered dynamic resource sharing architecture, where a
public blockchain is maintained and accessed by all the users,
while a private blockchain supports the DSS for base stations.
Similarly, a blockchain-based spectrum access system com-
prising of two layers of blockchain networks was proposed
in [21], where a global chain is used to serve the servers and
regulator nodes at a global scale, and a local chain is dedicated
for spectrum access management for a local spectrum zone.
In public blockchain (e.g., Bitcoin [32] and Ethereum [33]),
anyone is free and anonymous to join and participate in the
core activities of the blockchain, which is unfavorable for
the regulators to supervise DSS. As a counterpart of pub-
lic blockchain, consortium blockchain can only accept the
approved participants, and thus can be applied to facilitate
DSS with regulation. In [26], the authors devised a con-
sortium blockchain framework to achieve spectrum sharing
in multi-operator wireless communication networks, where a
double auction and free-trading market based on smart con-
tract was designed to enable operators to autonomously share
the spectrum resource. However, the spectrum auction algo-
rithm is finished by matching a bidding queue or comparing
whether the lowest seller price is higher than the highest buyer
price, which is not an optimal strategy and does not provide
an effective incentive for operators to share their spectrum.
In [27], a spectrum-efficient framework based on consortium
blockchain was proposed for human-to-human and machine-
to-machine coexistence in 5G heterogeneous networks, where
PUs (i.e., human-to-human users) can share their unused spec-
trum resources with SUs (i.e., machine-to-machine users).
In [28], to provide high speed network services with reliable
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: MULTI-OPERATOR DSS FOR WIRELESS COMMUNICATIONS 5
Fig. 1. An illustration of consortium blockchain enabled DSS system.
QoS, a blockchain-based framework was proposed to evaluate
5G spectrum sharing and model intra and inter spectrum man-
agement among multiple telecom-operators. However, how to
achieve spectrum sharing is not clearly presented. In [29], a
spectrum trading blockchain model was presented to improve
the efficiency and security of spectrum transactions in vir-
tual optical networks, where a new consensus solution was
proposed to quickly confirm transactions, and a temporary
anonymous transaction was designed to prevent mainstream
attacks. In [34], a hierarchical blockchain and deep reinforce-
ment learning framework was proposed to achieve secure
resource trading in 5G RAN, where a single-leader multi-
follower Stackelberg game was formulated to determine the
buyers’ demands and the seller’s price, and a consortium
blockchain network was deployed to support their resource
trading smart contract.
III. DSS SYSTEM WITH CONSORTIUM BLOCKCHAIN
In this section, we first introduce the DSS system, where
multiple operators form a consortium blockchain to achieve
secure and efficient inter-operator spectrum resource sharing.
Then the operation details of DSS are described.
A. System Overview
As shown in Fig. 1, we consider a DSS scenario in a specific
region, where each operator has one macro base station (MBS)
and several small base stations (SBSs). Different types of user
terminals (e.g., vehicles, unmanned aerial vehicles (UAVs),
and smart phones, etc.) are connected to the corresponding
nearby BSs for wireless services. We assume that the DSS is
conducted among different operators in a slot-by-slot manner.
The BSs monitor spectrum usage within the region, and ana-
lyze spectrum demand at the beginning of each slot. Without
loss of generality, we assume that the duration of each slot is T.
Then, the BSs send the spectrum demand request to the cor-
responding operation administration and maintenance (OAM)
server of each operator, which is responsible for spectrum
assignment and management [26]. According to the request
information collected from the BSs, each OAM server can
determine the spectrum demand during the slot.1 For the ease
of understanding, we summarize the notations in Table I.
To facilitate secure and efficient spectrum sharing, the
operators form a consortium blockchain, where each opera-
tor stands for an organization. The operators can choose to
become seller operators (SOPs) or buyer operators (BOPs)
based on their spectrum demand results at the beginning of
each slot, and they are divided into SOPs group and BOPs
group. The SOPs group consisting of N operators is denoted
as N = {n|n = 1, . . . ,N }. The total available spectrum
resources of SOP n for selling is Bn , with a unit price pn . The
pricing strategies of all SOPs are denoted as p = [p1, . . . , pN ].
Similarly, the BOPs group consisting of M operators is
denoted as M = {m|m = 1, . . . ,M }. We assume that
the total budget of BOP m is Qm with a buying strategy
bm = [bm,1, . . . , bm,N ], where bm,n is the bandwidth bought
by BOP m from SOP n. The buying strategies of all BOPs are
denoted as B = [b1, . . . ,bM ].
For the consortium blockchain, each organization consists
of a client, some peer nodes, and orderer nodes. Peers are
responsible for executing spectrum sharing strategy and trans-
actions while orderers package the transactions and generate
a new block for consensus [21]. To ensure the secure and
robust operation of DSS, there are regulators in the consortium
1The OAM server can calculate the terminals’ spectrum demand by two
methods: (1) The terminals report their spectrum demand to the associated
MBS or SBSs, then the OAM server counts the total spectrum demand col-
lected from the MBS and SBSs; (2) By leveraging the prediction tools, the
OAM server predicts the terminals’ spectrum demand based on the historical
spectrum usage in the specific region.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
6 IEEE TRANSACTIONS ON COGNITIVE COMMUNICATIONS AND NETWORKING, VOL. 9, NO. 1, FEBRUARY 2023
TABLE I
NOTATION
blockchain, which are responsible for regulating the process
of DSS and managing the permissions of nodes. The main
duties of regulators are listed as follows:
1) The regulators synchronize the data on the chain, and
then regulate and audit the whole process of DSS
through mining and analyzing these data. To prevent
the occurrence of risk, the regulators trace the history of
each transaction and monitor the transaction information
of the associated nodes. If the regulators identify vio-
lations, they will have the right to revise and delete
corresponding transactions in that blocks.
2) The regulators are responsible for the certificate autho-
rization of operators before they join the blockchain.
To monitor the running status of nodes, the regulators
can dynamically modify the permissions of nodes, such
as consensus and transaction. If some nodes are found
malicious, the regulators will remove them.
Moreover, smart contract is immutable once deployed,
which guarantees immutability. To achieve automatic exe-
cution of the spectrum sharing strategy between BOPs and
SOPs, the DSS smart contract is deployed on the consor-
tium blockchain. The execution of the DSS smart contract is
restricted to primary nodes that vouch for the results of spec-
trum sharing strategy. To reduce the communication overhead,
one primary node is selected to execute the DSS smart con-
tract based on reputation. The higher reputation of the peer
node, the more likely it is to be selected as the primary node.
Furthermore, the primary node will get reward for executing
the DSS smart contract after finishing spectrum sharing.
Fig. 2. Flowchart of DSS between BOPs and SOPs.
B. Operation Details of DSS
In the DSS system, elliptic curve encryption algorithm is
used to generate digital significance for each organization. In
order to obtain effective supervision, each operator must first
be certified by a certificate authority (CA) before it become a
legitimate organization, and it is licensed to a digital identify
(ID) based on its organizational role. Legal organization will
now receive public-private key pairs and corresponding cer-
tificates for encrypting shared data. When sharing spectrum
with other operators, the operator specifies and presents its
ID. A membership service provider governs the valid ID for
the operator.2 As shown in Fig. 2, the DSS flow consists of
nine phases:
1) On the BOP side, it signs and transmits its spectrum
request message MSGreq to the memory pool via client, which
is expressed as follows:
MSGreq = {idm , sigm , locm ,Qm , feem , slotno}, (1)
where idm , sigm , and locm are ID, digital significance, and
location information of BOP m. feem is the prepaid coin
of BOP m for spectrum sharing, which contains the trans-
action fees for the primary node processing the transactions
and deposit for the violation. slotno is the slot number.
Similarly, to share the available spectrum resource, SOP n
signs and sends its selling message MSGsel to the memory
pool, which is denoted as:
MSGsel = {idn , sign , locn ,Bn ,Cn , feen , slotno}, (2)
where Cn is SOP n’s cost coefficient per unit bandwidth.
2https://hyperledger-fabric.readthedocs.io/en/release-
2.2/identity/identity.html.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: MULTI-OPERATOR DSS FOR WIRELESS COMMUNICATIONS 7
2) The selected primary node collects these messages from
the memory pool.
3) The primary node automatically executes the DSS smart
contract to compute a spectrum sharing strategy.
4) The primary node packages the spectrum messages and
the spectrum sharing strategy into a transaction proposal (i.e.,
proposal) signed with its signature, and then as a client uploads
the proposal to endorsing peers (endorsers).
5) The endorsers simulate the proposal by executing the
operation on another specified smart contract. After the simu-
lation, the endorsers cryptographically sign a message called
endorsement, which contains readset and writeset (together
with metadata such as transaction ID, endorser ID, and
endorser signature), and send it back to the primary node
in a proposal response. The primary node collects endorse-
ments until they satisfy the endorsement policy, which means
that most endorsers agree on the transaction, and then pro-
ceeds to create the transaction and passes it to the ordering
service. Ordering nodes (orderers) establish the total order of
all transactions, batch multiple transactions into blocks, and
output a hash-chained sequence of blocks containing transac-
tions. But they do not participate in the execution nor in the
validation of transactions. Then the orderers send blocks back
to the endorsers. Finally, the endorsers validate blocks includ-
ing the identities of primary node, parameters, the identifier
of the DSS smart contract, and signatures on endorsements of
the transaction.
6) Peers update the spectrum sharing ledger using the
blocks [35].
7) BOPs and SOPs obtain the spectrum sharing strategy
from their ledgers.
8) After that, the rewards for the primary node are paid by
the transaction fees from both BOPs and SOPs.
9) BOPs pay SOPs for buying bandwidth after receiving
the spectrum sharing strategy. If BOPs or SOPs violate the
spectrum sharing rule, their deposits will be confiscated.
IV. MLMF STACKELBERG GAME
In this section, we first give the utility functions of BOPs
and SOPs, and then describe their problems. Specifically, we
model the interactions between BOPs and SOPs as a MLMF
Stackelberg game.
A. Utility Function
Each participant aims to maximize its revenue driven by
its selfishness. SOPs decide the pricing strategies to maximize
their revenues based on the budgets of BOPs and their own
bandwidth constraints. BOPs determine the buying strate-
gies given the pricing strategies of the SOPs. Therefore, the
interactions between SOPs and BOPs can be modeled as a
MLMF Stackelberg game, where SOPs and BOPs act as lead-
ers and followers, respectively. We consider the reasonable
utility functions of SOPs and BOPs, so that the pricing and
buying strategies can be obtained.
For SOPs, the revenue function can be defined as the income
by providing bandwidth to BOPs minuses its service cost and
charge for the primary node. The service cost of SOP n is
directly related to the provided bandwidth and is given by
Cnbm,n , where Cn is the cost per unit bandwidth. Therefore,
for SOP n, the revenue function can be defined as follows:
Rn =
M∑
m=1
(pn − Cn )bm,n . (3)
For BOPs, the more bandwidth they buy, the larger utility
they may receive. The utility should be an increasing function
of the bought bandwidth. Hence, for BOP m, a log function
can be used to model the utility which can be defined as:
Um = wm
N∑
n=1
log
(
1 + ηmbm,n
)−
N∑
n=1
bm,npn , (4)
where wm denotes the weight of BOP m in current DSS, which
is a positive real number. ηm is the transmission channel gain
of BOP m, and ηm ∈ [0, 1].
B. Problem Formulation
Given the utility functions of SOPs and BOPs, we can for-
mulate the optimal spectrum buying and pricing problems for
the lower and upper layers of the MLMF Stackelberg game.
The lower-layer game can be defined as follows.
Problem 1: The problem in the lower layer (followers’ side)
can be formulated as:
max
bm,n
Um
(
bm,n ,B−m , p
)
s .t . bm,n ≥ 0, ∀m ∈ M, ∀n ∈ N ,
N∑
n=1
pnbm,n ≤ Qm , ∀m ∈ M,
M∑
m=1
bm,n ≤ Bn , ∀n ∈ N . (5)
Since the other BOPs’ buying strategies B−m affect the
SOPs’ pricing strategies p, the utility function Um is an
implicit function of B−m . The first constraint in (5) means
that the bandwidth purchased from SOPs is nonnegative. The
second constraint guarantees that the cost of BOP m’s buying
bandwidth cannot exceed its budget Qm . The third constraint
guarantees that the bandwidth which SOP n sells to all BOPs
cannot exceed its own available bandwidth Bn .
At the upper layer, the optimization problem of SOP n can
be defined as follows.
Problem 2: The problem in the upper layer (leaders’ side)
can be formulated as:
max
pn
Rn (pn , p−n ,B)
s .t . pn ≥ Cn , ∀n ∈ N ,
pn ≤ Pn , ∀n ∈ N . (6)
The first constraint in (6) guarantees that the utilities
of SOPs are nonnegative. The second constraint means
that the price pn cannot exceed its maximum value Pn .
Considering the scarcity of spectrum, the less bandwidth
SOPs have, the higher prices they may set. The maximum
price Pn should be related with Bn . Suppose that Pn =
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
8 IEEE TRANSACTIONS ON COGNITIVE COMMUNICATIONS AND NETWORKING, VOL. 9, NO. 1, FEBRUARY 2023
φn exp(−Bn/max{B1, . . . ,BN }), where φn is the weight
factor.
For a MLMF Stackelberg game, its Stackelberg equilibrium
is the Nash equilibrium between the leaders and followers. The
Nash equilibrium of a game is a point at which no player
(leader or follower) can unilaterally increase its utility by
changing its strategy without deteriorating the utilities of the
other players [36]. In this case, the Nash equilibrium point is
expressed by the best response that is the optimal strategy of
one player, which is defined as follows:
Definition 1: Let B∗ and p∗ be the optimal strategies
of BOP and SOP, respectively. The point (B∗, p∗) is the
Stackelberg equilibrium of the MLMF Stackelberg game if
it satisfies the following conditions. For each BOP m,
Um
(
b∗m,n ,B
∗−m , p∗
) ≥ Um
(
bm,n ,B
∗−m , p∗
)
, ∀m ∈ M, (7)
and for each SOP n,
Rn
(
p∗n , p∗−n ,B
∗) ≥ Rn
(
pn , p
∗−n ,B
∗), ∀n ∈ N , (8)
where bm,n and pn are arbitrary feasible strategies for the
BOP and the SOP, respectively.
V. SOLUTION OF THE MLMF STACKELBERG GAME
In this section, we first analyze the existence and uniqueness
of the Nash equilibrium in terms of the lower-layer and upper-
layer problems, respectively. Then, we analyze the solution of
the lower-layer problem, and leverage the root mean square
propagation (RMSProp) algorithm to solve the upper-layer
problem.
A. Lower Layer (Followers’ Side) Analysis
For the lower-layer game, each BOP decides its buying strat-
egy based on the SOPs’ pricing strategies p. We have the
following proposition about the lower-layer Nash equilibrium.
Proposition 1: The Nash equilibrium point of the lower-
layer game exists and is unique, regardless of SOPs’ pricing
strategies p.
Proof: As defined in Problem 1, the strategy space of BOP
m is [0, bmax
m,n ] which is nonempty, closed, and convex, and
bmax
m,n is defined as:
bmax
m,n = min
{
blm,n , b
r
m,n
}
, (9)
where blm,n and brm,n are defined as:
⎧
⎨
⎩
blm,n =
Qm−∑N
n′ �=n
pn′bm,n′
pn
,
brm,n = Bn −∑M
m ′ �=m bm ′,n .
(10)
Therefore, the lower-layer game exists a Nash
equilibrium [37].
The first and second order derivatives of the utility function
Um with respect to bm,n are calculated as:
∂Um
∂bm,n
=
wmηm
1 + ηmbm,n
− pn , (11)
and
∂2Um
∂b2m,n
= − wmη2m(
1 + ηmbm,n
)2 , (12)
where wm ≥ 0 is the profit coefficient of BOP m.
Consequently, we have ∂2Um/∂b2m,n ≤ 0. Thus, the utility
function Um is a concave function with respect to bm,n , and
the problem for each BOP in the lower-layer game is a convex
optimization problem. The interaction among the BOPs forms
a concave M-person game. Therefore, the Nash equilibrium
point of the lower-layer game always exists and is unique.
The first order derivative of the utility function Um should
satisfy (∂Um/∂bm,n )|bm,n=0 ≥ 0, ∀m ∈ M. Otherwise,
BOPs have no motivation to buy bandwidth from SOPs
because of no profit. It means that pn ≤ P̄ , where P̄ =
min{w1η1, . . . ,wM ηM }. We have Cn ≤ pn ≤ Pn based on
the constraints in (6). Therefore, the pricing strategy space of
SOP n is [Cn ,min{Pn , P̄}], which is bounded. According
to Proposition 1, the lower-layer game can be decom-
posed to M distributed optimization problems. Sequentially,
we use the Karush-Kuhn-Tucker (KKT) conditions to solve
Problem 1, and its optimal solution is obtained in the following
proposition.
Proposition 2: For a given pricing strategy p, the optimal
solution for Problem 1 is given by:
b∗m,n =
⎧
⎪⎪⎨
⎪⎪⎩
0, if pn ∈ C1,
blm,n , if pn ∈ C2,
brm,n , if pn ∈ C3,
wm
pn
− 1
ηm
, else,
(13)
where C1, C2, and C3 are defined in (25), (27), and (29),
respectively.
Proof: Please refer to Appendix A.
B. Upper Layer (Leaders’ Side) Analysis
On the leaders’ side, each SOP determines its unit price
pn to maximize its revenue Rn . Note that the pricing strate-
gies of SOPs directly affect the buying strategies of BOPs.
Consequently, the pricing strategies of SOPs affect each
other’s revenue. The upper-layer game among SOPs is non-
cooperative and competitive. In the following, we will analyze
the Nash equilibrium of the upper-layer game, and design an
algorithm to find its solution.
For the upper-layer game, we first prove the existence and
uniqueness of its Nash equilibrium point.
Proposition 3: The Nash equilibrium point of the upper-
layer game exists and is unique.
Proof: Please refer to Appendix B.
Given the pricing strategies of all leaders, the followers will
determine their buying strategies. For the MLMF Stackelberg
game, we have the following proposition.
Proposition 4: The Stackelberg equilibrium point of the
MLMF Stackelberg game exists and is unique.
Proof: As analyzed in Proposition 2, each BOP can find
its optimal buying strategy, which is unique given the pricing
strategies. Each SOP in the upper-layer game has a unique
Nash equilibrium point, based on Proposition 3. Thus, we can
conclude that the Stackelberg equilibrium point of the MLMF
Stackelberg game exists and is unique.
The Nash equilibrium point of the lower-layer game can
be found based on Proposition 2, given in (13). However,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: MULTI-OPERATOR DSS FOR WIRELESS COMMUNICATIONS 9
the Nash equilibrium point of the upper-layer game cannot
be expressed in a closed form, and can only be calculated
through numerical manners. Next, we leverage the RMSProp
algorithm with an adaptive learning rate to find the numeri-
cal solution of the upper-layer game, which is an extension
of gradient descent in order to locate the optimization of an
function. In the RMSProp algorithm, the gradient of the objec-
tive function gradually approaches or becomes zero based on
the cyclic iteration scheme. At the i-th iteration, the pricing
strategy of SOP n is defined as:
pn,i+1 = pn,i −
δign,i
g2n,i + ε
, (14)
where δi is the adaptive learning rate at the i-th iteration.
ε (ε > 0) is a constant which avoids division by zero. gn,i
denotes the partial derivative of the objective function of SOP
n at the i-th iteration, defined as follows:
gn,i =
∂Rn
(
pn,i ,B, p−n,i
)
∂pn,i
. (15)
Then, the optimal solution of the upper-layer game can be
solved through several iterations. The detail of the optimal
pricing and demand optimization algorithm is shown in
Algorithm 1. We have the following lemma for the RMSProp
algorithm.
Lemma 1: The RMSProp algorithm will converge at a rate
of O (log(Θ)/
√
Θ), where Θ is the maximum rounds of
iteration.
Proof: The convergence of the RMSProp algorithm has been
proved in [38]. The upper-layer game among SOPs is conver-
gent by using a batch size as large as the number of maximum
rounds Θ, and its convergence rate is O (log(Θ)/
√
Θ) under
satisfying the necessary restrictions listed in [38].
VI. SIMULATION RESULTS
In this section, we focus on the spectrum sharing in the con-
sortium blockchain to verify the feasibility of our design. We
first show the numerical results to validate the theoretical anal-
ysis and evaluate the performance of the MLMF Stackelberg
game. Then, we evaluate the performance of spectrum sharing
in Hyperledger Fabric.3
A. Evaluation of the MLMF Stackelberg Game
We consider M BOPs and N SOPs in the spectrum sharing
market, as illustrated in Fig. 1. We assume that SOPs provide
the same spectrum leasing service for all BOPs, which means
that the buying strategies of BOPs are determined only by
their prices. Parameters in the RMSProp algorithm are set as
δi = 0.001, ε = 10−6, and γi = 0.9 which is similar to [39],
at each iteration.
First, we analyze the convergence of the MLMF Stackelberg
game, where the bandwidths provided by 5 SOPs are {Bn} =
{20, 40, 60, 80, 100} MHz. The initial prices of all SOPs are
set as 2, i.e., pn = 2, ∀n ∈ N . All cost coefficients of SOPs
3We have uploaded all the simulation codes and data to GitHub at
https://github.com/lizuguang/DSS.
Algorithm 1 Optimal Pricing and Demand Optimization
Algorithm
Input: The number of iterations I, budgets of all BOPs {Qm},
initial prices of all SOPs {pn}, adaptive learning rates
{δi}, constants ε and ξ, and momentum parameters {γi};
Output: The buying strategies B for BOPs, and the pricing
strategies p for SOPs;
1: // Initialize U, R, J, K, j = 0, and k = 0;
2: for i = 1 to I do
3: // Calculate the buying strategies at the lower-layer
4: game;
5: while ||U−Uold || > ξ and j < J do
6: Uold = U;
7: for m = 1 to M do
8: for n = 1 to N do
9: Calculate bm,n according to (13);
10: B[m][n] = bm,n ; // B updates bm,n ;
11: end for
12: Calculate Um according to (4);
13: U[m] = Um ; // U updates Um ;
14: end for
15: j = j + 1;
16: end while
17: // Calculate the pricing strategies at the upper-layer
18: game;
19: while ||R−Rold || > ξ and k < K do
20: Rold = R;
21: for n = 1 to N do
22: Calculate gn according to (15);
23: Calculate pn according to (14);
24: p[n] = pn ; // p updates pn ;
25: Calculate Rn according to (3);
26: R[n] = Rn ; // R updates Rn ;
27: end for
28: k = k + 1;
29: end while
30: if ||U−Uold || < ξ and ||R−Rold || < ξ then
31: break
32: end if
33: end for
34: return (B, p)
are assumed to 1, i.e., Cn = 1, ∀n ∈ N , similar to the config-
uration in [8]. The weight factor of SOP n is set to φn = 10.
The BOPs’ budgets are set to follow a Poisson distribution
with a mean value of 30, i.e., Qm ∼ Poisson(30). The BOPs’
profit coefficients {wm} are set to follow an uniform distribu-
tion between 10 and 20. Similarly, the bandwidth efficiencies
{ηm} are set to follow an uniform distribution between 0.7
and 0.9.
As shown in Fig. 3, the price of each SOP gradually
increases at first, and then they reach their plateaus after about
10 iterations, which means that the upper-layer game reaches
the Nash equilibrium. We can observe that the less bandwidth
SOP owns, the higher price it will set, which is straightfor-
ward and follows the spectrum trading market. In Fig. 4, the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
10 IEEE TRANSACTIONS ON COGNITIVE COMMUNICATIONS AND NETWORKING, VOL. 9, NO. 1, FEBRUARY 2023
Fig. 3. The pricing strategy of each SOP.
Fig. 4. The revenue of each SOP.
Fig. 5. Bought bandwidth of one BOP versus its budget, where B1 = 40,
B2 = 80, and B3 = 120, respectively.
revenue of each SOP increases and then fluctuates at first,
because the update of a SOP’s pricing strategy will affect other
SOPs’ utilities. In addition, we can obtain that the SOP own-
ing more bandwidth sets a lower price, but it still achieve a
higher revenue.
After that, we consider a 3 SOPs and 30 BOPs cases, where
SOPs provide 40MHz, 80MHz, and 120MHz bandwidth,
Fig. 6. Revenue of each SOP in the proposed algorithm versus in a fixed
pricing approach, where SOP 2 and SOP 4 provide 40MHz and 80MHz,
respectively.
respectively. The unit prices and cost coefficients of SOPs
remain the same as above. The budgets of BOPs follow
Qm ∼ Poisson(20). For BOPs, the profit coefficient is 10,
i.e., wm = 10, and the bandwidth efficiency is 0.8, i.e.,
ηm = 0.8, ∀m ∈ M. We select one BOP and vary its budget
from 0 to 40, with a step size 2. As illustrated in Fig. 5, the
BOP can not buy bandwidth from SOP 1 with the highest price
when the BOP’s budget is very low. The BOP’s bandwidth
bought from each SOP increases gradually when its budget is
less than 10. After that, the BOP’s bought bandwidth keeps
steady, which is because of the limited bandwidth of SOPs.
Then, we evaluate the revenue of each SOP in the proposed
algorithm and compare with a fixed pricing approach. In this
simulation, the parameters except the budget Qm are the same
as in the first simulation. All BOPs’ budgets are identical and
we vary each BOP’s budget Qm from 0 to 40, with a set size
4. The price of each SOP is the initial price in the fixed pricing
approach. As illustrated in Fig. 6, when the total budgets of
BOPs is less than 400, the revenue of SOP 2 in the proposed
algorithm is lower than that in the fixed pricing approach. It
suggests that a SOP with a high price obtains a lower revenue
in the proposed algorithm, when there are abundant spectrum
resources. However, the revenue of each SOP in the proposed
algorithm is more than that in the fixed pricing approach, when
the BOPs’ demand of spectrum resource exceeds SOPs’ sup-
ply, e.g., total budgets of BOPs more than 600. Besides, each
SOP reaches its maximum revenue faster in the fixed pricing
approach. Because it is easier to run out of bandwidth under
a fixed price, when the bandwidth demand is high.
Finally, we compare the convergence time of the proposed
algorithm with Greedy-SM and Random-SM mechanisms
proposed in [40], which are based on the greedy algorithm to
match buyers with sellers. The convergence time is the time
from the beginning of an algorithm to the completion of its
convergence. As shown in Fig. 7, we can observe that the
convergence time of the proposed algorithm is shorter than
Greedy-SM and Random-SM. This is because the proposed
algorithm always maximizes the utilities of BOPs and SOPs
with simple judgements and calculations according to (13)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: MULTI-OPERATOR DSS FOR WIRELESS COMMUNICATIONS 11
Fig. 7. Convergence time versus the number of BOPs, where the number of
BOPs is tenfold as many as SOPs.
TABLE II
CONFIGURATIONS OF LINUX DESKTOP
and (14), while Greedy-SM and Random-SM obtain the local
optimal utilities of operators with complex calculations.
From the above simulations, we can observe that the game
reaches the Nash equilibrium after 10 iterations, but the num-
ber of iterations I can be set to 20 in the DSS smart contract
for ensuring the convergence of the game. The buying and
pricing strategies formulated in the MLMF Stackelberg game
are rational to BOPs and SOPs in both abundant and short
spectrum scenarios.
B. Evaluation of Spectrum Sharing in Hyperledger Fabric
In this section, we evaluate the performance of spec-
trum sharing in Hyperledger Fabric. As one of consortium
blockchains, Fabric is a extensible blockchain system for
running distributed applications and one of the Hyperledger
projects hosted by the Linux Foundation [41]. Compared to
the traditional blockchain, Fabric reaches a consensus much
more quickly and with less effort, and achieves higher end-to-
end throughput. Consequently, we leverage Fabric to evaluate
the spectrum sharing assignment.
We implement the deployment of a Fabric v2.2 network
on 4 Linux desktops, and each that has the same configura-
tions as illustrated in Table II. Each Linux desktop consists of
the same number of operator organizations, and organizations
are deployed in docker containers as virtual networks. Each
organization includes a peer node that also acts as leader, com-
mitting, endorsing, and anchor peer, and an orderer node. We
Fig. 8. Data instance of block header created in the DSS system, where the
data hash of the transaction information is listed in the red box.
select the Fabric’s native Kafka consensus, an efficient con-
sensus protocol, for the ordering service. In the blockchain
network, the batch timeout is fixed to 2 seconds (s), the batch
size is set to 32KB, and the maximum message count is fixed
to 10 transactions.4 According to the regulations in Fabric, a
block is synchronized to distributed ledgers of organizations
in three cases after the consensus peers reach a consensus on
the block: (1) The delay of block synchronization triggers the
maximum synchronization timeout, which is set to 1s in our
designed blockchain network; (2) The number of blocks stored
in a cache triggers the maximum block number, which is set
to 30 in our designed blockchain network; (3) The data size
in the cache triggers the maximum data size, which is set to
512KB in our designed blockchain network.
Our evaluations focus on the core task of spectrum shar-
ing (i.e., running the DSS smart contract and the primary
node sending out the buying and pricing strategies to con-
sensus peers), as it most directly impacts the spectrum sharing
system’s QoS. Specifically, two metrics are evaluated: submis-
sion time, which is the time between when the primary node
starts to calculate the buying and pricing strategies after col-
lecting spectrum sharing requests (i.e., step 3 in Fig. 2) and
when each endorsing peer in each organization receives the
strategies (i.e., step 4 in Fig. 2), and latency, which is the time
between the buying and pricing strategies calculated by the pri-
mary node (i.e., step 3 in Fig. 2) and all operators receiving
the buying and pricing strategies (i.e., step 7 in Fig. 2).
In the proposed DSS system, a block of the spectrum
sharing ledger supports all transaction information, e.g., the
requesting and selling information, the buying and pricing
strategy, and ID of each operator, etc. A block header of data
instance is listed, as shown in Fig. 8. We can get data hash,
block number, block size, and create timestamp, etc., by query-
ing the block header. The block header only stores the data
Hash of the transaction information, while it is recorded in the
block body. As listed in Table III, the data recorded in a block
gradually increases with the organization’s continual entry to
the system, which results in the increase of the block size and
submission time, especially when the number of organizations
is very large.
4The batch timeout defines the amount of time to wait after the first trans-
action arrives for additional transactions before cutting a block, the batch
size is the size of transactions in a block, and the max message count is the
maximum number of messages to permit in a batch.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
12 IEEE TRANSACTIONS ON COGNITIVE COMMUNICATIONS AND NETWORKING, VOL. 9, NO. 1, FEBRUARY 2023
Fig. 9. Submission time versus the number of organizations.
TABLE III
BLOCK SIZE
Fig. 10. Average latency versus number of consensus nodes.
Then, we evaluate the submission time. As shown in Fig. 9,
the mean values of the submission time are 5.46s, 5.49s,
5.70s, 6.16s and 6.73s under 10, 20, 30, 40, and 50 orga-
nizations, respectively, and they gradually increase as the
number of organizations increases. The intervals between the
submission time are 0.03s, 0.21s, 0.46s, and 1.32s, respec-
tively. This suggests that the intervals of submission time
gradually increase with organizations continually joining the
system.
Finally, we compare the average latency under three clas-
sical consensus algorithms, i.e., practical Byzantine fault
tolerance (PBFT) [42], Raft [43], and Kafka. As shown in
Fig. 10, the average latency increases gradually with the num-
ber of consensus nodes. However, compared with Raft and
Kafka, PBFT produces longer latency to reach a consen-
sus on the spectrum sharing strategy, especially when the
number of consensus nodes is larger than 16, whereas the
latencies with Raft and Kafka are less affected by the num-
ber of consensus nodes. In addition, the performance of
Kafka is better than that of Raft. That is because Kafka does
not rely on the peer-to-peer communication between nodes.
Compared with Raft and PBFT, Kafka is more suitable for
multi-operator DSS scenario, which produces less end-to-end
latency.
VII. CONCLUSION
In this paper, we have proposed a consortium blockchain-
based secure and efficient DSS framework with guaranteed
revenue and QoS. Each operator can adaptively act as spec-
trum provider or spectrum requestor based on its demand,
and the spectrum allocation is made on the chain with the
DSS smart contract. To guarantee the fairness of spectrum
sharing, we have presented a MLMF Stackelberg game to
determine the buying and pricing strategies of BOPs and
SOPs, and developed the solution leveraging KKT conditions
and RMSProp algorithm. We have implemented the DSS in
Hyperledger Fabric, and evaluated the latency and through-
put performance, which shows that the submission time and
average latency increases with the participants.
APPENDIX A
PROOF OF PROPOSITION 2
Let λ1m , λ2m and λ3m be Lagrange multipliers that are asso-
ciated with the constraints in Problem 1, respectively. Then,
the Lagrangian function is given as follows:
Lm
(
bm,n
)
= Um
(
bm,n
)
+ λ1mbm,n
+ λ2m
(
Qm −
N∑
n=1
pnbm,n
)
+ λ3m
(
Bn −
M∑
m=1
bm,n
)
. (16)
The KKT conditions of Problem 1 are listed as follows.
Stationarity condition:
∂Lm
(
bm,n
)
∂bm,n
=
wmηm
1 + ηmbm,n
− pn + λ1m
− λ2mpn − λ3m = 0. (17)
Primal feasibility conditions:
bm,n ≥ 0, (18)
Qm −
N∑
n=1
pnbm,n ≥ 0, (19)
Bn −
M∑
m=1
bm,n ≥ 0. (20)
Dual feasibility conditions:
λ1m , λ2m , λ3m ≥ 0. (21)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: MULTI-OPERATOR DSS FOR WIRELESS COMMUNICATIONS 13
Complementary slackness conditions:
λ1mbm,n = 0, (22)
λ2m
(
Qm −
N∑
n=1
pnbm,n
)
= 0, (23)
λ3m
(
Bn −
M∑
m=1
bm,n
)
= 0. (24)
According to Proposition 1, the strategy space of BOPs is
[0, bmax
m,n ], where bmax
m,n > 0, i.e., blm,n > 0 and brm,n > 0. The
optimal solution of the problem is given as follows considering
four different cases.
Case 1: bm,n = 0. In this case, the minimum bought
bandwidth constraint is active. Substitute bm,n = 0 into (23)
and (24), we have λ2m = 0 and λ3m = 0. Combing (17), we
have λ1m = pn − wmηm ≤ 0. If pn < wmηm , the con-
dition (21) cannot be satisfied as λ1m < 0, which means
that bm,n = 0 is not feasible in this case. Otherwise, if
pn = wmηm , we have λ1m = 0, and the optimal solution
is bm,n = 0. Therefore, to achieve the optimal solution in
Case 1, the condition with respect to pn denoted as C1, is
given by:
pn = wmηm . (25)
Case 2: bm,n = blm,n . In this case, the maximum
bought bandwidth constraint is active. As defined in (9),
it satisfies blm,n ≤ brm,n , thus we have pn ≥ (Qm −∑N
n ′ �=n pn ′bm,n ′)/(Bn −∑M
m ′ �=m bm ′,n ). According to (22)
and (24), we have λ1m = 0 and λ3m = 0. Substitute
bm,n = blm,n , λ1m = 0, and λ3m = 0 into (17), we have
λ2m =
wmηm(
1 + ηmblm,n
)
pn
− 1. (26)
If λ2m in (26) satisfies λ2m ≥ 0, i.e., pn ≤ wmηm/(1 +
ηmblm,n ), all of the KKT conditions are satisfied, thus the
optimal solution is bm,n = blm,n . Otherwise, the optimal
solution does not hold in this case. Therefore, to achieve the
optimal solution in Case 2, the condition with respect to pn
denoted as C2, is given by:
Qm −∑N
n ′ �=n pn ′bm,n ′
Bn −∑M
m ′ �=m bm ′,n
≤ pn ≤ wmηm
1 + ηmblm,n
. (27)
Case 3: bm,n = brm,n . In this case, brm,n ≤ blm,n , thus we
have pn ≤ (Qm −∑N
n ′ �=n pn ′bm,n ′)/(Bn −∑M
m ′ �=m bm ′,n ).
Similarly, we have λ1m = 0 and λ2m = 0 based on (22)
and (23). Substitute them into (17), we have
λ3m =
wmηm
1 + ηmbm,n
− pn . (28)
If λ3m in (28) satisfies λ3m ≥ 0, i.e., pn ≤ wmηm/(1 +
ηmbrm,n ), all of the KKT conditions are satisfied, and the
optimal solution is bm,n = brm,n . Otherwise, the optimal
solution does not hold in this case. Therefore, to achieve the
optimal solution in Case 3, the condition with respect to pn
denoted as C3, is given by:
pn ≤ min
{
Qm −∑N
n ′ �=n pn ′bm,n ′
Bn −∑M
m ′ �=m bm ′,n
,
wmηm
1 + ηmbrm,n
}
. (29)
Case 4: 0 < bm,n < bmax
m,n . In this case, the maxi-
mum bought bandwidth constraint and the minimum bought
bandwidth constraint are inactive. According to the condi-
tions (22), (23), and (24), we have λ1m = 0, λ2m = 0, and
λ3m = 0. Substitute them into (17), we obtain the optimal
solution bm,n = wm/pn − 1/ηm .
APPENDIX B
PROOF OF PROPOSITION 3
The strategy space of SOPs is [Cn ,min{Pn , P̄}], which
is nonempty, closed, and convex. Therefore, the upper-layer
game exists a Nash equilibrium. As given in Proposition 2, the
optimal solution for the buying strategy is one of four cases.
The first and second order derivatives of b∗m,n with respect to
pn are calculated as:
∂b∗m,n
∂pn
=
⎧
⎪⎪⎨
⎪⎪⎩
0, if pn ∈ C1∪C3,
−Qm−∑N
n′ �=n
pn′bm,n′
p2
n
, if pn ∈ C2,
−wm
p2
n
, else,
(30)
and
∂2b∗m,n
∂p2n
=
⎧
⎪⎪⎨
⎪⎪⎩
0, if pn ∈ C1∪C3,
2
(
Qm−∑N
n′ �=n
pn′bm,n′
)
p3
n
, if pn ∈ C2,
2wm
p3
n
, else.
(31)
According to the revenue function (3), the first and second
order derivatives of Rn with respect to pn are calculate as:
∂Rn
∂pn
=
M∑
m=1
(
b∗m,n + (pn − Cn )
∂b∗m,n
∂pn
)
, (32)
and
∂2Rn
∂p2n
=
M∑
m=1
(
2
∂b∗m,n
∂pn
+ (pn − Cn )
∂2b∗m,n
∂p2n
)
. (33)
As pn − Cn < pn , substituting (30) and (31) into (33), we
have ∂2Rn/∂p
2
n ≤ 0. Thus, the utility function Rn of SOP is a
concave function with respect to pn , and the Nash equilibrium
point of the upper-layer game always exists and is unique.
REFERENCES
[1] S. Chen, Y.-C. Liang, S. Sun, S. Kang, W. Cheng, and M. Peng, “Vision,
requirements, and technology trend of 6G: How to tackle the challenges
of system coverage, capacity, user data-rate and movement speed,” IEEE
Wireless Commun., vol. 27, no. 2, pp. 218–228, Apr. 2020.
[2] Z. Liao, C. Chen, Y. Ju, C. He, J. Jiang, and Q. Pei, “Multi-controller
deployment in SDN-enabled 6G space–air–ground integrated network,”
Remote Sens., vol. 14, no. 5, p. 1076, Feb. 2022.
[3] P. Kolodzy and I. Avoidance, “Spectrum policy task force,” Fed.
Commun. Comm., Washington, DC, USA, Rep. ET Docket 02-135,
Nov. 2002.
[4] P. Gu, R. Li, C. Hua, and R. Tafazolli, “Dynamic cooperative spectrum
sharing in a multi-beam LEO-GEO co-existing satellite system,” IEEE
Trans. Wirel. Commun., vol. 21, no. 2, pp. 1170–1182, Feb. 2022.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
14 IEEE TRANSACTIONS ON COGNITIVE COMMUNICATIONS AND NETWORKING, VOL. 9, NO. 1, FEBRUARY 2023
[5] Z. Li, W. Wang, J. Guo, Y. Zhu, L. Han, and Q. Wu, “Blockchain-
empowered dynamic spectrum management for space-air-ground inte-
grated network,” Chin. J. Electron., vol. 31, pp. 456–466, May 2022.
[6] J. Park, J. G. Andrews, and R. W. Heath, “Inter-operator base station
coordination in spectrum-shared millimeter wave cellular networks,”
IEEE Trans. Cogn. Commun. Netw., vol. 4, no. 3, pp. 513–528,
Sep. 2018.
[7] S. Biswas, A. Bishnu, F. A. Khan, and T. Ratnarajah, “In-band full-
duplex dynamic spectrum sharing in beyond 5G networks,” IEEE
Commun. Mag., vol. 59, no. 7, pp. 54–60, Jul. 2021.
[8] B. Qian, H. Zhou, T. Ma, K. Yu, Q. Yu, and X. Shen, “Multi-operator
spectrum sharing for massive IoT coexisting in 5G/B5G wireless
networks,” IEEE J. Sel. Areas Commun., vol. 39, no. 3, pp. 881–895,
Mar. 2021.
[9] Y. Xu, J. Wang, Q. Wu, A. Anpalagan, and Y. Yao, “Opportunistic
spectrum access in cognitive radio networks: Global optimization using
local interaction games,” IEEE J. Sel. Top. Signal Process., vol. 6, no. 2,
pp. 180–194, Apr. 2012.
[10] M. D. Mueck, V. Frascolla, and B. Badic, “Licensed shared access—
State-of-the-art and current challenges,” in Proc. 1st Int. Workshop Cogn.
Cell. Syst. (CCS), 2014, pp. 1–5.
[11] M. M. Sohul, M. Yao, T. Yang, and J. H. Reed, “Spectrum access system
for the citizen broadband radio service,” IEEE Commun. Mag., vol. 53,
no. 7, pp. 18–25, Jul. 2015.
[12] Z. Sun, W. Liang, F. Qi, Z. Dong, and Y. Cai, “Blockchain-based
dynamic spectrum sharing for 6G UIoT networks,” IEEE Netw., vol. 35,
no. 5, pp. 143–149, Sep./Oct. 2021.
[13] H. Zhang, S. Leng, F. Wu, and H. Chai, “A DAG blockchain enhanced
user-autonomy spectrum sharing framework for 6G-enabled IoT,” IEEE
Internet Things J., vol. 9, no. 11, pp. 8012–8023, Jun. 2022.
[14] S. Hu, Y.-C. Liang, Z. Xiong, and D. Niyato, “Blockchain and artificial
intelligence for dynamic resource sharing in 6G and beyond,” IEEE
Wireless Commun., vol. 28, no. 4, pp. 145–151, Aug. 2021.
[15] M. B. H. Weiss, K. Werbach, D. C. Sicker, and C. E. C. Bastidas, “On
the application of blockchains to spectrum management,” IEEE Trans.
Cogn. Commun. Netw., vol. 5, no. 2, pp. 193–205, Jun. 2019.
[16] “Remarks of commissioner Jessica Rosenworcel at mobile world
congress Americas,” Fed. Commun. Comm., Los Angeles, CA, USA,
document DOC-354091A1, Sep. 2018. [Online]. Available: https://docs.
fcc.gov/public/attachments/DOC-354091A1.pdf
[17] H. Yao, T. Mai, J. Wang, Z. Ji, C. Jiang, and Y. Qian, “Resource trading
in blockchain-based Industrial Internet of Things,” IEEE Trans. Ind.
Informat., vol. 15, no. 6, pp. 3602–3609, Jun. 2019.
[18] J. Ye, X. Kang, Y.-C. Liang, and S. Sun, “A trust-centric privacy-
preserving blockchain for dynamic spectrum management in IoT
networks,” IEEE Internet Things J., vol. 9, no. 15, pp. 13263–13278,
Aug. 2022.
[19] H. Zhang, S. Leng, and H. Chai, “A blockchain enhanced dynamic spec-
trum sharing model based on proof-of-strategy,” in Proc. IEEE Int. Conf.
Commun. (ICC), 2020, pp. 1–6.
[20] F. Wilhelmi and L. Giupponi, “On the performance of blockchain-
enabled RAN-as-a-service in beyond 5G networks,” in Proc. IEEE
Global Commun. Conf. (GLOBECOM), 2021, pp. 1–6.
[21] Y. Xiao et al., “Decentralized spectrum access system: Vision, chal-
lenges, and a blockchain solution,” IEEE Wireless Commun., vol. 29,
no. 1, pp. 220–228, Feb. 2022.
[22] R. Zhu, H. Liu, L. Liu, X. Liu, W. Hu, and B. Yuan, “A blockchain-
based two-stage secure spectrum intelligent sensing and sharing auction
mechanism,” IEEE Trans. Ind. Informat., vol. 18, no. 4, pp. 2773–2783,
Aug. 2022.
[23] T. Maksymyuk et al., “Blockchain-empowered framework for
Decentralized network management in 6G,” IEEE Commun. Mag.,
vol. 58, no. 9, pp. 86–92, Sep. 2020.
[24] Z. Li, W. Wang, J. Guo, Y. Zhu, L. Han, and Q. Wu, “Blockchain-
assisted dynamic spectrum sharing in the CBRS band,” in Proc.
IEEE/CIC Int. Conf. Commun. China (ICCC), 2021, pp. 864–869.
[25] A. Khanna, P. Rani, T. H. Sheikh, D. Gupta, V. Kansal, and J. J. P. C.
Rodrigues, “Blockchain-based security enhancement and spectrum sens-
ing in cognitive radio network,” Wireless Personal Commun., Jul. 2021.
[26] S. Zheng, T. Han, Y. Jiang, and X. Ge, “Smart contract-based spec-
trum sharing transactions for multi-operators wireless communication
networks,” IEEE Access, vol. 8, pp. 88547–88557, 2020.
[27] Z. Zhou, X. Chen, Y. Zhang, and S. Mumtaz, “Blockchain-empowered
secure spectrum sharing for 5G heterogeneous networks,” IEEE Netw.,
vol. 34, no. 1, pp. 24–31, Jan./Feb. 2020.
[28] P. Gorla, V. Chamola, V. Hassija, and N. Ansari, “Blockchain based
framework for modeling and evaluating 5G spectrum sharing,” IEEE
Netw., vol. 35, no. 2, pp. 229–235, Mar./Apr. 2021.
[29] L. Xue, W. Yang, W. Chen, and L. Huang, “STBC: A novel blockchain-
based spectrum trading solution,” IEEE Trans. Cogn. Commun. Netw.,
vol. 8, no. 1, pp. 13–30, Mar. 2022.
[30] Introduction of a New NR Band for LTE/NR Spectrum Sharing in Band
41/n41 (Rel-15), 3GPP Standard TS 38.331 V15.6.0, Jun. 2019.
[31] Introduction of Enhanced Support for Dynamic Spectrum Sharing (Rel-
16), 3GPP Standard TS 38.211 V16.0.0, Dec. 2019.
[32] S. Nakamoto. “Bitcoin: A peer-to-peer electronic cash system:
Decentralized business Review.” 2008. [Online]. Available: https://
bitcoin.org/bitcoin.pdf
[33] G. Wood et al. “Ethereum: A secure decentralised generalised transaction
ledger.” Ethereum Project Yellow paper. 2014. [Online]. Available: https:
//ethereum.github.io/yellowpaper/paper.pdf
[34] G. O. Boateng, D. Ayepah-Mensah, D. M. Doe, A. Mohammed, G. Sun,
and G. Liu, “Blockchain-enabled resource trading and deep reinforce-
ment learning-based autonomous RAN slicing in 5G,” IEEE Trans. Netw.
Service Manag., vol. 19, no. 1, pp. 216–227, Mar. 2022.
[35] “Hyperledger architecture, volume 1: Introduction to hyper-
ledger business blockchain design philosophy and consensus.”
Hyperledger Architecture Working Group (WG). Aug. 2017. [Online].
Available: https://www.hyperledger.org/wp-content/uploads/2017/08/
Hyperledger_Arch_WG_Paper_1_Consensus.pdf
[36] M. J. Osborne, An Introduction to Game Theory. New York, NY, USA:
Oxford Univ. Press, 2004.
[37] S. Park, “Existence theorems for generalized Nash equilibrium prob-
lems,” Banged Int. J. Math. Comput. Sci, vol. 1, no. 1, pp. 42–51,
Apr. 2015.
[38] F. Zou, L. Shen, Z. Jie, W. Zhang, and W. Liu, “A sufficient condi-
tion for Convergences of adam and RMSProp,” in Proc. IEEE/CVF
IEEE Comput. Soc. Conf. Comput. Vis. Pattern Recognit. (CVPR), 2019,
pp. 11127–11135.
[39] G. Hinton, N. Srivastava, and K. Swersky, Coursera Lectures, Irvine,
CA, USA. Neural Networks for Machine Learning. (2012). [Online].
Available: https://www.youtube.com/watch?v=LN0xtUuJsEI&list=
PLoRl3Ht4JOcdU872GhiYWf6jwrk_SNhz9&index=42
[40] N. Chen, N. Gravin, and P. Lu, “On the approximability of budget
feasible mechanisms,” in Proc. 22nd Annu. ACM-SIAM Symp. Discr.
Algorithms, 2011, pp. 685–699.
[41] E. Androulaki et al., “Hyperledger fabric: A distributed operating system
for permissioned blockchains,” in Proc. 13th Eur. Conf. Comput. Syst.,
2018, pp. 1–15.
[42] M. Castro and B. Liskov, “Practical Byzantine fault tolerance,” in Proc.
3rd Symp. Oper. Syst. Des. Implement., 1999, pp. 173–186.
[43] D. Ongaro and J. Ousterhout, “In search of an understandable consensus
algorithm,” in Proc. USENIX Annu. Tech. Conf., Philadelphia, PA, USA,
2014, pp. 305–319.
Zuguang Li received the B.S. degree in elec-
tronic information science and technology from the
Nanjing University of Aeronautics and Astronautics,
Nanjing, China, in 2020, where he is currently
pursuing the M.S. degree in communication and
information system. His research interests mainly
focus on blockchain technologies and dynamic spec-
trum sharing.
Wei Wang (Member, IEEE) received the B.Eng.
degree in information countermeasure technology
and the M.Eng. degree in signal and information pro-
cessing from Xidian University in 2011 and 2014,
respectively, and the Ph.D. degree in electrical and
electronic engineering from Nanyang Technological
University, Singapore, in 2018. From September
2018 to August 2019, he was a Postdoctoral Fellow
with the Department of Electrical and Computer
Engineering, University of Waterloo, Canada. He is
currently a Professor with the Nanjing University
of Aeronautics and Astronautics. His research interests include wireless
communications, space-air-ground integrated networks, wireless security, and
blockchain. He was awarded the IEEE Student Travel Grants for IEEE
ICC 2017 and the Chinese Government Award for outstanding self-financed
students abroad.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
LI et al.: MULTI-OPERATOR DSS FOR WIRELESS COMMUNICATIONS 15
Qihui Wu (Senior Member, IEEE) received the
B.S. degree in communications engineering, and
the M.S. and Ph.D. degrees in communications
and information systems from the Institute of
Communications Engineering, Nanjing, China, in
1994, 1997, and 2000, respectively. From 2003 to
2005, he was a Postdoctoral Research Associate with
Southeast University, Nanjing. From 2005 to 2007,
he was an Associate Professor with the Institute
of Communications Engineering, PLA University of
Science and Technology, Nanjing, where he is cur-
rently a Full Professor. From March 2011 to September 2011, he was an
Advanced Visiting Scholar with the Stevens Institute of Technology, Hoboken,
USA. Since 2016, he has been with the Nanjing University of Aeronautics
and Astronautics and has been appointed as a Distinguished Professor. He was
appointed the Changjiang Distinguished Professorship in 2016. His current
research interests span the areas of wireless communications and statistical
signal processing, with emphasis on system design of software defined radio,
cognitive radio, and smart radio.
Xianbin Wang (Fellow, IEEE) received the Ph.D.
degree in electrical and computer engineering from
the National University of Singapore in 2001.
He is a Professor and the Tier-1 Canada Research
Chair with Western University, Canada. Prior to join-
ing Western, he was with Communications Research
Centre Canada (CRC) as a Research Scientist/Senior
Research Scientist from July 2002 to December
2007. From January 2001 to July 2002, he was
a System Designer with STMicroelectronics. He
has over 450 highly cited journal and conference
papers, in addition to 30 granted and pending patents and several stan-
dard contributions. His current research interests include 5G/6G technologies,
Internet-of-Things, communications security, machine learning and intelligent
communications.
Dr. Wang has received many awards and recognitions, including the Canada
Research Chair, the CRC President’s Excellence Award, the Canadian Federal
Government Public Service Award, the Ontario Early Researcher Award, and
the six IEEE Best Paper Awards. He currently serves/has served as an Editor-
in-Chief, an Associate Editor-in-Chief, an Editor/Associate Editor for over 10
journals. He was involved in many IEEE conferences, including GLOBECOM,
ICC, VTC, PIMRC, WCNC, CCECE, and CWIT, in different roles, such as
the General Chair, the Symposium Chair, a Tutorial Instructor, the Track Chair,
the Session Chair, the TPC Co-Chair, and a Keynote Speaker. He has been
nominated as an IEEE Distinguished Lecturer several times during the last
ten years. He is currently serving as the Chair of IEEE London Section and
the Chair of ComSoc Signal Processing and Computing for Communications
Technical Committee. He is a Fellow of Canadian Academy of Engineering,
a Fellow of Engineering Institute of Canada, and an IEEE Distinguished
Lecturer.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:58 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Helvetica-Condensed-Bold
    /Helvetica-LightOblique
    /HelveticaNeue-Bold
    /HelveticaNeue-BoldItalic
    /HelveticaNeue-Condensed
    /HelveticaNeue-CondensedObl
    /HelveticaNeue-Italic
    /HelveticaNeueLightcon-LightCond
    /HelveticaNeue-MediumCond
    /HelveticaNeue-MediumCondObl
    /HelveticaNeue-Roman
    /HelveticaNeue-ThinCond
    /Helvetica-Oblique
    /HelvetisADF-Bold
    /HelvetisADF-BoldItalic
    /HelvetisADFCd-Bold
    /HelvetisADFCd-BoldItalic
    /HelvetisADFCd-Italic
    /HelvetisADFCd-Regular
    /HelvetisADFEx-Bold
    /HelvetisADFEx-BoldItalic
    /HelvetisADFEx-Italic
    /HelvetisADFEx-Regular
    /HelvetisADF-Italic
    /HelvetisADF-Regular
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice