BCC: Blockchain-Based Collaborative Crowdsensing in Autonomous Vehicular Networks
4518 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 6, MARCH 15, 2022
BCC: Blockchain-Based Collaborative
Crowdsensing in Autonomous Vehicular Networks
Yilong Hui , Member, IEEE, Yuanhao Huang, Zhou Su , Senior Member, IEEE,
Tom H. Luan , Senior Member, IEEE, Nan Cheng , Member, IEEE, Xiao Xiao,
and Guoru Ding , Senior Member, IEEE
Abstract—The vehicular crowdsensing, which benefits
from edge computing devices (ECDs) distributedly selecting
autonomous vehicles (AVs) to complete the sensing tasks and col-
lecting the sensing results, represents a practical and promising
solution to facilitate the autonomous vehicular networks (AVNs).
With frequent data transaction and rewards distribution in the
crowdsensing process, how to design an integrated scheme which
guarantees the privacy of AVs and enables the ECDs to earn
rewards securely while minimizing the task execution cost (TEC)
therefore becomes a challenge. To this end, in this article, we
develop a blockchain-based collaborative crowdsensing (BCC)
scheme to support secure and efficient vehicular crowdsensing
in AVNs. In the BCC, by considering the potential attacks in the
crowdsensing process, we first develop a secure crowdsensing
environment by designing a blockchain-based transaction
architecture to deal with privacy and security issues. With the
designed architecture, we then propose a coalition game with
a transferable reward to motivate AVs to cooperatively execute
the crowdsensing tasks by jointly considering the requirements
of the tasks and the available sensing resources of AVs. After
that, based on the merge and split rules, a coalition formation
algorithm is designed to help each ECD select a group of AVs to
form the optimal crowdsensing coalition (OCC) with the target
of minimizing the TEC. Finally, we evaluate the TEC of the
task and the rewards of the ECDs by comparing the proposed
scheme with other schemes. The results show that our scheme
can lead to a lower TEC for completing crowdsensing tasks and
bring higher rewards to ECDs than the conventional schemes.
Index Terms—Autonomous vehicular networks (AVNs),
blockchain, coalition game, vehicular crowdsensing.
Manuscript received May 12, 2021; revised July 4, 2021; accepted August
4, 2021. Date of publication August 17, 2021; date of current version
March 7, 2022. This work was supported in part by the National Natural
Science Foundation of China under Grant 61901341, Grant 62071356, and
Grant U1808207; in part by the China Postdoctoral Science Foundation under
Grant 2021TQ0260; in part by the National Natural Science Foundation
of Shaanxi Province under Grant 2020JQ-301; in part by XAST under
Grant 095920201322; and in part by the Fundamental Research Funds
for the Central Universities of Ministry of Education of China under
Grant XJS200109 and Grant JB210113. (Corresponding author: Zhou Su.)
Yilong Hui, Yuanhao Huang, Nan Cheng, and Xiao Xiao are with
the State Key Laboratory of Integrated Services Networks, Xidian
University, Xi’an 710071, China (e-mail: ylhui@xidian.edu.cn; huangyh@
stu.xidian.edu.cn; nancheng@xidian.edu.cn; xiaoxiao@xidian.edu.cn).
Zhou Su is with the School of Mechatronic Engineering and Automation,
Shanghai University, Shanghai 200444, China, and also with the School of
Cyber Science and Engineering, Xi’an Jiaotong University, Xi’an 710049,
China (e-mail: zhousu@ieee.org).
Tom H. Luan is with the School of Cyber Engineering, Xidian University,
Xi’an 710071, China (e-mail: tom.luan@xidian.edu.cn).
Guoru Ding is with the College of Communications Engineering,
Army Engineering University, Nanjing 210007, China (e-mail:
dr.guoru.ding@ieee.org).
Digital Object Identifier 10.1109/JIOT.2021.3105547
I. INTRODUCTION
W ITH the rapid development of smart cities, the intelli-
gent transportation system (ITS) is gradually reforming
the original transportation structure [1]. Autonomous driving,
as an indispensable part of ITS, is expected to improve the
driving experience by reducing traffic jams and enhancing
traffic efficiency [2]–[5]. With autonomous driving, the ITS
will be easier to be realized since autonomous vehicles (AVs)
are more controllable and flexible than traditional vehicles.
Consequently, the incidence of traffic congestion and accidents
caused by human factors can be significantly reduced [6]. In
addition, with the adoption of the autonomous driving system,
drivers and passengers have the choice of taking more time
on enjoying the journey [7].
The AVs, which are equipped with cameras, lidar, and var-
ious sensor devices, can sense the traffic environment and
collect the data in the smart city. In this way, the valuable
information in the city, such as traffic flow and the icing
on the roads [8], can be analyzed and used to support the
ITS, which has led to the paradigm of vehicular crowdsensing
with the support of autonomous vehicular networks (AVNs).
In the AVNs, as shown in Fig. 1, there are a number of edge
computing devices (ECDs) deployed by different organizations
and institutions to undertake various crowdsensing tasks. The
ECDs can be seen as the roadside infrastructures which are
equipped with edge computing servers [9]–[12]. Therefore,
an ECD can receive a crowdsensing task request from a ser-
vice requester (SR) and publish the task to a group of AVs.
By doing this, both the service undertaker (i.e., ECD) and
the service performer (i.e., AVs) can obtain the rewards for
completing the tasks.
In the crowdsensing process, a group of AVs can execute
the task collaboratively to decrease the task execution time.
For example, to sense the icing on a road, the road segment
can be divided according to the number of lanes and assigned
to different AVs. However, the AVs, which are equipped with
various types of sensors, have different sensing accuracy and
time and therefore declare different rewards for completing
the crowdsensing tasks. On the other hand, the crowdsensing
tasks, which aim to support various vehicular applications in
the AVNs, typically have different completion requirements.
Considering these features, how to optimally select a group
of AVs to complete the crowdsensing tasks thus becomes a
challenge. In addition, as we know, the AVNs are open-access
2327-4662 c© 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-5543-2669
https://orcid.org/0000-0002-6518-3130
https://orcid.org/0000-0002-5215-7443
https://orcid.org/0000-0001-7907-2071
https://orcid.org/0000-0003-1780-2547
HUI et al.: BCC: BLOCKCHAIN-BASED COLLABORATIVE CROWDSENSING IN AUTONOMOUS VEHICULAR NETWORKS 4519
Fig. 1. Crowdsensing system in AVNs.
networks, there are privacy disclosure and network attack
problems caused by the data transaction and reward distri-
bution in the vehicular crowdsensing process. For instance,
an AV may refuse to contribute its resources if its privacy is
compromised [13]. Furthermore, the potential security threats
can also decrease the motivation of both ECDs and AVs,
which will further reduce the performance of the vehicular
crowdsensing system.
To address the aforementioned challenges, a collection of
works based on reputation and trust has been studied [14]–
[19]. However, the schemes based on reputation and trust may
result in a severe monopoly problem if high reputation users
collude with each other. Moreover, it is difficult for new nodes
to join the crowdsensing process and obtain rewards [15].
Recently, the application of blockchain technology has been
widely studied to provide a secure environment for vehicular
services [20]–[23]. However, few of them concurrently con-
sider the following three aspects for supporting the vehicular
crowdsensing in the AVNs: 1) with the frequent data transaction
and reward distribution among the participants in the networks,
how to guarantee the privacy of AVs and satisfy the security
and nonrepudiation requirements of task transactions in the
crowdsensing process. To this end, the first goal of our work
is to design a transaction architecture to protect the privacy of
AVs and ensure the security and nonrepudiation of transactions;
2) by jointly considering the sensing accuracy, time, and cost,
how to develop a model through which the AVs are motivated
to cooperate with each other to improve the sensing efficiency.
To address this challenge, we need to develop a cooperative
model for AVs and design an effective incentive mechanism
to encourage AVs to participate in the crowdsensing process;
and 3) based on the requirements of the published tasks and
the available sensing resources of AVs, how to minimize the
task execution cost (TEC) by selecting the optimal AVs to
collaboratively execute the task. Consequently, the last goal of
this article is to design an algorithm to optimally select AVs to
execute the crowdsensing task with the target of minimizing
the TEC. From the above analysis, we can conclude that an
integrated secure crowdsensing scheme needs to be designed
to guarantee the privacy of AVs and enable the ECDs to earn
rewards securely while minimizing the TEC.
To this end, in this article, we propose a blockchain-
based collaborative crowdsensing (BCC) scheme to support
the vehicular crowdsensing in AVNs. Specifically, based on the
attack models in the crowdsensing process, we first design the
blockchain-based transaction architecture in order to ensure
a secure trading environment through which the privacy of
AVs and the security of the transactions can be ensured. Then,
by jointly considering the requirements of the published tasks
and the available sensing resources of AVs, a coalition game
model is presented to formulate the interactions among the
AVs which intend to collaboratively execute the crowdsens-
ing tasks. After that, based on the merge and split rules, a
coalition formation algorithm is designed to select a group of
AVs to form the optimal crowdsensing coalition (OCC) with
the target of minimizing the TEC. Finally, we analyze the
security of the BCC based on the attack models and evaluate
the performance of the BCC using extensive simulations. We
show that the BCC can not only effectively defend against the
attacks but also lead to the lowest TEC and bring the highest
rewards to the ECDs by comparing with other schemes. The
main contributions of this article are threefold.
1) Transaction Architecture Establishment: We propose an
integrated transaction architecture for achieving secure
vehicular crowdsensing in AVNs. With the designed
architecture, the participants (i.e., SRs, ECDs, and AVs)
in the BCC can trade crowdsensing tasks securely in an
environment without requiring mutual trust.
2) Coalition Game Formulation: With the secure transac-
tion architecture, we develop a coalition game with a
transferable reward to model the interactions among the
AVs in the crowdsensing process, where the AVs are
motivated by the transferable reward to collaborate with
each other on executing the crowdsensing tasks.
3) Coalition Formation Algorithm Design: Based on the
merge and split rules, a coalition formation algorithm
is designed by jointly considering the requirements of
the published tasks and the available sensing resources
of AVs. With this algorithm, a group of AVs can be
selected to form the OCC to minimize the TEC.
The remainder of this article is organized as follows.
Section II reviews the related works. Section III introduces the
system model. Section IV presents the proposed BCC scheme
in detail. Section V analyzes the security and evaluates the
performance of the proposed crowdsensing scheme. Section VI
closes this article with the conclusion.
II. RELATED WORK
A. Crowdsensing Schemes
Zhu et al. [13] proposed a trust-based crowdsensing scheme
in vehicular networks, where the malicious vehicles and trust-
worthy vehicles can be segregated by using the designed
scheme. Although this work provides a solution for reliable
crowdsensing, it still needs to design an incentive mecha-
nism to encourage participants to carry out crowdsensing tasks.
Different from this work, we distribute rewards to participants
through smart contracts, where the AVs are encouraged by
the rewards to cooperate with each other to complete the task.
Xiao et al. [24] analyzed the crowdsensing system in vehicu-
lar networks and formulated the interactions between a server
and vehicles as a vehicular crowdsensing game. However, the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
4520 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 6, MARCH 15, 2022
system lacks the consideration of the security threats and the
reward models for developing a secure crowdsensing environ-
ment. Unlike this work, we design the BCC scheme to ensure
the safety of the transaction while maximizing the rewards of
the participants. Ni et al. [25] discussed the security, privacy,
and fairness of crowdsensing in vehicular networks, where
the solutions to achieve security assurance, privacy preserva-
tion, and incentive fairness are introduced in detail. However,
this work does not develop a mechanism that can not only
achieve privacy-preserving data collection but also realize ver-
ifiable reward distribution. In this article, we achieve this goal
by designing a blockchain-based architecture and a coalition
formation algorithm to obtain a secure trading environment
and fair reward distribution. Based on the crowdsensing tech-
nology, Wang et al. [26] studied a framework for real-time
traffic management in vehicular networks, where the effec-
tiveness of the framework is evaluated by using a real-world
taxi trajectory. However, the framework ignores the security
issues in the crowdsensing process. In this article, we ana-
lyze various security problems and integrate the blockchain
and coalition game to develop a low cost and secure environ-
ment to facilitate vehicular crowdsensing. Campioni et al. [27]
proposed several heuristics algorithms to study two recruit-
ment problems for vehicular crowdsensing. Compared with
other algorithms, the designed algorithms can obtain near-
optimal solutions. However, this work only intends to select
participants to obtain the most sensing data with the lowest
cost. In contrast, in our article, we design a more complete
framework to execute crowdsensing services by jointly con-
sidering the requirements of the task, the available resources,
the cost, and the task execution time, as well as the security
issues in the crowdsensing process.
B. Blockchain
Huang et al. [28] proposed a blockchain-based crowd-
sensing scheme in industrial systems, where the miners are
exploited to verify the sensory data. However, this work
ignores the dynamic cooperation among participants. On the
contrary, we focus on the cooperation among AVs and pro-
pose the BCC scheme to facilitate the crowdsensing services.
With the designed secure scheme, a group of AVs can be
selected to complete the tasks cooperatively. Kong et al. [29]
presented a privacy-preserving and verifiable sensory data-
sharing scheme with a permissioned blockchain. However,
this work does not select the optimal vehicles to execute the
task. In contrast, this article not only designs a secure trans-
action architecture but also designs an algorithm according
to the coalition game, aiming at selecting the optimal vehi-
cles to minimize the TEC. Liang et al. [30] proposed a novel
crowdsensing scheme that offers a solution for the confiden-
tiality and integrity of sensing data. Although the scheme
can effectively ensure the fairness of transactions, it needs to
design an algorithm to reduce the cost of tasks and increase
the enthusiasm of workers. Different from [30], this article
studies vehicular crowdsensing based on the blockchain archi-
tecture to effectively promote the cooperation among AVs and
reduce the TEC. Wang et al. [31] proposed a blockchain-based
scheme for nondeterministic cooperation in a vehicular crowd-
sensing system. With this scheme, real-time tasks can be
directly assigned to one or more vehicle teams by the plat-
form. However, the proposed algorithm can only reduce the
cost of the team, where the requirement of task execution time
is ignored. On the contrary, we propose an algorithm based on
a coalition game, where the cost, accuracy, and time require-
ments of tasks are comprehensively considered to obtain the
OCC. Hu et al. [32] proposed a novel blockchain-based frame-
work to secure the sensing process. Moreover, to provide a
fair incentive mechanism, the authors designed a sensory data
market based on a three-stage Stackelberg game. However, this
work does not consider the requirements of the tasks and the
available sensing resources of participants. Unlike this work,
our article jointly considers the requirements of the task and
the available resources of AVs to execute the task based on
the designed coalition game with a transferable reward.
C. Coalition Game
Chen et al. [33] proposed a cooperative content transmis-
sion scheme in which the cooperation between a vehicle and
its neighbors is formulated as a coalitional game. However,
the designed scheme does not consider the security prob-
lems to facilitate vehicular content distribution. Unlike this
work, the coalition game in this article is designed to facilitate
crowdsensing services in AVNs based on a blockchain archi-
tecture. To help vehicles select the optimal access networks,
Xu et al. [34] presented a network selection scheme based on a
coalition formation game, where a fast convergence algorithm
is designed to obtain the final state of the coalition struc-
ture. Different from this work, we design a coalition game
and analyze the cost and rewards based on different crowd-
sensing task requirements, which can effectively improve the
rewards of the participants. Based on a coalition formation
game, Saad et al. [35] developed a cooperative scheme to pro-
mote the cooperation among ECDs. By using simulations, it
is shown that the proposed scheme can improve the rewards
of each ECD. However, this work does not consider the attack
behaviors of the participants. In this article, we develop a
secure trading environment with the adoption of blockchain
and smart contract to deal with various attacks in the task
execution process. Zhou et al. [36] developed a coalition
formation game-based resource allocation scheme in vehic-
ular networks. The numerical results demonstrate that the
designed scheme has a lower delay than the other heuristic
schemes. Different from [36], the coalition game in this article
is designed to integrate with the proposed secure transac-
tion architecture. With the designed game model, the AVs are
motivated by the transferable reward to join the crowdsensing
process. With heterogeneous access networks, Hui et al. [37]
proposed an optimal access control scheme for vehicles, where
a coalition formation game is designed to formulate the coop-
eration among vehicles to reduce the content download cost.
However, this work ignores the privacy of vehicles and the
security issues. In contrast, a secure trading environment is
developed in this article for the crowdsensing system with the
adoption of blockchain and smart contracts.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
HUI et al.: BCC: BLOCKCHAIN-BASED COLLABORATIVE CROWDSENSING IN AUTONOMOUS VEHICULAR NETWORKS 4521
III. SYSTEM MODEL
In this section, we introduce the system model of the BCC
which consists of the network model, task model, blockchain
model, and attack model, respectively.
A. Network Model
The AVNs consist of register authority (RA), SRs, ECDs,
and AVs.
RA: Similar to [38]–[40], the RA can be regarded as the
trusted registration center which means that it cannot be com-
promised. Each entity in the AVNs can generate a pair of
keys by connecting to the RA using a secure channel. In addi-
tion, the RA owns a secure database to store AVs’ registration
information so that the security and reliability of data storage
can be ensured [13].
SRs: In the AVNs, the SR refers to the individual, organiza-
tion, or institution which intends to collect the useful data and
has registered to the RA. Let N = {1, . . . , n, . . . ,N} denote
the set of SRs in the networks. For SR n, it can entrust a
crowdsensing task to one of the ECDs. After the crowdsens-
ing task is completed, the SR then collects the task result and
distributes the corresponding rewards to the selected ECD.
ECDs: The ECDs, which are at the edge of the AVNs,
are deployed along the roadsides with the target of mak-
ing profits. The set of ECDs in the AVNs is denoted by
J = {1, . . . , j, . . . , J}. For ECD j, it registers to the RA for
obtaining its certificate and a pair of keys. After becoming
the legitimate entity, it can undertake the crowdsensing tasks
from the SRs and then publish the tasks to the AVs. In addi-
tion, each ECD can collect the sensed data from AVs within its
communication coverage and output the final sensing result.
AVs: The AVs in the AVNs can be used for completing the
crowdsensing task after registering to the RA. The set of AVs
in the AVNs is denoted as I = {1, . . . , i, . . . , I}. Equipped
with an onboard unit (OBU) and various sensor devices, each
AV can execute the crowdsensing task published by an ECD
and then upload the task result to earn rewards. Produced
by different companies, the AVs in the networks are typi-
cally equipped with various types and models of sensors. Let
K = {1, . . . , k, . . . ,K} be the set of the crowdsensing tasks in
the AVNs. For AV i, its sensing accuracy of crowdsensing task
k that is published by ECD j is denoted as aijk
. If the AV does
not equip the sensor to complete task k, we have aijk
= 0. In
addition, AVs spend different sensing time in terms of a given
task because different sensors have different sensing perfor-
mances. Let tijk (tk,min ≤ tijk ≤ tk,max) denote the sensing
time that AV i spent on completing crowdsensing task k. It is
the AV’s estimated time cost to complete the task based on
the task requirements and sensor performance. In addition, we
define tijk as the real sensing time that AV i spent on com-
pleting the task. Then, the time error between the estimated
time tijk and the real sensing time tijk can be expressed as
tijk − tijk . If the time error is no higher than the maximum
value of the time error �t (i.e., tijk − tijk ≤ �t), we believe
that the estimated sensing time is reasonable. Conversely, if
the time error is higher than �t (i.e., tijk − tijk > �t), it will
be regarded as a malicious AV. Caused by different sensing
time tijk and sensing accuracy aijk
, AVs usually declare differ-
ent rewards to complete the crowdsensing task. Therefore, we
define the reward per unit sensing time declared by AV i as
rijk
= δijk
(
aijk
+ log
( tk,max − tijk
tk,max − tk,min
))
(1)
where δijk
refers to the AV’s preference for the crowdsensing
task. It is a parameter set by AV i to control the requested
rewards. If an AV intends to obtain higher rewards, it can
increase δijk
. On the contrary, if an AV is interested in the task,
it can reduce δijk
to increase the probability of participating in
the crowdsensing process.
B. Crowdsensing Task Model
In the AVNs, if the SR intends to collect useful data, the
SR can entrust an ECD to complete its requested crowdsensing
task. For crowdsensing task k(k ∈ K) which is requested by
SR n(n ∈ N), it can be modeled as a tuple {nk,Rnk ,Tnk ,Ank },
where nk is the description of the crowdsensing task. Tnk is
the requested deadline to complete the crowdsensing task. Rnk
is the reward for completing the task which is paid by the
SR who entrusts the ECD to publish the crowdsensing task.
Ank is the task sensing accuracy determined by the SR. The
task result with a sensing accuracy that is lower than Ank is
useless to the SR. For crowdsensing task k, it can be further
divided into several subtasks and executed by different AVs
with the target of reducing the task completion time [41]. For
example, in order to obtain the high-definition map of a given
road with four lanes, we can divide the crowdsensing task into
four subtasks, where each subtask is in charge of sensing the
traffic environment and collecting the map data of one lane.
C. Blockchain Model
Blockchain can be regarded as a distributed ledger to record
the transactions of crowdsensing services.
Initialization: In the AVNs, the blockchain networks are
initialized by the RA [42]. Specifically, the RA generates the
system parameters and its keys (i.e., private key SKRA and
public key PKRA), where the private key SKRA is kept secret
and the other parameters are published to the AVNs.
Registration: After the initialization, the SRs, ECDs, and
AVs then can register to the RA and obtain their public keys,
private keys, digital certificates (DCs), and wallet addresses to
become legitimate entities. Here, we take AV i for example
to describe the registration process that includes the following
steps.
1) AV i generates its public key PKi, private key SKi, and
its wallet address.
2) AV i binds its identity in the real world and sends its
identity information along with its public key PKi to the
RA.
3) The RA checks the AV’s identity. If the identity is valid,
the RA signs the AV’s public key PKi with its private
key SKRA to issue a certificate for the AV. As such, AV
i can obtain its DC as
DCi =
〈
PKi||SignSKRA
(PKi)||TDCi
〉
(2)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
4522 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 6, MARCH 15, 2022
where SignSKRA
(PKi) is the digital signature function
and TDCi is the timestamp of the generation time of
the AV’s certificate. In this way, all the participants in
the AVNs can audit the DC of AV i by using the RA’s
public key.
Operation: After becoming legitimate entities, each partic-
ipant in the AVNs needs to put its deposit. If the participant
has an attack behavior in the crowdsensing process, the deposit
will be deducted as a penalty. In addition, the keys and cer-
tificates of the attacker will be revoked by the RA. Once the
registration process is complete, the blockchain starts to oper-
ate. In the AVNs, the legitimate ECDs are the authorized nodes
that maintain the whole blockchain ledger and have the right
to build new blocks. In contrast, the AVs in the AVNs only
have the right to request and download the blockchain ledger.
If an AV intends to obtain the latest blockchain ledger, it can
download the ledger from its connected ECD.
D. Attack Model
In the crowdsensing process, both AVs and ECDs are vul-
nerable to probable attackers. The security threats that exist in
the crowdsensing process include three aspects, i.e., privacy
disclosure, malicious ECDs, and malicious AVs [22].
Privacy Disclosure: In this article, the privacy of AVs refers
to the location and identity information. In the crowdsensing
process, if an AV connects with the ECD to obtain the crowd-
sensing task or upload the task result using wireless links,
the private information of the AV then can be obtained by the
attackers to make further analysis [43]. Specifically, the eaves-
droppers may listen on communication channels to capture the
messages in the crowdsensing process. As a result, it is pos-
sible for the eavesdroppers to guess the locations and identify
personal preferences of AVs from the visiting frequency of
points of interest [44]. In addition, an attacker may discover
the AV’s true identity through analyzing different data associ-
ated with the same anonymous identity, thereby compromising
the privacy of the AVs [45]. For example, if an AV uploads its
results of subtasks without any privacy protection, the identity
of the AV may be inferred by the malicious adversaries from
sensitive information.
Malicious ECDs: In this article, the malicious ECDs have
the following two types of threats: 1) a malicious ECD may
declare that it does not obtain the task result. Consequently,
it refuses to pay the rewards to the AVs which provide their
resources to complete the task and 2) a malicious ECD does
not assign the crowdsensing task to the OCC to minimize the
TEC. For example, the ECD may randomly select a group
of AVs to execute the task, where its energy and computing
resources spent on obtaining the OCC can be saved.
Malicious AVs: In the crowdsensing process, the malicious
AVs have the following three types of threats: 1) a malicious
AV pretends to declare that it does not obtain the rewards
for completing the crowdsensing task after uploading the task
result; 2) a malicious AV attempts to upload fake or wrong
sensing data to obtain the rewards without any contributions
to the crowdsensing task; and 3) a malicious AV intends to
upload the result of its subtask multiple times to acquire more
rewards.
IV. BLOCKCHAIN-BASED COLLABORATIVE
CROWDSENSING SCHEME IN AVNS
In this section, we first introduce the transaction architecture
of the BCC proposed in this article. After that, we model the
interactions among the AVs involved in the BCC as a coalition
formation game with a transferable reward, where a coalition
formation algorithm is designed to obtain the OCC with the
target of minimizing the TEC.
A. Transaction Architecture
It is universal that the same task/subtask is requested more
times in AVNs. Therefore, we use parameter � to repre-
sent whether the ECD has already obtained the result of the
task/subtask. Specifically, � = 1 if the ECD caches the task
result and � = 0 otherwise. If � = 0, the ECD will select AVs
to execute subtasks, generate the final task result, and send the
result to the SR. On the contrary, if � = 1, the ECD will directly
send the task result to the SR to obtain the reward. Here, we
consider the situation where � = 0 to introduce the designed
transaction architecture. In the BCC, as shown in Fig. 2, the
transaction architecture includes the following steps.
1) Sign Smart Contract: A smart contract is a protocol
designed to execute a contract automatically when given con-
ditions are satisfied. In the BCC, three types of smart contracts
are deployed in advance.
Smart Contract Signed Between the SR and Its Selected
ECDs: In the networks, the SR can sign the smart contracts
with a number of ECDs in advance. If the SR intends to com-
plete a crowdsensing task, it can select an ECD and initiate a
request containing task information to trigger the smart con-
tract signed by the SR and the selected ECD. This contract
takes effect when the new block that packages this transaction
is added to the blockchain. Along with this, the reward will be
transferred from the SR’s wallet to the selected ECD’s wallet
by executing this contract.
Smart Contract Signed by All the ECDs: The smart contract
signed by all the ECDs is always valid and aims to reward
the ECDs which contribute to the system. Specifically, after
generating a block, the ECD that builds this block and the
ECDs which participate in publishing the task will obtain the
corresponding rewards. Namely, this contract will be executed
automatically to transfer the rewards from the wallets of the
SRs to the wallet of the ECD that generates the block and the
wallets of the ECDs that are entrusted by these SRs to publish
tasks in this period of time.
Smart Contract Signed Between the ECD and the AVs:
Similar to the smart contract signed between the SR and the
ECD, each AV can select an ECD to sign a smart contract in
advance. If the ECD has a crowdsensing task that needs to
allocate, it can select AVs that have signed the smart contracts
to form the optimal OCC. This contract takes effect when the
new block that packages the transactions between the ECD
and the selected AVs is added to the blockchain. The reward
will be transferred from the wallet of the ECD to the wallets
of the AVs that contribute to the crowdsensing task.
2) Upload Task Request: When SR n selects ECD j
to publish crowdsensing task k, it first generates a task
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
HUI et al.: BCC: BLOCKCHAIN-BASED COLLABORATIVE CROWDSENSING IN AUTONOMOUS VEHICULAR NETWORKS 4523
Fig. 2. Blockchain-based secure crowdsensing in AVNs.
request
reqn =
〈
nk||Rnk ||Tnk ||Ank ||Treqnk
〉
. (3)
Based on the task request, the SR then signs the request
with its private key and encrypts it using the ECD’s public
key, shown as
EPKj(reqn) = EPKj
(〈
reqn||SignSKn
(H(reqn))||DCn
〉)
(4)
where EPKj(·) is the encryption function. H(·) is the hash func-
tion to obtain the digest of the task request. After this, SR n
uploads the request message of the crowdsensing task to the
blockchain networks.
3) Collect Task Request: ECD j collects the task request
and verifies the DC of SR n using the SR’s public key PKn.
If DCn is valid which means that SR n is a legitimate node,
the ECD then further verifies the signature of the SR and
the request of the crowdsensing task. Specifically, if H(reqn)
calculated by ECD j is equal to DEPKn(SignSKn
(H(reqn))), the
request of the crowdsensing task then can be regarded as com-
plete and has not been tampered with, where DEPKn(·) is the
decryption function.
4) Decide the OCC: Let I∗(I∗ ⊆ I) denote the set of AVs
that have signed smart contracts with the ECD and can be
used for executing the crowdsensing task. Namely, we have
aijk
≥ Ank ∀i ∈ I∗, based on the request of the crowdsensing
task and the resources of the AVs in set I∗, the ECD then
applies the coalition formation game with a transferable reward
to form the OCC. The AVs which are in the OCC will be
selected to execute the crowdsensing task collaboratively with
the target of minimizing the TEC. The detail of the coalition
formation game is designed in Section IV-B.
5) Upload the Subtasks: Denote by I∗jk(I
∗
jk
⊆ I∗) the set of
AVs in the OCC, where each AV in set I∗jk can be decided to
execute a subtask. The ECD then generates a subtask message
for AV i(i ∈ I∗jk), shown as
SubMjk =
〈
reqn||SignSKn
(H(reqn))||ijk |||I∗jk |||TSubMjk
〉
(5)
where ijk is the description of the subtask allocated to AV i.
|I∗jk | is the number of AVs in set I∗jk . Then, ECD j signs the
subtask message using its private key and encrypts it using the
AV’s public key, we have
EPKi(SubMjk) = EPKi
(〈
SubMjk
||SignSKj
(H(SubMjk))||DCj
〉)
. (6)
After this, the ECD uploads the subtask message to the
blockchain networks.
6) Download the Subtasks: The AVs that are selected by
the ECD to execute the crowdsensing task then collaboratively
download the subtasks from the blockchain networks.
7) Execute the Subtasks: After receiving and verifying
EPKi(SubMjk), the AV starts to execute the subtask.
8) Upload the Results of the Subtasks: If AV i completes
its subtask, it generates a result message, shown as
ResultMijk
=
〈
SubRijk
||SignSKi
(H(SubRijk
))
||SubMjk ||SignSKj
(H(SubMjk))||TResultMijk
〉
.
(7)
Then, the AV signs the result message using its private key
and encrypts it using the ECD’s public key, we have
EPKj(ResultMijk
) = EPKj
(
ResultMijk
||SignSKi
(H(ResultMijk
))||DCi
)
.
(8)
After that, the AV uploads the encrypted message of the
subtask result to the blockchain networks.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
4524 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 6, MARCH 15, 2022
9) Summarize the Results: After receiving the uploaded
result message, ECD j first decrypts and then verifies the sub-
task result. If the result is valid, the ECD summarizes the
results of the subtasks.
10) Upload the Final Result: The ECD outputs the final
result of the crowdsensing task. Then, the ECD signs the final
result message using its private key and encrypts it using the
SR’s public key. After that, the ECD uploads the final result
message to the blockchain networks.
11) Select the Leader: For a period of time, the transac-
tions generated in the BCC are collected by each ECD in
the AVNs. Therefore, all the legitimate ECDs have the right
to be selected as the leader for building a new block. The
leader which will obtain the rewards for generating the block
is selected based on its stake, namely, its contributions to the
crowdsensing services. Specifically, the ECD that has the most
contribution to the crowdsensing system in the period of time
will be selected as the leader. The contribution of ECD j can
be calculated by
�j =
∑jk∗
jk=1 xjk∑J
j=1
∑jk∗
jk=1 xjk
(9)
where jk∗ is the number of crowdsensing tasks published by
ECD j. xjk is the number of subtasks allocated to the selected
AVs. In this way, the leader can be selected by
j∗ = arg max
j
{
�1, . . . , �j, . . . , �J
}
. (10)
12) Build Candidate Block: The leader, i.e., ECD j∗, then
builds a candidate block that packs up all the transactions over
this period as a Merkle tree structure. Then, ECD j∗ signs the
candidate block Cblock with its private key and generates a
message for verification, shown as
CblockM =
〈
Cblock||SignSKj∗ (H(Cblock))||DCj∗ ||TCblockM
〉
.
(11)
13) Verify the Candidate Block: For the ECDs except leader
j∗, they act as the verifiers in the BCC to audit the candidate
block. The verification process, which is also known as the
consensus process, aims to make all the ECDs accept the can-
didate block. Here, we resort to the practical Byzantine fault
tolerance (PBFT) consensus mechanism to complete the veri-
fication process. We assume that the number of ECDs in the
AVNs is no smaller than 3� + 1, where � is the maximum
number of malicious ECDs. Based on PBFT, the consensus
process has the following steps.
1) The leader j∗ broadcasts the candidate block message
CblockM to the verifiers in the AVNs.
2) Each verifier audits CblockM. In addition, in this step,
each ECD verifies the TEC determined by leader j∗.
Specifically, each ECD randomly selects a group of AVs
to form a set I∗jk and calculates the TEC. If the calculated
TEC is no smaller than the TEC determined by leader
j∗, the TEC is verified. Otherwise, the ECD broadcasts
a warning message to all the verifiers in the AVNs.
3) Each verifier encapsulates the verification result into
the message if the message is valid and broadcasts the
message to the leader and other verifiers.
4) If the number of verification messages received by an
ECD is no smaller than 2� + 1, it generates a commit
message and broadcasts the message to other ECDs.
5) If the number of commit messages received by an ECD
is no smaller than 2� + 1, the ECD considers that the
candidate block is verified and the consensus is reached.
14) Build the Block: If the candidate block is verified,
namely, the consensus process is finished, a new block then
can be built in the BCC. Along with this, each ECD in the
AVNs adds the candidate block Cblock to its blockchain ledger.
15) Trigger the Contracts: After building the new block,
the three types of smart contracts signed by different partici-
pants will be triggered.
16) Share the Rewards: Once the smart contracts are trig-
gered, the rewards of the participants in the BCC will be
distributed. Specifically, we allocate the rewards to the AVs
and ECDs that contribute to the crowdsensing system. After
a block is generated, the total rewards
∑J
j=1
∑jk∗
jk=1 Rjk are
divided into two parts, where Rjk is the reward for completing
the task requested by SR n (i.e., Rjk = Rnk ). The first part of
the total rewards is the rewards of AVs, it can be expressed as
RAVs =
J∑
j=1
jk∗∑
jk=1
I∗jk∑
ijk=1
rijk
tijk
|I∗jk |
(12)
where
∑I∗jk
ijk=1 rijk
(tijk /|I∗jk |) is the reward that paid to the AVs
in set I∗jk , i.e., the TEC of the crowdsensing task.
The second part of the total rewards is the rewards of ECDs,
shown as
RECDs =
J∑
j=1
jk∗∑
jk=1
Rjk − RAVs
=
J∑
j=1
jk∗∑
jk=1
⎛
⎜⎝Rjk −
I∗jk∑
ijk=1
rijk
tijk
|I∗jk |
⎞
⎟⎠ (13)
where Rjk −
∑I∗jk
ijk=1 rijk
(tijk /|I∗jk |) are the remaining rewards
that will be distributed by the ECDs. For the rewards of
ECDs, we consider the contribution of different ECDs in the
crowdsensing system and further divide the rewards as follows.
1) The ECD j∗ That Generates the New Block: For this
period of time, the block is generated by ECD j∗.
Therefore, ECD j∗ can obtain the rewards for generating
the new block, shown as
Rj∗ = μRECDs = μ
J∑
j=1
jk∗∑
jk=1
⎛
⎜⎝Rjk −
I∗jk∑
ijk=1
rijk
tijk
|I∗jk |
⎞
⎟⎠ (14)
where 0 < μ < 1.
2) The ECD j Which Publishes the Crowdsensing Task
by Determining the OCC of the Task: For each ECD
j(j ∈ J), it can obtain the rewards to compensate for the
resource consumption of publishing tasks. We have
Rj =
∑jk∗
jk=1 xjk∑J
j=1
∑jk∗
jk=1 xjk
× (1− μ)RECDs
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
HUI et al.: BCC: BLOCKCHAIN-BASED COLLABORATIVE CROWDSENSING IN AUTONOMOUS VEHICULAR NETWORKS 4525
=
∑jk∗
jk=1 xjk∑J
j=1
∑jk∗
jk=1 xjk
× (1− μ)
J∑
j=1
jk∗∑
jk=1
⎛
⎜⎝Rjk −
I∗jk∑
ijk=1
rijk
tijk
|I∗jk |
⎞
⎟⎠. (15)
B. Coalition Game Analysis
After introducing the transaction architecture of the
proposed BCC, we then model the task allocation process
charged by ECD j as a coalition formation game to mini-
mize the TEC, i.e.,
∑I∗jk
ijk=1 rijk
(tijk /|I∗jk |). In order to minimize
the rewards paid for executing the crowdsensing task, ECD
j follows the rational principle in determining the OCC. For
the AVs in set I∗, they have different sensing times and thus
declare different rewards for completing task k. On the one
hand, an AV may not complete the crowdsensing task within
Tnk individually, it can form a coalition with other AVs to
collaboratively execute the task to decrease the task execu-
tion time and obtain rewards. On the other hand, the coalition
formed by different AVs causes different TEC. Therefore, the
problem boils down to finding a group of AVs that can com-
plete the task collaboratively within Tnk while leading to the
lowest TEC. It can be formulated as
min
{
�jk
} = min
⎧⎪⎨
⎪⎩
I∗jk∑
ijk=1
rijk
tijk
|I∗jk |
⎫⎪⎬
⎪⎭
s.t. C1 : aijk
≥ Ank
C2 : max
{
tijk
|I∗jk |
, i ∈ I∗
}
≤ Tnk (16)
where max{(tijk /|I∗jk |), i ∈ I∗} ≤ Tnk ensures that the crowd-
sensing task can be completed within the required deadline.
To solve this problem, ECD j models the interactions among
the AVs in set I∗ as a coalition formation game with a trans-
ferable reward, where the AVs in set I∗jk can be determined by
obtaining the OCC of the game. In addition, for the malicious
AV in set I∗ which pretends to upload fake or wrong sensing
data, we design a fault tolerance method to defend against this
attack. Specifically, based on the total number of subtasks, the
ECD randomly selects some subtasks to be repeatedly assigned
to different AVs. In this way, some of the same subtasks are
completed by different AVs. By comparing the sensing data
uploaded by the AVs, the malicious AV with this attack can be
easily found. If an AV uploads false or wrong sensing data, its
deposit stored in RA will be used to compensate for the loss
of the task publisher. As the deposit is much larger than the
rewards obtained by participating in the crowdsensing process,
the proposed method thus can efficiently defend against this
attack.
Definition 1: For any set I
′
(I
′ ⊆ I∗), it can be called a
coalition and expressed as 〈I ′ ,R(I
′
)〉, where R(I
′
) is the TEC
of the coalition.
Especially, the coalition I∗ is called the grand coalition in
the BCC, where the grand coalition is the OCC if the proposed
coalition game is superadditive and its core is not empty.
Definition 2: For a coalition game with a transferable
reward, it is said to be superadditive if any two coalitions
I
′
(I
′ ⊆ I∗) and I
′′
(I
′′ ⊆ I∗) satisfy I
′ ∩ I
′′ = ∅ and
R(I
′
)+ R(I
′′
) ≥ R(I
′ ∪ I
′′
).
From Definition 2, we can know that in a superadditive
coalition game, if a coalition is divided into two disjoint small
coalitions, the sum of the TEC of the two small coalitions is
always no less than the original coalition.
Theorem 1: The coalition game for obtaining the lowest
TEC in the BCC is nonsuperadditive.
The proof of this theorem is given in Appendix A.
Definition 3: For a reward vector, it is said to be a parti-
tion if the vector satisfies the group rationality and individual
rationality concurrently.
Definition 4: For a reward vector of AVs
{R({1}), . . . ,R({i}), . . . ,R({I∗jk})}, it is said to be group
rational if
∑I∗jk
i=1 R({i}) = R(I∗jk).
Definition 5: For a reward vector of AVs
{R({1}), . . . ,R({i}), . . . ,R({I∗jk})}, it is said to be individually
rational if R({i}) ≥ R{i}.
In Definition 5, R{i} is the reward of AV i which completes
the crowdsensing task individually. This definition indicates
that if a reward vector of a coalition is individually rational,
the reward obtained by each AV in the coalition is no smaller
than acting alone.
Definition 6: For a coalition game, the set of all the available
partitions is called the core of the game.
Theorem 2: The core of the coalition game for obtaining
the TEC in the BCC is empty.
The proof of this theorem is given in Appendix B.
Based on the given definitions and theorems, it can be con-
cluded that the coalition game in the BCC is nonsuperadditive.
In addition, the core of the game is empty. It means that the
grand coalition composed of all the AVs cannot lead to the
lowest TEC. Therefore, we propose a coalition formation algo-
rithm to obtain the optimal OCC by considering the following
two cases.
Case 1: All the AVs in set I∗ can complete the crowdsensing
task within Tnk individually.
In this case, we have max{tijk , i ∈ I∗} ≤ Tnk , it means
that all the AVs in set I∗ can complete the crowdsensing task
within Tnk individually. Therefore, we only need to consider
the reward declared by each AV in I∗, where the optimal
sensing coalition can be decided in a greedy manner to allo-
cate the crowdsensing task. In other words, the optimal sensing
coalition only has one AV, which is selected by
i∗ = arg min
i
{
rijk
tijk , i ∈ I∗
}
(17)
where rijk
tijk is the reward of AV i for completing the crowd-
sensing task. Based on (17), we then can obtain the OCC
I∗jk = {i∗} and the lowest TEC ri∗jk
ti∗jk
.
Case 2: At least one AV in set I∗ cannot complete the
crowdsensing task within Tnk individually.
In this case, there is at least one AV that cannot complete the
crowdsensing task within Tnk individually. Therefore, it needs
to cooperate with other AVs to execute the task and obtain the
rewards. Different from case 1, both the task execution time
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
4526 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 6, MARCH 15, 2022
Algorithm 1 Coalition Formation Algorithm for AVs in Set I∗
1: Input: rijk
, tijk ,∀i ∈ I∗
2: if I∗ �= ∅ then
3: if max{tijk , i ∈ I∗} ≤ Tnk then
4: Case 1:
5: i∗ ← arg min
i
{rijk
tijk , i ∈ I∗}
6: I∗jk ← {i∗}, �jk ← ri∗jk
ti∗jk
7: else
8: Case 2:
9: Sort the elements in set RI∗ in ascending order
10: if t1 ≤ Tnk then
11: I∗jk ← {1}, �jk ← r1t1
12: else
13: judge = 0, partition the AVs by {1, ..., i, ..., I∗}
14: for ψ = 1;ψ ≤ I∗ do
15: for φ = ψ + 1;φ ≤ I∗ do
16: if max
{
tψ
φ−ψ+1 , ...,
tφ
φ−ψ+1
}
> Tnk then
17: Iψ ∪ {φ} ← merge← {Iψ\ {φ}, {φ}}
18: if φ = I∗ then
19: for φ = ψ + 1;φ ≤ I∗ do
20: Iψ ∪ {φ} → split→ {Iψ\ {φ}, {φ}}
21: end for
22: end if
23: else
24: I∗jk ← Iψ ∪ {φ}, judge = 1
25: end if
26: if judge > 0 then
27: break
28: end if
29: end for
30: if judge > 0 then
31: break
32: end if
33: end for
34: �jk ←
I∗jk∑
ijk=1
rijk
tijk
|I∗jk |
35: if judge = 0 then
36: The ECD cancels the crowdsensing task
37: end if
38: end if
39: end if
40: else
41: The ECD cancels the crowdsensing task
42: end if
43: Output: The OCC I∗jk and the lowest TEC �jk
and the declared task rewards of the AVs need to be considered
in achieving the OCC. Let RI∗ = {r1t1, . . . , riti, . . . , rI∗ tI∗}
denote the set of rewards that AVs are independent to execute
the crowdsensing task. The ECD sorts the elements in the
set in ascending order. If the first element (i.e., r1t1) satisfies
t1 ≤ Tnk , then this case is the same as case 1, where the
OCC can be decided by (17). Otherwise, the ECD starts the
coalition formation process with the adoption of the merge
and split rules, where the specific description of the proposed
coalition formation process for obtaining the OCC can be seen
in Algorithm 1. Based on the OCC, if the crowdsensing task
can be completed by the AVs and the TEC is no larger than
Rnk , the ECD then allocates the task to the AVs in the OCC.
Otherwise, the task will be canceled.
V. SECURITY ANALYSIS AND PERFORMANCE EVALUATION
A. Security Analysis
The proposed BCC can secure the crowdsensing services
in the AVNs by defending against the threats mentioned
in Section III-D. The details about the performance of the
proposed BCC are discussed as follows.
Privacy Protection: In the BCC scheme, the location
information of AVs is only used for local sensing and will not
be disclosed to others [46]. In addition, the ECD only collects
the sensing results of AVs through blockchain networks and
does not monitor the local sensing process. When ECD selects
AVs to perform subtasks, the information about AVs only
includes the sensing price and the sensing accuracy, which
effectively prevents the attack behavior of eavesdroppers. For
example, when a malicious attacker obtains the result of sub-
tasks uploaded by an AV, it cannot obtain any information
about how the AV performs subtasks. This is because the
uploaded result does not contain any information about the
location of AVs. Especially, a position blur mechanism can be
used to convert the exact location of an AV to grid coordi-
nates and obfuscates it by using pseudorandom functions and
Bloom filters (BFs) [38]. For identity information, we use the
key as a pseudonym, where each transaction is associated with
a pair of pseudonyms to identify the sender and receiver. If
the attacker only obtains the pseudonyms of the sender and
the receiver, it is difficult to associate the specific identity of
AVs with the transaction. Furthermore, each AV can use dif-
ferent pseudonyms to perform different crowdsensing tasks. In
this way, the malicious attacker can only trace back the cor-
responding transaction record after obtaining the pseudonym.
In other words, the attacker can neither associate it with the
identity information of the AV nor continuously monitor the
AV’s transaction process.
Resilience to Malicious ECDs:
1) In thecrowdsensingprocess, amaliciousECDmaypublish
a crowdsensing task while declaring that it does not obtain
the result of the published crowdsensing task. With the
adoption of BCC, the rewards of the AVs are obtained
after the new block is built, where all the transactions are
recorded in the blockchain that is maintained by all the
ECDs in the AVNs. In addition, the rewards are charged
by the smart contract, where the smart contract is executed
automatically after the new block is generated.
2) The OCC determined by an ECD will be further veri-
fied by other ECDs in case of this ECD is a malicious
node. If the OCC determined by the leader is not veri-
fied which means that the OCC cannot lead to the lowest
TEC, the deposit of the ECD will be forfeited, where
the deposit is much larger than the rewards. Therefore,
the threat of a malicious ECD with this type can be
effectively eliminated.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
HUI et al.: BCC: BLOCKCHAIN-BASED COLLABORATIVE CROWDSENSING IN AUTONOMOUS VEHICULAR NETWORKS 4527
TABLE I
SIMULATION PARAMETERS
Resilience to Malicious AVs:
1) Similar to the case where a malicious ECD refuses to
pay the rewards to the AV which uploads the result of
the allocated subtask, the malicious AV which declares
that it does not obtain the rewards after uploading the
task result to the ECD can also be eliminated through
the execution of the smart contract.
2) For the malicious AV which pretends to upload fake
or wrong sensing data, we design the fault tolerance
method to defend against this threat. Specifically, the
ECD selects a number of subtasks and allocates each
of them to different AVs. In this way, the AV which
uploads the fake or wrong sensing data must bear the
risk of losing its deposit. Thus, the malicious AV with
this type can be eliminated.
3) In the BCC, the AVs which participate in the crowdsensing
process are recorded in the blockchain networks. In other
words, only these AVs can obtain their rewards after
uploading the task result and each of them can only
obtain the rewards once. Therefore, the BCC can defend
against the malicious AV which attempts to upload the
result of its subtask multiple times to obtain more rewards.
B. Performance Evaluation
We study the performance of the BCC scheme using simu-
lations operated on MATLAB. The number of ECDs in the
networks is 41, where the maximum number of malicious
ECDs changes from 0 to 12 for simulation. The computing
resources of each ECD ranges from 10 to 30 GHz. The block
size lies in [6, 10] MB and the data transmission rate between
two ECDs is selected from [10, 100] Mb/s [47]. As discussed
in Section IV, the architecture designed in this article is dis-
tributed, where each ECD follows the first-in–first-out rule to
publish crowdsensing tasks. Therefore, we consider the sce-
nario that SR n entrusts ECD j to publish crowdsensing task k,
where the deadline for the task (i.e., Tnk ) is 0.1 h. The sensing
accuracy requested by the task (i.e., Ank ) changes from 0.75 to
0.95 for simulation. The number of AVs that can be selected
to execute the crowdsensing task ranges from 15 to 90. The
time that an AV completes the crowdsensing task individually
is randomly selected from [0.1, tk,max] h, where the value of
tk,max varies from 0.5 to 1 h in the simulation to evaluate the
Fig. 3. Average number of switch operations by changing the number of
AVs and the requested sensing accuracy.
performance of the BCC. Parameters used in the simulation
are summarized in Table I. With this scenario, we evaluate the
complexity of the proposed algorithm, the delay caused by the
blockchain, the TEC of the task, and the rewards obtained by
ECDs.
The Complexity of the Algorithm: The complexity of the
coalition game algorithm can be analyzed by calculating the
number of switch operations [48]–[52]. Therefore, we carry
out a simulation to evaluate the complexity of the proposed
algorithm (i.e., the number of switch operations) by chang-
ing the number of AVs and the requested sensing accuracy. It
can be seen in Fig. 3, the number of switch operations first
increases and then decreases with the increase of the number
of AVs. This is because when the number of AVs is small
(i.e., 15), only a small number of AVs can participate in the
game, resulting in a small number of switch operations. When
the number of AVs is large (i.e., 90), it is easier for AVs to
form a coalition that meets the requirements, thus reducing
the number of switch operations. In addition, we can see from
the figure that when the number of AVs is small (i.e., 15), the
high sensing accuracy requirement (i.e., 0.9) will lead to the
lowest number of switch operations. Besides, we can know
from this figure that the algorithm can converge to the Nash
stable coalition partition through the limited number of switch
operations.
The Delay Caused by Blockchain: Similar to [47], the max-
imum block interval t0 in our BCC scheme is 10 s and
the candidate block size changes from 6 to 10 MB. With
this configuration, we then evaluate the delay caused by the
blockchain. Specifically, the average time includes the block
generation time (i.e., block interval) and the block valida-
tion time, where the validation process can be divided into
two parts, i.e., message delivery and message verification.
Therefore, based on [47] and [53], we carry out a simula-
tion to evaluate the delay caused by the blockchain which
consists of message delivery delay tD and validation delay tV .
As discussed in Section IV-A, the candidate block is verified
by the PBFT mechanism including the following phases. In
the Pre-prepare phase, the ECD j∗, as the leader of the con-
sensus process, broadcasts the message of the candidate block
CblockM to other ECDs (i.e., the verifiers) in the AVNs. In
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
4528 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 6, MARCH 15, 2022
(a) (b)
Fig. 4. (a) Validation delay by changing the computing resources of ECDs
and the number of malicious ECDs. (b) Message delivery delay by changing
the maximum data transmission rate and the block size.
this phase, the leader generates J − 1 message authentication
codes (MACs) to send the message and each verifier needs to
verify one MAC. For the Prepare phase, each verifier encap-
sulates the verification result into the message if the message
is valid. Then, the verifier broadcasts the message to the leader
and other verifiers. In this phase, each verifier generates J− 1
MACs and verifies J − 2 MACs when they receive them. In
contrast, the leader needs to verify J−1 MACs received from
all the verifiers. In the Commit phase, the verifier will broad-
cast the commit message to the other ECDs. Thus, the leader
and all the verifiers first send and then receive J − 1 commit
messages, which need to generate J−1 MACs and verify J−1
MACs.
Therefore, we can conclude that the leader and each verifier
need to complete 4(J−1) MAC operations in each consensus
process. Concerning the case with � faulty ECDs, a normal
ECD will process at most two messages from a malicious
node per message [47]. By considering this fact, the computing
resources requested to complete the consensus process is 4(J+
� − 1)α, where α is the resources for generating/verifying
MACs. Thus, the validation time tV can be calculated by
tV = max
j
{
4(J + � − 1)α
cj
, j ∈ J
}
. (18)
In addition, in the three-stage consensus process, any mes-
sage should be delivered within the limited time t0. Hence,
the message delivery time tD of CblockM can be calculated by
tD = min
{
max
j �=j∗
S
γj,j∗
, t0
}
+ min
{
max
j′ �=j,j∗
S
γj,j′
, t0
}
+min
{
max
j′ �=j
S
γj,j′
, t0
}
. (19)
Based on the above analysis, we then simulate the validation
delay and the message delivery delay. Fig. 4(a) shows the val-
idation delay by changing the maximum computing resources
of ECDs and the number of malicious ECDs. From this fig-
ure, we can see that the validation can be carried out more
quickly with the increase of computing resources. In addition,
if there are more malicious ECDs in the consensus process,
the validation delay will be significantly increased. Fig. 4(b)
is the message delivery delay by changing the maximum data
transmission rate and the block size. We can see from this
figure that the message delivery delay decreases significantly
with the increase of the data transmission rate between ECDs.
In addition, when the block size becomes large, more time
(a) (b)
Fig. 5. (a) TEC of the task by changing the maximum time spent on com-
pleting the task. (b) Rewards of ECDs by changing the maximum time spent
on completing the task.
will be taken to transmit the three-stage messages. Therefore,
as we can see from the figure, the message delivery delay
increases with the increase of the block size.
The TEC of the Task and the Rewards of the ECDs: We
evaluate the TEC of the task and the rewards of the ECDs
by changing different parameters (i.e., the number of AVs, the
sensing accuracy requested by the crowdsensing task, and the
maximum time that an AV completes the task in the networks).
The schemes used in the simulations are detailed as follows.
1) The Random Coalition Scheme (RCS): The ECD ran-
domly selects an AV to form the coalition. If the AV in
the coalition cannot complete the task, the ECD selects
a new AV to merge in the coalition. Repeat this pro-
cess until the crowdsensing task can be completed by
the AVs in the coalition.
2) The Grand Coalition Scheme (GCS): The ECD selects
all the AVs in set I∗ to form the grand coalition to
execute the crowdsensing task.
3) The Greedy Scheme (GS): The ECD selects AVs to form
the coalition in a greedy manner. Specifically, the ECD
selects the AV which declares with the lowest reward
to form the coalition. After this, the ECD removes the
selected AV from set I∗. If the AV in the coalition cannot
complete the task, the ECD then selects a new AV which
declares with the lowest reward from set I∗ to merge in
the coalition. Repeat this process until the crowdsensing
task can be completed by the AVs in the coalition.
4) The BCC: The ECD selects the AVs in set I∗ with the
adoption of the proposed BCC to form the OCC.
Fig. 5(a) depicts the TEC of the task by changing the max-
imum time spent on completing the crowdsensing task. We
can see from this figure that the proposed BCC can lead to
the lowest TEC for completing the crowdsensing task com-
pared with the conventional schemes. With the increase of the
maximum time spent on completing the task, the differences
between the proposed BCC and other schemes become large.
In addition, with the increase of the maximum time to com-
plete the task, the average time of AVs to complete the task
becomes long. Along with this, the probability that the task can
be completed by AVs becomes low. Consequently, the TEC in
all the schemes increases with the increase of the maximum
time spent on completing the task.
Fig. 5(b) shows the rewards of the ECDs in the networks by
changing the maximum time spent on completing the crowd-
sensing task. From this figure, it can be seen that the proposal
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
HUI et al.: BCC: BLOCKCHAIN-BASED COLLABORATIVE CROWDSENSING IN AUTONOMOUS VEHICULAR NETWORKS 4529
(a) (b)
Fig. 6. (a) TEC of the task by changing the number of AVs. (b) Rewards
of ECDs by changing the number of AVs.
can result in the highest rewards for ECDs compared with
other schemes. Furthermore, we can see from this figure that
the rewards of ECDs decrease with the increase of the maxi-
mum time spent on completing the task in all the schemes. The
reason for this is that with the increase of the maximum time
spent on completing the task, each AV needs a longer time to
complete the task individually. As the deadline for completing
the task does not change, the probability to complete the task
by the AVs becomes low which decreases the rewards of the
ECDs in the AVNs.
Fig. 6(a) shows the TEC of the task by changing the number
of AVs. From this figure, we can see that the BCC can lead to
the lowest TEC for completing the task no matter the number
of AVs is large or small. This is because the BCC can select
the optimal AVs to form the OCC for completing the task.
Furthermore, we can see that the TEC for completing the task
decreases with the increase of the number of AVs. This is
because the increase of the number of AVs leads to the fact
that more AVs with a low sensing time can be selected to form
the OCC to minimize the TEC. Therefore, the TEC decreases
with the increase of the number of AVs.
Fig. 6(b) depicts the rewards of the ECDs in the networks by
changing the number of AVs. With different numbers of AVs,
we can see from this figure that the BCC can obtain higher
rewards than the other schemes. The reasons for this are as
follows. First, the probability that the task can be completed
by AVs increases with the increase of the number of AVs. In
this way, more rewards can be obtained by ECDs. Second, as
we can see from Fig. 6(a), the TEC for completing the task
decreases with the increase of the number of AVs. As a result,
more rewards for completing the task then can be distributed
to the ECDs which contribute their resources for publishing
the task and generating the new block.
Fig. 7(a) shows the TEC of the task by changing the sens-
ing accuracy requested by the task. By comparing with other
schemes, it can be seen in this figure that the BCC can lead
to the lowest TEC. In addition, with the increase of the sens-
ing accuracy requested by the task, only a small number of
AVs can be selected to form the coalition to complete the task
collaboratively. The probability to complete the crowdsensing
task thus becomes low. On the other hand, for the AVs with
a sensing accuracy that is larger than the requested sensing
accuracy, they may request a high reward for executing the
crowdsensing task, resulting in a high TEC for completing
the crowdsensing task.
(a) (b)
Fig. 7. (a) TEC of the task by changing the sensing accuracy requested by
the task. (b) Rewards of ECDs by changing the sensing accuracy requested
by the task.
Fig. 7(b) shows the rewards of the ECDs in the networks by
changing the sensing accuracy requested by the crowdsensing
task. With the designed BCC, the OCC for completing the
task can be formed by the AVs to minimize the TEC. As a
result, we can see from this figure that the BCC can obtain
the highest rewards compared with other schemes. In addi-
tion, the rewards of ECDs decrease with the increase of the
sensing accuracy requested by the task. When the requested
sensing accuracy is 0.95, a large number of AVs cannot be
used to form the OCC. Along with this, the probability that
the available AVs can complete the crowdsensing task within
the deadline becomes low. Consequently, compared with other
values, the rewards of the ECDs in the AVNs are lower when
the requested sensing accuracy is 0.95.
VI. CONCLUSION
In this article, we have proposed BCC to support vehic-
ular crowdsensing in AVNs. In the BCC, we have designed
the blockchain-based transaction architecture to guarantee the
privacy of AVs and enable ECDs to earn rewards securely.
With the blockchain architecture, we have designed a coali-
tion game model to formulate the interactions among the AVs,
where the transferable rewards can motivate AVs to collabo-
ratively execute the crowdsensing tasks. Based on the game
model, a coalition formation algorithm has been developed to
select a group of AVs to form the OCC with the target of min-
imizing the TEC. By analyzing the security and evaluating the
performance of the proposed BCC, we have shown that BCC
can effectively defend against the attacks and outperform the
conventional schemes in terms of the TEC for completing the
task and the rewards obtained by the ECDs.
For further work, based on the various behaviors of the
AVs in the networks, we plan to design vehicle classifica-
tion schemes to further improve the performance of vehicular
crowdsensing. In addition, by considering the frequent data
sharing in the AVNs, the integration of digital twin technol-
ogy and vehicular crowdsensing will be considered to reduce
the overhead of the crowdsensing system.
APPENDIX A
PROOF OF THEOREM 1
We consider two coalitions I
′
(I
′ ⊆ I∗) and I
′′
(I
′′ ⊆ I∗),
where both of them only have one AV in the coalition, namely,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
4530 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 6, MARCH 15, 2022
I
′ = {i′ } and I
′′ = {i′′ }. Obviously, we have I
′∩I
′′ = ∅. The two
coalitions can form a new coalition, denoted as I = I
′ ∪ I
′′ =
{i′, i
′′ }. We assume that both the two AVs can complete the
crowdsensing task individually. In other words, we have ti′jk
≤
Tnk and ti′′jk
≤ Tnk . We further assume ti′jk
< ti′′jk
and ri
′
jk
< ri
′′
jk
.
As such, the AV i
′
which declares a lower reward will be
selected to execute the crowdsensing task. The reward of AV
i
′
can be calculated by R(I
′
) = R({i′ }) = ri
′
jk
ti′jk
. Accordingly,
the reward of AV i
′′
in coalition I
′′
is zero, shown as R(I
′′
) =
R({i′′ }) = 0. Then, we calculate the reward of coalition I,
shown as
R(I
′ ∪ I
′′
) =
ri
′
jk
ti′jk
+ ri
′′
jk
ti′′jk
|I|
=
ri
′
jk
ti′jk
+ ri
′′
jk
ti′′jk
2
. (20)
Based on (20), we define � as
� = R(I
′
)+ R(I
′′
)− R(I
′ ∪ I
′′
). (21)
By substituting (20) into (21), we have
� = R(I
′
)+ R(I
′′
)− R(I
′ ∪ I
′′
)
= ri
′
jk
ti′jk
+ 0−
ri
′
jk
ti′jk
+ ri
′′
jk
ti′′jk
2
=
ri
′
jk
ti′jk
− ri
′′
jk
ti′′jk
2
. (22)
As ti′jk
< ti′′jk
and ri
′
jk
< ri
′′
jk
, we have � < 0, which means
that R(I
′
)+R(I
′′
) < R(I
′ ∪ I
′′
). Based on Definition 2, we thus
can conclude that the coalition game is nonsuperadditive. The
theorem is proved. �
APPENDIX B
PROOF OF THEOREM 2
Based on Definition 3, we can know that a partition should
satisfy the group rationality and individual rationality concur-
rently. Here, we prove the theorem according to the individual
rational condition. To prove the individual rationality, we con-
tinue to consider the two coalitions (i.e., I
′
(I
′ ⊆ I∗) and
I
′′
(I
′′ ⊆ I∗)), where the assumptions are the same with the
proof of Theorem 1. As such, AV i
′
can complete the task
individually and obtain the reward R(I
′
) = R({i′ }) = ri
′
jk
ti′jk
. If
the two coalitions form a new coalition, the reward of AV i
′
becomes R({i′ }) = (ri
′
jk
ti′jk
/2). Obviously, ri
′
jk
ti′jk
> (ri
′
jk
ti′jk
/2),
which means that if the two coalitions are merged, the reward
of AV i
′
will become lower than acting alone. Based on
Definitions 5 and 6, we therefore can conclude that the core
of the proposed coalition game is empty. The theorem is
proved. �
ACKNOWLEDGMENT
The authors would like to thank the Editor and the anony-
mous reviewers for their careful reading and valuable sugges-
tions that helped to improve the quality of this manuscript.
REFERENCES
[1] Y. Hui, Z. Su, and T. H. Luan, “Unmanned era: A service response
framework in smart city,” IEEE Trans. Intell. Transp. Syst., early access,
Feb. 18, 2021, doi: 10.1109/TITS.2021.3058385.
[2] S. Zhang, J. Chen, F. Lyu, N. Cheng, W. Shi, and X. Shen, “Vehicular
communication networks in the automated driving era,” IEEE Commun.
Mag., vol. 56, no. 9, pp. 26–32, Sep. 2018.
[3] J. Wang, J. Liu, and N. Kato, “Networking and communications in
autonomous driving: A survey,” IEEE Commun. Surveys Tuts., vol. 21,
no. 2, pp. 1243–1274, 2nd Quart., 2019.
[4] H. Peng, Q. Ye, and X. S. Shen, “SDN-based resource management
for autonomous vehicular networks: A multi-access edge computing
approach,” IEEE Wireless Commun., vol. 26, no. 4, pp. 156–162,
Aug. 2019.
[5] Z. Su, Y. Hui, and T. H. Luan, “Distributed task allocation to enable
collaborative autonomous driving with network softwarization,” IEEE J.
Sel. Areas Commun., vol. 36, no. 10, pp. 2175–2189, Oct. 2018.
[6] R. Hussain and S. Zeadally, “Autonomous cars: Research results, issues,
and future challenges,” IEEE Commun. Surveys Tuts., vol. 21, no. 2,
pp. 1275–1313, 2nd Quart., 2019.
[7] S. Kuutti, S. Fallah, K. Katsaros, M. Dianati, F. Mccullough, and
A. Mouzakitis, “A survey of the state-of-the-art localization techniques
and their potentials for autonomous vehicle applications,” IEEE Internet
Things J., vol. 5, no. 2, pp. 829–846, Apr. 2018.
[8] N. Cheng et al., “Big data driven vehicular networks,” IEEE Netw.,
vol. 32, no. 6, pp. 160–167, Nov./Dec. 2018.
[9] Y. Hui, Z. Su, T. H. Luan, and C. Li, “Reservation service: Trusted relay
selection for edge computing services in vehicular networks,” IEEE J.
Sel. Areas Commun., vol. 38, no. 12, pp. 2734–2746, Dec. 2020.
[10] H. Peng and X. Shen, “Deep reinforcement learning based resource man-
agement for multi-access edge computing in vehicular networks,” IEEE
Trans. Netw. Sci. Eng., vol. 7, no. 4, pp. 2416–2428, Oct.–Dec. 2020.
[11] N. Cheng et al., “Air-ground integrated mobile edge networks:
Architecture, challenges, and opportunities,” IEEE Commun. Mag.,
vol. 56, no. 8, pp. 26–32, Aug. 2018.
[12] Y. Hui, Z. Su, T. H. Luan, and J. Cai, “Content in motion: An
edge computing based relay scheme for content dissemination in urban
vehicular networks,” IEEE Trans. Intell. Transp. Syst., vol. 20, no. 8,
pp. 3115–3128, Aug. 2019.
[13] L. Zhu, C. Zhang, C. Xu, and K. Sharif, “RTSense: Providing reliable
trust-based crowdsensing services in CVCC,” IEEE Netw., vol. 32, no. 3,
pp. 20–26, May/Jun. 2018.
[14] A. Kaci and A. Rachedi, “MC-track: A cloud based data oriented vehicu-
lar tracking system with adaptive security,” in Proc. IEEE GLOBECOM,
2020, pp. 1–6.
[15] C. Huang et al., “RepChain: A reputation-based secure, fast, and high
incentive blockchain system via sharding,” IEEE Internet Things J.,
vol. 8, no. 6, pp. 4291–4304, Mar. 2021.
[16] Y. Yahiatene and A. Rachedi, “Towards a blockchain and software-
defined vehicular networks approaches to secure vehicular social
network,” in Proc. IEEE CSCN, 2020, pp. 1–7.
[17] A. Kaci and A. Rachedi, “Toward a machine learning and soft-
ware defined network approaches to manage miners’ reputation in
blockchain,” J. Netw. Syst. Manag., vol. 28, pp. 478–501, Jul. 2020.
[18] J. Yu, D. Kozhaya, J. Decouchant, and P. Esteves-Verissimo, “RepuCoin:
Your reputation is your power,” IEEE Trans. Comput., vol. 68, no. 8,
pp. 1225–1237, Aug. 2019.
[19] A. Kaci and A. Rachedi, “PoolCoin: Toward a distributed trust model for
miners’ reputation management in blockchain,” in Proc. IEEE CCNC,
2020, pp. 1–6.
[20] J. Kang et al., “Blockchain for secure and efficient data sharing in vehic-
ular edge computing and networks,” IEEE Internet Things J., vol. 6,
no. 3, pp. 4660–4670, Jun. 2019.
[21] D. B. Rawat, R. Doku, A. Adebayo, C. Bajracharya, and C. Kamhoua,
“Blockchain enabled named data networking for secure vehicle-to-
everything communications,” IEEE Netw., vol. 34, no. 5, pp. 185–189,
Sep./Oct. 2020.
[22] Z. Su, Y. Wang, Q. Xu, M. Fei, Y.-C. Tian, and N. Zhang, “A secure
charging scheme for electric vehicles with smart communities in energy
blockchain,” IEEE Internet Things J., vol. 6, no. 3, pp. 4601–4613,
Jun. 2019.
[23] T. Jiang, H. Fang, and H. Wang, “Blockchain-based Internet of
Vehicles: Distributed network architecture and performance analysis,”
IEEE Internet Things J., vol. 6, no. 3, pp. 4640–4649, Jun. 2019.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TITS.2021.3058385
HUI et al.: BCC: BLOCKCHAIN-BASED COLLABORATIVE CROWDSENSING IN AUTONOMOUS VEHICULAR NETWORKS 4531
[24] L. Xiao, T. Chen, C. Xie, H. Dai, and H. V. Poor, “Mobile crowdsensing
games in vehicular networks,” IEEE Trans. Veh. Technol., vol. 67, no. 2,
pp. 1535–1545, Feb. 2018.
[25] J. Ni, A. Zhang, X. Lin, and X. Shen, “Security, privacy, and fairness
in fog-based vehicular crowdsensing,” IEEE Commun. Mag., vol. 55,
no. 6, pp. 146–152, Jun. 2017.
[26] X. Wang et al., “A city-wide real-time traffic management system:
Enabling crowdsensing in social Internet of Vehicles,” IEEE Commun.
Mag., vol. 56, no. 9, pp. 19–25, Sep. 2018.
[27] F. Campioni, S. Choudhury, K. Salomaa, and S. G. Akl, “Improved
recruitment algorithms for vehicular crowdsensing networks,” IEEE
Trans. Veh. Technol., vol. 68, no. 2, pp. 1198–1207, Feb. 2019.
[28] J. Huang et al., “Blockchain-based mobile crowd sensing in industrial
systems,” IEEE Trans. Ind. Informat., vol. 16, no. 10, pp. 6553–6563,
Oct. 2020.
[29] Q. Kong, L. Su, and M. Ma, “Achieving privacy-preserving and verifi-
able data sharing in vehicular fog with blockchain,” IEEE Trans. Intell.
Transp. Syst., vol. 22, no. 8, pp. 4889–4898, Aug. 2021.
[30] Y. Liang, Y. Li, and B. Shin, “Faircs-blockchain-based fair crowdsensing
scheme using trusted execution environment,” Sensors, vol. 20, no. 11,
pp. 1–15, Jun. 2020.
[31] J. Wang, X. Feng, T. Xu, H. Ning, and T. Qiu, “Blockchain-based
model for nondeterministic crowdsensing strategy with vehicular team
cooperation,” IEEE Internet Things J., vol. 7, no. 9, pp. 8090–8098,
Sep. 2020.
[32] J. Hu, K. Yang, K. Wang, and K. Zhang, “A blockchain-based reward
mechanism for mobile crowdsensing,” IEEE Trans. Comput. Soc. Syst.,
vol. 7, no. 1, pp. 178–191, Feb. 2020.
[33] C. Chen, J. Hu, T. Qiu, M. Atiquzzaman, and Z. Ren, “CVCG:
Cooperative V2V-aided transmission scheme based on coalitional game
for popular content distribution in vehicular ad-hoc networks,” IEEE
Trans. Mobile Comput., vol. 18, no. 12, pp. 2811–2828, Dec. 2019.
[34] K. Xu, K.-C. Wang, R. Amin, J. Martin, and R. Izard, “A fast
cloud-based network selection scheme using coalition formation games
in vehicular networks,” IEEE Trans. Veh. Technol., vol. 64, no. 11,
pp. 5327–5339, Nov. 2015.
[35] W. Saad, Z. Han, A. Hjorungnes, D. Niyato, and E. Hossain, “Coalition
formation games for distributed cooperation among roadside units in
vehicular networks,” IEEE J. Sel. Areas Commun., vol. 29, no. 1,
pp. 48–60, Jan. 2011.
[36] Z. Zhou, H. Yu, C. Xu, Y. Zhang, S. Mumtaz, and J. Rodriguez,
“Dependable content distribution in D2D-based cooperative vehicular
networks: A big data-integrated coalition game approach,” IEEE Trans.
Intell. Transp. Syst., vol. 19, no. 3, pp. 953–964, Mar. 2018.
[37] Y. Hui, Z. Su, T. H. Luan, and J. Cai, “A game theoretic scheme
for optimal access control in heterogeneous vehicular networks,” IEEE
Trans. Intell. Transp. Syst., vol. 20, no. 12, pp. 4590–4603, Dec. 2019.
[38] C. Zhang et al., “Bsfp: Blockchain-enabled smart parking with fairness,
reliability and privacy protection,” IEEE Trans. Veh. Technol., vol. 69,
no. 6, pp. 6578–6591, Jun. 2020.
[39] Y. Yao, X. Chang, J. Misic, V. Misic, and L. Li, “Bla: Blockchain-
assisted lightweight anonymous authentication for distributed vehicular
fog services,” IEEE Internet Things J., vol. 6, no. 2, pp. 3775–3784,
Apr. 2019.
[40] C. Zhang, L. Zhu, C. Xu, and K. Sharif, “PRVB: Achieving privacy-
preserving and reliable vehicular crowdsensing via blockchain oracle,”
IEEE Trans. Veh. Technol., vol. 70, no. 1, pp. 831–843, Jan. 2021.
[41] Y. Zhang, B. Di, P. Wang, J. Lin, and L. Song, “HetMec: Heterogeneous
multi-layer mobile edge computing in the 6G era,” IEEE Trans. Veh.
Technol., vol. 69, no. 4, pp. 4388–4400, Apr. 2020.
[42] Y. Hui et al., “Secure and personalized edge computing services in
6G heterogeneous vehicular networks,” IEEE Internet Things J., early
access, Mar. 15, 2021, doi: 10.1109/JIOT.2021.3065970.
[43] A. B. T. Sherif, K. Rabieh, M. M. E. A. Mahmoud, and X. Liang,
“Privacy-preserving ride sharing scheme for autonomous vehicles in big
data era,” IEEE Internet Things J., vol. 4, no. 2, pp. 611–618, Apr. 2017.
[44] J. Ni, K. Zhang, Y. Yu, X. Lin, and X. Shen, “Privacy-preserving smart
parking navigation supporting efficient driving guidance retrieval,” IEEE
Trans. Veh. Technol., vol. 67, no. 7, pp. 6504–6517, Jul. 2018.
[45] Y. Li and B. Hu, “A consortium blockchain-enabled secure and privacy-
preserving optimized charging and discharging trading scheme for elec-
tric vehicles,” IEEE Trans. Ind. Informat., vol. 17, no. 3, pp. 1968–1977,
Mar. 2021.
[46] Q. Yang and H. Wang, “Privacy-preserving transactive energy manage-
ment for IoT-aided smart homes via blockchain,” IEEE Internet Things
J., vol. 8, no. 14, pp. 11463–11475, Jul. 2021.
[47] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Performance
optimization for blockchain-enabled Industrial Internet of Things (IIoT)
systems: A deep reinforcement learning approach,” IEEE Trans. Ind.
Informat., vol. 15, no. 6, pp. 3559–3570, Jun. 2019.
[48] Y. Wang, Y. Niu, H. Wu, Z. Han, B. Ai, and Q. Wang, “Sub-channel allo-
cation for device-to-device underlaying full-duplex mmWave small cells
using coalition formation games,” IEEE Trans. Veh. Technol., vol. 68,
no. 12, pp. 11915–11927, Dec. 2019.
[49] N. Zhao, H. Wu, and Y. Chen, “Coalition game-based computation
resource allocation for wireless blockchain networks,” IEEE Internet
Things J., vol. 6, no. 5, pp. 8507–8518, Oct. 2019.
[50] Q. Pham, H. T. Nguyen, Z. Han, and W. Hwang, “Coalitional games for
computation offloading in noma-enabled multi-access edge computing,”
IEEE Trans. Veh. Technol., vol. 69, no. 2, pp. 1982–1993, Feb. 2020.
[51] Y. Wang, H. Wu, Y. Niu, Z. Han, B. Ai, and Z. Zhong, “Coalition game
based full-duplex popular content distribution in mmWave vehicular
networks,” IEEE Trans. Veh. Technol., vol. 69, no. 11, pp. 13836–13848,
Nov. 2020.
[52] Y. Chen, B. Ai, Y. Niu, K. Guan, and Z. Han, “Resource allocation
for device-to-device communications underlaying heterogeneous cellu-
lar networks using coalitional games,” IEEE Trans. Wireless Commun.,
vol. 17, no. 6, pp. 4163–4176, Jun. 2018.
[53] B. Cao, X. Wang, W. Zhang, H. Song, and Z. Lv, “A many-objective
optimization model of Industrial Internet of Things based on private
blockchain,” IEEE Netw., vol. 34, no. 5, pp. 78–83, Sep./Oct. 2020.
Yilong Hui (Member, IEEE) received the Ph.D.
degree in control theory and control engineer-
ing from Shanghai University, Shanghai, China, in
2018.
He is currently a Lecturer with the State Key
Laboratory of Integrated Services Networks and the
School of Telecommunications Engineering, Xidian
University, Xi’an, China. He has published over 30
scientific articles in leading journals and interna-
tional conferences. His research interests include
wireless communication, vehicular networks, and
autonomous driving.
Dr. Hui was a recipient of the Best Paper Award of International Conference
WiCon2016 and IEEE Cyber-SciTech2017.
Yuanhao Huang received the B.Eng. degree in
communication and information system from Xidian
University, Xi’an, China, in 2020, where he is cur-
rently pursuing the master’s degree with the School
of Telecommunications Engineering.
His current research interests include blockchain
and vehicular networks.
Zhou Su (Senior Member, IEEE) received the
Ph.D. degree from Waseda University, Tokyo,
Japan, in 2003.
His research interests include multimedia com-
munications, wireless communications, and network
traffic.
Dr. Su received the Best Paper Award of the
International Conference IEEE BigdataSE2019,
the IEEE ComSoc GCCTC2018, the IEEE
CyberSciTech2017, and the Funai Information
Technology Award for Young Researchers in 2009.
He is a TPC Member of some flagship conferences, including the IEEE
INFOCOM, the IEEE ICC, and the IEEE Globecom. He is the Chair
of the Multimedia Services and Applications Over Emerging Networks
Interest Group (MENIG), the IEEE ComSoc Society, and the Multimedia
Communications Technical Committee. He also served as the Co-Chair for
several international conferences, including the IEEE Vehicular Technology
Conference Spring 2016 and the IEEE Consumer Communications and
Networking Conference 2011. He is an Associate Editor of the IEEE OPEN
JOURNAL OF COMPUTER SOCIETY and IET Communications.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/JIOT.2021.3065970
4532 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 6, MARCH 15, 2022
Tom H. Luan (Senior Member, IEEE) received the
B.E. degree in electrical and computer engineering
from Xi’an Jiaotong University, Xi’an, China, in
2004, the master’s degree in electrical and computer
engineering from Hong Kong University of Science
and Technology, Hong Kong, in 2007, and the Ph.D.
degree in electrical and computer engineering from
the University of Waterloo, Waterloo, ON, Canada,
in 2012.
He is a Professor with the School of Cyber
Engineering, Xidian University, Xi’an. He has
authored/coauthored around 70 journal papers and 40 technical papers in
conference proceedings, and awarded one U.S. patent. His research mainly
focuses on the content distribution and media streaming in the vehicular ad hoc
networks and peer-to-peer networking, and protocol design and performance
evaluation of wireless cloud computing and fog computing.
Nan Cheng (Member, IEEE) received the B.E. and
M.S. degrees from the Department of Electronics
and Information Engineering, Tongji University,
Shanghai, China, in 2009 and 2012, respectively, and
the Ph.D. degree from the Department of Electrical
and Computer Engineering, University of Waterloo,
Waterloo, ON, Canada, in 2016.
He worked as a Postdoctoral Fellow with the
Department of Electrical and Computer Engineering,
University of Toronto, Toronto, ON, Canada, from
2017 to 2019. He is currently a Professor with
the State Key Laboratory of ISN and the School of Telecommunications
Engineering, Xidian University, Xi’an, China. His current research focuses on
B5G/6G, space–air–ground integrated network, big data in vehicular networks,
and self-driving system. His research interests also include performance
analysis, opportunistic communication, and application of AI for vehicular
networks.
Xiao Xiao received the B.S. degree in control
technology and instrumentation from Xidian
University, Xi’an, China, in 2004, and the Ph.D.
degree in measuring and testing technologies and
instruments from Zhejiang University, Hangzhou,
China, in 2009.
He is currently a Lecturer with the School
of Telecommunications Engineering, Xidian
University. He was a Research Fellow with the
Department of Electrical Engineering and Computer
Science, University of Tennessee, Knoxville,
TN, USA, from 2019 to 2020. His research interests include intelligent
transportation system, computer vision, and deep learning.
Guoru Ding (Senior Member, IEEE) received
the B.S. degree (Hons.) in electrical engineering
from Xidian University, Xi’an, China, in 2008,
and the Ph.D. degree (Hons.) in communica-
tions and information systems from the College
of Communications Engineering, Army Engineering
University, Nanjing, China, in 2014.
He is currently an Associate Professor with
the College of Communications Engineering, Army
Engineering University. From 2015 to 2018, he was
a Postdoctoral Research Associate with the National
Mobile Communications Research Laboratory, Southeast University, Nanjing.
His research interests include cognitive radio networks, massive MIMO,
machine learning, and data analytics over wireless networks.
Dr. Ding has received the Excellent Doctoral Thesis Award of the China
Institute of Communications in 2016, the Alexander von Humboldt Fellowship
in 2017, the Excellent Young Scientist of Wuwenjun Artificial Intelligence
in 2018, and the 14th IEEE COMSOC Asia–Pacific Outstanding Young
Researcher Award in 2019. He was a recipient of the Natural Science
Foundation for Distinguished Young Scholars of Jiangsu Province, China,
and six best paper awards from international conferences, such as the IEEE
VTC-FALL 2014. He has served as a Guest Editor for the IEEE JOURNAL ON
SELECTED AREAS IN COMMUNICATIONS (special issue on spectrum sharing
and aggregation in future wireless networks). He is currently an Associate
Editor of the IEEE TRANSACTIONS ON COGNITIVE COMMUNICATIONS
AND NETWORKING and a Technical Editor of the IEEE 1900.6 Standard
Association Working Group.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:45:22 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice