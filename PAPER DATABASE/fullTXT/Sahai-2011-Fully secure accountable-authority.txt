Title
Fully Secure Accountable-Authority
Identity-Based Encryption
Amit Sahai and Hakan Seyalioglu
The University of California - Los Angeles
sahai@cs.ucla.edu, hseyalioglu@ucla.edu
Abstract. The problem of trust is one of the biggest concerns in any
identity-based infrastructure where the key-generation authority (called
the PKG) must choose secret keys for participants and therefore be
highly trusted by all parties. While some abilities of the PKG are intrin-
sic to this setting, reducing this trust as much as possible is beneficial to
both user and authority as the less trust is placed in it, the less an honest
authority can be accused of abusing that trust. Goyal (CRYPTO 2007)
defined the notion of Accountable-Authority IBE in which a dishonest
PKG who had leaked a user’s private key could be proven guilty. Later,
Goyal et al. (CCS 2008) asked whether it would be possible to implicate
a PKG who produced an unauthorized decoder box, enabling decryption
with a noticeable probability but which may not actually grant access
to a well-formed key. Formally, would it be possible for a tracing al-
gorithm to implicate a dishonest PKG given only black-box access to
such a decoder? Goyal et al. could only provide such a scheme in the
weaker setting of selective security, where an adversary must declare at
the start of the game which identity it intends to target. In this work,
we provide the first fully secure accountable-authority IBE scheme. We
prove security from the standard DBDH assumption while losing none
of the functionality or security of the original proposal.
Keywords: Identity-Based Encryption, Accountable Authority,
Tracing.
1 Introduction
Since its introduction by Shamir [24] and first constructions by Boneh and
Franklin [4] and Cocks [7], identity-based encryption (IBE) has been one of
the most active areas of cryptographic research, with numerous applications to
computer security and privacy (e.g. [3,2,9,25]). Many concepts of independent
interest sprang from this topic such as Fuzzy IBE and Attribute Based Encryp-
tion [23,14,12,22] which allow encryption to groups of users whose credentials
(a.k.a. attributes) satisfy a given access policy, and Hierarchical IBE [10,11,17]
which allows key generation in a leveled fashion.
Despite its applications and practicality, the security of an IBE scheme relies
heavily on trusting the key generation authority. Despite the tremendous prac-
tical security benefits of not having to manage a public-key infrastructure (PKI)
D. Catalano et al. (Eds.): PKC 2011, LNCS 6571, pp. 296–316, 2011.
c© International Association for Cryptologic Research 2011
Fully Secure Accountable-Authority Identity-Based Encryption 297
based on individual public keys, trusting any single authority is very troubling.
It is a natural and important question to ask how one can reduce the trust one
must have in the private key generator. One proposed method to reduce this
trust is to employ multiple PKGs such that no single entity can compromise
security [2]; however, the question of widespread collusion naturally remained.
This left open the problem of reducing trust in a single central authority.
Note that such a central authority can clearly decrypt all messages in the sys-
tem. However, in many practical situations, users may not be worried that the
authority would have the inclination or resources to specifically eavesdrop on
their communications. On the other hand, users would want some assurance
that the authority doesn’t issue their secret keys to other potentially malicious
users, who might have a lower profile and have less to lose if caught. This is
precisely the problem proposed and addressed by the work of Goyal [13] by in-
troducing the notion of Accountable-Authority IBE (A-IBE). If a user finds a key
for his identity being disseminated without permission (e.g. the user finds that
his secret key is being put up for auction on EBay), Goyal proposed a system
where the user can prove that it would have been computationally impossible
for the user to have created this compromised key. Since the only other entity
with access to keys to the user’s identity is the PKG, this allowed the user to
successfully implicate a malicious PKG of malfeasance.
Goyal’s first construction relied heavily on seeing the actual compromised
key, and as-such this first construction is called only white-box secure. Such
white-box security leaves a great deal to be desired, for instance, while able
to still decrypt, the key may have been manipulated in some way. A natural
extension is to ask whether it would be possible to implicate a PKG who has
disseminated a decoder “box” which allows decryption of ciphertexts encrypted
to some identity rather than simply leaking a key itself in the clear (e.g. selling
such a box or a heuristically obfuscated piece of decryption software). Since
the exact information used to create this decoder box may be hidden, this is
called black box security and is the strongest current proposed notion of A-IBE.
If we can trace a PKG who issues decoder boxes, it forces a user attempting to
dishonestly acquire decryptions to continually interact with the PKG (who may,
for example, be acting as a decryption oracle). Such a setting is much riskier for
the dishonest PKG since it requires a much greater level of communication with
the dishonest user.
Giving a black-box secure A-IBE scheme was specifically labeled the most im-
portant problem left open in Goyal’s original work. The first work made some
progress towards obtaining black-box security, which was later refined [15,19] (the
latter of which proves security if a cheating authority is denied a decryption or-
acle); however, major shortcomings remained. The only known black-box secure
constructions are in a very weak model of security called “selective security” where
the adversary must designate the identity which it will create a decoder box for
before even seeing the public parameters. While selective security was useful for
exploring these concepts, it is a completely unreasonable requirement for security
since real-world adversaries have the ability to pick targets adaptively.
298 A. Sahai and H. Seyalioglu
In fact, selective security is especially troubling in the A-IBE setting since
selective security is only a reasonable benchmark if there are only a few high
value targets whom an adversary would be interested in attacking (making the
prospect of picking a target adaptively during the attack less appealing). How-
ever, in a subscription service handled through decoder boxes (one of the most
natural applications for a black-box A-IBE scheme), there would be many targets
of equal value, making selective-security particularly troubling.
1.1 Our Contributions
In this work, we provide the first fully secure black-box accountable-authority
IBE scheme. We are able to prove security based on the standard DBDH number-
theoretic intractability assumption while losing none of the functionality or se-
curity of the original proposal of Goyal [13].
A limitation of previous work [15] which obtained selective black-box security
was that it obtained functionality from established Attribute-Based Encryption
schemes without modifying the scheme to better suit the A-IBE framework.
A main contribution of this work is that we can obtain A-IBE by only moving
“halfway” between basic IBE and Attribute-Based Encryption, in a setting where
identities do have attributes, but these attributes are assigned randomly. We call
such a scheme a Dummy-IBE scheme and use it to construct black-box A-IBE.
We then give a construction of a Dummy-IBE scheme by combining mechanics
of Waters’ IBE scheme [25] and the Attribute-Based Encryption scheme due
to Sahai and Waters [23]. We note that a fully secure ABE scheme would not
directly suffice to make the previous construction work, in particular, ciphertext
and key-sanity checks (to be defined later) would also be necessary. Indeed in
contrast to recent findings in fully secure ABE [18,21], we are able to follow the
framework of previous selectively secure ABE constructions [23] to achieve full
black-box security, and as a result inherit these schemes’ improved efficiency and
analytic simplicity.
2 Preliminaries
We will often use the notation [a, b] to denote all integers between a and b,
inclusive and bold font (e.g. x, A) to denote vectors. A bracketed index (e.g.
x[j], A[i]) will denote the value at that index of the relevant vector. A negligible
value is one that grows slower than any inverse polynomial of a certain parameter
(usually the security parameter) and a probability is said to be overwhelming if
it is within an additive negligible probability of 1.
2.1 Bilinear Maps
Let G, GT be two multiplicative groups of prime order p. Let g be a generator
of G and e : G × G → GT . We assume e satisfies bilinearity (for all u, v ∈ G1
and a, b ∈ Zp, we have e(ua, vb) = e(u, v)ab) and non-degeneracy (e(g, g) �= 1).
Fully Secure Accountable-Authority Identity-Based Encryption 299
2.2 Security Assumption
Definition 1 (Decisional BilinearDiffie-Hellman (DBDH) Assumption)
Suppose the values a, b, c, z ← Zp, β ← {0, 1} are chosen at random. The DBDH
assumption states that no probabilistic polynomial-time algorithm can distinguish
the tuple (g, A = ga, B = gb, C = gc, e(g, g)abc) from the tuple (g, A = ga, B =
gb, C = gc, e(g, g)z) with more than a negligible advantage.
2.3 Fully-Simulatable Oblivious Transfer
Informally, a k-out-of-n oblivious transfer protocol [8] is a two-party protocol
in which n strings are stored by one party and at the end, the other party has
received exactly k of them with the requirements that the receiving party gains
no more information than the k strings it received and the sending party gains
no information about which k the receiving party acquired.
Formally, by a fully-simulatable OT protocol, we will refer to one that meets
Canetti’s requirements for universal composability [6]. If an adversary A′ is in-
teracting with a challenger and has non-negligible success probability ε in a game
which includes some Fully-Simulatable OT protocol, there also exists an adver-
sary A with probability of success within a negligible factor of ε which instead
uses the ideal-world OT protocol where A directly queries the indices of the k
values it will receive from the challenger. We will often transfer our adversaries
into ones which engage in the ideal-world OT protocol. For examples of fully
simulatable Oblivious Transfer using only the DDH and DBDH assumptions
please refer to the following papers: [20,16,5].
2.4 Accountable Authority IBE (A-IBE)
We now recall what it means for an IBE scheme to be A-IBE secure. First, the
scheme must function as a good IBE scheme. Traditionally, it is assumed that the
Key Generation algorithm simply outputs a key, however, since the key received
by each party should not be available to the central authority, we instead assume
it is generated through an interactive protocol.
Definition 2 (Identity Based Encryption (IBE) Scheme). An Identity
Based Encryption Scheme consists of the following four probabilistic polynomial
time algorithms:
– Setup(1λ) → PK, MK. The setup takes as input 1λ with λ the security
parameter and outputs public parameters PK and master secret key MK.
– KeyGen(PK, MK,ID)(→) KID. The user key generation algorithm takes as
inputs PK, MK and an identity ID and engages in an interactive protocol
with the recipient. At the end, the recipient receives a key for ID, KID.
We use the notation (→) to highlight the fact that KeyGen may not know
exactly which key the user receives (for example, if KeyGen is implemented
using an oblivious transfer protocol).
300 A. Sahai and H. Seyalioglu
– Encrypt(M, PK, ID)→ CID. The encryption algorithm takes as input PK,
ID and a message M and outputs a ciphertext CID.
– Decrypt(CID, KID, PK) → M. The decryption algorithm outputs the orig-
inal message with overwhelming probability assuming it is given as input a
key to the identity ID.
We will assume that ID is included in the plain as part of CID and KID during
our analysis for notational simplicity.
Definition 3 (ε-Useful Decoder Box). For non-negligible ε, a probabilistic
polynomial time algorithm DID is an ε-useful decoder box for the identity ID
if:
Pr[M ←M : DID(Encrypt(M, PK, ID) = M ] ≥ ε
The main additional functionality required of an A-IBE scheme follows:
– TraceDID(PK, ID, KID) outputs either User or PKG. Given oracle access to
an ε-useful decoder box DID, PK, ID and a key KID, the tracing algorithm
will decide if DID was created by the trusted authority or by the user who
supplied KID.
Intuitively the tracing algorithm allows a user who has recovered a decoder box
for its identity to reveal its secret key to prove that it could not have generated
this decoder box. This would be impossible if all keys could decrypt perfectly,
which is why we allow decryption a small probability of failure. Additionally, it
has proven very useful to include two more algorithms in most A-IBE schemes for
use in tracing. A term is said to be valid if it is a possible output of the relevant
generation algorithm (in other words, a key KID is valid if it is a possible output
of the key generation algorithm on inputs PK, MK and a ciphertext is valid if
it is the encryption of some M to the relevant identity):
– KeySanity(KID,PK) tests if KID is a proper key for identity ID and outputs
Valid or Not-Valid.
– CiphertextSanity(CID,PK) tests if CID is a proper ciphertext for ID and
outputs Valid or Not-Valid.
2.5 Security Requirements
An A-IBE scheme is called black-box secure if it satisfies the following require-
ments. First, it must satisfy IND-ID-CPA security. Second, if a decoder box DID
was created by the central authority, the tracing algorithm should implicate the
PKG and when it was created by the colluding users, it should implicate the
users. This security requirement is captured in the following games.
Definition 4 (IND-ID-CPA Security). An A-IBE scheme is IND-ID-CPA
secure if the advantage of any probabilistic polynomial time adversary B is neg-
ligible in the game below:
Fully Secure Accountable-Authority Identity-Based Encryption 301
1. Setup. The challenger runs the Setup algorithm and sends PK to B.
2. Phase 1. B engages in a KeyGen protocol with the challenger with adap-
tively chosen IDi and receives KIDi . This may be repeated multiple times
for different identities.
3. Challenge. B submits two messages M0, M1 and an identity ID which it
did not query during Phase 1. The challenger flips a coin b and encrypts Mb
to the identity ID and sends the encryption C to B.
4. Phase 2. Same as Phase 1 except B may not query a decryption key for ID.
5. Guess. The adversary outputs b′ ∈ {0, 1}.
The advantage of B is defined as Pr[b′ = b]− 1
2 .
Definition 5 (Dishonest-User Security). An A-IBE scheme is Dishonest-
User secure if the advantage of any probabilistic polynomial time adversary B is
negligible in the game below:
1. Setup. The challenger runs the Setup algorithm and sends PK to B.
2. Key Generation. The adversary adaptively queries keys for distinct IDi,
and receives KIDi . This may be repeated multiple times for different identi-
ties.
3. Create Decoder Box. The adversary outputs an ε-useful decoder box DID
and K ′
ID for some identity ID queried during the Key-Generation phase.
4. Tracing Failure. Finally, success is defined as the event that: TraceDID(PK,
ID, K ′
ID) = PKG.
At this point it may seem artificial to have the requirement that ID was queried
once in the Key Generation phase of the game, however since the scheme is
required to be IND-ID-CPA secure, outputting a key for an identity which has not
been queried would contradict the previous security requirement and therefore
adding this additional requirement does not weaken security.
Definition 6 (Dishonest-PKG Security). An A-IBE scheme is Dishonest-
PKG secure if the advantage of any probabilistic polynomial time adversary B is
negligible in the game below:
1. Setup. The adversary B generates and passes public parameters PK and ID
to the challenger. The challenger checks PK and ID are well-formed, aborts
if not.
2. Key Generation. The challenger and B engage in the key generation pro-
tocol for an identity ID. If neither party aborts, the challenger receives KID
as output.
3. Decryption. The adversary adaptively queries ciphertexts Ci to the chal-
lenger and the challenger replies with the decryption under KID. This may
be repeated multiple times for different ciphertexts.
4. Create Decoder Box.. The adversary outputs an ε-useful decoder box
DID.
5. Tracing Failure. Finally, success is defined as the event that TraceDID(PK,
ID, KID) = USER.
302 A. Sahai and H. Seyalioglu
If our scheme has a CiphertextSanity check we can always assume decryption
is preceded with verification that the ciphertext is well-formed and if it is not
well-formed, the decryption process can just output ⊥. Informally, this will al-
low us to argue that the PKG gains no information from its decryption queries
since the decryption oracle will only decrypt well-formed ciphertexts, which the
PKG could have decrypted without using the oracle (since the PKG can already
generate a key for any identity).
3 Preliminary Reduction
The first key step in our proof is realizing that A-IBE can be built from an
encryption scheme which falls somewhere between usual IBE and Attribute-
Based Encryption. For this, we introduce the notion of Dummy-IBE in which
every user is assigned a set of attributes which restricts the ciphertexts that can
be decrypted but the user has no control over which attributes are assigned. We
stress again that because of the importance of the sanity checks in our setting,
a fully secure attribute based encryption scheme by itself would not suffice for
our purposes.
3.1 Dummy Identity-Based Encryption
The intuition for Dummy IBE (D-IBE) comes from previous work [15] which
achieves full Dishonest-PKG security (but not full Dishonest-User security).
Keys for identities and ciphertexts will have k attributes and decryption will
only succeed if the encryption was to the target identity and the attribute sets
overlap in at least d indices.
Definition 7 (Dummy Identity-Based Encryption (D-IBE) Scheme).
A D-IBE Encryption scheme D with parameters d ≤ k ≤ n ∈ Θ(λ) consists of
the following four poly-time algorithms:
– Setup(1λ, d, k, n)→ PK, MK public and master keys.
– KeyGen(PK, MK) → KID(S) The key generation algorithm selects S ⊂
[1, n] a random subset of size k, generates1 Kα
ID for all α ∈ [1, n] and outputs
KID(S) = {Kα
ID | α ∈ S}.
– Encrypt(M , PK, ID, S)→ CID(S).
– Decrypt(CID(S),KID(S′),PK)→M where CID(S) is an encryption of M if
|S ∩ S′| ≥ d.
– KeySanity(K∗
ID(S), PK) outputs Valid or Not-Valid depending on whether
the key is a valid key for the implied identity and attribute set.
1 The fact that the key generation algorithm is able to generate all key components
will be important for our reduction. To formalize the above notion, we could have
the key generation algorithm output all key components and only send the ones
corresponding to members in S to the user but we present it as above for notational
simplicity.
Fully Secure Accountable-Authority Identity-Based Encryption 303
– CiphertextSanity(C∗
ID(S), PK) outputs either Valid or Not-Valid depend-
ing on whether the ciphertext is a valid encryption of some message for the
implied identity and attribute set.
We will assume that correctly formatted keys and ciphertexts will include a de-
scription of the relevant identity and dummy-attribute set. In the above notation
α are called the dummy attributes and S is called a dummy attribute set. Cor-
rectness of a Dummy-IBE scheme is as expected, decryption should succeed with
overwhelming probability if the identities of the key and ciphertext match and
the dummy attribute sets overlap in at least d indices.
Definition 8 (Dummy-IBE Security). A Dummy-IBE scheme is said to be
D-IBE secure if the advantage of any probabilistic polynomial time adversary B
is negligible in the game below:
1. Setup. The challenger runs the Setup algorithm and sends PK to B.
2. Queries. B adaptively queries keys for distinct IDi, the challenger returns
KIDi
(Si). This may be repeated multiple times for different identities.
3. Challenge. The adversary specifies M0, M1 and an identity IDj which has
been queried during the Queries phase and a dummy attribute set S such
|S ∩ Sj | < d where Sj is from the Queries phase. The challenger picks
b ∈ {0, 1} at random and sends B, Encrypt(Mb, PK, IDj , S).
4. Guess. The adversary outputs a guess b′ for b.
3.2 D-IBE Implies Dishonest-User Security
We describe how to transform a Dummy-IBE scheme D into a Dishonest-User
Secure A-IBE scheme A. The overall structure of our construction can be consid-
ered a generalization of the construction in [15] where the role of our Dummy-IBE
scheme is instead replaced by a ABE scheme which is not able to satisfy all the
required notions of security. The similarities in structure will allow us to reuse
an information theoretic result for Dishonest-PKG security from previous work
[15]. We will from now on assume that the message space is a group of size super-
polynomial in the security parameter, as is the case for our construction (notice
that making a ε-useful decoder box is trivial if the size is not superpolynomial).
Let d ≤ k ≤ n ∈ Θ(λ), we give concrete bounds k, d and n should satisfy at
the end of this section.
– Setup(1λ) = D.Setup(1λ, n, k, d)
– KeyGen(MK, PK, ID) Using MK, PK, ID, generate K = {Kα
ID : α ∈ [1, n]}
and randomly permute them (call this permutation σ) and engage in a non-
adaptive k-out-of-n oblivious transfer protocol with the user querying the
permuted set as the set of possible values to be transferred. After the OT
protocol concludes send the user σ in the clear. The user now has access to
KID(S) for some random S ⊂ [1, n] and runs a KeySanity check on KID(S)
and terminates the protocol if it fails.
304 A. Sahai and H. Seyalioglu
– Encryption(M, PK, ID) Pick S ⊂ [1, n] at random of size k, output D.
Encrypt(M, PK, ID, S).
– Decrypt(CID(S), PK, KID(S’)) If the ciphertext sanity check of CID(S)
passes output:
D.Decrypt(CID(S),KID(S′),PK), else output ⊥.
Notice that at the moment we only have a guarantee that the decryption algo-
rithm will decrypt if |S ∩ S′| ≥ d. Therefore, pick k and d such that given some
S ⊂ [1, n], |S| = k (the decryption dummy-atributes) a random set S′ ⊂ [1, n]
(the dummy-atributes used during encryption),
Pr[|S ∩ S′| ≥ d] > 1− μ(λ)
for some negligible function μ. If we pick k = cn, d = (c2−δ)n for some constant
c ∈ (0, 1) and δ ∈ (0, c2) by Chernoff bounds, two sets of size k will intersect in
at least d locations with overwhelming probability. From this point, assume k
and d are initialized thusly and c < 1/4.
3.3 Tracing Algorithm
The overarching idea is that if a message has been encrypted to identity ID under
dummy attribute set A, it should only be decryptable by someone holding a key
KID(A′) where |A ∩A′| ≥ d. Therefore, the tracing algorithm, which has oracle
access to DID will repeatedly query ciphertexts the user ID should not be able
to decrypt given the attribute set that was assigned during the key generation
phase. If the decoder box decrypts such a ciphertext, we will be able to conclude
that the decoder box was not created by the user, proving malfeasance on the
part of the PKG.
On input KID(S) with oracle access to DID, the tracing algorithm will run
a KeySanity check to verify the validity of the input key. Then, it will repeat
the following experiment ν(ε) ∈ poly(λ) times (we will choose ν(ε) after the
analysis):
– Select a dummy attribute set Si with |Si ∩ S| < d.
– Select a random message M and encrypt M using Si as the dummy
attributes.
– The decoder box outputs some M ′ = DID(CID(Si)).
If for any iteration M ′ = M , implicate the PKG otherwise, implicate the User.
Theorem 1. If D is a secure Dummy-IBE scheme, the A-IBE construction A
is Dishonest-User secure.
Proof. Assume p.p.t. A′ succeeds in the Dishonest-User game above with non-
negligible probability δ. Since KeyGen is implemented with a fully-simulatable
k-out-of-n oblivious transfer scheme, we can work in the OT-hybrid model by
Canetti’s [6] theorem on composability, which implies there exists p.p.t. A which
also succeeds in the game with non-negligible probability such that A queries
Fully Secure Accountable-Authority Identity-Based Encryption 305
indices during the OT protocol directly from the challenger and the challenger
simply sends the values stored in these indices to A. With this new A which
simply requests indices for messages to receive from the challenger as in the
OT-Hybrid model, the reduction is as follows:
– Setup. Send the public key of the D-IBE scheme to the adversary A.
– Key Generation. On each of the adversary’s queries for an identity to IDj
and indices (for the OT protocol) I ⊂ [1, n], |I| = k, query the D-IBE scheme
for a key on identity IDj and receive KID(Sj) = {Kαi
ID}i∈[1,k]. Now pick a
random σ such that σ(I) = Sj. Send A: {Kα
ID, α ∈ Sj} and σ.
– Create Decoder Box. The adversary outputs a decoder box DIDj along
with a key KIDj (S) with an identity IDj queried at some point in the
key generation phase. Run a KeySanity check to make sure KIDj (S) is a
valid key. If S �= Sj run New Attributes phase, otherwise proceed to the
Tracing Failure phase.
– New Attributes. Since S �= Sj , pick a d element subset S∗ of S which
does not overlap with Sj in more than d − 1 indices (recall both are of size
k) and k − d element subset A ⊂ [1, n] \ (S ∪ Sj) (this is why we assume
d ≤ k < n/4) and initiate the challenge query with M0, M1 ← M with
identity IDj and attribute set S∗ ∪ A. Since the challenger has a key which
overlaps the challenge attribute set in more than d−1 indices with the same
identity, it can trivially decrypt and output b. This is a valid challenge since
|(S∗ ∪A) ∩ Sj | < d.
– Tracing Failure. Pick some d ∈ [1, ν(ε)] at random. Then, run the tracing
algorithm normally d − 1 times. For the dth iteration, choose M0, M1 at
random and initiate the challenge phase of the D-IBE scheme by outputting
both messages, the challenge identity ID and a random dummy attribute
set S′ such that |S′ ∩ S| < d. Receive C from the D-IBE scheme, either an
encryption of M0 or M1 under identity ID under the attribute set A and
compute DID(CID(S′)). If DID(CID(S′)) = M0 output 0, if DID(CID(S′)) =
M1 output 1, otherwise, guess randomly.
Now, notice that if the New-Attributes phase is initiated, the challenger de-
crypts and breaks the Dummy-IBE security trivially. Also, since the tracing algo-
rithm only ever queries messages encrypted under dummy-attribute sets which
do not overlap with the key dummy-atribute set in more than d − 1 indices,
if the tracing algorithm outputs PKG with non-negligible probability, for some
d ∈ [1, ν(ε)] it must succeed in correctly decrypting with non-negligible prob-
ability. Since the challenge ciphertext the challenger returns to it is from the
exact distribution that it expects, with non-negligible probability (since ν(ε) is
polynomial in the security parameter) it will succeed in decrypting the challenge
ciphertext, breaking semantic security. Since DID is oblivious to the second mes-
sage in the challenge phase, with probability within a negligible function of 1,
whenever we do not guess randomly, we will be correct. Since we have at least a
1/ν(ε) probability of not guessing randomly if the decoder decrypts on a single
query and we assume the decoder will decrypt some query with non-negligible
probability, we succeed in breaking semantic security.
306 A. Sahai and H. Seyalioglu
3.4 Running in Parallel for PKG Security
To achieve Dishonest-PKG security, we actually will have to modify our construc-
tion slightly by running it in parallel m times where m ∈ Θ(λ). In this setting,
if we call the A-IBE candidate above A, we will call our new scheme A, where
A[1], . . . , A[m] denote the m different instantiations of A. The public key and
master secret key are simply the collection of public and master secret keys of
each of the individual instantiations.
A private key is obtained for identity ID by running KeyGen in parallel m
times and giving the output of each to the user. The user’s dummy attribute
set is now S, with each S[i] a random k element subset of [1, n]. Encryption
is handled by splitting M into m shares, M = M1 ⊕ M2 ⊕ . . . ⊕ Mm where
M1, . . .Mm−1 are chosen are random and each Mi is encrypted under A[i] with
a dummy attribute set S′[i], with each S′[i] a k element subset of [1, n]. Now
CID(S′) should be decrypted only by keys KID(S) where |S[i]∩S′[i]| ≥ d for each
i ∈ [1, m]. KeySanity and CiphertextSanity checks of A work by checking
each of the individual components with the existing sanity checks for A. We now
describe the tracing algorithm:
3.5 Tracing Algorithm for the Parallel Scheme
On input KID(S), the tracing algorithm will run a KeySanity check to verify
the validity of the input key. Then, it will then repeat the following experiment
ν ∈ polym(λ) times:
– Pick j ∈ [1, m] at random,
– If i �= j, choose S′[i] a k element subset of [1, n],
– If i = j include the additional restriction that |S′[i] ∩ S[i]| < d,
– Select a random message M and encrypt M using S′ as the dummy
attributes,
– The decoder box outputs some M ′ = DID(CID(S′)).
If for any iteration M ′ = M output PKG otherwise, output User.
Theorem 2. If D is a secure Dummy-IBE scheme, A is Dishonest-User secure.
Proof. The proof for this is identical to the proof for the proof of security for A,
first pick i ∈ [1, m] at random and for all j �= i, the challenger will instantiate A[j]
itself and use D, the Dummy-IBE scheme its trying to break to instantiate the jth
index. Since there are only polynomially many choices for j, with non-negligible
probability, the adversary which outputs KID(S′) and DID will either have S′[j]
overlap the queried keys S[j] less than d locations or, the tracing algorithm will
decrypt a message whose dummy attribute set S∗ has |S∗[j] ∩ S[j]| < d.
Theorem 3. If D is a secure Dummy-IBE scheme, A is Dishonest-PKG secure.
Proof. Since the setup of A is very closely related to the construction in Goyal
et al.[15], (which is fully secure in the Dishonest-PKG game) we will be able
Fully Secure Accountable-Authority Identity-Based Encryption 307
to reuse their combinatorial results for the security of A. They also compose m
sets of dummy-attributes in parallel and use fully-simulatable OT during the key
generation phase in the same manner we do. In their result, by using the cipher-
text and key sanity checks they are able to prove a purely information theoretic
bound on the fraction of dummy-attribute sets that will implicate the PKG with
access to a decoder box DID. They show that as long as KeyGen does not ter-
minate with non-negligible probability, with overwhelming probability the PKG
will not query a ciphertext the user is unable to decrypt. Since all ciphertexts
which the user can decrypt decrypt to the same value by the ciphertext sanity
check and the PKG can decrypt to this value by itself, this allows analysis in
the Dishonest-PKG game where the PKG has no decryption capabilities.
Their result (Lemma 5 in the original paper)2 gives us precisely the second
information theoretic guarantee we need, namely that any tracing algorithm
with an ε-useful decoder box will output PKG for all but a negligible fraction
of possible dummy attributes. We refer the reader to the original paper for the
proof of the lemma below. Assume m is super-logarithmic and n is linear in the
security parameter λ, k = c1n, d = c2n positive constants less than 1 such that
c2 < c2
1 (which ensures decryption with overwhelming probability the Chernoff
bound).
Lemma 1. Let ε be non-negligible and DID an ε-useful decoder box. Let S be a
dummy attribute set for the user and consider the following experiment:
– Select a dummy attribute set S′ such that |S′[i]∩S[i]| < d for some i ∈ [1, m]
– Select a random message M and encrypt it using S′ as the dummy attributes
and outputs the ciphertext C
– The decoder box outputs M ′ = D(C)
– Output PKG if M ′ = M
Then, for all but a negligible fraction of choices of S, the above experiment
has probability of outputting PKG greater than ε/(24m).
By the above lemma, if we consider ideal OT functionality and reduce to the case
where the PKG has no decryption capabilities, the tracing algorithm will output
PKG with overwhelming probability by only running in polynomial time in the
Dishonest-PKG game as desired as long as S does not come from a exceptional set
which forms a negligible fraction of all possible S. Since full Dishonest-PKG se-
curity is obtained information theoretically for an identical abstract construction
in [15] we refer to their paper for a rigorous treatment of the above argument.
3.6 A Modification for IND-ID-CPA Security
After we have a Dishonest-User and Dishonest-PKG secure A-IBE scheme, we
may use the same method as the previous selective secure construction [15]. We
will achieve IND-ID-CPA security by using the above A-IBE scheme and a secure
2 Note that the proof of Lemma 5 is not in the original, but instead in the full version
of the cited paper.
308 A. Sahai and H. Seyalioglu
IBE scheme together. For any M , we will secret share M into M1 ⊕M2 where
M1 was chosen at random and encrypt M1 with the A-IBE scheme and M2 with
the IBE scheme. Since Waters’ IBE scheme [25] achieves IND-ID-CPA security
using the DBDH assumption, we may combine it with our Dummy-IBE scheme
to achieve full A-IBE with no additional security assumptions.
4 A Dummy-IBE Scheme
The main technical contribution of this paper is the construction of a secure
Dummy-IBE scheme, which as described, provides a fully secure A-IBE scheme.
For our construction, we will reuse many of the methods introduced by Waters
[25]. As such, we will use Waters’ hash extensively. Given an identity ID ∈ {0, 1}n
and u[i] ∈ G for i ∈ [0, n] where ID[j] is the jth bit of ID:
H(u, ID) = u[0]
∏
j∈[1,n]
u[j]ID[j]
We use x
$←− X to denote x being picked at random from a set X and S ⊂$ X a
set S being picked at random as a subset of X . We describe the scheme below
with |p|, n, d, k ∈ Θ(λ) and d ≤ k ≤ n/4. The terms e, G1, G2, g, p are parameters
of the common bilinear map.
Setup (1λ). Pick a
$←− Zp, g1 = ga. g2
$←− G, T[i] $←− G,u[i] $←− G for i ∈ [0, n].
The public key is (g1, g2,u,T). The master secret key is ga
2 .
KeyGen. (PK, ID) Pick S ⊂$ [1, n] of size k, ∀ i ∈ S, ri
$←− Zp and output3:
KID(S) =
(
ID, S, (ga
2 [H(u, ID)Ti]
ri , gri)i∈S
)
.
Encrypt. (M, ID, S) Pick c
$←− Zp. Select a d− 1-degree polynomial q in Zp at
random with q(0) = c,
CID(S) =
(
ID, S, Me(g1, g2)c,
(
gq(i), [H(u, ID)Ti]q(i)
)
i∈S
)
.
Where the entries in the third component are given in ascending order of
i ∈ [1, n] to avoid ambiguity.
Decrypt(CID(S′),KID(S)). Take I ⊂ S′ ∩ S of size d. For all i ∈ I, compute:
e([H(u, ID)Ti]q(i), gri)
e(ga
2 [H(u, ID)Ti]
ri , gq(i))
=
1
e(g, ga
2)q(i)
=
1
e(g1, g2)q(i)
,
Me(g1, g2)c
∏
i∈I
(
1
e(g1, g2)q(i)
)Δi,I (0)
= M.
Where Δi,I(j) is the Lagrange coefficient (Δi,I(j) =
∏
k∈I\{i}
k−j
i−j ).
3 Notice it is possible to generate Kα
ID for all α ∈ [1, n] as necessary for the previous
reduction.
Fully Secure Accountable-Authority Identity-Based Encryption 309
CiphertextSanity(CID(S), PK). First check the input is formatted as a valid
ciphertext (|S| = k): (
ID, S, C,
(
C
(1)
i , C
(2)
i
)
i∈S
)
Assuming H(u, ID)Ti �= 1 ∈ G, since G, GT are of prime order, write the last
two components for a single i ∈ S as gwi , [H(u, ID)Ti]yi for some constants
wi, yi ∈ Zp. If H(u, ID)Ti = 1 ∈ G, unless the second component above is also
1 output Not-Valid. The ciphertext is well formed if for all components with
second entry not 1 the wi = yi and the wi values fall on the same d − 1 degree
polynomial q (note that the value q(0) is actually completely irrelevant to the
ciphertext sanity check since as long as all the wi are on the same d− 1 degree
polynomial, if q(0) = c, it will be a valid encryption of Ce(g, g)−c). To check
that wi = yi, notice:
e
(
H(u, ID)Tj), C
(1)
i
)
?= e
(
C
(2)
i , g
)
⇔
e ((H(u, ID)Tj)wi , g) ?= e (H(u, ID)Tj , g
yi)⇔
e (H(u, ID)Tj), g)wi ?= e (H(u, ID)Tj , g)yi ⇔ wi
?= yi.
The final implication follows from the fact that both numbers being paired are
not 1 in their original group of prime order and so the target group element is
not 1 with non-trivial pairing. Now, to check that all the wi lie on the same d−1
degree polynomial, pick a subset I ⊂ S with |J | = d. Then, interpolate C
(1)
i to
all the other x ∈ S \ I values. In other words, for all x ∈ S \ I, check that:
∏
i∈I
C
(1)
i
Δi,I (x)
=
∏
i∈I
gwiΔi,I (x) ?= gwx = C(1)
x .
It’s now clear that this process will only accept if all wi lie on some polynomial q
of degree not exceeding d−1. This suffices to show that the interpolation to q(0)
is unique no matter which d points are picked, showing this is a valid ciphertext
(can only be decrypted to one value).
KeySanity(KID(S), PK). First check that the key is formatted correctly. If
H(u, ID)Ti = 1 ∈ G, checking this component is valid is trivial (the user then
should have access to the master secret key and can check this with one pairing
from the PK). We can now write each key component as:
(H(u, ID)Ti)
r
ga
2 , gr′
.
This will now be a valid key component if r = r′ (for elements in Zp we write
equality as elements in this group). Check (recall g1 = ga):
e [(H(u, ID)Ti)
r ga
2 , g] ?= e
(
H(u, ID)Ti, g
r′)
e(g2, g1)⇔
e [(H(u, ID)Ti) , g]r ?= e [(H(u, ID)Ti) , g]r
′
.
Which is equivalent with r
?= r′ since g, H(u, ID)Ti are not 1.
310 A. Sahai and H. Seyalioglu
4.1 Proof of Security
We will now prove the Dummy-IBE security of the given construction. Let q
be an upper bound on the number of queries an adversary A makes to succeed
in the Dummy-IBE security game with non-negligible probability ε. We now
describe how to use this simulator to succeed in the DBDH game with non-
negligible probability. Below m will be a value polynomial in an upper bound of
the number of queries the adversary makes that will be initialized later in the
analysis. We now describe the simulator S that will be given as input (A, B, C, Z)
where (g, g1, g2, C) = (g, ga, gb, gc) and Z = e(g, g)abc or Z
$←− GT . Generate Φ a
random k element subset of [1, n], which will serve as the dummy attribute set
of the challenge query and:
x[i] $←− [0, m− 1] for i ∈ [1, n] , x[0] $←− [−n(m− 1), 0]
y[i] $←− Zp for i ∈ [0, m− 1].
Define the following two functions:
F ′(x, ID) = x[0] +
n∑
i=1
x[i]ID[i]
G′(y, I) = y[0] +
n∑
i=1
y[i]ID[i].
Our simulator S will abort unless for exactly one key query ID[i], F ′(x, ID[i]) =
0 and for all others F ′(x, ID[j]) �∈ {0, 1}. Additionally, S will abort and guess
randomly unless ID[i] as specified above is not the challenge identity (recall
that by the definition of Dummy-IBE security, we may assume that the chal-
lenge identity has been queried once during the key queries phase and that the
challenge dummy-attribute set overlaps the dummy-attribute set the adversary
received during the key generation phase in no more than d−1 indices). We now
describe how S will generate the public key and answer key queries.
Simulated Public Key Generation. S.Setup(1λ) is defined as follows: For
i ∈ [1, n], B[i] $←− Zp and,
T[j] =
{
g2g
B[j], if j ∈ Φ;
gB[j], otherwise.
Related to T, define G(y, ID, j) = G′(y, ID) + B[j] and,
F (x, ID, Φ, j) =
{
F ′(x, ID) + 1, if j ∈ Φ;
F ′(x, ID), otherwise.
Output PK = (g1, g2,u,T). Notice if u[i] = g
x[i]
2 gy[i] then, H(u, ID)T[i] =
g
F (x,ID,Φ,i)
2 gG(y,ID,j). Observe the output is completely independent of Φ and the
Fully Secure Accountable-Authority Identity-Based Encryption 311
output distribution is precisely that of the true public key generation
algorithm.
Simulated KeyGen Queries. If F ′(x, ID) �∈ {−1, 0}, S.KeyGen(ID) is de-
fined as follows: Pick S ⊂$ [1, n] of size k. For j ∈ S: r
$←− Zp and let w =
F (x, ID, Φ, j)−1 (which exists since F ′(x, ID) �= 0). Set:
(K(1)
j , K
(2)
j ) = (gF (x,ID,Φ,j)·r
2 gG(y,ID,Φ)·rg−G(y,ID,Φ)·w
1 , grg−w
1 )
For all j ∈ S. Output KID(S) =
(
ID, S, (K(1)
j , K
(2)
j )j∈S
)
. Notice for j ∈ S:
g
F (x,ID,Φ,j)·r
2 gG(y,ID,Φ)·rg
−G(y,ID,Φ)·w
1 = ga
2 (g
F (x,ID,Φ,j)
2 gG(y,ID,Φ))−a·w(g
F (x,ID,Φ,j)
2 gG(y,ID,Φ))r
= ga
2 (g
F (x,ID,Φ,j)
2 gG(y,ID,Φ))r−a·w .
And similarly grg−w
1 = gr−a·w. Therefore, this is a valid key component with
randomness r − a · w, which is also distributed uniformly over Zp. So, every
key component is generated from the correct distribution if F (x, ID) �∈ {−1, 0}.
This is where the main divergence with Waters’ proof occurs, we must be able
to handle one query to the identity that will later be challenged on. For this,
we notice that if j ∈ Φ, and F ′(x, ID) = 0 then, F (x, ID, Φ, j) �= 0 and we can
repeat the above process by taking S = Φ.
If F ′(x, ID) = 0, S.KeyGen(ID) is the same as the above except instead of
S ⊂$ [1, n], take S = Φ.
Recall that S aborts if there is ever more than one query with F ′(x, ID) = 0
and that the output of the simulated public key is independent of Φ. Therefore,
if Φ is only used once during the key queries phase, as the dummy-attribute set
of a single query, the view of the adversary interacting with S is still identical
to the view of the adversary interacting with the true Dummy-IBE scheme.
Simulated Challenge Ciphertext. Assume F ′(x, ID) = 0 and |S ∩ Φ| < d
then,
S.Challenge(M0, M1, ID, S) is defined as follows: Pick γ
$←− {0, 1} and let
C1 = Z ·Mγ and choose S ⊃ K ⊃ S ∩ Φ, with |K| = d− 1 and:
For i ∈ K :
ri
$←− Zp , C
(1)
i = gri , C
(2)
i =
(
g
F (x,ID,Φ,i)
2 gG(y,ID,i)
)ri
.
For i �∈ K :
C
(1)
i = (gc)Δ0,K (i)
∏
j∈K
(grj )Δj,K(i)
, C
(2)
i =
(
C
(1)
i
)G(y,ID,i)
.
Respond to the query with:
CID(S) =
(
ID, S, C1,
(
C
(1)
i , C
(2)
i
)
i∈S
)
.
312 A. Sahai and H. Seyalioglu
Remark (1). Notice the encryption is valid with the implied polynomial q(x)
in the exponent being defined by q(i) = ri
$←− Zp for all i ∈ K and q(0) = c
where C = gc. Since choosing a d− 1 degree polynomial at random is equivalent
to specifying its value randomly at d points, the encryption is valid and uniform
(since ri are generated at random during the simulated challenge and the view
of the adversary has been independent of c which was chosen at random in
the DBDH initialization). This shows that the C
(1)
i components are correctly
generated from the stated distribution for i ∈ K.
Remark (2). Additionally, since F ′(x, ID) = 0, we have that for all i �∈ K(⇒
i �∈ Φ if i ∈ S), F (x, ID, Φ, i) = 0 and therefore H(u, ID)Ti = gG(y,ID,i) which
shows the second component is also generated correctly with implied polynomial
q. Therefore, as long as F ′(x, ID) = 0 the C
(b)
i values are drawn from the correct
distribution.
Therefore, if Z is e(g1, g2)c we have the above is a uniform encryption of Mγ .
Otherwise, Z is a random element of GT and the ciphertext gives no information
on the choice of γ.
To remind the reader of the relevant security game, the adversary A will
make q distinct key queries ID[i] to which the simulator will respond with keys
KID[i](S[i]) where S[i] is a k element subset of [1, n] consisting of the dummy
attributes of the key. Finally, the adversary will make a challenge query with
M0, M1, S
∗, ID[j] where ID[j] with j ∈ [1, q] was queried before and |S∗∩S[j]| <
d. Our simulator will not abort if and only if:
1. F ′(x, ID[i]) �∈ {0, 1} for all i ∈ [1, q] \ {j} for some j ∈ [1, q],
2. F ′(x, ID[j]) = 0,
3. The challenge identity is ID[j].
This is very similar to the requirement in Waters’ IBE, where it is required that
F ′(x, ID[i]) �= 0 for all key queries and F ′(x, ID[j]) = 0 for the challenge identity
ID[j]. Here, we require that the challenge identity be queried once before, with
the small caveat that for most key queries we are aborting on two values instead
of one, but the impact of this on analysis is minimal. Notice that if our algorithm
does not abort, it is drawing from the same distribution as the real Dummy-IBE
scheme since while Φ is used as the dummy attribute set for a single query,
the view of the adversary otherwise is independent of Φ (the requirement that
|Φ∩S| < d is automatically fulfilled since A was given Φ as the dummy attribute
set of ID[j] and therefore, by the rules of the Dummy-IBE security game, the
dummy attribute set of the challenge must overlap the dummy attribute set
received during the key generation phase in less than d indices). It only remains
to bound below the probability of aborting naturally and introduce an artifical
abort step to make sure the success probability of the simulator is not correlated
with the probability of aborting. We defer bounding the abord probability to
Appendix A. If for any sequence of queries, our simulation has a non-negligible
probability of perfectly simulating the behavior of Dummy-IBE security game
in the case where the fourth member of the DBDH tuple is Z = e(g, g)abc and
Fully Secure Accountable-Authority Identity-Based Encryption 313
in the other case, all information on the challenge message is lost, we can use
the advantage of a distinguishing adversary to discern which of the above two
possibilities the fourth member of the DBDH tuple is, since its advantage can
only be maintained (information theoretically) in the case where Z = e(g, g)abc.
5 Conclusion
We have demonstrated the first provably secure black-box accountable authority
IBE scheme, answering the primary question posed in multiple previous works
[13,15] using the standard DBDH assumption. To achieve this goal, we intro-
duced the notion of Dummy-IBE encryption, a hybrid between usual IBE and
Attribute-Based Encryption where the exact attributes given to an identity are
not important but which should exist for some added functionality (in this case
tracing), which may be of independent interest.
References
1. Bellare, M., Ristenpart, T.: Simulation without the Artificial Abort: Simplified
Proof and Improved Concrete Security for Waters’ IBE Scheme. In: Joux, A. (ed.)
EUROCRYPT 2009. LNCS, vol. 5479, pp. 407–424. Springer, Heidelberg (2009)
2. Boneh, D., Franklin, M.: Identity-based encryption from the Weil pairing. SIAM
Journal on Computing 32(3), 586–615 (2003)
3. Boneh, D., Boyen, X.: Secure Identity Based Encryption Without Random Oracles.
In: Franklin, M.K. (ed.) CRYPTO 2004. LNCS, vol. 3152, pp. 443–459. Springer,
Heidelberg (2004)
4. Boneh, D., Franklin, M.K.: Identity-Based Encryption from the Weil Pairing. In:
Kilian, J. (ed.) CRYPTO 2001. LNCS, vol. 2139, pp. 213–229. Springer, Heidelberg
(2001)
5. Camenisch, J., Neven, G., Shelat, A.: Simulatable Adaptive Oblivious Transfer.
In: Naor, M. (ed.) EUROCRYPT 2007. LNCS, vol. 4515, pp. 573–590. Springer,
Heidelberg (2007)
6. Canetti, R.: Security and composition of multiparty cryptographic protocols. Jour-
nal of Cryptology 13(1), 143–202 (2000)
7. Cocks, C.: An Identity Based Encryption Scheme Based on Quadratic Residues. In:
Honary, B. (ed.) Cryptography and Coding 2001. LNCS, vol. 2260, pp. 360–363.
Springer, Heidelberg (2001)
8. Even, S., Goldreich, O., Lempel, A.: A randomized protocol for signing contracts.
Communications of the ACM 28(6), 647 (1985)
9. Gentry, C.: Practical identity-based encryption without random oracles. In: Vau-
denay, S. (ed.) EUROCRYPT 2006. LNCS, vol. 4004, pp. 445–464. Springer,
Heidelberg (2006)
10. Gentry, C., Halevi, S.: Hierarchical Identity Based Encryption with Polynomially
Many Levels. In: Reingold, O. (ed.) TCC 2009. LNCS, vol. 5444, pp. 437–456.
Springer, Heidelberg (2009)
11. Gentry, C., Silverberg, A.: Hierarchical ID-Based Cryptography. In: Zheng, Y. (ed.)
ASIACRYPT 2002. LNCS, vol. 2501, pp. 548–566. Springer, Heidelberg (2002)
314 A. Sahai and H. Seyalioglu
12. Goyal, V., Pandey, O., Sahai, A., Waters, B.: Attribute-based encryption for fine-
grained access control of encrypted data. In: Proceedings of the 13th ACM Confer-
ence on Computer and Communications Security, p. 98. ACM, New York (2006)
13. Goyal, V.: Reducing Trust in the PKG in Identity Based Cryptosystems. In:
Menezes, A. (ed.) CRYPTO 2007. LNCS, vol. 4622, pp. 430–447. Springer,
Heidelberg (2007)
14. Goyal, V., Jain, A., Pandey, O., Sahai, A.: Bounded Ciphertext Policy Attribute
Based Encryption. In: Aceto, L., Damg̊ard, I., Goldberg, L.A., Halldórsson, M.M.,
Ingólfsdóttir, A., Walukiewicz, I. (eds.) ICALP 2008, Part II. LNCS, vol. 5126, pp.
579–591. Springer, Heidelberg (2008)
15. Goyal, V., Lu, S., Sahai, A., Waters, B.: Black-box accountable authority identity-
based encryption. In: Ning, P., Syverson, P.F., Jha, S. (eds.) ACM Conference on
Computer and Communications Security, pp. 427–436. ACM, New York (2008)
16. Green, M., Hohenberger, S.: Blind identity-based encryption and simulatable obliv-
ious transfer. In: Kurosawa, K. (ed.) ASIACRYPT 2007. LNCS, vol. 4833, pp.
265–282. Springer, Heidelberg (2007)
17. Horwitz, J., Lynn, B.: Toward Hierarchical Identity-Based Encryption. In: Knud-
sen, L.R. (ed.) EUROCRYPT 2002. LNCS, vol. 2332, pp. 466–481. Springer,
Heidelberg (2002)
18. Lewko, A., Okamoto, T., Sahai, A., Takashima, K., Waters, B.: Fully Secure Func-
tional Encryption: Attribute-Based Encryption and (Hierarchical) Inner Product
Encryption. In: Gilbert, H. (ed.) EUROCRYPT 2010. LNCS, vol. 6110, pp. 62–91.
Springer, Heidelberg (2010)
19. Libert, B., Vergnaud, D.: Towards Black-Box Accountable Authority IBE with
Short Ciphertexts and Private Keys. In: Jarecki, S., Tsudik, G. (eds.) PKC 2009.
LNCS, vol. 5443, pp. 235–255. Springer, Heidelberg (2009)
20. Lindell, A.Y.: Efficient Fully-Simulatable Oblivious Transfer. In: Malkin, T. (ed.)
CT-RSA 2008. LNCS, vol. 4964, pp. 52–70. Springer, Heidelberg (2008)
21. Okamoto, T., Takashima, K.: Fully Secure Functional Encryption with Gen-
eral Relations from the Decisional Linear Assumption. In: Rabin, T. (ed.)
CRYPTO 2010. LNCS, vol. 6223, pp. 191–208. Springer, Heidelberg (2010)
22. Ostrovsky, R., Sahai, A., Waters, B.: Attribute-based encryption with non-
monotonic access structures. In: Proceedings of the 14th ACM Conference on Com-
puter and Communications Security, p. 203. ACM, New York (2007)
23. Sahai, A., Waters, B.: Fuzzy identity-based encryption. In: Cramer, R. (ed.)
EUROCRYPT 2005. LNCS, vol. 3494, pp. 457–473. Springer, Heidelberg (2005)
24. Shamir, A.: Identity-based cryptosystems and signature schemes. In: Blakely, G.R.,
Chaum, D. (eds.) CRYPTO 1984. LNCS, vol. 196, pp. 47–53. Springer, Heidelberg
(1985)
25. Waters, B.: Efficient identity-based encryption without random oracles. In: Cramer,
R. (ed.) EUROCRYPT 2005. LNCS, vol. 3494, pp. 114–127. Springer, Heidelberg
(2005)
A Bounding the Abort Probability
Artificial Abort. Additionally to the probability of aborting naturally, we must
make sure that if the simulator S’s probability of success is not correlated with
its probability of aborting. Since this method is standard by now, we refer the
reader to Waters’ original work [25] for more in depth analysis of the necessity
Fully Secure Accountable-Authority Identity-Based Encryption 315
of this step. Our application differs little from the analysis in [25] except for a
factor of 2 due to the fact that we have two restricted values but include the
analysis for completeness4.
As in Waters’ scheme we can now define a second simulator which first gen-
erates the secret key ga
2 before initializing x and y. With the master secret key,
it is now able to perfectly respond to all key generation queries. Now, this sec-
ond simulator will abort and guess randomly unless ID[j], the challenge identity
(which has been queried once before) satisfies F ′(x, ID[j]) = 0 and for all other
identities keys are queried for ID[i] �= ID[j], F ′(x, ID[j]) �∈ {0, 1}.
As long as we can show the second simulator has a non-negligible probability
of not aborting for any set of queries, by using artificial aborts, we can get a
near-uniform, non-negligible probability to abort and guess randomly for any
set of identity queries. Then, our first simulator works as a distinguisher in the
DBDH game since if for a given set of queries our simulator has not aborted,
the adversary will have a non-negligible advantage of guessing the correct b if
Z = e(g, g)abc and no advantage in guessing b if Z is random since b is information
theoretically masked in the ciphertext.
Analysis of Abort Probability: We now give a lower bound on the probability
for a set of identities {ID[i]}i∈[1,q] with ID[j], j ∈ [1, q] the challenge identity
that the second simulator does not abort.
Pr[abort] = Pr[
∧
i∈[1,q]\{j}
F ′(x, ID[i]) �∈ {0, 1}] ∧ F ′(x, ID[j]) = 0
=
(
1 − Pr[
∨
i∈[1,q]\{j}
F ′(x, ID[i]) ∈ {0, 1}]) × Pr[F ′(x, ID[j]) = 0|
∧
i∈[1,q]\{j}
F ′(x, ID[i]) �∈ {0, 1}]
≥ (1 −
∑
i∈[1,q]\{j}
Pr[F
′
(x, ID[i]) ∈ {0, 1}]) × Pr[F
′
(x, ID[j]) = 0|
∧
i∈[1,q]\{j}
F
′
(x, ID[i]) �∈ {0, 1}]
≥ (1 − 2q
(n + 1)m
) Pr[F ′(x, ID[j]) = 0|
∧
i∈[1,q]\{j}
F ′(x, ID[i]) �∈ {0, 1}]
As in lines (1e) through (1i) in Waters’ derivation [25] we can simplify the
probability on the right to:
=
Pr[F ′(x, ID[j]) = 0]
Pr[
∧
i∈[1,q]\{j}
F ′(x, ID[i]) �∈ {0, 1}]
×
⎛
⎝1 − Pr[
∨
i∈[1,q]\{j}
F ′(x, ID[i]) ∈ {0, 1}|F ′(x, ID[j]) = 0]
⎞
⎠
Which can be bounded below by:
1
(n + 1)m
(1−
∑
i∈[1,q]\{j}
Pr[F ′(x, ID[i]) ∈ {0, 1}|F ′(x, ID[j]) = 0]).
4 Note that it is possible to prove our main result in a fashion similar to Bellare and
Ristenpart’s recent simplification [1] of Waters’ proof using game playing techniques
but we include this proof due to its transparency. A version of this paper which
includes a game playing proof of security is available from the authors.
316 A. Sahai and H. Seyalioglu
Notice we can replace F ′(x, ID[i]) ∈ {0, 1} with F ′(x, ID[i]) ∈ {0, 1} mod m
to get a lower bound. Now, for each ID[i] with i �= j, F ′(x, ID[i]) modulo
m is independent from F ′(x, ID[j]) by the properties of the Waters hash, and
therefore, using this substitution the above is bounded below by:
1
(n + 1)m
(
1− 2q
m
)
.
Substituting back to the original inequality yields:
(
1− 2q
(n + 1)m
)
1
(n + 1)m
(
1− 2q
m
)
≥ 1
(n + 1)m
(
1− 4q
m
)
.
Which can be taken to be non-negligible with m = 8q. This shows for any
sequence of queries, the probability that the simulator does not abort can be
bounded below by a non-negligible amount. As discussed before, using artificial
aborts, this suffices to prove security.
	Fully Secure Accountable-Authority Identity-Based Encryption
	Introduction
	Our Contributions
	Preliminaries
	Bilinear Maps
	Security Assumption
	Fully-Simulatable Oblivious Transfer
	Accountable Authority IBE (A-IBE)
	Security Requirements
	Preliminary Reduction
	Dummy Identity-Based Encryption
	D-IBE Implies Dishonest-User Security
	Tracing Algorithm
	Running in Parallel for PKG Security
	Tracing Algorithm for the Parallel Scheme
	A Modification for IND-ID-CPA Security
	A Dummy-IBE Scheme
	Proof of Security
	Conclusion
	References
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (ISO Coated v2 300% \050ECI\051)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Error
  /CompatibilityLevel 1.3
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Perceptual
  /DetectBlends true
  /DetectCurves 0.1000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 1
  /ParseDSCComments true
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo false
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Apply
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 149
  /ColorImageMinResolutionPolicy /Warning
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 150
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 30
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 30
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 149
  /GrayImageMinResolutionPolicy /Warning
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 150
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 30
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 30
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 599
  /MonoImageMinResolutionPolicy /Warning
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<

    /BGR <FEFF04180437043f043e043b043704320430043904420435002004420435043704380020043d0430044104420440043e0439043a0438002c00200437043000200434043000200441044a0437043404300432043004420435002000410064006f00620065002000500044004600200434043e043a0443043c0435043d04420438002c0020043c0430043a04410438043c0430043b043d043e0020043f044004380433043e04340435043d04380020043704300020043204380441043e043a043e043a0430044704350441044204320435043d0020043f04350447043004420020043704300020043f044004350434043f0435044704300442043d04300020043f043e04340433043e0442043e0432043a0430002e002000200421044a04370434043004340435043d043804420435002000500044004600200434043e043a0443043c0435043d044204380020043c043e0433043004420020043404300020044104350020043e0442043204300440044f0442002004410020004100630072006f00620061007400200438002000410064006f00620065002000520065006100640065007200200035002e00300020043800200441043b0435043404320430044904380020043204350440044104380438002e>
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e9ad88d2891cf76845370524d53705237300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc9ad854c18cea76845370524d5370523786557406300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /CZE <FEFF005400610074006f0020006e006100730074006100760065006e00ed00200070006f0075017e0069006a007400650020006b0020007600790074007600e101590065006e00ed00200064006f006b0075006d0065006e0074016f002000410064006f006200650020005000440046002c0020006b00740065007200e90020007300650020006e0065006a006c00e90070006500200068006f006400ed002000700072006f0020006b00760061006c00690074006e00ed0020007400690073006b00200061002000700072006500700072006500730073002e002000200056007900740076006f01590065006e00e900200064006f006b0075006d0065006e007400790020005000440046002000620075006400650020006d006f017e006e00e90020006f007400650076015900ed007400200076002000700072006f006700720061006d0065006300680020004100630072006f00620061007400200061002000410064006f00620065002000520065006100640065007200200035002e0030002000610020006e006f0076011b006a016100ed00630068002e>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000620065006400730074002000650067006e006500720020007300690067002000740069006c002000700072006500700072006500730073002d007500640073006b007200690076006e0069006e00670020006100660020006800f8006a0020006b00760061006c0069007400650074002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f00730020005000440046002000640065002000410064006f0062006500200061006400650063007500610064006f00730020007000610072006100200069006d0070007200650073006900f3006e0020007000720065002d0065006400690074006f007200690061006c00200064006500200061006c00740061002000630061006c0069006400610064002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /ETI <FEFF004b00610073007500740061006700650020006e0065006900640020007300e4007400740065006900640020006b00760061006c006900740065006500740073006500200074007200fc006b006900650065006c007300650020007000720069006e00740069006d0069007300650020006a0061006f006b007300200073006f00620069006c0069006b0065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740069006400650020006c006f006f006d006900730065006b0073002e00200020004c006f006f0064007500640020005000440046002d0064006f006b0075006d0065006e00740065002000730061006100740065002000610076006100640061002000700072006f006700720061006d006d006900640065006700610020004100630072006f0062006100740020006e0069006e0067002000410064006f00620065002000520065006100640065007200200035002e00300020006a00610020007500750065006d006100740065002000760065007200730069006f006f006e00690064006500670061002e000d000a>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f00620065002000500044004600200070006f0075007200200075006e00650020007100750061006c0069007400e90020006400270069006d007000720065007300730069006f006e00200070007200e9007000720065007300730065002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /GRE <FEFF03a703c103b703c303b903bc03bf03c003bf03b903ae03c303c403b5002003b103c503c403ad03c2002003c403b903c2002003c103c503b803bc03af03c303b503b903c2002003b303b903b1002003bd03b1002003b403b703bc03b903bf03c503c103b303ae03c303b503c403b5002003ad03b303b303c103b103c603b1002000410064006f006200650020005000440046002003c003bf03c5002003b503af03bd03b103b9002003ba03b103c42019002003b503be03bf03c703ae03bd002003ba03b103c403ac03bb03bb03b703bb03b1002003b303b903b1002003c003c103bf002d03b503ba03c403c503c003c903c403b903ba03ad03c2002003b503c103b303b103c303af03b503c2002003c503c803b703bb03ae03c2002003c003bf03b903cc03c403b703c403b103c2002e0020002003a403b10020005000440046002003ad03b303b303c103b103c603b1002003c003bf03c5002003ad03c703b503c403b5002003b403b703bc03b903bf03c503c103b303ae03c303b503b9002003bc03c003bf03c103bf03cd03bd002003bd03b1002003b103bd03bf03b903c703c403bf03cd03bd002003bc03b5002003c403bf0020004100630072006f006200610074002c002003c403bf002000410064006f00620065002000520065006100640065007200200035002e0030002003ba03b103b9002003bc03b503c403b103b303b503bd03ad03c303c403b503c103b503c2002003b503ba03b403cc03c303b503b903c2002e>

    /HRV (Za stvaranje Adobe PDF dokumenata najpogodnijih za visokokvalitetni ispis prije tiskanja koristite ove postavke.  Stvoreni PDF dokumenti mogu se otvoriti Acrobat i Adobe Reader 5.0 i kasnijim verzijama.)
    /HUN <FEFF004b0069007600e1006c00f30020006d0069006e0151007300e9006701710020006e0079006f006d00640061006900200065006c0151006b00e90073007a00ed007401510020006e0079006f006d00740061007400e100730068006f007a0020006c006500670069006e006b00e1006200620020006d0065006700660065006c0065006c0151002000410064006f00620065002000500044004600200064006f006b0075006d0065006e00740075006d006f006b0061007400200065007a0065006b006b0065006c0020006100200062006500e1006c006c00ed007400e10073006f006b006b0061006c0020006b00e90073007a00ed0074006800650074002e0020002000410020006c00e90074007200650068006f007a006f00740074002000500044004600200064006f006b0075006d0065006e00740075006d006f006b00200061007a0020004100630072006f006200610074002000e9007300200061007a002000410064006f00620065002000520065006100640065007200200035002e0030002c0020007600610067007900200061007a002000610074007400f3006c0020006b00e9007301510062006200690020007600650072007a006900f3006b006b0061006c0020006e00790069007400680061007400f3006b0020006d00650067002e>
    /ITA <FEFF005500740069006c0069007a007a006100720065002000710075006500730074006500200069006d0070006f007300740061007a0069006f006e00690020007000650072002000630072006500610072006500200064006f00630075006d0065006e00740069002000410064006f00620065002000500044004600200070006900f900200061006400610074007400690020006100200075006e00610020007000720065007300740061006d0070006100200064006900200061006c007400610020007100750061006c0069007400e0002e0020004900200064006f00630075006d0065006e007400690020005000440046002000630072006500610074006900200070006f00730073006f006e006f0020006500730073006500720065002000610070006500720074006900200063006f006e0020004100630072006f00620061007400200065002000410064006f00620065002000520065006100640065007200200035002e003000200065002000760065007200730069006f006e006900200073007500630063006500730073006900760065002e>
    /JPN <FEFF9ad854c18cea306a30d730ea30d730ec30b951fa529b7528002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a306b306f30d530a930f330c8306e57cb30818fbc307f304c5fc59808306730593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020ace0d488c9c80020c2dcd5d80020c778c1c4c5d00020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /LTH <FEFF004e006100750064006f006b0069007400650020016100690075006f007300200070006100720061006d006500740072007500730020006e006f0072011700640061006d00690020006b0075007200740069002000410064006f00620065002000500044004600200064006f006b0075006d0065006e007400750073002c0020006b00750072006900650020006c0061006200690061007500730069006100690020007000720069007400610069006b007900740069002000610075006b01610074006f00730020006b006f006b007900620117007300200070006100720065006e006700740069006e00690061006d00200073007000610075007300640069006e0069006d00750069002e0020002000530075006b0075007200740069002000500044004600200064006f006b0075006d0065006e007400610069002000670061006c006900200062016b007400690020006100740069006400610072006f006d00690020004100630072006f006200610074002000690072002000410064006f00620065002000520065006100640065007200200035002e0030002000610072002000760117006c00650073006e0117006d00690073002000760065007200730069006a006f006d00690073002e>
    /LVI <FEFF0049007a006d0061006e0074006f006a00690065007400200161006f00730020006900650073007400610074012b006a0075006d00750073002c0020006c0061006900200076006500690064006f00740075002000410064006f00620065002000500044004600200064006f006b0075006d0065006e007400750073002c0020006b006100730020006900720020012b00700061016100690020007000690065006d01130072006f00740069002000610075006700730074006100730020006b00760061006c0069007401010074006500730020007000690072006d007300690065007300700069006501610061006e006100730020006400720075006b00610069002e00200049007a0076006500690064006f006a006900650074002000500044004600200064006f006b0075006d0065006e007400750073002c0020006b006f002000760061007200200061007400760113007200740020006100720020004100630072006f00620061007400200075006e002000410064006f00620065002000520065006100640065007200200035002e0030002c0020006b0101002000610072012b00200074006f0020006a00610075006e0101006b0101006d002000760065007200730069006a0101006d002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken die zijn geoptimaliseerd voor prepress-afdrukken van hoge kwaliteit. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d00200065007200200062006500730074002000650067006e0065007400200066006f00720020006600f80072007400720079006b006b0073007500740073006b00720069006600740020006100760020006800f800790020006b00760061006c0069007400650074002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002000730065006e006500720065002e>
    /POL <FEFF0055007300740061007700690065006e0069006100200064006f002000740077006f0072007a0065006e0069006100200064006f006b0075006d0065006e007400f300770020005000440046002000700072007a0065007a006e00610063007a006f006e00790063006800200064006f002000770079006400720075006b00f30077002000770020007700790073006f006b00690065006a0020006a0061006b006f015b00630069002e002000200044006f006b0075006d0065006e0074007900200050004400460020006d006f017c006e00610020006f007400770069006500720061010700200077002000700072006f006700720061006d006900650020004100630072006f00620061007400200069002000410064006f00620065002000520065006100640065007200200035002e0030002000690020006e006f00770073007a0079006d002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f0062006500200050004400460020006d00610069007300200061006400650071007500610064006f00730020007000610072006100200070007200e9002d0069006d0070007200650073007300f50065007300200064006500200061006c007400610020007100750061006c00690064006100640065002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /RUM <FEFF005500740069006c0069007a00610163006900200061006300650073007400650020007300650074010300720069002000700065006e007400720075002000610020006300720065006100200064006f00630075006d0065006e00740065002000410064006f006200650020005000440046002000610064006500630076006100740065002000700065006e0074007200750020007400690070010300720069007200650061002000700072006500700072006500730073002000640065002000630061006c006900740061007400650020007300750070006500720069006f006100720103002e002000200044006f00630075006d0065006e00740065006c00650020005000440046002000630072006500610074006500200070006f00740020006600690020006400650073006300680069007300650020006300750020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e00300020015f00690020007600650072007300690075006e0069006c006500200075006c0074006500720069006f006100720065002e>
    /RUS <FEFF04180441043f043e043b044c04370443043904420435002004340430043d043d044b04350020043d0430044104420440043e0439043a043800200434043b044f00200441043e043704340430043d0438044f00200434043e043a0443043c0435043d0442043e0432002000410064006f006200650020005000440046002c0020043c0430043a04410438043c0430043b044c043d043e0020043f043e04340445043e0434044f04490438044500200434043b044f00200432044b0441043e043a043e043a0430044704350441044204320435043d043d043e0433043e00200434043e043f0435044704300442043d043e0433043e00200432044b0432043e04340430002e002000200421043e043704340430043d043d044b04350020005000440046002d0434043e043a0443043c0435043d0442044b0020043c043e0436043d043e0020043e0442043a0440044b043204300442044c002004410020043f043e043c043e0449044c044e0020004100630072006f00620061007400200438002000410064006f00620065002000520065006100640065007200200035002e00300020043800200431043e043b043504350020043f043e04370434043d043804450020043204350440044104380439002e>
    /SKY <FEFF0054006900650074006f0020006e006100730074006100760065006e0069006100200070006f0075017e0069007400650020006e00610020007600790074007600e100720061006e0069006500200064006f006b0075006d0065006e0074006f0076002000410064006f006200650020005000440046002c0020006b0074006f007200e90020007300610020006e0061006a006c0065007001610069006500200068006f0064006900610020006e00610020006b00760061006c00690074006e00fa00200074006c0061010d00200061002000700072006500700072006500730073002e00200056007900740076006f00720065006e00e900200064006f006b0075006d0065006e007400790020005000440046002000620075006400650020006d006f017e006e00e90020006f00740076006f00720069016500200076002000700072006f006700720061006d006f006300680020004100630072006f00620061007400200061002000410064006f00620065002000520065006100640065007200200035002e0030002000610020006e006f0076016100ed00630068002e>
    /SLV <FEFF005400650020006e006100730074006100760069007400760065002000750070006f0072006100620069007400650020007a00610020007500730074007600610072006a0061006e006a006500200064006f006b0075006d0065006e0074006f0076002000410064006f006200650020005000440046002c0020006b006900200073006f0020006e0061006a007000720069006d00650072006e0065006a016100690020007a00610020006b0061006b006f0076006f00730074006e006f0020007400690073006b0061006e006a00650020007300200070007200690070007200610076006f0020006e00610020007400690073006b002e00200020005500730074007600610072006a0065006e006500200064006f006b0075006d0065006e0074006500200050004400460020006a00650020006d006f0067006f010d00650020006f0064007000720065007400690020007a0020004100630072006f00620061007400200069006e002000410064006f00620065002000520065006100640065007200200035002e003000200069006e0020006e006f00760065006a01610069006d002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f00740020006c00e400680069006e006e00e4002000760061006100740069007600610061006e0020007000610069006e006100740075006b00730065006e002000760061006c006d0069007300740065006c00750074007900f6006800f6006e00200073006f00700069007600690061002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d002000e400720020006c00e4006d0070006c0069006700610020006600f60072002000700072006500700072006500730073002d007500740073006b00720069006600740020006d006500640020006800f600670020006b00760061006c0069007400650074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /TUR <FEFF005900fc006b00730065006b0020006b0061006c006900740065006c0069002000f6006e002000790061007a006401310072006d00610020006200610073006b013100730131006e006100200065006e0020006900790069002000750079006100620069006c006500630065006b002000410064006f006200650020005000440046002000620065006c00670065006c0065007200690020006f006c0075015f007400750072006d0061006b0020006900e70069006e00200062007500200061007900610072006c0061007201310020006b0075006c006c0061006e0131006e002e00200020004f006c0075015f0074007500720075006c0061006e0020005000440046002000620065006c00670065006c0065007200690020004100630072006f006200610074002000760065002000410064006f00620065002000520065006100640065007200200035002e003000200076006500200073006f006e0072006100730131006e00640061006b00690020007300fc007200fc006d006c00650072006c00650020006100e70131006c006100620069006c00690072002e>
    /UKR <FEFF04120438043a043e0440043804410442043e043204430439044204350020044604560020043f043004400430043c043504420440043800200434043b044f0020044104420432043e04400435043d043d044f00200434043e043a0443043c0435043d044204560432002000410064006f006200650020005000440046002c0020044f043a04560020043d04300439043a04400430044904350020043f045604340445043e0434044f0442044c00200434043b044f0020043204380441043e043a043e044f043a04560441043d043e0433043e0020043f0435044004350434043404400443043a043e0432043e0433043e0020043404400443043a0443002e00200020042104420432043e04400435043d045600200434043e043a0443043c0435043d0442043800200050004400460020043c043e0436043d04300020043204560434043a0440043804420438002004430020004100630072006f006200610074002004420430002000410064006f00620065002000520065006100640065007200200035002e0030002004300431043e0020043f04560437043d04560448043e04570020043204350440044104560457002e>
    /ENU (Use these settings to create Adobe PDF documents best suited for high-quality prepress printing.  Created PDF documents can be opened with Acrobat and Adobe Reader 5.0 and later.)
    /DEU <FEFF004a006f0062006f007000740069006f006e007300200066006f00720020004100630072006f006200610074002000440069007300740069006c006c0065007200200038002000280038002e0032002e00310029000d00500072006f006400750063006500730020005000440046002000660069006c0065007300200077006800690063006800200061007200650020007500730065006400200066006f00720020006f006e006c0069006e0065002e000d0028006300290020003200300031003000200053007000720069006e006700650072002d005600650072006c0061006700200047006d006200480020000d000d0054006800650020006c00610074006500730074002000760065007200730069006f006e002000630061006e00200062006500200064006f0077006e006c006f0061006400650064002000610074002000680074007400700073003a002f002f0070006f007200740061006c002d0064006f0072006400720065006300680074002e0073007000720069006e006700650072002d00730062006d002e0063006f006d002f00500072006f00640075006300740069006f006e002f0046006c006f0077002f00740065006300680064006f0063002f00640065006600610075006c0074002e0061007300700078000d0054006800650072006500200079006f0075002000630061006e00200061006c0073006f002000660069006e0064002000610020007300750069007400610062006c006500200045006e0066006f0063007500730020005000440046002000500072006f00660069006c006500200066006f0072002000500069007400530074006f0070002000500072006f00660065007300730069006f006e0061006c00200030003800200061006e0064002000500069007400530074006f0070002000530065007200760065007200200030003800200066006f007200200070007200650066006c00690067006800740069006e006700200079006f007500720020005000440046002000660069006c006500730020006200650066006f007200650020006a006f00620020007300750062006d0069007300730069006f006e002e000d>
  >>
  /Namespace [
    (Adobe)
    (Common)
    (1.0)
  ]
  /OtherNamespaces [
    <<
      /AsReaderSpreads false
      /CropImagesToFrames true
      /ErrorControl /WarnAndContinue
      /FlattenerIgnoreSpreadOverrides false
      /IncludeGuidesGrids false
      /IncludeNonPrinting false
      /IncludeSlug false
      /Namespace [
        (Adobe)
        (InDesign)
        (4.0)
      ]
      /OmitPlacedBitmaps false
      /OmitPlacedEPS false
      /OmitPlacedPDF false
      /SimulateOverprint /Legacy
    >>
    <<
      /AddBleedMarks false
      /AddColorBars false
      /AddCropMarks false
      /AddPageInfo false
      /AddRegMarks false
      /ConvertColors /ConvertToCMYK
      /DestinationProfileName ()
      /DestinationProfileSelector /DocumentCMYK
      /Downsample16BitImages true
      /FlattenerPreset <<
        /PresetSelector /MediumResolution
      >>
      /FormElements false
      /GenerateStructure false
      /IncludeBookmarks false
      /IncludeHyperlinks false
      /IncludeInteractive false
      /IncludeLayers false
      /IncludeProfiles false
      /MultimediaHandling /UseObjectSettings
      /Namespace [
        (Adobe)
        (CreativeSuite)
        (2.0)
      ]
      /PDFXOutputIntentProfileSelector /DocumentCMYK
      /PreserveEditing true
      /UntaggedCMYKHandling /LeaveUntagged
      /UntaggedRGBHandling /UseDocumentProfile
      /UseDocumentBleed false
    >>
  ]
>> setdistillerparams
<<
  /HWResolution [2400 2400]
  /PageSize [595.276 841.890]
>> setpagedevice