User-Centric Blockchain for Industry 5.0 Applications
User-Centric Blockchain for Industry 5.0
Applications
Hulin Yang1, Alia Asheralieva1, Jin Zhang1, Md Monjurul Karim1, Dusit (Tao) Niyato2, and Khuhawar Arif Raza1
1Department of Computer Science and Engineering, Southern University of Science and Technology, Shenzhen, China,
e-mail:{12132369@mail.sustech.edu.cn, aasheralieva@gmail.com, zhangj4@sustech.edu.cn,
karim@mail.sustech.edu.cn, khuhawar@mail.sustech.edu.cn}
2School of Computer Science and Engineering, Nanyang Technological University, Singapore, e-mail:{dniyato@ntu.edu.sg}
Abstract—The forthcoming Industry 5.0 era reinforces the role
of the “human(user)-centric” approach for future technologies,
services and applications, where the key objective is to satisfy
the quality of service (QoS), security and privacy requirements
of each individual user. To meet this objective, blockchain is
considered as one of the prime enablers, as it allows secure,
reliable, verifiable, and transparent management of private user
data. However, contemporary blockchains are not suitable for
Industry 5.0 applications due to their inability to ensure high
throughput while maintaining reasonable security levels. Hence,
in this paper, we design a user-centric sharded blockchain that
enables generating, verifying, and storing blocks of data related
to individual users with the aim to satisfy their QoS, security
and privacy requirements. By analyzing the impact of user
allocations to shards on the block period, we devise the user-shard
allocation algorithm to minimize the block period or, equivalently,
maximize the system throughput, and demonstrate the superior
performance of our framework via simulations.
Index Terms—blockchain, game theory, Industry 5.0, optimiza-
tion, resource allocation, sharding.
I. INTRODUCTION
A recent European Commission report [1] emphasizes the
role of the “human(user)-centric” technologies, services, and
applications in the upcoming Industry 5.0 era, where the
key objective is to satisfy the QoS, security and privacy
requirements of each individual user. To reach this objective,
a distributed ledger – blockchain, is considered as one of the
prime enablers [2]. The data in the blockchain are organized
as a linked list of blocks (e.g., records of digital transactions).
Each generated block is verified and stored by the group of
blockchain nodes (or peers) using a decentralized consensus
mechanism, and protected by the strong cryptographic tech-
niques to ensure that the data contained in blocks are managed
securely, privately, and reliably [3], [4].
Unfortunately, many current blockchains cannot meet the
stringent QoS requirements of future Industry 5.0 applica-
tions due to their inability to ensure high throughput while
maintaining reasonable security levels. For example, highly-
secure blockchains (e.g., based on proof-of-work [PoW],
proof-of-stake [PoS], etc.) have very long block period of
5 minutes and, consequently, low throughput. On the other
hand, lightweight blockchains (e.g., based on practical Byzan-
tine fault tolerance [pBFT], delegated PoS [DPoS], proof-of-
authority [PoA], etc.) compromise on security – less than
33% of malicious peers are tolerated [2], [4]–[6]. To increase
the blockchain throughput, the concept of sharding [5], [7]–
[16] has been proposed. In the sharded blockchain, peers are
divided into groups called shards, each of which is responsible
for processing specific transactions (or parts of transactions),
that allows increasing the system throughput in proportion to
the total number of shards. To improve the system security,
most existing sharded blockchains, such as OmniLedger [4]
and RapidChain [8], randomly update the shard structure to
avoid collusions among members of the same shard. Nonethe-
less, the resulting security is still rather low – less than 33%
malicious peers are tolerated in each shard. Furthermore, in
such blockchains, the data associated with a single user can
be processed, verified and stored in different shards and,
hence, accessing this data can be problematic due to increased
delay/signaling costs.
Accordingly, in this paper, we design a user-centric sharded
blockchain with the reduced block period (and, hence, in-
creased throughput) to satisfy the users’ QoS requirements.
In particular, unlike the sharding systems in [9] and [17],
in our blockchain, all data associated with a single user are
processed and verified in the same shard which reduces the
delay/signaling costs for accessing these data. Moreover, to
reduce the block period while preserving the system security,
we propose a reputation-based sharding model that adopts a
self-organized shard/coalition formation algorithm to reach the
reputation-based stable shard structure minimizing the block
verification delays of the peers.
The main contributions of the paper are as follows:
• We propose a user-centric blockchain for Industry 5.0
applications based on the self-organized reputation-based
sharding model where the data associated with a single
user is processed, verified, and stored in the same shard
to reduce the delay/signaling costs for accessing this data.
• We present an analytical model of the reputation-based
shard formation process and analyze the relationships
between the user-shard allocations and the block period.
• We represent the interactions of users and peers in
shards as a Stackelberg game. In the game, the users are
allocated to shards by the blockchain system (as a leader)
to minimize the block period. The followers (blockchain
peers) respond to each user-shard allocation by forming
a reputation-based stable shard structure.
• We propose the algorithm to find the Nash equilibrium
(NE) that minimizes the block period or, equivalently,
WS10 IEEE ICC 2022 Workshop on Scalable, Secure and Intelligent Blockchain for Future Networking and 
Communications
978-1-6654-2671-8/22/$31.00 ©2022 IEEE 25
20
22
 IE
EE
 In
te
rn
at
io
na
l C
on
fe
re
nc
e 
on
 C
om
m
un
ic
at
io
ns
 W
or
ks
ho
ps
 (I
CC
 W
or
ks
ho
ps
) |
 9
78
-1
-6
65
4-
26
71
-8
/2
2/
$3
1.
00
 ©
20
22
 IE
EE
 |
 D
O
I: 
10
.1
10
9/
IC
CW
O
RK
SH
O
PS
53
46
8.
20
22
.9
81
45
62
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:27:52 UTC from IEEE Xplore.  Restrictions apply. 
maximizes the system throughput given a reputation-
based stable shard structure of the Stackelberg game.
II. USER-CENTRIC SHARDED BLOCKCHAIN
A. System Model
The proposed user-centric blockchain (shown in Fig. 1)
is formed by the set N = {1, . . . , n, . . . , N} of peers, i.e.,
blockchain nodes, labeled as P1, . . . ,Pn, . . . ,PN that provide
blockchain services to the set M = {1, . . . ,m, . . . ,M} users
labeled as u1, . . . , um, . . . , uM . Similar to [3], the peers can
be represented by edge devices, e.g., personal computers, gate-
ways, servers and smart phones, located close to the users. The
proposed blockchain system basically represents a lightweight
software interface (similar to a browser) downloaded by users
when joining the system. After joining, each peer is assigned
with a unique ID to access the system. If the peer refuses
to follow the system rules, e.g., fails to verify its transaction
in time, it is removed from the system. In the blockchain,
data generated by each individual user are packaged into
transactions which are then processed and verified by the
peers in the form of blocks. As such, the blockchain services
provided by the peers comprise processing, verification, and
storage of user transactions contained in the blocks.
The process of mining the blockchain is divided into a
number of stages denoted as t = 0, . . . , T . The duration
of each stage is equal to the block period ∆t, i.e., time to
process, verify, and append the user transactions contained in
a block. During one stage, all network parameters (e.g., the
number of peers and users, number of user transactions, and
computing powers of peers) are considered to be fixed, but
can change at the next stage. At every stage t, the peers in
the sharded blockchain are distributed into K shards denoted
as S1, . . . ,SK and each shard Sk ⊆ N, k = 1, . . . ,K, is
associated with some groups of users whose transactions are
included in the blocks generated and verified in the shard.
In particular, we let y = {ymk ∈ {0, 1}}, for m ∈ M and
k = 1, . . . ,K, denote the user-shard allocation plan proposed
by the blockchain system, such that ymk = 1 if the transactions
of user um are included in the blocks generated and verified
in the shard Sk and ymk = 0 otherwise, such that
K∑
k=1
ymk = 1,∀m ∈ M, (1)
to ensure that each user is assigned to one shard. Accordingly,
at any stage t, a certain shard structure O = {S1, . . . ,SK},
such that Sk ∩ Sj = ∅, for all j ̸= k, is formed by peers,
so that each shard Sk includes exactly Sk = |Sk| peers.
Any block generated inside the shard Sk is appended to the
blockchain only if all user transactions contained in the block
are processed and verified by all peers in the shard Sk. The
block verification process is based on the voting when each
peer Pn in the shard Sk must submit its vote vn ∈ {0, 1}, i.e.,
vn = 1 if the peer votes to accept the block, or vn = 0 if the
peer votes to reject the block. For every transaction correctly
appended within the block to the blockchain, the users pay a
Figure 1: Proposed system model.
certain transaction fee r. The transaction fee r is distributed
across all peers that have participated in the respective block
generation and verification process based on their reputations
that are estimated as explained in the next subsection.
B. Reputation of Peers
Note that any peer in the set N can be malicious, in
which case it will incorrectly process user transactions and
generate false block verification results’ vote to accept the
erroneous blocks and reject the correct blocks. Unfortunately,
in the practical blockchain systems, no peers can know exactly
whether the other peers are malicious or trustworthy [4], [8],
[9], [17]. Nevertheless, if peers are allowed to form and record
their opinions about other peers in the blockchain system, we
can deploy a certain reputation mechanism [5], [6], [17] letting
each peer Pn to assess the trustworthiness of any other peer Pi
by combining its own opinion about this peer with the opinions
of other peers about the peer Pi. For example, similar to [5],
[17], to express the opinion of peer Pi about another peer Pj
in subjective logic, we can use the opinion vector χi→j =
{bi→j , di→j , ui→j}, where bi→j , di→j and ui→j stand for the
belief, distrust, and uncertainty, respectively. bi→j + di→j+
ui→j = 1, bi→j , di→j , ui→j ∈ [0, 1], and
bi→j = (1− ui→j)
T+
i→j
T+
i→j+T−
i→j
,
di→j = (1− ui→j)
T−
i→j
T+
i→j+T−
i→j
,
ui→j = 1− qi→j ·
(2)
In (2), T+
i→jand T−
i→jrepresent, respectively, the numbers of
positive and negative opinions about peer Pj submitted by
peer Pi that can be determined by peer Pi, as in [5], from the
history of interactions between the peers Pi and Pj . qi→j is
the quality of communication link between peers Pi and Pj ,
i.e., the probability that the opinion is received correctly.
As such, the reputation ρn (or trustworthiness), of any peer
Pn in the blockchain network can be found based on the
opinions of other peers about peer Pn, as
ρn =
∑
i∈N\{n}
ρi→n =
∑
i∈N|{n}
(bi→n + λui→n),∀n ∈ N,
(3)
where ρi→n = bi→n+λui→n expresses the amount of trust to
peer Pn by another peer Pi;λ is a given constant indicating
WS10 IEEE ICC 2022 Workshop on Scalable, Secure and Intelligent Blockchain for Future Networking and 
Communications
26Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:27:52 UTC from IEEE Xplore.  Restrictions apply. 
the effect of the uncertainty on the peer’s reputation. Given the
peers’ reputations in (3), the reputation ρSk
of every shard Sk
can be expressed by the average reputation of peers belonging
o the shard, as
ρSk
=
1
|Sk|
∑
n∈Sk
ρn,∀k = 1, . . . ,K. (4)
Thus, the higher are the reputations, i.e., trustworthiness, of the
peers verifying the blocks generated in the shard, the higher
is the shard’s reputation. Block generated by the shard can
only be appended to the sub-chain maintained by the shard
if it is verified by all peers in the shard before becoming an
orphan. In other words, the peers must vote on the validity of
each block within the shard to which they belong. Then, to
enhance security of the block verification process in the shard
Sk, the voting power or weight ωn of each peer Pn in the
shard Sk, can be set proportionally to its reputation ρn, i.e.,
as ωn =
ρn∑
i∈Sk
ρi
,∀n ∈ Sk, (5)
so that the more trustworthy peers will have a greater voting
power in their shards. As such, each block generated by the
members of the shard Sk is verified only if
∑
n∈Sk
ωnvn >
0.5, i.e., the weighted majority of the peers in the subset Sk
belonging to and assigned to the shard Sk votes to accept the
block generated in the shard Sk.
Lastly, note that by deploying the considered reputation
mechanism, every peer Pn can assess the trustworthiness of
any other peer Pi by combining its own opinion about this
peer with the opinions of other peers about peer Pi, as
Bn→i = γρn→i + (1− γ)
∑
j∈N\{i,n}
ρj→i, (6)
where Bn→i ∈ [0, 1] is the assessment of the trustworthiness
of peer Pi by peer Pn that expresses the probability that the
peer Pi is trustworthy from the point of view of the peer Pn
so that 1 − Bn→i expresses the probability that the peer Pi
is malicious from the point of view of the peer Pn; γ ∈ [0, 1]
is the metric that indicates how much the peer Pn values its
own opinion compared to the opinions of other peers.
C. Payoffs of Peers
We now estimate the expected payoffs of the peers from
the provided blockchain services. First, recall that if the block
including transactions of users associated with the shard Sk
is correctly appended to the blockchain, all peers in the shard
Sk are rewarded proportionally to their reputations. As such,
the expected reward Rn of peer Pn at stage t is given by
Rn(y,O | Bn,ρ) =
K∑
k=1
1n∈Sk
Pr
{∑
i∈Sk
ωivi > 0.5
}
ρnrlSk∑
i∈Sk
ρi
=
K∑
k=1
1n∈Sk
P success
n→Sk
(Bn)
ρnr
∑
m∈M ymklm∑
i∈Sk
ρi
,∀n ∈ N.
(7)
In (7), Bn = {Bn→i}i∈N\{n} are the assessments by the peer
Pn of the trustworthiness of all other peers; ρ = {ρn}n∈N
are the peers’ reputations; 1x = 1 if x is true and 1x = 0
otherwise; lm ∈ [lmin, lmax] is the number of transactions
of user um that must be processed and verified in a block,
lmin and lmax are minimal and maximal possible numbers
of transactions, respectively, so that the total number of user
transactions appended in a block of shard Sk is a sum
lSk
=
∑
m∈M ymklm; Pr
{∑
i∈Sk
ωivi > 0.5
}
= Psuccess
n→Sk
is
the probability that every correct block in the shard Sk is
successfully appended to the blockchain.
Note that although no peer knows the probability Psuccess
n→Sk
exactly, any trustworthy peer Pn can estimate this probability
based on its assessments of the trustworthiness of all other
peers in the shard Sk as
P success
n→Sk
(Bn) =
∑
i∈Sk\{n}
ωiBn→i + ωn. (8)
That is, if the peer Pn is trustworthy, it votes vn = 1 i.e.,
accept the correct block, similar to all other trustworthy peers
in the shard Sk. Otherwise, if the peer Pn is malicious, it
votes vn = 0 to reject the correct block, similar to all other
malicious peers in the shard Sk.
Given its expected reward Rn, the peer Pn can estimate its
expected payoff Vn (also called the value) from the blockchain
services represented by the difference
Vn(y,O | Bn,ρ) = Rn(y,O | Bn,ρ)− Cn(y,O),∀n ∈ N,
(9)
where Cn is the total expected cost incurred by the peer Pn
on generating and verifying the block, given by
Cn(y,O) = zn
K∑
k=1
1n∈Sk
lSk
= zn
K∑
k=1
∑
m∈M
1n∈Sk
ymklm,
(10)
with zn denoting the average cost incurred by the peer Pn on
processing and verifying a single user transaction.
III. SHARD FORMATION PROCESS AND BLOCK PERIOD
A. Self-Organized Reputation-Based Shard Formation
We consider that peers to form shards in a self-organizing
way, i.e., they choose shards independently. We model the
self-organized shard formation process as a reputation-based
coalition formation game, where a subset of peers that manage
the same shard is a coalition. Unlike the classical coalition
formation game without reputations, in the game, peers need
to consider not only their payoffs, but also the reputation of
the shards they belong to, i.e., the coalitional reputation, given
by
ρ̃n(O) =
K∑
k=1
1n∈Sk
ρSk
. (11)
As such, in any shard structure O, each peer Pn selects the
shard that maximizes its payoff Vn and coalitional reputation
ρ̃n without affecting the payoffs and coalitional reputations of
the other peers in this shard. The reputation-based coalition
formation game eventually reaches a reputation-based stable
shard structure, defined as follows:
WS10 IEEE ICC 2022 Workshop on Scalable, Secure and Intelligent Blockchain for Future Networking and 
Communications
27Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:27:52 UTC from IEEE Xplore.  Restrictions apply. 
Definition 1 (Reputation-based stable shard structure). A
shard structure O∗ represents a reputation-based stable shard
structure of the reputation-based coalition formation game
played by the peers if and only if there is no other structure
O, such that ∃Sk ∈ O,∃n ∈ Sk,∀i ∈ Sk\{n}, we have:
Vn(y,O | Bn,ω) > Vn (y,O
∗ | Bn,ω)
ρ̃n(O) = ρSk
≥ ρ̃n (O
∗) ,
Vi(y,O | Bi,ω) ≥ Vi (y,O
∗ | Bi,ω) and
ρ̃i(O) = ρSk
≥ ρ̃i (O
∗) . (12a)
or
Vn(y,O | Bn,ω) ≥ Vn (y,O
∗ | Bn,ω)
ρ̃n(O) = ρSk
> ρ̃n (O
∗)
Vi(y,O | Bi,ω) ≥ Vi (y,O
∗ | Bi,ω) and
ρ̃i(O) = ρSk
≥ ρ̃i (O
∗) . (12b)
That is, a shard structure is a reputation-based stable shard
structure if and only if there is no other shard structure which
can increase the payoff or coalitional reputation of at least one
peer without reducing the payoffs and coalitional reputations
of the other peers in the same shard. More details about such
a shard formation can be found in [5].
B. Block Period
Recall that at each stage t, each shard Sk needs to process
and verify exactly lSk
transactions of users. As in [17], we
consider that the size of each user transaction is defined by
the tuple σ =
(
σP
t , σ
V
t
)
, where σP
t and σV
t are the numbers
of CPU cycles required to process and verify the transaction,
respectively. Similar to other sharding systems, e.g., [5], [6],
[8], [9], each transaction must be processed entirely by a single
peer, i.e., the processing of a transaction is indivisible. As
such, the time required to process a transaction is equal to
σP
t /minn∈Sk
xn, where xn ∈ [xmin, xmax] is the computing
power of peer Pn in CPU cycles per time unit, xmin and xmax
are the minimal and maximal possible computing powers,
respectively. Then, the time tPSk
to generate a block in the
shard Sk that is equal to the time to process all transactions
appended in a block can be estimated according to
tPSk
(y) =
σP
t lSk
minn∈Sk
xn
=
σP
t
minn∈Sk
xn
∑
m∈M
ymklm. (13)
After the block is generated, it must be verified by all peers
in the shard Sk. Thus, the time tPSk
required to verify a block
generated in the shard Sk is given by
tVSk
(y) =
σV
t lSk
minn∈Sk
xn
=
σV
t
minn∈Sk
xn
∑
m∈M
ymklm, (14)
and, hence, the total time required to generate and verify a
block including all transactions of users associated with the
shard Sk is given by
tInSk
(y) = tPsk(y) + tVsk(y) =
σP
t + σV
t
minn∈Sk
xn
∑
m∈M
ymklm. (15)
Algorithm 1: User-Shard Allocation Algorithm
Input: N,U
Output: Reputation-based stable shard structure O∗ and
optimal user-shard allocation plan y∗
1 Randomly initialize y(0) and set number of iterations t = 0
2 repeat
3 Blockchain system broadcasts user-shard allocation plan y(t)
4 Peers form a reputation-based stable shard structure O(t)
through Reputation-Based Coalition Formation Algorithm
5 y(t+ 1)← argmin
y∈Y
∆t(y,O(t))
6 t = t+ 1
7 until No more players update strategies
From (15), the block period ∆t - time required to generate
and verify all blocks in the sharding blockchain, is given by
∆t(y,O) = max
k=1,...,K
tInSk
(y). (16)
From (16), the block period ∆t (or, equivalently, the system
throughput that is inversely proportional to the block period)
depends on both the shard structure O = {S1, . . . ,SK}
formed by the peers according to the self-organized shard
formation process outlined in Section III-A and the user-shard
allocation plan y proposed by the blockchain system.
IV. STACKELBERG GAME BETWEEN THE BLOCKCHAIN
SYSTEM AND PEERS
A. Game Model and Existence of the Nash Equilibrium
In this section, we model interactions between the
blockchain system and peers as a two-stage Stackelberg game.
In the game, blockchain system as a leader decides on the user-
shard allocation plan y that minimizes the block period ∆t.
In response, peers as followers form the shard structure O
to improve their payoffs and coalitional reputations. We show
that if the game is played repeatedly by all game participants,
i.e., the leader and followers, at each block period t, it will
eventually reach the NE state (y∗,O∗), where y∗ denotes the
optimal user-shard allocation plan which minimizes the block
period ∆t; O∗ is the reputation-based stable shard structure
in which no participant can be better off without negatively
affecting other participants.
The proposed Stackelberg game is played repeatedly at
each block period t in two stage. In stage I, the leader, i.e.,
blockchain system, determines the user-shard allocation plan
y∗ that minimizes the current block period ∆t according to
y∗ = argmin
y∈Y
∆t(y,O) = argmin
y∈Y
(
max
k=1,...,K
tInSk
(y)
)
,
(17a)
where from (1), the set Y of possible values of y is defined
by
Y =
{
y = {ymk} | ymk ∈ {0, 1}, k ∈ K,m ∈ M∑K
k=1 ymk = 1
}
.
(17b)
In stage II, the followers, i.e., peers, play the reputation-based
coalition formation game described in Section III-A to form
WS10 IEEE ICC 2022 Workshop on Scalable, Secure and Intelligent Blockchain for Future Networking and 
Communications
28Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:27:52 UTC from IEEE Xplore.  Restrictions apply. 
Algorithm 2: Reputation-Based Coalition Formation
Input: N,y
Output: Reputation-based stable shard structure O∗
Initialize: O,Nv ← ∅,∆← 0
1 while true do
2 for i = 1 : |N| do
3 Randomly choose one of non-visited players Pn
from the subset N\Nv
4 for Sj ∈ O\ {Sk} do
5 if Ok→j
n satisfies condition (12a) or (12b) then
6 O← Ok→j
n
7 ∆← ∆+ 1
8 break
9 Nv ← Nv ∪ {n}
10 if ∆ = 0 then
11 break
12 Nv ← ∅, ∆← 0
a reputation-based stable shard structure O∗. Accordingly, the
main aim of the game is to reach the NE state defined as
follows:
Definition 2 (Nash equilibrium of the Stackelberg game). The
tuple (y∗,O∗) is the Nash equilibrium of the Stackelberg game
played by the blockchain system and peers if and only if we
have:
∆t (y∗,O∗) ≤ ∆t (y,O∗) ,∀y ∈ Y, (18)
where O∗ is the reputation-based stable shard structure.
Proposition 1 (Nash equilibrium existence in the Stackelberg
game). The Stackelberg game played by the blockchain system
and peers admits at least one NE (y∗,O∗).
Proposition 1 establishes the existence of the NE in the
game. The proof of Proposition 1 is provided in Appendix.
B. Finding Nash Equilibrium of the Game
We now explain the proposed method to find the NE of our
Stackelberg game. In this method, to find the NE at stage I
of the game played by the leader, i.e., blockchain system, we
utilize Algorithm 1. In the algorithm, given the current shard
structure O, the blockchain system decides on the user-shard
allocation plan y by solving (17a). At stage II, the followers,
i.e., peers, form a reputation-based stable shard structure O∗
by deploying a distributed iterative Algorithm 2 where at each
iteration, we randomly select a peer, e.g., peer Pn, belonging
to some shard, e.g., shard Sk. If the peer Pn can find another
shard Sj ∈ O\{Sk} where the peer’s coalitional reputation
and/or payoff can be increased without reducing coalitional
reputations and payoffs of other peers in the shard Sj , peer
Pn joins another shard Sj , so that a new shard structure
Ok→j
n =
{
Ŝ1, . . . , ŜK | Ŝk = Sk\{n}, Ŝj = Sj ∪ {n},
Ŝi = Si,∀i ∈ K\{k, j}
}
,
(19)
is formed. Then, it is straightforward to verify that if the game
is played repeatedly according to Algorithms 1 and 2, it will
eventually converge to the NE (y∗,O∗).
(a) (b)
Figure 2: Block period (a) and throughput (b) depending on the
number of users M for N = 50.
(a) (b)
Figure 3: Block period (a) and throughput (b) depending on the
number of peers N for M = 50.
V. PERFORMANCE EVALUATION
We begin by presenting technical specifications of the
simulated environment and then demonstrate the detailed
evaluation in terms of block period, throughput and payoffs
of the peers. The performance of our proposed system is
compared with existing shard-based blockchain systems, such
as OmniLedger [4], which is based on random updates of the
shard structure to avoid collusions among peers. We conduct
simulations on MATLAB by considering two scenarios: i)
Random, and ii) Index. The first scenario updates shard
structure with random user-shard allocations while the second
updates shard structure with fixed user-allocations. In simula-
tions, the computing powers of peers are distributed uniformly
in the interval [1,2000] CPU cycles per time unit. The number
of transactions follow the Poisson distribution with the mean
20 transactions per user. To simplify the simulation, the quality
of the communication link qi→j between any two peers Pi and
Pj is 0.99 and λ is 0.3. For a given reputation-based shard
structure O∗, we use the fmincon function in MATLAB to
find the corresponding optimal user-shard allocation plan y∗.
A. Result Discussions
Figures 2a and 2b show, respectively, the block period (in
time unit) and blockchain throughput (in transactions per time
unit or Tptu) depending on the number of users M for a fixed
number of peers N = 50 peers. Figures 3a and 3b show the
block period and throughput, respectively, depending on the
number of peers N for a fixed number of users M = 50.
From these figures, our method outperforms other schemes,
i.e., Random and Index, in most scenarios. The reason is that
WS10 IEEE ICC 2022 Workshop on Scalable, Secure and Intelligent Blockchain for Future Networking and 
Communications
29Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:27:52 UTC from IEEE Xplore.  Restrictions apply. 
(a) (b)
Figure 4: Payoff of a peer depending on (a) the number of users M
for N = 50 and (b) the number of peers N for M = 50.
in our method, the user-shard allocation plan is obtained by
minimizing the block period according to (17a). As a result,
the method yields the lower block period and, hence, higher
blockchain throughput than those in Random and Index that
do not optimize the user-shard allocation. We also evaluate the
payoffs of the peers (in monetary units – MUs) in our method.
Figure 4a shows the average, maximal, and minimal payoff of
a peer depending on the number user M for the fixed number
of peers N = 50. Figure 4b shows the average, maximal, and
minimal payoff of a peer depending on the number of peers
N for the fixed number of users M = 50. From Figure 4a, the
peers’ payoffs are growing with M. The reason is that when
the number of users M increases while the number of peers N
is fixed, each peer has more transactions to be processed and,
thus, its payoff is growing. On the other hand, from Figure 4b,
the payoff of a peer is decreasing with N. The reason is that
when the number of peers N increase while the number of
users M (and, hence, the number of transactions) is fixed, the
payoff of a peer is reducing.
VI. CONCLUSION
We have proposed a user-centric sharded blockchain for
Industry 5.0 applications. We have introduced a self-organized
shard formation mechanism where peers form shards based
on their reputations to minimize the block verification delays
while preserving the system security. We have formulated a
Stackelberg game to represent interactions between the users
and peers in shards, and developed the algorithms to find its
solution. Simulation results show that out scheme outperforms
the existing sharding systems in terms of throughput and block
period. In our future work, we plan to implement the proposed
blockchain in practical Industry 5.0 system.
Acknowledgement: This work was supported by the Char-
acteristic Innovation Project No. 2021KTSCX110 of Guang-
dong Provincial Department of Education. The Corresponding
Author is Alia Asheralieva.
REFERENCES
[1] J. Müller, “Enabling technologies for industry 5.0, results of a workshop
with europe’s technology leaders,” Directorate-General for Research
and Innovation, 2020.
[2] P. K. R. Maddikunta et al., “Industry 5.0: A survey on enabling tech-
nologies and potential applications,” Journal of Industrial Information
Integration, p. 100257, Aug. 2021.
[3] L. Luu et al., “A secure sharding protocol for open blockchains,” in
Proc. in ACM SIGSAC CCS, 2016, pp. 17–30.
[4] E. Kokoris-Kogias et al., “Omniledger: A secure, scale-out, decentral-
ized ledger via sharding,” in 2018 IEEE Symposium on Security and
Privacy. IEEE, 2018, pp. 583–598.
[5] A. Asheralieva and D. Niyato, “Reputation-Based Coalition Formation
for Secure Self-Organized and Scalable Sharding in IoT Blockchains
With Mobile-Edge Computing,” IEEE IoT Journal, vol. 7, no. 12, pp.
11 830–11 850, Dec. 2020.
[6] W. Wang et al., “A Survey on Consensus Mechanisms and Mining
Strategy Management in Blockchain Networks,” IEEE Access, vol. 7,
pp. 22 328–22 370, 2019.
[7] M. H. Manshaei et al., “A Game-Theoretic Analysis of Shard-Based
Permissionless Blockchains,” IEEE Access, vol. 6, pp. 78 100–78 112,
2018.
[8] M. Zamani, M. Movahedi, and M. Raykova, “RapidChain: Scaling
Blockchain via Full Sharding,” in Proc. of the 2018 ACM SIGSAC
Conference on CCS. ACM, Oct. 2018, pp. 931–948.
[9] J. Kang et al., “Blockchain for secure and efficient data sharing in
vehicular edge computing and networks,” IEEE IoT Journal, vol. 6,
no. 3, pp. 4660–4670, 2018.
[10] J. Yu et al., “RepuCoin: Your Reputation Is Your Power,” IEEE
Transactions on Computers, vol. 68, no. 8, pp. 1225–1237, Aug. 2019.
[11] J. Wang and H. Wang, “Monoxide: Scale out Blockchains with Asyn-
chronous Consensus Zones,” in 16th USENIX Symposium on NSDI,
2019, pp. 95–112.
[12] H. Chen and Y. Wang, “SSChain: A full sharding protocol for public
blockchain without data migration overhead,” Pervasive and Mobile
Computing, vol. 59, p. 101055, Oct. 2019.
[13] G. Wang, “RepShard: Reputation-based Sharding Scheme Achieves
Linearly Scaling Efficiency and Security Simultaneously,” in 2020 IEEE
International Conference on Blockchain, Nov. 2020, pp. 237–246.
[14] Z. Hong et al., “Pyramid: A Layered Sharding Blockchain System,” in
IEEE INFOCOM 2021, May 2021, pp. 1–10.
[15] C. Huang et al., “RepChain: A Reputation-Based Secure, Fast, and High
Incentive Blockchain System via Sharding,” IEEE IoT Journal, vol. 8,
no. 6, pp. 4291–4304, Mar. 2021.
[16] S. Li et al., “PolyShard: Coded Sharding Achieves Linearly Scaling Effi-
ciency and Security Simultaneously,” IEEE Transactions on Information
Forensics and Security, vol. 16, pp. 249–261, 2021.
[17] A. Asheralieva and D. Niyato, “Distributed dynamic resource manage-
ment and pricing in the iot systems with blockchain-as-a-service and
uav-enabled mobile edge computing,” IEEE IoT Journal, vol. 7, no. 3,
pp. 1974–1993, 2019.
APPENDIX
First, note that the existence of a reputation-based stable
shard structure O∗ has already been proven in [5]. Hence, we
only need to proof that our Stackelberg game admits at least
one NE (y∗,O∗), i.e., there exists at least one user-allocation
plan y∗ satisfying (18). Indeed, from (16), we have
∆t (y,O∗) = max
k=1,...,K
tInSk
(y) = max
k=1,...,K
(
σP
t + σV
t
minn∈Sk
xn
∑
m∈M
ymklm
)
∈
[(
σP
t + σV
t
)
lmin
xmax
,
σP
t + σV
t
xmin
∑
m∈M
lm
]
.
The above means that the function ∆t (y,O∗) defined on the
set y ∈ Y is bounded from the above and below. Furthermore,
note that from (17b), the set Y of possible values of y is finite.
Hence, there exists at least one user-shard allocation plan y∗
that satisfies(
σP
t + σV
t
)
lmin
xmax
≤∆t (y∗,O∗) = min
y∈Y
∆t (y,O∗) ≤ ∆t (y,O∗)
≤ σP
t + σV
t
xmin
∑
m∈M
lm,∀y ∈ Y,
where ∆t (y∗,O∗) = miny∈Y ∆t (y,O∗) is exactly the NE
solution in (18). ■
WS10 IEEE ICC 2022 Workshop on Scalable, Secure and Intelligent Blockchain for Future Networking and 
Communications
30Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:27:52 UTC from IEEE Xplore.  Restrictions apply.