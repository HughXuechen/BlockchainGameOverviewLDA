Edge Resource Pricing and Scheduling for Blockchain: A Stackelberg Game Approach
Edge Resource Pricing and Scheduling for
Blockchain: A Stackelberg Game Approach
Sijie Huang, He Huang , Senior Member, IEEE, Guoju Gao ,Member, IEEE, Yu-E Sun ,Member, IEEE,
Yang Du ,Member, IEEE, and Jie Wu , Fellow, IEEE
Abstract—Blockchain came to prominence as the distributed ledger underneath Bitcoin, which protects the transaction histories in a
fully-connected, peer-to-peer network. The blockchain mining process requires high computing power to solve a Proof-of-Work (PoW)
puzzle, which is hard to implement on users’ mobile devices. So these miners may leverage the edge/cloud service providers (ESPs/
CSP) to calculate the PoW puzzle. The existing edge-assisted blockchain networks assumed that all ESPs have a uniform propagation
delay, which is unrealistic. In this article, we consider a more practical scene where ESPs locate in diverse positions of the blockchain
network, which causes different propagation delays when supporting the computation of the PoW puzzle. Additionally, these ESPs
connect to a remote CSP for resource scheduling when the computing tasks exceed their maximum capacity. The blockchain mining
process generally involves complicated competition and games among CSP, ESPs, and miners. Each service provider focuses on how
to determine his resource price so that he can maximize his utility. According to the set resource price, each miner concentrates on
scheduling his resource requests for each ESP to maximize individual personal utility, which depends on ESPs’ resource price and
propagation delays. We first model such a resource pricing and scheduling problem as a three-stage multi-leader multi-follower
Stackelberg game and aim at finding the Stackelberg equilibrium. Then, we analyze the subgame optimization problem in each stage
and propose an iterative algorithm based on backward induction to achieve the Nash equilibrium of the Stackelberg game. Finally,
extensive simulations are conducted to verify the significant performance of the proposed solution.
Index Terms—Blockchain, edge computing, game theory, resource pricing, resource scheduling, propagation delay
Ç
1 INTRODUCTION
NOWADAYS, electronic payment has become a daily trans-
action method that brings great convenience to people.
Internet commerce relies almost entirely on trusted third-
party financial institutions to process electronic payments.
However, the existence of third-party financial institutions
undoubtedly increases the additional cost of transactions
and limits the actual transaction scale. In 2008, a new peer-
to-peer electronic payment system, called “Bitcoin,” was
introduced, which can avoid the additional cost caused by
the third-party financial institutions [2], [3], [4]. Bitcoin has
been widely used in the past few years due to its decentral-
ized particularity. As one popular digital cryptocurrency,
Bitcoin can be used across countries without worrying
about being frozen by any financial institutions [5], and also
can record and store all digital transactions in a decentral-
ized append-only public ledger called “blockchain”. Block-
chain technology is applied in the Bitcoin field to record
transactions and prevent tampering. Specifically, the data of
digital transactions was packaged in the form of the linked
blocks, in which each block is encrypted by using the Hash
technique to ensure its security. With the background of
blockchain technology, Bitcoin has attracted a lot of atten-
tion from digital transaction enthusiasts worldwide and has
formed a substantial peer-to-peer transaction network. The
core task of a blockchain network is to ensure that the trust-
less nodes in the network reach the agreement upon a single
tamper-proof record of transactions, i.e., consensus mecha-
nism [6]. The consensus mechanism allows thousands of
nodes scattered around the world to agree on creating
blocks. It also includes an incentive mechanism that pro-
motes the effective operation of the blockchain system,
which is the basis for building trust in the blockchain.
Therefore, some blockchain networks, e.g., Bitcoin, incorpo-
rate an incentive-based block creation process known as
“block mining” in their protocols. There are several consen-
sus mechanisms like Proof of Work (PoW), Proof of Stake
(PoS), Delegated Proof of Share (DPoS), and Byzantine Fault
Tolerant (BFT) commonly used in blockchain [6], [7], [8].
Nakamoto proposed the PoW scheme for the Bitcoin block-
chain network in [2]. PoW is a computation-intensive puz-
zle-solving race in which a node needs to achieve a hash
querying rate as high as possible, which was used by the
early Bitcoin network as a mining algorithm. Therefore, this
� Sijie Huang, He Huang, Guoju Gao, and Yang Du are with the School of
Computer Science and Technology, Soochow University, Suzhou, Jiangsu
215006, China. E-mail: 20205227091@stu.suda.edu.cn, {huangh, gjgao,
duyang}@suda.edu.cn.
� Yu-E Sun is with the School of Rail Transportation, Soochow University,
Suzhou, Jiangsu 215006, China. E-mail: sunye12@suda.edu.cn.
� Jie Wu is with the Department of Computer and Information Sciences, Tem-
pleUniversity, Philadelphia, PA 19122USA. E-mail: jiewu@temple.edu.
Manuscript received 24 August 2021; revised 24 March 2022; accepted 18 May
2022. Date of publication 24 May 2022; date of current version 10 April 2023.
The work of Sijie Huang, He Huang, Guoju Gao, Yu-E Sun, and Yang Du was
supported by the National Natural Science Foundation of China (NSFC) under
Grants U20A20182, 62102275, 61873177, 62072322, in part by the NSF of
Jiangsu in China under Grant BK20210704, and in part by the NSF of the Jiangsu
Higher Education Institutions of China under Grant 21KJB520025. The work
of Jie Wu was supported by NSF Grants CPS 2128378, CNS 2107014,
CNS 2150152, CNS 1824440, CNS 1828363, and CNS 1757533.
(Corresponding authors: He Huang and Guoju Gao.)
Digital Object Identifier no. 10.1109/TSC.2022.3177438
IEEE TRANSACTIONS ON SERVICES COMPUTING, VOL. 16, NO. 2, MARCH/APRIL 2023 1093
1939-1374 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See ht _tps://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0003-2768-6607
https://orcid.org/0000-0003-2768-6607
https://orcid.org/0000-0003-2768-6607
https://orcid.org/0000-0003-2768-6607
https://orcid.org/0000-0003-2768-6607
https://orcid.org/0000-0002-0104-8263
https://orcid.org/0000-0002-0104-8263
https://orcid.org/0000-0002-0104-8263
https://orcid.org/0000-0002-0104-8263
https://orcid.org/0000-0002-0104-8263
https://orcid.org/0000-0002-0018-4810
https://orcid.org/0000-0002-0018-4810
https://orcid.org/0000-0002-0018-4810
https://orcid.org/0000-0002-0018-4810
https://orcid.org/0000-0002-0018-4810
https://orcid.org/0000-0003-3012-0778
https://orcid.org/0000-0003-3012-0778
https://orcid.org/0000-0003-3012-0778
https://orcid.org/0000-0003-3012-0778
https://orcid.org/0000-0003-3012-0778
https://orcid.org/0000-0002-3472-1717
https://orcid.org/0000-0002-3472-1717
https://orcid.org/0000-0002-3472-1717
https://orcid.org/0000-0002-3472-1717
https://orcid.org/0000-0002-3472-1717
mailto:20205227091@stu.suda.edu.cn
mailto:huangh@suda.edu.cn
mailto:gjgao@suda.edu.cn
mailto:duyang@suda.edu.cn
mailto:sunye12@suda.edu.cn
mailto:jiewu@temple.edu
paper will study the block mining problem under the PoW
mechanism based on the current work.
The block mining process in the Bitcoin system can be
regarded as the following steps. In order to link a block to
the blockchain, miners are first required to solve a computa-
tionally challenging puzzle. Then, each miner propagates
his mined block to all blockchain network users to make
this block be verified as soon as possible. This is because
only when a block is confirmed by the majority of miners in
this network can it be considered added to the end of the
blockchain successfully. In other words, the consensus pro-
tocol of blockchain can be achieved. Only the miner who
successfully links a block to the existing blockchain can gain
a certain amount of Bitcoin as the mining incentive.
The PoW-based blockchain is a critical technology, which
is considered as a technological innovation in the peer-to-
peer network [9]. The security and reliability are thus
ensured by this mechanism which requires numerous trials
for a valid solution [10]. However, the PoW-based block-
chain has a limitation: the blockchain mining process needs
a mass of computation and storage resources, which is hard
to be satisfied with a miner’s terminal devices. Thanks to
the development of edge/cloud computing techniques, the
miners can take on lease some on-demand resources from
the edge/cloud service providers (ESPs/CSP) to efficiently
complete the mining process. For instance, [11] developed a
cooperative computation offloading and resource allocation
framework for blockchain-enabled mobile-edge computing
systems; [8] studied a blockchain service market composed
of the infrastructure provider, blockchain provider, cyber-
insurer, and users. We call it the edge-assisted blockchain
mining network, as shown in Fig. 1.
The mining process in edge-assisted blockchain net-
works is described as a speed game. First, miners send their
mining requests to servers, i.e., renting some computation
and storage resources to calculate the PoW puzzle. Then,
suppose any server calculated the PoW puzzle. In that case,
he needs to propagate the block to all of the other nodes in
this edge-assisted blockchain network as soon as possible to
make this block become the first one to realize the consensus
principle. The miner who packages the block on this ESP
and successfully takes the lead in reaching the consensus
principle is the winner of the mining process. Agreeing on
an identical blockchain by all nodes is also called “block
convergence”. Ideally, nodes should hear about freshly
mined blocks as quickly as possible. Here, a new block will
be validated earlier by other nodes if it can be spread to the
whole blockchain network faster [12]. The block conver-
gence of blockchain may be disrupted by the increased net-
work latency (i.e., propagation delay). In other words, even
if two nodes solve the PoW problem simultaneously, the
block packaged by one node may be discarded because the
propagation time is longer than that of the other block.
Note that, since the mining process is a speed race, the
transmission delay in offloading phase and the propagation
delay in the block convergence phase are both crucial for a
miner. The user who completes the above steps in a shorter
period will have a higher probability of winning the mining
game. Therefore, compared with the central cloud that is
farther away and has higher latency, miners are more
inclined to request edge servers located closer with shorter
propagation latency, i.e., renting some computation and
storage resources from ESPs. In the edge-assisted block-
chain system, each ESP has its own maximum capacity that
it can only provide limited computing services. Only when
the application volume of miners exceeds its capacity will
the ESP chooses to transfer some computing tasks to the
central cloud to ensure the quality of service for miners.
However, the existing edge-assisted blockchain networks
assumed that all ESPs have a uniform propagation delay,
which is not practical in the real world. Due to the character-
istics of the consensus protocol on the blockchain, themining
process is time-sensitive. The servers at the center of the
blockchain network are more likely to be ahead during the
block convergence phase than the other servers. Edge servers
are affected by their geographic locations and even cause the
propagation block to be abandoned due to the long conver-
gence duration. Therefore, the geographical location of the
edge server is an important consideration when studying
edge-assisted blockchain networks. In this paper, we con-
sider a price-based resource management mechanism with
propagation delay in edge-assisted blockchain networks, in
which ESPs have different propagation delays due to the dif-
ferent geographic locations. Further, we propose a three-
stage multi-leader multi-follower Stackelberg game model
between the computing service providers and miners, as
shown in Fig. 2. In the first stage, the CSP first declares the
unit price of its computing resources. In the second stage,
ESPs set the unit price charged for providing services to min-
ers. In the third stage, theminers decide the service demands
to rent computation resources from ESPs according to the set
prices. We discuss the Stackelberg equilibrium where both
the profits of the ESPs and the utility of miners can be maxi-
mized simultaneously. In addition, we study the impact of
propagation delays on block convergence.
Our contributions are summarized as follows:
� We consider a three-layer edge-assisted blockchain
mining network model, i.e., miners, ESPs, and CSP.
Each miner studies how to maximize his individual
utility which depends on the resource price and the
propagation delay of each ESP, while all ESPs focus
on resource pricing and scheduling to maximize their
utility.We are the first to consider the impact on block
convergence of different propagation delays due to
Fig. 1. Edge-assisted blockchain mining networks.
1094 IEEE TRANSACTIONS ON SERVICES COMPUTING, VOL. 16, NO. 2, MARCH/APRIL 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
the distributed geographic locations. Here, ESPs’
propagation delays will significantly affect the proba-
bility of blockchainmining success.
� To solve the competition and game among the CSP,
ESPs, and miners, we propose a special three-stage
multi-leader multi-follower Stackelberg game model.
The CSP and ESPs are seen as resource renters and
allocators in stages I and II, respectively; the miners
apply for the computation assist from ESP as the fol-
lowers in stage III. The proposed model takes the
ESPs’ propagation delays and the impact of CSP into
considerationwhen calculating theminers’ utility.
� We derive the explicit-form expressions of the most
beneficial price strategies for each ESP and the opti-
mal resource requests for each miner simulta-
neously. Furthermore, we analyze the existence and
uniqueness of the Stackelberg equilibrium (SE),
based on which we propose a corresponding algo-
rithm to obtain the SE.
� Extensive simulations are conducted to verify the
significant performance of the proposed solution.
The remainder of the paper is organized as follows. We
first present the system model and formulate the optimiza-
tion problem in Section 2. Next, we propose the solution and
analyze the Nash Equilibrium point in Section 3. In Section 4,
we conduct lots of simulations to verify the performance of
the proposed algorithms. After reviewing the related work
in Section 5, we conclude the paper in Section 6.
2 SYSTEM MODEL AND PROBLEM FORMULATION
We first present the edge-assisted blockchain model and
introduce some corresponding notations. Next, we present
the Stackelberg game on resource pricing and scheduling
between miners and edge/cloud service providers, and fur-
ther formalize the optimization problem.
In this paper, we consider the public blockchain mining
networks based on the PoW consensus protocol. There are
many ordinary network users (called miners) in the block-
chain mining networks, trying to complete the transaction
package (called block) to pursue some rewards.More specifi-
cally, the success of a miner appending the block to the end
of the current blockchain contains two steps. 1) The miner
needs to solve the PoW puzzle to ensure security and valid-
ity, called the mining procedure. 2) The miner must broad-
cast his results to other network users in the blockchain,
which is a broadcasting procedure to realize the consensus
principle. During the mining procedure, the PoW puzzle
that the miners try to solve highly depends on the computa-
tion resources of the miners’ terminal devices. In other
words, the miners with more computation resources will
have a higher probability of solving this PoW puzzle. How-
ever, the PoWmining process needs to perform a large num-
ber of hash computing operations, and this computation-
intensive mining task is too heavy for miners’ terminal devi-
ces. With the help of the edge/cloud computing technique,
the miners can take on lease some on-demand resources
from ESPs. Hence, terminal devices in this blockchain net-
work offload the computation-intensive PoW mining tasks
to the ESPs. Note that the ESPs are geographically distrib-
uted at the network edge so that the network users can access
the ESPs via the wireless local area networks. These ESPs
connect to the remote CSP through a core network, as shown
in Fig. 1. Each ESP has a limited computing resource capabil-
ity, while the CSP is assumed to have unconstrained compu-
tation resources. For an ESP, when the total resources
requested from the miners exceed his capacity, he will
upload part of his requests to the CSP.
Fig. 1 shows a cooperative edge-assisted blockchain net-
work, which consists of a CSP and several ESPs denoted as
N ¼ f1; . . . ; j; . . . ; ng, and there are m miners, denoted as
M¼ f1; . . . ; i; . . . ;mg, allowed to communicate with ESPs
simultaneously. To complete the PoW puzzle, the miners
will purchase computing services from ESPs or CSP. When
the ESPs or CSP calculates the PoW puzzle, he will try to
broadcast its result to all miners as soon as possible. In such
a way, the corresponding miner who rents the computation
resources may become the first one to realize the consensual
block ahead of other competitors. Only the first miner who
reaches the consensual block principle can obtain the
reward in the blockchain networks. Note that in addition to
the time of calculating out the PoW puzzle, the propagation
delay of spreading the results to other miners is also an
important factor. In the system model, we assume that these
n ESPs are sorted in descending order of the propagation
delay. Also, the propagation delay of the CSP is greater
than that of any ESP due to the remotest location.
We formulate the interaction process between miners,
ESPs, and CSP as a three-stage Stackelberg game as Fig. 2. In
the model, the miners who rent the computation resources
from the ESPs can be seen as buyers, while the ESPs can be
seen as the sellers of computation resources. However, when
the total demands of an ESP exceed its maximum capacity,
the ESP has to offload some requests to the CSP to obtain
more calculation resources support. Under this situation,
ESP becomes the buyer, and CSP acts as a seller by selling his
computing resources. The three-stage Stackelberg game can
be described as follows: The CSP first declares the unit price
of its computing resources. Then, ESPs set the unit price
charged for providing calculation services to miners. Miners
determine their requests for each ESP’s computing resources
according to the set price and offload PoW mining tasks to
ESPs. When the total requested resources of an ESP from the
miners are over the maximum capacity, ESP will purchase
the computing resource from CSP to complete the hash task
of miners. Since all the miners, ESPs, and CSP are rational
entities, they always focus on maximizing their individual
Fig. 2. Three-stage Stackelberg Game.
HUANG ETAL.: EDGE RESOURCE PRICING AND SCHEDULING FOR BLOCKCHAIN: A STACKELBERG GAME APPROACH 1095
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
utility. Thus, there is an unavoidable game in the edge-
assisted blockchain mining networks on the resource pricing
and scheduling between theminers and service providers.
2.1 Stage I: CSP Side Utility
In stage I, the CSP acts as a leader, who determines the unit
price of computing resources and provides the calculation
service to ESPs. The utility function of the CSP can be
expressed as the charged fee minus the cost of electricity,
which is written as follows:
Ucsp ¼ pcsp � cð ÞQ; (1)
where pcsp is the unit price of computing support resource
paid by ESPs to CSP, and c is the unit electricity cost for pro-
viding computing services. Q represents the total request
uploaded to the CSP by all ESPs due to their limited com-
puting resource capacity, i.e., Q¼Pi2M
P
j2N ð1� t
j
iÞxj
i .
Then, we formulate the subgame optimization problem at
this stage, which maximizes the revenue of the CSP and
seeks the optimal unit price of resource services. The sub-
game optimization problem P1 in stage I is:
P1: maximize Ucsp ¼ pcsp � cð ÞQ
subject to pcsp � 0; c � 0 (2)
2.2 Stage II: ESP Side Utility
In stage II, ESPs are the followers of stage I determining how
many requests will be offloaded to the CSP. On the other
hand, the ESPs also become the leader of Stage II and decide
the unit price for providing hash computing services to min-
ers. Actually, in this stage, the competition in ESPs forms as a
non-cooperative subgame, where each ESP sets his unit price
by considering miners’ requests and other ESPs’ prices. The
profits of ESPs come from the payments of miners. When an
ESP accepts a miner’s request, the miner must pay the ESP
for his computing resource services. The utility of each ESP
is expressed as the received payment minus the correspond-
ing cost. On the other hand, when a miner’s request is
uploaded to the CSP through one ESP, this ESP’s utility
equals the miner’s payment minus the cost that this ESP pro-
vides for the CSP. The utility of jth ESP is defined as:
Uesp
j ¼ pj � c
� � � Ej þ pj � pcsp
� � �Qj; (3)
where c is the unit electricity cost for providing service on
the ESPs and pcsp is the ESP’s payment for renting unit com-
puting resources from CSP. Ej denotes the total computa-
tion resources that the ESP j provides for the miners while
Qj means the total computation resources that ESP j rents
from the CSP, that is, Ej ¼
P
i2M t
j
ix
j
i and Qj ¼
P
i2Mð1�
t
j
iÞxj
i . According to this, we formulate the subgame optimi-
zation problem at Stage II. This problem maximizes the rev-
enue of ESPs and aims at finding the optimal unit price of
computing services charged by miners. We have the sub-
game optimization problem P2 as follows:
P2: maximize Uesp
j ¼ pj � c
� � � Ej þ pj � pcsp
� � �Qj
subject to
X
i2M t
j
ix
j
i � Kj (4)
whereKj is the maximum computation resource capacity of
ESP j, and it is the common knowledge of all the parties in
this game. Here, when the sum of requests from all miners
on ESP j exceeds his capacity constraints, he has to upload
part of the received requests to the CSP. However, the long
propagation delay may decrease the winning probability
for the applied miners, which will in turn reduce the min-
ers’ requests. Thus, it is quite challenging for each ESP to set
a suitable unit price for the computing resources so that he
can maximize his utility.
2.3 Stage III: Miner Side Utility
In stage III, miners are the followers of stage I and stage II.
After knowing the price and capacity of the other parties, the
miner needs to decide their computing demands offloaded
to ESPs. For each miner i, we use Xi ¼ ðx1
i ; x
2
i ; . . . ; x
n
i Þ to
denote the request for these n ESPs, and use Bi to denote its
budget. We suppose that each ESP in the edge-assisted
blockchain mining networks has the same unit computing
power as CSP. The probability of solving the PoWproblem is
related to computing power. Therefore, without loss of gen-
erality, we denote the computing power, i.e., the probability
of miner i calculating the PoW problem on ESP j, as aj
i , indi-
cating the percentage of the resources he rents on ESP j to the
total computation resources rented by ESPs. This computa-
tion offloading model in edge-assisted blockchain networks
draws lessons from the existing blockchainmining pool leas-
ing businessmodel [13], that is:
a
j
i ¼
xj
iP
i2M
P
j2N xj
i
: (5)
To facilitate writing, we denote All ¼Pi2M
P
j2N xj
i
As introduced above, the process of a miner winning the
reward consists of two procedures, i.e., the mining proce-
dure and the broadcasting procedure. The mining proce-
dure is relative to the computing power of a miner applying
for an ESP, while the propagation delay affects the winning
probability of the broadcasting procedure. The long propa-
gation delay may diminish the chances of winning if an ESP
propagates a block slowly to other miners in the broadcast-
ing procedure. In other words, the miner that first calculates
the PoW puzzle and packages a block may fail to get the
reward because someone else takes the lead in broadcasting
the packaged block successfully and realizes the consensus
protocol. This is because this block is likely to be discarded
because of long propagation delay, which is called orphan-
ing [14]. This paper considers that the propagation delay
comes from two parts. The first one is block size: a large
block will propagate slowly to other miners in the propaga-
tion step. Another factor that affects propagation delay is
the geographic location of the ESP. The ESP located in the
center of the blockchain network has a shorter propagation
delay than that in the network edge to get the block conver-
gence. Based on the existing works [13], [15], we also con-
sider that the block mining time follows the Poisson
distribution. The orphaning probability on the propagation
delay caused by ESP j and the size of the block, denoted as
Porphan ðtj; siÞ, is approximated as:
Porphan tj; si
� � ¼ 1� e�� tjþsið Þ; (6)
1096 IEEE TRANSACTIONS ON SERVICES COMPUTING, VOL. 16, NO. 2, MARCH/APRIL 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
in which the parameter � denotes the inter-arrival rate of the
Poisson distribution. tj means the propagation delay caused
by ESP j due to the geographic location, and si is the number
of transactionsminer i chooses to be included in this block, i.e.,
the size of a block. Thus, the successful probability of mining
game forminer i on ESP j is expressed as follows:
Wj
i ¼ a
j
i 1� Porphan tj; si
� �� � ¼ t
j
ix
j
i
All
e�� tjþsið Þ; (7)
whereWj
i denotes the probability that ESP j is the first onewho
solves the PoW problem (i.e., packages a block) and broadcasts
this block successfully, that is, making it be the first consensual
block. Here, tji 2 f0; 1g is the decision of the n-th ESP whether
accepted the request of miner i according to its capacity. tji¼1
means the request of miner i for ESP j is accepted by ESP j and
the hash computing task will be carried out on this ESP. On the
contrary, tji¼0 denotes that this demand is uploaded to the
CSP by ESP j. Note that an edge computing request may be
sent to the remoteCSPby the corresponding ESPdue to his lim-
ited resource capacity. In such a case, the winning probability
for theCSP is represented as follows:
Wj
i
0 ¼ ð1� t
j
iÞxj
i
All
e�� �tþsið Þ: (8)
Here, due to the same unit computing power between
ESPs and CSP, the probability of solving the PoW problem
is relative to the overall computing power of all miners’
demands. �t is the propagation delay of the CSP, which is
bigger than tj for j2N . Hence, the winning probability of
miner i on all service providers can be summarized as:
Wi ¼
X
j2N
t
j
ix
j
i
All
e�� tjþsið Þ þ ð1� t
j
iÞxj
i
All
e�� �tþsið Þ
 !
s:t: t
j
i 2 f0; 1g (9)
Miners’ utility is defined as the expected reward minus
the corresponding cost. The expected reward is computed
by R �Wi, in which R means the reward of successfully
appending a block to the end of the existing blockchain, and
Wi denotes the probability of the miner i winning the
reward. On the other hand, the total cost of miner i is deter-
mined by the prices of ESPs, denoted as fp1; . . . ; pj; . . . ; png,
and this miner’s service requests, i.e., Xi ¼ ðx1i ; x2i ; . . . ; xn
i Þ.
Based on this, we formulate the subgame optimization
problem at stage III, which maximizes the individual profits
of the miner i as follows:
P3: maximize Uminer
i ¼ R �Wi �
X
j2N pj � xj
i
subject to
X
j2N pj � xj
i � Bi (10)
Here, the constraint Bi represents the budget of miner i.
In addition, we list the commonly-used notations through-
out this paper in Table 1.
3 STACKELBERG GAME EQUILIBRIUM ANALYSIS
We model the interactions between the CSP, ESPs, and min-
ers as a multi-leader multi-follower three-stage Stackelberg
game with complete information. We aim at finding the
Stackelberg equilibrium where the payoff of ESPs and min-
ers can be maximized simultaneously. We first define the
Stackelberg equilibrium point as follows.
Definition 1. Let x�, p� and p�csp denote the optimal service
demand vector of all the miners, optimal unit price vector of
ESPs and CSP computing service, respectively. Then, the point
ðx�;p�;p0�Þ is the Stackelberg equilibrium if the following two
conditions are satisfied:
Uesp
j p�j ;p
�
csp; x
�
� �
� Uesp
j p0j;p
�
csp; x
�
� �
(11)
Uminer
i x�i ; x
�
�i;p
�� � � Uminer
i x0i; x
�
�i;p
�� �
(12)
Here, x��iis the best response service demand vector for
all miners except miner i. Next, we will analyze the game
equilibrium in the above model.
We use the backward induction method to obtain the
Nash equilibrium of the Stackelberg game. We first solve
the subgame problem P3 in stage III, then tackle the sub-
game problem P2 in stage II, and finally handle the stage I
subgame problem P1.
3.1 Stage III: Miners’ Requests Equilibrium
Based on the definition of Stackelberg game equilibrium, as
the pricing strategies of all ESPs are given, each miner deter-
mines his service demands for each ESP as the best response.
We first introduce the definition of the best response.
Definition 2. A request vector x�i , ðx1�
i ; x2�
i . . . ; xn�
i Þ is the
optimal response service demand vector of the miner subgame if
Uiðx�i ; x��i;p�Þ � Uiðx0i; x��i;p�Þ.
In P3, the design variable Xn is the vector of computing
requests offloaded to ESPs from miner n with the integer
constraint. The strategy t
j
i 2 f0; 1g is a discrete variable.
Therefore, the subgame optimization problem P3 is a mixed
binary nonlinear integer programming problem. Generally,
P3 can be solved by the traditional branch and bound algo-
rithm to obtain the optimal solutions, but the algorithm has
exponential complexity. To effectively tackle the subgame
TABLE 1
Description of Commonly-Used Notations
Variable Description
M,N The sets of miners and ESPs, respectively.
i, j The indexes for miners and ESPs.
xji The service demand of miner i for ESP j.
Xi The service demand of miner i for all ESP.
Kj The maximum capacity of ESP j.
Bi The budget of miner i.
tj / pj The propagation delay / unit price of ESP j.
t
j
i Miner i’ demand for ESP j is accepted or not.
c / h The unit cost for providing service on ESP / the unit cost
for uploading the request to CSP.
Eall Total miners’ request accepted by all ESPs.
Call Total request uploaded to CSP from all ESPs.
Wj
i The probability of miner iwinning on ESP j.
Wi The probability of miner i
R Reward of blockchain mining successfully.
Ui / Vj The utility of miner i / ESP j
HUANG ETAL.: EDGE RESOURCE PRICING AND SCHEDULING FOR BLOCKCHAIN: A STACKELBERG GAME APPROACH 1097
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
problem P3, we need to design a low-complexity algorithm
and make some simple relaxation operations.
We first continuously relax the binary variable t
j
i to the
following continuous constraint:
0 � t
j
i � 1 i 2 M; j 2 N (13)
Note that after continuous relaxation, tji can be regarded
as a strategy factor. It represents the probability for jth ESP
accepting the demand of ith miner, and further expresses
the percentage of demands be accepted by ESP j from miner
i, which is relative to the capacity of jth ESP. In this paper,
we consider that all ESPs have the consistent capacity.
Therefore, for i 2M; j 2 N , tji to have the same value, we
take the simple notation as t.
Combining the above continuous relaxation of t, Eq. ð9Þ
can be written as
W 0
i ¼
X
j2N
txj
i
All
e�� tjþsið Þ þ ð1� tÞxj
i
All
e�� �tþsið Þ
 !
s:t: 0 � t � 1 (14)
Then, the original subgame optimization problem P3 is
equivalent to
P30 :maximize Uminer
i ¼ R �W 0
i �
X
j2N
pj � xj
i
subject to
X
j2N pj � xj
i � Bi (15)
Now, we analyze the existence of the Nash equilibrium
in stage III subgame of the Stackelberg game. Before that,
we first introduce an assumption as follows.
Assumption 1.
Dt <
lnm
�
; where Dt ¼ max tj � tk
� � 8i; k 2 n
(16)
In fact, Assumption 1 is easy to be satisfied because � is
between 0 and 1 and much less than 1. Next, we prove that
there exists a game equilibrium in our model, as described
in Theorem 1.
Theorem 1. Under Assumption 1, the existence and uniqueness
of miner participation equilibrium, i.e., the Nash equilibrium of
Stage II in this Stackelberg game, can be guaranteed.
Proof. The strategy space of each miner is a non-empty,
compact subset of the Euclidean space. From Eq. ð15Þ, Ui
is apparently continuous with the variable xi, which is
the combination of requests for each ESP, i.e., xj
i . We take
the first order and second order derivatives of Eq. ð15Þ
with respect to xji as follows:
@Uminer
i
@xj
i
¼ R � @W
0
i
@xj
i
� pj; (17)
@2Uminer
i
@ðxjiÞ2
¼ R � @
2W 0
i
@ðxj
iÞ2
: (18)
Based on Eq. ð14Þ, we can take the second derivative of
Wi as Eq. ð19Þ, Eq. ð20Þ and Eq. ð21Þ, shown at the bottom
of the page. It’s obvious that
P
k2N xki �All < 0, then we
need to prove,X
k2N
xk
i e
�� tk�tjð Þ �All < 0: (22)
Eq. ð22Þ can be transformed as
Xn
k¼1
xk
i e
�� tk�tjð Þ �
Xm
i¼1
xk
i
 !
: (23)
We take the expectation of Eq. ð23Þ as follows:
Xn
k¼1
xk
i e
��Dt �mxki
� �
: (24)
Based on Assumption 1, we have the following result,
i.e.,
Pn
k¼1ðxk
i e
��Dt �mxk
i Þ < 0, then Eq.ð21Þ < 0 can be
guaranteed. Thus, the miner participation sub-game is a
concave gamewhich always admits theNash equilibrium.
By setting the first-order derivative of the miner’s util-
ity to 0, we have
@Uminer
i
@xj
i
¼ R � @W
0
i
@xj
i
� pj ¼ 0: (25)
As for Eq. ð26Þ, shown at the top of the next page, we
can obtain the best response of miner i as Eq. ð27Þ, shown
at the top of the next page, where All�i ¼
P
l6¼i
P
k2N xk
l .
The right part of Eq. ð27Þ has nothing to do with xj
i . In
conclusion, if the amount of resources applied by other
miners is large, the miner i needs to request more hash
power to obtain a higher winning probability. tu
Since the model in this paper is relatively complex and
involves multi-dimensional parameters, the solutions to
@W 0
i
@xj
i
¼ � 1
All2
�
X
k2N
txk
i e
�� tkþsið Þ þ ð1� tÞxki e�� �tþsið Þ
� �" #
þ 1
All
te�� tjþsið Þ þ ð1� tÞe�� �tþsið Þ
� �
(19)
¼ 1
All2
t Alle�� tjþsið Þ �
X
k2N
xk
i e
�� tkþsið Þ
 !
þ ð1� tÞe�� �tþsið Þ All�
X
k2N
xk
i
 !" #
(20)
@2W 0
i
@ xj
i
� �2 ¼ 2
All3
te�� tjþsið Þ X
k2N
xk
i e
�� tk�tjð Þ �All
 !
þ ð1� tÞe�� �tþsið Þ X
k2N
xk
i �All
|fflfflfflfflfflfflfflfflffl{zfflfflfflfflfflfflfflfflffl}
< 0
0
BBBB@
1
CCCCA
2
66664
3
77775: (21)
1098 IEEE TRANSACTIONS ON SERVICES COMPUTING, VOL. 16, NO. 2, MARCH/APRIL 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
the miners’ Nash Equilibrium are infeasible to express in
a symbolic manner. Fortunately, we are able to get the
closed-form computation offloading solutions for the P1
in a special case. We consider a particular case where
only one ESP is involved in this model. Its propagation
delay is denoted t0, and this ESP determines its unit price
of computing service as p0. We are interested in finding
an NE where miners decide on a request to buy the com-
puting service from ESP. Thus, the utility of miner is
modified as
Uminer
i ¼ R � txiP
i2M xi
e�� t0þsið Þþð1� tÞxiP
i2M xi
e�� �tþsið Þ
	 
�xip0
(28)
Then, we let the first order derivatives of Eq.ð28Þ equal 0
and we obtain
p0
R te�� t0þsið Þ þ ð1� tÞe�� �tþsið Þ½ � ¼
P
k 6¼i xkP
i2M xi
� �2 (29)
Next, we calculate the summation of this expression for
all the miners as follows:
X
i2M
p0
R te�� t0þsið Þ þ ð1� tÞe�� �tþsið Þ½ � ¼
M � 1P
i2M xi
(30)
Combining Eq.ð29Þ and Eq.ð30Þ, we have
M � 1P
i2M b
� �2
¼
P
k 6¼i xk
b
; (31)
where b ¼ p0
R½te��ðt0þsiÞþð1�tÞe��ð�tþsiÞ� . According to Eq. ð30Þ, we
can get
X
k 6¼i
xk ¼ M � 1P
i2M
P0
R te�� t0þsið Þþð1�tÞe�� �tþsið Þ½ �
� xi (32)
Thus, we obtain the Nash equilibrium of the miner i as
x�i ¼
M � 1P
i2M b
� b
M � 1P
i2M b
� �2
(33)
There is a positive correlation between the best response
and the total number of miners. As the number of miners
increases, more competitors result in each user applying for
more resources to increase the probability of winning.
3.2 Stage II: Optimal Pricing Mechanism
The ESPs are the followers of stage I choosing how many
requests will be offloaded to the CSP. Next, ESPs act as the
leaders of stage II determining the unit price of providing
hash computing service to miners. Based on the Nash equi-
librium of miners’ demands in Stage I, we further analyze
the benefits of ESPs defined in P2.
Theorem 2. Uesp is a concave function and Nash equilibrium of
ESPs’ subgame problem exists under the optimal strategy of miners.
Proof. To simplify the computation, we also consider the spe-
cial case with only one ESP. We first keep the best response
demands of miners as shown in Eq. ð33Þ fixed and substi-
tute the Eq. ð33Þ into Eq. ð4Þ. Then, we have Eq. ð34Þ, shown
at the bottom of this page. The first order and second order
derivatives of Uesp with respect to p0 are given as Eq. ð36Þ
and Eq. ð37Þ, shown at the bottom of this page. Due to the
negative of Eq. ð38Þ, shown at the bottom of this page, the
strict concavity of the objective function is ensured, which
means that here exits a best response pricing strategy of
ESP. Thus, the ESP can achieve the maximum profit with
the unique optimal price, and it can achieve this goal
by applying standard convex optimization algorithms,
such as the interior-point algorithm and gradient projection
algorithm. tu
Uesp ¼ t p0 � cð Þ þ ð1� tÞ p0 � pcspð Þ½ � � M � 1P
i2M b
(34)
¼ t p0 � cð Þ þ ð1� tÞ p0 � pcspð Þ½ � � M � 1
p0
P
i2M
1
R te�� t0þsið Þþð1�tÞe�� tþsið Þ½ �
(35)
@Uesp
@p0
¼ M � 1P
i2M b
� t p0 � cð Þ þ ð1� tÞ p0 � pcspð Þ½ � M � 1P
i2M
1
R te�� t0þsið Þþð1�tÞe�� �tþsið Þ½ �
1
p20
(36)
@2Uesp
@ p0ð Þ2
¼ 1
p20
2ðM � 1ÞP
i2M
1
R te�� t0þsið Þþð1�tÞe�� �tþsið Þ½ �
t p0�cð Þ þ ð1�tÞ p0�pcspð Þ½ � 1
p0
� 1
� �
(37)
¼ 1
p20
2ðM � 1ÞP
i2M
1
R te�� t0þsið Þþð1�tÞe�� �tþsið Þ½ �
� tcþ ð1� tÞpcsp
p0
� �
< 0 (38)
All2 ¼ R
pj
t
X
k 6¼j
xk
i e�� tjþsið Þ � e�� tkþsið Þ
� �
þ tAll�ie�� tjþsið Þ þ ð1� tÞAll�ie�� �tþsið Þ
" #
(26)
xj
i ¼
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
R
pj
t
X
k6¼j
xk
i e�� tjþsið Þ � e�� tkþsið Þ
� �
þ tAll�ie�� tjþsið Þ þ ð1� tÞAll�ie�� �tþsið Þ
" #vuut �All�i �
X
k6¼j
xk
i : (27)
HUANG ETAL.: EDGE RESOURCE PRICING AND SCHEDULING FOR BLOCKCHAIN: A STACKELBERG GAME APPROACH 1099
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
3.3 Stage I: CSP’s Participation Mechanism
CSP, the leader of stage I, decides the optimal unit price of
the computing management service paid by ESPs to maxi-
mize his own revenue. In this stage, we construct the sub-
game optimization problem as P1.
Observing the structure of Ucsp in problem P1, it can be
shown that Ucsp is a simple linear function of pcsp. Every par-
ticipant in this game is selfish and rational, thus the revenue
of CSP is non-negative and can be shown as:
pcsp � c (39)
On the other hand, ESP’s revenue in stage II shown in Eq.
ð34Þ is non-negative as well:
pcsp � p0 þ p0 � cð Þt
ð1� tÞ (40)
Eq. ð2Þ shows that the revenue function of CSP is monotoni-
cally increasing of pcsp. So we can get the maximum revenue
of CSP when pcsp selects the maximum value, which is
obtained by
pcsp� ¼ p�0 þ
p�0 � c
� �
t
ð1� tÞ ; (41)
where p�0 is the optimal price strategy of ESP in stage II and
can be calculated by convex optimization algorithms.
Algorithm 1. Asynchronous Best Response
Input: Any feasible price pcsp P ¼fp1; p2; . . . ; png, miners’
demandsX¼fX1; X2; . . . ; Xmg, and the threshold �
1: for iteration k do
2: storing last iteration P ðk�1Þ;
3: Stage III: Miners Level Game
4: for each miner i do
5: receiving the pricing strategy P ¼ fp1; p2; . . . ; png from
all ESPs;
6: predicting the optimal requests of other miners;
7: calculating xjðkÞ
i ¼xjðk�1Þ
i þ D
@UiðXðk�1Þ�i ;X
ðk�1Þ
i
;P Þ
@x
j
i
;
8: if Eq:ð42Þ then
9: xjðk�1Þ
i  xjðkÞ
i ;
10: deciding his request x
ðkÞ
i ¼ fx1
i ; x
2
i ; . . . ; x
n
i g;
11: sending x
ðkÞ
i to ESPs;
12: Stage II: ESPs Level Game
13: for each ESP j do
14: Fix ðX�; pcsp�Þ.
15: increasing or decreasing the price with a step d;
16: predicting miners’ optimal requests x� for each ESP;
17: if Eq:ð43Þ \ Eq:ð44Þ then
18: p
ðkÞ
j  p
ðkÞ
j þ d;
19: else if Eq:ð45Þ \ Eq:ð46Þ then
20: p
ðkÞ
j  p
ðkÞ
j � d;
21: Stage I: CSP Level Game
22: Fix ðP �; X�Þ.
23: obtain the optimal pricing strategy of P1 using Eq. ð41Þ.
24: if kP ðkÞ � P ðk�1Þk < � then
25: return pcsp�P ðkÞ and x�;
26: else
27: k kþ 1;
3.4 Algorithm for Stackelberg Game and Analysis
Based on the analysis above, we adopt the backward induc-
tion method to achieve the Nash Equilibrium of the Stackel-
berg game. Backward induction is a method to solve the
equilibrium of dynamic games. The dynamic game means
that there is a sequence of actions of the player in the game,
and the player in the latter actions can observe the previous
actions [16]. The backward induction method first calculates
the last stage of the dynamic game and then goes back to
solve the equilibrium result. The rationale behind the back-
ward induction method to solve the equilibrium of the
Stackelberg game is explained below. The CSP acts first in
the Stackelberg game and chooses the resource service price
in stage I. The CSP will inevitably consider the behaviors of
ESPs and miners in the next two stages. Each participant
will be constrained by other participants in the course of
action. Therefore, we construct a strategy adjustment with
an iterative process. After each participant takes action,
other participants need to judge whether they need to adjust
their strategies to obtain higher profits. The iteration will
finish until all the participants have no motivation to change
their strategies.
In the three-stage Stackelberg game, there is at least one
NE at each stage: the computing demand X� by miners in
stage III, the unit price of computing services P � decided by
ESPs in stage II, and the unit price of computing manage-
ment services pcsp� determined by the CSP in stage I. We
take advantage of a classic distributed algorithm (Algorithm
1) called Asynchronous Best Response to find the Nash
equilibrium point in ESPs’ subgame, where ESP is engaged
in a gradient ascent process to maximize its utility. For sim-
plicity of following descriptions, we define the following
notations:
U
ðkÞ
i pcsp�; XðkÞi ; P
� �
> U
ðkÞ
i pcsp�; Xðk�1Þi ; P
� �
(42)
Uesp
j p
ðk�1Þ
j þ d; pcsp�; x�
� �
> Uesp
j p
ðk�1Þ
j ; pcsp�; x�
� �
(43)
Uesp
j P
ðk�1Þ
j þ d; pcsp�; x�
� �
> Uesp
j p
ðk�1Þ
j �d; pcsp�; x�
� �
(44)
Uesp
j p
ðk�1Þ
j � d; pcsp�; x�
� �
> Uesp
j p
ðk�1Þ
j ; pcsp�; x�
� �
(45)
Uesp
j P
ðk�1Þ
j � d; pcsp�; x�
� �
>Uesp
j p
ðk�1Þ
j þ d; pcsp�; x�
� �
(46)
In Algorithm 1, the inputs include the random feasible
price strategy of CSP, ESPs, the stochastic miners’ demands,
and the threshold �. First, every miner tries to predict the
optimal requests of the other miners and then adjust his
demand according to the prices of ESPs using the gradient
ascent method. If the miner’s profit under the adjusted
request strategy is higher than before, this miner will take
the adjusted demands as a new request strategy in the next
round. Then, every ESP tries to increase or decrease the
price with a small step d, and then predicts the miners’ opti-
mal requests under these price strategies. Similarly, if the
adjusted price brings more benefits than the original price,
each ESP will choose the price with maximum utility as the
new price strategy in the next round; else, the price strategy
will not change. Next, CSP changes its pricing strategy
according to the price of ESPs and Eq. ð41Þ. These opera-
tions are conducted iteratively until the difference between
1100 IEEE TRANSACTIONS ON SERVICES COMPUTING, VOL. 16, NO. 2, MARCH/APRIL 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
the previous and this round’s Frobenius norms of the price
strategy is less than a given threshold. The point now is the
Nash equilibrium point that we are looking for. Finally,
Algorithm 1 terminates and outputs the results.
Theorem 3. Algorithm 1 achieves the approximate Nash Equi-
librium, and it has a polynomial-time complexity.
Proof. The computation overhead is dominated by stage III,
i.e., miners level game from step 3 to step 11. Since stage
III loops at most jM �Nj times, where M and N represent
the number of miners and ESPs, respectively. Its compu-
tational complexity is denoted by OðMNÞ. Note that
Algorithm 1 achieves the approximate Nash equilibrium
of our proposed Stackelberg game. The approximate
accuracy, measured by the Frobenius norms gap between
the price strategy in two rounds, depends on the preci-
sion threshold �. The convergence speed of the proposed
algorithm also depends on the precision threshold �.
When � is small, the number of iterations needed is large
but the achieved results are more accurate. Conversely,
when � is large, the number of required iterations is small,
but the achieved results are less accurate. Here, the num-
ber of loops for iteration is challenging to obtain explicit
form through mathematical theoretical analysis. Still, we
concluded that the algorithm could converge in polyno-
mial time through amounts of simulations in Section 4. tu
4 PERFORMANCE EVALUATION
In this section, we verify the convergence of the proposed
backward induction-based iterative algorithm of the Stackel-
berg game. We evaluate the performance of the proposed
algorithmwith extensive simulations.We conduct the simula-
tions on a computer with Inter(R) Core(TM) i7-10700 CPU
@2.90GHz 2.90GHz and 16.0GB RAMunder aWindows plat-
form.We first simulate the multi-leader multi-follower Stack-
elberg game between miners and ESPs, and further verify the
practicality of our proposed utility function of miners. Then,
numerical examples are provided to examine how miners
figure out their optimal requests based on the prices of the
ESPs, and how the ESPs optimize their unit price based on
their available capability and the miners’ budget. We assume
that the parameter of propagation delay � is fixed as 1
600 , as
introduced in the work [17]. In addition, when mentioning
the prices set by the ESPs, no matter whether they are opti-
mized or not, pj > c, pj > pcsp and �t >> tj always hold.
4.1 Convergence of the Iterative Algorithm
We first demonstrate the convergence of the Stackelberg
game. For ease of illustration, we consider a simple example
with three miners and three ESPs in this model. By referring
to previous research, we set the propagation delay of each
ESP following a normal distribution Nðmt; 0:1Þ, where mt¼
1ms is the average propagation delay of each ESP. In addi-
tion, we set the budget of each miner as 200.
When N ¼ 3 and M ¼ 3, Fig. 3 presents the convergence
of the proposed backward induction-based iterative algo-
rithm (i.e., Algorithm 1) for the Stackelberg game. We see
that the total computing demands of each miner and the
price of each ESP tend to be stable when the iteration num-
ber is larger than 7. This result also shows that the proposed
backward induction-based iterative algorithm can achieve
the Nash Equilibrium of the Stackelberg game in polyno-
mial time. In addition, Fig. 4 illustrates the relation between
the precision threshold � versus the number of iteration
rounds for convergence when the number of miners varies.
That is, the iteration rounds are exponentially related to the
threshold �. Also, with the increase of the number of miners,
the iteration rounds for convergence go up as well.
Fig. 3. Converge of the Stackelberg Game.
Fig. 4. Total Iteration Rounds vs. Threshold.
HUANG ETAL.: EDGE RESOURCE PRICING AND SCHEDULING FOR BLOCKCHAIN: A STACKELBERG GAME APPROACH 1101
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
4.2 The Effect of Different Parameters on Miner’s
Utility
We study miner utility as a function of miner budget and
ESP capacity, as shown in Figs. 5a and 5b. Fig. 5a shows
that when other miners’ budgets are fixed at a certain value,
increasing a miner’s budget will bring a higher utility for
miner. Obviously, increasing the miner’s budget allows him
to purchase more computing resources, which increases the
probability of solving the PoW problem, thereby further
enhancing his profits. On the contrary, as the number of
ESPs is fixed, the utility of miners decreases as the number of
miners increases. This is because more competition among
more miners will result in a lower probability of each com-
petitor, hence reducing the utility of eachminer. Fig. 5a dem-
onstrates that if the number of ESPs increases, each miner
will get more profits. The reason is that more ESPs bring
higher total capacity, which will allow more demands to be
accepted by ESPs, resulting in a higher probability of win-
ning the game due to the shorter propagation delay of ESPs
than CSPs. Nevertheless, when the certain miner’s budget is
set as 90, there is no effect on the growth of the miner’s bene-
fit when changing the number of ESPs from 4 to 5. This is
due to the fact that when the miner’s budget is under a cer-
tain amount, Simply increasing the number of ESPs does not
help miners buy more computing services due to limited
budgets. As a result, the utility of oneminer constantly holds
until the budget grows up to a higher value.
Fig. 5b shows the impact of ESPs’ capacity on miners’ util-
ity. The average of miners’ utility increases as the average
capacity of ESPs increases at first. When the average capacity
of ESPs reaches a certain value, the changes in miners’ utility
tend to be flat. Miners specify their demand strategy based on
their budget and the prediction of other competitors’ anticipa-
tion. More capacity of ESPs facilitates the acceptance of min-
ers’ requests. Therefore, within a limited budget, increasing
ESPs’ capacity will bring a certain benefit growth. However,
due to the limited budget of miners, they cannot pay for too
many computing services, so the continuous growth of ESPs’
capacity brings no benefit in their utility when their requests
have reached the upper limit of their budgets.
4.3 The Effect of Different Parameters on ESP’s
Utility
We also address the comparison of how capacity affects the
utility of ESPs in different numbers of miners or different
numbers of ESPs cases. As illustrated in Fig. 6a, we observe
that the profit of an ESP rises with the increase of its own
capacity. The reason inside is that more capacity allows the
ESP to accept more requests and reduces the number of com-
puting tasks uploaded to the CSP. Here, the cost for
Fig. 5. The Effect of Budget and Capacity on Miner side.
Fig. 6. The Effect of Budget and Capacity on ESP side.
1102 IEEE TRANSACTIONS ON SERVICES COMPUTING, VOL. 16, NO. 2, MARCH/APRIL 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
uploading requests to the CSP is higher than running the ESP
tasks locally. Thus, more tasks implemented on ESP enhance
the profit of ESP. We also see that when the number of ESPs
is set as 3, the utility of ESP increases as the number ofminers
increases. On the contrary, when the number of miners is set
as 3 and the number of ESPs grows up, the revenue of ESPs
drops instead. This is because the greater number of miners
will cause more computing service demands, and at the
same time, the competition will be more intense. The miners
are willing to request more computing resources to upgrade
their winning probability in such settings.
However, with the fixed number of miners, the budget of
miners is limited.We set the budget of eachminer asBi ¼ 100
in this experiment, which means the total requests are limited
under their budget constraint. Thus, more ESPs share the lim-
ited benefits, resulting in a decrease in the average profit of
each ESP. Fig. 6b shows that the ESPs’ utility rises when the
average budget of miners Bi varies from 60 to 120. This is
because the miners have more money to purchase the com-
puting service, which further increases the utility of ESPs.
4.4 System Performance Evaluation
The system performance for miners and providers under the
proposed algorithm is evaluated as illustrated in Figs. 7a, 7b,
and 7c. We evaluate the utility of miners and ESPs as well as
the computing service demanded byminers with the changes
of the reward parameters. We can see that, with the increase
of the reward, all values of total demanded computing ser-
vice, ESPs’ utility, andminers’ utility increase. The reason lies
in that the increasing rewardmotivates theminers to demand
more computing services to win the mining game and hence
increases the total demand for ESPs, which further improves
the profit of ESPs. Also, the increasing reward gives theminer
higher profit and then improves theminers’ utility.
In addition, we evaluate the effect of the average propaga-
tion delay of the system on participant profits.We can see that
the average propagation delay of the system tends to be posi-
tively correlated with the computational service demand and
utility of the ESPs in Figs. 7b and 7c. This can be explained in
Eq. (9), that is, the probability that a miner wins the mining
game Wi consists of two parts. One factor is the probability
that the block he packs becomes the first consensus, which is
negatively related to propagation delay. An increase in the
average propagation delay results in a decrease inWi. There-
fore, miners must demand more computing power to com-
pete with others. This, in turn, will increase ESP profits.
However, the requirement for more computing services
makes miners pay more, which reduces utility. This is why
the utility of miners decreases as the average propagation
delay of ESP increases.
Fig. 8 also studies the propagation delay for geographic
location and number ofminers two factors that affect the price
and utility of ESPs.We can see that, ESPwith higher propaga-
tion delay factor twill obtain a lower price and utility. This is
because users are more inclined to buy ESPs with low latency
to get a higher winning rate, so the platform has to lower the
price to attract more users to purchase, thus obtaining less
profit from providing computing services. In fact, by compar-
ing Figs. 7b and 8, we can find that reducing the delay of a sin-
gle ESP will bring an increase in its profit, but the effect will
be counterproductive if all ESPs of the entire system reduce
the delay. This phenomenon can be explained by the principle
of the prisoner’s dilemma in game theory. What’s more, from
the general trend, the increase in the number of miners leads
Fig. 7. The Effects of the Reward.
Fig. 8. The Effect of the Propagation Delay. Fig. 9. The Effect of the Block Size.
HUANG ETAL.: EDGE RESOURCE PRICING AND SCHEDULING FOR BLOCKCHAIN: A STACKELBERG GAME APPROACH 1103
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
to the improvement in ESPs’ prices and benefits. The reason is
that increase in the number of buyers leads to more intense
competition and makes the platform a better sales situation,
whichwe have discussed before.
In Fig. 9, we explore the relation between the number of
ESPs and the miners’ demand or utility. The increase in the
number of ESPs doesn’t bring obvious change to users’
demand. The user’s request is constrained by his budget,
so he has no incentive to increase demand uncondition-
ally. However, the increase in the number of ESPs will
bring more fierce competition in the seller’s market, thus
leading to lower prices, which enhances the profit of min-
ers. Furthermore, a miner who packages more transactions
will spend more time in the propagation phase, so he tends
to request more computing services to improve his winning
probability. Thus, the higher demands will decrease the util-
ity of theminer.
5 RELATED WORK
5.1 Widespread Applications of Blockchain
Blockchain came to prominence as the distributed ledger
underneath Bitcoin. Recently, several studies on blockchain
work [7], [18], [19] have applied the blockchain technology
into the Internet of Things (IoT) field. [18] proposed secure
support vector machine (SVM), which is a privacy-preserv-
ing SVM training scheme over blockchain-based encrypted
IoT data and can enable data sharing while securing sensi-
tive user information. A general architecture combining
blockchain and IoT systems is presented by [19] to support
the decentralized approach of data management in IoT sys-
tems. Furthermore, game theory [20] is usually combined
with blockchain to be applied in the field of IoT to prevent
malicious competition. [7] proposed a two-stage solution to
ensure secure miner selection and prevent internal collusion
among active miners, which further improve driving safety
and enhance vehicular services. In addition to the successful
applications in the IoT, blockchain has been treated as one
of the most promising technologies to promote crowdsourc-
ing by providing new nice features. The work [21] proposed
a novel hybrid blockchain crowdsourcing platform to
achieve the decentralization and privacy preservation. The
reinforcement learning technology integrated into block-
chain in crowdsourcing system was studied by [22], where
an improved multi-blockchain structure and a blockchain-
based hierarchical task management method were designed.
Moreover, blockchain’s achievements in privacy protection
should not be underestimated either. The work [23], [24] used
the blochchain technology in a decentralized way to identify
and verify the uses’ information so that it can solve the secu-
rity problem.
On the other hand, a large number of studies have been
developed in mining schemes management for blockchain
networks [25], [26]. In [17] the authors designed a nonco-
operative game among the miners. The miner’s strategy is
to choose the number of transactions to be included in a
block, where solving the PoW puzzle for mining is mod-
eled as a Poisson process. Then, [27] modeled the mining
process as a sequential game where the miners compete
for mining reward sequentially among them. Similarly,
the authors in [28] formulated the stochastic game for
modeling the mining process, where miners decide on
which blocks to extend and whether to propagate the
mined block. In addition, [29] investigated the impact of
network latency on blockchain forking behavior and possi-
ble violations of the aforementioned six confirmations con-
vention for transaction approval.
5.2 Cloud/Edge Computing Based Blockchain
Cloud providers offer virtually unlimited computation and
storage resources on demand, allowing for the elasticity and
scalability of applications deployed. The mobile edge com-
puting, which is emerging as an effective way to mitigate the
problem of long latency and the current network architecture
[30], [31], [32], has attractedmore attention.With the develop-
ment of cloud computing and edge computing, miners prefer
offloading the PoW computations to local edge service due to
the limited computing resource on their mobile terminals
[15], [33], [34], [35], [36], [37]. The system model proposed in
paper [38] allows unmanned aerial vehicles offloading to
MEC through base stations to run some blockchain tasks. In
[35], [39], the authors considered a blockchain-based mining
game model with an ESP and a CSP in two situations, i.e., the
ESP is connected (to the CSP) or standalone, and then ana-
lyzed the Stackelberg equilibrium in these models. However,
in real scenarios, it is common for multiple ESPs to compete
for pricing and sell resources which is not considered in this
work. [14] studied the interactions among the cloud/edge
providers and miners in blockchain using game theory
approach, in which every miner has mobile device with lim-
ited computing power and can offload the PoW puzzle to the
providers. The authors considered the propagation delay
caused by the size of the block, i.e., the propagation delay is
related to the number of transactions included in that block.
However, all previous studies did not consider the
impact of ESPs’ propagation delays due to their geographic
locations, which will lead to the different probability of win-
ning the mining game for miners. Therefore, this motivates
us to take a step further to reconsider the mining strategies
and resource management in a mobile environment. In fact,
lots of real-world applications would benefit from our
research. For example, our model can be applied in the task
migration problem in mobile edge computing scenarios, the
data synchronization problem in blockchain-based internet
of vehicles systems, etc.
6 CONCLUSION & FUTURE WORK
In this paper,we investigate the resource pricing and schedul-
ing problem in the edge-assisted blockchain mining networks
by using the three-stage multi-leader multi-follower Stackel-
berg game theory. In particular, we first propose cooperative
mobile-edge computing (MEC)-aided blockchain network. In
the network, the user with devices can offload computation-
intensive PoW mining tasks to edge computing service pro-
viders (ESPs) who connect with a remote cloud computing
service provider (CSP). ESPs in this model are located in
diverse positions of the blockchain network,which causes dif-
ferent propagation delays in mining work. If the computing
demands from users exceed the maximum capacity of ESP, it
will lease computing resources from CSP. Then, we study the
joint computation offloading and resource service pricing
1104 IEEE TRANSACTIONS ON SERVICES COMPUTING, VOL. 16, NO. 2, MARCH/APRIL 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
problem as a three-stage Stackelberg game. We analyze the
subgame optimization problem in each stage and propose an
iterative algorithm based on backward induction to achieve
the Nash equilibrium of the Stackelberg game. Furthermore,
we conduct extensive simulations to validate the convergence
as well as evaluate the network performance. In future work,
we will further explore the best response results without oth-
ers’ strategies and the practical algorithm implementation in
the real world. We will also study other consensus mecha-
nisms such as proof of stake, delegated proof of share, etc., in
the next blockchain-based research. Note that the extended
research for studying the task resource scheduling problem
on the real blockchain system (e.g., Ethereum) is being carried
out in our follow-upwork.
REFERENCES
[1] S. Huang, H. Huang, G. Gao, Y. Sun, Y. Du, and J. Wu,
“Stackelberg game based resource pricing and scheduling in
edge-assisted blockchain networks,” in PRoc. 18th Int. Conf. Mobile
Ad Hoc Smart Syst., 2021, pp. 289–296.
[2] S. Nakamoto, “A peer-to-peer electronic cash system,” 2008.
[Online]. Available: https://bitcoin.org/bitcoin.pdf
[3] P. Franco,Understanding Bitcoin. Hoboken, NJ, USA: Wiley, 2014.
[4] R. B€ohme, N. Christin, B. Edelman, and T. Moore, “Bitcoin: Eco-
nomics, technology, and governance,” J. Econ. Perspectives, vol. 29,
no. 2, pp. 213–38, 2015.
[5] Crypto-currency market capitalizations, 2017. [Online]. Available:
https://coinmarketcap.com
[6] W. Wang et al., “A survey on consensus mechanisms and mining
strategy management in blockchain networks,” IEEE Access,
vol. 7, pp. 22328–22370, 2019.
[7] J. Kang, Z. Xiong, D. Niyato, D. Ye, D. I. Kim, and J. Zhao, “Toward
secure blockchain-enabled internet of vehicles: Optimizing consen-
sus management using reputation and contract theory,” IEEE Trans.
Veh. Technol., vol. 68, no. 3, pp. 2906–2920,Mar. 2019.
[8] S. Feng,W.Wang,Z. Xiong,D.Niyato, P.Wang, andS. S.Wang, “On
cyber risk management of blockchain networks: A game theoretic
approach,” IEEE Trans. Serv. Comput., vol. 14, no. 5, pp. 1492–1504,
Sep./Oct. 2021.
[9] X. Han, Y. Yuan, and F. Wang, “A fair blockchain based on proof of
credit,” IEEE Trans. Computat. Social Syst., vol. 6, no. 5, pp. 922–931,
Oct. 2019.
[10] N. Bozic, G. Pujolle, and S. Secci, “A tutorial on blockchain and
applications to secure network control-planes,” in Proc. 3rd Smart
Cloud Netw. Syst., 2016, pp. 1–8.
[11] J. Feng, F. Richard Yu, Q. Pei, X. Chu, J. Du, and L. Zhu,
“Cooperative computation offloading and resource allocation for
blockchain-enabled mobile-edge computing: A deep reinforce-
ment learning approach,” IEEE Internet Things J., vol. 7, no. 7,
pp. 6214–6228, Jul. 2020.
[12] L. Wan, D. Eyers, and H. Zhang, “Evaluating the impact of net-
work latency on the safety of blockchain transactions,” in Proc.
IEEE Int. Conf. Blockchain, 2019, pp. 194–201.
[13] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When
mobile blockchain meets edge computing,” IEEE Commun. Mag.,
vol. 56, no. 8, pp. 33–39, Aug. 2018.
[14] Z. Xiong, J. Kang, D. Niyato, P.Wang, andH. V. Poor, “Cloud/edge
computing service management in blockchain networks: Multi-
leader multi-follower game-based ADMM for pricing,” IEEE Trans.
Serv. Comput., vol. 13, no. 2, pp. 356–367,Mar./Apr. 2020.
[15] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for
blockchain networks,” IEEE Internet Things J., vol. 6, no. 3,
pp. 4585–4600, Jun. 2019.
[16] Y. Zuo, S. Jin, S. Zhang, and Y. Zhang, “Blockchain storage and
computation offloading for cooperative mobile-edge computing,”
IEEE Internet Things J., vol. 8, no. 11, pp. 9084–9098, Jun. 2021.
[17] N. Houy, “The bitcoinmining game,” Ledger, vol. 1, pp. 53–68, 2016.
[18] M. Shen, X. Tang, L. Zhu, X. Du, and M. Guizani, “Privacy-pre-
serving support vector machine training over blockchain-based
encrypted IoT data in smart cities,” IEEE Internet Things J., vol. 6,
no. 5, pp. 7702–7712, Oct. 2019.
[19] Z. Xiong, Y. Zhang, N. C. Luong, D. Niyato, P. Wang, and N. Gui-
zani, “The best of both worlds: A general architecture for data man-
agement in blockchain-enabled Internet-of-Things,” IEEE Netw.,
vol. 34, no. 1, pp. 166–173, Jan./Feb. 2020.
[20] G. Gao, M. Xiao, J. Wu, L. Huang, and C. Hu, “Truthful incentive
mechanism for nondeterministic crowdsensing with vehicles,”
IEEE Trans. Mobile Comput., vol. 17, no. 12, pp. 2982–2997, Dec.
2018.
[21] S. Zhu, H. Hu, Y. Li, andW. Li, “Hybrid blockchain design for pri-
vacy preserving crowdsourcing platform,” in IEEE Int. Conf. Block-
chain, 2019, pp. 26–33.
[22] H. Lin, S. Garg, J. Hu, G. Kaddoum, M. Peng, and M. S. Hos-
sain, “Blockchain and deep reinforcement learning empowered
spatial crowdsourcing in software-defined internet of vehicles,”
IEEE Trans. Intell. Transp. Syst., vol. 22, no. 6, pp. 3755–3764,
Jun. 2021.
[23] B. K. Mohanta, S. S. Panda, U. Satapathy, D. Jena, and D. Gountia,
“Trustworthy management in decentralized IoT application using
blockchain,” in Proc. 10th Int. Conf. Comput. Commun. Netw. Tech-
nol., 2019, pp. 1–5.
[24] D. Fakhri and K. Mutijarsa, “Secure IoT communication using
blockchain technology,” in Proc. Int. Symp. Electron. Smart Devices,
2018, pp. 1–6.
[25] P. De Giovanni, “Blockchain and smart contracts in supply chain
management: A game theoretic model,” Int. J. Prod. Econ., vol. 228,
2020, Art. no. 107855.
[26] E. Altman et al., “Blockchain competition between miners: A game
theoretic perspective,” Front. Blockchain, vol. 2, 2020, Art. no. 26.
[27] J. Beccuti and C. Jaag, “The bitcoin mining game: On the optimal-
ity of honesty in proof-of-work consensus mechanism,” Swiss
Econ. Work. Paper 0060, pp. 1–20, 2017.
[28] A. Kiayias, E. Koutsoupias, M. Kyropoulou, and Y. Tselekounis,
“Blockchain mining games,” in Proc. ACM Conf. Econ. Comput.,
2016, pp. 365–382.
[29] L. Wan, D. Eyers, and H. Zhang, “Evaluating the impact of net-
work latency on the safety of blockchain transactions,” in Proc.
IEEE Int. Conf. Blockchain, 2019, pp. 194–201.
[30] G. Gao, M. Xiao, J. Wu, H. Huang, S. Wang, and G. Chen,
“Auction-based vm allocation for deadline-sensitive tasks in dis-
tributed edge cloud,” IEEE Trans. Serv. Comput., vol. 14, no. 6,
pp. 1702–1716, Nov./Dec. 2021.
[31] C.-F. Liu, M. Bennis, M. Debbah, and H. V. Poor, “Dynamic task
offloading and resource allocation for ultra-reliable low-latency
edge computing,” IEEE Trans. Commun., vol. 67, no. 6, pp. 4132–
4150, Jun. 2019.
[32] H. Zhou, X. Chen, S. He, J. Chen, and J. Wu, “DRAIM: A novel
delay-constraint and reverse auction-based incentive mechanism
for wifi offloading,” IEEE J. Sel. Areas Commun., vol. 38, no. 4,
pp. 711–722, Apr. 2020.
[33] D. C. Nguyen, P. N. Pathirana, M. Ding, and A. Seneviratne,
“Privacy-preserved task offloading in mobile blockchain with
deep reinforcement learning,” IEEE Trans. Netw. Service Manag.,
vol. 17, no. 4, pp. 2536–2549, Dec. 2020.
[34] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Joint
computation offloading and content caching for wireless block-
chain networks,” in Proc. IEEE Conf. Comput. Commun. Workshops,
2018, pp. 517–522.
[35] S. Jiang, X. Li, and J. Wu, “Hierarchical edge-cloud computing for
mobile blockchain mining game,” in Proc. IEEE 39th Int. Conf. Dis-
trib. Comput. Syst., 2019, pp. 1327–1336.
[36] S. Guo, Y. Dai, S. Guo, X. Qiu, and F. Qi, “Blockchain meets edge
computing: Stackelberg game and double auction based task off-
loading for mobile blockchain,” IEEE Trans. Veh. Technol., vol. 69,
no. 5, pp. 5549–5561, May 2020.
[37] M. Xiao, J. Wu, H. Huang, L. Huang, and C. Hu, “Deadline-sensi-
tive user recruitment for probabilistically collaborative mobile
crowdsensing,” in Proc. IEEE 36th Int. Conf. Distrib. Comput. Syst.,
2016, pp. 721–722.
[38] A. Asheralieva and D. Niyato, “Distributed dynamic resource
management and pricing in the IoT systems with blockchain-as-a-
service and UAV-enabled mobile edge computing,” IEEE Internet
Things J., vol. 7, no. 3, pp. 1974–1993, Mar. 2020.
[39] S. Jiang, X. Li, and J. Wu, “Multi-leader multi-follower stackelberg
game in mobile blockchain mining,” IEEE Trans. Mobile Comput.,
vol. 21, no. 6, pp. 2058–2071, Jun. 2022.
HUANG ETAL.: EDGE RESOURCE PRICING AND SCHEDULING FOR BLOCKCHAIN: A STACKELBERG GAME APPROACH 1105
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
https://bitcoin.org/bitcoin.pdf
https://coinmarketcap.com
Sijie Huang received the BS degree from the
School of Computer Science and Technology,
Xidian University, Xi’an, China, in 2018. She is
currently working toward the MS degree in elec-
tronic information with the School of Computer
Science and Technology, Soochow University,
Soochow, China. Her research interests include
blockchain, mobile-edge computing, crowdsourc-
ing and incentive mechanism.
He Huang (Senior Member, IEEE) received the
PhD degree from the School of Computer Sci-
ence and Technology, University of Science and
Technology of China (USTC), China, in 2011. He
is currently a professor with the School of Com-
puter Science and Technology, Soochow Univer-
sity, China. From 2019 to 2020, he was a visiting
research scholar with Florida University, Gaines-
ville, USA. He has authored more than 100
papers in related international conference pro-
ceedings and journals. His current research inter-
ests include traffic measurement, computer networks, and algorithmic
game theory. He is a member of the Association for Computing Machin-
ery (ACM). He received the best paper awards from Bigcom 2016, IEEE
MSN 2018, and Bigcom 2018. He has served as the technical program
committee member of several conferences, including IEEE INFOCOM,
IEEE MASS, IEEE ICC, and IEEE Globecom.
Guoju Gao (Member, IEEE) received the PhD
degree in computer science and technology with
the School of Computer Science and Technology,
University of Science and Technology of China,
Hefei, China. He is an Assistant Professor with the
School of Computer Science and Technology at
the Soochow University. He visited the Temple Uni-
versity, USA, from Jan. 2019 to Jan. 2020. His
research interests include privacy preservation,
game theory, and reinforcement learning.
Yu-E Sun (Member, IEEE) received the PhD
degree from the Shenyang Institute of Computing
Technology from Chinese Academy of Science.
She is a professor with the School of Rail Trans-
portation, Soochow University, China. From 2019
to 2020, she was a postdoc research scholar with
Florida University, Gainesville, USA. She has
authored more than 80 papers in related interna-
tional conference proceedings and journals. Her
current research interests span traffic measure-
ment, privacy preserving, algorithm design and
analysis for wireless networks. She is a member of ACM. She received
the best paper awards from Bigcom 2016, IEEE MSN 2018, and Bigcom
2018. She has served as the technical program committee co-chairs of
ACM MSCC-MobiHoc 2016.
Yang Du (Member, IEEE) received the BE
degree from the Soochow University in 2015 and
the PhD degree from the University of Science
and Technology of China in 2020. He is currently
a postdoctoral fellow with Soochow University.
His research interests include network traffic
measurement, mobile crowdsensing, and truth
discovery.
Jie Wu (Fellow, IEEE) is the director with the
Center for Networked Computing and Laura H.
Carnell professor with Temple University. He also
serves as the director with International Affairs,
College of Science and Technology. He served as
chair with the Department of Computer and Infor-
mation Sciences from the summer of 2009 to the
summer of 2016 and associate vice provost for
International Affairs from the fall of 2015 to the
summer of 2017. Prior to joining Temple Univer-
sity, he was a program director with the National
Science Foundation and was a distinguished professor with Florida
Atlantic University. His current research interests include mobile comput-
ing and wireless net-works, routing protocols, cloud and green comput-
ing, network trust and security, and social network applications. He
regularly publishes in scholarly journals, conference proceedings, and
books. He serves on several editorial boards, including IEEE Transac-
tions on Service Computing and the Journal of Parallel and Distributed
Computing. He was general co-chair for IEEE MASS 2006, IEEE IPDPS
2008, IEEE ICDCS 2013, ACM MobiHoc 2014, ICPP 2016, and IEEE
CNS 2016, as well as program co-chair for IEEE INFOCOM 2011 and
CCF CNCC 2013. He was an IEEE Computer Society distinguished visi-
tor, ACM distinguished speaker, and chair for the IEEE Technical Com-
mittee on Distributed Processing (TCDP). He is a CCF distinguished
speaker. He is the recipient of the 2011 China Computer Federation
(CCF) Overseas Outstanding Achievement Award.
" For more information on this or any other computing topic,
please visit our Digital Library at www.computer.org/csdl.
1106 IEEE TRANSACTIONS ON SERVICES COMPUTING, VOL. 16, NO. 2, MARCH/APRIL 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:31:29 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 150
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice