A Proof-of-Quality-Factor (PoQF)-Based Blockchain and Edge Computing for Vehicular Message Dissemination
2468 IEEE INTERNET OF THINGS JOURNAL, VOL. 8, NO. 4, FEBRUARY 15, 2021
A Proof-of-Quality-Factor (PoQF)-Based
Blockchain and Edge Computing
for Vehicular Message Dissemination
Ferheen Ayaz , Graduate Student Member, IEEE, Zhengguo Sheng , Senior Member, IEEE,
Daxin Tian , Senior Member, IEEE, and Yong Liang Guan , Senior Member, IEEE
Abstract—Blockchain applications in vehicular networks can
offer many advantages, including decentralization and improved
security. However, most of the consensus algorithms in blockchain
are difficult to be implemented in vehicular ad hoc networks
(VANETs) without the help of edge computing services. For exam-
ple, the connectivity in VANET only remains for a short period of
time, which is not sufficient for highly time-consuming consensus
algorithms, e.g., Proof of Work, running on mobile-edge nodes
(vehicles). Other consensus algorithms also have some drawbacks,
e.g., Proof of Stake (PoS) is biased toward nodes with a higher
amount of stakes and Proof of Elapsed Time (PoET) is not highly
secure against malicious nodes. For these reasons, we propose a
voting blockchain based on the Proof-of-Quality-Factor (PoQF)
consensus algorithm, where the threshold number of votes is con-
trolled by edge computing servers. Specifically, PoQF includes
voting for message validation and a competitive relay selection
process based on the probabilistic prediction of channel quality
between the transmitter and receiver. The performance bounds of
failure and latency in message validation are obtained. This arti-
cle also analyzes the throughput of block generation, as well as
the asymptotic latency, security, and communication complexity
of PoQF. An incentive distribution mechanism to reward honest
nodes and punish malicious nodes is further presented and its
effectiveness against the collusion of nodes is proved using the
game theory. Simulation results show that PoQF reduces failure
in validation by 11% and 15% as compared to PoS and PoET,
respectively, and is 68 ms faster than PoET.
Index Terms—Blockchain, edge computing, practical
Byzantine fault tolerant (PBFT), Proof of Elapsed Time (PoET),
Proof of Stake (PoS).
Manuscript received April 13, 2020; revised July 17, 2020 and August 7,
2020; accepted September 19, 2020. Date of publication September 25, 2020;
date of current version February 4, 2021. This work was supported in part
by H2020-MSCA-RISE under Grant 101006411—SEEDS; in part by the
National Natural Science Foundation of China under Grant 61822101; in part
by the Beijing Municipal Natural Science Foundation under Grant L191001
and Grant 4181002; and in part by A*STAR under its RIE2020 Advanced
Manufacturing and Engineering Industry Alignment Fund–Pre Positioning
under Grant A19D6a0053. (Corresponding author: Daxin Tian.)
Ferheen Ayaz and Zhengguo Sheng are with the Department of Engineering
and Design, University of Sussex, Brighton BN1 9RH, U.K. (e-mail:
f.ayaz@sussex.ac.uk; z.sheng@sussex.ac.uk).
Daxin Tian is with the School of Transportation Science and Engineering,
Beihang University, Beijing 100191, China (e-mail: dtian@buaa.edu.cn).
Yong Liang Guan is with the School of Electrical and Electronic
Engineering, Nanyang Technological University, Singapore 639798 (e-mail:
eylguan@ntu.edu.sg).
Digital Object Identifier 10.1109/JIOT.2020.3026731
I. INTRODUCTION
VEHICLES equipped with on-board computers offer lim-
ited computing and storage capabilities. However, in a
vehicular edge computing (VEC) network, the mobile-edge
nodes (vehicles) with limited resources are able to offload
heavy computational tasks to nearby roadside units (RSUs).
One of the main objectives of VEC is to support infotain-
ment applications and ensure road safety. However, due to
the high mobility of nodes and changing transmission rates,
there are a large number of communication failures and delays
between mobile nodes and RSUs [1]. For delay-sensitive
applications, such as emergency message dissemination, VEC
allows nodes to exchange messages among themselves in a
decentralized manner, forming a vehicular ad hoc network
(VANET). On the other hand, a blockchain is a distributed
ledger that can record transactions in a trusted and credible
environment without the requirement of a central authority.
The features of blockchain, such as distributed nature, inde-
pendence from the third party, and consensus to validate
transactions, are some of the essential requirements of mes-
sage dissemination in VANET. Therefore, the combination of
blockchain and VANET can potentially result in secure and
reliable vehicle-to-vehicle (V2V) communications [2]. Table I
summarizes challenges associated with message dissemina-
tion in VANETs and corresponding solutions provided by the
blockchain. However, the dynamic network nature of VANET
limits the connectivity between two nodes to a short period
of time. Moreover, technical challenges, such as broadcast
storm, packet collision, and computing complexity, need to
be addressed in the VANET environment while implementing
the blockchain [3]. Therefore, new blockchain solutions need
to be developed using VEC networks for fully utilizing the
blockchain framework.
The consensus algorithm in a blockchain is used for trust-
ing a transaction. Nodes undergo a validation process, termed
as consensus, before recording a transaction in a block. The
nodes participating in a consensus are mining nodes and the
node that successfully generates a block is known as the
leader [4]. One of the most popular consensus algorithms is
the Proof of Work (PoW), in which all nodes attempt to find
a solution to a hash puzzle. The node that finds the solution
first is elected as a leader, it will add the next block to the
blockchain and earn a mining incentive. The computation cost
to find a solution of a hash puzzle takes around 10 min [5].
2327-4662 c© 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0003-3905-675X
https://orcid.org/0000-0003-2143-4003
https://orcid.org/0000-0001-7796-5650
https://orcid.org/0000-0002-9757-630X
AYAZ et al.: PROOF-OF-QUALITY-FACTOR (POQF)-BASED BLOCKCHAIN AND EDGE COMPUTING 2469
TABLE I
VANET ISSUES AND OPPORTUNITIES USING BLOCKCHAIN
Distribution of huge computation load of PoW over the edge
system is recommended as a solution but the evaluation of cost
and contribution of an individual edge device in a heteroge-
neous network is still unexplored [6]. A number of time-saving
alternatives to PoW have also been proposed. One of the most
commonly used consensus algorithms with connected vehicles
is the Proof of Stake (PoS), where the reputation of a node is
considered as stake [7], [8]. PoS reduces the latency of a con-
sensus but does not provide fair competition to elect a leader.
It is biased toward nodes with a higher amount of stakes.
The fairness with less computation workload is achieved by
another consensus algorithm, known as Proof of Elapsed Time
(PoET), in which each node generates a random number to
determine the waiting time after which it can generate a block.
However, the existing literature proves its weakness in security
and vulnerability in the presence of malicious nodes [9]. The
practical Byzantine fault-tolerant (PBFT) consensus algorithm
that requires at least 2f + 1 votes to validate a transaction,
where f is the number of faulty nodes [10], is suggested to be
suitable for vehicular applications because of its high through-
put and ability to negotiate message validity [11], [12]. It
is analogous to threshold-based message validation in which
a message is considered valid only if it is confirmed by a
threshold number of nodes located in close proximity of a
sender [13]. The threshold value is crucial in such validation.
A low threshold value may lead to false validation, whereas a
high threshold value can result in increased latency. However, a
threshold-based message validation can be made efficient if the
threshold value is adaptable to network conditions and require-
ments and can be varied using edge computing resources. It
can be summarized that the measurements required to evaluate
the performance of a consensus algorithm are as follows.
1) Security: The number of malicious nodes it can con-
trol without altering the original validity status of a
transaction and its ability to resolve forks and prevent
cheating.
2) Validation Latency: The time required to validate a
transaction.
3) Throughput: The number of blocks generated per
second.
This article proposes a Proof-of-Quality-Factor (PoQF) con-
sensus algorithm for vehicular networks, where the message
validation and quality factor in determining multihop relaying
can be run efficiently on mobile-edge nodes in a decentral-
ized manner. For a successful packet transmission, signal-to-
interference-noise ratio (SINR) plays a crucial role [14], [15].
Therefore, SINR is considered as a metric in relay node selec-
tion. As SINR depends on the distances among nodes which
vary with time in vehicular networks, the probability that SINR
exceeds a certain threshold is predicted using mobility models
in which positions or distances are regarded as random vari-
ables following some probability distribution [16]. The main
contributions of this article are as follows.
1) We propose a PoQF consensus, where mobile-edge
nodes serve as mining nodes. Instead of solving a
hash puzzle, they select relays along with validating a
message.
2) We derive the bounds of failure and latency in validating
a message as well as the throughput of block generation.
The asymptotic latency, security, and communication
complexity of PoQF are also discussed.
3) We propose an incentive distribution mechanism to
reward honest nodes and punish malicious mining nodes
and analyze its performance using the game theory.
The remainder of this article is organized as follows.
Section II describes the related work. Section III explains the
proposed blockchain design. The theoretical performance of
our work is analyzed in Section IV. Simulation results are
discussed in Section V and Section VI concludes this article.
II. RELATED WORK
A. Vehicular Edge Computing
In [1], the challenges in VEC, such as transmission failures
and delays during offloading are addressed and a context-
aware opportunistic offloading scheme utilizing fog computing
is proposed. VEC is recommended as efficient support to
emerging applications, such as artificial intelligence (AI),
software define network (SDN), and blockchain in [17].
The advantages of combining mobile-edge computing, the
Internet of Vehicles (IoV), and AI are highlighted in [18]
and [19]. Both of them suggest deep reinforcement learn-
ing (DRL) as the key technique to bring intelligence in
VEC networks. Collocating edge computing servers with radio
access networks for satisfying latency requirements of mes-
sage dissemination in IoV is proposed in [20]. In [21], the
problem of inappropriate utilization of resources is resolved
by the blockchain.
B. Collective Mining
The existing literature aims to achieve a better performance
of blockchain consensus, at the same time, retaining its feature
of decentralization. One of the solutions to improve valida-
tion latency and throughput in block generation is to introduce
collective mining. In this scheme, multiple mining nodes col-
lectively decide whether a transaction is valid and should be
added to a blockchain [22]. Byzcoin is an example of col-
lective mining [23]. It leads to parallel blockchain extension
and the mining incentive is shared among all mining nodes.
Bitcoin-NG [24] divides time into multiple slots. In each slot,
a leader can append transactions until a new leader is elected.
There are two types of blocks in Bitcoin-NG: 1) keyblock and
2) microblock. The leader is elected by solving a cryptographic
puzzle. The keyblock stores the solution of a hash puzzle and
the microblock contains ledger entries. Another approach of
collective mining is called sharding in which mining nodes
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
2470 IEEE INTERNET OF THINGS JOURNAL, VOL. 8, NO. 4, FEBRUARY 15, 2021
are grouped into committees and work in parallel. Each com-
mittee runs PBFT consensus on a different set of transactions
(shards) at the same time for achieving a high throughput [25].
C. Blockchain-Based Incentive Distribution
The blockchain-based economic model for incentive dis-
tribution in federated learning utilizing the edge computing
framework is recommended in [6]. Secure blockchain-based
incentive mechanisms are also proposed in the literature to
encourage cooperative message delivery and data sharing in
distributed peer-to-peer (P2P) applications. In [26], a pric-
ing strategy to ensure successful message delivery using the
blockchain is presented and proved to be secure against the
collusion of intermediate nodes and receiver using the game
theory. It is proposed to verify transactions of incentives
distributed among relay nodes by mining nodes. Similarly,
in [27], P2P data sharing using the public blockchain is
proposed. Its incentive mechanism is analyzed by an evolu-
tionary game model and the cooperative behavior of nodes is
analyzed by a repeated game model. In both [26] and [27],
the incentive mechanism is proved to encourage cooperation
among nodes by including a charge mandatory to be paid by
transmitting nodes. Incentive-based message relaying in dis-
tributed P2P applications using the blockchain is also proposed
in [28] and proved to be secure against a selfish behavior.
In [26]–[28], the incentive distribution among relay nodes is
proposed, but the incentive for mining nodes to promote par-
ticipation and the type of consensus algorithm to be processed
are not discussed. In [29] and [30], the incentive-based mes-
sage delivery in wireless ad hoc networks for smart cities and
intelligent transportation systems (ITSs) is presented, where
the message is validated using PBFT, and the incentives
and privacy are controlled using the blockchain. In [31], a
blockchain-based data sharing in VANETs is proposed. PoW
is used by RSUs to add a data block, whereas PBFT is used
by vehicle nodes for block announcement.
D. Blockchain-Based Vehicular Communications
In [32], blockchain is proposed for decentralization, data
security and privacy in IoV, and technical difficulties to imple-
ment blockchain in IoV, such as the high speed of moving
vehicles and error-prone wireless transmission links, are dis-
cussed. In [33], these technical difficulties are suggested to
be solved using DRL for altering the block size and interval.
Blockchain is also recommended for privacy preserving and
efficient database management in railway vehicles [34].
The selection of blockchain consensus suited to IoV is
widely discussed in the literature. PBFT is recommended as
a suitable consensus for message validation among connected
vehicles in [12], [33], and [35]. Meanwhile, PoS is also com-
pared with PoW and suggested as a promising consensus for
IoV because of its low energy consumption and reduced time
delay in [36]. A blockchain-based message dissemination in
VANETs utilizing edge computing is proposed in [37]. It uses
PoW and achieves latency reduction in block generation by
offloading complex computations to capable edge devices. Its
blockchain is used to store trust values of nodes, which is
TABLE II
CONSENSUS ALGORITHMS USED IN VANETS
updated according to the validity of the message initiated by
the individual node. Similarly, Khan et al. [38] also proposed
a blockchain to store trust values and message ratings, where
hash computations are performed by RSUs. On the contrary,
Wagner and Mcmillin [39] showed that a completely dis-
tributed P2P blockchain in VANETs with the least possible
reliance on RSU and the infrastructure is not possible to be
implemented with PoW, but an RSU-dependent network will
be a costly solution. A joint PoW and PoS consensus managed
by RSUs is proposed in [8] to store trust values of nodes and
evaluate the credibility of the message based on the trust value
of senders. Delegated PoS (DPoS) is proposed in [7], where
only selected nodes take part in consensus. The mining nodes
are selected on the basis of reputation. This approach is based
on the assumption that RSUs with edge computing infras-
tructures have sufficient computation and storage resources to
process and store the reputation of all nodes. DPoS is also used
for blockchain-enabled data sharing during rescue missions in
disaster-affected areas, where IoV is assisted by unmanned
aerial vehicles (UAVs) [40].
The prior work related to blockchain in VANETs mostly
focus on credibility-based message validation. In [2], the
impact of high mobility on blockchain-based VANETs is eval-
uated, but a cost-effective solution to overcome this challenge
is still needed. A consolidated solution integrating message
validation and dissemination using PBFT-based consensus,
blockchain-based incentives, and reputation management is
presented in [41] and [42], but a detailed performance analysis
is required so as to evaluate its practical feasibility. This article
analyzes both theoretical and simulation-based performance
of the voting blockchain incorporating relay node selection
and the incentive mechanism supported by edge computing
server. In addition to the mobility constraint in VANETs, the
performance analysis also examines the practical feasibility
of the proposed solution with varying number of mining and
malicious nodes. Based on the existing literature, Table II
summarizes different consensus algorithms used for various
purposes in VANETs and indicates multiple advantages of
PBFT, including message validation by voting, high through-
put, and the ability to finalize transactions independently
without relying on RSU.
III. SYSTEM MODELING AND THE PROPOSED
BLOCKCHAIN DESIGN
This section describes PoQF consensus, including the relay
node selection, QFi calculations, adversary model, and incen-
tive distribution mechanism. Key notations used in this article
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: PROOF-OF-QUALITY-FACTOR (POQF)-BASED BLOCKCHAIN AND EDGE COMPUTING 2471
TABLE III
KEY NOTATIONS
are listed in Table III. As categorized in [43], we define
edge devices present in the network into two types: 1) the
mobile-edge “nodes”, i.e., vehicles and 2) “edge computing
servers”, i.e., RSUs. Before joining the blockchain network,
a node needs to register itself and acquire a wallet address
and a pair of public and private keys for privacy-preserving
communications. This can be accomplished by vehicle-to-
infrastructure (V2I) communications with regulation authori-
ties via a nearby edge computing server. Each node updates its
Fig. 1. Proposed PoQF consensus.
copy of blockchain through edge caching, as described in [44].
The regulation authorities control the expiration of idle keys,
thereby preventing long-range attacks in which attackers use
old accounts [45].
A. Proposed PoQF Consensus
The proposed PoQF consists of four stages, as illustrated in
Fig. 1. At the first stage, an incident occurs and a message is
initiated by originator involved in the incident. An originator
is the sender s of the message at first hop, i.e., when nhop = 1,
where nhop is the hop number. The message is analogous to a
transaction proposal in a consensus that requires validation.
At the second stage, a node that receives and responds to
the message performs the role of a mining node. Each mining
node i generates a microblock, in which it records its vote
toward the validity of the message and its quality factor, QFi,
to become a potential relay node. A node i waits for time τi
before it announces a microblock. τi is a randomly generated
number following uniform distribution, i.e., τi ∼ U(aτi , bτi),
where aτi and bτi are lower and upper limits of τi, respectively,
which are dependent on QFi. The motivation behind using τi is
threefold: one is to prevent all nodes from transmitting at the
same time and causing packet collision, second is to introduce
fairness by giving less waiting time to nodes with higher QFi,
and the third is to ensure randomization if node i and node
j have QFi = QFj. Using uniform distribution to randomize
scheduling of messages so as to avoid packet collision has
been previously used in [46].
At the third stage, node i is selected as a relay node if
it fulfills two conditions. First, it has received at least nth
microblocks with the same votes as its own. Second, its QFi
is the highest among all microblocks with the same votes as
its own. The motivation behind these two conditions instead
of QFi only is to enhance the security of PoQF. For exam-
ple, if a malicious node i with the highest QFi among all
mining nodes votes false for an originally true message and
receives nth microblocks with true votes, it cannot become a
relay node and earn an incentive. Similarly, if an honest node
i with the highest QFi votes false for an originally false mes-
sage, but receives nth microblocks with true votes, it cannot
become a relay node to forward a false message. A relay node
will forward the message only if it is validated as true but
always generate a keyblock to record message validity after
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
2472 IEEE INTERNET OF THINGS JOURNAL, VOL. 8, NO. 4, FEBRUARY 15, 2021
Fig. 2. Flowchart of actions by mining node at nhop = 1.
PoQF and transactions, which are related to incentive distri-
bution. As shown in Fig. 2, if no node receives at least nth
microblocks with the same votes as its own until 1 s, i.e., the
maximum allowable latency for emergency message dissemi-
nation [47], the message is considered as false and a keyblock
to record such transaction will be generated by the mining
node i with the highest QFi, which voted false. If two relay
nodes with opposing votes are selected (one with the true vote
and another with false vote), the message is considered true so
that the cooperation may not be stopped in case of a true inci-
dent. The value of nth corresponding to real traffic conditions
is communicated to nodes by an edge computing server.
The fourth stage is the continuation of message dissemi-
nation. If the message is validated as true, it is disseminated
after a new relay node selection by PoQF at each hop until
nhop ≤ nmax
hop , where nmax
hop is the maximum number of hops up
to which a message is required to be forwarded and is updated
by an edge computing server. It is noted that votes to validate
a message are not required for nhop > 1. It is simply because
the validation of the message has been done by adjacent wit-
ness nodes (mining nodes at nhop = 1) through a camera or
location/speed verification [48]. All other nodes beyond the
first hop may not have access to validate the originator.
B. QFi Calculations
QFi determines the quality of mining node i at the time
when it forwards the message as a relay node. Each node reg-
ularly shares its position and velocity via a beacon message.
As shown in Fig. 1, two consecutive beacons messages are
exchanged at t0 and t1 before the occurrence of an incident.
To compute QFi, node i makes probability-based predictions
of distances with its neighbor nodes at time t2 = ticd + Tdelay,
where ticd is the time at which the incident message is received
from the sender s (originator or previous relay node) and Tdelay
is the mean time delay to finalize consensus and is described
in detail in Section IV. As QFi decides the relay node, it is
governed by two factors [49]: 1) the probability of success that
a node’s transmission can reach to all of its neighbor nodes,
i.e., the quality of SINR at t2, Q(SINRt2
i ), and 2) the proba-
bility that its distance to the sender s is larger than a threshold
for ensuring successful transmission over longer distances, i.e.,
the distance factor at t2, DFt2
i . Hence, QFi = Q(SINRt2
i )·DFt2
i .
1) Q(SINRt2
i ): If node i becomes a relay node, the SINR
of a signal received at node j from node i at t2 is
SINRi,j =
(
di,j
)−α
Pnoise + �
nitf
k=1,k �=i
(
dj,k
)−α
(1)
where α is the path-loss exponent and its value depends on the
fading environment [16], di,j is the distance between node i
and node j, dj,k is the distance between node j and interfering
node k, nitf is the number of interference nodes, and Pnoise
is the noise power. For a successful message transmission, it
is required that the SINR exceeds a certain threshold β, i.e.,
SINRi,j ≥ β. The probability that SINRi,j ≥ β at t2, i.e.,
Pr(SINRt2
i,j ≥ β) is given as
Pr
(
SINRt2
i,j ≥ β
)
= Pr
⎛
⎜
⎝
(
dt2
i,j
)−α
Pnoise + �
nitf
k=1,k �=i
(
dt2
j,k
)−α
≥ β
⎞
⎟
⎠
= Pr
(
dt2
i,j ≤
(
β
(
Pnoise + �
nitf
k=1,k �=i
(
dt2
j,k
)−α
))− 1
α
)
(2)
where dt2
i,j = dt1
i,j + �d�t
i,j is the distance between node i and
node j at t2 and �d�t
i,j is the relative distance change between
node i and node j during �t = t2 − t1. dt1
i,j can be obtained
from the beacon message received at t1 and the expected value
of �d�t
i,j can be found using a probability density function
(PDF) of the standard Gaussian distribution. Referring to the
results in [16], [50], and [51], the velocity of a node i follows
a standard Gaussian distribution, i.e., vi ∼ N (0, σ 2
i t), where
σ 2
i = [((vt1
i − vt0
i )2)/(t1 − t0)] is the variance of vi, and vt0
i
and vt1
i denote vi at t0 and t1, respectively, which are shared
by node i via beacon messages. �d�t
i,j is defined as
�d�t
i,j =
(
vt1
i − vt1
j + �v�t
i − �v�t
j
)
�t (3)
where �v�t is the change in velocity during �t. By the
principle of a linear combination of the Gaussian variables,
�v�t
i ∼ N (0, σ 2
i �t), �v�t
i −�v�t
j ∼ N (0, (σ 2
i +σ 2
j )�t) and
hence, �d�t
i,j ∼ N (0, (σ 2
i + σ 2
j )�t3). If vt2
i is not known, (2)
can be calculated by assuming �d�t
i,j as a standard Gaussian
variable.
Each node i calculates (2) with respect to its neighbor
node j. As nitf is the number of neighbors of node j except
node i, nitf and dt2
j,k are unknown to node i. It can esti-
mate the expected values to find Pr(SINRt2
i,j ≥ β). Hence,
(β(Pnoise +�
nitf
k=1,k �=i(d
t2
j,k)
−α))−(1/α) in (2) can be rewritten as
(β(Pnoise + E(nitf )E(dt2
j,k)
−α))−(1/α), where E(.) denotes the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: PROOF-OF-QUALITY-FACTOR (POQF)-BASED BLOCKCHAIN AND EDGE COMPUTING 2473
expected value. The location of nodes on road is assumed
to follow an independent homogeneous spatial Poisson dis-
tribution with density parameter γ nodes / m2 on a 2-D road
segment with no separation of lanes in order to make it general
and allow dynamic movement of nodes [2]. Therefore, E(nitf )
can be estimated as the number of vehicles within the transmis-
sion range of node j. Assuming that the transmission range of
each node is a uniform circular area with radius R, E(nitf ) can
be calculated as the number of nodes inside the area excluding
node i, i.e., E(nitf ) = ∑πR2γ
k=1 ([((πR2γ )k)/(k!)]e−πR2γ ) − 1,
where γ is predefined and known to each node. It is noted
that an adaptive γ corresponding to real traffic conditions is
out of the scope of this article, but can be locally estimated
by calculating the number of received beacons [52] or with
the use of edge computing servers [53].
Lemma 1: E(dt2
j,k) = [(2)/(3R2)](R3−dmin
neigh
3
), where dmin
neigh
is the minimum allowed distance between two neighbor nodes.
Proof: See Appendix A.1.
Theorem 1:
Pr
(
SINRt2
i,j ≥ β
)
=
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
1
2
⎛
⎝erf
⎛
⎝ �d�t
i,j√
2
(
σ 2
i +σ 2
j
)
�t3
⎞
⎠− erf
⎛
⎝ −�d�t
i,j√
2
(
σ 2
i +σ 2
j
)
�t3
⎞
⎠
⎞
⎠
if dt1
i,j ≤ dx
1 − 1
2
⎛
⎝erf
⎛
⎝ �d�t
i,j√
2
(
σ 2
i +σ 2
j
)
�t3
⎞
⎠− erf
⎛
⎝ −�d�t
i,j√
2
(
σ 2
i +σ 2
j
)
�t3
⎞
⎠
⎞
⎠
otherwise
where dx = (β(Pnoise + E(nitf )E(dt2
j,k)
−α))−(1/α).
Proof: See Appendix A.2.
Q(SINRt2
i ) = ∑j=nneigh
j=1 Pr(SINRt2
i,j ≥ β), where nneigh is the
number of neighbors of node i whose position and velocities
are exchanged through beacon messages.
2) DFt2
i : It is the probability that one hop distance between
node i and the sender s is larger than a minimum threshold
dmin
hop and is defined as
DFt2
i = Pr
(
dt2
i,s > dmin
hop
)
= 1 − Pr
(
dt2
i,s ≤ dmin
hop
)
(4)
where Pr(dt2
i,s ≤ dmin
hop ) can be found by using the same
calculation as described in Appendix A.2.
Proposition 1: The range of QFi is 0 ≤ QFi ≤ nneigh.
Proof: Q(SINRt2
i ) is the sum of Pr(SINRt2
i,j), for all neigh-
bor nodes of i. Therefore, the possible range of Q(SINRt2
i ) is
0 ≤ Q(SINRt2
i ) ≤ nneigh. According to (4), the possible range
of DFt2
i is 0 ≤ DFt2
i ≤ 1. As QFi = Q(SINRt2
i ) · DFt2
i , it can
be concluded that 0 ≤ QFi ≤ nneigh.
C. Adversary Model
It is assumed that all edge computing servers in the VEC
network are honest. Let nmn be the number of mobile-edge
nodes taking part as mining nodes in a PoQF consensus out
of which nm nodes are malicious and nh nodes are honest when
nhop = 1. A malicious node in the proposed blockchain design
is defined as the node voting against the original validity of a
Fig. 3. Distribution of call compensation.
message, that is, if a message is true, the malicious node will
vote false and vice versa. Let Bi be the behavior of mining
node i. Bi = 1 when it is malicious and Bi = 0 when it is
honest and nm = ∑nmn
i=1 Bi. Bi follows a binomial distribution,
i.e., Bi ∼ B(nmn, pm), where pm ε [0, 1] is the probability that
Bi = 1. The reason for considering the binomial distribution
is because it has only two possible outcomes for a discrete
random number [54]. So, we can define one of the outcomes as
malicious and another as honest. μm = pmnmn and μh = (1 −
pm)nmn represent the mean number of malicious and honest
nodes, respectively.
D. Incentive Distribution Mechanism
As a compensation of causing an incident, the originator
pays a credit known as call compensation. Assuming that a
message is successfully validated, as shown in Fig. 3, call
compensation, at each direction, consists of CCmn, which is
equally distributed among honest mining nodes at nhop = 1,
and CCr, which is equally distributed among relay nodes at
nhop = {1, 2, . . . , nmax
hop }, in case a message is validated as
true. Otherwise, CCr is transferred to regulation authorities as
a penalty charge. If the message is successfully validated, the
utility of a mining node i, Umn
i , after taking part in a PoQF
consensus at nhop = 1 is given as
Umn
i =
⎧
⎪⎪⎨
⎪⎪⎩
CCmn
nh
, if Bi = 0 and message is true
CCmn
nh
− TC, if Bi = 0 and message is false
−TC, if Bi = 1 and message is true
0, if Bi = 1 and message is false
(5)
where TC > 0 is the transaction charge paid by mining node i
only when it votes that a message is false. It is later paid to the
relay node that generates the last keyblock related to a particu-
lar incident. The motivation of introducing TC is to discourage
malicious false votes and promote fast dissemination of true
message in case of emergency. The values of CCmn, CCr, and
TC are updated by edge computing servers. The utility of a
relay node Ur
i is given as
Ur
i =
⎧
⎪⎨
⎪⎩
CCr
nmax
hop
, if nhop ≤ nmax
hop and message is true
nmTC, if nhop > nmax
hop and message is true
nhTC, if nhop = 1 and message is false.
(6)
It is worth noting that a mining node i at nhop = 1 selected
as relay will earn a cumulative utility of Umn
i + Ur
i . A relay
node records transactions related to Umn
i in the keyblock at
nhop = 1. For nhop > 1, the corresponding relay node records
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
2474 IEEE INTERNET OF THINGS JOURNAL, VOL. 8, NO. 4, FEBRUARY 15, 2021
TABLE IV
INCENTIVES DISTRIBUTION AMONG NODES WHEN MESSAGE IS
SUCCESSFULLY VALIDATED
transaction related to Ur
i of the previous hop. The message
is disseminated until nhop ≤ nmax
hop and PoQF is repeated until
nhop ≤ nmax
hop + 1, because the last relay node at nmax
hop + 1
records Ur
i of the relay node at nmax
hop . As an incentive, it gains
the reward of nmTC and records this transaction itself. The
summary of incentive distribution among mining and relay
nodes is shown in Table IV.
IV. THEORETICAL PERFORMANCE ANALYSIS
A. Security
1) Failure in Validation: We define the term Failure in
Validation FV as the probability that the original validity of a
message is inverted after PoQF consensus at nhop = 1. Without
loss of generality, we assume the probability that an originator
generates a false message, i.e., the originator is malicious, is
pm and the probability of true message generation is 1 − pm.
Therefore, FV can be expressed as
FV = pmFVfalse + (1 − pm)FVtrue (7)
where FVfalse and FVtrue denote Failure in Validation of false
and true messages, respectively. FVfalse occurs when a mali-
cious mining node receives at least nth microblocks with
malicious votes to mark an originally false message as true.
Therefore, FVfalse can be given as
FVfalse = pmPr(nm ≥ nth). (8)
FVtrue occurs when an honest mining node does not receive
nth microblocks with honest votes to validate an originally true
message and can be expressed as
FVtrue = 1 − (1 − pm)Pr(nh ≥ nth). (9)
Bringing (8) and (9) into (7) gives
FV = 1 − pm + p2
mPr(nm ≥ nth)
− (1 − pm)2Pr(nh ≥ nth). (10)
Using tail inequalities for binomial distribution [55], we have
the following propositions.
Proposition 2: The upper bound of Pr(nx ≥ nth), where
x = m or h can be given as
Pr(nx ≥ nth)
UB =
{
e−[((nth−μx)
2
)
/(μx+nth)
]
, if nth ≥ μx
1, otherwise.
Proof: See Appendix B.1.
Fig. 4. Potential fork situation.
Fig. 5. Flowchart of actions to resolve fork.
Proposition 3: The lower bound of Pr(nx ≥ nth), where
x = m or h can be given as
Pr(nx ≥ nth)
LB =
{
1 − e−[((μx−nth)
2
)
/(2μx)
]
, if 0 ≤ nth ≤ μx
0, otherwise.
Proof: See Appendix B.2.
By applying Propositions 2 and 3 in (10), the upper and
lower bounds of FV , FVUB and FVLB can be derived as
FVUB = 1 − pm + p2
mPr(nm ≥ nth)
UB
− (1 − pm)2Pr(nh ≥ nth)
LB (11)
FVLB = 1 − pm + p2
mPr(nm ≥ nth)
LB
− (1 − pm)2Pr(nh ≥ nth)
UB. (12)
The expanded forms of (11) and (12) under a varying range of
nth can be seen in Appendix B.3. The role of nth in decreasing
FV is described in Appendix B.4. Edge computing servers
optimize the value of nth for minimizing FV .
2) Resolving Forks: In the proposed blockchain, a fork may
be created as shown in Fig. 4 when two keyblocks are gen-
erated by different relay nodes at the same hop. Forks occur
when two or more nodes fulfill both conditions of becoming
a relay node, which is defined in Section III. The flowchart
of actions by a node in the case of fork occurrence is shown
in Fig. 5. If the keyblock by relay node i marks the mes-
sage as false and the keyblock by relay node j marks the
message as true, then the message dissemination is contin-
ued and new blocks are linked with the keyblock generated
by relay node j. If both nodes show the same validity and
QFi = QFj, the timestamps of both keyblocks are checked
and the keyblock with the earlier timestamp is considered
valid. However, if QFi > QFj, then new blocks are added
in continuation with the keyblock generated by relay node i,
regardless of the timestamp of relay node j. The motivation
behind selecting the keyblock on the basis of QFi instead of
timestamp for blockchain extension is to discourage a possi-
ble cheating attempt by mining node j to become a relay node
despite having QFj < QFi. Cheating by manipulating QFi is
difficult, as it is based on the position and velocity of nodes
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: PROOF-OF-QUALITY-FACTOR (POQF)-BASED BLOCKCHAIN AND EDGE COMPUTING 2475
TABLE V
PAYOFF MATRIX (Ui, Uy), WHERE Ui = UTILITY OF MINING NODE i
WITH THE HIGHEST QFi AND Uy = UTILITY OF ANY OTHER MINING
NODE AT nhop = 1. (A) TRUE MESSAGE. (B) FALSE MESSAGE
(a)
(b)
that are shared through regular beacon message exchange and
a cheating attempt can be easily detected and reported to the
concerned authority. In the presence of forks, edge computing
servers store the longest chain only.
3) Game Theory Analysis of Incentive Distribution
Mechanism: We apply the game theory to analyze the impact
of the proposed incentive distribution mechanism on actions
of mining nodes at nhop = 1 and evaluate the security of
PoQF against nothing-at-stake and colluding attacks by mining
nodes.
a) Players: This game has nmn players out of which nh
are honest and nm are malicious. All players follow PoQF
consensus as mining nodes and are located at nhop = 1.
b) Action: Every player has two possible actions, honest
H or malicious M.
c) Utilities: The payoff matrix in Table V shows
(Ui, Uy), if FV does not occur after PoQF at nhop = 1.
We present the following analysis of our incentive distribu-
tion mechanism.
Lemma 2: Playing honest is the best response action of a
mining node, if CCmn ≥ nhTC.
Proof: As shown in Table V, if TC ≥ [(CCmn)/(nh)] and
the message is false, playing honest will result in Uy ≤ 0
which will be motivated to play maliciously. On the contrary,
if TC ≤ [(CCmn)/(nh)], it makes Uy ≥ 0 which will motivate
the mining nodes to play honestly. Therefore, to make honest
as the best response action of mining nodes, it is required that
TC ≤ [(CCmn)/(nh)] or CCmn ≥ nhTC.
Proposition 4: The action set (H, H) is both Pareto-optimal
and Nash equilibrium and prevents nothing-at-stake attack.
Proof: From the payoff matrix in Table V, we can see
that no player can get the maximum utility by deviating from
the action set (H, H), provided that Lemma 2 is fulfilled. In
both true and false message cases, all mining nodes can get the
highest payoff by playing honestly only. Therefore, the action
set (H, H) is both Pareto-optimal and Nash equilibrium of this
game. The utilities of players will be at risk by playing mali-
ciously, and therefore they will not be motivated to generate
a keyblock without message validation which happens in the
nothing-at-stake attack [45].
Theorem 2: A mining node cannot increase its expected
utility sum by colluding with its malicious neighbors if
nhTC ≤ CCmn ≤ [(nmCCr)/(nmax
hop (nh − nm))] and pm ≤ 0.5.
Proof: See Appendix C.
Thus, the incentive distribution mechanism is collusion
resistant if edge computing servers adjust the values of CCmn,
CCr, and nmax
hop such that Theorem 2 is fulfilled.
B. Validation Latency and Throughput
The MAC throughput in bit/second is defined in [56] as
λMAC = pt ·psuc ·[(L)/(Tavg)], where pt = [(2)/(W + 2)] is the
average transmission probability of a node, W is the contention
window size, psuc is the probability of success transmission,
L is the average length of a packet, and Tavg is the aver-
age length of a time slot in distributed coordination function
(DCF). psuc = ntr · pt · (1 − pt)
ntr−1, where ntr is the number
of nodes contending the channel for transmission. According
to IEEE 802.11 standard [56], Tavg is
Tavg = pidle · Tslot + psuc · Tsuc + pcol · Tcol (13)
where Tslot is the unit time slot in DCF scheme, pidle =
(1 − pt)
ntr and pcol = 1 − pidle − psuc are the probabilities
of a node encountering an idle slot and collided transmission,
respectively, Tsuc and Tcol are average time for success and
collided transmission, respectively, and are given as
Tcol = TRTS + TDIFS + Tslot, (14)
Tsuc = TRTS + TDIFS + TCTS + TACK
+ 3TRM SIFS + 4Tslot + L
C
(15)
where TDIFS and TRM SIFS are time intervals for DCF inter-
frame space (DIFS) and short interframe space (RM SIFS),
respectively, TRTS, TCTS, and TACK are prespecified time
intervals reserved for DCF related operations and C is the
average transmission rate among nodes. As λMAC is defined in
bit/second, the average time consumption TMB to successfully
transmit a vote in a microblock of length L bits is
TMB = L(bits)
λMAC(bit/second)
= Tavg
pt · psuc
. (16)
TMB varies with ntr only if W, L, Tslot, Tcol, and Tsuc are con-
sidered as the fixed values for all transmitting mining nodes.
As 1 ≤ ntr ≤ nmn, we consider two boundaries for TMB, i.e.,
T1
MB with ntr = 1 and Tnmn
MB with ntr = nmn. Therefore, Tmin
MB =
min(T1
MB, Tnmn
MB ) and Tmax
MB = max(T1
MB, Tnmn
MB ). Considering a
fixed transmission range and a homogeneous distribution for
all nodes, we can assume that nneigh is statistically the same
for every node. According to Proposition 1, nneigh − QFi can
be considered as the ranking of mining node i to announce
its microblock. In this way, node i with a large QFi can have
less validation time before announcing a microblock. An edge
computing server provides τi bounds to be followed by mining
nodes by considering TMB as the time required by a mining
node to successfully transmit a microblock. The lower bound
of τi is given as aτi = Tmin
MB (nneigh −QFi) and the upper bound
of τi is given as bτi = Tmax
MB (nneigh − QFi).
For nmn microblocks, the total time consumption (or valida-
tion latency) Tdelay can be in the range Tmin
MB · nmn ≤ Tdelay ≤
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
2476 IEEE INTERNET OF THINGS JOURNAL, VOL. 8, NO. 4, FEBRUARY 15, 2021
Tmax
MB · nmn. A mining node i with the highest QFi becomes
a relay node as soon as it receives at least nth microblocks
and does not need to wait for receiving all nmn microblocks.
Therefore, Tdelay is reduced for small nth and we can find lower
and upper bounds of Tdelay when a message is successfully
validated by an honest node at nhop = 1.
Proposition 5: TLB
delay = Tmin
MB · nth.
Proof: Tdelay is the minimum when a relay node receives
first nth consecutive microblocks with the same votes imme-
diately following the incident message.
Proposition 6: TUB
delay = Tmax
MB · (nth + pmnmn).
Proof: The maximum number of microblocks with mali-
cious votes is pmnmn. Tdelay will be the maximum if an honest
relay node receives all pmnmn microblocks before receiving nth
honest microblocks.
A keyblock is generated by a relay node after the message
validation. Therefore, the throughput in terms of number of
keyblocks generated per second can be estimated as
λKB = 1
Tdelay + Teyp
(17)
where Teyp is the time required to encrypt a keyblock.
C. Asymptotic Complexities
In this section, we compare the scalability of various con-
sensus algorithms by analyzing latency complexity, i.e., the
time consumption required to confirm a transaction, security
complexity, i.e., the minimum number of malicious nodes to
control consensus, and communication complexity, i.e., the
number of exchange messages required to validate a trans-
action. Without loss of generality, we derive the asymptotic
latency, security, and communication complexity of various
consensus algorithms in Table VI in terms of a number of
nodes participating in the mining competition, nmn and consen-
sus parameter κ , which is unique to each algorithm. κ refers to
the difficulty level of the hash puzzle in PoW, synchronization
level in PoS, waiting time in PoET, and number of minimum
votes required in voting-based algorithms (PBFT and PoQF).
Standard mathematical notations are used in Table VI, i.e.,
(.), O(.), and �(.) denote the order of at least, at most, and
exactly, respectively. Table VI shows that κ affects the latency
in PoW, PoS, and PoET. Despite the fast consensus of PoS,
a strong synchronization among edge computing resources is
needed for efficient running [58]. The latency of PoET depends
on the length of waiting time which follows a fixed probabil-
ity distribution. PoQF has to wait for a threshold number of
votes, which has an impact on latency but its scalability does
not rely on large computation power or storage capacity of
mobile-edge nodes. Similar to PoS, synchronization among
edge computing servers and mobile-edge nodes is needed in
PoQF, but the requirement is independent of nmn. PoET offers
the least security and can be controlled by only a small frac-
tion of malicious nodes [9]. According to Theorem 3, PoQF
is secure against the collusion attack when pm ≤ 0.5. It pro-
vides the same security as PoW which is better than PBFT
but worse than PoS [59]. In communication complexity, PoW,
PoS, and PoET are more efficient than PoQF, since they do
not require multiple message exchanges. Despite the voting
TABLE VI
COMPARISON OF ASYMPTOTIC COMPLEXITIES
TABLE VII
SIMULATION PARAMETERS
nature of PoQF, it has lower communication complexity than
PBFT. Moreover, in VANETs, nmn cannot be increased beyond
a certain threshold due to the limited number of nodes within
a transmission range R and dneigh
min , which makes PoQF scalable
and applicable in V2V communications.
V. SIMULATION RESULTS
In this section, we analyze the performance of the proposed
blockchain and PoQF consensus using OMNeT++ integrated
with the simulation of urban mobility (SUMO).1 The simula-
tion parameters listed in Table VII align with other VANET
applications [15], [56], [57], [61]. Since nmn are neighbor
nodes of a sender s, nmn ≤ 40 will be considered when
nodes are homogeneously distributed with a maximum of
200 nodes/km2 and it is a reasonable assumption of the max-
imum number of vehicles within a transmission range when
the safe distance between nodes are maintained on road [62].
Evaluation results are averaged over 100 simulation runs.
Fig. 6 shows FV with respect to nmn at different pm and nth.
Two different values of pm are chosen to show the results at
both low (pm < 0.5) and high (pm > 0.5) densities of mali-
cious mining nodes presented in the network. As shown in
Fig. 6 (a), FV with pm = 0.3 is lower than FV with pm = 0.7
when nth = 3, i.e., nth ≤ μm. It shows that a low nth is suitable
only for low pm when honest nodes are in majority. On the
contrary, as shown in Fig. 6 (b), FV with pm = 0.3 is higher
than FV with pm = 0.7 when nth = nmn, i.e., nth > μm. This
is because when nth = nmn, both malicious and honest mining
1Source code is available at https://github.com/ferheenayaz/PoQF.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: PROOF-OF-QUALITY-FACTOR (POQF)-BASED BLOCKCHAIN AND EDGE COMPUTING 2477
Fig. 6. FV with respect to nmn. (a) nth = 3. (b) nth = nmn.
Fig. 7. Setting up CCr , TC, and nmax
hop for collusion resistant incentive distribution mechanism. (a) CCr = 100, TC = 0.5, and nmax
hop = 10. (b) CCr = 200,
TC = 0.5, and nmax
hop = 10. (c) CCr = 200, TC = 0.1, and nmax
hop = 6.
Fig. 8. Tdelay with respect to nmn. (a) pm = 0.2. (b) pm = 0.4. (c) pm = 0.6. (d) pm = 0.8.
nodes are unable to finalize consensus within the maximum
allowable latency of 1 s and the message is marked as false.
With pm = 0.3, the probability of false message occurrence is
lower than that of true message occurrence and it is hard to
collect nth = nmn honest votes to validate a true message. In
this case, FVUB ≈ 1 − pm depicts the worst-case scenario of
the maximum probability of true message generation which
will be marked as false. With pm = 0.7, the probability of
true message occurrence is lower than that of false message
occurrence. FV does not occur when both honest and mali-
cious nodes are unable to collect votes for a false message. It
only occurs when a true message is not validated. As shown
in Fig. 6 (b), FVLB ≈ 1 − pm with pm = 0.7 depicts the
percentage of true messages that are not validated by PoQF.
The dependence of nth on pm is further discussed in Appendix
B.4. If pm in the network is known, the VEC technique can
achieve a low FV even with high values of pm by adjusting
nth accordingly.
Fig. 7 shows the impact of parameters: CCr, TC, and nmax
hop ,
on the collusion resistance feature of incentive distribution
mechanism. According to Theorem 3, the incentive distribu-
tion mechanism is collusion resistant if nhTC ≤ CCmn ≤
[(nmCCr)/(nmax
hop (nh − nm))] and pm ≤ 0.5. As Bi follows the
binomial distribution, it can be assumed that nm ≈ μm and
Fig. 9. λKB with respect to pm.
nh ≈ μh. Based on this assumption, Fig. 7(a) and (b) shows
that the incentive distribution mechanism cannot be collusion
resistant for every nmn and pm under the fixed CCr, TC, and
nmax
hop . However, in Fig. 7(c), when CCr = 200, TC = 0.1, and
nmax
hop = 6, nhTC ≤ [(nmCCr)/(nmax
hop (nh − nm))] is satisfied for
every nmnε(10, 40) and pmε(0, 0.5). Therefore, for a collu-
sion resistant incentive distribution mechanism, it is required
that the edge computing servers should adjust the combina-
tion of these parameters with varying nmn and pm, such that
it is possible to choose CCmn within the boundaries defined
by Theorem 3. Apart from the security reason, a low nmax
hop is
also favorable for successful message delivery, as the failure of
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
2478 IEEE INTERNET OF THINGS JOURNAL, VOL. 8, NO. 4, FEBRUARY 15, 2021
Fig. 10. Comparison of PoQF with PoS and PoET with nth = μm + 1. (a) FV . (b) Number of forks. (c) Tdelay.
multihop connectivity in VANETs increases with the number
of hops [63].
Fig. 8 shows Tdelay of successful message validation with
respect to nmn at different values of pm with nth = μm + 1. It
can be seen that Tdelay increases with pm because of more fre-
quent generation of microblocks by malicious nodes. Fig. 8(c)
and (d) shows that TUB
delay exceeds the maximum allowable
latency requirement of 1 s [47] when pm ≥ 0.6 and nmn ≥ 30.
At pm = 0.8 and nmn > 35, the mining nodes are unable
to finalize consensus within 1 s. Fig. 9 shows λKB of PoQF
consensus at various nmn and pm. The highest λKB achieved
is 11 keyblock/s at pm = 0.1 and nmn = 15 and the lowest
is 0.9 keyblock/s at pm ≥ 0.8 and nmn = 35, which means
that at higher nmn and pm, PoQF with λKB < 1 keyblock/s
may not be able to generate block within the limit of maxi-
mum allowable latency of 1 s. This shows that our proposed
blockchain exhibits better performance specifically at lower
values of pm and nmn. λKB can be improved by offloading
computations required for encrypting a keyblock to a nearby
edge computing server which have high computation power,
thereby reducing Teyp, as suggested in [64].
Fig. 10 compares the performance of PoQF with PoET and
PoS. In Fig. 10(a), FV of PoQF is compared with PoET and
PoS at different values of pm and nmn, while nth is fixed at
μm + 1, as it results in low FV for all values of pm. We
implement PoET such that its waiting time is uncontrolled by
VEC. Each node generates a random number between 0 and
1 s to determine its waiting time for collecting microblocks.
It shows that FV of PoQF and PoET are closing to each other
at low pm. For high values of pm, an honest node i with the
highest QFi is unable to collect sufficient microblocks from
honest mining nodes within a random waiting time of PoET
and therefore its FV rises with pm at a higher rate than PoQF.
In the reputation-based PoS, a node is considered honest if its
reputation exceeds a certain threshold. We randomly assign a
reputation value to nodes on a scale of 0–100, thus the prob-
ability of reputation falling below a threshold of 50 is defined
as pm. We implement PoS such that a malicious relay node
only forwards the message from a malicious sender and an
honest relay node only forwards the message from an hon-
est sender. On average, PoQF reduces FV by 11% and 15%,
as compared to PoS and PoET, respectively. Fig. 10(b) com-
pares the number of forks created by PoQF, PoS, and PoET
consensus. Although solutions to resolve forks are discussed in
Section IV, a blockchain consensus should be able to avoid the
creation of forks in order to control discrepancies. In PoQF,
Fig. 11. Values of aτi and bτi .
node i with the highest QFi is most likely to announce its
microblock prior to other mining nodes. In this way, node j
with QFj < QFi cannot become a relay node if the votes of
both nodes are the same. This is how the creation of forks is
reduced in the proposed consensus. We implement PoS con-
sensus by selecting a relay node on the basis of the highest
reputation which is randomly generated from 0 to 100 in the
simulation. A fork appears when two nodes with the same rep-
utation simultaneously become a relay node. In PoET, the time
to announce microblock is not controlled by VEC. Therefore,
node j with lower QFj becomes a relay node before receiving a
microblock from node i even though QFi > QFj. In that case,
a fork appears if both node i and node j generate keyblocks.
It is noted that the number of forks in PoS is equal or lower
than PoQF when nmn ≤ 20. Due to the unreliable nature of
vehicle connectivity, there remains a possibility of fork occur-
rence when an announced microblock by node i is not received
by node j. It usually happens when mining nodes are in dis-
tance and beyond the transmission range of each other. This
is why a low node density, ultimately leading to low nmn, may
result in a higher or equal number of forks created by PoQF
as compared to PoS. Fig. 10(c) compares Tdelay of success-
ful message validation consumed by PoQF, PoET, and PoS.
By using PoET, the mining node i is allowed to announce its
microblock at a random time irrespective of its QFi. On an
average, Tdelay of PoET is 68 ms higher than PoQF. However,
the difference is larger at the lower pm. Since τi is indepen-
dent of QFi in PoET, node j with lower QFj may announce
its microblock earlier than node i with QFi > QFj and node
i might have to wait longer. This waiting time is reduced in
PoQF by the utilization of VEC. However, with large pm, an
honest mining node i with the highest QFi has to wait longer in
PoQF for receiving nth honest microblocks. It is because the
frequency of malicious microblocks generation is increased
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: PROOF-OF-QUALITY-FACTOR (POQF)-BASED BLOCKCHAIN AND EDGE COMPUTING 2479
Fig. 12. Average success rate with respect to speed.
with a large pm. Hence, the Tdelay difference between PoQF
and PoET becomes smaller. Tdelay of PoS is independent of
pm and increases with nmn. It is the smallest because it only
consumes time in relay node selection, while the voting time
is eliminated by the reputation-based message validation.
Fig. 11 displays aτi and bτi which are governed by edge
computing servers to regulate τi, generated by a mining node
i. It shows that aτi and bτi reduce with an increasing QFi
and therefore τi leads to less waiting time for potential relay
nodes. Due to the homogeneous distribution of nodes, nneigh is
the same for every node in a network. Therefore, deliberately
reducing τi by node i is bounded by the limit of aτi , which
is known to every node in a network. Such an attempt can be
easily detected and reported to the concerned authority.
Fig. 12 shows the success rate of transmitting a true mes-
sage under different maximum speeds of a mining node. For
nhop > 1, PoQF consensus is only used for relay node selec-
tion since the message is already validated at nhop = 1, and
therefore, the transmission success rate is independent of pm.
It shows that the success rate is falling with increasing speed,
specifically for small nmn. This is because a small nmn depicts
a low traffic density, so the nodes are likely to attain their
maximum speeds and may lose connectivity before finalizing
a consensus to select a relay node. In order to speed up con-
sensus, a possible solution is that the edge computing servers
reduce nth when nhop > 1. At nhop > 1, the consensus only
depends on the highest QFi and does not require message val-
idation. Since the mining node i sends its microblock earlier
than the mining node j with QFj < QFi, it is not necessary
for the mining node i to wait until QFj is received. It is noted
that in case of an incident or traffic jam, high speed is not
likely to be attained in the affected area, and therefore, it is
not recommended to reduce nth at nhop = 1, as it may result
in large FV .
VI. CONCLUSION
In this article, we have proposed a blockchain based on the
PoQF consensus algorithm for message dissemination in VEC
networks. The theoretical performance of the proposed con-
sensus is evaluated by deriving bounds on failure and latency
in message validation, the throughput of block generation and
asymptotic latency, security, and communication complexity.
Moreover, an incentive distribution mechanism to promote
positive cooperation and discourage the malicious behavior of
nodes has been presented and analyzed using the game theory.
From the simulation analysis, the proposed blockchain
shows 11% reduction in FV by PoQF as compared to
reputation-based PoS. As a tradeoff, it results in increased val-
idation latency. Specifically, due to VEC, PoQF is 15% more
secure and 68 ms faster in validating a message as compared
to PoET. Furthermore, PoQF results in less number of forks
than PoET and PoS. Similar to PoW, PoQF is vulnerable to
malicious nodes if they compose more than 50% of the mining
group but its performance is not dependent on the presence of
at least 2f + 1 mining nodes as in PBFT.
In future work, we aim to reduce latency by proposing
an alternative to voting solution for message validation. An
adaptive and intelligent blockchain can be designed to achieve
higher throughput with varying numbers of mining nodes.
APPENDIX A
1) Appendix A.1: The PDF of interference nodes at location
(X, Y) within the area πR2 is defined in [14] as [(1)/(πR2)].
Therefore, E(dt2
j,k) can be calculated as
E
(
dt2
j,k
)
=
∫ (
X2 + Y2
)
f(X,Y)dXdY. (18)
Bringing X = z cos φ and Y = z sin φ into (18) leads to
E
(
dt2
j,k
)
=
∫ R
dmin
neigh
∫ 2π
0
z2
πR2
dφdz = 2
3R2
(
R3 − dmin
neigh
3
)
. (19)
2) Appendix A.2: Since dt2
i,j = dt1
i,j + �d�t
i,j , we find the
probability of �d�t
i,j ≤ dx−dt1
i,j. If dt1
i,j ≤ dx, the actual required
communication distance, �d�t
i,j can be calculated as in [50]
�d�t
i,j =
{
dx + dt1
i,j, case 1
dx − dt1
i,j, case 2
(20)
where case 1 is either of the following:
1) node i and node j are moving toward each other;
2) node i is in front of node j, both moving in same
direction, and vi < vj;
3) node j is in front of node i, both moving in same
direction, and vi > vj
and case 2 is either of the following:
1) node i and node j are moving away from each other;
2) node i is in front of node j, both moving in same
direction, and vi > vj;
3) node j is in front of node i, both moving in same
direction, and vi < vj.
Therefore, PDF of �d�t
i,j can be defined as
f
(
�d�t
i,j
)
= 1
√
2π
(
σ 2
i + σ 2
j
)
�t3
e
−
(
�d�t
i,j
)2
2
(
σ2
i +σ2
j
)
�t3
. (21)
Considering both acceleration and deceleration, the cumulative
density function (CDF) can be calculated as
F
(
�d�t
i,j
)
=
∫ �d�t
i,j
−�d�t
i,j
f
(
�d�t
i,j
)
d
(
�d�t
i,j
)
. (22)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
2480 IEEE INTERNET OF THINGS JOURNAL, VOL. 8, NO. 4, FEBRUARY 15, 2021
As F(�d�t
i,j ) = Pr(dt2
i,j ≤ dx) = Pr(SINRt2
i,j ≥ β)
Pr
(
SINRt2
i,j ≥ β
)
= 1
2
⎡
⎢
⎢
⎣erf
⎛
⎜
⎜
⎝
�d�t
i,j√
2
(
σ 2
i + σ 2
j
)
�t3
⎞
⎟
⎟
⎠
− erf
⎛
⎜⎜
⎝
−�d�t
i,j√
2
(
σ 2
i + σ 2
j
)
�t3
⎞
⎟⎟
⎠
⎤
⎥⎥
⎦. (23)
Otherwise, if dt1
i,j > dx, the actual required communication
distance �d�t
i,j can be calculated as
�d�t
i,j =
{
dt1
i,j − dx, case 1
dt1
i,j + dx, case 2
(24)
where case 1 and case 2 are the same as defined in (20).
As dt1
i,j > dx, for dt2
i,j ≤ dx, we need �d�t
i,j < 0. Therefore,
we calculate 1 − f (�d�t
i,j ) and ultimately Pr(dt2
i,j ≤ dx) =
Pr(SINRt2
i,j ≥ β) is expressed as
Pr
(
SINRt2
i,j ≥ β
)
= 1 − 1
2
⎡
⎢⎢
⎣erf
⎛
⎜⎜
⎝
�d�t
i,j√
2
(
σ 2
i + σ 2
j
)
�t3
⎞
⎟⎟
⎠
− erf
⎛
⎜⎜
⎝
−�d�t
i,j√
2
(
σ 2
i + σ 2
j
)
�t3
⎞
⎟⎟
⎠
⎤
⎥⎥
⎦.
(25)
APPENDIX B
1) Appendix B.1: According to the multiplicative form of
the Chernoff bound [55], Pr(X ≥ (1 + δ)μ) ≤ e−[(δ2μ)/(2+δ)],
where X is a sum of independent binomial variables with mean
μ and δ > 0. Bringing μ = μx and (1 + δ)μ = nth gives
Pr(nx ≥ nth) ≤
{
e
− (nth−μx)2
μx+nth , if nth ≥ μx
1, otherwise.
(26)
2) Appendix B.2: For 0 ≤ δ ≤ 1, the Chernoff bound [55]
states that Pr(X ≤ (1 − δ)μ) ≤ e−[(δ2μ)/(2)], which can be
rewritten as Pr(X ≥ (1 − δ)μ) ≥ 1 − e−[(δ2μ)/(2)]. Therefore
Pr(nx ≥ nth) ≥
{
1 − e− (μx−nth)
2
2μx , if 0 ≤ nth ≤ μx
0, otherwise.
(27)
3) Appendix B.3: Using (10), (26), and (27), we get
FV ≤
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
1 − pm + p2
m − (1 − pm)2
(
1 − e
− (μh−nth)
2
2μh
)
,
if nth < min(μm, μh)
1 − pm + p2
me
− (nth−μm)2
μm+nth − (1 − pm)2
(
1 − e
− (μh−nth)
2
2μh
)
if μm ≤ nth ≤ μh
1 − pm + p2
m, if μh < nth < μm
1 − pm + p2
me
− (nth−μm)2
μm+nth , if nth > max(μm, μh)
(28)
and
FV ≥
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
1 − pm + p2
m
(
1 − e− (μm−nth)
2
2μm
)
− (1 − pm)2
if nth < min(μm, μh)
pm − p2
m, if μm ≤ nth ≤ μh
1 − pm + p2
m
(
1 − e− (μm−nth)
2
2μm
)
− (1 − pm)2e
− (nth−μh)
2
μh+nth
ifμh < nth < μm
1 − pm − (1 − pm)2e
− (nth−μh)
2
μh+nth , if nth > max(μm, μh).
(29)
4) Appendix B.4: As we know that 0 < e−x ≤ 1 for any real
valued x and pmε[0, 1], it can be deduced from (29) that FVLB
is minimum when μm ≤ nth ≤ μh, which is only possible for
pm ≤ 0.5. For pm > 0.5, the minimum FVLB can be obtained
when nth > μm. To find the minimum FVUB, we compare its
value at two conditions of (28), i.e., nth > max(μm, μh) and
nth < min(μm, μh)
1 − pm + p2
me
− (nth−μm)2
μm+nth < 1 − pm
+ p2
m − (1 − pm)2
(
1 − e
− (μh−nth−1)2
2μh
)
. (30)
Assuming that p2
me−[((nth−μm)2)/(μm+nth)] ≈ (1 − pm)2(1 −
e−[((μh−nth−1)2)/(2μh)]) ≈ 0, (30) leads to pm > (1/2). It proves
that nth > μm results in the minimum FVUB for pm > (1/2).
APPENDIX C
Let ncp colluding players form a group to mark a true mes-
sage as false or a false message as true with a probability pcp.
The expected utility sum of colluding players as mining nodes,
E(Umn
cp ), if they mark a true message as false is
E
(
Umn
cp
)
= pcp
(
CCmn
nm
ncp − ncpTC
)
+ (
1 − pcp
)(CCmn
nh
ncp
)
. (31)
The probability that one of the colluding players is selected as
a relay node if the colluding attack is successful is ncp/nm and
that if colluding players play honestly is ncp/nh. Therefore, the
total expected utility sum E(Ucp) is given as
E
(
Ucp
) = pcp
(
CCmn
nm
ncp − ncpTC +
(
ncp
nm
)
nmTC
)
+ (
1 − pcp
)
(
CCmn
nh
ncp +
(
ncp
nh
)
CCr
nmax
hop
)
. (32)
To prevent collusion, we want E(Ucp) ≤ E(U′
cp), where U′
cp
represents the utility of colluding players playing honestly, i.e.,
pcp
(
CCmn
nm
ncp
)
+ (
1 − pcp
)
(
CCmn
nh
ncp +
(
ncp
nh
)
CCr
nmax
hop
)
≤ CCmn
nh
ncp +
(
ncp
nh
)
CCr
nmax
hop
(33)
which leads toward the condition CCmn ≤
[(nmCCr)/(nmax
hop (nh − nm))]. If CCmn ≥ 0, this condition
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: PROOF-OF-QUALITY-FACTOR (POQF)-BASED BLOCKCHAIN AND EDGE COMPUTING 2481
can only be fulfilled when nh ≥ nm, i.e., when pm ≤ 0.5.
Similarly, if colluding players attempt to mark a false message
as true, then E(Ucp) is given as
E
(
Ucp
) = pcp
(
CCmn
nm
ncp +
(
ncp
nm
)
CCr
nmax
hop
)
+ (
1 − pcp
)(CCmn
nh
ncp − ncpTC +
(
ncp
nh
)
nhTC
)
.
(34)
To prevent collusion, we require E(Ucp) ≤ E(U′
cp), which leads
toward the condition CCmn ≥ [(nhCCr)/(nmax
hop (nm − nh))].
Combining the condition of Lemma 2, we want, CCmn ≥
max(nhTC, [(nhCCr)/(nmax
hop (nm −nh))]). For pm ≤ 0.5, CCr >
0 and nmax
hop > 0, we always get [(nhCCr)/(nmax
hop (nm −nh))] ≤ 0
and nhTC≥[(nhCCr)/(nmax
hop (nm−nh))]. Therefore, we can prove
that the incentive distribution mechanism is collusion resistant
if nhTC ≤ CCmn ≤ [(nmCCr)/(nmax
hop (nh − nm))] and p ≤ 0.5.
ACKNOWLEDGMENT
The authors would like to thank Saqib Ayaz, Technology
Department, Workflow Management and Optimization Inc.,
Somerset, NJ, U.S. for his excellent comments and
suggestions.
REFERENCES
[1] A. U. Rahman, A. W. Malik, V. Sati, A. Chopra, and S. D. Ravana,
“Context-aware opportunistic computing in vehicle-to-vehicle
networks,” Veh. Commun., vol. 24, Aug. 2020, Art. no. 100236.
[2] S. Kim, “Impacts of mobility on performance of blockchain in VANET,”
IEEE Access, vol. 7, pp. 68646–68655, 2019.
[3] M. Saravanan and P. Ganeshkumar, “Routing using reinforcement learn-
ing in vehicular ad hoc networks,” Comput. Intell., vol. 36, pp. 682–697,
May 2020.
[4] W. Wang et al., “A survey on consensus mechanisms and mining
strategy management in blockchain networks,” IEEE Access, vol. 7,
pp. 22328–22370, 2019.
[5] S. Bano et al., “SoK: Consensus in the age of blockchains,” in Proc. 1st
ACM Conf. Adv. Financ. Technol., Zurich, Switzerland, Oct. 2019,
pp. 183–198.
[6] X. Wang, Y. Han, C. Wang, Q. Zhao, X. Chen, and M. Chen, “In-edge
AI: Intelligentizing mobile edge computing, caching and communica-
tion by federated learning,” IEEE Netw., vol. 33, no. 5, pp. 156–165,
Sep./Oct. 2019.
[7] J. Kang, Z. Xiong, D. Niyato, D. Ye, D. I. Kim, and J. Zhao, “Toward
secure blockchain-enabled Internet of Vehicles: Optimizing consensus
management using reputation and contract theory,” IEEE Trans. Veh.
Technol., vol. 68, no. 3, pp. 2906–2920, Mar. 2019.
[8] Z. Yang, K. Yang, L. Lei, K. Zheng, and V. C. M. Leung, “Blockchain-
based decentralized trust management in vehicular networks,” IEEE
Internet Things J., vol. 6, no. 2, pp. 1495–1505, Apr. 2019.
[9] L. Chen, L. Xu, N. Shah, Z. Gao, Y. Lu, and W. Shi, “On security analy-
sis of proof-of-elapsed-time (PoET),” Stabilization, Safety, and Security
of Distributed Systems (Lecture Notes in Computer Science). Cham,
Switzerland: Springer, pp. 282–297, Oct. 2017.
[10] B. Choi, J.-Y. Sohn, D.-J. Han, and J. Moon, “Scalable network-coded
PBFT consensus algorithm,” in Proc. IEEE Int. Symp. Inf. Theory, Paris,
France, Jul. 2019, pp. 857–861.
[11] M. Cebe, E. Erdin, K. Akkaya, H. Aksu, and S. Uluagac,
“Block4Forensic: An integrated lightweight blockchain framework for
forensics applications of connected vehicles,” IEEE Commun. Mag.,
vol. 56, no. 10, pp. 50–57, Oct. 2018.
[12] L. Zhang et al., “Blockchain based secure data sharing system for
Internet of Vehicles: A position paper,” Veh. Commun., vol. 16,
pp. 85–93, Apr. 2019.
[13] W. Gao, M. Wang, L. Zhu, and X. Zhang, “Threshold-based secure and
privacy-preserving message verification in VANETs,” in Proc. 13th IEEE
Int. Conf. Trust Security Privacy Comput. Commun., Beijing, China,
Sep. 2014, pp. 795–802.
[14] Y. Sun, L. Zhang, G. Feng, B. Yang, B. Cao, and M. A. Imran,
“Blockchain-enabled wireless Internet of Things: Performance analysis
and optimal communication node deployment,” IEEE Internet Things J.,
vol. 6, no. 3, pp. 5791–5802, Jun. 2019.
[15] M. Ni, M. Hu, Z. Wang, and Z. Zhong, “Packet reception probability of
VANETs in urban intersecton scenario,” in Proc. Int. Conf. Connected
Veh. Expo, Shenzhen, China, Oct. 2015, pp. 124–125.
[16] N. Li, J.-F. Martinez-Ortega, V. H. Diaz, and J. A. S. Fernandez,
“Probability prediction-based reliable and efficient opportunistic rout-
ing algorithm for VANETs,” IEEE/ACM Trans. Netw., vol. 26, no. 4,
pp. 1933–1947, Aug. 2018.
[17] L. Liu, C. Chen, Q. Pei, S. Maharjan, and Y. Zhang, “Vehicular edge
computing and networking: A survey,” Mobile Netw. Appl., pp. 1–24, Jul.
2020. [Online]. Available: https://doi.org/10.1007/s11036-020-01624-1
[18] H. Ji, O. Alfarraj, and A. Tolba, “Artificial intelligence-empowered edge
of vehicles: Architecture, enabling technologies, and applications,” IEEE
Access, vol. 8, pp. 61020–61034, 2020.
[19] M. Li, J. Gao, L. Zhao, and X. Shen, “Deep reinforcement
learning for collaborative edge computing in vehicular networks,”
IEEE Trans. Cogn. Commun. Netw., early access, Jun. 17, 2020,
doi: 10.1109/TCCN.2020.3003036.
[20] L. Nkenyereye, L. Nkenyereye, S. M. R. Islam, C. A. Kerrache,
M. Abdullah-Al-Wadud, and A. Alamri, “Software defined network-
based multi-access edge framework for vehicular networks,” IEEE
Access, vol. 8, pp. 4220–4234, 2020.
[21] G. S. Aujla, A. Singh, M. Singh, S. Sharma, N. Kumar, and
K.-K. R. Choo, “BloCkEd: Blockchain-based secure data processing
framework in edge envisioned V2X environment,” IEEE Trans. Veh.
Technol., vol. 69, no. 6, pp. 5850–5863, Jun. 2020.
[22] S. Bano, M. Al-Bassam, and G. Danezis, “The road to scalable
blockchain designs,” USENIX Login Mag., vol. 42, no. 4, pp. 31–36,
Dec. 2017.
[23] E. K. Kogias, P. Jovanovic, N. Gailly, I. Khoffi, L. Gasser, and B. Ford,
“Enhancing bitcoin security and performance with strong consistency via
collective signing,” in Proc. 25th USENIX Security Symp., Vancouver,
BC, Canada, Aug. 2016, pp. 279–296.
[24] I. Eyal, A. E. Gencer, E. G. Sirer, and R. V. Renesse, “Bitcoin-NG: A
scalable blockchain protocol,” in Proc. 13th USENIX Symp. Netw. Syst.
Design Implement., Santa Clara, CA, USA, Feb. 2016, pp. 45–59.
[25] L. Luu, V. Narayanan, C. Zheng, K. Baweja, S. Gilbert, and P. Saxena,
“A secure sharding protocol for open blockchains,” in Proc. ACM Spec.
Interest Group Security Audit Control Conf. Comput. Commun. Security,
Vienna, Austria, Oct. 2016, pp. 17–30.
[26] Y. He, H. Li, X. Cheng, Y. Liu, C. Yang, and L. Sun, “A blockchain
based truthful incentive mechanism for distributed P2P applications,”
IEEE Access, vol. 6, pp. 27324–27335, 2018.
[27] Q. Zhang, Y. Leng, and L. Fan, “Blockchain-based P2P file
sharing incentive,” IACR Cryptol. ePrint Archive, Lyon, France,
Rep. 2018/1152, 2018.
[28] H. Ichikawa and A. Kobayashi, “Messaging protocol for relaying mes-
sages between participants with autonomous distributed blockchain
propagation,” in Proc. 5th Int. Symp. Comput. Netw., Aomori, Japan,
Nov. 2017, pp. 537–541.
[29] L. Li et al., “CreditCoin: A privacy-preserving blockchain-based incen-
tive announcement network for communications of smart vehicles,”
IEEE Trans. Intell. Transp. Syst., vol. 19, no. 7, pp. 2204–2220,
Jul. 2018.
[30] S. Zou, J. Xi, S. Wang, Y. Lu, and G. Xu, “Reportcoin: A novel
blockchain-based incentive anonymous reporting system,” IEEE Access,
vol. 7, pp. 65544–65559, 2019.
[31] X. Zhang and X. Chen, “Data security sharing and storage based on
a consortium blockchain in a vehicular ad-hoc network,” IEEE Access,
vol. 7, pp. 58241–58254, 2019.
[32] T. Jiang, H. Fang, and H. Wang, “Blockchain-based Internet of
Vehicles: Distributed network architecture and performance analysis,”
IEEE Internet Things J., vol. 6, no. 3, pp. 4640–4649, Jun. 2019.
[33] M. Liu, Y. Teng, F. R. Yu, V. C. M. Leung, and M. Song, “Deep
reinforcement learning based performance optimization in blockchain-
enabled Internet of Vehicle,” in Proc. IEEE Int. Conf. Commun.,
Shanghai, China, May 2019, pp. 1–6.
[34] P. Mcmahon, T. Zhang, and R. Dwight, “Requirements for big
data adoption for railway asset management,” IEEE Access, vol. 8,
pp. 15543–15564, 2020.
[35] W. Hu, Y. Hu, W. Yao, and H. Li, “A blockchain-based byzantine consen-
sus algorithm for information authentication of the Internet of Vehicles,”
IEEE Access, vol. 7, pp. 139703–139711, 2019.
[36] C. T. Nguyen, D. T. Hoang, D. N. Nguyen, D. Niyato, H. T. Nguyen,
and E. Dutkiewicz, “Proof-of-stake consensus mechanisms for future
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TCCN.2020.3003036
2482 IEEE INTERNET OF THINGS JOURNAL, VOL. 8, NO. 4, FEBRUARY 15, 2021
blockchain networks: Fundamentals, applications and opportunities,”
IEEE Access, vol. 7, pp. 85727–85745, 2019.
[37] R. Shrestha, R. Bajracharya, A. P. Shrestha, and S. Y. Nam, “A new type
of blockchain for secure message exchange in VANET,” Dig. Commun.
Netw., vol. 6, no. 2, pp. 177–186, May 2020.
[38] A. S. Khan, K. Balan, Y. Javed, S. Tarmizi, and J. Abdullah, “Secure
trust-based blockchain architecture to prevent attacks in VANET,”
Sensors, vol. 19, no. 22, pp. 4954–4981, Nov. 2019.
[39] M. Wagner and B. Mcmillin, “Cyber-physical transactions: A method
for securing VANETs with blockchains,” in Proc. 23rd IEEE Pac. Rim
Int. Symp. Depend. Comput., Taipei, Taiwan, Dec. 2018, pp. 64–73.
[40] Z. Su, Y. Wang, Q. Xu, and N. Zhang, “LVBS: Lightweight
vehicular blockchain for secure data sharing in disaster rescue,”
IEEE Trans. Depend. Secure Comput., early access, Mar. 13, 2020,
doi: 10.1109/TDSC.2020.2980255.
[41] F. Ayaz, Z. Sheng, D. Tian, G. Y. Liang, and V. Leung, “A voting
blockchain based message dissemination in vehicular ad-hoc networks
(VANETs),” in Proc. IEEE Int. Conf. Commun., Dublin, Ireland,
Jun. 2020, pp. 1–6.
[42] F. Ayaz, Z. Sheng, D. Tian, and V. Leung, “Blockchain-enabled secu-
rity and privacy for Internet-of-Vehicles,” in Internet of Vehicles and
its Applications in Autonomous Driving. Cham, Switzerland: Springer,
2020.
[43] X. Wang, Y. Han, V. C. M. Leung, D. Niyato, X. Yan, and X. Chen,
“Convergence of edge computing and deep learning: A comprehensive
survey,” IEEE Commun. Surveys Tuts., vol. 22, no. 2, pp. 869–904, 2nd
Quart., 2020.
[44] X. Wang, C. Wang, X. Li, V. C. M. Leung, and T. Taleb, “Federated
deep reinforcement learning for Internet of Things with decentralized
cooperative edge caching,” IEEE Internet Things J., early access, Apr. 9,
2020, doi: 10.1109/JIOT.2020.2986803.
[45] W. Li, S. Andreina, J.-M. Bohli, and G. Karame, “Securing proof-
of-stake blockchain protocols,” in Data Privacy Management,
Cryptocurrencies and Blockchain Technology (Lecture Notes
in Computer Science). Cham, Switzerland: Springer, Sep. 2017,
pp. 297–315.
[46] F. Dressler, P. Handle, and C. Sommer, “Towards a vehicular cloud—
Using parked vehicles as a temporary network and storage infrastruc-
ture,” in Proc. ACM Int. Workshop Wireless Mobile Technol. Smart
Cities, Philadelphia, PA, USA, Aug. 2014, pp. 11–18.
[47] Y. Qian and N. Moayeri, “Design of secure and application-oriented
VANETs,” in Proc. IEEE Veh. Technol. Conf., Singapore, May 2008,
pp. 2794–2799.
[48] V. Ortega, F. Bouchmal, and J. F. Monserrat, “Trusted 5G vehicu-
lar networks: Blockchains and content-centric networking,” IEEE Veh.
Technol. Mag., vol. 13, no. 2, pp. 121–127, Jun. 2018.
[49] M. Haenggi, “Twelve reasons not to route over many short hops,” in
Proc. 60th IEEE Veh. Technol. Conf., Los Angeles, CA, USA, Sep. 2004,
pp. 3130–3134.
[50] Y. Yokoya, Y. Asano, and N. Uchida, “Qualitative change of traffic flow
induced by driver response,” in Proc. IEEE Int. Conf. Syst. Man Cybern.,
Singapore, Oct. 2008, pp. 2315–2320.
[51] X. M. Zhang, X. Cao, L. Yan, and D. K. Sung, “A street-centric oppor-
tunistic routing protocol based on link correlation for urban VANETs,”
IEEE Trans. Mobile Comput., vol. 15, no. 7, pp. 1586–1599, Jul. 2016.
[52] R. Stanica, E. Chaput, and A.-L. Beylot, “Local density estimation for
contention window adaptation in vehicular networks,” in Proc. 22nd
IEEE Int. Symp. Pers. Indoor Mobile Radio Commun., Toronto, ON,
Canada, Sep. 2011, pp. 730–734.
[53] C. Yeshwanth, P. S. A. Sooraj, V. Sudhakaran, and V. Raveendran,
“Estimation of intersection traffic density on decentralized architectures
with deep networks,” in Proc. Int. Smart Cities Conf., Wuxi, China,
Sep. 2017, pp. 1–6.
[54] J. Wroughton and T. Cole, “Distinguishing between binomial, hyper-
geometric and negative binomial distributions,” J. Stat. Educ., vol. 21,
no. 1, pp. 1–16, Mar. 2013.
[55] M. Mitzenmacher and E. Upfal, Probability and Computing:
Randomized Algorithms and Probabilistic Analysis. Cambridge, U.K.:
Cambridge Univ. Press, Jul. 2017.
[56] D. Tian, J. Zhou, M. Chen, Z. Sheng, Q. Ni, and V. C. Leung,
“Cooperative content transmission for vehicular ad hoc networks using
robust optimization,” in Proc. IEEE Conf. Comput. Commun., Honolulu,
HI, USA, Oct. 2018, pp. 90–98.
[57] M. Killat and H. Hartenstein, “An empirical model for probability of
packet reception in vehicular ad hoc networks,” EURASIP J. Wireless
Commun. Netw., vol. 2009, no. 1, Dec. 2009, Art. no. 721301.
[58] A. Durand, E. Ben-Hamida, D. Leporini, G. Memmi, “Asymptotic
performance analysis of blockchain protocols,” Feb. 2019. [Online].
Available: arXiv:1902.04363.
[59] V. Buterin, D. Reijsbergen, S. Leonardos, and G. Piliouras, “Incentives in
ethereum’s hybrid casper protocol,” in Proc. IEEE Int. Conf. Blockchain
Cryptocurrency, Seoul, South Korea, May 2019, pp. 236–244.
[60] H. Watanabe, S. Fujimura, A. Nakadaira, Y. Miyazaki, A. Akutsu, and
J. Kishigami, “Blockchain contract: Securing a blockchain applied to
smart contracts,” in Proc. IEEE Int. Conf. Consum. Electron., Las Vegas,
NV, USA, Jan. 2016, pp. 467–468.
[61] J. Petit, “Analysis of ECDSA authentication processing in VANETs,”
in Proc. 3rd Int. Conf. New Technol. Mobility Security, Cairo, Egypt,
Dec. 2009, pp. 1–5.
[62] A.S. A. Al-Sobky and R. M. Mousa, “Traffic density determination and
its applications using smartphone,” Alexandria Eng. J., vol. 55, no. 1,
pp. 513–523, Mar. 2016.
[63] S. M. A. El-Atty and G. K. Stamatiou, “Performance analysis of
multihop connectivity in VANET,” in Proc. 7th Int. Symp. Wireless
Commun. Syst., York, U.K., Sep. 2010, pp. 335–339.
[64] S. Shen, Y. Han, X. Wang, and Y. Wang, “Computation offloading with
multiple agents in edge-computing–supported IoT,” ACM Trans. Sens.
Netw., vol. 16, no. 1, pp. 1–27, Dec. 2019.
Ferheen Ayaz (Graduate Student Member, IEEE)
received the B.E. and M.E. degrees from NED
University of Engineering and Technology, Karachi,
Pakistan, in 2010 and 2014, respectively. She is cur-
rently pursuing the Ph.D. degree with the University
of Sussex, Brighton, U.K.
Her current research interests include blockchain
applications in vehicular communications.
Zhengguo Sheng (Senior Member, IEEE) received
the B.Sc. degree from the University of Electronic
Science and Technology of China, Chengdu, China,
in 2006, and the M.S. and Ph.D. degrees from
Imperial College London, London, U.K., in 2007
and 2011, respectively.
He is currently a Senior Lecturer with the
University of Sussex, Brighton, U.K. Previously,
he was with UBC, Vancouver, BC, Canada, as a
Research Associate and with Orange Labs, Santa
Monica, CA, USA, as a Senior Researcher. He has
more than 100 publications. His research interests cover IoT, vehicular
communications, and cloud/edge computing.
Daxin Tian (Senior Member, IEEE) received the
B.S., M.S., and Ph.D. degrees in computer sci-
ence from the Jilin University, Changchun, China,
in July 2002, July 2005, and December 2007,
respectively. He is a Professor with the School of
Transportation Science and Engineering, Beihang
University, Beijing, China. His current research
interests include mobile computing, intelligent trans-
portation systems, vehicular ad hoc networks, and
swarm intelligence. As a graduate student, he
received the IBM Global Best Student Award.
Yong Liang Guan (Senior Member, IEEE) received
the Bachelor of Engineering degree (First Class
Hons.) from the National University of Singapore,
Singapore, in 1991, and the Ph.D. degree from the
Imperial College London, London, U.K., in 1997.
He is a Professor of Communication Engineering
with the School of Electrical and Electronic
Engineering, Nanyang Technological University
(NTU), Singapore, where he currently leads
two industry collaboration labs (Continental-NTU
Corporate Research Lab and Schaeffler Hub for
Advanced Research) and led the successful deployment of the campus-wide
NTU-NXP V2X Test Bed. His research interests broadly include coding and
signal processing for communication systems and data storage systems.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:21:13 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TDSC.2020.2980255
http://dx.doi.org/10.1109/JIOT.2020.2986803
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice