Game Theoretic Analysis of Reputation Approach on Block Withholding Attack
Game Theoretic Analysis of Reputation
Approach on Block Withholding Attack
Lianyang Yu1(B), Jiangshan Yu1, and Yevhen Zolotavkin2,3
1 Faculty of Information Technology, Monash University, Clayton, Australia
lyuu0014@student.monash.edu, jiangshan.yu@monash.edu
2 Centre for Cyber Security Research and Innovation, Deakin University,
Geelong, Australia
yevhen.zolotavkin@deakin.edu.au
3 Cyber Security Cooperative Research Centre, Joondalup, Australia
Abstract. Bitcoin and the underlying technology blockchain intro-
duced an open distributed system that incorporates Proof of Work and
Nakamoto Consensus. Despite the broad adoption by enthusiasts, the
consensus mechanism is vulnerable to certain issues, such as block with-
holding attack, selfish mining, and 51% attack. Various solutions have
been proposed to address these problems. RepuCoin is one successful
example, which claims to solve the selfish mining and 51% attack by
adopting a novel reputation concept and modified BFT protocol. We gen-
eralize the reputation concept introduced in RepuCoin, and implement
it in traditional Bitcoin system to analyze whether it can prevent the
block withholding attack. We propose a reputation-based reward mech-
anism for the Bitcoin blockchain and a reward sharing schema for the
mining pools. We model the utility of honest mining and block withhold-
ing attack for pools, and find that the inclusion of reputation in Bitcoin’s
reward mechanism and pools’ reward schema can prevent mining pools
from launching block withholding attack.
Keywords: Blockchain · Game theory · Reputation · Block
withholding attack
1 Introduction
Bitcoin [1] is the digital currency that implements blockchain as the techni-
cal foundation of the system. It has attracted substantial attention from both
academia and industry. The estimated market capitalization of Bitcoin has
reached over 110 billion US dollars. It is so far the most popular digital cur-
rency, and the underlying consensus mechanism has been widely adopted by
other blockchain applications, such as Ethereum [19] and Monero [20]. Bitcoin
system requires participants to submit certain proof that demonstrates the valid-
ity of effort they have made, which is called Proof of Work (PoW). The first one
The work has been partially supported by the Cyber Security Research Centre Lim-
ited whose activities are partially funded by the Australian Government’s Cooperative
Research Centres Programme.
c© Springer Nature Switzerland AG 2020
M. Kuty�lowski et al. (Eds.): NSS 2020, LNCS 12570, pp. 149–166, 2020.
https://doi.org/10.1007/978-3-030-65745-1_9
http://crossmark.crossref.org/dialog/?doi=10.1007/978-3-030-65745-1_9&domain=pdf
https://doi.org/10.1007/978-3-030-65745-1_9
150 L. Yu et al.
who submits the proof gains the opportunity to add a new block on top of
the longest chain. This type of consensus is called Nakamoto consensus. How-
ever, the immutability of Bitcoin system are often questioned, due to non-trivial
nature of incentives to participate in Proof of Work consensus. Many attacks
have been proposed that allow the malicious participants to jeopardize the sys-
tem, or earn disproportionate rewards with respect to their efforts. The most
well-known attacks are selfish mining strategies [2], block withholding attack
[3–5], and 51% attack. Our focus is the block withholding attack, which is a more
practical problem and has happened in real life.
To address the security issues existing in Bitcoin, many new forms of
blockchain have been proposed that modify the consensus protocol or blockchain
structure. RepuCoin [6] adopts a novel concept of reputation and reputation-
based weighted voting mechanism, which guarantees system security even in the
presence of adversary holding more than 50% of the system’s computational
power. RepuCoin is proposed to solve the 51% attack and the selfish mining.
The consensus and the blockchain structure vary significantly from the Bit-
coin system settings. Whether the reputation concept can be applied to general
blockchain mechanism to solve the block withholding attack is unknown. The
advantage of reputation is that it can be implemented on the rewards distri-
bution among and within mining pools, without changing the basic protocol of
Bitcoin. Thus, we extract the reputation concept from RepuCoin and apply it
to Bitcoin and mining pools to evaluate whether the reputation approach can
provide adequate incentive for miners to follow the honest mining strategy.
We use game theoretic analysis to model the utility of honest strategy and
block withholding attack in a two-pool scenario. In summary, our contributions
are following:
1. Generalization of the reputation concept and definition of reputation mecha-
nisms that are applicable to Bitcoin pool mining.
2. Definition of the generic utility function in a two-pool scenario.
3. Implementation of the One-Poisson-Mean-Test (OPMT) for pool members’
honesty evaluation.
4. Conclusion that, in the two-pool scenario, the reputation mechanism prevents
the block withholding attack.
2 Preliminaries
2.1 Bitcoin and the Underlying Blockchain
All blockchain systems can be deconstructed into three components, which are
membership selection, consensus mechanism, and structure [7]. Following this
framework, we evaluate the components of Bitcoin system.
Membership Selection
The Bitcoin system uses Proof of Work (PoW) as the membership selection
algorithm. PoW requires nodes to prove their validity by performing some works
Reputation Analysis on BWH Attack 151
with certain cost, in order to propose the block. The work specified is the cryp-
tographic puzzle, which involves heavy computation that consumes significant
amount of electricity. In order to solve the puzzle, it is required to iterate through
the computation of a double SHA-256 hash function to produce a block header.
The first node that produces a result that is lower than the system’s target can
propose the new block and append it on the main chain. The process is called
mining and the nodes performing such task are called miners.
Consensus Mechanism
The consensus of Bitcoin is called Nakamoto Consensus. The most crucial aspect
of Nakamoto Consensus is the longest chain rule, which states that the nodes
must choose the chain with the highest number of blocks as the single canonical
chain. The longest chain is believed to have the most work performed. Following
the assumption that the majority of the system computational power is owned
by the honest nodes, the longest chain is supposed to be honest.
Structure
Bitcoin features a single canonical chain for all miners to work on. The chain
contains homogeneous blocks, where every block has the same structure that
stores a record of recent transactions, a reference to the previous block, the
current time, etc.
Incentive Mechanism
Set by Nakamoto in the Bitcoin whitepaper [1], Bitcoin’s reward consists of
block mining reward and transaction fees. Miners add a transaction paid to
them that creates new Bitcoins in their prospective blocks. Once a block is
successfully appended on the chain, the miner will receive the reward (currently
6.25 BTC) plus transaction fees in that block. There are many attacks and
mining strategies proposed since the inception of Bitcoin, which allows miners
to earn disproportional gains [2,4,5].
Bitcoin Mining Pools
Miners may form the mining pool, which is controlled by the pool manager in the
centralized manner. The pool members share the reward in accordance to the
reward scheme established in the pool when a block is found. The main objective
for miners to join mining pools is to receive regular income, in contrast to solo
mining where miners receive infrequent rewards. The mining process for miners
can be seen as a lottery, where the probability of individual miners with small
computational power winning the next block proposition is extremely low. Thus,
joining mining pools can reduce the uncertainty. Miners produce partial Proof
of Work, which are called shares. The difficulty level of partial PoW set in the
pool is lower than the system’s specified difficulty level. When members find the
puzzle solution that meets the system’s target, called full Proof of Work, and
send to the pool manager, the pool manager immediately broadcast the block
to obtain corresponding mining rewards. The reward received by the pool will
be distributed to the members according to the reward sharing schema.
152 L. Yu et al.
There are many different reward functions for mining pools, as analysed
by Schrijvers et al. [21]. It’s important to use a reward schema that ensures
incentive compatibility and optimize the pool’s welfare. The most common
approaches are proportional reward, Pay-Per-Share (PPS), and Pay-Per-Last-
N-Shares (PPLNS). For the pool adopting proportional reward, the reward is
divided according to the proportion of shares of a miner over all shares that
were reported in the pool. Under the PPS schema, the pool members are paid
a fixed amount for every share that is reported. PPLNS maintains a sliding
window of length N , which allows each miner to get the reward that is propor-
tional to the partial PoW exerted during the last N shares before a full solution.
The aforementioned reward sharing schemas are susceptible to block withholding
attack.
Currently, the majority of Bitcoin’s mining power is controlled by mining
pools. Individual miner’s computational power is infinitesimal [22]. Thus, our
analysis concentrates on the effect of reputation on mining pools.
2.2 RepuCoin
RepuCoin [6] is a blockchain system that guarantees system security. The sys-
tem solves Bitcoin security issues by modifying membership selection approach,
consensus mechanism, and the structure.
Membership Selection
RepuCoin introduces a novel membership selection approach called Proof of
Reputation. It defines miner’s integrated power by reputation, which is measured
by the total amount of valid work and the regularity of the work over the entire
period of the system running time. The work is the same as it is in Bitcoin. The
top reputable miners will form the consensus committee to control the system.
Consensus Mechanism
RepuCoin adopts a modified BFT protocol, which can keep functioning even
in the presence of a certain amount of Byzantine failures. The BFT protocol
should satisfy the condition that N ≥ 3f + 1, where f denotes the number of
Byzantine nodes, and N is the total number of nodes [8]. RepuCoin adopts a
reputation-based weighted voting consensus, which requires no less than 2f + 1
votes from the committee to reach consensus agreement. Besides, the collective
reputation from the nodes who have voted should be more than 2
3 of the total
reputation of the consensus committee. The novelty of the consensus is that it
decouples the voting power and computational power, which prevents attacks
from the adversaries with temporary high computational power.
Structure
RepuCoin implements a parallel chain structure with two types of blocks, namely
keyblock and microblock. Keyblocks, which are created by all eligible miners
solving cryptographic puzzles, are linked by referencing each predecessor and
form one chain. Microblocks, which contains transactions, form a parallel chain
Reputation Analysis on BWH Attack 153
that is linked by referencing previous microblocks, and each microblock is refer-
enced to the most recent keyblock. The consensus group decides which keyblock
to be pinned. A leader is selected randomly from the consensus group to verify
and gather transactions into microblocks. The transactions are decoupled from
the block creation process.
Although the system can guarantee security from malicious majority miners,
the system is too complex and specific. We extract a reputation concept from
RepuCoin, and analyze its applicability to the general Bitcoin system.
2.3 Block Withholding Attack
Block withholding attack is a general type of strategic mining that causes detri-
ments to mining pools. The attack is firstly proposed by Rosenfeld [3], which
involves individual pool member attacking the pool. The attacking strategy
includes sabotaging the pool by withholding the blocks, or lie in wait, which
postpones the submission of the blocks. The attacker submits partial PoW reg-
ularly, but withholds the full PoW. This attack decreases victim pool’s revenue,
and the reward distributed to the attacker is in turn decreased. Thus, the attack
is purely used to disrupt the pool, as there is no economic benefits to the attacker.
The idea is advanced to be used by mining pools [4]. The attacking pool
deploys part of its mining power to infiltrate the victim pool. The infiltrated
members in the victim pool submit partial PoW regularly to gain shares, but
withhold the full PoW. The remaining miners in the attacking pool work honestly
to propose blocks. This attack allows the attacking pool to earn more than honest
mining. It leads to the tragedy of the commons, where pools choose to attack
each other and each will earn less than honest mining.
Following the attack at pool level, Fork after Withholding Attack was pro-
posed [5]. It specifies that if the attacker releases the withholding full PoW
immediately after other honest non-infiltrated pools publish a valid block, the
attacker can earn more. This will force a forked situation, and the attacker has
the chance to win the longest chain and earn the reward.
For the reputation analysis, We focus on the block withholding attack at pool
level, where the attacking pool infiltrates other pools with part of its mining
power [4]. Assuming that the system’s total mining power is m, and there are
two pools in the system, where pool 1 is the block withholding attacker with
m1 mining power and pool 2 follows honest mining with m2 mining power.
Pool 1 deploys x1,2 of its loyal members to pool 2. The revenue for pool 1 is
m1−x1,2
m−x1,2
+ x1,2
m2+x1,2
· m2
m−x1,2
, where m1−x1,2
m−x1,2
is the revenue gained from honest
mining in pool 1, and x1,2
m2+x1,2
· m2
m−x1,2
is the block withholding attack revenue
gained from pool 2. It’s been proved that this attack can bring higher gains to
the attacking pool [4,11,18], and honest mining is not an equilibrium point.
154 L. Yu et al.
2.4 One-Poisson-Mean-Test as a Countermeasure to Block
Withholding Attack
Let X be the Poisson random variable with parameter λ, which denotes the
mean value of the Poisson process. The probability of X = x (x ∈ R) is defined
as Pr(X = x) = e−λλx
x! . The cumulative probability function of X ≤ x follows
gamma distribution that FX(x) = Pr(X ≤ x) =
x∑
i=0
e−λλi
i!
= 1 − FΓβ(λ, x),
with β = 1 as the rate parameter.
The One-Poisson-Mean Test (OPMT) [12,13] is useful to validate whether
certain members in the pool are the block withholding attackers. Under block
withholding attack, the infiltrated miners produce 0 full solution. The null
hypothesis H0 that the pool manager would like to reject is that “the mem-
ber is a block withholding attacker”, while the alternative hypothesis H1 is that
“the member is honest”. The pool manager can test the hypothesis based on the
number of shares received from each miner. On average, there is certain number
of blocks on every K shares. The pool manager analyzes the number of full solu-
tions each member produced within the K shares and tries to find the lowest
significance level α under which hypothesis H0 can be rejected. The lowest α is
embedded in the reputation calculation of the pool member.
3 Reputation Mechanisms
There are two levels of reputation application in the mechanism. One reputation-
based reward distribution among the pools, which enforces the pools to adopt
consistent mining strategy; and one reputation-based reward sharing schema
within the pools that punishes block withholding attack. We use Bitcoin as
the baseline model. The reputation mechanisms only alter the system’s reward
distribution method and reward sharing schema in pools.
Every mining pool and pool member has a reputation score R assigned to
them. The reputation is not transferable, as it relates to each’s unique identity
(i.e., public key). The reputation score is a ratio within [0, 1]. The block gener-
ation process is divided into epochs. As the average time taken to mine a new
block is 10 min, each epoch contains 144 valid blocks, which is the number of
blocks mined in 24 h. At the end of each epoch, the reputation score is updated,
and the reward is distributed in accordance to the reputation score R. Instead
of rewarding the miners each time the block is generated, the reward under the
reputation mechanism is paid to eligible miners in lump sum at the end of each
epoch. The reputation components are generalized from RepuCoin [6].
3.1 Reputation Generalization
Reputation is defined as “the perception that an agent creates through past
actions about its intentions and norms” [9]. Applying this definition to Repu-
Coin [6], the “past actions” of the RepuCoin miner is demonstrated by the total
Reputation Analysis on BWH Attack 155
number of blocks the miner has generated in the system and the regularity of
the block generation. The two components will form the reputation of the miner
regarding his honesty. Only when the miner has produced as many valid blocks
as possible in a constant pace for a long period of time can have a high reputa-
tion score to gain the voting power in RepuCoin system. Thus, the components
of the reputation of a miner in RepuCoin are:
– Total amount of valid work done
– The regularity of the valid work
We generalize the above two components and apply them to Bitcoin system.
Table 1. Reputation mechanisms notation table
Notation Explanation
t The index of epochs
T Total number of epochs
p The index of pools
i The index of pool members
N Total number of blocks in each epoch (N = 144)
wp The number of valid works done by pool p
K Total number of shares in a pool in one epoch
qi The number of valid works done by member i
W The ratio of total amount of valid work done by a pool or a pool member
S Regularity
R Reputation score
M Proportion of the pool’s reward
3.2 Reputation-Based Reward Distribution for Pools
We propose a reputation-based reward distribution method for the system to allo-
cate the total reward in one epoch, where every mining pool receives the reward
based on its reputation. The regularity of the valid work captures the character-
istic of the marginal productivity of mining, which represents the ratio of the
additional gain for one more block generation. It follows the law of diminishing
marginal return, where the mining pool will find a decrease in marginal gains
after the number of blocks reaches certain point. The total amount of valid work
represents the integration of the returns over all epochs. Thus, the reputation is
the function of regularity and total amount of valid work. We use the reputation
as the basis of the system’s reward distribution.
Total amount of valid work is measured based on total number of blocks
generated by the pool p and the total number of blocks in the system. The ratio
represents the pool’s average mining power throughout the system’s running
time. The function is as following:
Wp,t =
∑T
t=1 wp,t
NtT
(1)
156 L. Yu et al.
Regularity of the work is measured by the standard deviation of the pool’s
block proposal ratio, as the standard deviation can reflect the fluctuations in the
block proposal rate. Standard deviation, as the measure of variability, captures
how every epoch varies from the mean. A low standard deviation indicates that
the number of block generations in every epoch tend to be very close to the
mean, which suggests that the pool’s mining strategy tends to be consistent.
The regularity function for pool p at epoch t is as following:
Sp,t =
1
1 +
√
1
T × ∑T
t=1(
wp,t
Nt
−
∑T
t=1 wp,t
NtT
)2
(2)
The reputation score Rp,t is calculated by multiplying the ratio of total amount
of valid work Wp,t and the regularity factor Sp,t.
Rp,t = Wp,t × Sp,t, Rp,t ∈ [0, 1] (3)
As Sp,t < 1, the pool will not receive the full reward for the blocks it has mined.
In order to eliminate the reward residuals, the proportion of the reward pool p
will receive is normalized:
Mp,t =
Rp,t∑j
p=1 Rp,t
(4)
Mp,t denotes the reputation-based proportion of the reward pool p will receive at
the end of epoch t, assuming there are j pools in the system.
Reward Distribution
According to current Bitcoin reward, the total BTCs that will be distributed at
the end of each epoch are 144 × 6.25 = 900. the number of BTCs is denoted as
B. Under our reputation mechanism, miners will receive the reward according
to the reputation-based proportion, so the gain Bp,t the pool p will get at epoch
t is:
Bp,t = B × Mp,t (5)
With the implementation of the reputation score, miners should try to generate
as many blocks during each epoch, and maintain the regularity of the proposals
as steady as possible to have a higher reputation score, and thus, receive higher
reward.
3.3 Reputation-Based Reward Sharing Schema Within Pools
On top of the system’s reward distribution mechanism, we propose a reputation-
based reward sharing schema within the pools, where members receive reward
according to their reputation. The reputation is calculated based on the ratio of
valid work done by the member, and the regularity of the work.
The ratio of valid work done of a pool member is calculated based on the total
number of shares she submitted during an epoch (qi,t), over the total number of
Reputation Analysis on BWH Attack 157
shares in the pool in that epoch (Kp,t). The ratio of valid work done represents
the estimated mining power of the member. The formula is as following:
Wi,t =
qi,t
Kp,t
(6)
The regularity is measured using the lowest α (lowest significance level) cal-
culated from the One-Poisson-Mean-Test (OPMT). The pool manager test the
null hypothesis H0 that “the pool member is a block withholding attacker” by
comparing each member’s estimated number of full solutions (λ̂) with the actual
number of full solutions she submitted. λ̂ is obtained based on the estimated
mining power observed from the actual partial solutions the member submitted.
The alternative hypothesis H1 is that “the pool member is honest”. After com-
puting the P-value (Pr(X ≥ x) = FΓβ(λ̂, x)) from the actual blocks (x) each
member submitted, the lowest α to reject the null hypothesis can be obtained
(α = Pr(X ≥ x)). The value of the lowest α indicates the probability whether
the member has submitted all full solutions. A high alpha value suggests that
the member has a high probability of being a block withholding attacker. The
null hypothesis H0 and the alternative hypothesis H1 are:
H0 : λi,t < λ̂
H1 : λi,t ≥ λ̂
where λi,t stands for the number of full solutions the member i submitted during
the epoch t. The regularity S for member i at epoch t is calculated as:
Si,t =
1
1 + cαi,t
(7)
where c is the multiplier that adjusts the value of the Si,t, which is determined by
the pool manager. The regularity serves as the punishment factor in the reward
sharing schema. If the member fails to produce enough full solutions as the pool
manager expected, the reputation score will be lower.
The member’s reputation Ri,t is calculated as:
Ri,t = Wi,t × Si,t (8)
The reward distributed to member i is thus:
Bi,t = Bp,t × Ri,t (9)
where Bp,t denotes the reward the pool p gets at epoch t. Due to the regularity
Si,t < 1, pool members will not receive full rewards for all the shares they sub-
mitted. We set that the residuals of the reward are withheld by pool managers.
We assume that the information to calculate the reputation is publicly available
to all pool members. Therefore, all members can calculate and validate the rep-
utation scores, which prevents the pool manager from cheating by maliciously
setting certain members’ reputation score lower.
158 L. Yu et al.
The algorithms below summarize the reputation mechanism.
Algorithm 1: Pool’s Reputation Calculation
Input : {N}T
t=1, {wp}T
t=1
Output: Reputation score Rp,t.
1 for each pool p do
2 Wp,t =
∑T
t=1 wp,t
NtT
;
3 Sp,t = 1
1+
√
1
T ×∑T
t=1(
wp,t
Nt
−
∑T
t=1 wp,t
NtT )2
;
4 Rp,t = Wp,t × Sp,t, Rp,t ∈ [0, 1]
5 end for
Algorithm 2: Reputation-based Reward Distribution
Input : {Rt}j
p=1, Kp,t, qi,t, B, c, x, λ̂
Output: Reward Bp,t for pool p; and reward Bi,t for pool member i.
1 for each pool p do
2 Mp,t = Rp,t
∑j
p=1 Rp,t
;
3 Bp,t = B × Mp,t ;
4 for each member i in pool p do
5 Wi,t = qi,t
Kp,t
;
6 Pr(X ≥ x) = FΓβ(λ̂, x), with β = 1 ;
7 αi,t = Pr(X ≥ x) ;
8 Si,t = 1
1+cαi,t
;
9 Ri,t = Wi,t × Si,t ;
10 Bi,t = Bp,t × Ri,t
11 end for
12 end for
4 Game Theoretic Analysis
We adopt a non-cooperative game [10] to model the honest strategy and block
withholding attack in a two-pool scenario under the reputation mechanism.
Assuming that players are rational, do not form coalitions, and the informa-
tion is not shared, players choose their best strategies to maximize payoff. A
steady state, called Nash Equilibrium, might be reached, where no player can
have higher payoff by changing strategies. The Assumptions are the following:
– There are two pools in the system.
– Mining pools’ computational power remains constant over time.
– The normalized total system’s hash power equals to 1.
– For a mining pool with constant mining power, the probability distribution
of the number of valid blocks follows Poisson distribution, where mean value
equals to the expected number of blocks mined within a fixed time frame (i.e.
one epoch).
Reputation Analysis on BWH Attack 159
4.1 Honest Strategy Utility
Following honest mining strategy, the mining pools strictly obey the system
protocol. It publishes the blocks immediately, and does not infiltrate others pools.
Honest Pools Reputation Calculation
Suppose both pools choose honest mining, The ratio of total amount of valid
work done by pool 1 is:
W1 =
∑T
t=1 wt
NT
≈ m1 (10)
If the mining power remains constant, the ratio of valid work done represents the
approximation of the honest pool 1’s mining power m1. (Mining power cannot
be directly measured; it can only be reflected by the ratio of blocks proposed.)
As we assumed that the probability distribution of block generation is Poisson
distribution, one property of Poisson distribution is V ariance = mean. The
mean of the number of pool 1’s block proposal μ1 =
∑T
t=1 wt
T . As
∑T
t=1 wt ≈
m1 × T × N , we get μ1 = m1×T×N
T . Thus, the mean number of pool 1’s block
proposal μ1 is
μ1 ≈ m1N (11)
The standard deviation of the honest mining is
√
μ1.
As
∑T
t=1 wt
NT is the mean of the pool’s block generation ratio, and the total
number of blocks N is fixed across all epochs, the standard deviation part in the
regularity function can be rewrited as
√
1
T × ∑T
t=1(
wt−μ1
N )2. After extracting
the N from the square root, we get 1
N ×
√
1
T × ∑T
t=1(wt − μ1)2, which equals
to
√
μ1
N . Thus, the regularity function S for pool 1 is:
S1 =
1
1 +
√
m1N
N
(12)
The reputation of the honest mining pool 1 is
R1 = W1 × S1 =
m1
1 +
√
m1N
N
=
m1N
N +
√
m1N
(13)
Following the same calculation, the honest pool 2 ’s reputation is:
R2 = W2 × S2 =
m2
1 +
√
m2N
N
=
m2N
N +
√
m2N
(14)
Honest Pools Reward Proportion
The reputation-based reward proportion for both pools are normalized among all
pools according to Eq. (4). Thus, the reward proportion M1 for pool 1 is
M1 =
R1
R1 + R2
(15)
160 L. Yu et al.
Honest Pools Utility Calculation
The utility for honest mining at each epoch is distributed according to reputation
weighted reward proportion. The calculation is the following:
U1 = B × M1 (16)
The utility calculation for pool 2 is exactly the same as pool 1, as both pools
adopt honest strategy.
4.2 Block Withholding Attack Utility
We assume that pool 2 strictly follows honest mining, while pool 1 launches
block withholding attack since the inception of the system. The attacking pool
distributes γ1 portion (γ1 ≤ m1) of the system’s mining power to the honest
pool. The attacking members submit partial PoW regularly but omit the full
PoW in the victim pool, while the remaining members mine honestly in the
attacking pool. The attacking pool will receive reward from honest mining of
its (m1 − γ1) members, and shares from the victim pool of its γ1 members. We
are going to examine whether our reputation mechanism can discourage such
attack.
Attacking Pool Reputation
As the system normalizes the mining rate by the total number of miners who sub-
mit full PoW, the direct effective mining power of the attacking pool is reduced
to m1−γ1
1−γ1
. Thus, the ratio of valid work done by the attacking pool W1 is approx-
imated to
W1 ≈ m1 − γ1
1 − γ1
(17)
The mean number of block proposals is reduced proportionally to m1−γ1
1−γ1
N , and
the standard deviation is thus,
√
m1−γ1
1−γ1
N . The regularity function is:
S1 =
1
1 +
√
m1−γ1
1−γ1
N
N
(18)
Multiplying W1 and S1, the reputation score R1 for the attacking pool is
R1 =
m1−γ1
1−γ1
N
N +
√
m1−γ1
1−γ1
N
(19)
Victim Pool Reputation
Following the same logic, the victim pool’s effective mining power is increased to
m2
1−γ1
. We denote the ratio of valid work done, regularity, and reputation score as
Reputation Analysis on BWH Attack 161
W2, S2, and R2 respectively. The Reputation components and Reputation score
calculation is the following:
W2 ≈ m2
1 − γ1
(20)
S2 =
1
1 +
√
m2
1−γ1
N
N
(21)
R2 =
m2
1−γ1
N
N +
√
m2
1−γ1
N
(22)
Reputation-Based Reward Proportion
The reward proportion for dishonest pool 1 and honest pool 2 is as following:
M1 =
R1
R1 + R2
(23)
M2 =
R2
R1 + R2
(24)
Attacking Pool Utility
The total utility of the attacking pool is from the shares in the victim pool and
the honest mining in the own pool.
Utility from Victim Pool
The block withholding attackers omit all full solutions. Therefore, the number
of full solutions the pool manager will observe at the end of each epoch is 0.
Regardless of the mining power of each attacker, if the pool manager observes
that the number of full solutions submitted by the member is 0, the P-value that
Pr(X ≥ 0) is equal to 1. Therefore, the lowest α is 1, and the Si,t is 1
2 , assuming
the multiplier c = 1.
The total gain of the victim pool in one epoch is B × M2. The total gain
will be distributed to m2 + γ1 members. While the infiltrated members take γ1
portion of the total shares, γ1
m2+γ1
is the sum of the ratio of total work done by
the attackers in pool 2 in one epoch. However, as analysed above, there is half
of the reward withheld by the pool manager, which will not be gained by the
attackers. Thus, the part of the utility U1,2 of pool 1 gained from the victim pool
2 is
U1,2 = B × M2 × γ1
m2 + γ1
× 1
2
(25)
Utility from Own Pool
the reward gained from the attacking pool U1,1 is the honest block proposals
made by the pool’s own members, which is B × M1. The utility gained from the
own pool is thus,
U1,1 = B × M1 (26)
162 L. Yu et al.
Total Utility
Summing up U1,1 and U1,2, the total utility of the malicious pool 1 is
U1 = U1,2 + U1,1 = B × (M1 + M2 × γ1
m2 + γ1
× 1
2
) (27)
4.3 Numerical Analysis
As discussed in Sect. 4.2, as long as the number of full solutions submitted by
the attacker is 0, the reward received from the victim pool will be reduced by
half due to the punishment factor regularity.
We compute the utilities for the attacking pool with mining power from 0.1
to 0.9. Both the honest strategy utilities and the average utilities of all possible
infiltration rates of each distinct mining power are calculated. The utility curves
are depicted below in Fig. 1.
Fig. 1. Utility comparison for the attacking pool
It can be observed that the honest strategy always has a higher utility than
block withholding attack. The pools have no incentive to launch block withhold-
ing attack, as the utility they gained from the attack is not optimal. Therefore,
honest strategy is the Nash Equilibrium, as pools cannot have higher utility by
deviating from the honest strategy.
5 Discussion
The reputation-based reward distribution among the pools allocates the total
rewards in one epoch in lump sum to each eligible pools, based on their ratio
of total valid work done and the regularity of the work over the entire system
running time. This reward distribution method will incentivize mining pools to
keep mining as many blocks as possible at a consistent rate to gain higher rep-
utation score. If the pool switches mining strategies or adjusting the infiltration
Reputation Analysis on BWH Attack 163
rate frequently, the reputation score will be lower, due to the increase in stan-
dard deviation and overall less total blocks generated. The pool will receive less
reward. Therefore, the pools have to adopt a consistent mining strategy.
The reputation-based reward sharing schema within the pools is similar to
Pay-Per-Last-N-Shares. Instead of keeping a sliding window of “N shares” every
time a block is found by the pool, the “N shares” in our reputation-based schema
is the total number of shares in one epoch, and there is no overlap between each
epoch. On top of that, we introduce a regularity factor, which is calculated based
on the lowest α from the OPMT that determines the probability of the member
being a block withholding attacker. The member cannot receive full reward for
the shares they submitted due to the regularity punishment. The members are
incentivized to mine honestly and submit full solutions immediately to reduce
their α level.
In the game theoretic analysis, we demonstrated that the two reputation
mechanisms will make the attacking pool’s reward gained from the victim pool
reduced by 1
2 . As long as the attackers omit all full solutions, the reward they
received will always be reduced by half, which makes the attack unprofitable.
The main limitation of the proposed reputation mechanisms is that the pool
manager withholds the residuals of the reward for every pool member. The block
withholding attack can be prevented, but at the cost of honest members losing
some portion of the reward. In the existing mining pools, pool managers normally
collect a fee from miners. The withheld residuals can be considered as the fee
for mining in the pool. Managers can adjust the multiplier c in pool member’s
regularity calculation to alter the residuals, in order to make the honest miners
less disadvantageous.
6 Related Work
6.1 Reputation Concept in Blockchain
Apart from RepuCoin [6], there are other modifications of blockchain using rep-
utation concepts. Nojoumian et al. [14] proposed a reputation-based paradigm
for pool member selection. each miner’s past performance is evaluated based on
certain criteria, which are vaguely defined, and an extra input value “lifetime”,
which determines the active time for a nodes in the reputation-based scheme.
Miners’ reputation defines the probability of them being selected in the pool. The
paper only gives a brief explanation of how to measure the miner’s performance,
which lacks applicable fixed standards. Tang et al. [15] proposed a reputation
mechanism that also serves for pool member selection. The miner’s behaviour in
the pool is represented by a vector of satisfaction scores, which are evaluated by
the pool manager. The reputation is calculated based on the confidence interval
estimation of the satisfaction scores. The randomly selected pool manager sets
the thresholds for eligible miners entering the pool. The satisfaction scores are
subject to the pool manager’s perception, which cannot guarantee the objective-
ness and fairness. Biryukov and Feher [16] proposed a system called ReCon. The
reputation of the nodes is measured by nodes’ participation in the consensus.
164 L. Yu et al.
ReCon is only suitable for BFT protocols. Zhuang et al. [17] also determines rep-
utation by the degree of consensus participation, but the system follows Proof
of Stake. The aforementioned two papers are not directly related to this work.
6.2 Block Withholding Attack Mitigation
There are some literature that proposed block withholding attack mitigation
methods. Bag and Sakurai [23] proposed a new notion of rewarding a miner
called “special reward”, which is disbursed to a miner who actually finds a
full solution. Thus, any miner who launches block withholding attack will be
unable to receive the “special reward”. Bag et al. [24] proposed a generalized
cryptographic commitment protocol and a variant that adopts hash function to
countermeasure block withholding attack. The two schemes prevent the attack
by making the partial PoW and full PoW indistinguishable by the miners. Chen
et al. [25] defined a game theoretical model called DPBW game by allowing pool
managers to directly deduct part of their total mining rewards before the reward
distribution. They show that honest mining is always the Nash equilibrium for
most reasonable deductions.
7 Conclusion and Future Work
Conclusion
We generalized the novel reputation concept from RepuCoin [6] and applied it
to Bitcoin as the system’s reward distribution method and pool’s reward shar-
ing schema. Every mining pool and pool member has a reputation score that
determines the reward they will receive. We defined the generic utility functions
for honest strategy and block withholding attack under two-pool scenario. We
modelled the collective effect of the reputation mechanisms on preventing the
block withholding attack by analysing the utilities of the pools, and concluded
that the reputation mechanisms successfully disincentivizes the attack.
Future Work
As the limitation of the reputation mechanisms is that the pool manager with-
holds a portion of members’ rewards, the future work will be to distribute the
residuals in an appropriate way. For example, the reward residuals can be allo-
cated to the loyal honest members who have stayed in the pool for a long time. In
addition, the game theoretic analysis only focused on the two-pool scenario. The
implementation of the mechanism in current dynamic Bitcoin settings needs
to be conducted and evaluated. Furthermore, we only demonstrated that the
combination of the two reputation mechanisms is effective to prevent Block
Withholding attack. The effect of the individual mechanism can be analyzed
separately.
Reputation Analysis on BWH Attack 165
References
1. Nakamoto, S.: Bitcoin: A peer-to-peer electronic cash system (2008)
2. Eyal, I., Sirer, E.G.: Majority is not enough: bitcoin mining is vulnerable. In:
Christin, N., Safavi-Naini, R. (eds.) FC 2014. LNCS, vol. 8437, pp. 436–454.
Springer, Heidelberg (2014). https://doi.org/10.1007/978-3-662-45472-5 28
3. Rosenfeld, M.: Analysis of bitcoin pooled mining reward systems. arXiv preprint
arXiv:1112.4980. (2011)
4. Eyal, I.: The miner’s dilemma. In: 2015 IEEE Symposium on Security and Privacy,
pp. 89–103. IEEE (2015)
5. Kwon, Y., Kim, D., Son, Y., Vasserman, E., Kim, Y.: Be selfish and avoid dilemmas:
fork after withholding (faw) attacks on bitcoin. In: Proceedings of the 2017 ACM
SIGSAC Conference on Computer and Communications Security, Dallas, USA, pp.
195–209. ACM (2017)
6. Yu, J., Kozhaya, D., Decouchant, J., Esteves-Verissimo, P.: RepuCoin: your repu-
tation is your power. IEEE Trans. Comput. 68(8), 1225–1237 (2019)
7. Natoli, C., Yu, J., Gramoli, V., Esteves-Verissimo, P.: Deconstructing blockchains:
A comprehensive survey on consensus, membership and structure. arXiv preprint
arXiv:1908.08316. (2019)
8. Pease, M., Shostak, R., Lamport, L.: Reaching agreement in the presence of faults.
J. ACM (JACM) 27(2), 228–234 (1980)
9. Mui, L., Mohtashemi, M., Halberstadt, A.: Computational model of trust and
reputation. In: Proceedings of the 35th Annual Hawaii International Conference
on System Sciences, pp. 2431–2439. IEEE (2002)
10. Nash, J.: Non-cooperative games. Ann. Math., 286–295 (1951)
11. Courtois, N.T., Bahack, L.: On subversive miner strategies and block withholding
attack in bitcoin digital currency. arXiv preprint arXiv:1402.1718. (2014)
12. Kuchta, V., Zolotavkin, Y.: Detection constraint for harvesting attack in proof of
work mining pools (2019)
13. Weerahandi, S.: Exact Statistical Methods for Data Analysis. Springer Science and
Business Media, New York, USA (2003)
14. Nojoumian, M., Golchubian, A., Njilla, L., Kwiat, K., Kamhoua, C.: Incentiviz-
ing blockchain miners to avoid dishonest mining strategies by a reputation-based
paradigm. In: Arai, K., Kapoor, S., Bhatia, R. (eds.) SAI 2018. AISC, vol. 857,
pp. 1118–1134. Springer, Cham (2019). https://doi.org/10.1007/978-3-030-01177-
2 81
15. Tang, C., Wu, L., Wen, G., Zheng, Z.: Incentivizing honest mining in blockchain
networks: a reputation approach. IEEE Trans. Circuits Syst. II: Express Briefs
67(1), 117–121 (2019)
16. Biryukov, A., Feher, D.: ReCon: sybil-resistant consensus from reputation. Perva-
sive Mobile Comput. 61, 101109 (2020)
17. Zhuang, Q., Liu, Y., Chen, L., Ai, Z.: Proof of reputation: a reputation-based con-
sensus protocol for blockchain based systems. In: Proceedings of the 2019 Interna-
tional Electronics Communication Conference, pp. 131–138 (2019)
18. Luu, L., Saha, R., Parameshwaran, I., Saxena, P., Hobor, A.: On power splitting
games in distributed computation: The case of bitcoin pooled mining. In: 2015
IEEE 28th Computer Security Foundations Symposium, Verona, Italy, pp. 397–
411. IEEE (2015)
19. Wood, G.: Ethereum: a secure decentralised generalised transaction ledger.
Ethereum Project Yellow Paper 151(2014), 1–32 (2014)
https://doi.org/10.1007/978-3-662-45472-5_28
http://arxiv.org/abs/1112.4980
http://arxiv.org/abs/1908.08316
http://arxiv.org/abs/1402.1718
https://doi.org/10.1007/978-3-030-01177-2_81
https://doi.org/10.1007/978-3-030-01177-2_81
166 L. Yu et al.
20. Monero.: Moneropedia. https://web.getmonero.org/resources/moneropedia/
21. Schrijvers, O., Bonneau, J., Boneh, D., Roughgarden, T.: Incentive compatibility
of bitcoin mining pool reward functions. In: Grossklags, J., Preneel, B. (eds.) FC
2016. LNCS, vol. 9603, pp. 477–498. Springer, Heidelberg (2017). https://doi.org/
10.1007/978-3-662-54970-4 28
22. Leonardos, N., Leonardos, S., Piliouras, G.: Oceanic games: centralization risks
and incentives in blockchain mining. In: Pardalos, P., Kotsireas, I., Guo, Y., Knot-
tenbelt, W. (eds.) Mathematical Research for Blockchain Economy. SPBE, pp.
183–199. Springer, Cham (2020). https://doi.org/10.1007/978-3-030-37110-4 13
23. Bag, S., Sakurai, K.: Yet another note on block withholding attack on bitcoin min-
ing pools. In: Bishop, M., Nascimento, A.C.A. (eds.) ISC 2016. LNCS, vol. 9866, pp.
167–180. Springer, Cham (2016). https://doi.org/10.1007/978-3-319-45871-7 11
24. Bag, S., Ruj, S., Sakurai, K.: Bitcoin block withholding attack: analysis and miti-
gation. IEEE Trans. Inf. Forensics Secur. 12(8), 1967–1978 (2016)
25. Chen, Z., Li, B., Shan, X., Sun, X., Zhang, J.: Discouraging Pool BlockWithholding
Attacks in Bitcoins. arXiv preprint arXiv:2008.06923 (2020)
https://web.getmonero.org/resources/moneropedia/
https://doi.org/10.1007/978-3-662-54970-4_28
https://doi.org/10.1007/978-3-662-54970-4_28
https://doi.org/10.1007/978-3-030-37110-4_13
https://doi.org/10.1007/978-3-319-45871-7_11
http://arxiv.org/abs/2008.06923
	Game Theoretic Analysis of Reputation Approach on Block Withholding Attack
	1 Introduction
	2 Preliminaries
	2.1 Bitcoin and the Underlying Blockchain
	2.2 RepuCoin
	2.3 Block Withholding Attack
	2.4 One-Poisson-Mean-Test as a Countermeasure to Block Withholding Attack
	3 Reputation Mechanisms
	3.1 Reputation Generalization
	3.2 Reputation-Based Reward Distribution for Pools
	3.3 Reputation-Based Reward Sharing Schema Within Pools
	4 Game Theoretic Analysis
	4.1 Honest Strategy Utility
	4.2 Block Withholding Attack Utility
	4.3 Numerical Analysis
	5 Discussion
	6 Related Work
	6.1 Reputation Concept in Blockchain
	6.2 Block Withholding Attack Mitigation
	7 Conclusion and Future Work
	References