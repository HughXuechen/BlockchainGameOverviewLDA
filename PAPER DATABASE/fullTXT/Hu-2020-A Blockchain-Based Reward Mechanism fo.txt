A Blockchain-Based Reward Mechanism for Mobile Crowdsensing
178 IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 7, NO. 1, FEBRUARY 2020
A Blockchain-Based Reward Mechanism
for Mobile Crowdsensing
Jiejun Hu , Kun Yang , Senior Member, IEEE, Kezhi Wang , and Kai Zhang
Abstract— Mobile crowdsensing (MCS) is a novel sensing
scenario of cyber-physical-social systems. MCS has been widely
adopted in smart cities, personal health care, and environment
monitor areas. MCS applications recruit participants to obtain
sensory data from the target area by allocating reward to
them. Reward mechanisms are crucial in stimulating participants
to join and provide sensory data. However, while the MCS
applications execute the reward mechanisms, sensory data and
personal private information can be in great danger because
of malicious task initiators/participants and hackers. This arti-
cle proposes a novel blockchain-based MCS framework that
preserves privacy and secures both the sensing process and
the incentive mechanism by leveraging the emergent blockchain
technology. Moreover, to provide a fair incentive mechanism,
this article has considered an MCS scenario as a sensory data
market, where the market separates the participants into two cat-
egories: monthly-pay participants and instant-pay participants.
By analyzing two different kinds of participants and the task
initiator, this article proposes an incentive mechanism aided by
a three-stage Stackelberg game. Through theoretical analysis and
simulation, the evaluation addresses two aspects: the reward
mechanism and the performance of the blockchain-based MCS.
The proposed reward mechanism achieves up to a 10% improve-
ment of the task initiator’s utility compared with a traditional
Stackelberg game. It can also maintain the required market share
for monthly-pay participants while achieving sustainable sensory
data provision. The evaluation of the blockchain-based MCS
shows that the latency increases in a tolerable manner as the
number of participants grows. Finally, this article discusses the
future challenges of blockchain-based MCS.
Index Terms— Blockchain, mobile crowdsensing (MCS),
reward mechanism, sensory data market, Stackelberg game.
I. INTRODUCTION
THE development of network technology, sensing devices,
and social networks has increased the deployment of
the next generation of Internet of Things (IoT)—mobile
crowdsensing (MCS). MCS is a novel sensing framework,
which is assisted by smartphone sensors and with the
inclusion of human intelligence in the loop. MCS has
Manuscript received June 30, 2019; revised October 11, 2019; accepted
November 18, 2019. Date of publication January 10, 2020; date of current
version February 24, 2020. This work was supported by the European Union’s
Horizon 2020 Research and Innovation Program through the Project SerIoT
under Grant 780139. (Corresponding author: Jiejun Hu.)
J. Hu and K. Yang are with the School of Computer Science and Elec-
tronic Engineering, University of Essex, Colchester CO4 3SQ, U.K. (e-mail:
jiejun.hu@essex.ac.uk).
K. Wang is with the Department of Computer and Information Sciences,
Northumbria University, Newcastle upon Tyne NE1 8ST, U.K.
K. Zhang is with the Department of Economics, University of Essex,
Colchester CO4 3SQ, U.K.
Digital Object Identifier 10.1109/TCSS.2019.2956629
become a typical application in the cyber-physical-social sys-
tems (CPSSs) [1], [2], because it adopts the multidisciplinary
approach where knowledge from communication, computer
science, computer network, economic, psychology, and social
research unites to provide a solution of a sensing task.
Compared with the traditional IoT Frameworks, MCS has
the advantages of broad sensing coverage, spatiotemporality of
sensory data, feasibility and flexibility of deployment, and so
on. MCS has been widely adopted in different scenarios, such
as personal health care [3], smart cities [4], [5], environmental
monitoring [6], and disaster recovery [7], [8]. Furthermore,
it has drawn the attention of both academia and industry. The
challenges in MCS that have been studied include the incentive
mechanism [9], sensory data transmission [10], sensing tasks
execution [11], [12] and offloading [13], quality of sensory
data [14], and coverage [15].
MCS is becoming an essential part of daily life, and it col-
lects the sensory data along with the participants’ private data
(such as location data). The leakage of participants’ private
data is inherent when the participants join an MCS application.
In addition, an MCS scenario faces several challenges during
deployment and operation.
1) Untrustworthy Participants: A participant who may
forge his identity or reputation, for example, adversary
attack. A malicious participant may steal sensory data
causing privacy leakage.
2) Untrustworthy Task Initiator: A task initiator may pub-
lish a sensing task without a reward guarantee, and
it may also try to steal the private information from
participants when there is communication between them.
3) Untrustworthy Reward Transaction: Due to the mobility
of the participants in the MCS, the reward allocation pro-
cedure will be disturbed when a mobile user/participant
moves from one target area to another. As a result,
a participant will have difficulty in redeeming his/her
reward.
4) High Operational Cost of the System: MCS needs an
authority to process all the communications between the
sensing task initiator and the participants. Considering
that the architecture of MCS is usually centralized, MCS
may suffer a single-point failure and add an additional
operational cost to the whole scenario.
To address the above privacy and security challenges, this
article has proposed a blockchain-based reward mechanism
to provide the privacy and security features to the MCS.
2329-924X © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-5274-1869
https://orcid.org/0000-0002-6782-6689
https://orcid.org/0000-0001-8602-0800
HU et al.: BLOCKCHAIN-BASED REWARD MECHANISM FOR MCS 179
The concept of Bitcoin [16] has drawn more attention than
the blockchain technology. Bitcoin was created in 2009, fol-
lowing with a white paper, which provided all the details
of the blockchain technology. The blockchain technology
is a disruptive technology and often stated to be the fifth
computing revolution after the mainframe, personal computer,
Internet, and social networking [17]. The vital feature of the
blockchain technology is that it is a distributed ledger that
records transactions in a conventional and permanent way,
which makes it a potential solution for a distributed sensing
scenario.
Blockchain technology has the potential to collaborate with
the MCS, because it operates the transactions in a decentral-
ized, anonymous, and trustful fashion [18]. First, by adopting
the blockchain technology, it will reduce the additional cost
of the third party in MCS. Second, considering the anonymity
feature of the blockchain, it can protect the participants’
private information when they participate in the sensing task.
Last but not least, the smart contract [19] can support the
automation of sensing task allocation, participant selection,
sensing task execution, and reward allocation. The smart
contract can make it easier for the intricate reward allocation.
We will address this in detail in Section II.
This article proposes a blockchain-based MCS, which
can achieve participant identity anonymization, decentralized
reward allocation, and transparent transactions without an
ordinary trusted third party. The main contribution of this
article involves three aspects.
1) Proposing a blockchain-based MCS framework, which
provides the protection of participants’ privacy, as well
as a secure sensing process and reward allocation mecha-
nism by leveraging the novel blockchain technology. The
proposed work uses hybrid base stations as miners to
verify and validate the identities of the participants and
the sensing task, the sensing procedure, and the reward
allocation.
2) Designing the workflow of the blockchain-based MCS
and a set of smart contracts to assist the sensing task
execution automation of the MCS. Once all the identi-
ties of the participants are verified on the blockchain,
the sensing task execution procedure will be triggered.
When the task initiator has collected the sensory data,
the reward allocation procedure will start to execute.
Smart contracts can guarantee the automation and secu-
rity of the MCS framework.
3) Studying the features of the sensory data market and
the participants. This article classifies the participants
into monthly-pay participants, instant-pay participants,
and the task initiator. It provides an economic approach
to analyze the incentive mechanism. By leveraging a
three-stage Stackelberg game reward mechanism, it can
achieve a fair and efficient sensory data market in the
MCS.
The remainder of this article is organized as follows.
Section II presents the related work. The blockchain-based
MCS framework and smart contracts are introduced
in Section III. The three-stage Stackelberg game and the
incentive mechanism are presented in Section IV, respectively.
The performance and simulation of the mechanism are
analyzed in Section VI. This article also identifies the future
challenges of the blockchain-based sensing technology in
Section VII. In Section VIII, the conclusions of this article
are presented.
II. RELATED WORK
This article adopts the blockchain in cooperation with
MCS to deploy an automated, secured sensing paradigm. The
blockchain technology with its disruptive features has made
it possible to connect the world seamlessly, including com-
puters, sensors, smartphones, tablets, and wearable devices.
Application scenarios of blockchain technology are not merely
limited to the financial sector as before. New applications, such
as energy supplement chain, secure information transmission,
and so on, have also emerged.
IoT and MCS applications have deployed in the distributed
fashion. The deployment depends on a centric server to support
the sensing tasks, which is in danger of single-point failure.
Furthermore, in an environment with a large number of sen-
sors, the traditional framework is short of proper security guar-
antee. By adopting the blockchain technology, it would solve
the challenges of the traditional IoT faces. Reference [20]
surveyed the research issues and the challenges of the IoT
security aspects in cooperation with the blockchain technology.
Kshetri [21] proposed a blockchain-based identity and access
management systems, which can be leveraged to strengthen
IoT security. As defined in this article, many companies have
joined a group that hopes to establish a blockchain protocol to
build the IoT devices, applications, and networks. Christidis
and Devetsikiotis [22] adopted the blockchain technology into
IoT, which used a smart contract to deploy the automation of
the complex multi-process in the IoT. Alphand et al. [23] pro-
posed IoTChain, a scheme that combined the object security
architecture (OSCAR) for the IoT and the authentication and
authorization for the constrained environment (ACE) frame-
work to provide an end-to-end solution for secure authorized
access to IoT resources. This article addressed the details of
the whole framework and the authorization flow. It simulated
the proposed framework with an Ethereum private testnet.
Zhang and Wen [24] proposed a blockchain-based IoT in the
E-business aspect to support the feature of decentralization
and traceability. Cao et al. [25] discussed the main ideas of the
consensus mechanisms and their limitations in IoT. Blockchain
can solve the authentication of the IoT devices, because it uses
the consensus mechanism to verify the identities of the IoT
devices without the third party. However, the consensus mech-
anism of sensing task execution has not been well investigated
in these works. Thus, it motivates us to consider proposing a
secure task execution by leveraging the blockchain.
Related works on the collaboration of the MCS and the
blockchain were proposed to provide the secure sensing pro-
cedure to MCS. Li et al. [26] proposed a novel framework
of blockchain and crowdsensing, which deployed a software
prototype on Ethereum. In [27], a privacy-preserved incen-
tive mechanism was proposed for crowdsourcing applications.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
180 IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 7, NO. 1, FEBRUARY 2020
This article used a series of encryption algorithms to solve the
security issues in crowdsourcing. Delgado-Segura et al. [28]
presented Paysense, a general framework that incentivizes
user participation and provides a mechanism to validate the
quality of the collected data based on users’ reputation. This
article focused on analyzing user participation, data sensing
quality, and user anonymity. The related works focused on
the improvement of security by proposing new encryption
algorithms. However, spatiotemporality is crucial to the MCS
task, and complicated encryption algorithms may lead to long
latency. The features of MCS need to be considered when
adopting the blockchain.
Related works attempted to provide the secure incen-
tive mechanism of the MCS aided by the blockchain.
Chatzopoulos et al. [29] proposed a truthful, cost-optimal auc-
tion that minimizes the payments from the crowdsensing
providers to mobile users based on a blockchain-aided MCS
architecture. With the help of four smart contracts, it deployed
a novel incentive mechanism in the blockchain. Feng et al. [30]
investigated the limitation of the existing IoT frameworks and
proposed a purely decentralized platform of crowdsensing by
adopting the permissionless blockchain technology. The author
formulated a noncooperative game to analysis the competitive
situations among the sensors. Cai et al. [31] addressed sev-
eral challenges including the sensory data safeguarding issue,
knowledge monetization, and streamlined sensory data in the
crowdsensing scenario. This article proposed a crowdsens-
ing framework that enables the privacy-preserving knowledge
discovery and the full-fledged blockchain-based knowledge
monetization. However, it did not give the detail on how to
allocate the reward to each participant. Shi et al. [32] proposed
a fault-tolerant incentivization mechanism for the mobile P2P
crowd service (MPCS). They designed an MPCSToken smart
contract to facilitate the service auction, task execution, and
payment settlement process with the help of the blockchain
technology. Jia et al. [33] proposed a blockchain-based loca-
tion privacy protection incentive mechanism in MCS. It took
privacy protection as a supplement of the monetary incentive
mechanism and addressed the problem in a cryptographic
approach. However, related works only used the classic incen-
tive mechanisms, such as auction, noncooperative game, and
so on, for one-time stimulation. They have not considered pro-
viding MCS application-sustainable sensory data. The related
works have not considered that blockchain can improve the
security of the system when the transactions keep growing.
Thus, this motivates us to propose a novel blockchain-based
MCS framework that preserves privacy and secures both the
sensing process and the incentive mechanism by leveraging
the emergent blockchain technology. First, we proposed the
architecture of the blockchain-based MCS and its workflow.
We design a novel set of smart contracts such as participants’
registration, sensing task execution, and reward allocation.
Based on the framework, we provide the solution of par-
ticipants’ privacy and sensing procedure security. Second,
different from the related works, we consider the participants
into different roles and propose a three-stage Stackelberg
game. This incentive mechanism makes sure the sensory data
are sustainable provided by the participants, and the utility
of the task initiator is maximized. Third, we have simulated
the proposed framework on the Ethereum testnet to proof the
efficiency.
III. BLOCKCHAIN-BASED MCS FRAMEWORK
A. Architecture of Blockchain-Based MCS
This section introduces the framework of blockchain-based
MCS and the entities in the framework. In an MCS scenario,
a task initiator would like to collect as much good quality
sensory data as possible under a specific budget. In some
particular application, he even prefers long-term sensory data
gathering. Thus, according to an enterprise system, we clas-
sify the workers (participants) in MCS into contract workers
who are paid monthly and temporary workers who are paid
instantly after work. In this case, contract workers will con-
tribute to the sensory data in a long-term and stable manner
and the temporary worker can make compensation whether the
budget is limited or the sensory data are not sufficient. In the
following article, we will call contract workers “monthly-
pay participants” and temporary workers “instant-pay partici-
pants.” Thus, this framework includes the following.
1) Task Initiator: The initiator who publishes the sens-
ing task and allocates the reward to monthly-pay and
instant-pay participants through blockchain.
2) Participant: The participants are classified into two
different roles: participants who will get paid instant
after finishing the sensing task and participants who will
get paid monthly. The instant-pay participants’ reward is
according to the sensory data quality and his reputation
and the monthly-pay participants’ reward is their salaries
according to the number of the tasks they accomplish
and their reputation.
3) Miner: Adding authorized miners aims to verify all
the participants’ identity and transactions between them.
In this scenario, the hybrid base stations serve as autho-
rized miners in the blockchain-based MCS. A hybrid
base station not only can execute the communication but
also can serve as the storage and computation resource.
By using the blockchain, the task initiator, participants,
and miners are on the blockchain working in cooperation
anonymously. In addition, the authorized miners also
verify the identities of the task initiator and participants
before continuing the sensing task of the MCS. Smart
contracts are deployed on the miners for the sensing task
execution. The miners store all the blocks in the storage,
and thus, they are in charge of verifying the registration
of the task initiator and participants, transactions, and
quality control of sensory data.
The architecture of the blockchain-based MCS is shown
in Fig. 1. This article proposes a three-layer architecture for
the blockchain-based MCS, which consists of a data plane,
a blockchain plane, and an application plane. Fundamental
functions, such as sensing, data forwarding, and storing, can
be operated on the data plane by smartphone users. This archi-
tecture introduces an extra abstract layer called the blockchain
plane to help an MCS application to verify the identities
of the participants, allocate the sensing task/rewards, operate
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
HU et al.: BLOCKCHAIN-BASED REWARD MECHANISM FOR MCS 181
Fig. 1. Architecture of blockchain-based MCS.
Fig. 2. Structure of block in the blockchain-based MCS.
the transactions, and control the sensory data quality. The
application plane can deal with the request from a specific
organization and process the sensory data to extract the
knowledge.
In this article, hybrid base stations are equipped with servers
and capable to operate communication and computation tasks.
The miners store the whole blockchain information locally.
The blockchain and structure of a block are shown in Fig. 2.
The chain in the miner starts with a genesis block. The new
blocks the system generates are appended after the genesis
block. In each block, it consists of the blockhead, the previous
hash of the block, the timestamp, the state root, the transac-
tions root, and so on. The state root and the transactions root
are the root of the Merkel tree. The transactions root stores
all the hash value of the transactions between the participants.
In the state root, it includes the contract hash, which is the hash
value of the smart contract, balance, and storage root. All the
actual data are stored in the distributed database, which could
be in the server of the hybrid base station.
B. Workflow of Blockchain-Based MCS
This section presents the workflow of the blockchain-based
MCS. Fig. 3 depicts the workflow of the smart contracts
between each entity in the blockchain-based MCS. The task
initiator communicates with the participants through the set of
smart contracts, which are deployed on the miner. The details
of the smart contracts will be introduced in Section III-C.
We assume that the participants (including the task initiator)
have registered and enrolled with the certificate authority (CA)
Fig. 3. Workflow of the blockchain-based MCS.
and received back necessary cryptographic material, which is
used to authenticate when the sensing task starts.
1) System Initialization: Task initiator and participants sign
in for the MCS application. They will send their identi-
ties, public/private keys, certificates, and so on to the
closest miner. The miner will run the “Registration
Contract” and verify the identities of the participants
and the task initiator with other miners by consensus
mechanism. Then, the miners will send confirmations to
the task initiator if the participants’ identities are valid.
When the registration procedure completes, it will trig-
ger the next step. Task initiator will send the description
of the sensing task to the corresponding miners. The
miners will verify the sensing task and then broadcast
the sensing task to all the registered participants.
2) Incentive Mechanism Deployment (Three-Stage Stackel-
berg Game): After system initialization, the role of each
identity will be clarified. Thus, the incentive mechanism
will be triggered by running the “Participant Profile
Contract” and the “Sensing Task Contract.” We will
introduce this procedure in detail in the following sec-
tions.
3) Token Allocation: After the incentive mechanism com-
pletes, all the participants receive the message of the
reward and size of the sensory data. They need to inspect
the message, if the message is legitimate, and then, they
execute the sensing task according to the reward. Each
of the participants will be allocated with a token, which
indicates the sensing task and reward. For this function,
we set a “credit & token bank” in every miner to enable
token allocation.
4) Sensory Data Uploading: Since every participant had
the promised reward for accomplishing the sensing task,
they will upload the promised sensory data to the task
initiator via miner. At this step, instant-pay participants
will get their reward from the credit bank of the miner.
5) New Block Generation: The miners will process the
proof of work (PoW) and build the new block with
all the transactions of the sensing task on the chain.
The new block will be audited and finally added on the
blockchain.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
182 IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 7, NO. 1, FEBRUARY 2020
TABLE I
REGISTRATION CONTRACT
TABLE II
PARTICIPANT PROFILE CONTRACT
6) Token Redemption and Task Accomplishment: After the
new block is added, all the participants have the tokens,
and when the sensing task completes, the tokens will be
redeemed whenever or wherever the participants need.
C. Smart Contracts of Blockchain-Base MCS
The concept of the smart contract was first introduced
in 1997 [19]. A smart contract is an agreement, which tells
each party how to act when they trust each other. We assume
that all the smart contracts are authorized before deploy-
ment. In the proposed blockchain-based MCS framework,
a novel set of smart contracts is designed to operate the
transactions and verification. According to the workflow of
the blockchain-based MCS, the novel set of smart contracts is
proposed.
1) Registration Contract: All the participants including
the task initiator register run the registration contract,
as shown in Table I. All the participants will send their
address and roles in the secure communication channel
to the miner to verify their identities. After the consensus
among the miners finishes, the participants without the
legitimate signature will be detected. This article omits
the technical details of the cryptography algorithms in
the blockchain. We adopt the asymmetric cryptography
algorithms to provide the secure communication chan-
nel.
2) Participant Profile Contract: When the miners collect
all the information from the participants, their profile
will be built to assist the participant selection procedure,
sensing task execution procedure, and reward allocation
procedure. A participant’s profile contains the partici-
pant’s reputation, expecting the reward of sensing task,
participant’s status, and so on, as it is shown in Table II.
3) Sensing Task Contract: The sensing task contract con-
sists of the ID, execution status, deposit, and rewards
plan of the sensing tasks. The execution status of a
sensing task is a binary variable in Table III. When
the status is 0, it means the sensing task is unfinished
and vice versa. There are also parameters, such as
TABLE III
SENSING TASK CONTRACT
TABLE IV
PROFIT EVALUATION CONTRACT
TABLE V
SENSING TASK EXECUTION CONTRACT
TABLE VI
REWARD ALLOCATION CONTRACT
sensing task’s deposit, which can guarantee the promised
rewards to the participants and its reward plan, which
gives guidance for reward allocation.
4) Profit Evaluation Contract: When the participants reg-
ister on the chain, the miners obtain all the information
to evaluate the reward allocation plan by running the
profit evaluation contract. Due to the deployment of
the three-stage Stackelberg game, all the participants,
including the task initiator, have the profit evaluation
contract to calculate if a specific scenario will maximize
their profit, according to (1), (3), and (4). This procedure
will be introduced in the following sections. We denote
U(·) as the profit function of the participant with the
sensing plan in Table IV.
5) Sensing Task Execution Contract: When the participants
calculate the maximum profit according to the details of
the sensing task, reward, and so on, they will obtain
the sensing plan, including the quality of the sensory
data and the sensory data size. The participants will
follow the sensing task execution contract, in Table V,
to execute the sensing task. Therefore, the sensing task
execution contract will be triggered.
6) Reward Allocation Contract: The key algorithms of
this article will be deployed in a sensing task contract
according to the participant profile contract. This algo-
rithm will give the result of the reward plan of the
sensing task. Meanwhile, during this procedure, reward
will be allocated as tokens to the participants, which is
enabled by the reward allocation contract in Table VI.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
HU et al.: BLOCKCHAIN-BASED REWARD MECHANISM FOR MCS 183
D. Consensus Mechanism of Blockchain-Base MCS
In this article, we use PoW as the consensus mechanism.
PoW requires a great amount of computation power to create a
set of transactions (the block). PoW is the practice of solving
block equations to verify if the each transaction is legitimate
in the block. The miner starts PoW by choosing a number
“nonce,” and along with the hash of the previous block and
the Merkel root, he could get an answer of the equation.
He repeats changing the “nonce” until he calculates the right
answer. Once the PoW completes, the block of transactions
is confirmed and becomes public. PoW can reduce the risk
of a 51% attack, because the equation is very hard to solve.
In addition, it does not rely on any third party, which enables
to build a transparent network.
In this article, we adopt the PoW in Ethereum without any
optimization. In the future work, our study will be focused on
the distributed consensus mechanism.
IV. SYSTEM MODEL OF THE INCENTIVE MECHANISM
The incentive mechanism is the crucial research aspect in
the MCS. A task initiator can obtain the sensory data and
price the sensory data in the MCS framework as a sensory
data market. A sensory data market should conform to market
rules. Thus, adopting a primary economic method is necessary.
In the blockchain-based MCS, the framework consists of a
set p of participants. We consider a set of the instant-pay par-
ticipants as pI = {1, 2, . . . , pI } and a set of the monthly-pay
as pM = {pI +1, pI +2, . . . , pI + pM}, where pI ⋃
pM = p.
In this scenario, there exist multiple hybrid base stations acting
as miners. We denote miner as m = {1, 2, . . . ,m}. A task
initiator will publish a sensing task t = (R, D, B) to the
participants. Here, D denotes the required sensory data size,
R denotes the reputation of the participants, and B denotes
the budget of reward. The sensory data size each participant
in pI and pM provides is d = {d1, . . . , dpI , . . . , dpI +pM }. The
notations of the system model are shown in Table VII.
In this blockchain-based MCS sensory data market, to have
more sustainable participants for sensing tasks, the task initia-
tor prefers more monthly-pay participants. Thus, in the first
stage of the game, monthly-pay participants dominate the
market over the task initiator. In the second stage, the task
initiator should dominate the market when he/she negotiates
with the instant-pay participants. In the third stage, instant-pay
participants adjust the sensory data size according to the
reward the task initiator provides. The formal definitions of
the players and their strategies in the three-stage Stackelberg
game [34] are as follows.
1) Monthly-pay participant signs in for long term and gets
paid monthly. The strategy profile of the monthly-pay
participants is their salary, which denote as a set rpM =
{rpI +1, . . . , rpI +pM }. They can only redeem their pay-
ments monthly.
2) Task initiator starts a sensing task, selects the
monthly-pay participants according to the sensing task’s
requirements, and then offers the instant-pay participants
the reward to execute the sensing task. Thus, the strategy
profile of the task initiator includes two parts: sensory
TABLE VII
NOTATION AND DESCRIPTIONS
data size dpM = {dpI +1, . . . , dpI +pM } and the reward to
instant-pay participants rpI = {r1, . . . , rpI }.
3) Instant-pay participant gets paid after each task accord-
ing to the sensory data size and reputation. According to
the reward offered by the task initiator, instant-pay par-
ticipants can decide the sensory data size. The strategy
profile is the sensory data size dpI = {d1, . . . , dpI }.
A. Problem Formulation
1) Utility of Task Initiator: A task initiator aims to maxi-
mize his profit, which consists of two parts: revenue by accom-
plishing the sensing task and cost by paying the participants.
When a task initiator announces a sensing task to all the
participants, they must have a set of specific parameters to
guarantee the quality of the result of the sensing task. More-
over, task initiator will consider the reputation [14], [35], [36]
of the participant as well. Task initiator will have a set of
payment r = {r1, . . . , rpl , . . . , rpI +pM } to participants, where
r is the value of one unit of the sensory data. We also denote
the data quantity as d = {d1, . . . , dpl , . . . , dpI +pM }. Let di
denote the instant-pay participants where i ∈ pI and d j denote
the monthly-pay participants where j ∈ pM.
In order to obtain long and stable sensory data, a sensing
task initiator is willing to recruit more monthly-pay partic-
ipants. Instant-pay participants are part-time workers, who
complement the sensory data market. For example, when the
budget is limited, possibly more instant-pay participants will
join the market. Thus, in this model, monthly-pay participants
will dominate the market. In this article, the Stackelberg game
is adopted to naturally grand monthly-pay participants the
“first mover advantage,” which means the first mover in the
game will dominate the market [37].
The profit a task initiator can gain depends on the sensory
data size di and d j , the reputation of the participants Ri and
R j , and his expense to pay them ri and r j as well. The utility
function of the task initiator is defined as
UI =
∑
i∈pI
di h(Ri )+
∑
j∈pM
d j
2 h(R j )−
⎛
⎝∑
i∈pI
ri di +
∑
j∈pM
r j d j
⎞
⎠
(1)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
184 IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 7, NO. 1, FEBRUARY 2020
where h(·) is the reputation function of the participants.
Note that we have added quadratic d j , which indicates the
task initiator prefers monthly-pay participants to obtain more
income. The reputation function [38] h(·) of the participants p
is defined as
h(Rp) =
{
γ + (1 − γ )ln(1 + ε), if R ≤ Rp ≤ Rmax
γ e(Rp−R), if Rmin ≤ Rp ≤ R
(2)
where γ is a default value and R is the required reputation
of the task initiator. Here, ε = ((e − 1)(Rp − R)/Rmax − R).
The reputation function implies that when the reputation of a
participant is lower than the required reputation of the sensing
task, h(·) will decrease sharply; conversely, h(·) will markedly
increase.
2) Utility of Monthly-Pay Participant: The utility function
of the participant j ∈ pM who gets paid monthly is based on
the sensory data size d j and the cost of sensing and uploading.
We assume that every participant keeps the sensing history on
record to estimate the expecting salary for the next month and
then report the salary to the task initiator. Thus, we have the
utility function of monthly-pay participant j
U P M
j = r j d j − [s j (d j , R j )+ u(d j )] (3)
where s j (·) is the function of the sensing cost and u(·) is the
function of the sensory data uploading cost. Function s j (·) and
u(·) increase as the size of sensory data increases. A rational
participant will keep his utility function positive.
3) Utility of Instant-Pay Participant: Instant-pay partici-
pant i ∈ pI will receive a reward offer from the task initiator.
Then, according to the reward, he will decide the sensory data
size di he can contribute to the task initiator. The revenue
for pI
i will be the reward ri he/she can get after accomplishing
a single sensory task. The cost depends on the size of sensory
data di , the participant’s reputation h(Ri ), and the uploading
cost u(di ). The objective of the participants is to maximize
their individual expected utility. Thus, the utility function U P I
i
of the instant-pay participant i is
U P I
i = ri di − [si (di , Ri )+ u(di )]. (4)
Furthermore, the sensing cost function si (·) and the sensory
data uploading function u(·) are defined in detail
si (di , Ri ) = ωi · h(Ri )di
2 (5)
s j (d j , R j ) = ω j · h(R j )d j (6)
u(dp) = β · dp (7)
where ωp represents the processing ability of the sensing
devices, which is the CPU ability of encoding the data before
sending them out. The network condition denoted as β, which
means that a greater β indicates a poorer network condition,
will require more cost to upload the sensory data. Note that
we design different sensing cost functions for different partic-
ipants, and the instant-pay participants will have greater cost
than the monthly-pay participants, because the task initiator
prefers more monthly-pay participants in the system.
V. THREE-STAGE GAME AND EQUILIBRIUM
This section will present the solution of the three-stage
Stackelberg game. This game aims to maximize the utility of
the task initiator and maximize the utility of the participants,
and, at the same time, achieve the maximum sensory data
quality.
To solve a traditional Stackelberg game, we adopt backward
induction, which solves the equilibria of the subgames first.
In the three-stage Stackelberg game, there are three subgames,
which means we need to obtain three perfect equilibria [39]
of the three subgames.
A. Subgames Equilibria and Stackelberg Equilibrium
For every player i with the strategy profile τi , we assume
that the state after executing the strategy profile τi is Oh(τi )
according to history h.
1) Definition (Subgame Perfect Equilibrium): The strategy
profile τ ∗ is a subgame perfect equilibrium if the utility
of state Oh(τ
∗) is at least as good as the utility of state
Oh(τi , τ
∗−i ), where the strategy profile (τi , τ
∗−i ) represents that
player i chooses τi while every other player −i chooses τ ∗−i .
Equivalently, for every player i and every history h after which
it is player i ’s turn to move
Ui (Oh(τ
∗)) ≥ Ui
(
Oh
(
τi , τ
∗−i
))
(8)
where Ui is an utiltiy function that represents player i ’s
preferences.
The definition above is the general definition for subgame
perfect equilibrium. For example, in this article, when an
instant-pay participant wants to decide his strategy of sensory
data size di , he will take the previous stage’s strategy as given,
which is the reward strategy ri from the task initiator, to derive
his optimal strategy di
∗. The subgame perfect equilibrium can
be interpreted in the following two aspects.
1) The subgame is Nash equilibrium, so the follower’s
strategy is optimal, given the leader’s strategy: in
the three-stage Stackelberg game, the leader is the
monthly-pay participant and the follower is the task
initiator in Stage I. Then, the leader is the task initiator
and the followers are the instant-pay participants in
Stage II. Finally, the players are instant-pay participants
in noncooperate game Stage III. Thus, in this three-stage
Stackelberg game, the Nash equilibrium can be obtained.
2) According to the strategy history, the followers’ strategy
is optimal: as it is in a Stackelberg game, the subgame
will be played dynamically. According to the strategy
history and preferences of the leader, the followers
will repeatedly engage in the same game with different
strategy profiles until they reach the optimal solutions.
When every subgame can admit a subgame perfect
equilibrium, the Stackelberg game achieves the Stackelberg
equilibrium. Now, we give the definition of the Stackelberg
equilibrium of the proposed game.
Definition (Stackelberg Equilibrium): The strategy profile
(r∗
pM,d∗
pM , r∗
pI ,d∗
pI ) is a Stackelberg equilibrium if it satisfies
U P I (d∗
pI
) ≥ U P I (di ,d∗−i
)
(9)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
HU et al.: BLOCKCHAIN-BASED REWARD MECHANISM FOR MCS 185
U I (d∗
pM, r∗
pI
) ≥ U I (d j ,d∗− j , ri , r∗−i
)
(10)
U P M (
r∗
pM
) ≥ U P M(
r j , r∗− j
)
(11)
where d∗
pI is the equilibrium sensory data size strategies of the
instant-pay participants, di is the sensory data size strategy
of participant i , and d∗−i is the equilibrium strategies of all
the participants expect participant i in (9). The rest of the
notation in (10) and (11) has the same meaning as in (9). Equa-
tions (9)–(11) are the subgame equilibria of Stage III, Stage II,
and Stage I, respectively, in the whole Stackelberg game.
When all the subgames admit perfect equilibria, we derive the
Stackelberg equilibrium. The subgame perfect equilibria of the
three subgames will be analyzed in the following sections.
B. Stage III: Instant-Pay Participants’ Strategy Profile
According to backward induction, the task initiator’s reward
plan rpI is taken as given to solve the profit maximization
problem of instant-pay participants in Stage III. According
to (4), (5), and (7)
max
di∈dpI
U P I
i = ri di − ωi h(Ri )di
2 − βdi
s.t. U P I
i > 0
Ri ≥ R (12)
where h(·) is defined in (2). First, the utility function should be
greater than 0, because every participant is rational. Second,
there is a requirement in the sensing task description, which
indicates the participants’ reputation to fulfill R. Equation (12)
is the concave maximization problem in the strategy
space [dmin, dmax]. According to the derivation of di , the
optimal di
∗ is
di
∗ = ri − β
2wi h(Ri )
. (13)
The optimal strategy profile of sensory data size d∗
i (ri )
of instant-pay participant i is obtained, which is a subgame
perfect equilibrium. This article assumes that the task initiator
will set a minimum sensory data size dmin for every participant,
and participants’ sensing ability is fixed, which is not more
than dmax.
C. Stage II: Task Initiator’s Strategy Profile
Given salary plan rpM of monthly-pay participants, the task
initiator aims to maximize his profit by deciding the equilib-
rium strategy profile of reward rpI for instant-pay participants
and the strategy profile of the sensory data size ddM for
the monthly-pay participants. Since the salary plan of the
monthly-pay participants is given, the sensory data size of
them obtains. According to (3), (6), and (7)
max
ri ∈rpI ,d j∈dpM
U I
s.t.
∑
i
ri +
∑
j
r j ≤ B
∑
i
di +
∑
j
d j ≥ D
d j ≤ Dmax
j
U I > 0. (14)
The first constraint is the total reward to all the participants
under budget B . The second constraint means that the total
sensory data size is greater than the required sensory data
size D. The third constraint is the sensory data of monthly-pay
participants whose contribution cannot exceed the maximum
sensory data Dmax
j . The last constraint requires that the utility
should not be below 0. It shows the concavity of (14) and the
convexity of the constraints. Thus, it is a concave maximiza-
tion problem. Given the monthly-pay participants’ strategy r j
and the optimal data strategy di
∗ of the instant-pay participants
from (13), the Lagrange function of (14) is
L(
rpI ,dpM , λ, μ, κpM
)
= −
∑
i∈pI
ri (ri − β)
2wi h(Ri )
−
∑
j∈pM
r j d j
+
⎛
⎝∑
i∈pI
ri − β
2wi h(Ri )
h(Ri )+
∑
j∈pM
ηd j
2 h(R j )
⎞
⎠
+λ
⎛
⎝B −
∑
i∈pI
ri −
∑
j∈pM
r j
⎞
⎠
+μ
⎛
⎝∑
i∈pI
ri − β
2wi h(Ri )
+
∑
j∈pM
d j − D
⎞
⎠+
∑
j∈pM
κ j
(
Dmax
j − d j
)
(15)
where λ, μ, and κpM are the nonnegative Lagrange multipliers
associated with the constraints in (14). According to (15),
we can solve ri and d j from (14) by the derivations of all
the ri and all the d j , respectively.
By adopting the Karush–Kuhn–Tucker (KKT) condi-
tions [40], the optimal strategy profile of the instant-pay
participants’ rewards rpI
∗(r j ) and dpM
∗(r j ) can be obtained
by solving the linear equations. The results depend on r j from
Stage I. The subgame perfect equilibrium can be derived by
obtaining the optimal value in Stage II.
Lemma 1: In Stage II, given the strategy rpM of the
monthly-pay participants, the task initiator’s optimal strategy
can be obtained.
The solution of Stage II and proof of Lemma 1 can be found
in the Appendix.
D. Stage I: Monthly-Pay Participants’ Strategy Profile
In Stage I, given the monthly-pay sensory data strategy of
dpM(rpM), monthly-pay participants will adjust their salary
strategy rpM to maximize their profit function. According
to (3), that is
max
r j ∈rpM
U P M
j = r j d j − ω j h(R j )d j − βd j
s.t. U P M
j > 0
R j ≥ Rb
I
(16)
where h(·) is defined in (2). According to (28), the optimal
data size strategy dpM
∗(r j ) of the monthly-pay participant
is an increasing function on r j ; as a result, the objective
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
186 IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 7, NO. 1, FEBRUARY 2020
function in (16) is convex. Due to the constraints, the opti-
mal salary strategy for the monthly-pay participants can be
obtained.
Lemma 2: In Stage I, the strategy rpM of the monthly-pay
participants satisfies
U j
(
r∗
pM
) ≥ U j
(
r j , r∗− j
)
. (17)
By analyzing the optimal strategy dpM
∗ in (28), the salary
of one monthly-pay participant relates to all the other
monthly-pay participants. This indicates that the subgame in
Stage I is a cooperative game, which means the coworkers
(monthly-pay participants) work in the union form and fight
for each other for a better salary. The optimal strategy rpM
∗
can be achieved.
1) When d∗
j = Dmax
j , the objective function is an increasing
function; thus, r∗
j = rmax
j .
2) When d∗
j = (r j/2h(R j )), the objective function is
U P M
j = r2
j
2h(R j )
− ω j h(R j )
r j
2h(R j )
− β
r j
2h(R j )
and it is concave; thus, r∗
j = rmax
j .
3) When
d∗
j = ξ
⎛
⎝D − τ +
∑
i∈pL
Ai
∑
j∈pM
r j +
∑
j∈pM
r j − r j−1
2h(R j−1)
⎞
⎠
d∗
j is a function on
∑
j r j , which is d∗
j = ∑
j r j . The
objective function is a binary primary concave function;
at the same time, the constant terms are all greater than
zero. Thus, r∗
j is in the range of [rmin
j , rmax
j ].
Thus, the optimal strategy r j
∗ of the monthly-pay participants
of Stage I can be obtained. The subgame equilibrium of Stage I
can be reached in the situations above.
E. Existence and Uniqueness of Nash Equilibrium
Theorem 1 (Existence of Subgame Perfect Equilibrium):
Every finite extensive game with perfect information has a
subgame equilibrium.
Proof: The proposed three-stage Stackelberg game is an
extensive game with all the given information; also, it is with
a finite strategy space, such as [dmin, dmax] and [rmin, rmax].
Thus, the subgame equilibrium can be obtained.
Theorem 2 (Existence of Stackelberg Equilibrium): There
exists Stackelberg equilibrium in the proposed three-stage
game.
Proof: The existence of Stackelberg equilibrium depends
on the subgame perfect equilibrium. In the proposed
three-stage game, the set of subgame perfect equilibria of a
finite-strategy space-extensive game with perfect information
is equal to the set of strategy profiles isolated by the procedure
of backward induction [39]. According to the analysis of the
proposed three-stage game, Stackelberg equilibrium can be
obtained.
VI. SIMULATION
This section presents the simulation results of the pro-
posed framework in two aspects. We first evaluate the
three-stage Stackelberg algorithms. Then, the performance of
the blockchain-based MCS architecture is assessed by the
Ethereum testnet.
A. Incentive Mechanism Performance Analysis
To benchmark the performance of the proposed algorithm,
we implement the traditional Stackelberg algorithm [11] and
the greedy reward allocation algorithm. Note that the tradi-
tional Stackelberg algorithm takes only one kind of partici-
pants, and the greedy algorithm is centralized. We show the
dynamics of the task initiator’s utility in terms of different
sensory data requirements with a limited budget. Fig. 4(a)
shows that when the size of the sensing task increases, the task
initiator’s utility decreases slower than the two-stage and the
greedy algorithm. Fig. 4(b) demonstrates the three different
algorithms with different budgets and the same size of the
sensing task. We observe that when the budget increases,
the proposed algorithm can achieve higher initiator’s utility.
It can provide the sensory data market with a reasonable
pricing strategy, which leads the system to a better utility.
To investigate the impact of sensory data size and budget,
we then implement the simulations with different sizes of
sensory data requirement B in Fig. 5(a). We see that when
the size of the sensing task increases, the task initiator’s
utility decreases. However, the utility of the monthly-pay
participants increases. There is a joint point when the size
is 105 MB, which means the equilibrium point in this setting
of the simulation. When the size of the sensing task is too
big, there is not enough budget, which makes the utilities
become zero. We also implement the simulations with different
budgets D in Fig. 5(b). We see that when the budget increases,
the utilities become stable, because the computation ability of
the participants is bounded.
Fig. 6(a) demonstrates the domination of the monthly-pay
participants in the proposed sensory data market considering
a scenario with different CPU abilities w j of the monthly-pay
participants. With higher CPU ability, the sensing cost will
increase for monthly-pay participants; then, more instant-pay
participants will join the sensing task. However, because of
the “first mover’s advantage” of the monthly-pay participants,
they will still dominate the sensory data market. For a further
understanding of the “first-mover advantage” and the sen-
sory data market share, this article evaluates the proposed
model with different ratios of monthly-pay participants and
instant-pay participants, considering 20 participants in this
scenario with a sensory data amount of 50, 60, and 70 MB.
As shown in Fig. 6(b), when the ratio increases, the task
initiator’s utility gradually increases. However, with a small
sensory data amount requirement, the utility stays stable at
some point. The result is because the ratio of participants is
sufficient for the specific scenario. To verify that the proposed
algorithms can reach convergent, we further the dynamics of
the reward for participants in Fig. 7. There are 20 participants
with 500 units of reward and 200 units of sensory data.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
HU et al.: BLOCKCHAIN-BASED REWARD MECHANISM FOR MCS 187
Fig. 4. Utility of task initiator. (a) With different sensory data sizes D. (b) With different budgets B .
Fig. 5. Utilities of participants and the task initiator. (a) With different sensory data sizes D. (b) With different budgets B .
Fig. 6. Market share in blockchain-based MCS. (a) Monthly-pay participants with different computation ability values w j . (b) With different ratios of
participants in the sensory data market.
The proposed algorithm obtains the optimal reward strategy
within ten iterations. The result of the simulation infers the
feasibility of the proposed strategy in real life.
B. Blockchain Performance Analysis
Previous simulations on the mobile device-based blockchain
have been done in [41]. In this section, the performance
of the proposed blockchain-based MCS has been presented.
We implemented the Ethereum testnet on a computer with
Intel Core i5 CPU at 1.3 GHz and 4 GB of RAM.
The simulation considers a blockchain-based MCS includ-
ing different numbers of the monthly-pay participants and
instant-pay participants, three miners, and one task initiator,
which makes the topology of the MCS. In this topology, every
participant can communicate with the miner and each other.
First, miners will run the Registration contract to regis-
ter all the participants, including the monthly-pay/instant-pay
participants and the task initiator. Second, the identities of
participants are verified by the miners by running consensus
mechanism. Then, the miners will broadcast the sensing task
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
188 IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 7, NO. 1, FEBRUARY 2020
Fig. 7. Convergence of the proposed algorithm.
Fig. 8. Latency of blockchain-based MCS.
and run the Participant profile contract and the Sensing
task contract to negotiate with task initiator. Third, all the
miners will run the Profit evaluation contract to compute
their optimal strategy individually and execute the sensing task
by the Sensing task execution contract. At last, the miners
will run the Reward allocation contract to compensate all the
participants. Periodically, the miners will verify all the transac-
tions and build a new block. As shown in Fig. 8, we deploy the
contracts of the blockchain-based MCS framework, including
the key functions, such as system initialization, verification,
the three-stage game algorithms, and mining. It demonstrates
the proposed framework with a different number of partici-
pants. With the expansion, the proposed framework still shows
a tolerable latency of each function.
VII. FUTURE CHALLENGES
Blockchain technology has shown significant influence in
the IoT, Internet of Vehicles, and MCS with the advantages
of decentralization, trustworthiness, traceability, flexibility, and
so on. However, there are still open issues need to be consid-
ered in the future when adopting the blockchain technology
into the MCS.
A. Computation Overhead of Blockchain-Based MCS
Mobile devices work as sensors in the MCS with limited
power supplement, computation capacity, and storage, with
complex communication network conditions at the same time.
For the sensing and personal data privacy, the blockchain
will adopt more complicated cryptographic algorithms to
resolve the issue, which mobile devices could not afford.
Xiong et al. [42] considered edge computing as the network
enabler for mobile blockchain. However, this article focused
mostly on the pricing scheme of edge-computing resources,
but not the details in cooperation with the blockchain technol-
ogy. Moreover, MCS requires real-time sensory data, which
also enhance the need for high computation capacity. The chal-
lenge is improving the performance of the blockchain-based
MCS without sacrificing the security feature of the system.
B. Privacy and Trustworthiness of Blockchain-Based MCS
Although MCS is a novel form of traditional IoT, it has
unique features, such as the selfishness, mobility, and intelli-
gence of the users of the mobile devices. These features add
more requirements when it comes to privacy guarantee. In the
future research, dynamic access control is a crucial function
to guarantee the security in the blockchain-based MCS where
mobile device users may join the sensing task anytime and
anywhere, due to mobility.
C. Human-in-the-Loop Framework
MCS is a human-centric sensing framework. With the
feature of automation in blockchain, the human-centric fea-
ture can drift the framework from autonomy to intelligence
by leveraging human-in-the-loop. For example, by design-
ing a human-centric trust model [43], an MCS funded by
grass-rooted participants can perform services like an expert.
D. Sensory Data Market
MCS needs rational incentive mechanisms to stimulate
mobile device users to participate in sensing tasks. Pric-
ing the sensory data is one of the essential incentive
mechanisms in the MCS. According to the applications
of the blockchain-based cryptocurrencies, such as bitcoin,
a blockchain-based sensory data market will make sure that
the pricing scheme is fair and secure.
E. Tradeoff Among Performance, Security, and Resource
An MCS application requires real-time sensory data from
more participants, which requires higher performance from a
blockchain-based MCS when participants increase. To achieve
high performance and efficient resource allocates while main-
taining a high security level for the system is a crucial task
in the blockchain-based MCS. Initial attempt has been made
by Wang and Wang [44]. This article proposed asynchronous
consensus zones to scale blockchain system linearly without
compromising security.
VIII. CONCLUSION
The work presented in this article has two main contribu-
tions toward solving the challenges of MCS. First, it proposes
a blockchain-based MCS framework with a novel set of
smart contracts. Second, this article designs a three-stage
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
HU et al.: BLOCKCHAIN-BASED REWARD MECHANISM FOR MCS 189
Stackelberg game to maintain the number of participants by
considering this MCS scenario as a sensory data market. In the
three-stage Stackelberg game, the participants are classified
into monthly-pay participants and instant-pay participants.
This allows the monthly-pay participants to have a guarantee
of the sustainable contribution of the sensory data. Further-
more, the game preserves the fairness of the sensory data
market in cooperation with a secure reward allocation scheme
aided by blockchain technology.
The simulation of the proposed blockchain-based MCS
framework is twofold. First, we simulate the performance of
the three-stage game. In terms of the utility of the task initiator,
the improvement in the proposed reward strategy ranges from
2% to 10%, under the same participants’ reputation, compared
with the two-stage game. It also ranges from 2% to 20%
compared with the average reward strategy. It can also main-
tain the required market share for monthly-pay participants
while achieving sustainable sensory data provision. Second,
we simulate the performance of the block-based MCS with a
set of smart contracts to prove the feasibility of the proposed
work. Finally, this article also discusses the future challenges
in the cooperation of blockchain technology and MCS to
enlighten future works.
Currently, the bottleneck of blockchain deployment is the
consensus mechanism. Consensus mechanisms, such as the
computationally intensive PoW and Byzantine fault toler-
ance (BFT), cannot support a large number of IoT devices.
Therefore, in the future work, we will study the consensus
mechanism of the blockchain to support improved efficiency
and scalability.
APPENDIX
PROOF OF LEMMA 1
Based on the Lagrange function (15) and according to the
KKT conditions, it follows:
ri
∂L
∂(ri )
= 0; ∂L
∂(ri )
≤ 0; ri ≥ 0 (18)
d j
∂L
∂(d j )
= 0; ∂L
∂(d j )
≤ 0; d j ≥ 0 (19)
λ
⎛
⎝∑
i∈pL
ri +
∑
j∈pM
r j − B
⎞
⎠ = 0;
∑
i∈pL
ri +
∑
j∈pM
r j − B ≤ 0; λ ≥ 0 (20)
μ
⎛
⎝A
∑
i∈pL
ri − β +
∑
j∈pM
d j − Db
⎞
⎠ = 0;
A
∑
i∈pL
(ri − β)+
∑
j∈pM
d j − Db ≤ 0; μ ≥ 0 (21)
∑
j∈pM
κ j
(
Dmax
j − d j
) = 0;
Dmax
j − d j ≤ 0;
∑
j∈pM
κ j ≥ 0 (22)
where (18)–(21) denote the complementary slackness condi-
tion, and (23) and (24) are the first-order derivative conditions
of (15) with respect to ri and d j , respectively
∂L
∂ri
= Ai h(Ri )− Ai (2ri − β)− λ+ μAi (23)
∂L
∂ri−1
= Ai−1h(Ri−1)− Ai−1(2ri−1 − β)− λ+ μAi−1
...
∂L
∂d j
= 2d j h(R j )− r j + μ− κ j (24)
∂L
∂d j−1
= 2d j−1h(R j−1)− r j−1 + μ− κ j−1
...
∂L
∂λ
=
∑
i∈pL
ri +
∑
j∈pM
r j − B (25)
∂L
∂μ
=
∑
i∈pL
Ai (ri − β)+
∑
j∈pM
d j − D (26)
∂L
∂κ j
= Dmax
j − d j (27)
∂L
∂κ j−1
= Dmax
j−1 − d j−1
...
where (1/2wi h(Ri )) = Ai . Then, we will look for the interior
solutions when the following holds.
1) When μ = 0, κ j = 0, and λ = 0, by solving the
equations above, we can obtain the optimal strategy
ri
∗ = 1
2
(h(Ri )+ β)
d j
∗ = r j
2h j
when
∑
j∈pM r j ∈ [0, φ].
And when μ = 0, κ j = 0, and λ ≥ 0, we can obtain the
optimal strategy ∑
i∈pL
ri
∗ = B −
∑
j∈pM
r j
d j
∗ = r j
2h j
when
∑
j∈pM r j ∈ (ψ,∑ j∈pM rmax
j ).
2) When μ > 0, κ j ≥ 0, and λ = 0, by solving the
equations above, we can obtain the optimal strategy
ri
∗ = 1
2
(h(Ri )+ β)
d j
∗ = Dmax
j
when
∑
j∈pM r j ∈ (0, ψ).
And when μ = 0, κ j = 0, and λ ≥ 0, we can obtain the
optimal strategy
ri
∗ =wi
⎡
⎣D−
∑
j∈pM
Dmax
j − 1
4wi
∑
i∈pL
(h(Ri−1)−h(Ri ))
⎤
⎦
d j
∗ = Dmax
j
when
∑
j∈pM r j ∈ (ψ,∑ j∈pM rmax
j ).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
190 IEEE TRANSACTIONS ON COMPUTATIONAL SOCIAL SYSTEMS, VOL. 7, NO. 1, FEBRUARY 2020
3) When μ > 0, κ j = 0, and λ = 0, there is no solution
for this optimization problem.
In addition, when μ > 0, κ j = 0, and λ ≥ 0, we can
obtain the optimal strategy
ri
∗ =wi
⎡
⎣D−
∑
j∈pM
Dmax
j − 1
4wi
∑
i∈pL
(h(Ri−1)−h(Ri ))
⎤
⎦
d j
∗ = ξ
⎛
⎝D − τ +
∑
i∈pL
Ai
∑
j∈pM
r j +
∑
j∈pM
r j − r j−1
2h(R j−1)
⎞
⎠
when
∑
j∈pM r j ∈ (ϕ,∑ j∈pM rmax
j ).
4) When μ > 0, κ j ≥ 0, and no matter λ = 0 or λ ≥ 0,
we can obtain the optimal strategy
ri
∗ = 1
4
⎡
⎣2
⎛
⎝B −
∑
j∈pM
r j
⎞
⎠ −
∑
i∈pL
(h(Ri−1)− h(Ri ))
⎤
⎦
d j
∗ = Dmax
j
when
∑
j∈pM
r j ∈
⎛
⎝ψ, ∑
j∈pM
rmax
j
⎞
⎠ .
We can obtain the result
d∗
j =
⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
Dmax
j , if
∑
j∈pM
r j ∈ (0, φ)
⎛
⎝ψ, ∑
j∈pM
rmax
j
⎞
⎠ ;
r j
2h(R j )
, if
∑
j∈pM
r j ∈
⎛
⎝ψ, ∑
j∈pM
rmax
j
⎞
⎠ ;
ξ
⎛
⎝D − τ+
∑
i∈pL
Ai
∑
j∈pM
r j +
∑
j∈pM
r j − r j−1
2h(R j−1)
⎞
⎠ ,
if
∑
j∈pM
r j ∈
⎛
⎝ϕ, ∑
j∈pM
rmax
j
⎞
⎠
(28)
r∗
i =
⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
h(Ri )
2
, if
∑
j∈pM
r j ∈ (0, φ);
1
4
⎡
⎣2(B −
∑
j∈pM
r j )−
∑
i∈pL
(h(Ri−1)− h(Ri ))
⎤
⎦ ,
if
∑
j∈pM
r j ∈
⎛
⎝ψ, ∑
j∈pM
rmax
j
⎞
⎠ ;
wi
⎡
⎣D −
∑
j∈pM
Dmax
j − 1
4wi
∑
i∈pL
(h(Ri−1)−h(Ri ))
⎤
⎦ ,
if
∑
j∈pM
r j ∈
⎛
⎝ϕ, ∑
j∈pM
rmax
j
⎞
⎠
(29)
where
ξ = 1
1 + h(R j )
∑
j∈pM
1
h(R j−1)
τ = B
∑
i∈pL
Ai −
∑
i∈pL
Aiβ
φ = 2
∑
j∈pM
h j Dmax
j
ψ = B − 1
2
∑
i∈pL
hi
ϕ =
∑
j∈pM
1
h(R j )
⎛
⎝D − 1
4wi
∑
i∈pL
hi
⎞
⎠ .
(30)
Until now, this lemma is proven.
REFERENCES
[1] F. Y. Wang, “The emergence of intelligent enterprises: From CPS to
CPSS,” IEEE Intell. Syst., vol. 25, no. 4, pp. 85–88, Jul./Aug. 2010.
[2] N. Vastardis and K. Yang, “Mobile social networks: Architectures, social
properties, and key research challenges,” IEEE Commun. Surveys Tuts.,
vol. 15, no. 3, pp. 1355–1371, 3rd, Quart. 2013.
[3] R. Pryss, M. Reichert, J. Herrmann, B. Langguth, and W. Schlee,
“Mobile crowd sensing in clinical and psychological trials—A case
study,” in Proc. IEEE 28th Int. Symp. Comput.-Based Med. Syst.,
Jun. 2015, pp. 23–24.
[4] P. Zhou, Y. Zheng, and M. Li, “How long to wait?: Predicting bus arrival
time with mobile phone based participatory sensing,” in Proc. 10th Int.
Conf. Mobile Syst. Appl. Services, 2012, pp. 379–392.
[5] Y. Tobe, I. Usami, Y. Kobana, J. Takahashi, G. Lopez, and N. Thepvilo-
janapong, “VCity map: Crowdsensing towards visible cities,” in Proc.
SENSORS, Nov. 2014, pp. 17–20.
[6] F. Calabrese, M. Colonna, P. Lovisolo, D. Parata, and C. Ratti, “Real-
time urban monitoring using cell phones: A case study in Rome,” IEEE
Trans. Intell. Transp. Syst., vol. 12, no. 1, pp. 141–151, Mar. 2011.
[7] C. Fishwick, “Tomnod–the online search party looking for malaysian
airlines flight mh370,” Guardian, vol. 14, p. 37, Mar. 2014.
[8] J. Liu et al., “Characterizing data deliverability of greedy routing in
wireless sensor networks,” IEEE Trans. Mobile Comput., vol. 17, no. 3,
pp. 543–559, Mar. 2018.
[9] L. G. Jaimes, I. J. Vergara-Laurens, and A. Raij, “A survey of incentive
techniques for mobile crowd sensing,” IEEE Internet Things J., vol. 2,
no. 5, pp. 370–380, Oct. 2015.
[10] Z. Song, C. H. Liu, J. Wu, J. Ma, and W. Wang, “QoI-aware multitask-
oriented dynamic participant selection with budget constraints,” IEEE
Trans. Veh. Technol., vol. 63, no. 9, pp. 4618–4632, Nov. 2014.
[11] J. Hu, K. Yang, L. Hu, and K. Wang, “Reward-aided sensing task
execution in mobile crowdsensing enabled by energy harvesting,” IEEE
Access, vol. 6, pp. 37604–37614, 2018.
[12] K. Wang, K. Yang, and C. S. Magurawalage, “Joint energy minimization
and resource allocation in C-RAN with mobile cloud,” IEEE Trans.
Cloud Comput., vol. 6, no. 3, pp. 760–770, Jul. 2018.
[13] K. Yang, S. Ou, and H.-H. Chen, “On effective offloading services
for resource-constrained mobile devices running heavier mobile Internet
applications,” IEEE Commun. Mag., vol. 46, no. 1, pp. 56–63, Jan. 2008.
[14] C. Zhao, S. Yang, P. Yan, Q. Yang, X. Yang, and J. McCann, “Data
quality guarantee for credible caching device selection in mobile Crowd-
sensing systems,” IEEE Wireless Commun., vol. 25, no. 3, pp. 58–64,
Jun. 2018.
[15] H. Xiong, D. Zhang, G. Chen, L. Wang, and V. Gauthier, “CrowdTasker:
Maximizing coverage quality in piggyback Crowdsensing under budget
constraint,” in Proc. IEEE Int. Conf. Pervasive Comput. Commun.
(PerCom), Mar. 2015, pp. 55–62.
[16] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,”
Manubot, 2019.
[17] M. Swan, Blockchain: Blueprint for a New Economy. Newton, MA,
USA: O’Reilly Media, 2015.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
HU et al.: BLOCKCHAIN-BASED REWARD MECHANISM FOR MCS 191
[18] Z. Li, J. Kang, R. Yu, D. Ye, Q. Deng, and Y. Zhang, “Consortium
blockchain for secure energy trading in industrial Internet of Things,”
IEEE Trans. Ind. Informat., vol. 4, no. 8, pp. 3690–3700, Aug. 2018.
[19] N. Szabo, “Formalizing and securing relationships on public networks,”
First Monday, vol. 2, no. 9, Sep. 1997.
[20] M. A. Ferrag, M. Derdour, M. Mukherjee, A. Derhab, L. Maglaras,
and H. Janicke, “Blockchain technologies for the Internet of Things:
Research issues and challenges,” 2018, arXiv:1806.09099. [Online].
Available: https://arxiv.org/abs/1806.09099
[21] N. Kshetri, “Can blockchain strengthen the Internet of Things?” IT Prof.,
vol. 19, no. 4, pp. 68–72, 2017.
[22] K. Christidis and M. Devetsikiotis, “Blockchains and smart contracts for
the Internet of Things,” IEEE Access, vol. 4, pp. 2292–2303, 2016.
[23] O. Alphand et al., “IoTChain: A blockchain security architecture for
the Internet of Things,” in Proc. IEEE Wireless Commun. Netw. Conf.
(WCNC), Apr. 2018, pp. 1–6.
[24] Y. Zhang, and J. Wen, “The IoT electric business model: Using
blockchain technology for the Internet of Things,” Peer-to-Peer Netw.
Appl., vol. 10, no. 4, pp. 983–994, 2017.
[25] B. Cao et al., “When Internet of Things meets Blockchain: Challenges
in distributed consensus,” 2019, arXiv:1905.06022. [Online]. Available:
https://arxiv.org/abs/1905.06022
[26] M. Li et al., “Crowdbc: A blockchain-based decentralized framework
for crowdsourcing,” IACR Cryptol. ePrint Arch., Univ. California, Santa
Barbara, CA, USA, Tech. Rep, 444:2017, 2017.
[27] J. Wang, M. Li, Y. He, H. Li, K. Xiao, and C. Wang, “A blockchain based
privacy-preserving incentive mechanism in Crowdsensing applications,”
IEEE Access, vol. 6, pp. 17545–17556, 2018.
[28] S. Delgado-Segura, C. Tanas, and J. Herrera-Joancomartí, “Reputation
and reward: Two sides of the same bitcoin,” Sensors, vol. 16, no. 6,
p. 776, 2016.
[29] D. Chatzopoulos, S. Gujar, B. Faltings, and P. Hui, “Privacy pre-
serving and cost optimal mobile Crowdsensing using smart con-
tracts on blockchain,” 2018, arXiv:1808.04056. [Online]. Available:
https://arxiv.org/abs/1808.04056
[30] S. Feng, W. Wang, D. Niyato, D. I. Kim, and P. Wang, “Competitive
data trading in wireless-powered Internet of Things (IoT) Crowdsensing
systems with blockchain,” 2018, arXiv:1808.10217. [Online]. Available:
https://arxiv.org/abs/1808.10217
[31] C. Cai, Y. Zheng, and C. Wang, “Leveraging Crowdsensed data streams
to discover and sell knowledge: A secure and efficient realization,” in
Proc. IEEE 38th Int. Conf. Distrib. Comput. Syst. (ICDCS), Jul. 2018,
pp. 589–599.
[32] F. Shi, Z. Qin, D. Wu, and J. McCann, “MPCSToken: Smart contract
enabled fault-tolerant Incentivisation for mobile P2P crowd services,” in
Proc. IEEE 38th Int. Conf. Distrib. Comput. Syst. (ICDCS), Jul. 2018,
pp. 961–971.
[33] B. Jia, T. Zhou, W. Li, Z. Liu, and J. Zhang, “A Blockchain-based loca-
tion privacy protection incentive mechanism in crowd sensing networks,”
Sensors, vol. 18, no. 11, p. 3894, 2018.
[34] H. Shah-Mansouri, V. W. S. Wong, and J. Huang, “An incentive frame-
work for mobile data offloading market under price competition,” IEEE
Trans. Mobile Comput., vol. 16, no. 11, pp. 2983–2999, Nov. 2017.
[35] M. Pouryazdan, B. Kantarci, T. Soyata, L. Foschini, and H. Song, “Quan-
tifying user reputation scores, data trustworthiness, and user incentives
in mobile crowd-sensing,” IEEE Access, vol. 5, pp. 1382–1397, 2017.
[36] T. T. Luo, S. S. Kanhere, J. Huang, S. K. Das, and F. Wu, “Sustain-
able incentives for mobile Crowdsensing: Auctions, lotteries, and trust
and reputation systems,” 2017, arXiv:1701.00248. [Online]. Available:
https://arxiv.org/abs/1701.00248
[37] H. Von Stackelberg, Market Structure and Equilibrium. Berlin, Ger-
many: Springer-Verlag, 2010.
[38] J. Ren, Y. Zhang, K. Zhang, and X. S. Shen, “SACRM: Social aware
crowdsourcing with reputation management in mobile sensing,” Comput.
Commun. J., vol. 65, pp. 55–65, Jul. 2015.
[39] M. J. Osborne et al., An Introduction to Game Theory. New York, NY,
USA: Oxford Univ. Press, 2004.
[40] D. Gale, H. W. Kuhn, and A. W. Tucker, “Linear programming and
the theory of games,” in Activity Analysis of Production and Allocation,
vol. 13. 1951, pp. 317–335.
[41] K. Suankaewmanee, D. T. Hoang, D. Niyato, S. Sawadsitang,
P. Wang, and Z. Han, “Performance analysis and application of mobile
blockchain,” in Proc. Int. Conf. Comput. Netw. Commun. (ICNC),
Mar. 2018, pp. 642–646.
[42] Z. Xiong, S. Feng, D. Niyato, P. Wang, and Z. Han, “Optimal pricing-
based edge computing resource management in mobile blockchain,” in
Proc. IEEE Int. Conf. Commun. (ICC), May 2018, pp. 1–6.
[43] B. Yu, J. Wright, S. Nepal, L. Zhu, J. Liu, and R. Ranjan, “IoTChain:
Establishing trust in the Internet of Things ecosystem using blockchain,”
IEEE Cloud Comput., vol. 5, no. 4, pp. 12–23, Aug. 2018.
[44] J. Wang and H. Wang, “Monoxide: Scale out blockchains with asyn-
chronous consensus zones,” in Proc. 16th USENIX Symp. Networked
Syst. Design Implement. (NSDI), 2019, pp. 95–112.
Jiejun Hu received the M.Sc. and Ph.D. degrees
from the School of Computer Science and Technol-
ogy, Jilin University, Changchun, China, in 2015 and
2019, respectively.
She is currently a Senior Research Officer with
the University of Essex, Colchester, U.K. Her
research areas are mobile crowdsensing, communi-
cation networks, future network and technology, and
blockchain and network security.
Kun Yang (SM’08) received the Ph.D. degree from
the Department of Electronic and Electrical Engi-
neering, University College London (UCL), London,
U.K., in 2002.
Before joining the University of Essex, Colchester,
U.K., in 2003, he worked at UCL on several Euro-
pean Union (EU) research projects for several years.
He is currently the Chair Professor of the School of
Computer Science and Electronic Engineering, Uni-
versity of Essex, leading the Network Convergence
Laboratory (NCL). He manages research projects
funded by various sources, such as U.K. Engineering and Physical Sciences
Research Council (EPSRC), EU FP7/H2020, and industries. He has published
more than 150 journal articles and filed ten patents. His main research interests
include wireless networks and communications, Internet of Things (IoT)
networking, data and energy integrated networks, and mobile edge computing.
Dr. Yang has been a fellow of the Institute of Engineering and Technology
(IET) since 2009. He serves on the editorial boards for the IEEE and non-IEEE
journals.
Kezhi Wang received the B.E. and M.E. degrees
from the School of Automation, Chongqing Univer-
sity, Chongqing, China, in 2008 and 2011, respec-
tively, and the Ph.D. degree in engineering from the
University of Warwick, Coventry, U.K., in 2015.
He was a Senior Research Officer with the Uni-
versity of Essex, Colchester, U.K. He is currently a
Senior Lecturer with the Department of Computer
and Information Sciences, Northumbria University,
Newcastle upon Tyne, U.K. His research interests
include wireless communications, mobile edge com-
puting, UAV communications, and machine learning.
Kai Zhang received the B.E. degree in information
and computing science from the Anhui University
of Technology, Ma’anshan, China, in 2011, and
the M.E. degree in economics from the Zhongnan
University of Economics and Law, Wuhan, China,
in 2014, and the University of Essex, Colchester,
U.K., in 2018, where he is currently pursuing the
Ph.D. degree in economics.
His research interests include game theory and
its applications, contract theory, organizational eco-
nomics, and industrial organization.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:44:11 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Black & White)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Tags
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 524288
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments true
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /AdobeArabic-Bold
    /AdobeArabic-BoldItalic
    /AdobeArabic-Italic
    /AdobeArabic-Regular
    /AdobeHebrew-Bold
    /AdobeHebrew-BoldItalic
    /AdobeHebrew-Italic
    /AdobeHebrew-Regular
    /AdobeHeitiStd-Regular
    /AdobeMingStd-Light
    /AdobeMyungjoStd-Medium
    /AdobePiStd
    /AdobeSansMM
    /AdobeSerifMM
    /AdobeSongStd-Light
    /AdobeThai-Bold
    /AdobeThai-BoldItalic
    /AdobeThai-Italic
    /AdobeThai-Regular
    /ArborText
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /BellGothicStd-Black
    /BellGothicStd-Bold
    /BellGothicStd-Light
    /ComicSansMS
    /ComicSansMS-Bold
    /Courier
    /Courier-Bold
    /Courier-BoldOblique
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /Courier-Oblique
    /CourierStd
    /CourierStd-Bold
    /CourierStd-BoldOblique
    /CourierStd-Oblique
    /EstrangeloEdessa
    /EuroSig
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Helvetica
    /Helvetica-Bold
    /Helvetica-BoldOblique
    /Helvetica-Oblique
    /Impact
    /KozGoPr6N-Medium
    /KozGoProVI-Medium
    /KozMinPr6N-Regular
    /KozMinProVI-Regular
    /Latha
    /LetterGothicStd
    /LetterGothicStd-Bold
    /LetterGothicStd-BoldSlanted
    /LetterGothicStd-Slanted
    /LucidaConsole
    /LucidaSans-Typewriter
    /LucidaSans-TypewriterBold
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MinionPro-Bold
    /MinionPro-BoldIt
    /MinionPro-It
    /MinionPro-Regular
    /MinionPro-Semibold
    /MinionPro-SemiboldIt
    /MVBoli
    /MyriadPro-Black
    /MyriadPro-BlackIt
    /MyriadPro-Bold
    /MyriadPro-BoldIt
    /MyriadPro-It
    /MyriadPro-Light
    /MyriadPro-LightIt
    /MyriadPro-Regular
    /MyriadPro-Semibold
    /MyriadPro-SemiboldIt
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /Symbol
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Webdings
    /Wingdings-Regular
    /ZapfDingbats
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 600
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 600
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 300
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 900
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.33333
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /Unknown
  /CreateJDFFile false
  /Description <<
    /ENU ()
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice