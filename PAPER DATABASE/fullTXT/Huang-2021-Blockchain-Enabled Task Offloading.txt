WCMC_7518534 1..12
Research Article
Blockchain-Enabled Task Offloading and Resource Allocation in
Fog Computing Networks
Xiaoge Huang,1 Xuesong Deng ,1 Chengchao Liang ,2 and Weiwei Fan1
1School of Communication and Information Engineering, Chongqing University of Posts and Telecommunications,
Chongqing 400065, China
2Carleton University, Ottawa, Canada
Correspondence should be addressed to Chengchao Liang; liangcc@cqupt.edu.cn
Received 10 September 2021; Accepted 15 November 2021; Published 20 December 2021
Academic Editor: Yushu Zhang
Copyright © 2021 Xiaoge Huang et al. This is an open access article distributed under the Creative Commons Attribution License,
which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.
To address the data security and user privacy issues in the task offloading process and resource allocation of the fog computing
network, a blockchain-enabled fog computing network task offloading model is proposed in this paper. Furthermore, to reduce
the network utility which is defined as the total energy consumption of the fog computing network and the total delay of the
blockchain network, a blockchain-enabled fog computing network task offloading and resource allocation algorithm (TR-
BFCN) is proposed to jointly optimize the task offloading decision and resource allocation. Finally, the original nonconvex
optimization problem is converted into two suboptimization problems, namely, task offloading decisions and computational
resource allocations. Moreover, a two-stage Stackelberg game model is designed to obtain the optimal amount of purchased
resource and the optimal resource pricing. Simulation results show that the proposed TR-BFCN algorithm can effectively
reduce the network utility compared with other algorithms.
1. Introduction
With the rapid growth of smart devices and the development
of the Internet of Things (IoT), the traditional network
architecture is facing a huge flow load problem [1]. As a sup-
plement to cloud computing, fog computing could randomly
deploy a large number of fog nodes (FNs) at the edge of the
network to deal with the real-time application requirements
generated by devices and improve network performance [2].
In the distributed fog network, IoT devices (IDs) interact
with FNs in real time. Due to the mobility of IDs, service
migration across FNs will occur during the interaction [3].
Meanwhile, because FNs are distributed in an unsupervised
environment, the security of the user’s data during the task
processing is an important challenge for fog computing net-
works (FCNs) [4]. Currently, to ensure the user privacy and
data security in fog computing networks, the following two
methods are taken into account:
(i) Method 1: develop a reliable, effective mechanism to
evaluate the reputation of IDs and FNs. Reputation
of IDs and FNs is used to indicate their credibility
[5]. If the user privacy is leaked or data tampering
occurs, the reputation of the associated nodes will
be decreased. Reference [6] proposed a context-
aware trust evaluation algorithm to calculate the
trustworthiness of users in FCNs. Reference [7] pro-
posed a trust forwarding mechanism in FCNs, which
divided the network into edge communication com-
munities, and set the reputation of nodes in the com-
munity based on actual factors such as the
communication probability and service degree. Ref-
erence [8] considered the reputation of vehicles in
distributed Internet of Vehicles. The authors mainly
considered familiarity, similarity, and timeliness to
calculate the local reputation of vehicles. Finally,
the local reputation and the historical reputation
were combined to calculate the globe reputation of
vehicles. Reference [9] proposed a resource alloca-
tion scheme for community-based fog computing
based on reputation mechanism. A user first submits
his/her task request to the community-based fog
Hindawi
Wireless Communications and Mobile Computing
Volume 2021, Article ID 7518534, 12 pages
https://doi.org/10.1155/2021/7518534
https://orcid.org/0000-0002-5017-0142
https://orcid.org/0000-0002-4125-2840
https://creativecommons.org/licenses/by/4.0/
https://doi.org/10.1155/2021/7518534
network, and then, the fog server makes a reliable
resource allocation process based on multiple-layer
communities and reputation calculation. Reference
[10] proposed innovative approach that estimates
the initial reputation values of newcomer services in
web service recommendation systems through the
use of the fog node’s (service provider) reputation
and ANN model. The quality of services and reputa-
tion of previously published services are used to esti-
mate the reputation values of newcomer services
(ii) Method 2: combine blockchain technology to achieve
reliable data transmission [11]. Blockchain has unique
features such as fault tolerance, security, and immuta-
bility, as well as the potential to provide decentralized
databases and network operations [12]. Blockchain
technology is used to realize the verification and trace-
ability by building a decentralized ledger to record
transactions between users [13]. Different from tradi-
tional digital ledgers, blockchain does not rely on a cen-
tral authority [14]. In addition, the consistency of the
ledgers between nodes is ensured by the consensus
mechanism. Reference [15] proposed a user privacy
protection scheme based on blockchain and federated
learning (Blockchain-Enabled Federated Learning
(FL-Block)), which proposed an autonomous learning
process without any central trust agency to maintain
the global model, and complete data processing and
transmission through the blockchain Proof-of-Work
mechanism and consensus mechanism [16]. In addi-
tion, the authors jointly considered the communica-
tion delay, consensus delay, and computation cost to
optimize the block generation rate. Reference [17]
studied the data security and user privacy issues in
the vehicle fog networks. A lightweight anonymous
authentication mechanism assisted by blockchain was
proposed to realize the flexibility and anonymity of
cross-center authentication, reduce the communica-
tion delay of data authentication, and build a light-
weight network authentication mechanism. Reference
[18] proposed a data sharing model based on block-
chain. The data owner processes the original data gen-
eration according to the algorithm provided by the
data requester. The data report is returned to the
demander, and the data sharing platform supervises
all the behaviors of the sharing parties and writes the
entire sharing process into the blockchain, which not
only satisfies the demander’s use of data but also avoids
the risk of data leakage by the data holder
However, due to the limited computing capability of
FNs, when FNs process task offloading and blockchain veri-
fication at the same time, there could be a shortage of
resources, resulting in the task offloading time increasing
or the block generation and verification delay increasing,
which affects the transaction’s recording time in the block-
chain [19]. In order to optimize the allocation of computing
capability and ensure the security of the network, we pro-
pose a task offloading and resource allocation algorithm in
blockchain-enabled fog computing network (TR-BFCN) in
this paper. The TR-BFCN algorithm is aimed at minimizing
network utility, i.e., the total energy consumption of the
FCN and the total delay of the blockchain network, by
jointly optimizing the task offloading decision and resource
allocation between two networks.
2. Network Modeling and Analysis
2.1. Network Model. A blockchain-based fog computing net-
work (FCN) is shown in Figure 1, which includes the device layer
and the fog layer. The fog layer consists of geodistributed fog
nodes (FNs) to provide computing, storage, and communication
resources to nearby IoT devices (IDs). Besides, blockchain is
deployed in the fog layer to verify and record transactions. The
task offloading process is composed of three parts: master node
election, resource pricing and offloading decision-making, and
blockchain consensus process. The Authorized Service Center
(ASC) is a trusted edge server, which is responsible for monitor-
ing the FNs in the coverage area and the authentication process
of network entities. The ASC will generate a unique public-
private key pair and identification code for each entity, as well
as the entity’s cancellation and other functions.
Firstly, IDs should finish the registration and authentica-
tion through the ASC, then they could offload tasks to asso-
ciated FNs for processing. FNs with higher reputation value
will be elected as blockchain nodes, which will not only pro-
vide offloading services but also block consensus services.
Secondly, IDs purchase computing resources from FNs
to transfer the offloading tasks. Then, the task offloading
decisions and resource allocation will be performed to min-
imize the network utility.
Finally, the task offloading process in the FCN is
regarded as a transaction record. The elected blockchain
nodes will package transactions to generate blocks and per-
form a block consensus verification process. The verified
blocks will be added to the blockchain network, to guarantee
the network security and transactions traceability. The
blockchain technology is used to preserve transactions
among distributed nodes, which requires additional storage
capacity on devices. Moreover, the consensus algorithms
used to ensure the data security of devices also require addi-
tional computing and communication resources.
2.2. Communication Model. Let fDk, Ckg denotes the task
offloading request sent by ID k, where Dk (bit) is the size
of the task and Ck (cycle/bit) is the task calculation fre-
quency, i.e., the task processing intensity. The total system
bandwidth W is divided into N resource blocks (RB) with
equal bandwidth, namely, B =W/N . To avoid interference
between IDs during task offloading, each RB could be only
assigned to one ID and one FN. The uplink transmission
rate of ID k offloading task to FN m on RB n is given as
rk,n,m tð Þ = B log2 1 + pk,n,m hk,n,m
�� ��2
σ2
 !
, ð1Þ
where pk,n,m denotes the transmission power from ID k to
FN m through RB n; hk,n,mðtÞ = lk,m ⋅ gk,n,m represents the
2 Wireless Communications and Mobile Computing
channel gain value, including large-scale fading lk,m =ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
csk,md
−α
k,m
q
and small-scale fading gk,n,m, where c represents
the average channel gain at 1 km; sk,m is the logarithmic
shadow fading variable with mean 0 and standard deviation
σsh; dk,m denotes the distance from ID k to FN m; and α is
the path loss index. gk,n,m is the independent and identically
distributed complex Gaussian random variables with zero
mean unit variance. σ2 represents additive white Gaussian
noise.
Therefore, the offloading delay ttrk,m from ID k to FN m
by RB n is given as
ttrk,m = 〠
M
m=1
〠
N
n=1
ak,m
xkmDk
bn,mrk,n,m
, ð2Þ
where αk,m is the allocation index between ID k and FN m.
And αk,m = 1 indicates that ID k will offload tasks to FN m,
while αk,m = 0 represents that ID k will not offload tasks to
FN m; bm,n is the allocation index between RB n and FN m
. bm,n = 1 indicates that ID k will offload tasks to FN m on
RB n, and bm,n = 0 represents that ID k will not offload tasks
to FNm on RB n. Moreover, ID k could offload tasks to mul-
tiple FNs, and xkm indicates the task offloading proportional
coefficient from ID k to FN m.
Thus, the total transmission energy consumption of the
fog computing network can be expressed as
Efog
tr = 〠
K
k=1
〠
N
n=1
〠
M
m=1
ak,m
pk,n,mx
k
mDk
bm,nrk,n,m tð Þ
" #
: ð3Þ
2.3. Calculation Model. For the computation phase, we
mainly consider the task computation delay and the compu-
tation energy consumption of FN m.
The task computation delay of FN mtserk,m is given by
tserk,m = xkmDkCk
f Fð Þ
k,m
, ð4Þ
whereCk denotes the number of CPU cycles required to process
the unit data size and f ðFÞk,m (cycle/s) represents the computation
resources provided by FN m for the task offloaded from ID k.
Thus, the computation energy consumption of FN m is
given as
Ecal
k,m = κm f Fð Þ
k,m
� �2
xkmDkCk, ð5Þ
where κm is the energy consumption coefficient of FN m.
Blockchain node set with
high reputation value
High
reputation
Current
master node
1. The master node
broadcasts a new
block with signature
3. Verification nodes
feedback the
verification result
2. The remaining idle
master nodes feedback
the verification results
Election based on
reputation value
Transaction records
(3) Consensus process
(1) Master node election process based on reputation
(2) Resource pricing and purchase
and offloading decisions
Malicious
node
Fog network
Blockchain master node
Blockchain verification node
Fog node set with
reputation value
Reputation value
Authorized
service center
Blockchain network
Figure 1: Blockchain-enabled fog computing network scenario.
3Wireless Communications and Mobile Computing
Therefore, the computation energy consumption of the
FCN could be calculated by
Efog
cal = 〠
K
k=1
〠
N
n=1
〠
M
m=1
ak,mbm,n κm f Fð Þ
k,m
� �2
xkmDkCk
� �
: ð6Þ
In summary, the total energy consumption of the FCN
includes the transmission energy consumption and the com-
putation energy consumption, which can be expressed as
Efog = 〠
K
k=1
〠
N
n=1
〠
M
m=1
ak,m
pk,n,mx
k
mDk
bn,mrk,n,m
+ bn,mκm f Fð Þ
k,m
� �2
xkmDkCk
 !
:
ð7Þ
2.4. Blockchain Network Consensus Model. Based on block-
chain technology, the FCN could effectively prevent malicious
FNs from tampering or copying user data and improve the reli-
ability of data transmission. In the blockchain network, trans-
action records will be processed in the following two steps:
(1) Block generation, where the transaction records are
packaged to generate blocks through the master
node
(2) Block consensus, where the master node will broad-
cast the new block to verification nodes to form a
unified ledger information; then, all verification
nodes compare the hash value and return the verifi-
cation results to the master node through their pri-
vate key signatures
If the verification is passed, the master node will add the
new block to the blockchain.
Assume there are L blockchain nodes, the master node
mb could process transaction records, and the block genera-
tion delay is given as
tblockmb
= IbCb
f Bð Þ
mb
, ð8Þ
where f ðBÞmb
, mb, and Cb denote the computation frequency,
the task processing intensity, and the processing data size
of the master node mb, respectively. Assume that all verifica-
tion nodes are honest and reliable; the consensus process is
divided into two steps: block propagation and block verifica-
tion. In the block propagation phase, the propagation rate
from the master node mb to the verification node mb
′ is
Rmb ,mb
′ = min
mb
′ ∈L,mb
′ ≠mb
Rmb ,mb
′
n o
: ð9Þ
Correspondingly, the block transmission delay tpro
mb ,mb
′ =
Sb/Rmb ,mb
′ , where Sb represents the block size.
In the block verification phase, the verification node will
confirm the content of the block broadcasted by the master
node, with the verification delay
tver
mb ,mb
′ = max
mb
′ ≠mb
δb
f Bð Þ
mb
′
, ð10Þ
where δb is the number of CPU cycles required for block
verification and f ðBÞ
mb
′ represents the computation frequency
to verify the block.
Therefore, the total delay of the blockchain network is
expressed as
tblock = 〠
L
mb=1
χmb
IbCb
f Bð Þ
mb
+ Sb
Rmb ,mb
′
+ tver
mb ,mb
′
 !
, ð11Þ
where χmb
represents the master node indication parameter.
If χmb
= 1, FN mb will be elected as the master node.
3. Optimization Problem Modeling
To minimize the network utility, namely, the sum of the
total energy consumption of the FCN and the total delay
of the blockchain network, the optimization problem could
be represented as
min
ak,m ,bm,n ,x
k
m ,
f Fð Þ
k,m ,χmb
,f Bð Þ
mb
w = α〠
K
k=1
〠
M
m=1
〠
N
n=1
ak,m
pk,n,mx
k
mDk
bm,nrk,m,n
+ κm f Fð Þ
k,m
� �2
xkmDkCk
" #
+ 1 − αð Þβ 〠
L
mb=1
χmb
IbCb
f Bð Þ
mb
+ Sb
Rmb ,mb
′
+ tver
mb ,mb
′
 !
,
s:t:C1 : 〠
K
k=1
ak,m ≥ 1,∀m ; 〠
M
m=1
ak,m ≥ 1,∀k,
C2 : 〠
M
m=1
bn,m ≤ 1,∀n ; 〠
N
n=1
bn,m ≥ 1,∀n,
C3 : 〠
M
m=1
αk,mf
Fð Þ
k,m ≤ 〠
M
m=1
f ∗k,m,∀k,
C4 : 〠
K
k=1
αk,mf
Fð Þ
k,m + f Bð Þ
mb
≤ Fmax
m ,∀m,
C5 : 〠
M
m=1
〠
N
n=1
ak,m
xkmDk
bm,nrk,m,n
+ xTmDkCk
f Fð Þ
k,m
" #
≤ τTk ,∀k,
C6 : 〠
M
m=1
xkmDk =Dk,∀k,
C7 : 〠
L
mb=1
χmb
= 1,∀mb ∈ L,
4 Wireless Communications and Mobile Computing
C8 : ak,m, bm,n, xkm, α, β, χmb
, κm ∈ 0, 1f g,∀k,m, n,mb,C9
: f Fð Þ
k,m ≥ 0, f Bð Þ
mb
≥ 0,∀m,mb,
ð12Þ
where α is the proportion of the total energy consumption of
the FCN in the optimization goal; C1 indicates that an ID
can select multiple FNs to offload tasks; C2 indicates that
an RB can only be allocated to one FN, but each FN can
be allocated multiple RBs; C3 indicates that the computation
resources allocated by the FCN cannot exceed the purchased
computation resources; C4 indicates the computation
resources constraint; C5 indicates that the total delay of the
FCN cannot exceed the maximum tolerable delay of the task;
C6 is the task size constraint; and C7 is the blockchain mas-
ter node constraint, which ensures that there is only one
master node in each processing cycle.
4. Task Offloading and Resource Allocation
Scheme in Blockchain-Enabled Fog
Computing Network
To optimize the computation resource allocation of the FCN
and the blockchain network, in this paper, we propose the
task offloading and resource allocation algorithm in
blockchain-enabled fog computing network (TR-BFCN),
which includes the Differentiated Resource Pricing Algo-
rithm (DRPA), task offloading decision algorithm, and com-
putation resource allocation algorithm.
4.1. Computing Resource Allocation Algorithm Based on
Differentiated Pricing. Firstly, a two-stage Stackelberg game
is considered to optimize the amount of resources to pur-
chase and the associated price. In the Stackelberg game, the
cost of ID k to purchase computation resource from FN m
is expressed as
cDk,m = pk,mf k,m, ð13Þ
where pk,m denotes the price for ID k to purchase the com-
putation resources from FN m, and f k,m represents the
amount of computation resources purchased by ID k from
FN m.
The revenue function of ID k to offload tasks to FN m is
defined as
uk,m = ϖ × log 1 + f k,m
Ck
� �
, ð14Þ
where ϖ is the benefit factor of ID k and Ck denotes the
number of CPU cycles required to process the unit data size.
The offloading revenue of IDs is related to the amount of off-
loading tasks f k,m/Ck. To maximize the benefits of ID k, the
optimization problem is modeled as
max
f k,m
Uk,m f k,m
� 	
= 〠
M
m=1
uk,m − cDk,m
� 	
,
s:t:  C1ð Þ: f minð Þ
k,m ≤ f k,m ≤ f maxð Þ
k,m ,
ð15Þ
where f ðminÞ
k,m and f ðmaxÞ
k,m denote the minimum and the maxi-
mum amount of computation resources that could be pur-
chased by ID k from FN m, respectively.
The computation energy cost of offloading tasks from ID
k to FN m is defined as
cFk,m = κmf
2
k,m, ð16Þ
where κm is the energy consumption coefficient of FN.
Therefore, the utility function of FN m is defined as
um = 〠
K
k=1
pk,mf k,m − cFk,m
� 	
, ð17Þ
where pk,m is the price of computation resources provided by
FN m for ID k.
To maximize the utility of FN m, the price to purchase
computation resources should be optimized. The dynamic
price optimization problem is modeled as
max
pk,m
Uk,m pk,m
� 	
= 〠
K
k=1
pk,mf k,m − cFk,m
� 	
,
s:t:  C1ð Þ: pk,m ≥ pcostk,m ,
ð18Þ
where C1 indicates that the price is not lower than the cost
of FNm. To ensure that the revenue of FNm is nonnegative,
let um = 0, and we have pcostk,m = κmf
ðminÞ
k,m .
SinceUk,mð f k,mÞis a convex function off k,m, the con-
straint is a linear function. The optimization problem is con-
vex, which can be solved by the Lagrange multiplier method.
The Lagrange function is defined as
LDk,m f k,m, λ, υ
� 	
=Uk,m f k,m
� 	
+ 〠
M
m=1
λm f k,m − f maxð Þ
k,m
� �� �
+ 〠
M
m=1
υm f minð Þ
k,m − f k,m
� �� �
,
ð19Þ
where λ and υ are the Lagrange multipliers.
The KKT (Karush-Kuhn-Tucker) condition is used to
find the partial derivative of the Lagrange function LDk,mð
f k,m, λ, υÞ with respect to the variable f k,m. The optimal solu-
tion f ∗k,m can be obtained by
f ∗k,m = ϖ
pk,m − λm + υm
� 	
ln 2 − Lk
" #+
, ð20Þ
5Wireless Communications and Mobile Computing
where ½X�+ = max f0, Xg. The Lagrange multipliers λm and
υm are updated by the following equations:
λn+1m = λn+1m + θn1 〠
M
m=1
f k,m − f maxð Þ
k,m
� �" #+
, ð21Þ
υn+1m = υn+1m + θn2 〠
M
m=1
f minð Þ
k,m − f k,m
� �" #+
, ð22Þ
where n is the number of iterations and θn1 and θn2 are the
step sizes.
Substituting f ∗k,m into (18) to find the second derivative,
we can obtain
∂2Uk,m pk,m
� 	
∂p2k,m
= 4ϖLkκm − 2ϖ υm − λmð Þ
ln 2 Θð Þ−3 − 6κmϖ2
ln 2ð Þ2 Θð Þ−4 ≤ 0,
ð23Þ
where Θ = pk,m + υm − λm; i.e., the revenue function of FN m
is a convex function with respect to the variable pk,m, and its
constraints are all linear functions. Therefore, the dynamic
price optimization problem can be solved by the Lagrange
multiplier method, and the Lagrange function is
LF
k,m pk,m, φ
� 	
=Uk,m pk,m
� 	
+ 〠
K
k=1
φk pk,m − κmf
minð Þ
k,m
� �� �
,
ð24Þ
where φk is the Lagrange multiplier.
Similarly, the KKT condition could be used to find the par-
tial derivative of its Lagrange function LF
k,mðpk,m, φÞ with
respect to the variable pk,m; the optimal solution p∗k,m is given by
p∗k,m = Θ + 2κm
ϖ
Θ ln 2 − Lk
� �
+ φkΘ
2 ln 2
ϖ
 �+
: ð25Þ
The Lagrange multiplier φk is updated by
φn+1
k = φn+1
k + θn3 〠
K
k=1
pk,m − κmf
minð Þ
k,m
� �" #+
, ð26Þ
where n is the number of iterations and θn3 is the step size.
To prove that the optimal solution (f ∗k,m, p
∗
k,m) is the
Nash equilibrium solution, the following definitions and
lemmas are proposed.
Definition 1. When the price pk,m of FN m is fixed, the fol-
lowing condition is satisfied:
LDk,m f k,m, λ, υ
� 	
= sup LDk,m f k,m, λ, υ
� 	� 	
: ð27Þ
Meanwhile, when the computing resources f k,m pur-
chased by ID k from FN m are fixed, the following condition
is satisfied:
LF
k,m pk,m, φ
� 	
= sup LF
k,m pk,m, φ
� 	� 	
: ð28Þ
Then, (f ∗k,m, p∗k,m) is the Nash equilibrium solution,
which will be proven by the following three lemmas.
Lemma 2. When the quotation of FN m is fixed, the revenue
function LDk,mð f k,m, λ, υÞ of ID k is maximized at f ∗k,m.
Proof. Since the second-order partial derivative of LDk,mð f k,m
, λ, υÞ is less than 0, LDk,mð f k,m, λ, υÞ is a convex function of
variable f k,m. Therefore, L
D
k,mð f k,m, λ, υÞ achieves the maxi-
mum at f ∗k,m. According to Definition 1, f ∗k,m is the Nash
equilibrium solution.☐
Lemma 3. The optimal computing resource f ∗k,m purchased by
ID k from FN m decreases as the price pk,m increases.
Proof. Based on the first-order partial derivative of the opti-
mal solution f ∗k,m, we could obtain
∂f ∗k,m
∂pk,m
= −ϖ
Θ2 < 0: ð29Þ
From (29), we know that f ∗k,m is a monotonically
decreasing function of variable pk,m. When the quotation of
FN m is too high, less IDs will purchase resources, resulting
in decreasing of the revenue of FN m. Therefore, the optimal
price of FNs could be obtained by setting the first partial
derivative of LF
k,mðpk,m, φÞ to 0 [20].☐
Lemma 4. When the optimal computing resource f ∗k,m pur-
chased by ID k from FNs is fixed, the revenue function LF
k,mð
pk,m, φÞ of FN m achieves the maximum at p∗k,m.
Proof. Since the second-order partial derivative of LF
k,mðpk,m
, φÞ with respect to variable pk,m is less than or equal to 0,
LF
k,mðpk,m, φÞ is a convex function with respect to variable
pk,m. Therefore, L
F
k,mðpk,m, φÞ achieves the maximum at p∗k,m
. According to Definition 1, p∗k,m is the Nash equilibrium
solution.☐
Therefore, the optimal solution (f ∗k,m, p
∗
k,m) is the Nash
equilibrium solution of the Stackelberg game. The dynamic
resource pricing algorithm (DRPA) is shown in Algorithm 1.
4.2. Task Offloading and Transmission Resource Allocation
Algorithm. To further minimize the utility of the FCN, the
task offloading decisions and transmission resource alloca-
tion algorithm is proposed. Since the optimization problem
is nonconvex, we decompose it into two subproblems and
6 Wireless Communications and Mobile Computing
solve them individually to minimize the total energy con-
sumption of the FCN.
Firstly, the original optimization problem could be trans-
formed to
min
ak,m ,bm,n ,xkm ,f
Fð Þ
k,m
α〠
K
k=1
〠
M
m=1
〠
N
n=1
ak,m
pk,n,mx
k
mDk
bm,nrk,m,n
+ κm f Fð Þ
k,m
� �2
xkmDkCk
" #
,
s:t:C1 ~ C6,
C8′ : ak,m, bm,n, xkm, κm ∈ 0, 1f g, ∀k,m, n,
C9′ : f
Fð Þ
k,m ≥ 0, ∀m:
ð30Þ
Based on the optimal task offloading algorithm proposed
in [21], the task offloading decisions and transmission
resource allocation results in this scenario can be obtained.
4.3. Computing Resource Allocation Algorithm. The task off-
loading decisions and transmission resource allocation
could be obtained through the above algorithm. In addi-
tion, the alternate direction method is used to optimize
the computation resource allocation in the FCN and
blockchain network.
First of all, with the fixed computation resource f ðBÞmb
of
the blockchain network, we could solve the computation
resource allocation problem in the FCN. Due to the coupling
relationship between variables in the optimization problem,
we assume that when ID k offloads tasks to multiple FNs
simultaneously, the offloading proportional xkm from ID k
to FN m is dependent on the amount of computation
resources purchased from FN m, which is expressed as
xkm = f ∗k,m
∑M
m=1 f
∗
k,m
: ð31Þ
Based on the Lagrange multiplier method, the optimal
solution f ðFÞk,m can be obtained. The constraint C5 is rewritten
as
f Fð Þ
k,m ≥
xTmDkCk
τTk − xkmDkpk,m,n/bm,nrk,m,n
: ð32Þ
Then, the Lagrange function is given by
LF f Fð Þ
k,m, π1, π2, π3
� �
= α〠
K
k=1
〠
M
m=1
〠
N
n=1
κm f Fð Þ
k,m
� �2
xkmDkCk
+ π1 〠
M
m=1
〠
N
n=1
f Fð Þ
k,m −
xTmDkCk
τTk − xkmDkpk,m,n/ak,mbm,nrk,m,n
 !
+ π2 Fmax
m − f Bð Þ
mb
− 〠
K
k=1
ak,mf
Fð Þ
k,m
 !
+ π3 〠
M
m=1
f ∗k,m − 〠
M
m=1
αk,mf
Fð Þ
k,m
 !
,
ð33Þ
where π1, π2, and π3 are the Lagrange multipliers. Thus, the
optimal solution f ðFÞk,m of the optimization problem can be
obtained:
f Fð Þ
k,m = ak,mπ2 + ak,mπ3 − π1
2ακmxkmDkCk
: ð34Þ
(0) Initialize f k,m, pk,m, ω, tmax, λ, υ, φ, ε1, and ε2
(1) While t ≤ tmax
(2) For k = 1,⋯, K
(3) For m = 1,⋯,M
(4) Update p∗k,mðtÞ according to (25)
(5) Update f ∗k,mðtÞ according to (20)
(6) If jp∗k,mðtÞ − pk,mðt − 1Þj ≤ ε1 && j f ∗k,mðtÞ − f k,mðt − 1Þj ≤ ε2
(7) Output optimal price p∗k,mðtÞ and computation resources f ∗k,mðtÞ
(8) End if
(9) Else
(10) The algorithm does not converge, let t = t + 1, f k,mðt − 1Þ = f ∗k,mðtÞ
(11) Update Lagrange multiplier λ, υ, φ according to (21), (22), and (26)
(12) Update the number of iterations t = t + 1 and return to step 1
(13) End else
(14) End for
(15) End for
(16) End while
Algorithm 1: Dynamic resource pricing algorithm (DRPA).
7Wireless Communications and Mobile Computing
The Lagrange multiplier update are updated by
πn+1
1 = πn+1
1 + θn2 〠
M
m=1
〠
N
n=1
f Fð Þ
k,m −
xTmDkCk
τTk − xkmDkpk,m,n/ak,mbm,nrk,m,n
 !" #+
,
πn+1
2 = πn+1
2 + θn2 Fmax
m − f Bð Þ
mb
− 〠
K
k=1
ak,mf
Fð Þ
k,m
 !" #+
,
πn+1
3 = πn+1
3 + θn2 〠
M
m=1
f ∗k,m − αk,mf
Fð Þ
k,m
� �" #+
,
ð35Þ
where θn2 is the step size.
Secondly, with the obtained computation resource f ðFÞk,m
of the FCN, the blockchain node selection and computation
resource allocation problem could be expressed as
min
χmb
,f Bð Þ
mb
1 − αð Þβ 〠
L
mb=1
χmb
IbCb
f Bð Þ
mb
+ Sb
Rmb ,mb
′
+ tver
mb ,mb
′
 !
,
s:t:C4′ : f Bð Þ
mb
≤ Fmax
m − 〠
K
k=1
f Fð Þ
k,m, ∀mb,m′,
C8″ ~ C9″:
ð36Þ
Based on the reputation model proposed in [22], an odd
number of nodes with high reputation will be selected as
blockchain nodes to participate in the blockchain consensus
process. Therefore, the computing resource allocation prob-
lem in the blockchain network is transformed into
min
f Bð Þ
mb
1 − αð Þβ IbCb
f Bð Þ
mb
+ Sb
Rmb ,mb
′
+ tver
m,m′ ,
s:t:C4′ : f Bð Þ
mb
≤ Fmax
m − 〠
K
k=1
f Fð Þ
k,m, ∀mb,
C9′ : f Bð Þ
mb
≥ 0, ∀mb:
ð37Þ
The optimization problem is a linearly decreasing func-
tion; when f ðBÞmb
takes the maximum value, the objective func-
tion obtains the minimum value, and we have
f Bð Þ
mb
= Fmax
m − 〠
K
k=1
f Fð Þ
k,m: ð38Þ
Finally, based on the alternating direction method, f ðFÞk,m
and f ðBÞmb
could reach the convergence, and the associated
network utility could be obtained. The computation resource
allocation algorithm is summarized in Algorithm 2.
The computational complexity for one round of pricing
for FNs of DRPA is OðMÞ. Thus, the total computational
complexity of DRPA is OðMKÞ, where K denotes the num-
ber of IDs. Considering that the loop number of DRPA is t
≤ tmax, thus, the total computational complexity of DRPA
is OðnÞ =Oðn2 log nÞ.
5. Simulation Results and Analysis
To verify the effectiveness of task offloading and resource
allocation algorithm in the blockchain-enabled fog network
(TR-BFCN), the following two algorithms are used for
comparison.
Random resource allocation algorithm (RAA). This algo-
rithm uses different resource pricing to ensure the network
revenue of IDs and FNs and uses random offloading deci-
sions and transmission resource allocation.
Unified price algorithm (UPA) [23]. This algorithm
adopts a unified resource pricing, i.e., each ID purchases
the same computing resource from different FNs, and adopts
the optimal offloading decision and transmission resource
allocation.
Figures 2 and 3 show the computation resources pur-
chased by different IDs and the associated prices with K =
3,M = 10, and N = 16. For ID 1, the task processing intensity
is 200 cycles/bit; for ID 2, it is 300 cycles/bit; and for ID 3, it
is 400 cycles/bit. As shown in the figure, with the number of
tasks increasing, the computation resources purchased by
IDs increase, and the amount of computation resources pur-
chased by different IDs from different FNs is also different.
ID 1 has a lower task processing intensity and purchases
fewer computation resources with a higher price, whereas
(0) Initialize χmb
, f ðFÞk,m, f
ðBÞ
mb
, number of iterations k, and maximum tolerance threshold ε
(1) Update t = t + 1
(2) While jwðtÞ −wðt − 1Þj ≥ ε do
(3) Obtain p∗k,mðtÞ and f ∗k,mðtÞ according to the algorithm DRPA
(4) Obtain ak,mðtÞ and bn,mðtÞ according to the algorithm COTRA
(5) Obtain f ðFÞk,m and f ðBÞmb
according to (34) and (38)
(6) End while
Algorithm 2: Computation resource allocation algorithm.
8 Wireless Communications and Mobile Computing
ID 3 has a higher task processing intensity and purchases
more computation resources with a lower price.
Figures 4 and 5, respectively, show the convergence of
the purchased computation resources and the associated
prices. The DRPA algorithm converges when the number
of iterations reaches 10. It can be seen that FN 1 has the
smallest energy consumption factor κm and the lowest cost,
and FN 5 has the largest energy consumption factor κm
and the highest cost. As κm increases, the computing
resources that can be purchased decrease, and resource quo-
tations continue to increase correspondingly.
Figure 6 shows the network utility versus the number of
FNs. It can be seen that the network utility is a decrease
function of the number of FNs, which converges when the
number of iterations is greater than 12. With the increase
of the number of FNs, IDs could purchase computation
resources from more available FNs; thus, the total network
delay and the network utility could be reduced. Moreover,
as the number of FNs increases, more FNs can be selected
1 2 3 4 5 6 7 8 9 10
Number of FNs
0
0.2
0.4
0.6
0.8
1
1.2
Pr
ic
e (
yu
an
/c
yc
le
)
×10–3
Device 1
Device 2
Device 3
Figures 3: The price of resources purchased by ID under different
task processing intensities.
0 10 20 30 40 50 60 70 80
Number of iterations
1300
1350
1400
1450
1500
1550
1600
1650
1700
1750
1800
Pu
rc
ha
se
d 
co
m
pu
tin
g 
re
so
ur
ce
s (
M
H
z)
Fog 1
Fog 2
Fog 3
Fog 4
Fog 5
Figure 4: Convergence of purchased computing resources.
0 5 10 15 20 25 30 35 40
Number of iterations
7
7.2
7.4
7.6
7.8
8
8.2
8.4
8.6
8.8
Pr
ic
e (
yu
an
/c
yc
le
)
× 10–4
FN 1
FN 2
FN 3
FN 4
FN 5
Figures 5: Convergence of price versus the purchased computation
resources.
1 2 3 4 5 6 7 8 9 10
Number of FNs
0
200
400
600
800
1000
1200
1400
1600
Pu
rc
ha
se
d 
co
m
pu
tin
g 
re
so
ur
ce
s (
M
H
z)
Device 1
Device 2
Device 3
Figures 2: Purchased resources of IDs for different task processing
intensities.
9Wireless Communications and Mobile Computing
as blockchain nodes, and the network utility will be further
minimized.
Figure 7 shows the network utility versus the number of
IDs. The task transmission delay and computation delay
increase when the number of offloading tasks increases,
resulting in the increase of the network utility. Compared
with other algorithms, the proposed TR-BFCN algorithm
has the lowest network utility. For algorithm RAA, ID may
offload tasks to FNs with poor channel conditions, resulting
in high transmission delay and high network utility. The
simulation results show that the proposed DRPA algorithm
could make each FN provide different computation
resources for each ID according to the task processing inten-
sity, which can effectively reduce the network utility.
Figure 8 shows the relationship between the network
utility and the task processing intensity with three algo-
rithms. The increase in task processing intensity leads to
the increase in network calculation delay; thus, the total
energy consumption of the network also increases. The ID
in the algorithm RAA may offload tasks to the FN with poor
channel conditions, which could increase the transmission
delay. In the UPA algorithm, each ID purchases the same
amount of computing resources from each FN. For FNs with
2 4 6 8 10 12
Number of iterations
50
55
60
65
70
N
et
w
or
k 
en
er
gy
 ef
fic
ie
nc
y 
va
lu
e
Fogs = 7
Fogs = 6
Fogs = 5
Figure 6: Network utility versus the number of FNs.
30 40 50 60 70 80 90
Number of devices
0
20
40
60
80
100
120
140
160
N
et
w
or
k 
ut
ili
ty
 v
al
ue
TR-BFCN
RAA
UPA
Figure 7: Network utility versus the number of IDs.
600 700 800 900 1000 1100 1200
Intensity of task processing (cycle/bit)
0
10
20
30
40
50
60
70
80
90
N
et
w
or
k 
ut
ili
ty
 v
al
ue
TR-BFCN
RAA
UPA
Figure 8: Network utility versus task processing intensity for
different algorithms.
104 5 6 7 8 9
Number of FNs
20
30
40
50
60
70
80
90
100
110
N
et
w
or
k 
ut
ili
ty
 v
al
ue
TR-BFCN
RAA
UPA
Figure 9: Network utility versus the number of FNs.
10 Wireless Communications and Mobile Computing
rich computing resources or higher processing costs, the ID
has not obtained the optimal amount of computing
resources to maximize its own revenue, resulting in higher
network utility.
Figure 9 shows the relationship between network utility
and the number of FNs with different algorithms. With the
number of FNs increasing, the available computing
resources also increase. Therefore, the available FNs for each
ID to offload tasks are increasing, and IDs could select the
FN with better processing capability for task offloading,
resulting in the decrease of the total network delay and the
total energy consumption, as well as the network utility.
6. Conclusions
In this paper, we proposed a task offloading and resource
allocation scheme in the blockchain-enabled FCN to mini-
mize the network utility by optimizing the resource pricing,
task offloading decisions, and resource allocation. The FCN
was responsible for the task offloading and the blockchain
network was responsible for the security in the data commu-
nication process. Firstly, we proposed a task offloading
model in the blockchain-enabled FCN; secondly, based on
the two-stage Stackelberg model, a dynamic resource pricing
algorithm was proposed to ensure the fairness of transac-
tions. Finally, we verified the feasibility and effectiveness of
the proposed algorithm by simulation results.
Data Availability
In this paper, we did not use a specific dataset.
Conflicts of Interest
The authors declare that they have no conflicts of interest.
References
[1] X. Sun and N. Ansari, “EdgeIoT: mobile edge computing for
the internet of things,” IEEE Communications Magazine,
vol. 54, no. 12, pp. 22–29, 2016.
[2] M. Mukherjee, L. Shu, and D. Wang, “Survey of fog comput-
ing: fundamental, network applications, and research chal-
lenges,” IEEE Communications Surveys & Tutorials, vol. 20,
no. 3, pp. 1826–1857, 2018.
[3] H. T. T. Nguyen, M. T. Nguyen, H. T. Do, H. T. Hua, and C. V.
Nguyen, “DRL-based intelligent resource allocation for diverse
QoS in 5G and toward 6G vehicular networks: a comprehen-
sive survey,” Wireless Communications and Mobile Comput-
ing, vol. 2021, Article ID 5051328, 21 pages, 2021.
[4] Y. Xiao, Y. Jia, C. Liu, X. Cheng, J. Yu, and W. Lv, “Edge com-
puting security: state of the art and challenges,” Proceedings of
the IEEE, vol. 107, no. 8, pp. 1608–1631, 2019.
[5] W. Jiang, J. Chen, X. Liu, Y. Liu, and S. Lv, “Participant recruit-
ment method aiming at service quality in mobile crowd sens-
ing,” Wireless Communications and Mobile Computing,
vol. 2021, Article ID 6621659, 14 pages, 2021.
[6] Y. Hussain, H. Zhiqiu, M. A. Akbar et al., “Context-aware trust
and reputation model for fog-based IoT,” IEEE Access, vol. 8,
pp. 31622–31632, 2020.
[7] J. Li, X. Li, J. Yuan, R. Zhang, and B. Fang, “Fog computing-
assisted trustworthy forwarding scheme in mobile internet of
things,” IEEE Internet of Things Journal, vol. 6, no. 2,
pp. 2778–2796, 2019.
[8] X. Huang, R. Yu, J. Kang, and Y. Zhang, “Distributed reputa-
tion management for secure and efficient vehicular edge com-
puting and networks,” IEEE Access, vol. 5, pp. 25408–25420,
2017.
[9] K. Gu, L. Tang, J. Jiang, and W. Jia, “Resource allocation
scheme for community-based fog computing based on reputa-
tion mechanism,” IEEE Transactions on Computational Social
Systems, vol. 7, no. 5, pp. 1246–1263, 2020.
[10] V. L. Hallappanavar, C. M. Bulla, andM. N. Birje, “ANN based
estimation of reputation of newcomer web services in fog com-
puting,” in 2021 International Conference on Computer Com-
munication and Informatics (ICCCI), pp. 1–7, Coimbatore,
India, 2021.
[11] B. Cao, Y. Li, L. Zhang et al., “When internet of things meets
blockchain: challenges in distributed consensus,” IEEE Net-
work, vol. 33, no. 6, pp. 133–139, 2019.
[12] M. Cao, L. Zhang, and B. Cao, “Toward on-device federated
learning: a direct acyclic graph-based blockchain approach,”
IEEE Transactions on Neural Networks and Learning Systems,
2021.
[13] Q. Guanhua, Research on IoT Resource Management Strate-
gies Based on Mobile Edge Computing, University of Elec-
tronic Science and Technology Of China, Chengdu, China,
2019.
[14] Y. Li, B. Cao, M. Peng, L. Zhang, D. Feng, and J. Yu, “Direct
acyclic graph-based ledger for internet of things: performance
and security analysis,” IEEE/ACM Transactions on Network-
ing, vol. 28, no. 4, pp. 1643–1656, 2020.
[15] Y. Qu, L. Gao, T. H. Luan et al., “Decentralized privacy using
blockchain-enabled federated learning in fog computing,”
IEEE Internet of Things Journal, vol. 7, no. 6, pp. 5171–5183,
2020.
[16] B. Cao, Z. Zhang, D. Feng et al., “Performance analysis and
comparison of PoW, PoS and DAG based blockchains,” Digi-
tal Communications and Networks, vol. 6, no. 4, pp. 480–485,
2020.
[17] Y. Yao, X. Chang, J. Misic, V. B. Misic, and L. Li, “BLA:
Blockchain-assisted lightweight anonymous authentication
for distributed vehicular fog services,” IEEE Internet of Things
Journal, vol. 6, no. 2, pp. 3775–3784, 2019.
[18] S. Lin, X. Wang, and S. Nie, “Equipment data sharing method
based on block chain,” in 2021 13th International Conference
on Measuring Technology and Mechatronics Automation
(ICMTMA), pp. 690–693, Beihai, China, 2021.
[19] J. Feng, F. R. Yu, Q. Pei, J. Du, and L. Zhu, “Joint optimization
of radio and computational resources allocation in blockchain-
enabled mobile edge computing systems,” IEEE Transactions
on Wireless Communications, vol. 19, no. 6, pp. 4321–4334,
2020.
[20] B. Cao, S. Xia, J. Han, and Y. Li, “A distributed game method-
ology for crowdsensing in uncertain wireless scenario,” IEEE
Transactions on Mobile Computing, vol. 19, no. 1, pp. 15–28,
2020.
[21] H. Xiaoge, F. Weiwei, C. Chunyan, and C. Qianbin, “Optimal
energy efficient resource allocation scheme for inactive users in
small cell networks,” Jounal of Electronics & Information Tech-
nology, vol. 42, no. 3, pp. 637–644, 2020.
11Wireless Communications and Mobile Computing
[22] J. Kang, Z. Xiong, D. Niyato, D. Ye, D. I. Kim, and J. Zhao,
“Toward secure blockchain-enabled internet of vehicles: opti-
mizing consensus management using reputation and contract
theory,” IEEE Transactions on Vehicular Technology, vol. 68,
no. 3, pp. 2906–2920, 2019.
[23] X. Lyu, W. Ni, H. Tian et al., “Optimal schedule of mobile edge
computing for internet of things using partial information,”
IEEE Journal on Selected Areas in Communications, vol. 35,
no. 11, pp. 2606–2615, 2017.
12 Wireless Communications and Mobile Computing
	Blockchain-Enabled Task Offloading and Resource Allocation in Fog Computing Networks
	1. Introduction
	2. Network Modeling and Analysis
	2.1. Network Model
	2.2. Communication Model
	2.3. Calculation Model
	2.4. Blockchain Network Consensus Model
	3. Optimization Problem Modeling
	4. Task Offloading and Resource Allocation Scheme in Blockchain-Enabled Fog Computing Network
	4.1. Computing Resource Allocation Algorithm Based on Differentiated Pricing
	4.2. Task Offloading and Transmission Resource Allocation Algorithm
	4.3. Computing Resource Allocation Algorithm
	5. Simulation Results and Analysis
	6. Conclusions
	Data Availability
	Conflicts of Interest