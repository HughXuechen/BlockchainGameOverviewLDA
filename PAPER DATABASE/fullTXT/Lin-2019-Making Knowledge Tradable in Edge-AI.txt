Making Knowledge Tradable in Edge-AI Enabled IoT: A Consortium Blockchain-Based Efficient and Incentive Approach
IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 15, NO. 12, DECEMBER 2019 6367
Making Knowledge Tradable in Edge-AI Enabled
IoT: A Consortium Blockchain-Based Efficient
and Incentive Approach
Xi Lin , Student Member, IEEE, Jianhua Li, Jun Wu , Member, IEEE, Haoran Liang, and Wu Yang
Abstract—Nowadays, benefit from more powerful edge
computing devices and edge artificial intelligence (edge-
AI) could be introduced into Internet of Things (IoT) to find
the knowledge derived from massive sensory data, such
as cyber results or models of classification, and detection
and prediction from physical environments. Heterogeneous
edge-AI devices in IoT will generate isolated and distributed
knowledge slices, thus knowledge collaboration and ex-
change are required to complete complex tasks in IoT intel-
ligent applications with numerous selfish nodes. Therefore,
knowledge trading is needed for paid sharing in edge-AI
enabled IoT. Most existing works only focus on knowledge
generation rather than trading in IoT. To address this is-
sue, in this paper, we propose a peer-to-peer (P2P) knowl-
edge market to make knowledge tradable in edge-AI enabled
IoT. We first propose an implementation architecture of the
knowledge market. Moreover, we develop a knowledge con-
sortium blockchain for secure and efficient knowledge man-
agement and trading for the market, which includes a new
cryptographic currency knowledge coin, smart contracts,
and a new consensus mechanism proof of trading. Besides,
a noncooperative game based knowledge pricing strategy
with incentives for the market is also proposed. The security
analysis and performance simulation show the security and
efficiency of our knowledge market and incentive effects of
knowledge pricing strategy. To the best of our knowledge,
it is the first time to propose an efficient and incentive P2P
knowledge market in edge-AI enabled IoT.
Index Terms—Consortium blockchain, edge artificial in-
telligence (edge-AI), Internet of Things (IoT), knowledge
market, knowledge pricing, smart contract.
I. INTRODUCTION
W ITH the rapid growth of big data generated by Inter-
net of Things (IoT) at the edge of networks, the data
Manuscript received April 20, 2019; accepted May 7, 2019. Date of
publication May 16, 2019; date of current version December 3, 2019.
This work was supported by the National Natural Science Foundation
of China under Grant 61431008 and Grant 61831007. Paper no. TII-19-
1471. (Corresponding author: Jun Wu.)
X. Lin, J. Li, J. Wu, and H. Liang are with the School of Cyber Security
and the Shanghai Key Laboratory of Integrated Administration Technolo-
gies for Information Security, Shanghai Jiao Tong University, Shanghai
200240, China (e-mail:, linxi234@sjtu.edu.cn; lijh888@sjtu.edu.cn; jun-
wuhn@sjtu.edu.cn; hrliang@sjtu.edu.cn).
W. Yang is with Information Security Research Center, Harbin En-
gineering University, Harbin 165001, China (e-mail:, yangwu@hrbeu.
edu.cn).
Color versions of one or more of the figures in this paper are available
online at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/TII.2019.2917307
Fig. 1. Architecture of edge-AI enabled IoT.
generation rate will exceed the capacity of Internet in the near
future. Thus, over 90% of the IoT big data will be handled and
analyzed locally rather than remote clouds [1]. As the com-
plement of clouds, edge (or fog) computing brings cloud-like
computation resources to local edge nodes [2], [3]. Meanwhile,
artificial intelligence (AI) services are being deployed on the
edge computing platform for IoT applications, earning the nick-
name of edge artificial intelligence (edge-AI) [4], [5]. Therefore,
as shown in Fig. 1, mobile edge computing (MEC) enhanced
base stations BSs (distributed edge learning) and powerful dis-
tributed edge devices (on-device learning) make it possible for
local knowledge extraction from massive IoT data. Therefore,
IoT service mode will be gradually transformed from “Data-as-
a-Service” [6] to “Knowledge-as-a-Service” [7].
Knowledge is the real value of data, which includes learning
results and models derived from IoT data. For example, surveil-
lance cameras with edge-AI can carry out real-time data analysis
and detecting and tracking a specific person via face recognition.
The detection results (knowledge) rather than massive redundant
video data could be paid sharing. The trained learning models
should also be monetized as knowledge commodities (KCs). For
instance, the Algorithmia trading marketplace [8] hosts a library
of about 4500 trained models application programming interface
(API) for image classification, language translation, etc.
In edge-AI enabled IoT, better intelligent applications depend
on knowledge collaboration and exchange among edge-AI de-
vices. For the isomorphic IoT knowledge, an edge-AI device
cannot collect all the relevant data resulting from the geographi-
cal distribution manner. Such as intelligent monitoring, a single
camera can only analyze data within a certain spatio-temporal
range. The detection results (knowledge slices) for all cam-
1551-3203 © 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications standards/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-5303-1191
https://orcid.org/0000-0003-2483-6980
mailto:linxi234@sjtu.edu.cn
mailto:lijh888@sjtu.edu.cn
mailto:junwuhn@sjtu.edu.cn
mailto:junwuhn@sjtu.edu.cn
mailto:hrliang@sjtu.edu.cn
mailto:yangwu@hrbeu.edu.cn
mailto:yangwu@hrbeu.edu.cn
6368 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 15, NO. 12, DECEMBER 2019
eras should be sharing to constitute complement knowledge
for other devices or users. Another example was proposed in
[4], for distributed data analysis, distributed learning models
hold by 100 edge devices are sharing to one edge server for
federated learning, generating a global learning model. On the
other hand, for the heterogeneous IoT knowledge, due to the
resource-constrained feature of edge-AI, it is impractical and
unnecessary to cache all AI services on an edge device at the
same time [9]. For instance, a smart camera with face recog-
nition cannot perform voice recognition, such as an intelligent
sound box. The heterogeneous knowledge acquisition must rely
on collaboration and exchange. To sum up, sharing knowledge
among edge-AI entities is essential to achieve large-scale dis-
tributed performance optimization in edge-AI enabled IoT.
However, due to the existing heterogeneity (spatio-temporal,
entity, and relation) of IoT data resources, the acquired knowl-
edge derived from data is mastered in a variety of edge-AI
entities. They may be reluctant to cooperate with each other,
due to the selfishness and distrust, which are as follows.
1) Knowledge sharing should be reasonable monetized to
motivate knowledge paid sharing for selfish edge-AI
entities.
2) Knowledge trading should be in a distributed peer-to-peer
(P2P) mode rather than an unrealistic and inefficient cen-
tralized mode, considering the large-scale geographical
distribution of numerous edge-AI devices.
3) Knowledge market should guarantee the security and pri-
vacy of all the market participants, such as avoiding ma-
licious users tamper the relevant knowledge bases. These
challenges have seriously slowed down the pace for de-
velopment of knowledge sharing in edge-AI enabled IoT.
Recently, blockchain, an open decentralized ledger-based
distributed technology, causes widespread concerns in both
academia and industry. It was first applied into a P2P e-
cash system Bitcoin [10] by Nakamoto. Then, benefit from
the good properties of tamper-resistance, transparency, and
trust, blockchain-based applications have already gained great
popularity in cognitive wireless networks, smart grid [12],
vehicular ad hoc networks (VANETs) [13], and IoT. In gen-
eral, blockchain can establish an Internet of value, where par-
ticipants could store and exchange value without traditional
intermediaries. Therefore, motivated by previous works, we ex-
ploit the blockchain technologies (consortium blockchain/smart
contract) and game theory to build a knowledge market, for
achieving knowledge cooperation and exchange in edge-AI en-
abled IoT. The contributions of this paper are summarized as
follows.
1) We proposed a secure and efficient P2P knowledge mar-
ket in edge-AI enabled IoT. To the best of our knowledge,
it is the first time to propose a knowledge paid sharing
architecture in edge-AI enabled IoT.
2) We exploit blockchain technologies (consortium
blockchain/smart contract) to establish a knowledge
blockchain for the market to ensure knowledge man-
agement and trading decentralization, nontampering,
efficient automation, and fairness.
3) We proposed a new green blockchain consensus mech-
anism Proof of Trading PoT that required less re-
source consumption combining Proof-of-Work (PoW)
with Proof-of-Stake (PoS) mechanism.
4) We proposed a noncooperative game based optimal
knowledge pricing strategy for the knowledge market.
Numerical results show this strategy encourages knowl-
edge sellers to provide higher quality knowledge under
the same budget.
The remainder of this paper is structured as follows. Section II
gives an overview of the related works. Section III describes the
proposed knowledge market architecture in edge-AI enabled
IoT. Section IV introduces the knowledge blockchain design for
the market. In Section V, a noncooperative game based knowl-
edge pricing strategy with incentives is proposed. In Section VI,
we analyze the security performance and provide the simulation
results. Finally, Section VII concludes this paper.
II. RELATED WORK
Market economy models [14] have been widely applied in
IoT systems for trading data/information goods from physical
environment. In [15], Perera et al. explored the data marketplace
with the concept of “Sensing as a Service” and its advantages in
IoT-enabled smart cities. To realize a fast, secure, and reliable
data transfer, a framework for cloud-based pervasive IoT appli-
cations was proposed in [16]. For minimizing the data retrieval
time, Xie and Jia developed a max-throughput data transfer
scheduling in [17]. While the authors in [18] and [19] pay more
attention to pricing mechanisms, a data procurement auction in
Bayesian setting achieving both strategy-proofness and optimal
payment was developed in [18], and the benefits of traded data
plans for mobile data in secondary data markets were studied
in [19]. Besides, an information market approach with price
competition was introduced to IoT in [20], and specifically, the
authors in [21] investigated the information pricing in cognitive
radio networks by two-stage Stackelberg game. However, most
of the previous works only focused on IoT data/information
market, whereas knowledge market in IoT still remains blank.
Knowledge is the further refinement of data/information, nat-
ural or artificial, which is the root of intelligence. Recently, edge
intelligence has been put into IoT systems [4], [5], [7]. In [7],
a knowledge-centric edge cellular network architecture was de-
signed with virtualized device-to-device (D2D) communication
and Li et al. in [22] presented an Edgent framework as a collab-
orative and on-demand deep neural network coinference with
device-edge synergy. In specific, to jointly optimize caching
and computing allocation problem in VANET, a mobility aware
algorithm using both particle swarm optimization and deep Q-
learning was proposed in [23], and in [24], the authors also
implemented an online user activity recognition engine based
on edge intelligence with high real-time and fault-tolerance per-
formance. However, those works just concentrated on general
edge-AI enabled IoT architectures or how to generate specific
IoT knowledge via AI algorithms, whereas the great potential
of the knowledge market economy has been neglected.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: MAKING KNOWLEDGE TRADABLE IN EDGE-AI ENABLED IOT 6369
Fig. 2. Basic architecture of the proposed knowledge market.
III. KNOWLEDGE MARKET IN EDGE-AI ENABLED IOT
A. Basic Architecture of Proposed Knowledge Market
As shown in Fig. 2, the basic architecture of proposed knowl-
edge market consists of several planes: the IoT sensor plane,
distributed edge-AI plane, knowledge management plane, and
intelligent applications plane. The architecture can implement
the process from data/information to knowledge to intelli-
gence/wisdom.
The sensor plane consists of underlying infrastructure in
IoT (e.g., GPS, radio frequency identification, thermometer,
etc). The massive sensory data/information streams are pe-
riodically uploaded to edge-AI devices for storing and pro-
cessing. AI algorithms (support vector machine (SVM), deep
learning, etc) are deployed in the distributed edge-AI plane,
which contain more powerful geodistributed edge-AI devices,
such as mobile phones, unmanned aerial vehicles, smart
vehicles, IoT intelligent sensors/gateways, and microservers
(Raspberry Pi), offering temporary storage, computing, and
communication resources for knowledge discovery, creation,
and exchange. Therefore, edge-AI devices are knowledge pro-
ducers of our knowledge market. The knowledge aggregators
(KAGs) in the knowledge management plane are enhanced BSs
with better resources, such as small cell or macrocell, which
aggregate discrete knowledge slices from edge-AI devices in
corresponding areas. Besides, upstream KAGs are preselected
nodes for maintaining consortium knowledge blockchain plat-
form, which forms a unified knowledge base at the edge of
networks and implements distributed P2P knowledge trading.
So, we name them KAGs in this paper. The intelligent appli-
cation plane includes a series of knowledge-based intelligent
services/applications, such as intelligent alarm system, intelli-
gent manufacturing, intelligent transportation system, etc. With
the APIs, users can publish their knowledge requests to knowl-
edge blockchain and reward relevant knowledge contributors
via economics.
In our knowledge market, edge-AI entities can share the ac-
quired knowledge with corresponding returns, called knowl-
edge coins. It is a new cryptographic currency slightly similar
to BTC and Ether (ETC) used in Bitcoin and Ethereum [11], re-
spectively. The knowledge market is composed of the following
elements.
1) Trusted authority (TA): TA can be a government de-
partment, which is responsible for initializing the whole
knowledge trading market. TA can generate public pa-
rameters and cryptographic keys for market participants.
After registration on a TA, edge-AI nodes and KAGs
could be legitimate members.
2) Edge-AI nodes: Edge-AI nodes in IoT could act as dif-
ferent roles according to their states: knowledge seller,
knowledge buyer, or idle node. An edge-AI node could
act as a seller after discovering knowledge from collected
sensory data or after receiving the knowledge requests.
It would upload the encrypted knowledge to knowledge
managers (KAGs). Knowledge is not public in the market.
A knowledge buyer would find the diverse knowledge of
interests in the market. When the knowledge is acquired,
the relevant knowledge coins should be paid as economic
returns immediately. Idle nodes neither provide nor pur-
chase KCs in the market.
3) Knowledge aggregators: As shown in [25], nowadays,
BS density in cellular networks has kept increasing in
4G networks and will reach around 50 BSs/km2 in the
next 5G networks. Integrating MEC into BSs ultradense
networks is future trends [26]. It indicates that each BS
will be equipped with better 3C (cache, computation, and
communication) resources. BSs are usually connected
through high-speed wired networks. Therefore, apart
from being edge-AI nodes, they could serve as knowl-
edge managers (KAGs) in the market. They could store
and manage the uploading encrypted KCs and record
the knowledge trading information. Meanwhile, they also
have the responsibility to ensure the security and privacy
of the knowledge market.
B. Design Goals for Proposed Knowledge Market
As an available knowledge market, we not only need to ensure
security and efficiency, but the interests of all participants should
also be taken into consideration. Therefore, the design of the
knowledge market should realize the goals as follows.
1) Knowledge decentralization: Due to the geographical dis-
tribution of a large number of edge-AI devices, cen-
tralized knowledge management is unrealistic and in-
efficient. So, for the availability and reliability of our
system, decentralized knowledge management should be
realized.
2) Knowledge nontampering: KC is stored in KAGs, which
could be attacked by malicious attackers. In the compro-
mised KAGs, malicious attackers could tamper the KCs
and trading records. Knowledge integrity and nontamper-
ing should be guaranteed.
3) Knowledge confidentiality: Resulting from knowledge
paid sharing, knowledge is not public in the market. All
participants (including KAGs) in the market could not
obtain the uploading knowledge without rewarding. So,
KCs exist in the KAGs in an encrypted manner.
4) Knowledge fairness: The nonrepudiation of knowledge
trading is the key to realize the fairness. The buyers
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
6370 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 15, NO. 12, DECEMBER 2019
obtain KCs once the knowledge coins are paid, whereas
sellers get the corresponding returns once revealing the
encrypted commodities for buyers. Besides, KAGs with
more contributions for knowledge management and trad-
ing need to be rewarded with more financial returns as
incentives.
5) Knowledge pricing: Reasonable knowledge pricing is the
foundation of the market, directly affecting the develop-
ment of our knowledge market. So, an optimal knowledge
pricing strategy should be obtained, taking into account
the interests of both parties.
IV. KNOWLEDGE BLOCKCHAIN FOR PROPOSED MARKET
Blockchain, as a distributed management technology, has the
potential to achieve design goals in our market (e.g., knowledge
decentralization and knowledge nontampering). So, we design a
knowledge blockchain (K-chain) for our market, which consists
of the following components.
1) Consortium blockchain: Public blockchain and consor-
tium (or private) blockchain are two existing forms of the
blockchain. For public blockchain, some edge devices
cannot meet the resources requirements, such as PoW. Be-
sides, for public blockchain, the large number of edge-AI
devices makes trading verification poor efficiency. Com-
pared with public blockchain, trading verification in con-
sortium blockchain only needs preselected high-power
nodes (KAGs), with smaller costs and high efficiency
[12]. Therefore, we utilize consortium blockchain to es-
tablish our knowledge trading market platform. Other
edge-AI nodes could join the blockchain network via
nearby KAGs with permission.
2) Proof of trading: For serving more edge applications, even
KAGs cannot spend too many computation/energy re-
sources to calculate the meaningless hash nonce for PoW
consensus mechanism. Thus, the traditional PoW proto-
col is not applicable at the edge of networks. Meanwhile,
KAGs with more contributions need to be rewarded (e.g.,
easier to solve the hash puzzle). So, a new consensus
mechanism PoT is proposed in the knowledge blockchain
joint considering KAGs’ market interests and resource
consumption.
3) Smart contract: We also employ smart contracts resid-
ing in the blockchain system in this paper to further im-
prove the efficiency of the system. Smart contracts are
scripts, which enable the automatic execution of multi-
phase processes. Once executed, smart contracts cannot
be modified and interrupted. Knowledge management
smart contract (KMSC) and knowledge trading smart
contract (KTSC) are two existing smart contracts in our
market, which make knowledge management and trading
more reliable and efficient. Besides, KTSC can guaran-
tee the fairness of knowledge trading, benefit from the
nonrepudiation of smart contracts.
A. Overview of the Proposed Knowledge Blockchain
As shown in Fig. 3, our K-chain can be divided into two
subchains, i.e., knowledge management chain (KM-chain) and
knowledge trading chain (KT-chain) in edge-AI enabled IoT.
They are responsible for knowledge management and knowl-
edge trading in the market, respectively.
1) Knowledge Management: KM-chain needs to manage
KCs from knowledge sellers. As shown in Fig. 3, KM-chain
contains the KMSC contract and Proof of Capacity (PoC) mech-
anism. KAGs first collect all the uploaded KCs within their
coverage and generate knowledge blocks. After the PoC-based
consensus process, knowledge blocks will be broadcast to all
KAGs and added to the KM-chain. Thus, a unified nontam-
perable edge knowledge base management could be realized.
Besides, KMSC will be deployed in KM-chain to realize the
automation of knowledge management.
2) Knowledge Trading: Knowledge trading process will re-
sort to the KT-chain, which includes the KTSC contract and PoT
mechanism, as shown in Fig. 3. Potential knowledge buyers will
search for KCs or services of interest in the market. Then, they
will initiate knowledge requests to sellers. The buyers can reveal
the uploaded encrypted commodities after the payment. The
transaction records (TXs) will be put into transaction blocks,
which will be added to KT-chain after the PoT-based consen-
sus process. Moreover, multiphases of the trading process are
also automatic by the KTSC script to ensure knowledge trading
efficiency and fairness.
The KCs and TXs are special data, which could be stored
in the block body in the form of the Merkel tree structure, as
shown in Fig. 4. Similar to the Bitcoin system, we use it to
concatenate the TXs and KCs in each transaction block and
knowledge block, respectively. This structure can summarize
quickly and validate the integrity of large-scale data. Therefore,
any attempts to tamper with the TXs and KCs will be detected,
which guarantee the tamper-proof characteristic.
B. Knowledge Management by KMSC
The knowledge management process using KMSC contains
a few phases for KM-chain, which are as follows.
Phase 1. Market initialization: In the market, edge-AI nodes
willing to provide KCs or services could act as knowledge
sellers. TA will evaluate the service capabilities of sellers.
After being authorized by TA, a seller becomes a legitimate
merchant in the knowledge market. To further protect the
privacy of sellers, a seller with the true IDi will obtain m
pseudonyms’ identities {PIDk
i }mk=1 and corresponding asym-
metric keys{PKk
PIDi
, SKk
PIDi
}/certificates {CertkPIDi
} from TA.
The asymmetric keys are employed to encrypt KCs to guarantee
knowledge confidentiality in the market. Similar to sellers, the
buyers also use pseudonyms’ identities from TA. Besides, each
participant will have a wallet account to manage their knowledge
coins just as in [12].
Phase 2. Generating knowledge service indexes: For sellers,
service-types and parameters may change dynamically over time
in the market. So, the newest knowledge service indexes will
be periodically uploaded to KM-chain platform. The knowledge
service information is public in the market for buyers’ reference
as listed in Table I.
Phase 3. Generating KCs: If sellers discover knowledge
from collected data. The acquired KCs will be uploaded to the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: MAKING KNOWLEDGE TRADABLE IN EDGE-AI ENABLED IOT 6371
Fig. 3. Knowledge blockchain in our knowledge market.
Fig. 4. Merkel hash tree structure of blocks.
TABLE I
KNOWLEDGE SERVICE INFORMATION
TABLE II
KNOWLEDGE COMMODITY
KM-chain in an encrypted manner. We assume the seller si
has KC πj . Then, the seller will encrypt πj with the seller
pseudonym’s public key EPKs i
(πi ‖Timestamp) . The KC is
listed in Table II.
Phase 4. Uploading knowledge information: Knowledge in-
formation from sellers consists of knowledge service indexes
TABLE III
KEY SYMBOLS AND EXPLAINS
and KCs. Then, knowledge information will be uploaded to
the nearby KAGs. The knowledge information can be browsed
and queried in the market. Specifically, a seller first sends an
uploading request to the nearby KAG, including being used
PIDi , corresponding signature, and certificate. If the request is
allowed, the seller can participate in knowledge market through
publishing available services information and KCs.
Phase 5. Proof of capacity: Each KAG is equipped with
a local controller. It is responsible for recording the storage
contribution of each KAG about knowledge management. As
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
6372 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 15, NO. 12, DECEMBER 2019
shown in Fig. 3, a certain KAG could be a leader i (e.g., selected
miner for KM-chain), who contribute the most storage capacity
for a period of time. The leader i has privilege to broadcast the
new knowledge block. It is known as PoC. Meanwhile, leader i
will be awarded by knowledge coins attached to the knowledge
block. Generated knowledge block will be broadcast to all the
KAG nodes for audit and verification. If other KAGs agree on
this knowledge block, it will be added to KM-chain. Thus, due to
the tamper-proof property of blockchain, cross-regional secure
knowledge management is achieved.
C. Knowledge Trading by KTSC
The detail process of knowledge trading in the proposed mar-
ket employing KTSC smart contract is described as the follow-
ing phases.
Phase 1. Knowledge service requesting: Knowledge buyers
will first search for their knowledge of interests in the market.
If they do not find the needed knowledge. Knowledge buyers
(edge-AI devices or users) will search for the knowledge ser-
vices of interests via nearby KAGs. Then, they will choose a
certain number of knowledge sellers according to the learning
costs. Sellers with relatively low learning costs are expected to
be chosen. The number of selected sellers will be slightly more
than the actual sellers, in case of denial of services.
Phase 2. Knowledge pricing and depositing: Buyer br sends
service requests to sellers, which include time, certificate of br ,
and request service types, etc. After receiving requests, sellers
s1, s2, . . . , sl verify the identity of the buyer br , and decide
whether to provide knowledge services according to current
states. Then, reply a result. According to knowledge service
indexes of final service providers, buyer calculates the optimal
knowledge pricing Pij for final sellers. More detail about it will
be shown in Section V. Meanwhile, the buyer needs to deposit
budget B =
∑
Pij to K-chain for each seller. Upon receiving
the knowledge service deposits, KAG will check whether the
buyer has enough knowledge coins in his wallet and send the
deposit information to each seller.
Phase 3. KCs aggregating: After receiving the knowledge
service requests and the deposit information, sellers provide
knowledge services according to the pricing Pij . Then, they use
pseudonyms’ public keys to encrypt the obtain knowledge and
upload KCs via KMSC. The KCs will be stored in KM-chain
platform.
Phase 4. Knowledge acquiring: To claim payment from the
buyer, all the sellers will use the pseudonyms’ public key of the
buyer to encrypt the corresponding pseudonyms’ private keys to
generate the knowledge sharing, which is employed to decrypt
KCs. The knowledge sharing will be uploaded to the nearby
KAGs. If the buyer and the sellers belong to the same KAG, the
knowledge sharing will be sent directly to the buyer, if not, the
knowledge sharing will be sent to a KAG nearby the buyer.
The KAG nearby the buyer will collect and send all the KCs
and the knowledge sharing for the buyer. So, the buyer can
harvest the knowledge of interests in the knowledge market.
Phase 5. Knowledge trading recording: After harvesting the
knowledge from the market, the deposits will be paid to sellers
automatically as knowledge rewards. If the sellers do not offer
the knowledge sharing, the deposits will be aborted by KTSC.
Only when the sellers provide the knowledge sharing, the de-
posits will be rewarded to sellers. As shown in Fig. 3, the total
amount of knowledge trading currency (e.g., knowledge coins
flow) for a certain KAG i in a period of time can be calculated
by the local controller as its stake. A certain KAG could be a
leader j, who act as the fastest miner to solve the dynamic hash
puzzle in PoT mechanism. After finding the hash random nonce
value, leader j will broadcast the block to all KAGs for audit and
verification. Other KAGs will check the validity of the finding
nonce and then this block will be added to KT-chain.
If the buyer finds the needed KCs at the phase 1, the trading
process will be simpler. The buyer will deposit payment accord-
ing to the given price information attached to KCs. Then, the
trading process is similar as mentioned above.
D. PoT Consensus Mechanism
PoW mechanism is utilized in Bitcoin [10] by Nakamoto.
The participants are required to contribute computation power
to find a conditional hash random nonce. In KT-chain, the hash
puzzle of PoW mechanism is given as
Hash(IDKAGi
,Timestamp, Hash(previousdata), nonce)
≤ targeti PoW = 2Ni PoW − 1 (1)
where targeti PoW is a string of binary bits, beginning from a
number of continuous zeros. The number of targeti PoW bits
depends on different hash functions (MD5 for 16 B/128 b and
SHA-256 for 32 B/256 b). For instance, the Bitcoin system
employs the classical SHA-256 hash algorithm. According to
(1), the smaller the targeti , the more difficult for solving the
hash puzzle.
PoW leads to huge computation costs and energy consump-
tion. So, it is not applicable to our design. Moreover, PoS is
another consensus mechanism, which means the greater the
stake, the greater the probability of publishing the next block.
Although getting rid of too much waste of resources, pure PoS
mechanism faces security vulnerability, such as nothing-at-stake
attack and long-range attack.
In our knowledge market, knowledge trading managers
(KAGs), as bridges between buyers and sellers, should give
their proof of facilitating successful knowledge trading rather
than solving a pure hash puzzle. Therefore, inspired by previous
works, we propose a novel consensus mechanism PoT combin-
ing PoW with PoS mechanism. For a certain KAG i, we take
the total amount of knowledge trading currency (e.g., knowl-
edge coins) as its stake for a period of time. Due to openness of
blockchain trading records, knowledge coins flow can be calcu-
lated by local controller. We dynamically adjust the difficulty of
the hash puzzle according to KAGs’ stakes. For KAG i, TXij
and KSij indicate all the deals j and corresponding knowledge
coins for a period of time, respectively. So, the dynamic hash
puzzle of PoT consensus mechanism in KT-chain is shown as
Hash(IDKAGi
,Timestamp,Hash(previousdata), nonce)
≤ targeti PoW ≤ targeti PoT (2)
targeti PoT ∝ KSi total = min
(∑
j
KSij ,KSmax
)
(3)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: MAKING KNOWLEDGE TRADABLE IN EDGE-AI ENABLED IOT 6373
where targeti PoT and KSi total (stake) has positive correlation,
and targeti PoW is always smaller than targeti PoT. If and only
if there is no stake (KSi total = 0), targeti PoW will be equal
to targeti PoT . KSmax is set to prevent excessive stakes go
beyond the range of hash function (SHA-256). TheNi stake and
targeti PoT can be calculated through the following equations:
Ni stake = int(α× ln(β ×KSi total+1)) ≥ 0 (4)
targeti PoT = 2Ni P o T − 1 = 2Ni P o W +Ni s t a k e − 1 (5)
where α and β are fixed parameters, and int (.) function is
utilized to acquire the integer part. Equation (6) clearly states
the relationship among Ni PoW , Ni stake , Ni PoT , and Nmax
about targeti PoT in the proposed consensus mechanism
targeti PoT : 0 0 0 0
Ni s t a k e
︷ ︸︸ ︷
1 1...
Ni P o W
︷ ︸︸ ︷
...1 1 1 1︸ ︷︷ ︸
Ni P o T
︸ ︷︷ ︸
Nm a x =256(SHA−256)
. (6)
Besides, according to Xu et al. [28], for KAG i, the expectation
of needed computation resources of PoT mechanism is
Ei PoT =
targetmax
targeti PoT
× 232 =
targeti PoW
targeti PoT
Ei PoW
=
2Ni P o W − 1
2Ni P o W +Ni s t a k e − 1
Ei PoW ≈ 1
2Ni s t a k e
Ei PoW .
(7)
Therefore, compared with PoW, PoT can be considered as a
green mechanism with less resources consumption, whereas it
could also get rid of security vulnerabilities mentioned earlier,
compared with PoS. It is applicable for the edge environment.
So, for our KT-chain, consensus process is based on PoT con-
sensus mechanism rather than PoW or PoS.
V. INCENTIVE KNOWLEDGE PRICING FOR
PROPOSED MARKET
We assume a buyer with the total budgetB will require knowl-
edge services in the market. We first divide the total budget B
into (B1, B2, . . . , Bi, . . . , Bm ) based on the demand proportion
function D(.). So, Bi shows the total budget for ith isomorphic
knowledge Πi = (πi1, πi2, . . . , πij , . . . , πini ) from ni edge-AI
knowledge sellers EAIij , (i = 1, . . . ,m; j = 1, . . . , ni). Notice
that a single edge-AI device could carry out multiple knowledge
services and the number of actual sellers is less than
∑m
i=1 ni .
This does not conflict with the followings, each edge-AI de-
vices can divide their resources according to service popu-
larity and learning costs in advance [27]. The learning data
size of ith knowledge from each edge-AI sellers is denoted
as Θi = (θi1, θi2, . . . , θij , . . . , θini ). The key symbols and ex-
plains are shown in Table III.
A. Knowledge Value Function
In the proposed knowledge market, we need to evaluate the
value of monetized KCs. Intuitively, KCs with higher values
mean higher knowledge pricing. Meanwhile, knowledge value
is embodied in algorithms performances (e.g., knowledge accu-
racy) and the degree of satisfaction for users.
KCs are extracted via edge-AI (SVM, deep learning, and
machine learning), and it is a complicated process to refine
knowledge from massive raw data. In this paper, we do not pay
attention to the process of knowledge refining, because this is
not the focus of this paper. However, for reasonable knowledge
evaluation, we need to estimate the gap between knowledge
and raw data. So, we adopt two principles [29], [30] to define
the knowledge value function ψπi j (θij ): first, the property of
AI algorithms: the higher the data size (examples), the higher
the algorithms performance (e.g., accuracy); second, the reg-
ular pattern of diminishing marginal utility: the marginal util-
ity (performance) diminishes when the supply (data) increases.
Therefore, ψπi j (θij ) should be a strictly increasing and concave
function in the conditions of these two principles.
Definition 1: Knowledge value function ψπi j (θij ; η, γ)
based on abovementioned two principles is defined as follows:
ψπi j (θij ; ηi, γi) = 1 − ηie
−γi ·θi j (8)
where ηi and γi are curve approximating parameters of
ψπi j (θij ; ηi, γi) to real-world data. It is an empirical function,
and different types of knowledge services correspond to differ-
ent parameters. According to the definition, ψπi j (θij ; ηi, γi) ∈
(0, 1), so, it can be considered as a normalized value of knowl-
edge. Besides, ψπi j (0; ηi, γi) = 1 − ηi indicates the lower
bound of knowledge value, which means even if a small amount
of learning data, the value function can guarantee least 1 − ηi
knowledge value.
It is reasonable since the real-world data could be well fitted
through a well-defined knowledge value/utility function, which
can directly reflect the performances of the edge intelligence
algorithm (e.g., accuracy). For rational users, the higher the per-
formance of the algorithm, the higher the satisfaction rate. For
instance, in [31], the authors adopted this function to show the
activity recognition accuracy of artificial intelligent algorithms.
The authors tested and verified the function for the classifica-
tion in different machine learning algorithms, such as logistic
regression and SVMs, based on an accelerometer and gyroscope
samples dataset collected from waist-mounted smart phones.
B. Noncooperative Game Formulation
We suppose that ni knowledge sellers are independently
owned, so they are selfish for competing the giving budget Bi ,
formulating a noncooperative game. Each sellers aims to maxi-
mize their own interests. Therefore, the utility function of each
sellers EAIij and the corresponding optimization problem are
given as follows:
max
θi j
Uij (θij ) =
ψπi j (θij ; ηi, γi)∑ni
i=1 ψπi j (θij ; ηi, γi)
Bi − Cij θij
s.t. U th
ij min ≤ Uij (θij )
θth
ij min ≤ θij ≤ θth
ij max (9)
where Uij (.) is the utility function of EAIij . We offer rewards
based on the knowledge value provided by sellers. Cij shows
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
6374 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 15, NO. 12, DECEMBER 2019
the distinct unit data cost of seller i for ith knowledge service,
which consists of two parts: data purchase cost from IoT sensors
and data learning cost in edge devices. For the first restriction, it
indicates that participating sellers should obtain at least U th
ij min.
The second restriction is resulting from the resources limitation
of edge-AI devices, and edge-AI devices can only process a
certain range of data size, from θth
ij min to θthij max . Let Θ =
(θi1, θi2, . . . , θij , . . . , θini ) states the learning strategy space of
each sellers. We need to obtain optimal learning strategy of
each sellers, so we define the Nash equilibrium (NE) into the
proposed model.
Definition 2: We define the learning strategy of each
sellers Θ∗ = (θ∗i1, θ
∗
i2, . . . , θ
∗
ij , . . . , θ
∗
ini
) a NE. If Uij (θ∗ij ,
Θ∗
−ij (θ
∗
ij )) ≥ Uij (θij ,Θ−ij (θij )), where Θ−ij (θij ) indicates
the optimal strategies of all the other sellers except for EAIij
when the strategy of EAIij is θij .
Then, we will prove the existence and uniqueness of NE in
this game. The NE guarantees that, for each seller, as long as
others do not change their strategies, they cannot improve their
own utilities in the NE learning strategies.
Theorem 1: There exists at least one NE learning strategy
among the participating knowledge sellers in the proposed game.
Proof: According to the expression of (9), Uij (θij ) is con-
tinuous. We take the first-order derivative and secondary-order
derivative of Uij (θij ) w.r.t. θij , respectively, which are
∂Uij (θij )
∂θij
=
ηiγie
−γi θi j · Ψ−πi j (θij )
(Ψ−πi j (θij ) + ψπi j (θij ))
2Bi − Cij (10)
∂2Uij
∂2θij
=
−ηiγ2
i e
−γi θi j BiΨ−πi j (Ψ(θij ) + ηie
−γi θi j )
(Ψ−πi j (θij ) + ψπi j (θij ))
4
(11)
�
where Ψ−πi j (θij ) indicates the total knowledge value provided
by other sellers except for knowledge πij from EAIij . For each
sellers EAIij , the strategy space is limited by lower bound θth
ij min
and upper bound θth
ij max . Therefore, the learning strategy Θ is
a nonempty, compact, and convex subset of real number space
Rn . According to (11), ∂2Uij (θij )/∂2θij < 0. Since Uij (θij )
is a strictly concave function w.r.t. θij , it is a quasi-concave
function in θij . So, the optimization problem of (9) must be
a convex optimization problem. Meanwhile, at least one NE
strategy among the participating knowledge sellers exists in this
game.
Definition 3: Under the learning strategy Θ−ij (θij ),
Ψ−πi j (θij ), if θ∗ij maximizes the EAIij utility function Uij
(θij ,Θ−ij (θij )) in (9) over the all possible value of θ∗ij , the
θ∗ij is considered as the best response learning strategy [32].
Theorem 2: There exists a unique NE learning strategy
among the participating knowledge sellers in the proposed game.
Proof: According to the definition of NE, each sellers per-
forms the best response learning strategy when achieving the
NE. We study the first-order derivative ∂Uij /∂θij to determine
the best response strategy. Since Uij is a strictly concave func-
tion w.r.t. θij (∂2Uij (θij )/∂2θij < 0), ∂Uij /∂θij is a strictly
decreasing function about θij . Then, the best response learning
strategy can be calculated as follows:
θ∗ij =
⎧
⎪⎨
⎪⎩
θth
ij min
θ∗ij
θth
ij max
Uij (θij )/∂θij < 0
Uij (θij )/∂θij = 0
Uij (θij )/∂θij > 0
. (12)
So, we can prove that only one best response learning strategy
exists in the proposed game. In other word, the uniqueness of
the NE can be achieved.
C. Optimal Knowledge Pricing Strategy for
Proposed Market
For the convex optimization problem (9) with restricted con-
ditions, we introduce the Lagrangian dual function to obtain
the optimal value of learning strategy θij , which is described
as
Lij (θij , χij , δij , εij ) = Uij (θij ) + χij (Uij (θij ) − U th
ij min)
+ δij (θij−θth
ij min)+εij (θ
th
ij max−θij )
(13)
where χij , δij , and εij (i = 1, . . . ,m and j = 1, . . . , ni) are
the adding dual variables. Given the Ψ−πi j (θij ), we utilize
Karush–Kuhn–Tucher (KKT) condition to derive the opti-
mal strategy. Thus, ∂Lij (θij )/∂θij= 0, (χij , δij , εij ≥ 0). Let
[x]+ = max(0, x), we can obtain the best response learning
strategy by following equations:
Γij (χij , δij , εij ) =
γiBiΨ−πi j (θij )(1 + χij )
(εij − δij ) + Cij (1 + χij )
(14)
ψ′
πi j =
−2Ψ−πi j −Γij+
√
Γ2
ij+4ΓijΨ−πi j +4Γij
2
(15)
ψ∗
πi j
(θij ) = max[1 − ηi, ψ
′
πi j (θij )] (16)
θ∗ij (χij , δij , εij ) =ψ−1
πi j
(θij )=− 1
γi
ln
(
1 − ψ∗
πi j
(θij )
ηi
)
(17)
where Γij is an intermediate variable related toχij , δij , and εij .
We use the subgradient method to obtain the best learning
strategy. k and λ are the iteration index and step size, re-
spectively. The variables χij , δij , and εij (i = 1, . . . ,m and
j = 1, . . . , ni) are updated as follows:
χij (k + 1) = [χij (k) − λ(Uij − U th
ij min)]
+
δij (k + 1) = [δij (k) − λ(θij − θth
ij min)]
+
εij (k + 1) = [εij (k) − λ(θth
ij max − θij )]
+
. (18)
Finally, we can get the optimal value of ψ∗
πi j
and θ∗ij , so the
optimal knowledge pricing strategy can be denoted as
P ∗
ij =
ψ∗
πi j
(θ∗ij )
ψ∗
πi j
(θ∗ij ) + Ψ∗−πi j (θ
∗
ij )
Bi (i = 1, . . . ,m). (19)
VI. SECURITY ANALYSIS AND PERFORMANCE SIMULATION
In this section, we first give security analysis about our knowl-
edge market. After that, we evaluate performances about the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: MAKING KNOWLEDGE TRADABLE IN EDGE-AI ENABLED IOT 6375
Algorithm 1: Optimal Knowledge Pricing Strategy
Algorithm.
Input: B, D(.), ηi , γi , Cij , θthij , Uth
ij , (i = 1, . . . ,m).
Output: θ∗ij , P
∗
ij , ψ
∗
πi j
(θij ), (j = 1, . . . , ni).
1: Initialization:Divide total budget B into Bi by D(.);
initialize χij (0), δij (0), εij (0), Ψ−πi j (0) ≥ 0, k := 0,
step size λ, and precision threshold δ.
2: for The isomorphic knowledge from Π1 to Πm do
3: for Each seller j ∈ [1, ni ] do
4: Calculate ψπi j (θij (k)) according to (14)–(16).
5: Calculate θij (k) according to (17).
6: end for
7: Reapeat
8: Each seller updates Ψ−πi j (k + 1) though ψπi j
(θij (k)).
9: Each seller adjusts variables χij (k + 1), δij (k + 1),
εij (k + 1) though (18).
10: for Each seller j ∈ [1, ni ] do
11: Calculate ψπi j (k + 1) according to (14)–(16).
12: θij (k + 1) according to (17).
13: end for
14: k + 1 := k.
15: Until
‖θk + 1
i j −θki j ‖1
‖θki j ‖1
≤ δ; θ∗ij := θk+1
ij .
16: Calculate ψ∗
πi j
(θij ) and P ∗
ij according to (8), (19).
17: end for
TABLE IV
SECURITY PERFORMANCE COMPARISON
PoT consensus mechanism and the incentive knowledge pricing
strategy (IPS).
A. Security Analysis on Knowledge Market
We provide secure analysis on the knowledge market in detail
in Table IV.
1) Knowledge decentralization: With the help of blockchain
technologies, knowledge trading will get rid of the
traditional third party in the market. Edge-AI entities
can achieve knowledge paid sharing in a P2P manner.
Blockchain-based decentralized knowledge management
makes knowledge market available and reliable.
2) Knowledge nontampering: We assume a small portion
of KAGs could be attacked and comprised by attackers
in a period of time. Knowledge information and trad-
ing records stored in blockchain could be tampered by
attackers. While all KAGs store a unified knowledge
blockchain. Once extricating from attackers, the com-
Fig. 5. Time consumption T in the PoW/PoT protocol.
Fig. 6. Computational consumption (hash) in the PoW/PoT protocol.
prised KAGs can detect the differences from other KAGs.
So, knowledge nontampering can be realized in the
market.
3) No double-spending: Similar to Bitcoin system, a pub-
lic history of knowledge trading will prevent double-
spending in the market. The history of knowledge trading
is sharing in the P2P knowledge market and is reached a
consensus via PoT.
4) Knowledge fairness: Knowledge fairness can be guaran-
teed through the deployed KTSC smart contract. Only
when the sellers provide the knowledge sharing for re-
vealing encrypted knowledge, the deposits will be re-
warded to sellers. If the sellers do not offer the knowledge
sharing, the deposits will be aborted by KTSC. So, the
nonrepudiation of knowledge trading is realized.
B. Performance Simulation
Our performance evaluations are conducted utilizing knowl-
edge blockchain and game theory platform based on Python and
MATLAB, respectively.
In Figs. 5 and 6, we compare the performance of the proposed
PoT mechanism with the traditional PoW protocol, which is
widely used in the actual blockchain systems, such as Bitcoin
[10] and Ethereum [11]. The periodic trading currency for each
KAGs could be recorded as stakes in our market. After that,
KAGs in our market attempt to act as the KT-chain miner, who
has the priority of publishing the new transaction blocks. Thus,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
6376 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 15, NO. 12, DECEMBER 2019
Fig. 7. Simulation results of the knowledge pricing. (a) Comparison of heterogeneous knowledge. (b) Learning data under different prices.
(c) Learning data under different budgets. (d) Knowledge value under different prices. (e) Knowledge value under different budgets. (f) Influence of
learning costs.
the transaction block generation time (i.e., hash puzzle solving
time) T of each KAGs will be influenced by two factors: com-
putation contribution (i.e., hash rate) and trading stakes (i.e.,
KSi total). Hash rate characterizes the number of hash oper-
ations per second, corresponding to the heterogeneous edge
computing capacity. While trading stakes show the differenti-
ated market contribution of each KAGs.
We find the relationship between time T , hash rate, and trad-
ing stakes in Fig. 5. The same hash algorithm SHA-256 as PoW
protocol is employed in Python’s hashlib library. The initial dif-
ficulty of the PoW protocol is set as Ni PoW = 232. Besides,
the block height is set to 10, which indicates the number of
transaction blocks in our KT-chain. As shown in Fig. 5, for
PoT protocol, time T produced by edge servers with higher
hash rates will be smaller under the same stakes, which results
from more hash attempts in unit time. Time T is almost propor-
tional to the hash rate, as shown in Fig. 5. For example, when
KAGs have a uniform stake 250, time T obtained by different
edge computing devices with different hash rates (25, 50, and
100 kH/s) is 534.5278, 264.0129, and 134.97885 s, respectively.
With the increase of stakes, time T gradually decreases under
the different hash rates (25, 50, and 100 kH/s). The KAG that
make more contributions to the market will have a larger stake,
resulting in a larger hash puzzle threshold. This makes it easier
to solve the hash puzzle, i.e., find the right conditional nonce.
For comparison, we also evaluated the block generation time T
based on the PoW protocol under the same computing power
(hash rate = 25 kH/s). As shown in Fig. 5, time T fluctuates
around the mean (5741.85 s) in PoW protocol with the increase
of stakes. The fluctuating comes from the random characteristics
of the hash algorithm. Therefore, compared with the traditional
PoW protocol, the PoT protocol can show the impact of dif-
ferent stakes on block generation time T . Meanwhile, benefit
from PoT protocol, the time T will be shortened, as shown in
Fig. 5, which will shorten the time of transaction confirmation
and further improve the efficiency of KT-chain.
Longer computing time means more computational and en-
ergy consumption. We utilize the accumulative hash operations
to represent the consumption of computing resources. To sim-
plify, we assume that the energy consumption per hash operation
is approximately the same, thus Fig. 6 indicates both computa-
tional and energy consumption in PoW/PoT protocol. As shown
in Fig. 6, the advantages of resources reduction of our PoT get
more and more clear, with the increase of block height. There-
fore, the proposed PoT consensus mechanism can be considered
as a green consensus mechanism, which is more applicable in
the edge environment.
We evaluate the performance of the proposed IPS in Fig. 7.
In Fig. 7(a), we first compare the four kinds of heterogeneous
knowledge with different parameters (ηi , γi) under the same
condition (e.g., budget B = 25). As shown in Fig. 7(a), the
higher the knowledge value lower bound 1 − ηi , the less the
learning data. For those kinds of knowledge with higher lower
bound, they could acquire the same knowledge value according
to less learning data. Also, γi shows the curve steepness of the
knowledge value function. Higher γi means knowledge value
changes faster as learning data increases. So, to obtain the same
knowledge value, knowledge types with higher γi can learn less
data.
Then, we show the incentive effects of our strategy IPS. Sim-
ilar to [33] and [34], we compared the incentives with a uni-
form pricing strategy (UPS), which has no incentives. In the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: MAKING KNOWLEDGE TRADABLE IN EDGE-AI ENABLED IOT 6377
UPS, for all the participating sellers, knowledge buyers give a
uniform unit price pi for knowledge value (i = 1, . . . ,m). So,
the knowledge value and learning strategy can be calculated as
ψi(θij ) = Bi
ni pi
and θij = ψ−1
ij (θij ) (j = 1, . . . , ni). As shown
in Fig. 7(b), we choose knowledge parameters (ηi = 0.95 and γi
= 0.06), fixed budget (B = 25), and learning cost (C = 0.10),
and we change the uniform price pi from 12 to 20. When the
number of sellers is small, UPS has more advantages. Because
in this case, UPS will result in more learning data. However,
with the increasing number of selected knowledge sellers, the
amount of learning data increases in the proposed IPS. So, the
proposed mechanism could be considered as an incentive mech-
anism in this case, which encourages sellers to learn more data
under a fixed budget. In edge-AI enabled IoT, intelligent appli-
cations will depend on the cooperation among more and more
edge-AI devices, due to the distributed nature of the edge en-
vironment. It means that the process of knowledge sharing will
take place among more and more devices. So, IPS mechanism
with incentives is more practical in real world. In Fig. 7(c), we
also compare our strategy and UPS (Price = 14) under differ-
ent budgets. As shown in Fig. 7(c), it indicates that incentives
are also effective under the different budgets in the proposed
mechanism. Moreover, in Fig. 7(d) and (e), we further demon-
strate the knowledge value of KCs obtained by the two pricing
strategies. As shown in Fig. 7(d), on average, the knowledge
value for knowledge sellers in the proposed strategy (IPS) is
67.3%, 118.8%, and 173.4% higher than that of UPS when the
price is 12, 16, and 20, respectively. Similar results can be found
in Fig. 7(e). The knowledge value for knowledge sellers in the
proposed scheme (UPS) is 120.1% and 74.6% higher than that
of UPS under different budgets 20 and 30, respectively.
We show the influence of learning cost in Fig. 7(f) and chang-
ing cost from 0.05 to 0.15 with a fixed budget (B = 30). As
shown in Fig. 7(f), the learning cost of sellers will directly
affect learning strategy. The amount of learning data by knowl-
edge sellers decreases with the increase of learning cost. So, for
buyers, a seller with less learning cost will be a priority. This is
because less learning cost for the same knowledge service will
result in more learning data and higher knowledge value under
the same condition.
VII. CONCLUSION
In this paper, to break islands of knowledge and make knowl-
edge tradable in edge-AI enabled IoT, we proposed a P2P knowl-
edge market for knowledge paid sharing. We utilized blockchain
technologies (consortium blockchain/smart contract) to build a
knowledge blockchain to ensure security and efficiency of the
market. In addition, a green consensus mechanism PoT was pro-
posed for the knowledge blockchain, which is more applicable
at the edge of networks due to less resource consumption. More-
over, we proposed a noncooperative game based optimal knowl-
edge pricing strategy as incentives for the knowledge market.
We showed that the optimal pricing strategy could encourage
knowledge sellers to learn more data and provide higher qual-
ity knowledge for buyers in the market. Based on the proposed
knowledge market, some future works could be pursued. Knowl-
edge extracted by machine learning could be reproduced with
almost no costs. Some buyers could buy KCs from sellers, dupli-
cate and resell knowledge to others. Thus, hierarchical market
models could be introduced, e.g., Stackelberg games. Besides,
the knowledge market is established upon the data/information
market, so a comprehensive market and more economic mod-
els should be discussed, which take both data/information and
knowledge trading into account.
REFERENCES
[1] R. Kelly, “Internet of Things data to top 1.6 zettabytes by 2020,”
Apr. 2015. [Online]. Available: https://campustechnology.com/articles/
2015/04/15/internet-of-things-data-to-top-1-6-zettabytes-by-2020.aspx
[2] L. Liu, S. Chan, G. Han, M. Guizani, and M. Bandai, “Performance
modelling of representative load sharing schemes for clustered servers in
multi-access edge computing,” IEEE Internet Things J., to be published,
doi: 10.1109/JIOT.2018.2879513.
[3] L. Liu, Z. Chang, and X. Guo, “Socially-aware dynamic computation
offloading scheme for fog computing system with energy harvesting de-
vices,” IEEE Internet Things J., vol. 5, no. 3, pp. 1869–1879, Jun. 2018.
[4] G. Zhu, D. Liu, Y. Du, C. You, J. Zhang, and K. Huang, “Towards an
intelligent edge: Wireless communication meets machine learning,” 2018,
arXiv:1809.00343.
[5] Z. Chang, L. Lei, Z. Zhou, S. Mao, and T. Ristaniemi, “Learn to cache:
Machine learning for network edge caching in the big data era,” IEEE
Wireless Commun., vol. 25, no. 3, pp. 28–35, Jun. 2018.
[6] G. Jia, G. Han, H. Xie, and J. Du, “Hybrid-LRU caching for optimizing
data storage and retrieval in edge computing-based wearable sensors,”
IEEE Internet Things J., vol. 6, no. 2, pp. 1342–1351, Apr. 2019.
[7] R. Wang, J. Yan, D. Wu, H. Wang, and Q. Yang, “Knowledge-centric
edge computing based on virtualized D2D communication systems,” IEEE
Commun. Mag., vol. 56, no. 5, pp. 32–38, May 2018.
[8] Algorithmia, Inc., 2013. [Online]. Available: https://algorithmia.
com/algorithms
[9] J. Xu, L. Chen, and P. Zhou, “Joint service caching and task offloading for
mobile edge computing in dense networks,” in Proc. IEEE Conf. Comput.
Commun., Honolulu, HI, USA, 2018, pp. 207–215.
[10] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” 2008.
[Online]. Available: https://bitcoin.org/bitcoin.pdf
[11] G. Wood, “Ethereum: A secure decentralised generalised transaction
ledger,” Ethereum Project Yellow Paper, vol. 151, 2014.
[12] Z. Li, J. Kang, R. Yu, D. Ye, Q. Deng, and Y. Zhang, “Consortium
blockchain for secure energy trading in industrial Internet of Things,”
IEEE Trans. Ind. Inform., vol. 14, no. 8, pp. 3690–3700, Aug. 2018.
[13] Z. Yang, K. Yang, L. Lei, K. Zheng, and V. C. M. Leung, “Blockchain-
based decentralized trust management in vehicular networks,” IEEE
Internet Things J., vol. 6, no. 2, pp. 1495–1505, Apr. 2019.
[14] J.-M. Bohli, C. Sorge, and D. Westhoff, “Initial observations on eco-
nomics, pricing, and penetration of the Internet of Things market,” ACM
SIGCOMM Comput. Commun. Rev., vol. 39, no. 2, pp. 50–55, 2009.
[15] C. Perera, A. Zaslavsky, P. Christen, and D. Georgakopoulos, “Sensing as
a service model for smart cities supported by Internet of Things,” Trans.
Emerg. Telecommun. Technol., vol. 25, no. 1, pp. 81–93, 2014.
[16] R. Montella, M. Ruggieri, and S. Kosta, “A fast, secure, reliable, and
resilient data transfer framework for pervasive IoT applications,” in Proc.
IEEE Conf. Comput. Commun. Workshops, Honolulu, HI, USA, 2018,
pp. 710–715.
[17] R. Xie and X. Jia, “Data transfer scheduling for maximizing throughput
of big-data computing in cloud systems,” IEEE Trans. Cloud Comput.,
vol. 6, no. 1, pp. 87–98, Jan./Mar. 2018.
[18] Z. Zheng, Y. Peng, F. Wu, S. Tang, and G. Chen, “Trading data in the
crowd: Profit-driven data acquisition for mobile crowdsensing,” IEEE J.
Sel. Areas Commun., vol. 35, no. 2, pp. 486–501, Feb. 2017.
[19] L. Zheng, C. Joe-Wong, C. W. Tan, S. Ha, and M. Chiang, “Secondary
markets for mobile data: Feasibility and benefits of traded data plans,” in
Proc. IEEE Conf. Comput. Commun., 2015, pp. 1580–1588.
[20] D. Niyato, X. Lu, P. Wang, D. I. Kim, and Z. Han, “Economics of Internet
of Things: An information market approach,” IEEE Wireless Commun.,
vol. 23, no. 4, pp. 136–145, Aug. 2016.
[21] S. Kang, C. Joo, J. Lee, and N. B. Shroff, “Pricing for past channel
state information in multi-channel cognitive radio networks,” IEEE Trans.
Mobile Comput., vol. 17, no. 4, pp. 859–870, Apr. 2018.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
https://campustechnology.com/articles/2015/04/15/internet-of-things-data-to-top-1-6-zettabytes-by-2020.aspx
https://campustechnology.com/articles/2015/04/15/internet-of-things-data-to-top-1-6-zettabytes-by-2020.aspx
https://dx.doi.org/10.1109/JIOT.2018.2879513
https://algorithmia.com/algorithms
https://algorithmia.com/algorithms
https://bitcoin.org/bitcoin.pdf
6378 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 15, NO. 12, DECEMBER 2019
[22] E. Li, Z. Zhou, and X. Chen, “Edge intelligence: On-demand deep learning
model co-inference with device-edge synergy,” in Proc. Workshop Mobile
Edge Commun., Budapest, Hungary, Aug. 2018, pp. 31–36.
[23] L. T. Tan, R. Q. Hu, and L. Hanzo, “Twin-timescale artificial intelligence
aided mobility-aware edge caching and computing in vehicular networks,”
IEEE Trans. Veh. Technol., vol. 68, no. 4, pp. 3086–3099, Apr. 2019.
[24] Z. Huang, K.-J. Lin, B.-L. Tsai, S. Yan, and C.-S. Shih, “Building edge in-
telligence for online activity recognition in service-oriented IoT systems,”
Future Gener. Comput. Syst., vol. 87, pp. 557–567, 2018.
[25] X. Ge, S. Tu, G. Mao, C.-X. Wang, and T. Han, “5G ultra-dense cellular
networks,” IEEE Wireless Commun., vol. 23, no. 1, pp. 72–79, Feb. 2016.
[26] H. Guo, J. Liu, J. Zhang, W. Sun, and N. Kato, “Mobile-edge computation
offloading for ultradense IoT networks,” IEEE Internet Things J., vol. 5,
no. 6, pp. 4977–4988, Dec. 2018.
[27] G. Li, J. Wu, J. Li, K. Wang, and T. Ye, “Service popularity-based
smart resources partitioning for fog computing-enabled industrial Internet
of Things,” IEEE Trans. Ind. Inform., vol. 14, no. 10, pp. 4702–4711,
Oct. 2018.
[28] C. Xu et al., “Making big data open in edges: A resource-efficient
blockchain-based approach,” IEEE Trans. Parallel Distrib. Syst., vol. 30,
no. 4, pp. 870–882, Apr. 2019.
[29] P. Domingos, “A few useful things to know about machine learning,”
Commun. ACM, vol. 55, no. 10, pp. 78–87, 2012.
[30] O. Lange, “The determinateness of the utility function,” Rev. Econ. Stud.,
vol. 1, no. 3, pp. 218–225, 1934.
[31] D. Niyato, M. A. Alsheikh, P. Wang, D. I. Kim, and Z. Han, “Market model
and optimal pricing scheme of big data and Internet of Things (IoT),” in
Proc. IEEE Int. Conf. Commun., May 2016, pp. 1–6.
[32] R. D. Yates, “A framework for uplink power control in cellular radio
systems,” IEEE J. Sel. Areas Commun., vol. 13, no. 7, pp. 1341–1347,
Sep. 1995.
[33] M. Liu and Y. Liu, “Price-based distributed offloading for mobile-edge
computing with computation capacity constraints,” IEEE Wireless Com-
mun. Lett., vol. 7, no. 3, pp. 420–423, Jun. 2018.
[34] M. Li, T. Q. S. Quek, and C. Courcoubetis, “Mobile data offloading with
uniform pricing and overlaps,” IEEE Trans. Mobile Comput., vol. 18,
no. 2, pp. 348–361, Feb. 2019.
Xi Lin (S’18) received the B.S. degree in op-
toelectronic science and technology from the
School of Precision Instrument and Optoelec-
tronics Engineering, Tianjin University, Tianjin,
China, in 2016. He is currently working toward
the Ph.D. degree in cyberspace security at the
School of Electronic Information and Electri-
cal Engineering, Shanghai Jiao Tong University,
Shanghai, China.
His research interests include multiaccess
edge computing Internet of Things, blockchain,
etc.
Jianhua Li received the B.S., M.S., and Ph.D.
degrees in information security from the School
of Cyber Security, Shanghai Jiao Tong Univer-
sity, Shanghai, China, in 1986, 1991, and 1998,
respectively.
He is currently a Professor/Ph.D. Supervi-
sor and the Dean of the School of Cyber Se-
curity, in Cyberspace security, Shanghai Jiao
Tong University, and the Chairman of the Shang-
hai Key Laboratory of Integrated Administration
Technologies for Information Security, and the
Vice-Director with the National Engineering Laboratory for Information
Content Analysis Technology, Shanghai. He was the Chief Expert in the
Information Security Committee Experts with the National High Tech-
nology Research and Development Program of China (863 Program)
and a Committee Expert with the Information Technique Standardization
Committee of Shanghai, China. He was the Leader of more than 30
state/province projects of China, and authored or coauthored of more
than 300 papers. His research interests include cyber security, data sci-
ence, next generation networking, etc.
Dr. Li was the recipient of the Second Prize of the National Technol-
ogy Progress Award of China in 2005 and the First Prize of the National
Technology Progress Award of Shanghai in 2003 and 2004.
Jun Wu (S’09–M’12) received the Ph.D. degree
in information and telecommunication studies
from Waseda University, Tokyo, Japan, in 2011.
He was a Postdoctoral Researcher with the
Research Institute for Secure Systems, National
Institute of Advanced Industrial Science and
Technology, Tokyo, Japan, from 2011 to 2012.
He was a Researcher with the Global Informa-
tion and Telecommunication Institute, Waseda
University, from 2011 to 2013. He is currently an
Associate Professor in School of Cyber Security,
Shanghai Jiao Tong University with the School of Electronic Information
and Electrical Engineering, Shanghai Jiao Tong University, Shanghai,
China. He is also the Vice-Director of the National Engineering Labora-
tory for Information Content Analysis Technology, Shanghai Jiao Tong
University. He is currently the Chair of the IEEE P21451-1-5 Standard
Working Group. He has hosted and participated in a lot of research
projects including the National Natural Science Foundation of China, Na-
tional 863 Plan and 973 Plan of China, Japan Society of the Promotion of
Science Projects, etc. He has authored/coauthored more than 120 ref-
ereed papers which include the advanced computing, communications
and security techniques of software-defined networks, informationcen-
tric networks smart grids, Internet of things, 5G, etc.
Dr. Wu has been the Track Chair of the Vehicular Technology Con-
ference in 2019 and the Technical Program Committee Member of more
than ten international conferences, including the International Confer-
ence on Communications, Global Communications Conference, Inter-
national Wireless Internet Conference (WiNCON), etc. He has been a
Guest Editor for the IEEE SENSORS JOURNAL, Sensors, and ICT Express.
He is an Associate Editor for the IEEE ACCESS.
Haoran Liang received the B.S. and M.S.
degrees in communication engineering from
Jiangxi Normal University, Nanchang, China,
in 2011 and 2017, respectively. He is cur-
rently working toward the Ph.D. degree in cy-
berspace security with the School of Cyber Se-
curity, Shanghai Jiao Tong University, Shanghai,
China.
His current research interests include infor-
mation security, blockchain, fog computing, etc.
Wu Yang received the Ph.D. degree in computer
system architecture from the Computer Sci-
ence and Technology School, Harbin Institute of
Technology, Harbin, China, in 2005.
He is currently a Professor and a Doctoral
Supervisor with Harbin Engineering University,
Harbin. His main research interests include wire-
less sensor networks, peer-to-peer networks,
and information security.
Dr. Yang is a member of the Association
for Computing Machinery and a Senior Member
of China Computer Federation (CCF).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:18:25 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice