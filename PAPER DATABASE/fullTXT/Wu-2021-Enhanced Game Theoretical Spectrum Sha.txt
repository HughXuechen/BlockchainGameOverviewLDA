Enhanced Game Theoretical Spectrum Sharing Method Based on Blockchain Consensus
Enhanced Game Theoretical Spectrum Sharing
Method Based on Blockchain Consensus
Peiyan Wu, Wenbin Chen∗, Hualin Wu, Ke Qi, Miao Liu
Department of Computer Science and Network Engineering
Guangzhou University, China
Emails : peiyanwu@gzhu.edu.cn and cwb2011@gzhu.edu.cn
Abstract—The limited spectrum resources need to provide safe
and efficient spectrum service for the intensive users. Malicious
spectrum work nodes will affect the normal operation of the
entire system. Using the blockchain model, consensus algorithm
Praft based on optimized Raft is to solve the consensus problem
in Byzantine environment. Message digital signatures give the
spectrum node some fault tolerance and tamper resistance.
Spectrum sharing among spectrum nodes is carried out in
combination with game theory. The existing game theoretical
algorithm does not consider the influence of spectrum occupancy
of primary users and cognitive users on primary users’ utility and
enthusiasm at the same time. We elicits a reinforcement factor
and analyzes the effect of the reinforcement factor on strategy
performance. This scheme optimizes the previous strategy so that
the profits of spectrum nodes are improved and a good Nash
equilibrium is shown, while Praft solves the Byzantine problem
left by Raft.
Index Terms—Blockchain, Spectrum sharing, Reinforcement
factor, Byzantine problem, Consensus
I. INTRODUCTION
With the expansion of wireless network scale, the demand
of mobile internet service for spectrum will continue to
increase. However, due to the limited spectrum resources,
the problem of limited spectrum resources cannot meet the
existing requirements of communication services. At the same
time, malicious spectrum worker nodes may cause spectrum
sharing to stop or fail.Therefore, an effective method is needed
to manage the existing scarce spectrum resources. Therefore,
an effective method is needed to manage the existing scarce
spectrum resources while ensuring the security of system.
Blockchain has the characteristics of decentralization, secu-
rity and credibility. As a decentralized public digital ledger,
the transaction between users is recorded in the public ledger,
and decentralized distributed trust is realized in each node.
Blockchain can solve the problem of non-trust environment.
In view of the limited spectrum resources, the spectrum
in the practical application carries on the sharing question.
The authors of [1] propose a spectrum blockchain sharing
architecture based on human-to-human (H2H) communication
and machine-to-machine (M2M) communication, which solves
the problem of bilateral matching between users and devices.
Liang Y C [2] presents a blockchain-based secure spectrum
auction program, in which free spectrum is obtained by
spectrum monitoring in order to encourage authorized users
to share spectrum. Authors in [3] propose a solution to the
privacy leakage problem in the federated chain, which can be
used by malicious nodes to access the private information in
the blockchain by data mining.
Spectrum sharing has been proposed to improve the existing
problem of insufficient spectrum resources, thus improving
the efficiency of spectrum utilization.This technology has
been studied extensively by many scholars, but there are still
many unsolved problems. Authors in [4] realizes the network
resources allocation through the pricing auction method, de-
termines the winner to win the rule according to the different
network utility. Reference [5] analyze the distributed dynamic
spectrum sharing algorithm using the game theory model in
economics. In [6], graph coloring theory is used to model
the radio waves problem and a spectrum sharing distributed
algorithm is proposed. The distributed algorithm can achieve
the same performance as the centralized algorithm while
reducing the complexity of the system.
The cognitive radio technology [7] solves the problem of
spectrum sharing to a certain extent. The spectrum in cognitive
radio is divided into Licensed Bands and Unlicensed Bands
[8] . Licensed spectrum refers to the spectrum that is owned
by the operator and is subject to payment for its use, while
non-licensed spectrum refers to the spectrum that is freely
available to any user. A user with authorized spectrum is called
a Primary User. A user who uses cognitive radio technology
to select idle frequencies is called a Secondary User or a
Cognitive Radio User.Game theory is widely used to analyze
the choice of decision-making strategies. The optimal result
for solving the steady-state problem is the existence of Nash
equilibrium in the verified algorithm. The strategy of spectrum
sharing based on game theory has achieved some results.
Based on game theory, Xu et al. [9] studied the optimal
power allocation strategy for frequency-selective fading in
non-cooperative scenarios. Niyato et al [10] by establishing
a Cournot model, a game algorithm with better fairness and
stability is proposed. In [11], the game theory model maps the
cognitive cycle of real-time cognitive user interaction into a
game model, and analyzes the proposed distributed dynamic
spectrum sharing algorithm.
In this paper, we study the game model of using blockchain
for spectrum transaction.This model allows spectrum trading
978-1-6654-1368-8/21/$31.00 ©2021 IEEE
20
21
 IE
EE
 9
4t
h 
Ve
hi
cu
la
r T
ec
hn
ol
og
y 
Co
nf
er
en
ce
 (V
TC
20
21
-F
al
l) 
| 
97
8-
1-
66
54
-1
36
8-
8/
21
/$
31
.0
0 
©
20
21
 IE
EE
 |
 D
O
I: 
10
.1
10
9/
VT
C2
02
1-
FA
LL
52
92
8.
20
21
.9
62
54
28
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:23 UTC from IEEE Xplore.  Restrictions apply. 
to take place without a third party, and the transaction informa-
tion is stored in the block to ensure security, which can operate
normally in the environment of malicious spectrum nodes.
The improved game theory is used to improve the analysis of
decision-making between users. The simulation results show
that the performance of this strategy is optimized, and the
revenue of spectrum users is improved, which shows a good
Nash balance effect.
In the remainder of this paper, the system model is presented
in Section II. In Section III, Spectrum sharing nodes architec-
ture based on blockchain consensus is described. In Section IV
, we present the optimized spectrum sharing algorithm in game
theory. Section V analyzes the performance of the proposed
algorithm based on the simulation results. Finally, Section VI
concludes the paper.
II. SYSTEM MODEL
Based on the analysis of the above problems, we study
established a spectrum sharing model of wireless network
based on blockchain. As shown in the Fig.1, Primary users in
the communication system are the spectrum operators, which
form the primary user consortium blockchain. Relevant users
of the operator can form an subchain, which are responsible for
running specific services, while the primary user consortium
blockchain is responsible for on-chain resource managemen-
t. The secondary users in the communication system are
spectrum users, which form the secondary user consortium
blockchain. Users can generate parallel chains and enrich
the entire spectrum sharing ecology. The spectrum sharing
between primary users and secondary users in the system are
carried out by means of the game theory. All transaction data
generated by spectrum sharing transactions is recorded on the
chain and can be traced indelibly.
Fig. 1. Spectrum Sharing Blockchain Model.
The Primary User Consortium Blockchain is maintained
by its members. Multiple preselected member nodes can be
designated as bookkeepers within the consortium blackchain.
The generation of each block is determined by all preselected
member nodes. Other accessing nodes can make specific
queries through the chain’s open application programming in-
terface. The artificial intervention of the consortium blackchain
can be carried out on the consensus algorithm, which can
provide more flexible and convenient fault repair and privacy
protection. The use of credit token for transactions between
members, instead of real currency, enhances the efficiency of
capital turnover of affiliates. Secondly, the subchain of the
Primary User Consortium Blockchain can be expanded to take
charge of the specific business of spectrum sharing, which can
be continuously expanded in new application scenarios. The
most important thing about this design is that it can ensure
security, avoiding the interruption of trust in the whole chain
due to problems in a certain link or coordination, and at the
same time can play a role in privacy protection.
The secondary users constitute cognitive users consortium
blackchain. The nodes in the cognitive user blockchain can
sense the idle spectrum of the users in the primary users
consortium blackchain by cognitive radio technology, so as
to determine the appropriate communication parameters ac-
cording to the situation of other users in the chain. Since the
cognitive users consortium blackchain only stores instructions
and results, the amount of concurrency can be very large.
For more complex applications, we run in parallel chains. If
the secondary user subchain is attacked or there is a problem
with on-chain coordination trust, the problem of parallel chain
will only have a proof and will not have a great impact on
the normal operation of the blockchain.The parallel chain of
secondary users is mainly used to carry out the application
activities of secondary users. Because the spectrum sharing
system needs to be simple and stable, it is easy to make
mistakes if it is too complicated.
III. SPECTRUM SHARING NODES ARCHITECTURE BASED
ON BLOCKCHAIN CONSENSUS
A. Transaction process
When the primary user and the secondary user conduct the
spectrum transaction, the primary user will generate the trans-
action list and write the information. The block data structure
list as shown in Fig.2 includes the spectrum information of the
user, the spectrum quantity, the spectrum address, the time, the
price, the address of both sides of the transaction and so on.
Spectrum information is usually a large amount of data, in
order to ensure that it can be stored in the block, the original
spectrum data can be uploaded to the edge storage server. The
blockchain stores only the root hash value of the original data
on the server. A certain period of spectrum data generated by
the hash value, the hash value of each spectrum data constitute
the Merkle tree which can reflect any changes in the spectrum
data.
In practical applications, smart contracts can be formed and
appended to the transaction list for execution. The primary user
connects the hash value of the last transaction to the secondary
user’s public key and runs an encryption algorithm to get the
hash value. The information obtained by the primary user is
encrypted with its private key and is attached as a digital
signature at the end of the transaction list, which is sent to
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:23 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 2. Block Data Structure.
the address of the secondary user along with the token to be
paid. Finally, the primary user will calculate the identification
of the transaction list and broadcast it together with the list
to the whole block network to form a consensus, at which
time all nodes on the blockchain know that a transaction has
occurred between the primary and secondary users.
B. Consensus Algorithm Praft
The result of the spectrum sharing game model needs to
reach a consensus among all nodes of the system. The dis-
tributed consensus algorithm can guarantee the data between
nodes to reach a consensus all the time. In distributed systems,
the consensus algorithm not only considers the throughput and
delay of the system nodes, but also considers the fail-stop
failure problem [12] , which is caused by non-malicious attack.
This is equivalent to the Byzantine problem in the system.
Realistic application scenarios require consensus algorithms
to operate in a Byzantine fault-tolerant environment.
Aiming at the consensus model in the spectrum game,
this paper makes a preliminary analysis of several consensus
algorithms currently studied. PoW [13] algorithms have bottle-
necks in terms of throughput and transaction delay and it will
cause huge resource loss. As the number of consensus nodes
increases, the performance of the BFT-based class algorithm
will decrease exponentially [14]. Raft uses greater consistency
to reduce the number of states that need to be considered,
which is easy to implement on distributed systems. However,
Raft cannot work properly in the Byzantine problem scenario,
and the security and activity of the algorithm cannot be
guaranteed.
In this paper, the Raft algorithm is improved on the basis
of existing research. Using digital signature as a mechanism
to detect message tampering, a consensus algorithm Praft
is proposed, which ensures the security and viability of the
algorithm in terms of log tampering, leader selection and log
consensus. In order to make the algorithm understandable and
easy to implement, Praft follows the Raft state model. On the
basis of including state changes and trigger conditions of the
original Raft algorithm, Praft adds a trigger condition: when
the leader copies the log message to the follwer, the follower
detects that the message from the leader has been tampered
with. Follower will switch to candidate leader and initiate a
new round of election.
Fig. 3. Praft State Transition.
1) Leader election: When a node is elected, it creates a
new tenure number that is larger than any previous tenure.
Then the node status changes from follower to candidate. A
candidate who wants to become the leader needs to solicit the
voting opinions of other follower nodes and get the votes from
most of the nodes. Candidate sends a remote call (RequestVote
RPC) to the other nodes in parallel, after which the node
determines whether to vote for candidate by verifying the
logical time stamp in the message that identifies the last entry
in the candidate log list.
Raft algorithm cannot guarantee the security of elections in
Byzantine environment. After receiving the RequestVote RPC
message, the node is assumed to be the Byzantine node that
can randomly set a ”New” logical time stamp in the remote
call message and obtain votes from the other nodes during
the election phase. This has contributed to the failure of the
consensus.
Praft algorithm improved the leader election mechanism for
the Byzantine environment. Praft election mechanism consists
of three stages as follows:
a) Voting message sending phase: The first stage is
similar to the mechanism by which Raft sends messages. The
node sends a message containing the logical timestamp of the
last log item on which consensus has been reached. At this
stage, a node may forge a logical timestamp for an agreed log
entry in the Byzantine environment.
b) Committed proof: The node receives the first stage
voting message and first checks whether the logical timestamp
of the last consensus log item in the message list is “newer”
than the logical timestamp of the node’s own last consensus
log item. If it is more “new”, the logical timestamp of the
last agreed log entry on the current node is sent to candidate
as a response message parameter. The second stage requires
the candidate to prove to the other nodes that it has the last
consensus log item of the current node in its log list, proving
that it has a more complete log list than the voting node.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:23 UTC from IEEE Xplore.  Restrictions apply. 
c) Vote: After candidate receives the committed proof
request message, if candidate does have the logical timestamp
corresponding to the log item in the proof request message,
candidate returns the hash value of the log item as an argu-
ment. The node receives the message and confirms the vote
if it detects that its own hash is consistent with the hash of
its own node log item, otherwise it rejects the vote. Assuming
that candidate is a Byzantine node that does not contain log
entries that need to be proven, candidate cannot prove that it
has an updated list of logs.
2) Log Replication: The Praft log replication phase is also a
two-phase operation, in which the leader receives a command
from the client to write to the log and sends AppendEntries
to other followers to wait for a successful response from most
nodes. In Byzantine environments, both leader and follower
may be Byzantine nodes. If the leader is a Byzantine node,
the log of the leader sending followers may be tampered. If
follower is a Byzantine node, the log of the leader’s request
response may be tampered and added to the log list. In
view of the above two kinds of tampering possibilities, Praft
proposes using digital signature to solve the Byzantine node
tampering possibilities. Digital signature method: 1. Encrypts
the message digest with the private key to form a digital
signature; 2. Using the public key to decrypt the signature, the
abstract text is obtained; 3. The Message Digest is computed
and compared with the decrypted digest text. Log item digest
is generated using SHA-256. The log item digest is digitally
signed using RSA algorithm and the messages are serialized
and deserialized using encoding/go.
The message sent by the client to the Leader contains
not only the instruction to be executed, but also the digital
signature corresponding to the instruction. The Leader send the
log entry corresponding to the client request to the Follower.
If the Leader tamper with the instruction in the message, the
Follower receiving the message can detect that the log entry
has been tampered with by the Leader based on the digital
signature. In Praft, the follower refuse to add the tampered
log entry to the log list, and the follower change the status to
Candidate and start a new round of Leader election.
IV. SPECTRUM SHARING ALGORITHM IN GAME THEORY
We use game theory to study spectrum sharing among users.
Authors in [7] proposes the utility function of primary user and
secondary user, studying the relationship among primary user
price, utility, spectrum demand and other factors, thus finds
out the Nash equilibrium between primary user and secondary
user. However, previous studies did not consider both the
cognitive and primary users’ spectrum occupancy that affects
the primary users’ price and motivation. On this basis, we
add an enhancement factor to study the influence of spectrum
occupancy of primary and secondary users on the game.
Through analysis, it is proved that the improved algorithm can
achieve Nash equilibrium to complete the sharing in the game
model. The improved algorithm can describe the spectrum
characteristics between the main users more accurately and
get better sharing effect.
Considering the effect of spectrum occupacy between pri-
mary and secondary users on the game, the modified cognitive
user utility function is:
U(b) =
N∑
i=1
bik
(s)
i
[
(1 +
1
σ
)σ − 1
]
(1−λi)−
1
2
(
N∑
i=1
b2i+2µ
∑
i6=j
bibj)−
N∑
i=1
pibi
(1)
In the game function, b is the set of the size of the primary
user’s shared spectrum. b = [b1, b2, b3, · · · , bN ]. µ is the
spectrum similarity and N is the number of cognitive users.
where µ is the spectrum similarity which can indicate that the
larger µ is, the greater the similarity between the spectrums.
When µ = 1, the spectrums between primary users can be
substituted for each other in a non-differentiated state. When
µ = 0, the spectrum similarity between primary users is pretty
low and almost completely different. At this time, the cognitive
users cannot switch freely between the spectrum shared by
the primary users. k(s)
i is the spectral efficiency, which refer
to the spectrum efficiency of the secondary users renting to
the spectrum shared by primary users for communication
transmission. ki = log2(1 + 1.5Υi
ln( 0.2
BERtar )
), i = 1, 2, 3, · · · , n.
Assuming that QAM modulation is used in this paper, the
cognitive user transmission rate can be adjusted according to
parameters such as channel quality, where BERtar is the Bit-
Error-Rate (BER) and Υi is the Signal-Noise Ratio (SNR).
In order to ensure the quality of transmission, the threshold
value of BER is set as BERtar in this paper.
[
(1 + 1
σ )σ − 1
]
is the enhancement factor,which reflects the change of the
inverse demand of primary users with the spectrum occupancy
of cognitive users, and strengthens the influence of spectrum
occupancy of cognitive users on primary users. σ is the
Spectrum occupancy of the spectrum that the cognitive user
owns. When σ is 1, the cognitive user occupies all the free
spectrum of the primary user. When σ is 0, the cognitive user
does not occupy the free spectrum of the primary user. λi
represent the spectrum occupancy of the primary user. The
utility function for the primary user is continuous. We can get
the bi that makes the maximum value of the cognitive user
utility by differentiating U (b) as follows:
∂U(b)
∂bi
= k
(s)
i
[
(1 +
1
σ
)σ − 1
]
(1−λi)−bi−µ
∑
i6=j
bj−pj (2)
The bj in (2) is the size of the spectrum rented by the cognitive
user j. j 6= i. Making (2) equal to 0 can be solved as follows:
D(P ) = bi =
(k
(s)
i
[
(1 + 1
σ )σ − 1
]
(1− λi)− pi)(µ(N − 2) + 1)
(1− µ)(µ(N − 1) + 1)
−
µ
∑
i6=j
(k
(s)
i − pj)
(1− µ)(µ(N − 1) + 1)
(3)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:23 UTC from IEEE Xplore.  Restrictions apply. 
Simplify (3) to: bi = D1(P−i)−D2pi
D1(P−i) =
k
(s)
i
[
(1 + 1
σ )σ − 1
]
(1− λi)(µ(N − 2) + 1)
(1− µ)(µ(N − 1) + 1)
−
µ
∑
j 6=i
(k
(s)
j
[
(1 + 1
σ )σ − 1
]
(1− λj)− pj)
(1− µ)(µ(N − 1) + 1)
(4)
D2 =
µ(N − 2) + 1
(1− µ)(µ(N − 1) + 1)
(5)
In the spectrum sharing model, the utility function of the
primary user is the difference between the benefit and the cost
obtained by the primary users sharing the spectrum with their
respective bidding strategies. In this paper, the utility function
of the primary user proposed in [7] is used as follows:
Pri(P ) = bipi +Ri − Ci(bi), i = 1, 2, · · · , N (6)
where bi is the number of spectrum shared to by the cogni-
tive user, and Pi denote the set of free spectrum rental offers
by the primary user. Ri = c1Mi. P = {p1, · · · , pi, · · · , pN}.
c1 is the bid policy weight of the primary user sharing out the
spectrum. Ci(bi) is the cost function as follow [7]:
Ci(bi) = c2Mi(B
req
i − k(p)
i
Wi − bi
Mi
)2 (7)
c2 indicates the weight of the cost function of the primary
user. Mi indicates the amount of spectrum owned by the
primary user. Wi indicates the spectrum width of the primary
user. Breqi indicates the bandwidth required to guarantee the
connection of the primary user system to the server. k(p)
i
indicates the bandwidth efficiency of the primary user. k(p)
i =
Breq
i
Wi
Mi
. The differences between different primary users are
reflected by the parameters of each property of the spectrum.
To obtain the Nash equilibrium solution, one can use
∂Pri(P )
∂Pi
= 0. Equation (6) includes two variables bi and pi.
From the analysis of the continuous function (2). It is known
that by differentiating U(b) can yield bi at the maximum of
the cognitive user’s utility, substituting bi into the main user’s
utility function. The improved expansion of the primary user’s
utility function can be obtained as follows:
Pri(P ) = (D1(P−i)−D2pi)pi + c1Mi
− c2Mi(B
req − k(p)
i
Wi − (D1(P−i)−D2pi)
Mi
)2
(8)
The Nash equilibrium solution is obtained by differentiating
(8) as follows:
∂Pri(P )
∂Pi
= D1(P−i)− 2D2pi + 2c2k
(p)
i D2B
req
− 2c2k
(p)
i D2k
(p)
i
Wi − (D1(P−i)−D2pi)
Mi
= 0
(9)
V. SIMULATION
Blockchain model simulation was carried out at Goland,
mainly for the consensus algorithm Praft, and the communica-
tion between nodes is realized through Goland channel RPC.
The throughput of Praft decreases as the number of nodes
increases. Theoretically, Praft has a message communication
degree of O(n2). The core of Praft algorithm improvement
is to solve the Byzantine fault tolerance problem, rather than
improve the throughput of the algorithm. Experiments show
that Praft has the required throughput. With the increase of the
number of nodes, as shown in Fig.4, the delay of Praft algo-
rithm fluctuated between 10ms and 20ms, while the delay did
not increase with the increase of the number of nodes, which
was consistent with the experimental expectation. Therefore,
in order to achieve Byzantine fault tolerance, Praft algorithm
fails to achieve optimal network performance, but it still
has performance advantages compared with other mainstream
Byzantine fault tolerance algorithms.
Fig. 4. The relationship between the number of nodes and the latency.
The simulation of the game algorithm is carried out by
Mathematica and Python, which mainly studies the price game
between a cognitive user (N = 1) renting spectrum from two
primary users. The initial licensed bandwidth of the primary
user system is assumed to be 15 MHz. The Bit Error Ratio of
the identified user is set to the BERtar = 10−4. x=0,y=1,n=1.
The bandwidth required by the primary user to connect to the
server is Breq = 2. The weight of the benefit received by the
primary user for leasing a unit of spectrum is c1 = 2, and the
weight of the cost paid is c2 = 2. In this paper, simulation
experiments are conducted in terms of the primary user’s offer
strategy and the dynamic process of profit blog abandonment.
According to Equation (9), the influence of primary user
spectrum occupancy on primary user price can be obtained as
shown in the Fig.5.The spectrum occupancy rate of primary us-
er 2 is fixed at 0.5. Fig.5 shows that as the spectrum occupancy
rate of primary user 1 increases, the price of primary user 1
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:23 UTC from IEEE Xplore.  Restrictions apply. 
decreases while that of Primary User 2 increases. The main
reason is when primary user 1 takes up more spectrum. The
spectrum available to the cognitive user will decrease, resulting
in the cognitive user’s demand for spectrum from primary user
1 decreasing, and the cognitive user’s demand for spectrum
from primary user 2 increasing, so the price of primary user
2 goes up. In order to stabilize its interests, primary user 1
needs to reduce its own price to obtain the maximum benefit
when the cognitive user’ demand for its spectrum decreases.
In vertical comparison, The price for primary users at σ = 0.7
is higher than the price for primary users at σ = 0.4. When
the spectrum occupancy rate of cognitive users increases, the
price of primary users also increase, which verify the effect
of the improved algorithm.
Fig. 5. Impact of primary user spectrum occupancy on primary price.
To visualize the relationship between primary user utility
and cognitive user spectrum occupancy, we do an impact
relationship analysis on the model according to Equation
(8). As shown in the Fig.6, the spectrum occupancy rate of
the main user is fixed at 0.2. Horizontally, as the spectrum
occupancy of primary user 1 keeps increasing, the utility of
primary user 1 decreases and the utility of primary user 2
increases. The reason is that if the spectrum occupied by
primary user 1 increases, the spectrum that can be shared to
the cognitive user decreases. The spectrum that the primary
user can rent out to share will decrease, leading to a decrease
in its utility, and thus the cognitive user’s demand for the
spectrum of primary user 1 will decrease. Longitudinally,
when the spectrum occupancy of the cognitive user increases
(σ = 0.7 > σ = 0.4), the primary user price increases,
verifying the effectiveness of the improved algorithm.
The relationship in Fig.7 is derived according to (9). To
facilitate the analysis, the price of primary user 2 is set to 1
as well as the cognitive user spectrum occupacy σ = 0.5. The
relationship between the primary user profit and each primary
user price is modeled and analyzed. Horizontally, the profit of
primary user 1 increases gradually with primary user 1’s price,
Fig. 6. Effect of user spectrum occupancy on primary user utility.
but decreases after the highest point as primary user 1’s price
increases. This is due to the fact that when the primary user’s
price exceeds a certain value, the cognitive user will not choose
this primary user’s spectrum and will choose to lease other
primary users’ spectrum to achieve its requirements. Vertically,
the spectrum occupancy of fixed primary user 2 is 0.5, and
the profit decreases when the primary user’s own spectrum
occupancy increases (σ = 0.8 > σ = 0.5 > σ = 0.2). This
is because the amount of spectrum that can be shared with
the cognitive user decreases when the spectrum occupancy of
the primary user increases, leading to a decrease in its own
utility. In this figure, we also compare the performance of
our proposed algorithm with the algorithm in [7], which is
a dynamic spectrum game scheme. It can be seen from the
figure that, as the price of primary user 1 gradually increases,
the performance of the proposed algorithm is better than that
of the scheme proposed in [7], and the profit of primary user is
greater than that of the scheme proposed in [7]. This is because
the scheme we proposed dynamically adjusts the spectrum
occupancy of primary users, raising primary user’s profit.
In the improved primary user bidding strategy model, Nash
equilibrium and the optimal response can be obtained by
assigning relevant spectral parameters in the model in Equation
(9). The Fig.8 shows the best response and corresponding
Nash equilibrium point between primary users obtained by
the improved algorithm in this paper. It is assumed that the
spectrum occupancy of cognitive user λ = 1, the spectrum
occupancy of primary user 1 is λ1 = 0.2 and that of primary
user 2 is λ2 = 0.6. At the Nash equilibrium point, the price
of primary user 1 is higher than that of primary user 2. This
is due to the high spectrum occupancy of primary user 2,
which reduces the amount of spectrum that can be shared with
cognitive users. As a result, the incentive to share spectrum is
reduced, so the price is lowered to achieve the highest profit. In
order to achieve the maximum utility of the model by strategic
equilibrium among users, so the primary user 2 has a low price.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:23 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 7. The relationship between the primary user’s profit and the price.
Fig. 8. Optimal response and Nash equilibrium.
VI. CONCULSION
In our study, the game spectrum model is established under
the blockchain to achieve safe and efficient spectrum sharing
for operators and users. In order to solve the problem of
spectrum node consensus in Byzantine environment, Praft is
improved on the basis of Raft by using digital signature, which
makes the model consensus have certain characteristics of
fault tolerance and tamper-proof. In the spectrum game, the
enhancement factor is proposed, and the inverse demand func-
tion of primary users is improved based on the consideration
of spectrum occupancy of primary users and secondary. The
existence of Nash equilibrium in the improved algorithm is
verified by simulation, and the performance of this strategy is
optimized.
VII. ACKNOWLEDGMENTS
We would like to thank the anonymous referees for their
careful readings of the manuscripts and many useful sugges-
tions.
Wenbin Chen’s research has been supported by the research
project of Education Department of Guangdong Province
under Grant No.2019KTSCX131, the research project of
Guangzhou University under Grant No.YK2020007, the Nat-
ural Science Foundation of China under Grant No.U1936116
and No. 61801133, Yangcheng Scholars Research Project of
Guangzhou (202032832). Ke Qi’s research has been supported
by the Guangzhou Science and Technology Plan Project under
Grant No. 201707010283 and the National Science Foundation
of Guangdong Province under Grant No. 2017A030313374.
Miao Liu’s research has been supported by the Guangzhou
Municipal Universities project 1201620342.
REFERENCES
[1] Zhou Z, Chen X, Zhang Y, et al. Blockchain-empowered secure spectrum
sharing for 5G heterogeneous networks[J]. IEEE Network, 2020, 34(1):
24-31.
[2] Liang Y C. Blockchain for dynamic spectrum managemen-
t[M]//Dynamic Spectrum Management. Springer, Singapore, 2020:
121-146.
[3] Gai K, Wu Y, Zhu L, et al. Privacy-preserving energy trading using
consortium blockchain in smart grid[J]. IEEE Transactions on Industrial
Informatics, 2019, 15(6): 3548-3558.
[4] Huang J, Han Z, Chiang M, et al. Auction-based resource allocation
for cooperative communications[J]. IEEE Journal on Selected Areas in
Communications, 2008, 26(7): 1226-1237.
[5] Clemens N, Rose C. Intelligent power allocation strategies in an
unlicensed spectrum[C]//First IEEE International Symposium on New
Frontiers in Dynamic Spectrum Access Networks, 2005. DySPAN 2005.
IEEE, 2005: 37-42.
[6] Peng C, Zheng H, Zhao B Y. Utilization and fairness in spectrum
assignment for opportunistic spectrum access[J]. Mobile Networks and
Applications, 2006, 11(4): 555-576. Huang J, Han Z, Chiang M, et al.
Auction-based resource allocation for cooperative communications[J].
IEEE Journal on Selected Areas in Communications, 2008, 26(7): 1226-
1237.
[7] Niyato D, Hossain E. Competitive pricing for spectrum sharing in cog-
nitive radio networks: Dynamic game, inefficiency of nash equilibrium,
and collusion[J]. IEEE journal on selected areas in communications,
2008, 26(1): 192-202.
[8] Wang B, Liu K J R. Advances in cognitive radio networks: A survey[J].
IEEE Journal of selected topics in signal processing, 2010, 5(1): 5-23.
[9] Xu Y, Chen W, Cao Z. Spectrum sharing in frequency-selective unli-
censed bands: a game theoretic approach[J]. Wireless Communications
and Mobile Computing, 2014, 14(4): 460-471.
[10] Niyato D, Hossain E. A game-theoretic approach to competitive spec-
trum sharing in cognitive radio networks[C]//2007 IEEE Wireless Com-
munications and Networking Conference. IEEE, 2007: 16-20.
[11] Neel J, Reed J H, Gilles R P. The role of game theory in the analysis
of software radio networks[C]//Proc. SDR Forum Tech. Conf. 2002: 4.
[12] Schlichting R D, Schneider F B. Fail-stop processors: An approach to
designing fault-tolerant computing systems[J]. ACM Transactions on
Computer Systems (TOCS), 1983, 1(3): 222-238.
[13] Vukolić M. The quest for scalable blockchain fabric: Proof-of-work
vs. BFT replication[C]//International workshop on open problems in
network security. Springer, Cham, 2015: 112-125.
[14] Kwon J. Tendermint: Consensus without mining[J]. Draft v. 0.6, fall,
2014, 1(11).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:23 UTC from IEEE Xplore.  Restrictions apply. 
		2022-08-25T02:35:24-0400
	Preflight Ticket Signature