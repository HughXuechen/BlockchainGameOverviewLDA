URIM: Utility-Oriented Role-Centric Incentive Mechanism Design for Blockchain-Based Crowdsensing
URIM: Utility-Oriented Role-Centric
Incentive Mechanism Design
for Blockchain-Based Crowdsensing
Zheng Xu1,2,3, Chaofan Liu1,2,3, Peng Zhang1,2,3(B), Tun Lu1,2,3(B),
and Ning Gu1,2,3
1 School of Computer Science, Fudan University, Shanghai, China
{zxu17,cfliu18,zhangpeng ,lutun,ninggu}@fudan.edu.cn
2 Shanghai Key Laboratory of Data Science, Fudan University, Shanghai, China
3 Shanghai Institute of Intelligent Electronics and Systems, Shanghai, China
Abstract. Crowdsensing is a prominent paradigm that collects data by
outsourcing to individuals with sensing devices. However, most exist-
ing crowdsensing systems are based on centralized architecture which
suffers from poor data quality, high service charge, single point of fail-
ure, etc. Some studies have explored decentralized architectures and
implementations for crowdsensing based on blockchain, while incentive
mechanisms for worker participation and miner participation, which
serve as a crucial role in blockchain-based crowdsensing systems (BCSs),
are ignored. To address this issue, we propose an incentive mechanism
design named URIM to maximize participants’ utilities, which consists
of worker-centric and miner-centric incentive mechanisms for BCSs. For
the worker-centric incentive mechanism, we model it as a reverse auction,
in which dynamic programming is utilized to select workers, and pay-
ments are determined based on the Vickrey-Clarke-Groves scheme. We
also prove this incentive mechanism is computationally efficient, individ-
ually rational and truthful. For the miner-centric incentive mechanism,
we model interactions among the requester and miners as a Stackelberg
game and adopt the backward induction to analyze its equilibrium at
which the utilities of the requester and miners are optimized. Finally,
we demonstrate the significant performance of URIM through extensive
simulations.
Keywords: Crowdsensing · Blockchain · Incentive mechanism ·
Reverse auction · Game theory
1 Introduction
In recent years, sensing devices (such as smartphones, wearable devices and
tablets) have been emerging in our daily life. The proliferation of devices capa-
ble of sensing and computing leads to the prosperity of a new sensing paradigm
called crowdsensing. Crowdsensing leverages “humans-as-sensors” to enable tra-
ditional Internet of Things (IoT) application by combing perception capabilities
c© Springer Nature Switzerland AG 2021
C. S. Jensen et al. (Eds.): DASFAA 2021, LNCS 12683, pp. 358–374, 2021.
https://doi.org/10.1007/978-3-030-73200-4_25
http://crossmark.crossref.org/dialog/?doi=10.1007/978-3-030-73200-4_25&domain=pdf
https://doi.org/10.1007/978-3-030-73200-4_25
URIM for Blockchain-Based Crowdsensing 359
and crowdsourcing in many important fields, such as intelligent transportation,
public safety, environmental monitoring and urban public management.
In the previous studies, most research on crowdsensing adopted centralized
system architecture which generally consists of three roles: centralized platform,
task requesters, and crowdsensing workers (also known as the data providers)
[10]. However, there exists some drawbacks in the centralized crowdsensing sys-
tems, such as poor data quality, high service charge, single point of failure and
privacy disclosure [13]. Therefore, some studies have explored decentralized tech-
niques for crowdsensing systems, wherein a very popular solution is blockchain.
Blockchain-based crowdsensing systems (BCSs) have following advantages. The
decentralization, immutability and security of blockchain can facilitate the coop-
eration among mutually distrusted participants without service fees charged by
the centralized platform and ensure the audibility of the crowdsensing data.
Moreover, the decentralized blockchain architecture can avoid the single point
of failure which may cause shutdown of traditional centralized systems. The
anonymity of blockchain transactions can reduce risks of privacy disclosure.
Existing studies of BCSs mainly focus on architecture design and smart con-
tracts implementation, while the incentive mechanisms for user engagement,
which serve as a crucial role in crowdsensing systems, are ignored. Nowadays,
most incentive mechanisms are designed for traditional centralized crowdsensing
systems [15,19]. However, BCSs operate automatically via smart contracts with-
out a centralized reliable intermediary. Thus, the incentive mechanism of BCSs
is designed to optimize the utilities of participants when interacting with the
blockchain, rather than the centralized platform. Although there are some stud-
ies on the incentive mechanisms for BCSs, they mainly focus on selection and
reward allocation for workers [2,3,9]. They omit an exclusive and important role
called miner in BCSs to handle and validate all operations. Existing incentive
mechanisms generally involve the task requesters and workers, but ignore min-
ers. Hence, existing incentive mechanisms are not fully compatible with BCSs.
Due to the lack of appropriate incentive mechanisms, the utilities of participants
cannot be maximized, and the efficiency of BCSs decreases.
There is an urgent need to design appropriate incentive mechanisms for BCSs,
but it is a challenging task. First, BCSs allow participants to exchange data with-
out a centralized truthful intermediary. It is crucial and challenging to build a
system model of BCSs that can be compatible with holistic incentive mechanism
design. Second, it is difficult to formalize how multiple roles interact with each
other and how to optimize their utilities. Compared with traditional crowd-
sensing systems, a new role called miner is involved in BCSs. Miners directly
determine the operating efficiency and security of BCSs, while how to select
efficient miners in a safe and reliable way is not easy. Meanwhile, there are com-
plex interactions between workers, miners and requesters, which aggravate the
complexity of utility optimization in the incentive mechanism design.
Based on the above background, we focus on: How to design holistic incentive
mechanisms for BCSs to maximize utilities of participating roles? To solve this
problem, we propose a utility-oriented role-centric incentive mechanism design
360 Z. Xu et al.
named URIM which aims to maximize utilities of participating roles in BCSs.
According to the processes and participants of BCSs, workers and miners directly
determines the performance of BCSs. Hence, URIM is designed to consist of
worker-centric and miner-centric incentive mechanisms. In the worker-centric
incentive mechanism (WCIM), the task requester publishes its task to BCSs
through smart contracts. Then each worker submits its solution of the task
and corresponding bidding price. Smart contracts on BCSs automatically selects
workers by a dynamic programming algorithm and determines their payments
by Vickrey-Clarke-Groves (VCG) scheme. The above interactions among the
task requester, workers and smart contracts are modeled as a reverse auction.
In the miner-centric incentive mechanism (MCIM), we first adopt cryptographic
sortition to select eligible miners. For motivating miners to validate transactions
and mine blocks, the task requester announces total transaction fees shared by
all transactions related with its task. Then miners decide their mining strategies
to validate different number of transactions and compete for the corresponding
transaction fee. The above interactions among the task requester and miners are
modeled as a Stackelberg game to optimize utilities of the task requester and
miners. The main contributions of this paper are as follows:
• We propose a utility-oriented role-centric incentive mechanism design named
URIM for BCSs. To the best of our knowledge, this is the first work on holistic
incentive mechanism design for BCSs to ensure the utility maximization of
all roles.
• We design a reverse auction based WCIM which adopts dynamic program-
ming to select desirable workers and determine payments based on VCG
scheme. We theoretically prove that WCIM is computationally efficient, indi-
vidually rational and truthful.
• We design the MCIM that selects miners by cryptographic sortition and for-
mulates mining competition by a two-stage Stackelberg game. Through back-
ward induction, we analyze and validate the best response strategies of miners
and the unique Stackelberg equilibrium where the utilities of the requester
and miners are jointly maximized.
• We demonstrate the significant performance of URIM through extensive sim-
ulations.
The remainder of the paper is organized as follows. In Sect. 2, we review
the related work of blockchain-based crowdsensing systems and incentive mech-
anisms for crowdsensing. In Sect. 3, we present the system model of BCSs with
the design of URIM. We then present two compositions of URIM in Sect. 4 and
5. We present performance evaluations in Sect. 6. Finally, we conclude this paper
in Sect. 7.
2 Related Work
In this section, we mainly review related research on the blockchain-based crowd-
sensing systems and incentive mechanisms for crowdsensing.
URIM for Blockchain-Based Crowdsensing 361
Blockchain-Based Crowdsensing Systems. Blockchain and automated exe-
cution of smart contracts greatly enhance the decentralized communication and
cooperation without an intermediary in many fields [5]. In particular, the crowd-
sensing system can take the benefits of blockchain to achieve fair and trust-less
collaboration. Crowdbc [13] proposes a decentralized crowdsensing framework
based on blockchain and implements the main concepts in the framework through
the usage of smart contracts. Zebralancer [14] shows how an anonymous decen-
tralized crowdsensing system can be implemented on top of blockchain, which
ensure the privacy of the crowdsensing data while preserves the transparency of
blockchain systems. In [2], authors build a decentralized crowdsensing platform
for data trading on blockchain. The research of homomorphic encryption for fair
and secure BCSs is discussed in [21]. Zero-knowledge proof technique is pro-
posed to enable data providers to submit data through a privacy preserving and
secure way in BCSs [6]. The location privacy attack in the crowdsensing system
is discussed in [20]. This work proposes a blockchain-based privacy preservation
framework for protecting location of workers. These efforts are mainly aimed at
how to implement crowdsensing on the blockchain.
Incentive Mechanism for Crowdsensing. The existing incentive mechanisms
for crowdsensing systems can be divided into monetary and non-monetary incen-
tive mechanisms. In monetary incentive mechanisms, auction is a common app-
roach to pay workers with either real money or virtual tokens [7,11]. The radp-
vpc mechanism is proposed in [12], which aims to minimize the platform cost
and maintain the participation level of workers. Yang et al. propose a reverse
auction based incentive mechanism to determine winners and their payments
[19]. Some studies have attempted to provide monetary incentive mechanisms
based on BCSs. An et al. propose a blockchain-based crowdsensing data trad-
ing system with truthful and confidential incentive mechanisms in [2]. Truthful
and cost-optimal incentives for mobile user participation are designed in [3].
Hu et al. design the workflow of BCSs with the help of automatic smart con-
tracts and they leverage a three stage Stackelberg game to motivate participants
in [9]. The above works [2,3,9] only consider the participation of workers, but
they ignore the mining competition and consensus achievement. Non-monetary
incentive mechanisms provide comprehensive and long-term incentives for par-
ticipants. In [1], a reputation management framework is proposed to evaluate
both the contributions quality and the trust level of participants. Crowdsensing
data trustworthiness are quantified based on statistical and vote-based reputa-
tion scores in [17].
3 System Overview
In this section, we present the system model of BCSs with the holistic incentive
mechanism design. As shown in Fig. 1, there generally exists three roles partici-
pating in BCSs: the task requester, workers and miners. The task requester and
workers can also be regarded as miners when they join in the mining competition.
362 Z. Xu et al.
Fig. 1. System model of blockchain-based crowdsensing.
1. Task requester. Let R be the task requester (hereinafter referred to as
requester), and R publishes crowdsensing task ST to the BCS. ST defines the
sensing requirement including the task budget B, task duration and descrip-
tion of target data. To motivate workers to enhance the quality of sensing
information, and miners to validate transactions related with ST , a certain
amount of compensation will be paid to workers and miners respectively.
2. Worker. Let W = {w1, w2, · · · , wm} be the set of all workers. Worker wi
should submit its solution SLi and bidding price bi before the task ending
time if wi is interested in task ST .
3. Miner. The responsibility of miners is to secure the blockchain network and
to deal with every transaction in it. Each miner validate transactions in its
block to compete for the mining reward which includes a specific block reward
and fees sent with validated transactions. Miners are selected from those
requesters and workers by a specific selection manner.
In Fig. 1, the workflow of BCSs with utility-oriented role-centric incentive
mechanism contains five stages as follows:
1. Participants register. In the beginning, the requester and workers join in
this system. Each registered participant has a unique public/private key pair
to secure its transactions.
2. Publish crowdsensing task. In this stage, the requester publishes the
crowdsensing task to BCSs via smart contracts.
3. Submit crowdsensing information. Workers can retrieve crowdsensing
tasks they are interested in by interacting with blockchain. Workers submit
crowdsensing solutions and bidding prices before the task deadline.
4. Select workers and determine payments. After receiving crowdsensing
solutions, BCSs automatically select desirable workers and determine their
payments via smart contracts.
URIM for Blockchain-Based Crowdsensing 363
5. Select miners and generate blocks. Based on participants’ computing
power, cryptographic sortition is adopted to randomly and unpredictably
select miners. Selected miners pack bundled transactions into a block, then
compete for mining rewards with proof of work (PoW) consensus.
The goal of incentive mechanism design for BCSs is to motivate participants and
maximize their utilities. Other issues in the design and implementation of smart
contracts in BCSs is out of the scope of our paper. People can refer to [2,13,21]
for these issues. Both workers and miners play an important role in determining
the performance of BCSs, so we need to design incentive mechanisms for them.
In Stage 4, we propose a worker-centric incentive mechanism, in which eligible
workers are paid a reasonable return according to their contribution and bidding
price. In Stage 5, we propose a miner-centric incentive mechanism, in which
miners compete with each other for a total transaction fee.
4 Worker-Centric Incentive Mechanism
In this section, we propose a reverse-auction-based worker-centric incentive
mechanism named WCIM to select workers by dynamic programming, and deter-
mine their payments through VCG scheme.
After the requester R posts the task ST on BCSs, reverse-auction-based
WCIM will output a subset of workers S ∈ W as winners and determine the
payment for each winner wi ∈ S by taking workers’ contribution vi and bidding
price bi as input. These processes are performed automatically on smart con-
tracts. The sum of all winners’ contributions is represented as
∑
wi∈S vi. The
utility of R is the difference between winners’ contributions and their social costs,
which is represented as
∑
wi∈S (vi − bi). WCIM aims to maximize the utility of R
while satisfying the budget control. Hence, WCIM can be formulated as follows:
Maximize
∑
wi∈S
(vi − bi), Subject to
∑
wi∈S
bi ≤ B. (1)
The WCIM is designed to satisfy properties as follows:
– Computational Efficiency. The incentive mechanism is computationally
efficient if its computation runs in polynomial time.
– Individual Rationality. The incentive mechanism is individually rational
if each worker has non-negative utility.
– Truthfulness. The incentive mechanism is truthful if no worker could obtain
higher utility by reporting a false bid that deviates from its true cost no matter
what others report.
4.1 Implementation of WCIM
From the above, WCIM consists of workers selection and payment determination.
364 Z. Xu et al.
Wokrers Selection. We reduce the workers selection to 0–1 Knapsack problem
which is constructed as follows and use dynamic programming for the optimal
solution in Algorithm 1.
Workers are denoted by set W = {w1, · · · , wm}. Workers’ bidding prices
and contributions are denoted by {b1, · · · , bm} and {v1, · · · , vm}. We map work-
ers’ bidding set {b1, · · · , bm} to a non-negative integer set {βb1, · · · , βbm} by
multiplying each bidding price with amplification factor β. Meanwhile, we use
xi ∈ {0, 1} , i ∈ {1, · · · ,m} to represent if worker wi will be selected. The work-
ers selection problem is constructed to determine X = {x1, · · · , xm} to
Maximize
m∑
i=1
(vi − bi) · xi, Subject to
m∑
i=1
βbixi ≤ βB. (2)
Payment Determination. We propose a VCG [18] based payment determina-
tion algorithm illustrated in Algorithm 2. In the generalized VCG auction, each
winner is required to pay “harm” imposed on other workers, i.e., the difference
between the optimal utility of the requester with and without this winner [18].
We define V (S)−wi
W as the optimal utility of R excluding the contribution of
worker wi, which can be represented as
V (S)−wi
W = V (S)W − (vi − bi) . (3)
Then, we define V (S)W\{wi} as the optimal utility of R excluding the partic-
ipation of worker wi. Thus, the payment pi of worker wi can be represented
as
pi = vi −
(
V (S)W\{wi} − V (S)−wi
W
)
. (4)
4.2 Theoretical Analysis of WCIM Properties
In this subsection, we prove that WCIM satisfies mentioned three properties:
computational efficiency (Lemma 1), the individual rationality (Lemma 2) and
the truthfulness (Lemma 3).
Lemma 1. WCIM is computationally efficient.
Proof. The winners selection has been reduced to 0–1 Knapsack problem, as
illustrated in Algorithm 1 and it takes O (nβB) time. The payment determi-
nation illustrated in Algorithm 2 takes O (mnβB) time. WCIM is executed by
Algorithm 1 and 2 sequentially and its running time is the sum of them. Hence,
WCIM is a polynomial-time mechanism and computationally efficient. ��
Lemma 2. WCIM is individually rational.
Proof. Based on (4), we have
pi = vi −
(
V (S)W\{mi} − V (S)−mi
W
)
= vi −
(
V (S)W\{mi} − V (S)W + vi − bi
)
= V (S)W − V (S)W\{mi} + bi.
(5)
URIM for Blockchain-Based Crowdsensing 365
Algorithm 1. The Winners Selection Algorithm
Input: The worker set {w1, w2, · · · , wm}, their bid set {b1, b2, · · · , bm}, their contribution set
{v1, v2, · · · , vm} and the budget B, the amplification factor β;
Output: The selected worker set S;
1: S ← �, H [i, j] ← 0;
2: for i from 1 to m do
3: for j from 0 to βB do
4: if βbi ≤ j && H [i − 1, j − βbi] + (vi − bi) > H [i − 1, j] then
5: H [i, j] ← H [i − 1, j − βbi] + (vi − bi);
6: X [i, j] ← 1;
7: else
8: H [i, j] ← H [i − 1, j];
9: X [i, j] ← 0;
10: end if
11: end for
12: end for
13: V ← H [m, βB];
14: B′ ← 0;
15: for j from βB downto 0 do
16: if H [m, j] == V then
17: B′ ← j/β;
18: end if
19: end for
20: for i from m downto 0 do
21: if X
[
i, βB′] == 1 then
22: S ← S ∪ {wi};
23: B′ = B′ − bi;
24: end if
25: end for
26: return S;
Since S is the winner set, it is easy to find V (S)W ≥ V (S)W\{mi}, and thus
pi ≥ bi. Hence, WCIM is individually rational. ��
Lemma 3. WCIM is truthful.
Proof. If wi reports a truthful bidding price, its utility can be represented as
follows:
U (wi) = pi − bi = V (S)W − V (S)W\{wi} + bi − bi
= V (S)W − V (S)W\{wi} .
(6)
In (6), wi is unable to influence the value of V (S)W\{wi}. After reporting
the untruthful bidding price b
′
i from the truthful bidding price bi, the utility of
wi is changed as follows:
ΔU (wi) = U
(
w
′
i
)
− U (wi) = V (S)W ′ − V (S)W ′\{wi} −
(
V (S)W − V (S)W\{wi}
)
= V (S)W ′ − V (S)W
(7)
From Lemma 2, we can obtain V (S)W ′ ≤ V (S)W , and then ΔU (wi) ≤ 0.
Thus, the worker wi cannot get higher utility by reporting an untruthful bidding
price. Hence, WCIM is truthful. ��
366 Z. Xu et al.
Algorithm 2. The Payment Determination Algorithm
Input: Winner set S = {w1, w2, · · · , wm}, their bid set {b1, b2, · · · , bm} and contribution set
{v1, v2, · · · , vm};
Output: The winner payment set P ;
1: P ← �;
2: for j from 1 to m do
3: V (S)
−wi
S = V (S)S − (vi − bi)
4: Calculate V (S)S\{wi} according to Algorithm 1
5: pi = vi −
(
V (S)S\{wi} − V (S)
−wi
S
)
6: P ← P ∪ {pi}
7: end for
8: return P ;
5 Miner-Centric Incentive Mechanism
In this section, we model the miner-centric incentive mechanism as a Stackelberg
game to decide how to optimize the utility of the requester and miners.
5.1 Blockchain Mining with Crowdsensing
Fig. 2. Mining competition
As shown in Fig. 2, the block mining competition includes 5 steps that are, in
order, miners selection, transaction fee announcement, transaction validation,
block mining and block validation. In the beginning, eligible miners are selected
by cryptographic sortition according to their computing power. Cryptographic
sortition has sufficient randomness and unpredictability to eliminate manipula-
tion of consensus led by the collusion among requesters, workers and miners [4].
We refer to and improve the work [16] so that participants with higher computing
power could be selected with more chance.
URIM for Blockchain-Based Crowdsensing 367
Hence, a participant can be selected as the miner mj at epoch τ if this con-
dition is met:
HASH(〈τ‖rand(τ)〉mj )
2L · 1−e−kI
1+e−kI ≤ Iτ
j where rand (τ) is a public ran-
domness that can be extracted from the blockchain at epoch τ , 〈τ‖rand (τ)〉mj
is a signature of message τ‖rand (τ) produced with private key of mj , HASH
is a deterministic hash function, L is the bits of the output of HASH, Iτ
j is the
fraction of mj ’s computing power over all miners in BCSs at epoch τ .
Unlike traditional mining in which transaction fee is paid by each initiator,
the requester R has to pay transaction fees to motivate miners to pack and vali-
date transactions since all transactions are related to its task. After the selection
of miners, R announces total transaction fee F that all miners compete for. If one
miner successfully solves a crypto puzzle, it will broadcast its solution to BCSs.
After the solution reaches Proof-of-Work (PoW) consensus, a new block is mined
successfully and its miner obtains the mining reward which includes voluntary
transaction fees of this block and a fixed block reward. The voluntary transac-
tion fees depend on the number of transactions in the block, in other words, the
miner can earn more voluntary transaction fees if it packs and validates more
transactions.
Winning a mining reward depends on mining and propagating a block as
quickly as possible. During the mining process, whether a miner can mine
a new block depends on its relative computing power μ. However, the block
may be orphaned by subsequent blocks and hence its miner will not be paid
because of propagation time lag [8]. The occurrence of mining a block fol-
lows the Poisson distribution, and the probability of block being orphaned is
Porphan = 1− e−λT (r), where λ = 1/600 and T (r) represents the block propaga-
tion time which depends linearly on r [8]. Therefore, the probability of winning
the mining reward is denoted by P = μ (1 − Porphan) = μe−λεr, where ε is a
delay factor reflecting the impact of r on T (r).
Given the set of selected miners, denoted by M = {m1, · · · ,mn}, each miner
mj ∈ M decides to include rj transactions in its block. The utility of mj is
determined by two parts: 1) the mining reward, and 2) the electricity and other
costs associated with mining. Thus, the utility of mj is presented by
U j
m =
(
rjF∑
mn∈S rn
+ D
)
Pj − cj =
(
rjF∑
mn∈S rn
+ D
)
μje
−λεrj − cj (8)
where rjF∑
mn∈S rn
means transaction fees obtained by mj according to the ratio
of its number of transactions, and D means the fixed block reward. The utility
of the requester R is
UR (F ) = f (r1, · · · , rn) − F (9)
where f (r1, · · · , rn) is the satisfaction function with respect to the number
of verified transactions from selected miners. We made a realistic and general
assumption that f (0, · · · , 0) = 0 and f (r1, · · · , rn) is a strictly concave function
in variables r1, · · · , rn and monotonically increasing in each rj [19].
368 Z. Xu et al.
5.2 Two-Stage Stackelberg Game Formulation
According to Sect. 5.1, we can formulate MCIM as a two-stage Stackelberg game.
In the stage I of MCIM, R announces a total transaction fee F to motivate miners
to pack transactions into their blocks. Since no rational miners will join in the
mining competition with negative earnings, so we consider that F > 0. In the
stage II of MCIM, each miner mj ∈ M decides to pack a different amount of
transactions rj in block mining competition to maximize its utility. Let Φ =
{r1, · · · , rn} denote the strategy profiles consisting of all miners’ strategies and
Φ−j denotes the strategy profile excluding rj . Thus in MCIM, the requester
is the leader and miners are the followers. The objective of MCIM is to find
the Stackelberg equilibrium where R can maximize its utility with the response
strategies of miners, which is represented as follows:
– In stage I:
Maximize UΦ
R (F ) , Subject to F > 0. (10)
– In stage II:
Maximize U j
m, Subject to rj ≥ 0. (11)
5.3 Equilibrium Analysis for MCIM
In this section, we analyze the optimal strategy of miners and the utility maxi-
mization of the requester. We apply the backward induction method to analyze
the Stackelberg equilibrium of MCIM. In the stage II of MCIM, given the total
transaction fee F , miners compete with each other to maximize their own utility
by choosing their individual strategy, which can be considered as a block mining
game (BMG) GM =
{
M,Φ,
{
U j
m
}
mj∈M
}
, where M is the set of miners, Φ is
miners’ strategy set and U j
m is the utility of miner mj .
Definition 1. A set of strategies Φ∗ = {r∗
1 , · · · , r∗
n} is the Nash equilibrium of
the BMG if U j
m
(
r∗
j , Φ∗
−j
) ≥ U j
m
(
rj , Φ
∗
−j
)
for any rj ≥ 0.
Theorem 1. A Nash equilibrium in BMG GM =
{
M,Φ,
{
U j
m
}
mj∈M
}
exists.
Proof. We compute the first order and second order derivatives of U j
m defined
in (8) with respect to rj :
∂U j
m
∂rj
=
(
F
∑
mn �=j∈S rn
(∑
mn∈S rn
)2 − λε
(
Frj∑
mn∈S rn
+ D
))
· μje
−λεrj (12)
and
∂2U j
m
∂r2j
= − λεμje
−λεrj
(
F
∑
mn �=j∈S rn
(∑
mn∈S rn
)2 − λε
(
Frj∑
mn∈S rn
+ D
))
−
μje
−λεrj
(
2F
∑
mn �=j∈S rn
(∑
mn∈S rn
)3 + λε
(
F
∑
mn∈S rn − Frj
(∑
mn∈S rn
)2
))
< 0.
(13)
URIM for Blockchain-Based Crowdsensing 369
Thus, U j
m is strictly concave with respect to rj . Hence, given any F > 0 and
any strategy profile Φ−j of the other miners, the best response strategy of mj is
unique when rj ≥ 0. Accordingly, the Nash equilibrium of noncooperative BMG
GM exists.
Further, by setting the first derivative of U j
m to 0, we have
(
F
∑
mn �=j∈S rn
(∑
mn∈S rn
)2 − λε
(
Frj∑
mn∈S rn
+ D
))
· μje
−λεrj = 0, (14)
and we can obtain the best response strategy of mj which is denoted as β (rj)
in (15):
β (rj) =
{
0, otherwise.
√
F λε
(
F λε
∑
mn �=j∈S rn+4D+4F
)
∑
mn �=j∈S rn−λε(2D+F )
∑
mn �=j∈S rn
2λε(D+F ) , F ≥ 0.
(15)
According to (14), we have
λεD
(
∑
mn∈S
rn
)2
+ λεFrj
∑
mn∈S
rn = F
∑
mn �=j∈S
rn. (16)
Then, we can get (λε |M | D + λεF )
∑
mn∈S rn = F (|M | − 1) by summing up
(16) over all selected miners. Thus,
∑
mn∈S
rn =
F (|M | − 1)
λε |M | D + λεF
. (17)
By substituting (17) into (16), we have the unique Nash equilibrium for miner
mj in BMG, as shown in (18):
r∗
j =
(
F 2 + DF
)
(|M | − 1)
λε |M | (|M | D + F ) (F − D)
. (18)
��
According to the above analysis, the requester knows that there exists a
unique Nash equilibrium for selected miners for any F > 0. Thus the requester
can maximize its utility by choosing the optimal transaction fee F .
Theorem 2. There exists the unique Stackelberg Equilibrium
(
F ∗, rne
j
)
in the
MCIM game, where F ∗ is the unique maximizer of the requester’s utility in (9)
and rne
j is given by (18) with F ∗.
Proof. Since rational miners will not participate in mining when F = 0,
UR (F ) = 0 for F = 0 and approaches to −∞ when F goes to ∞. Note
that f (r1, · · · , rn) is a strictly concave function in variables {r1, · · · , rn}, hence
UR (F ) has a unique maximum value when F = F ∗ that can be efficiently cal-
culated by either bisection or Newton’s method [19]. Therefore, there exists a
unique Stackelberg Equilibrium
(
F ∗, rne
j
)
in MCIM. ��
370 Z. Xu et al.
6 Performance Evaluation
In this section, we conduct extensive simulations to evaluate and investigate
impacts of key parameters on performance of URIM. We present simulation
settings, metrics and results as follows.
6.1 Simulation Setup
In the simulation, we consider multiple workers compete to complete the task,
and submit their bidding prices and solutions. Then, miners are selected to pack
transactions and compete for transaction fees. For evaluating the WCIM, the
bidding price b and the contribution v of each worker is normally distributed
over [0.1, 1] and [0.01, 0.5] respectively. The number of workers |W | varies from
100 to 1000 with the increment of 100. For evaluating the MCIM, the utility
of the requester is set as UR (F ) = θ log
(
1 +
∑
mj∈M rj
)
− F that satisfies the
assumptions in Sect. 5.1. We set θ to 104. The fixed block reward D is fixed
at 100 and the delay factor is fixed at 10−4. For each miner, its mining cost is
randomly generated from [10, 20] and μ is randomly generated from [0.001, 0.1].
All simulations are performed in Python 3.7.0 and Solidity 0.7.0 on a Windows
machine with Intel Core i7-7700 CPU and 16 GB memory.
Fig. 3. Running time. Fig. 4. Individual ratio-
nality.
Fig. 5. Truthfulness.
Fig. 6. Overpayment ratio
at varied budgets.
Fig. 7. Overpayment ratio
at fixed budget.
Fig. 8. Utility of requester.
URIM for Blockchain-Based Crowdsensing 371
6.2 Evaluation of the Worker-Centric Incentive Mechanism
To investigate the performance of WCIM, we present following metrics: run-
ning time, individual rationality, truthfulness, overpayment ratio and utility of
requester. Furthermore, we compare WCIM with greedy winner selection (GWS)
proposed in [2].
Running Time: We first demonstrate the running time of WCIM in Fig. 3.
The budget is set as |W | multiplied by {0.03, 0.05, 0.07} respectively. We can
find the running time increases slowly with increasing |W |. Additionally, the
running time has slight changes when the budget increases. These results show
WCIM can efficiently select workers and calculate their payments.
Individual Rationality and Truthfulness: Then we verify the individual
rationality and truthfulness of WCIM. We demonstrate the individual rationality
by comparing each payment and the related real cost (truthful bidding). We
randomly set |W | as 200 and 600 in Fig. 4, and we find each payment is greater
than the related real cost. To verify the truthfulness, we randomly pick two
winners (ID = 20, 29) and change their claimed bidding prices, then recalculate
their utilities. We illustrate results in Fig. 5 and find two winners can only obtain
their maximum utility if they bid the real cost Cost20 = 0.15, Cost29 = 0.17.
Overpayment Ratio: Figure 6 plots the overpayment ratio when |W | changes
from 100 to 1000 and the budget equals |W | multiplied by {0.03, 0.05, 0.07}
respectively. Figure 7 shows the overpayment ratio decreases with the increase
of |W | when the budget is fixed at 1000. We find that the overpayment ratio
is always less than 0.25, which means that the requester does not have to pay
much extra money to induce truthfulness.
Utility of Requester: Figure 8 plots the utility of requester when |W | change
from 100 to 1000. |W | multiplied by 0.05 is set as the budget. With the increase of
workers and budget, more workers will be selected to complete the task and the
utility of requester increase spontaneously. As seen from Fig. 8, WCIM outputs
higher utility of requester than GWS because WCIM adopts dynamic program-
ming which can always obtain the global optimal solution.
6.3 Evaluation of the Miner-Centric Incentive Mechanism
To evaluate MCIM, we reveal impacts of total transaction fee F and the number
of miners |M | on the number of total transactions TX and the utility of the
requester UR (F ).
Number of Total Transactions: Figure 9 depicts the impact of F on TX
when |M | is fixed at 1000. It is found that TX increases as F increases. This
is because increased F incentivizes miners to pack more transactions into their
blocks. Figure 10 depicts the impact of |M | on TX when F is fixed at 20000. We
can find that with the increase of |M |, TX increases with a slowdown, which is in
line with (18). The reason is that more involved miners intensify the competition
for the transaction fee, which incentivizes miners to validate more transactions.
372 Z. Xu et al.
Fig. 9. Impact of
F on TX.
Fig. 10. Impact of
|M | on TX.
Fig. 11. Impact of
F on UR (F ).
Fig. 12. Impact of
|M | on UR (F ).
Fierce competition, however, reduces the probability of winning mining rewards.
As a result, the growth trend of total transactions is slowing down.
Utility of Requester: For the utility of requester, we first evaluate the impact
of F on it when |M | is fixed at 1000 and present results in Fig. 11. We find
that as F increases, UR (F ) decreases gradually. The intuitive reason is that,
the margin utility descends with more transaction fees. Although the requester
announces more transaction fees, there is a diminishing marginal effect on the
contributions of miners, which fails to cover the corresponding increase of F .
As shown in Fig. 12, we evaluate the impact of |M | on UR (F ) when F is fixed
at 20000. It is found that the requester can achieve greater utility when more
miners join in the mining, which indeed demonstrates diminishing returns when
|M | increases and is in line with UR (F ). Combining Fig. 11 and 12, we find the
requester can optimize its utility with more miners and fewer F .
7 Conclusion
In this paper, we have proposed a utility-oriented role-centric incentive mecha-
nism design named URIM for BCSs, which consists of worker-centric and miner-
centric incentive mechanisms. Through both rigorous theoretical analyses and
extensive simulations, we have demonstrated that the worker-centric incentive
mechanism is computationally efficient, individually rational and truthful, and
the miner-centric incentive mechanism can maximize the utility of the requester
based on optimal strategies of miners. In the future work, we will further explore
non-monetary incentive mechanisms for BCSs and evaluate our design in real-
world applications.
Acknowledgements. This work was supported by the Scientific Research Program
of Science and Technology Commission of Shanghai Municipality under Grant No.
19511102203.
URIM for Blockchain-Based Crowdsensing 373
References
1. Amintoosi, H., Kanhere, S.S.: A reputation framework for social participatory sens-
ing systems. Mob. Netw. Appl. 19(1), 88–100 (2014)
2. An, B., Xiao, M., Liu, A., Gao, G., Zhao, H.: Truthful crowdsensed data trading
based on reverse auction and blockchain. In: Li, G., Yang, J., Gama, J., Natwichai,
J., Tong, Y. (eds.) DASFAA 2019. LNCS, vol. 11446, pp. 292–309. Springer, Cham
(2019). https://doi.org/10.1007/978-3-030-18576-3 18
3. Chatzopoulos, D., Gujar, S., Faltings, B., Hui, P.: Privacy preserving and cost
optimal mobile crowdsensing using smart contracts on blockchain. In: 2018 IEEE
15th International Conference on Mobile Ad Hoc and Sensor Systems (MASS), pp.
442–450. IEEE (2018)
4. Conti, M., Gangwal, A., Todero, M.: Blockchain trilemma solver algorand has
dilemma over undecidable messages. In: Proceedings of the 14th International Con-
ference on Availability, Reliability and Security, pp. 1–8 (2019)
5. Crosby, M., Pattanayak, P., Verma, S., Kalyanaraman, V., et al.: Blockchain tech-
nology: beyond bitcoin. Appl. Innov. 2(6–10), 71 (2016)
6. Duan, H., Zheng, Y., Du, Y., Zhou, A., Wang, C., Au, M.H.: Aggregating crowd
wisdom via blockchain: a private, correct, and robust realization. In: 2019 IEEE
International Conference on Pervasive Computing and Communications (Per-
Com2019), pp. 43–52. IEEE (2019)
7. Feng, Z., Zhu, Y., Zhang, Q., Ni, L.M., Vasilakos, A.V.: TRAC: truthful auction for
location-aware collaborative sensing in mobile crowdsourcing. In: IEEE INFOCOM
2014-IEEE Conference on Computer Communications, pp. 1231–1239. IEEE (2014)
8. Houy, N.: The bitcoin mining game. Available at SSRN 2407834 (2014)
9. Hu, J., Yang, K., Wang, K., Zhang, K.: A blockchain-based reward mechanism for
mobile crowdsensing. IEEE Trans. Comput. Soc. Syst. 7(1), 178–191 (2020)
10. Huang, J., et al.: Blockchain-based mobile crowd sensing in industrial systems.
IEEE Trans. Ind. Inf. 16(10), 6553–6563 (2020)
11. Koutsopoulos, I.: Optimal incentive-driven design of participatory sensing systems.
In: 2013 Proceedings IEEE INFOCOM, pp. 1402–1410. IEEE (2013)
12. Lakhani, K.: Innocentive.com (a) (harvard business school case no. 608–170). Har-
vard Business School, Cambridge (2008)
13. Li, M., et al.: CrowdBC: a blockchain-based decentralized framework for crowd-
sourcing. IEEE Trans. Parallel Distrib. Syst. 30(6), 1251–1266 (2018)
14. Lu, Y., Tang, Q., Wang, G.: ZebraLancer: private and anonymous crowdsourcing
system atop open blockchain. In: 2018 IEEE 38th International Conference on
Distributed Computing Systems (ICDCS), pp. 853–865. IEEE (2018)
15. Ogie, R.I.: Adopting incentive mechanisms for large-scale participation in mobile
crowdsensing: from literature review to a conceptual framework. Hum.-Cent. Com-
put. Inf. Sci. 6(1), 24 (2016)
16. de Pedro, A.S., Levi, D., Cuende, L.I.: WitNet: a decentralized oracle network
protocol. arXiv preprint arXiv:1711.09756 (2017)
17. Pouryazdan, M., Kantarci, B., Soyata, T., Foschini, L., Song, H.: Quantifying
user reputation scores, data trustworthiness, and user incentives in mobile crowd-
sensing. IEEE Access 5, 1382–1397 (2017)
18. Xu, J., Xiang, J., Yang, D.: Incentive mechanisms for time window dependent tasks
in mobile crowdsensing. IEEE Trans. Wirel. Commun. 14(11), 6353–6364 (2015)
19. Yang, D., Xue, G., Fang, X., Tang, J.: Incentive mechanisms for crowdsensing:
crowdsourcing with smartphones. IEEE/ACM Trans. Netw. 24(3), 1732–1744
(2015)
https://doi.org/10.1007/978-3-030-18576-3_18
http://arxiv.org/abs/1711.09756
374 Z. Xu et al.
20. Yang, M., Zhu, T., Liang, K., Zhou, W., Deng, R.H.: A blockchain-based location
privacy-preserving crowdsensing system. Futur. Gener. Comput. Syst. 94, 408–418
(2019)
21. Zhang, J., Cui, W., Ma, J., Yang, C.: Blockchain-based secure and fair crowdsourc-
ing scheme. Int. J. Distrib. Sens. Netw. 15(7), 1550147719864890 (2019)
	URIM: Utility-Oriented Role-Centric Incentive Mechanism Design for Blockchain-Based Crowdsensing
	1 Introduction
	2 Related Work
	3 System Overview
	4 Worker-Centric Incentive Mechanism
	4.1 Implementation of WCIM
	4.2 Theoretical Analysis of WCIM Properties
	5 Miner-Centric Incentive Mechanism
	5.1 Blockchain Mining with Crowdsensing
	5.2 Two-Stage Stackelberg Game Formulation
	5.3 Equilibrium Analysis for MCIM
	6 Performance Evaluation
	6.1 Simulation Setup
	6.2 Evaluation of the Worker-Centric Incentive Mechanism
	6.3 Evaluation of the Miner-Centric Incentive Mechanism
	7 Conclusion
	References