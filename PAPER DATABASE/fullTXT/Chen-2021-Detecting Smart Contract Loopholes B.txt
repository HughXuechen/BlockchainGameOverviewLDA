书书书
第４４卷　第１期
２０２１年１月
计　　算　　机　　学　　报
ＣＨＩＮＥＳＥＪＯＵＲＮＡＬＯＦＣＯＭＰＵＴＥＲＳ
Ｖｏｌ．４４Ｎｏ．１
Ｊａｎ．２０２１
收稿日期：２０１９１２０２；在线发布日期：２０２００５２３．本课题得到国家自然科学基金（Ｕ１９１１２０３）、贵州财经大学与商务部国际贸易经济合
作研究院联合基金（２０１７ＳＷＢＺＤ０８）资助．陈晋川，博士，副教授，主要研究方向为分布式数据管理和区块链．Ｅｍａｉｌ：ｊｃｃｈｅｎ＠ｒｕｃ．ｅｄｕ．ｃｎ．
夏华辉，硕士研究生，主要研究方向为区块链和智能合约．王璞巍（通信作者），博士，副教授，主要研究方向为服务计算和区块链．Ｅｍａｉｌ：
ｗａｎｇｐｕｗｅｉ＠ｒｕｃ．ｅｄｕ．ｃｎ．马纳波，硕士研究生，主要研究方向为分布式计算和区块链．王　琪，硕士研究生，主要研究方向为区块链．
李浩然，硕士研究生，主要研究方向为服务计算和区块链．杜小勇，博士，教授，主要研究领域为数据管理技术、语义网技术、智能信息检
索技术．
基于纳什均衡的智能合约缺陷检测
陈晋川１），２）　夏华辉１）　王璞巍１），２）　马纳波１）　王　琪１） 李浩然１） 杜小勇１），２）
１）（中国人民大学信息学院　北京　１００８７２）
２）（数据工程与知识工程教育部重点实验室（中国人民大学）　北京　１００８７２）
摘　要　本文研究区块链智能合约的缺陷检测问题，即检测合约中是否存在部分合约方无论选择什么动作，均无
法避免损失的状态．将智能合约问题转换成合约状态迁移图上的博弈策略选择问题，提出了基于纳什均衡理论的
合约缺陷自动检测方法，以及为了提高检测效率，提出了针对合约状态变迁图和博弈策略形式的一系列化简方法．
最后，实现了一个智能合约建模、分析和部署工具．针对一组真实合同的实验表明，该工具能自动发现部分合同缺
陷，化简方法提升缺陷检测效率的效果明显．
关键词　智能合约；纳什均衡；缺陷检测；区块链；博弈论
中图法分类号ＴＰ３１１　　　犇犗犐号１０．１１８９７／ＳＰ．Ｊ．１０１６．２０２１．００１４７
犇犲狋犲犮狋犻狀犵犛犿犪狉狋犆狅狀狋狉犪犮狋犔狅狅狆犺狅犾犲狊犅犪狊犲犱狅狀犖犪狊犺犈狇狌犻犾犻犫狉犻狌犿
ＣＨＥＮＪｉｎＣｈｕａｎ１），２）　ＸＩＡＨｕａＨｕｉ１）　ＷＡＮＧＰｕＷｅｉ１），２）　ＭＡＮａＢｏ１）　ＷＡＮＧＱｉ１）
ＬＩＨａｏＲａｎ１）　ＤＵＸｉａｏＹｏｎｇ１），２）
１）（犛犮犺狅狅犾狅犳犐狀犳狅狉犿犪狋犻狅狀，犚犲狀犿犻狀犝狀犻狏犲狉狊犻狋狔狅犳犆犺犻狀犪，犅犲犻犼犻狀犵　１００８７２）
２）（犓犲狔犔犪犫狅犳犇犪狋犪犈狀犵犻狀犲犲狉犻狀犵犪狀犱犓狀狅狑犾犲犱犵犲犈狀犵犻狀犲犲狉犻狀犵，犕犻狀犻狊狋狉狔狅犳犈犱狌犮犪狋犻狅狀，犚犲狀犿犻狀犝狀犻狏犲狉狊犻狋狔狅犳犆犺犻狀犪，犅犲犻犼犻狀犵　１００８７２）
犃犫狊狋狉犪犮狋　Ｉｎｒｅｃｅｎｔｙｅａｒｓ，ｂｌｏｃｋｃｈａｉｎｈａｓａｔｔｒａｃｔｅｄｍａｎｙｉｎｔｅｒｅｓｔｓｆｏｒｍｂｏｔｈａｃａｄｅｍｉｃａｎｄ
ｒｅｓｅａｒｃｈｃｏｍｍｕｎｉｔｉｅｓ，ａｎｄｂｅｅｎａｐｐｌｉｅｄｉｎｃｒｙｐｔｏｃｕｒｒｅｎｃｙ，ｆｉｎａｎｃｉａｌｔｅｃｈｎｉｑｕｅｓ，ｌｏｇｉｓｔｉｃｓ，ｃｏｐｙｒｉｇｈｔ
ｐｒｏｔｅｃｔｉｏｎｅｔｃ．Ｂｌｏｃｋｃｈａｉｎｉｓｂａｓｉｃａｌｌｙａｄｉｓｔｒｉｂｕｔｅｄｓｔｏｒａｇｅｓｙｓｔｅｍ，ｃｏｎｓｉｓｔｉｎｇｏｆａｓｅｔｏｆｓｅｒｖｅｒｓ
ｏｒｎｏｄｅｓ．Ｉｎｂｌｏｃｋｃｈａｉｎｓｙｓｔｅｍｓ，ｓｍａｒｔｃｏｎｔｒａｃｔｓａｒｅｗｉｄｅｌｙａｄｏｐｔｅｄａｓｔｈｅｃｏｄｅｌａｗｓｔｏｂｅ
ｏｂｅｙｅｄｂｙａｌｌｐａｒｔｉｃｉｐａｎｔｓ．Ｂｅｆｏｒｅｓｔｏｒｉｎｇｔｈｅｄａｔａｉｔｅｍｉｎｔｏｂｌｏｃｋｃｈａｉｎ，ｅａｃｈｎｏｄｅｎｅｅｄｓｔｏｖｅｒｉｆｙ
ｔｈｅｖａｌｉｄｉｔｙｏｆｔｈｉｓｏｐｅｒａｔｉｏｎｂｙｅｘｅｃｕｔｉｎｇｉｔｓｃｏｒｒｅｓｐｏｎｄｉｎｇｓｍａｒｔｃｏｎｔｒａｃｔｓ，ｉ．ｅ．ｃｏｍｐｕｔｅｒ
ｐｒｏｇｒａｍｓ．Ｎｏｔｅｄｔｈａｔ，ｉｎｔｈｉｓｐａｐｅｒｗｅｆｏｃｕｓｏｎｃｌａｓｓｉｃｓｍａｒｔｃｏｎｔｒａｃｔｓ，ｉ．ｅ．ｃｏｍｐｕｔｅｒｃｏｄｅｓｆｏｒ
ｖｅｒｉｆｙｉｎｇ，ｅｘｅｃｕｔｉｎｇ，ｏｒｄｉｓｓｅｍｉｎａｔｉｎｇｃｏｎｔｒａｃｔｓｉｎａｎｉｎｆｏｒｍａｔｉｏｎａｌｍａｎｎｅｒ．Ｓｍａｒｔｃｏｎｔｒａｃｔｈａｓ
ｂｅｃｏｍｅｏｎｅｏｆｔｈｅｃｏｒｅｔｅｃｈｎｉｑｕｅｓｏｆｂｌｏｃｋｃｈａｉｎ，ａｎｄｉｔｉｓｖｅｒｙｉｍｐｏｒｔａｎｔｔｏｓｔｕｄｙｈｏｗｔｏｄｅｔｅｃｔ
ｌｏｏｐｈｏｌｅｓｅｘｉｓｔｉｎｇｉｎｓｍａｒｔｃｏｎｔｒａｃｔｓ．Ｈｅｒｅ，ｔｈｅｔｅｒｍｌｏｏｐｈｏｌｅｄｏｅｓｎｏｔｍｅａｎｂｕｇｓｉｎｔｈｅｃｏｎｔｒａｃｔ
ｃｏｄｅｓ，ｂｕｔｓｏｍｅｂａｄｏｕｔｐｕｔｓｏｆｅｘｅｃｕｔｉｎｇｔｈｅｃｏｎｔｒａｃｔｓ．Ｔｈｅｓｅｏｕｔｐｕｔｓａｒｅｕｎｆａｖｏｒａｂｌｅｔｏｓｏｍｅ
ｃｏｎｔｒａｃｔｐａｒｔｎｅｒｓ．Ｉｆａｌｌｐａｒｔｎｅｒｓａｒｅｒａｔｉｏｎａｌａｎｄｈａｖｅｃｏｍｐｌｅｔｅｉｎｆｏｒｍａｔｉｏｎａｂｏｕｔｔｈｅｃｏｎｔｒａｃｔｓ，
ｔｈｅｓｅｏｕｔｐｕｔｓｃａｎｎｏｔｂｅａｖｏｉｄｅｄｎｏｍａｔｔｅｒｗｈａｔｃｈｏｉｃｅｓｔｈｅｐａｒｔｎｅｒｓｃｈｏｏｓｅｄｕｒｉｎｇｅｘｅｃｕｔｉｎｇｔｈｅ
ｃｏｎｔｒａｃｔｓ．Ｔｈｅｒｅｆｏｒｅｔｈｅｓｅｃｏｎｔｒａｃｔｓｗｉｌｌｎｏｔｂｅｃｏｍｅｒｅｐｅａｔｅｄｇａｍｅｓｓｉｎｃｅｓｏｍｅｐａｒｔｎｅｒｓｃａｎｎｏｔ
ｂｅｎｅｆｉｔｆｒｏｍｊｏｉｎｉｎｇｔｈｅｃｏｎｔｒａｃｔｓ．Ｔｈｅｓｅｋｉｎｄｏｆｃｏｎｔｒａｃｔｓｗｉｌｌｂｅｏｎｅｓｈｏｔｇａｍｅｓａｎｄａｒｅ
ｈａｒｍｆｕｌｔｏｂｕｓｉｎｅｓｓｚｏｏｌｏｇｙ．Ｗｅｐｒｏｐｏｓｅａｍｅｔｈｏｄｔｏｄｅｔｅｃｔｔｈｅｌｏｏｐｈｏｌｅｓｏｆｆｏｒｍａｌｉｚｅｄｓｍａｒｔ
《
 计
算
 机
学
 报
》
ｃｏｎｔｒａｃｔｓｂａｓｅｄｏｎｔｈｅＮａｓｈｅｑｕｉｌｉｂｒｉｕｍｔｈｅｏｒｙ．Ｉｎｓｔｅａｄｏｆｈｉｒｉｎｇｌａｗｙｅｒｓｔｏｃｈｅｃｋｔｈｅｃｏｎｔｒａｃｔ
ｔｅｒｍｓｏｎｅｂｙｏｎｅ，ｗｅｃａｎｎｏｗａｕｔｏｍａｔｉｃａｌｌｙｆｉｎｄｏｕｔｔｈｅｌｏｏｐｈｏｌｅｓｏｆｃｏｎｔｒａｃｔｓ．Ｗｅｐｒｏｐｏｓｅａ
ｄａｔａｓｔｒｕｃｔｕｒｅ，ｃａｌｌｅｄｓｔａｔｅｔｒａｎｓｉｔｉｏｎｇｒａｐｈ，ｔｏｄｅｓｃｒｉｂｅｔｈｅｏｕｔｐｕｔｓｆｏｒｅａｃｈｐａｒｔｎｅｒｏｆｃｈｏｏｓｉｎｇ
ｄｉｆｆｅｒｅｎｔｓｔｒａｔｅｇｉｅｓｏｆｅｘｅｃｕｔｉｎｇａｃｏｎｔｒａｃｔ．Ｂａｓｅｄｏｎｔｈｅｓｔａｔｅｔｒａｎｓｉｔｉｏｎｇｒａｐｈ，ｗｅｆｕｒｔｈｅｒｄｅｆｉｎｅ
ｔｈｅｐｒｏｂｌｅｍｏｆｓｍａｒｔｃｏｎｔｒａｃｔｇａｍｅ，ａｎｄｄｅｆｉｎｅｔｈｅｌｏｏｐｈｏｌｅｓａｓａｓｐｅｃｉａｌｋｉｎｄｏｆＮａｓｈｅｑｕｉｌｉｂｒｉｕｍｓ，
ｗｈｅｒｅｓｏｍｅｐａｒｔｎｅｒｓｗｏｕｌｄｏｂｔａｉｎｚｅｒｏｏｒｎｅｇａｔｉｖｅｕｔｉｌｉｔｉｅｓａｎｄｔｈｅｙｃａｎｎｏｔｉｍｐｒｏｖｅｔｈｅｉｒｕｔｉｌｉｔｉｅｓ
ｅｖｅｎｉｆｔｈｅｙｃｈａｎｇｅｔｈｅｉｒｏｗｎｓｔｒａｔｅｇｉｅｓ．Ｉｎｔｈｉｓｗａｙ，ｗｅａｒｅａｂｌｅｔｏａｕｔｏｍａｔｉｃａｌｌｙｆｉｎｄｏｕｔｔｈｅ
ｌｏｏｐｈｏｌｅｓｂｙｃｏｍｐｕｔｉｎｇｔｈｅＮａｓｈｅｑｕｉｌｉｂｒｉｕｍｓｏｆｓｍａｒｔｃｏｎｔｒａｃｔｇａｍｅ．Ｈｏｗｅｖｅｒ，ｔｈｅｓｔｒａｔｅｇｙ
ｆｏｒｍｓｏｂｔａｉｎｅｄｆｒｏｍｔｈｅｓｔａｔｅｔｒａｎｓｉｔｉｏｎｇｒａｐｈｍａｙｂｅｔｏｏｌａｒｇｅｄｕｅｔｏｓｔａｔｅｅｘｐｌｏｓｉｏｎ．Ｔｈｅｒｅ
ｃｏｕｌｄｂｅｍｉｌｌｉｏｎｓｏｆａｎｄｅｖｅｎｌａｒｇｅｒｎｕｍｂｅｒｏｆｓｔａｔｅｓｉｎａｓｔｒａｔｅｇｙｆｏｒｍ，ｗｈｉｃｈｃａｕｓｅｓｖｅｒｙ
ｅｘｐｅｎｓｉｖｅｔｉｍｅｃｏｓｔｓｏｆｃｏｍｐｕｔｉｎｇＮａｓｈｅｑｕｉｌｉｂｒｉｕｍｓ．Ｗｅｔｈｅｎｐｒｏｐｏｓｅｔｗｏｒｕｌｅｓ，ｉ．ｅ．Ｓｔｒａｔｅｇｙ
ｅｑｕｉｖａｌｅｎｃｅａｎｄＮａｓｈｅｑｕｉｖａｌｅｎｃｅｒｕｌｅｓ，ｆｏｒｓｉｍｐｌｉｆｙｉｎｇｔｈｅｓｔａｔｅｔｒａｎｓｉｔｉｏｎｇｒａｐｈａｎｄｓｔｒａｔｅｇｙ
ｆｏｒｍｓ，ｗｈｉｃｈｃａｎｇｒｅａｔｌｙｃｕｔｄｏｗｎｔｈｅｔｉｍｅｃｏｓｔｓ．Ｉｎｏｒｄｅｒｔｏｆｕｒｔｈｅｒｃｕｔｄｏｗｎｔｈｅｔｉｍｅｃｏｓｔｓｏｆ
ｃｏｍｐｕｔｉｎｇＮａｓｈｅｑｕｉｌｉｂｒｉｕｍ，ｗｅａｌｓｏｐｒｏｐｏｓｅａｍｅｔｈｏｄｔｏｆｉｎｄｏｕｔｔｈｅｒｅｄｕｎｄａｎｔｓｔｒａｔｅｇｙ
ｃｏｍｂｉｎａｔｉｏｎｓａｎｄｐｒｏｖｅｔｈａｔｗｅｃａｎｏｂｔａｉｎｔｈｅｓａｍｅＮａｓｈｅｑｕｉｌｉｂｒｉｕｍｓｗｈｅｎｔｈｅｓｅｓｔｒａｔｅｇｙ
ｃｏｍｂｉｎａｔｉｏｎｓａｒｅｒｅｍｏｖｅｄ．Ｂａｓｅｄｏｎｔｈｅｓｅｍｅｔｈｏｄｓ，ｗｅｄｅｓｉｇｎａｎｄｉｍｐｌｅｍｅｎｔａｔｏｏｌｆｏｒ
ｍｏｄｅｌｌｉｎｇ，ａｎａｌｙｚｉｎｇａｎｄｄｅｐｌｏｙｉｎｇｓｍａｒｔｃｏｎｔｒａｃｔｓ．Ｗｅａｎａｌｙｚｅａｓｅｔｏｆｒｅａｌｃｏｎｔｒａｃｔｓｃｒａｗｌｅｄ
ｆｒｏｍｔｗｏｐｒｏｆｅｓｓｉｏｎａｌｌａｗｙｅｒｗｅｂｓｉｔｅｓ．Ｔｈｅｓｅｃｏｎｔｒａｃｔｓｃｏｖｅｒｔｈｅｍａｉｎｃｏｎｔｒａｃｔｃａｔｅｇｏｒｉｅｓｌｉｓｔｅｄ
ｉｎＣｏｎｔｒａｃｔＬａｗｏｆＰｅｏｐｌｅ’ｓＲｅｐｕｂｌｉｃｏｆＣｈｉｎａ．Ｗｅｄｉｓｃｕｓｓｓｏｍｅｃｏｎｔｒａｃｔｌｏｏｐｈｏｌｅｓｄｅｔｅｃｔｅｄｂｙ
ｔｈｉｓｔｏｏｌ，ａｎｄｅｖａｌｕａｔｅｔｈｅａｂｉｌｉｔｙｏｆｏｕｒｐｒｏｐｏｓｅｄｍｅｔｈｏｄｓｔｏｉｍｐｒｏｖｅｔｈｅｐｅｒｆｏｒｍａｎｃｅ．Ａｓ
ｉｌｌｕｓｔｒａｔｅｄｂｙｔｈｅｅｘｐｅｒｉｍｅｎｔａｌｒｅｓｕｌｔｓ，ｏｕｒｍｅｔｈｏｄｓｃａｎｇｒｅａｔｌｙｒｅｄｕｃｅｔｈｅｓｔｒａｔｅｇｙｆｏｒｍｓａｎｄｔｈｅ
ｔｉｍｅｃｏｓｔｓ．
犓犲狔狑狅狉犱狊　ｓｍａｒｔｃｏｎｔｒａｃｔ；Ｎａｓｈｅｑｕｉｌｉｂｒｉｕｍ；ｌｏｏｐｈｏｌｅｄｅｔｅｃｔｉｏｎ；ｂｌｏｃｋｃｈａｉｎ；ｇａｍｅｔｈｅｏｒｙ
１　引　言
智能合约（ＳｍａｒｔＣｏｎｔｒａｃｔ）的概念最早可以追
溯到１９９４年，Ｓｚａｂｏ将智能合约定义为“一种可
以实现合同条款的计算机程序［１］”．但是，一直到
２００８年区块链（Ｂｌｏｃｋｃｈａｉｎ）技术出现之前，智能合
约都没能得到广泛关注．原因可能是很难找到一种
合适的技术可以在非完全信任环境中保证计算机程
序正确执行和不会被篡改．区块链源自于“比特币①”
的底层技术，是一种去中心化、不可篡改、多方共同
维护的分布式计算和存储系统．区块链网络中每个
节点都是独立维护的，通过一种分布式共识机制，在
没有权威中心节点的情况下，确保各个节点数据保
持完全一致．研究者认为区块链系统非常适合为智
能合约提供运行平台．２０１３年后出现的以太坊②和
ＨｙｐｅｒｌｅｄｇｅｒＦａｂｒｉｃ③都提供了图灵完备的编程语
言用于编写智能合约，可以支持各种复杂的业务逻
辑．至此，智能合约开始得到了越来越多的应用，其
技术也有了迅速发展．
随着研究者对智能合约理解角度的不同，智能
合约的内涵逐渐泛化，一些研究者开始把智能合约
广义地理解成“运行在区块链系统之上的一段计算
机代码，由共识机制确保代码的正确执行［２］”．在本
文中，我们关注的是Ｓｚａｂｏ所定义的经典智能合约：
“以信息化方式验证、执行或传播合同的计算机代码”．
随着区块链技术的发展，智能合约变得越来越重要，
现有的区块链系统都使用智能合约描述参与各方需
要共同遵守的规则（合同条款）．例如，在医疗数据共
享领域，通过智能合约来规范数据的产生者（病人）、
数据的保管者（医院）以及数据的使用者（数据分析
公司）三方的权责利；ＫａｎｔａｒａＩｎｉｔｉａｔｉｖｅ④则试图将
区块链和智能合约变成一种法律条款的数字撰写平
台；２０１６年工信部发布的《中国区块链技术和运用
８４１ 计　　算　　机　　学　　报 ２０２１年
①
②
③
④
ＮａｋａｍｏｔｏＳ．Ｂｉｔｃｏｉｎ：Ａｐｅｅｒｔｏｐｅｅｒｅｌｅｃｔｒｏｎｉｃｃａｓｈｓｙｓｔｅｍ．
２００８．ｈｔｔｐｓ：／／ｂｉｔｃｏｉｎ．ｏｒｇ／ｂｉｔｃｏｉｎ．ｐｄｆ
Ｅｔｈｅｒｅｕｍ．ｈｔｔｐｓ：／／ｗｗｗ．ｅｔｈｅｒｅｕｍ．ｏｒｇ
ＨｙｐｅｒｌｅｄｇｅｒＦａｂｒｉｃ．ｈｔｔｐｓ：／／ｈｙｐｅｒｌｅｄｇｅｒｆａｂｒｉｃ．ｒｅａｄｔｈｅｄｏｃｓ．ｉｏ
ＫａｎｔａｒａＩｎｉｔｉａｔｉｖｅ．ｈｔｔｐｓ：／／ｋａｎｔａｒａｉｎｉｔｉａｔｉｖｅ．ｏｒｇ
《
 计
 算
 机
 学
 报
 》
发展白皮书》［３］，将智能合约解释为一种用计算机语
言取代法律语言去记录条款的合约．我们期待智能
合约可以逐渐替代部分传统合同．但是，智能合约并
没有统一的编程语言和运行模型．这就使得程序员
之外的管理人员难以理解和编写智能合约．例如，以
太坊使用Ｓｏｄｉｌｉｔｙ编写智能合约，将其实现为一种
状态机①；ＨｙｐｅｒｌｅｄｇｅｒＦａｂｒｉｃ智能合约被称为链码
（Ｃｈａｉｎｃｏｄｅ），使用Ｇｏ语言编写，没有全局状态，对
区块链的读写都需要经过链码来执行．
接下来，我们用一个非常简单的买卖合同例子
分析智能合约编写面临的问题：“卖方发货，买方将
钱转账给卖方”．
编写这样的智能合约，我们首先遇到的问题是：
如何构建一种与编程语言和平台无关的、易于理解
的中间模型？文本合同是由参与各方的管理人员
（律师）用自然语言撰写的，然而智能合约需要使用
计算机编程语言实现，因此又要由专业的程序员编
写．由于自然语言和程序语言之间的差别，双方可能
无法准确理解彼此的意图．例如，上述例子中没有明
确说明“卖方什么时候发货”，这给智能合约代码的
编写带来困难，他们之间缺少一种双方都能准确理
解的中间模型（类似数据库领域的ＥＲ模型），这就
是智能合约建模问题；
此外，我们还会面临第二个问题：如何发现智能
合约中存在的逻辑缺陷？智能合约是由计算机代码
构成的，现有的一些方法提出使用检测工具对智能
合约代码进行检测以找出其中存在的漏洞［２］．然而，
智能合约的一些重要缺陷，其实不是代码漏洞，而是
逻辑缺陷．例如，前面例子中的买卖合同存在着一个
对卖方不利的执行路径：“卖方发货，买方不转账”．
我们需要对智能合约进行分析以判断是否存在这样
的逻辑缺陷，这就是智能合约的缺陷检测问题．
对于第一个问题，我们之前提出了一种智能合
约形式化模型［４］．首先，站在管理人员的角度，采用
多Ａｇｅｎｔ领域的承诺（ｃｏｍｍｉｔｍｅｎｔ）模型［５］，将智能
合约看作是一组“承诺”的集合．承诺描述了参与各
方要执行的动作；其次，站在程序员的角度，将智能
合约看作是一种基于承诺生成的状态机，描述智能
合约的执行过程．在之前工作的基础上，本文提出从
承诺到状态机的自动生成算法．但在这个生成过程
中，往往会遇到“状态爆炸”问题，也就是会产生指数
级的数量巨大的状态，导致生成算法无法高效完成．
为了应对这个问题，本文又提出了一系列的化简算
法，可以极大地提高状态机的生成效率．
对于第二个问题，根据智能合约参与各方选择
的动作不同，智能合约将进入到不同的状态，形成不
同的执行路径．我们提出把这种执行过程看作是一
个多方博弈问题［６］：各方将会从智能合约中获取或
损失收益，他们是理性的，会以收益最大化为目的来
选择如何执行动作．智能合约中的逻辑缺陷实际上
是指部分参与人会陷入到一种局面，无论他们选择
什么动作，都无法避免收益损失．我们提出用“纳什
均衡（ＮａｓｈＥｑｕｉｌｉｂｒｉｕｍ）”思想来捕捉这样的缺陷．
纳什均衡是博弈论中的重要理论，对于参与博弈各
方所能选择的策略，存在这样的策略组合：各参与方
均不能通过单方面改变自己的策略来获取更好的
收益．例如，考虑一个简单买卖合同，卖方有两种可
以选择的策略｛发货，不发货｝，买方也有两种策略
｛转账，不转账｝．对于策略组合｛卖方不发货，买方不
转账｝，卖方和买方单方面更改策略都会面临收益损
失：如果卖方将策略改为发货，买方还是不转账，这
会使得卖方出现收益损失；同样如果买方将策略改
为转账，卖方还是不发货，也会使得买方收益损失．
这样的策略组合就称为纳什均衡点，它体现了博弈
的均衡状态，在此状态下各个参与人都倾向于采取
理性的行动．
我们定义合同的逻辑缺陷就是特殊的纳什均
衡．如果合同的纳什均衡点中，各参与人的收益全部
为零，或者收益有正有负，那么这个合同就可能有逻
辑缺陷，因为部分参与人无法取得正收益，他们将不
再倾向于参与合同．上述简单买卖合同例子中，唯一
的纳什均衡点就是｛卖方不发货，买方不转账｝，此时
双方收益均为零．原因在于该合同中没有对买方违
约行为（不转账）进行约束．那么理性的卖方在权衡
得失之后，将选择不执行合同．这样的合同对双方都
没有价值．
对于简单的合同，执行路径较少，容易以人工的
方式发现逻辑缺陷．但是对于复杂的合同，其执行路
径将非常复杂．即使受过专业训练的律师也可能难
以发现合同中所有的逻辑缺陷．当合同以智能合约
的形式存在，人工检测逻辑缺陷将更不可行．
本文的贡献如下：
（１）提出一种基于纳什均衡的智能合约缺陷分
９４１１期 陈晋川等：基于纳什均衡的智能合约缺陷检测
①Ｅｔｈｅｒｅｕｍ．ｈｔｔｐｓ：／／ｓｏｌｉｄｉｔｙ．ｒｅａｄｔｈｅｄｏｃｓ．ｉｏ／ｅｎ／ｖ０．４．２１／
ｃｏｍｍｏｎｐａｔｔｅｒｎｓ．ｈｔｍｌ＃ｓｔａｔｅｍａｃｈｉｎｅ
《
 计
 算
 机
 学
 报
 》
析方法．形式化定义了智能合约的博弈问题、策略形
式和纳什均衡；将智能合约的缺陷检测问题转换成
了纳什均衡计算问题，通过对智能合约逻辑缺陷的
分析，可以将逻辑缺陷以及相应的收益情况反馈给用
户，避免因为智能合约的逻辑缺陷给用户带来损失；
（２）提出了一种基于智能合约形式化模型的纳
什均衡检测算法．将形式化定义的智能合约转换为
状态变迁图；基于策略等价原则和纳什均衡等价原
则，提出了一系列状态变迁图的化简方法，极大地
避免了状态爆炸；然后根据简化的状态变迁图，提出
了冗余策略的化简方法，进一步提高计算纳什均衡
的效率；
（３）依据《中华人民共和国合同法》（１９９９年３月
１５日颁布），常见的合同共有１５类．我们参照华律
网（６６ｌａｗ．ｃｎ）和合同帮（ｈｅｔｏｎｇｂ．ｃｏｍ）的合同范本，
对其中１４类合同进行了分析，找出了其中真实存在
的合同缺陷，说明方法的有效性；并通过实验分析了
所提出的化简方法的效率．
本文第２节介绍智能合约建模和分析的相关工
作；第３节介绍如何为智能合约建模，以及智能合约
的状态机生成算法；第４节介绍智能合约的博弈问
题；第５节介绍状态变迁图的化简方法，以及冗余策
略组合的化简方法；第６节通过实验说明所提出方
法的有效性和效率．最后，第７节进行总结和对未来
工作的展望，本文工作并非提出新的智能合约，而是
将合同建模为状态机，并基于此建模方法对合同进
行分析．
２　相关工作
智能合约漏洞暴露出来的安全性事件一直层出
不穷，例如，２０１７年发生的ＤＡＯ①事件，黑客利用
智能合约的漏洞将面向公众筹集的大量以太坊代币
转向自己的地址，造成了巨大的经济损失．因此，智
能合约安全性一直受到研究者广泛关注，目前很多
工作采用软件工程领域的代码检测方法来做智能合
约代码漏洞检测．２０１６年，Ｈｉａｒｉ②提出将智能合约
代码转换为ＡＶＬ树，然后利用Ｉｓａｂｅｌｌｅ定理证明器
对ＡＶＬ树进行验证，找出智能合约的代码漏洞．
Ｙａｎｇ等人［７］提出一种符号模型（ＳｙｍｂｏｌｉｃＰｒｏｃｅｓｓ
ＶｉｒｔｕａｌＭａｃｈｉｎｅ，ＦＳＰＶＭ）用于刻画智能合约的执
行流程，然后基于Ｈｏａｒｅ逻辑验证智能合约代码的
可靠性和安全性．Ｂｉｇｉ等人［８］认为智能合约中参与
人之间存在非合作博弈，在假设他们是理性的前提
下分析他们可能采取的策略，在此基础上生成一种
概率模型，再检测智能合约的安全性．上述这些工作
目的是为了检测智能合约代码的安全漏洞．Ｂｉｇｉ等
人虽然提到了博弈论的概念，但也只是为了分析
合约参与人可能的行为，并没有考虑合约公平性
的问题．
不同区块链系统有不同的智能合约运行模型．
例如，以太坊是公有链，任意节点都可以加入参与交
易．它的智能合约用Ｓｏｄｉｌｉｔｙ编写，以字节码形式存
储于区块中，可以被各个节点执行．智能合约在发布
之后可以被多次调用，每次调用均需从之前的区块
中读取合约的状态和字节码，而执行的结果也会存
入新的区块中．因此，智能合约在以太坊上的执行可
以看作是一个状态机，每次执行将会从一个状态转
移到另一个状态［９］．ＨｙｐｅｒｌｅｄｇｅｒＦａｂｒｉｃ是使用最
广泛的许可链，节点需要经过授权才能参与交易．与
以太坊不同的是，它的智能合约（链码）并不存储于
区块，而是一直运行在联盟节点的ｄｏｃｋｅｒ容器之
中．采用Ｇｏ语言编写，对区块链数据的读写都要通
过链码执行（但链码本身不记录执行后的状态）．需
要注意的是，智能合约是一个概念，指一种可以实现
合同条款的计算机程序，本质上智能合约与区块链
是独立的．链码是ＨｙｐｅｒｌｅｄｇｅｒＦａｂｒｉｃ系统中实现
智能合约的方式，在发展过程中超越了传统智能合
约的概念．本文讨论的智能合约是一个状态机，是程
序化的合同条款，我们将基于承诺模型来描述合同
并自动生成相应的状态机．
在多Ａｇｅｎｔ领域中，承诺（ｃｏｍｍｉｔｍｅｎｔ）模型通
常用来研究多个主体之间的交互协议．Ｓｉｎｇｈ等
人［５，１０］形式化定义了承诺模型，认为承诺是商业关
系的基本抽象，是商务合同的本质．承诺是有状态
的，例如，完成、违约和过期等．对于每个承诺，有操
作（动作）可以触发其状态发生变化．不同承诺之间
存在相互影响关系，多个承诺就构成了多个主体之
间的商业协议［１１］．在承诺模型的基础上，Ｓｉｎｇｈ等
人［１２１３］又提出了商业合同公平性和健壮性等属性的
检测方法，基本思路也是判断各方是否都从合同中
收益或者合同执行是否会进入非法状态．这些工作
没有考虑商业合同运行在区块链之上的情况，本文
０５１ 计　　算　　机　　学　　报 ２０２１年
①
②
ＴｈｅＤＡＯ．ｈｔｔｐｓ：／／ｇｉｔｈｕｂ．ｃｏｍ／ｓｌｏｃｋｉｔ／ＤＡＯ
ＨｉｒａｉＹ．ＦｏｒｍａｌＶｅｒｉｆｉｃａｔｉｏｎｏｆＤｅｅｄＣｏｎｔｒａｃｔｉｎＥｔｈｅｒｅｕｍ
ＮａｍｅＳｅｒｖｉｃｅ，２０１９．ｈｔｔｐｓ：／／ｙｏｉｃｈｉｈｉｒａｉ．ｃｏｍ／ｄｅｅｄ．ｐｄｆ
《
 计
 算
 机
 学
 报
 》
提出在承诺模型的基础上构建智能合约（商业合
同），再设计算法从一组承诺自动生成运行模型（也
就是状态机模型），然后在状态机模型的基础上自动
分析智能合约，检测出可能存在的逻辑缺陷．在文献
［１１］中，也提出采用纳什均衡来分析合同的正确性
（ｃｏｒｒｅｃｔｎｅｓｓ），但其方法需要穷举博弈树中所有可
能的路径，没有做任何化简．在效率上与我们所实现
的ｂａｓｅｌｉｎｅ方法（第６节中的ＳＥ方法）相同．
综上所述，现有的智能合约分析工作主要还是
进行代码漏洞分析，缺少对合约中逻辑缺陷的分析．
此外，现有区块链系统的智能合约运行模型各有不
同，缺少一种统一的、无关于编程语言和平台的智能
合约模型，用于支持这种分析．本文提出了一种易于
理解的、编程语言无关的智能合约模型，以及基于纳
什均衡理论提出了一种合约缺陷检测方法．
３　智能合约的建模
承诺模型在多Ａｇｅｎｔ领域被广泛用于对跨组
织协议的建模［５，９１２］．本文提出智能合约建模首先由
用户将合同条款以“承诺”的形式描述，然后再基于
用户书写的承诺自动构建智能合约．本节介绍如何
定义“承诺”，以及如何基于一组承诺自动构建智能
合约的状态机．
３１　承诺
定义１．　承诺（ｃｏｍｍｉｔｍｅｎｔ）．一个承诺是一
个五元组犆（狓，狔，狆，狉，狋犮），表示狓向狔承诺，只要前
提条件狆（ｐｒｅｍｉｓｅ）满足，就会在狋犮规定的时间期限
内完成狉（ｒｅｓｕｌｔ）．
定义２．　承诺的生命周期．一个承诺可能具有
五种不同的状态，其生命周期可以用一个状态机表
示，如图１所示．
图１　承诺生命周期
如图１所示，一个承诺的生命周期内可能有五
种不同的状态，其中激活（犪犮狋）是初始状态，终止状
态集是｛过期（犲狓狆），违约（狏犻狅），满足（狊犪狋）｝：
（１）激活（犪犮狋）．当前提狆和结果狉的值都未知，
并且狋犮犪犮狋处于有效期．本文用数字１表示．
（２）就绪（犫犪狊）．前提狆为ｔｒｕｅ，结果狉未知，并
且狋犮犫犪狊并未超出有效期．此时则表示前提狆已经达
成，等待结果的完成．本文用数字２表示．
（３）满足（狊犪狋）．当一个承诺处于就绪之后，若责
任方狓完成了结果狉，该承诺进入满足（狊犪狋）状态，表
示承诺完成．本文用数字３表示．
（４）过期（犲狓狆）．若承诺原本处于激活态，但如
果超出了时间约束，则承诺进入过期（犲狓狆）状态．表
示承诺已经失效．本文用数字４表示．
（５）违约（狏犻狅）．承诺进入就绪态，前提狆已经满
足，但责任方狓没有在规定的时间内完成结果狉，则
承诺进入违约状态．本文用数字５表示．
承诺的前提条件狆是一个逻辑表达式，组成表
达式的每个文字（ｌｉｔｅｒａｌ）可以是一个布尔条件，表示
某个承诺处于某个状态，例如若承诺犆２的前提狆＝
犆１．狊犪狋，表示必须犆１的状态为狊犪狋之后，犆２才可以就
绪．前提的文字也可以是一个布尔函数形式的仲裁
结果，表示由第三方判定某个条件是否成立．例如，
在某运输合同中有一个承诺，若出现自然灾害，则承
运方无须赔偿，那么承诺的前提条件就应包括
犼狌犱犵犲（自然灾害）．本文使用犼狌犱犵犲函数来表示仲
裁，仲裁可以由智能合约预言机［１４］（监控区块链事
件并能将监控结果发回智能合约）或合同双方共同
指定的第三方完成．需要指出，预言机或第三方只需
要对犼狌犱犵犲所规定的事项作出仲裁，而不是仲裁整
个合同的执行状况．
狉称为承诺的结果，是一组动作的合取式．
时间约束狋犮包含两个部分，即狋犮··＝（狋犮犪犮狋，狋犮犫犪狊），
分别表示当承诺进入犪犮狋或犫犪狊之后，承诺应该在
狋犮犪犮狋或狋犮犫犪狊的期限内完成．
例１．　一个简单的购书合同．甲承诺在３天内
付款１００元，乙承诺在收到书款之后１天内发货．
犆１（甲，乙，，狆犪狔（乙，１００），（∞，３）），
犆２（乙，甲，犆１．狊犪狋，犱犲犾犻狏犲狉（犫狅狅犽，甲），（３，１））．
承诺犆１的含义是甲向乙承诺，在３天内付款
１００元．注意此承诺的前提条件为空，即不设前提．
并且此承诺在前提满足之后３天内必须完成动作
狆犪狔（乙，１００）．
承诺犆２的含义是，当承诺犆１进入狊犪狋状态（即：
甲在３天内付款），则乙承诺在１天内发货．注意该
承诺的时间约束的第一部分为３天，含义是在合约
签署３天之后，该承诺过期．也就是说即使甲在３天
１５１１期 陈晋川等：基于纳什均衡的智能合约缺陷检测
《
 计
 算
 机
 学
 报
 》
之后完成承诺犆１，乙也没有义务发货．
３２　智能合约
定义３．　智能合约（ｓｍａｒｔｃｏｎｔｒａｃｔ）．一个智能
合约是一个确定性有穷状态机（ＤＦＡ），即犛犆··＝
（犆犆，Σ，犛，狊０，Δ，! ）：
（１）犆犆＝｛犆１，…，犆狀｝，表示一组承诺；
（２）Σ是字母表，包括所有可触发犆犆中一个或
多个承诺改变状态的事件．一个事件可以是一个动
作，某个仲裁的结果，或是某个承诺状态发生改变
（比如过期）；
（３）犛＝｛狊０，…，狊犿｝，是有限个状态的集合．
狊犻（犻＝０，…，犿）是一个狀维向量，即狊犻＝〈犆１．狊狋犪狋犲，…，
犆狀．狊狋犪狋犲〉（狊狋犪狋犲∈｛犪犮狋，犫犪狊，狊犪狋，犲狓狆，狏犻狅｝）；
（４）狊０∈犛是初始状态，若一个承诺的前提为
空，则其在狊０中状态为犫犪狊；否则其状态为犪犮狋；
（５）Δ：犛×Σ→犛是状态转移函数；一个状态转
移（狊犻，犲）→狊犼∈Δｉｆｆ
①狊犻和狊犼两个向量只在第λ维上的取值不同（λ＝
１，…，狀），且
②依据犆λ的定义，当事件犲∈Σ发生，犆λ的状态
应从狊犻［λ］转变为狊犼［λ］
（６）!犛是一组接受的状态（终态），狊犻∈!
，
狊犻［犽］∈｛狊犪狋，犲狓狆，狏犻狅｝（犽＝１，…，狀）．
图２　ＤＦＡ形式的智能合约
图２中展示的是根据例１中的承诺得到的智
能合约．如图２所示，合约的初始状态（根结点）为
（２，１），因为承诺犆１前提为空，因此其初始状态为
２（犫犪狊）．图中边上给出了改变合约状态的事件，比如
在初始状态可以发生两个事件，狋犻犿犲狅狌狋＿犫犪狊（犆１）和
狆犪狔．前者表示犆１在进入犫犪狊之后超时，也就意味着
该承诺违约，因此转变到状态（５，１），表示承诺犆１的
状态从２（犫犪狊）改变为５（狏犻狅）．后一个事件，狆犪狔，表
示甲执行付款动作，使得承诺犆１从２（犫犪狊）改变为
３（狊犪狋）．因为犆１进入到狊犪狋，犆２的前提得到满足，其
状态自动从１（犪犮狋）变为２（犫犪狊）．因此我们得到状态
（３，２）．注意，当一个承诺的前提变为ｔｒｕｅ，其状态将
自动从１变更为２，无需额外事件触发．因此本文描
述中都略去了从１到２的状态变化过程．
３３　由承诺生成状态机
根据一组承诺，我们可以自动构造相应的ＤＦＡ．
算法如下．
算法１．　创建ＤＦＡ．
输入：一组承诺犆犆
输出：ＤＦＡ的根结点
１．狀０←犻狀犻狋犚狅狅狋（犆犆）；／／狀０是ＤＦＡ根结点
２．犎．狆狌狊犺（狀０）；／／犎是一个堆栈，存放状态结点
３．ＷＨＩＬＥ（犎ｎｏｔｅｍｐｔｙ）ＤＯ｛
４．　狀←犎．狆狅狆（）；
５．　狊←狀．狊狋犪狋犲；
６．　ＦＯＲ（ｅａｃｈ狊′满足犲（狊，犲）→狊′∈Δ）ＤＯ｛
７．　　ＩＦ（狊′∈犎）ＴＨＥＮ｛／／若该状态曾出现过
８．　　　　犮犺犱←ｆｉｎｄ（犎，狊′）；
９．　　　　ａｄｄＣｈｉｌｄ（狀，犮犺犱）；
１０．　　｝
１１．　　ＥＬＳＥ｛／／新的状态结点
１２．　　　　犮犺犱←ｃｒｅａｔｅＣｈｉｌｄ（狀，狊′）；
１３．　　　　犎．狆狌狊犺（狊′，犮犺犱）；｝
１４．　｝
１５．｝
１６．ＲＥＴＵＲＮ狀０；
算法１第一行初始化一个根结点狀０，将其存入
到堆栈犎中．当堆栈不为空，读出栈顶的结点狀以
及该结点的状态狊．算法第６行遍历所有可以改变
当前状态的事件犲，算法７～１３行将孩子状态加到
当前结点的孩子集合中．第８行从犎中读出已有的
一个结点犮犺犱．第９行根据犮犺犱构造当前结点狀的
孩子．第１２行根据狊′构造狀的一个新的孩子结点．
回过头来分析例１，这是“一手交钱，一手交货”
的经典交易模式．然而，显然例１是有问题的，卖方
完全可以在收到货款之后不发货．在下一节，我们将
从博弈论的角度来对例１进行分析，并给出基于纳
什均衡检测合同缺陷的方法．
４　智能合约的博弈问题
商业合同是一个典型的博弈过程，合同参与人
在合同的不同状态上可能有不同的策略，以获得对
自己最有利的结果．本节将首先定义智能合约的博
弈问题，再讨论如何基于博弈论的思想来自动分析
合同的优劣．
定义４．　智能合约博弈．智能合约博弈由下列
２５１ 计　　算　　机　　学　　报 ２０２１年
《
 计
 算
 机
 学
 报
 》
部分组成：
（１）一个参与人的集合犖；
（２）一个状态变迁图犕＝（犛犆，α），其中犛犆是
状态机（见定义３），α是参与人函数，它赋给犛犆中
每个非终止状态一个参与人，也就是α（狊）∈犖指在
非终止状态狊上只有α（狊）可以采取行动；
（３）对每个参与人犻∈犖有一个终止状态上的
效用函数狌犻：!→!
＋．狌犻（狊）表示参与人犻在终止状
态狊∈!上的收益．
图２中的例子也是一个状态变迁图．包含两个参
与人犖＝｛甲，乙｝．每个非终止状态（内部结点）的行
动人标在了结点旁边，例如α（犃）＝甲．参与人甲的
效用函数是狌１（犇）＝０，狌１（犈）＝１０，狌１（犉）＝－１００；
参与人乙的效用函数是狌２（犇）＝０，狌２（犈）＝１０，
狌２（犉）＝１００．简略起见，我们将两个参与人在一个终
止状态的效用值写成一个向量．在图２中，结点犇、犈
和犉下方是两个参与人的效用值，甲在前，乙在后．
定义５．　智能合约博弈〈犖，犕，α，（狌犻）〉中，第犻
个参与人可以采取的策略集合是笛卡尔积Ω犻＝
×狊∈犛＼!，α（狊）＝犻｛犲｜（狊犻，犲）→狊犼∈Δ｝．一个策略组合是
γ＝（ω１，…，ω犖）∈×犻∈犖Ω犻，其中ω犻∈Ω犻是参与人
犻∈犖策略集合的一个策略，即第犻个参与人在各个
内部结点上所选择的动作．
对于每个承诺犆（狓，狔，狆，狉，狋犮），责任方狓是发
出承诺的一方．那么对于犆，当前提狆为真时，狓就
有两个选项，履行承诺或者违约．当前提狆为假时，
狓只有一个被动的动作选项，即让承诺过期．
例如，图２中，结点犃对应承诺犆１（甲，乙，，
狆犪狔（乙，１００），（∞，３））．由于前提条件恒为真，甲
在结点犃上可以选择执行的动作为｛犲１，犲２｝，即
狋犻犿犲狅狌狋＿犫犪狊（犆１）和狆犪狔．第一个动作表示甲在约定
期限内不付款，使得该承诺违约．第二个动作表示甲
选择付款，履行承诺．因此在结点犃，甲的策略集合
是Ω１＝｛犲１，犲２｝．类似地，乙在结点犅可以执行的动
作有｛犲３｝，在结点犆可以执行的动作为｛犲４，犲５｝．那
么乙的策略集合是笛卡尔积Ω２＝｛犲３｝×｛犲４，犲５｝＝
｛犲３犲４，犲３犲５｝．这里，犲３犲４是乙的一个策略，含义是他在
结点犅时会做动作犲３，在结点犆会做动作犲４．
参与人策略集合的笛卡尔积就是所有可能的策
略组合集合．例如，根据甲和乙的策略集合，有一个
策略组合（犲１，犲３犲４），其含义是：甲在结点犃时会做
动作犲１，乙在结点犅时会做动作犲３，在结点犆时会
做动作犲４．
对于每个策略组合γ，在状态变迁图中都能确
定并且唯一确定一条从初始结点到终止结点的动作
序列．例如，对于策略组合（犲１，犲３犲４），在图２中犃是
初始状态，甲做动作犲１，合约状态将改变为状态犅．
按照策略组合的内容，乙将在状态犅做动作犲３，合
约将进入到终止状态犇．注意，没有进入状态犆，因
此乙也就没有做动作犲４．也就是说，在一个策略组合
中并非所有的策略都会真正执行．
对于参与人来说，他们的收益只与终止状态有
关，因此会关心动作序列的终止状态．我们把动作
序列表示为甲→
犲１乙→
犲３犇，其中犇是一个终止状态，
甲→
犲１表示参与人甲执行动作犲１．
定义６．　智能合约博弈〈犖，犕，α，（狌犻）〉的策略
形式表示为〈犖，犕，（Ω犻），（狌犻）〉，对于每个参与人
犻∈犖有：
（１）Ω犻是参与人犻∈犖的策略集合；
（２）狌犻：×犻∈犖Ω犻→!
＋是参与人犻在策略组合上
的效用函数．任意一个策略组合γ∈×犻∈犖Ω犻，在状
态变迁图犕中确定并唯一确定一条终止状态是狊
的动作序列，因此有狌犻（γ）＝狌犻（狊）（狌犻（狊）是参与人犻
在终止状态狊上的效用）．
由于例１中只有两个参与人，其博弈问题的策
略形式可以通过效用矩阵表示（甲是行参与人，
乙是列参与人），如表１所示．注意，每个策略组合对
应矩阵中一个元素．例如，策略组合（犲１，犲３犲４）对应
左上角的元素．该策略组合在图２中确定了一条
唯一的动作序列甲→
犲１乙→
犲３犇．因为有狌１（犇）＝０和
狌２（犇）＝０，左上角的效用值为（０，０）．
表１　效用矩阵
甲 乙
犲３犲４ 犲３犲５
犲１ ０，０ ０，０
犲２ １０，１０ －１００，１００
定义７．纳什均衡．智能合约博弈〈犖，犕，α，（狌犻）〉
的纳什均衡是一个策略组合γ＝（ω１，…，ω犖）∈
×犻∈犖Ω犻，使得对每个参与人犻∈犖的策略ω犻∈
Ω犻有
狌犻（ω－犻，ω犻）狌犻（ω－犻，ω犻）．
上式中，ω－犻表示策略组合γ中去掉参与人犻的策略
ω犻之后其他参与人的策略．（ω－犻，ω犻）表示动作人犻选
择任意策略，其他参与人选择ω－犻中规定的策略．也
就是对于任何一个参与者犻而言，当其他每个参与
者都选择均衡策略ω－犻时，参与者犻所有的策略产生
的效用都不高于他选择策略ω犻所产生的效用．
３５１１期 陈晋川等：基于纳什均衡的智能合约缺陷检测
《
 计
 算
 机
 学
 报
 》
例如，从表１中可以看到对双方都有利的策
略组合是（犲２，犲３犲４），在图２中对应着动作序列
甲→
犲２乙→
犲４犈，含义是甲付款，且乙发货，双方各自可
以得到１０的效用值．然而，这个策略组合不是一个
纳什均衡，因为乙可以改变他的策略为犲３犲５，也就是
不发货，使得乙的效用值从１０提高到１００．理性的
乙在这种情况下会选择不发货，因此甲付款且乙发
货这样的理想局面无法出现．根据表１可以计算出只
有一个策略组合是纳什均衡，即右上角的（犲１，犲３犲５）．
该策略组合在图２中对应着一条动作序列甲→
犲１乙→
犲３
犇，含义是甲不付款，且乙不发货，双方的效用值都
是０．这是一个纳什均衡，因为双方都无法通过单方
面改变策略来获得更多的收益：如果甲将他的策
略改变为犲２，他的效用值会从０降低到－１００；如果
乙将他的策略改变为犲３犲４，他的效用值保持不变，依
然是０．
根据纳什均衡理论［６，１５１６］，如果所有参与人都
是理性的，完全了解效用矩阵，并且存在纳什均
衡，参与人会选择进入到纳什均衡的局面．这是因
为参与人在做策略选择时，当预计到可能会进入
到非纳什均衡的局面时，一些参与人知道他们可以
通过改变策略获得更多的效用值．由于他们都是理
性的，他们会改变策略，因此非纳什均衡这个局面并
不稳定．由于存在纳什均衡，这些参与人策略最终会
收敛到纳什均衡策略，因此会进入纳什均衡局面．例
如，在前面的例子中，假设甲乙都是理性的，他们也
知道表１的信息．如果智能合约预计会进入到非纳
什均衡局面（犲２，犲３犲４），乙会将策略从犲３犲４改变到
犲３犲５，因为他的效用值会从１０提高到１００，但甲的效
用值会从１０降低到－１００．但智能合约预计又会进
入到另一个非纳什均衡局面（犲２，犲３犲５），甲又会将策
略从犲２改变到犲１，因为他的效用值会从－１００提高
到０，处于纳什均衡局面（犲１，犲３犲５），也就是甲乙都选
择不合作．
当然，现实情况中，可能由于参与人的非理性行
为或者不了解效用矩阵，会进入到非纳什均衡的局
面．但本文考虑的是智能合约本身的问题，因此假设
参与人都是理性和完全了解信息的．在前面例子中，
甲乙只有选择不合作，显然这样的智能合约是有逻
辑缺陷的．
定义８．　智能合约逻辑缺陷．智能合约逻辑缺
陷是一种使得参与人效用小于或等于零的纳什均衡
γ∈×犻∈犖Ω犻，也就是；存在参与人犻∈犖，他从纳什
均衡γ获得的效用小于或等于零，即狌犻（γ）０．
基于状态变迁图，我们可以通过计算纳什均衡
来识别出智能合约的逻辑缺陷，然后自动分析出智
能合约的优劣．然而，状态变迁图存在组合爆炸的问
题．图中的结点数量与合同中承诺数量成指数关系．
当合同承诺数量较多时，将难以得到分析结果．接下
来，我们将讨论如何提高计算纳什均衡的效率，这主
要通过简化策略形式来实现．
５　策略形式的化简
给定一个合约，其策略形式本质上是状态变迁
图中各个结点的策略集合得到的笛卡尔积．因此，对
策略形式的化简，首先考虑的是对状态变迁图进行
化简．此外，我们还将讨论，如何在生成策略形式时，
避免生成冗余的策略组合．
本节将首先介绍“等价策略”合并原则，在此基
础上提出两个基于该原则的化简方法：基于效用值
相同叶结点的化简方法，以及基于独立承诺的化简
方法．接下来，我们将讨论一种新方法，该方法可以
突破等价策略的局限，对状态变迁图进行进一步化
简．最后，我们将提出一个发现冗余策略组合的方
法，避免一部分冗余策略组合的生成．
５１　等价策略合并原则
在经典的博弈论理论中［６］，等价策略合并原则
是最为常用的对策略形式进行化简的方法．
定理１．　等价策略合并原则．一个策略形式
〈犖，犕，（Ω犻），（狌犻）〉，若对于某参与人犽∈犖的两个
策略ω１犽和ω２犽，
狌（ω１，…ω１犽，…，ω犖）＝狌（ω１，…ω２犽，…，ω犖），
ω犻∈Ω犻（犻≠犽）
即给定其他参与人的任何策略，分别与ω１犽和ω２犽
构成的两个策略组合，这两个策略组合的效用值对
于每个参与人均相等．注意：对于一个策略组合γ＝
（ω１，…，ω犖），狌（γ）＝（狌１（γ），…，狌犖（γ））是一个犖维
向量，表示所有参与人在策略组合γ上的效用值．
根据文献［６］，若ω１犽和ω２犽满足上述条件，则任何
两个策略组合γ和γ′，若ω１犽∈γ且ω２犽∈γ′，则可以
将γ和γ′合并为一个策略，而不影响纳什均衡的
计算．
当只有两个参与人时，上述条件成立等价于效
用矩阵中有两个相同的行或列，因此也可以将其称
为“行（列）相同合并原则”．
接下来，我们讨论利用这一原则对状态变迁图
进行化简．
４５１ 计　　算　　机　　学　　报 ２０２１年
《
 计
 算
 机
 学
 报
 》
５２　效用值相同叶结点合并方法
定理２．　效用值相同叶结点合并规则．若多个
叶结点犾１，…，犾犿属于同一个非终止状态结点的孩
子，且这些叶结点上每个参与人的效用值都相等，则
将犾１，…，犾犿合并将不影响纳什均衡的求解．
证明．　不失一般性，设参与人为甲，设犲１，…，
犲犿分别为从父结点转移到犾１，…，犾犿的事件（也是甲
的动作）．犻，犼∈｛１，…，犿｝，假设γ犻和γ犼为任意两个
分别包含犲犻和犲犼的策略组合，且γ犻和γ犼除去犲犻和犲犼
之外其余部分完全相同，即γ犻／犲犻＝γ犼／犲犼．
若犲犻和犲犼在策略组合中均不生效（没有包含在
对应的动作序列中），γ犻和γ犼必然对应相同的执行路
径，效用值相等．
若犲犻和犲犼有一个生效，说明γ犻和γ犼对应的动作
序列将到达犾１，…，犾犿的父结点，则犲犻和犲犼都会生效．
因此γ犻和γ犼对应的动作序列必然终止于犲犻和犲犼指向
的叶结点，效用值也相同．因此γ犻和γ犼的效用值必
然相等，按等价策略合并原则，将γ犻和γ犼合并将不
影响纳什均衡的计算． 证毕．
依据定理２，我们可以将图３中左侧的两个叶
结点予以合并．
图３　基于效用值相同叶结点进行化简的例子
定理３．　内部结点合并规则．若多个内部结点
狏１，…，狏犿对应同一个参与人，它们均只有一个孩子
结点，且它们的孩子结点为同一个叶结点，则
狏１，…，狏犿可以合并，同样不影响纳什均衡的求解．
证明过程类似定理２，限于篇幅，略去细节．
依据定理３，我们可将图３中右侧图中倒数第
二层的两个结点予以合并．
５３　基于因果独立关系的化简方法
５．３．１　因果关系和因果独立
根据前面的分析，我们知道例１的合约是存在
漏洞的，不利于建立双方长期合作．原因在于没有对
乙的行为进行约束．因此，我们现在对例１进行完
善：仿照支付宝和以太坊的思路，加入资金监管．购
书款先存入到合约地址，当乙履行发货义务，才将购
书款转给乙．修改后的合约承诺如下．
例２．　第二版购书合同．甲承诺在３天将书款
１００元存入到合约账户；乙承诺在甲付款１天内发
货；甲承诺在乙发货７天内确认收货；Ｃｏｎｔｒａｃｔ承诺
在甲确认收货１天内将书款转账给乙；Ｃｏｎｔｒａｃｔ承
诺在乙违约（不发货）１天内将书款退回给甲．
注意Ｃｏｎｔｒａｃｔ的动作是智能合约代码规定的，
一旦前提满足，就必然会执行．因此Ｃｏｎｔｒａｃｔ不会
出现违约．
观察例２中的承诺，我们可以发现一些承诺之
间存在依赖．比如，承诺犆２的前提包含了犆１，因此必
须等犆１进入终止态之后才能判断犆２是否可以进入
犫犪狊状态．下面，我们引入因果关系的概念来描述这
种依赖关系．
定义９．　因果图（ＣａｒｓａｌＧｒａｐｈ）．给定一组承
诺犆犆，其相应的因果图犌定义如下：
（１）犆犆中每一个承诺犆犻对应犌中一个顶点；
（２）如果一个承诺犆犼的前提中包含犆犻，则在犌
中有一条有向边从犆犻指向犆犼．
图４展示的是例２中承诺所对应的因果图．
犆１（甲，乙，，犱犲狆狅狊犻狋（犆狅狀狋狉犪犮狋，１００），（∞，３））
犆２（乙，甲，犆１．狊犪狋，犱犲犾犻狏犲狉（犫狅狅犽，甲），（３，１））
犆３（甲，乙，犆２．狊犪狋，犮狅狀犳犻狉犿（ｒｅｃｅｉｖｅ＿ｂｏｏｋ），（７，７））
犆４（犆狅狀狋狉犪犮狋，乙，犆３．狊犪狋，狋狉犪狀狊犳犲狉（乙，１００），（３０，１））
犆５（犆狅狀狋狉犪犮狋，甲，犆３．狏犻狅，狉犲犳狌狀犱（甲，１００），（３０，１））
图４　因果图例子
定义１０．　因果关系（ＣａｒｓａｌＲｅｌａｔｉｏｎ）．给定两
个承诺犆犻和犆犼，定义犆犻和犆犼存在因果关系当且仅
当在因果图犌中存在至少一条路径连接犆犻和犆犼．若
犆犻和犆犼不存在因果关系，我们称它们是因果独立
（ｃａｒｓａｌｉｎｄｅｐｅｎｄｅｎｔ）的，或简称独立．
注意，随着合约的执行，某些承诺的状态可能发
生改变，若一个承诺犆犻进入某个终止态，我们须将
犆犻对应的顶点和与其相连的边都从犌中删除．因
此，可能存在犆犻和犆犼原本存在因果关系，但当合约
执行到某个状态时，它们变成了独立．如图４所示，
犆４和犆５本来是存在因果关系的，但如果犆３进入了
终态并从图中移去，则犆４和犆５独立．
５５１１期 陈晋川等：基于纳什均衡的智能合约缺陷检测
《
 计
 算
 机
 学
 报
 》
５．３．２　复合状态转移
若在因果图中存在一条从犆犻到犆犼的路径，则犆犼
需要等待犆犻的执行结果才能发生状态改变．但如果
犆犻和犆犼是独立的，则它们的状态改变可以以任意顺序
发生．例如，假设当前合约状态为狊，并假设此时犆犻和
犆犼都可以发生状态改变．假设事件犲犻使得承诺犆犻发
生改变，并引起状态转移δ１：（狊，犲犻）→狊１．事件犲犼使得
承诺犆犼发生改变，并引起状态转移δ２：（狊１，犲犼）→狊２．
也就是说，通过状态转移序列δ１δ２，可将合约状
态从狊转变到狊２．同理，若我们先改变犆犼，再改变
犆犻，也就是执行状态转移序列δ２δ１，一样可以将合约
状态从狊转变到狊２．
上面的例子可以看出，当相互独立的承诺发生
状态改变时，我们可以将多个状态改变合并到一
起，避免展开不必要的状态转移序列．由于状态变
迁图中一个结点只有一个动作人，我们在合并状
态转移时要求被合并的状态转移由同一个动作人
发起．
定义１１．复合状态转移（ＣｏｍｂｉｎｅｄＴｒａｎｓｉｔｉｏｎ）．
设合约状态为狊，给定一组两两独立的承诺｛犆１，
犆２，…，犆犿｝（犿２），若这些承诺此时均能发生状态
改变．不失一般性，假设这些承诺依次改变状态，
产生的状态转移序列为δ１，δ２，…，δ犿，并最终得到
合约状态狊′，且这些状态转移对应的事件分别为
｛犲１，犲２，…，犲犿｝．我们可以将这些状态转移合并为一
个复合状态转移δ：（狊，［犲１，犲２，…，犲犿］）→狊′．这里，
［犲１，犲２，…，犲犿］表示这犿个事件的任意排列．
需要指出，对于｛犲１，犲２，…，犲犿｝的任意一个序列
φ，（狊，φ）→狊′．因为这些事件可以在状态狊时独立发
生，其顺序不会影响结果．
图５的左侧展示了根据例２承诺生成的状态变
迁图的一部分．可以看到当犆３进入狊犪狋状态之后，犆４
和犆５可以独立改变自己状态．当事件狋狉犪狀狊犳犲狉发
生，犆４从２改变到３；当事件狋犻犿犲狅狌狋＿犪犮狋（犆５）发生，
犆５从１改变到４．从图中可以看到，这两个事件产生
的两个序列，最终得到相同的结果．因此，我们可以
将这两个状态转移合并，得到右边的图．
图５　复合状态转移例子
定理４．　基于复合状态转移的化简原则．当
状态变迁图的结点狏存在一组两两独立的承诺
｛犆１，犆２，…，犆犿｝（犿２），按定义１１将狏出发的多个
状态转移路径合并为一个复合状态转移，不会影响
纳什均衡的计算结果．
证明．　设化简之前的状态变迁图为犌，通过一
个复合状态转移犲对犌进行化简之后的状态变迁
图为犌′．设γ为任意一个由犌′生成且包含犲的策
略组合．则γ在犌′中对应唯一一条动作序列ρ指向
叶子结点犾，其对应的效用值为狌（犾）．
设犲在犌上对应的事件序列集合为［犲］．并
设ρ在犌上对应的路径集合为犘．
若犲不在ρ上，则任何属于［犲］的事件序列都
不会出现在任何一条犘的路径上．
若犲在ρ上，则属于［犲］的事件序列都在Ρ的
某条路径ρ′上．ρ和ρ′的唯一差别在于复合状态转
移部分，它们将指向相同的叶结点．也就是说，包含
这些序列的策略组合，其效用值均为狌（犾）．
根据等价策略合并原则可证． 证毕．
化简效果分析．若一个状态狊包含犽个独立承
诺，那么未化简前的状态变迁图将产生犽！个状态转
移序列，但是化简之后，这犽！个序列（路径）将被合
并为１个．因此，定理４可以大大减少状态变迁图结
点的数量，也将大幅降低策略形式的数量．
５４　基于纳什均衡等价的化简方法
之前讨论的化简方法的基础都是等价策略（行
列相同）合并原则，但是等价策略合并不是万能的．
图６（ａ）的例子中，结点犆、犇、犈结构非常类似：有相
同的父结点犃；孩子结点都是犉和犌，且转移到犉
或犌的事件也相同．我们希望将犆、犇、犈合并为一
个结点，如图６（ｂ）所示．
图６　状态变迁图等价
图６（ａ）的效用矩阵如表２所示（表中黑体部分
为纳什均衡的策略组合）．当我们分析其效用矩阵
时，发现并不存在相同的行或列．无法适用５．１小节
里的等价策略原则（也就是行列合并原则）．
６５１ 计　　算　　机　　学　　报 ２０２１年
《
 计
 算
 机
 学
 报
 》
表２　图６（犪）的效用矩阵
乙 甲
犲１ 犲２ 犲３ 犲４
犲５（犆）犲５（犇）犲５（犈） （４０，４０）（３０，３０）（３０，３０）（３０，３０）
犲５（犆）犲５（犇）犲６（犈） （４０，４０）（３０，３０）（３０，３０）（５０，５０）
犲５（犆）犲６（犇）犲５（犈） （４０，４０）（３０，３０）（５０，５０）（３０，３０）
犲５（犆）犲６（犇）犲６（犈） （４０，４０）（３０，３０）（５０，５０）（５０，５０）
犲６（犆）犲５（犇）犲５（犈） （４０，４０）（５０，５０）（３０，３０）（３０，３０）
犲６（犆）犲５（犇）犲６（犈） （４０，４０）（５０，５０）（３０，３０）（５０，５０）
犲６（犆）犲６（犇）犲５（犈） （４０，４０）（５０，５０）（５０，５０）（３０，３０）
犲６（犆）犲６（犇）犲６（犈） （４０，４０）（５０，５０）（５０，５０）（５０，５０）
但是我们观察化简图的效用矩阵，发现一个有
趣的现象．
首先，虽然不能适用行（列）相同合并原则，但是
在犆犇犈三个结点上，乙采取的策略是完全相同的：
选择犲５则到达犉，选择犲６则到达犌．
其次，在化简图中得到两个策略组合（表中黑体
标识）．如表３所示，其中左上角的策略组合｛犲５，犲１｝
与表２左上角的策略组合相同，在表２中该组合
也为纳什均衡点．右下角的策略组合｛犲６，犲２犲３犲４｝
含义是甲在犲２、犲３或犲４中任选一个，乙始终选择犲６．
可以逐一验证，这个策略组合与表２中标为黑体且
值为（５０，５０）的１２个策略组合是一致的．比如
｛犲６（犆）犲６（犇）犲６（犈），犲４｝，因为甲选择了犲４，乙的有
效动作就是犲６（犈），也就是说可以简化为｛犲６，犲４｝．
表３　图６（犫）的效用矩阵
乙 甲
犲１ 犲２‖犲３‖犲４
犲５ （４０，４０） （３０，３０）
犲６ （４０，４０） （５０，５０）
最后，我们观察｛犲６，犲２犲３犲４｝所对应的执行路
径（图中加粗的箭头所示），该路径在原图中对应三
条执行路径（同样是加粗箭头标识），容易验证，这三
条路径对应的策略组合均为纳什均衡点．
基于以上观察，我们提出以下基于纳什均衡等
价的化简方法．
定理５．　基于纳什均衡等价的化简规则．若结
点集合狏１，…，狏犿（犿１）有同一个父亲结点狏狆，狏狆
到狏犻（犻＝１，…，犿）的动作分别为犲犻；犻∈｛１，…，犿｝，
狏犻的孩子结点集合均为犾１，…，犾狀（叶结点），狏犻到
犾犼（犼＝１，…，狀）的动作为犲′犼．且狏１，…，狏犿的动作执行
人相同．则可将狏１，…，狏犿合并为一个结点狏，狏狆到狏
的动作为犲１…犲犿，狏到孩子结点犾犼的动作为犲′犼．
说明：依据定理５进行化简，我们将得到包含可
选动作，例如犲１…犲犿的执行路径，其在原图中对
应犿个路径，即将犲１…犲犿拆开成单独的动作，而
其他部分保持不变．例如化简图中路径甲－－－→
犲２‖犲３‖犲４乙→
犲６
犌，对应原图三条路径，甲→
犲２乙→
犲６犌，甲→
犲３乙→
犲６犌和
甲→
犲４乙→
犲６犌．
证明．
（）设基于定理５的化简图计算得到纳什均
衡点γ，且γ在化简图中对应路径ρ．将ρ中可选动
作集犲１…犲犿拆开，可得到原图中的路径集合犘．
不妨假设ρ是根到叶结点犾犼，则γ＝φ（犲１…犲犿）犲′犼
（φ表示任意动作序列）．既然φ（犲１…犲犿）犲′犼满足纳
什均衡条件，犻∈｛１，…，犿｝，γ犻＝φ犲犻犲′犼也必然满足．
（）反过来，犻１，犻２∈｛１，…，犿｝，若γ犻１＝φ犲犻１犲′犼
是纳什均衡点，注意γ犻１＝φ犲犻１犲′犼和γ犻２＝φ犲犻２犲′犼是在结
点狏ρ之后才分开．不妨假设狏１，…，狏犿的动作人为
甲，对于甲在γ犻１的策略集，其他人的最优策略就是
γ犻１＿甲．而γ犻１＿甲和γ犻２＿甲差别仅仅在于γ犻１在结点狏ρ采
取了犲犻１，而γ犻２在结点狏ρ采取了犲犻２．因为甲的后续动
作均为犲′犼，它们的效用值是一样的．因此，γ犻２也必然
是纳什均衡点．这样我们就得到，犻∈｛１，…，犿｝，
γ犻＝φ犲犻犲′犼，这些策略组合要么都是纳什均衡点，要么
都不是纳什均衡点．
若策略组合集｛γ犻＝φ犲犻犲′犼｜犻＝１，…，犿｝中每一个
都是纳什均衡点，容易看出γ＝φ（犲１…犲犿）犲′犼也必
然满足纳什均衡条件．
若策略组合集｛γ犻＝φ犲犻犲′犼｜犻＝１，…，犿｝都不是纳
什均衡点，则依据（）的逆否命题，γ＝φ（犲１…犲犿）犲′犼
也不可能是纳什均衡点． 证毕．
讨论：经过上述化简，状态转移图的规模大大
缩小，但是在基于状态转移图求纳什均衡的过程中
依然遇到了很大问题．原因在于求策略形式过程中，
需要做两次笛卡尔积．接下来，我们将从另一个角度
来简化策略形式，即在构建策略组合时，避免生成冗
余的组合．
５５　冗余策略形式化简
图７　冗余策略形式例子
依据策略形式的定义，我们需要计算一个参与
人在所有内部结点的动作集合的笛卡尔积，以得到
该参与人所有策略．例如图７，甲的所有策略为
｛犲１犲３，犲１犲４，犲２犲３，犲２犲４｝，即甲在犃的动作集合｛犲１，犲２｝
７５１１期 陈晋川等：基于纳什均衡的智能合约缺陷检测
《
 计
 算
 机
 学
 报
 》
与他在犅的动作集合｛犲３，犲４｝做笛卡尔积．
从图７中我们发现，如果甲在结点犃选择了
犲２，那么动作犲３，犲４必然不会生效，因此犲２犲３，犲２犲４可
能是冗余的．基于此观察，我们提出下面的化简
方法．
注意到一个动作犲实际对应状态变迁图的一条
边，为了便于描述，不妨设犲的源结点为狊狉犮（犲），目
标结点为犱狊狋（犲）．
定理６．　若某动作人在不同结点有两个策略
犲α和犲β，狊狉犮（犲α）是狊狉犮（犲β）的祖先，且犲β不在以犱狊狋（犲α）
为根的子树中，则所有同时包含犲α和犲β的策略组合
都是冗余的．
证明．　假设一个策略组合γ同时包含犲α和犲β．
若犲α生效，说明γ对应的路径将经过边犲α，由于
犲β不在以犱狊狋（犲α）为根的子树中，则犲β不可能生效．
那么γ可以被另一个更短的策略组合γ／犲β替代．
若犲β生效，说明γ对应的路径将经过边犲β，则
犲α不可能生效．那么γ可以被另一个策略组合γ／犲α
替代．
若犲α和犲β均不生效，则γ可以被另一个策略组
合γ／｛犲α，犲β｝替代．
综上所述，任何同时包含犲α和犲β的策略组合都
是冗余的． 证毕．
实际应用中，策略组合的数量可能非常大，难以
在短时间内全部构造出来．上述定理可以帮助我们
避免生成不必要的策略组合，而不是在生成所有策
略组合之后再化简．
６　系统实现和实验分析
本节将首先介绍我们开发的一个用于智能合约
建模、分析以及部署到区块链平台的工具．接下来介
绍我们对一组真实合同分析的结果，以及我们所提
出方法在性能提升方面的表现．
６１　系统介绍
我们开发了一个用于智能合约建模、分析及自
动部署的工具．图８是部分截图．（ａ）展示了一个合
约的编辑界面，用户可以输入合约的承诺，系统会自
动展现承诺之间的依赖关系（因果依赖图）；（ｂ）展
示的是将一个合约自动部署到Ｆａｂｒｉｃ平台的运行
结果；（ｃ）是合约分析界面，用户可以看到根据合约
承诺自动构建的状态变迁图．在输入效用值之后，还
可以自动分析合约的纳什均衡点，其中黑色文字框
展示了合约的一个执行路径．我们的工具还可以自
动根据状态变迁图生成智能合约的代码，例如Ｈｙ
ｐｅｒｌｅｄｇｅｒＦａｂｒｉｃ链码．用户将其中部分动作函数补
充完整之后，就可以使用我们的工具将合约部署到
Ｆａｂｒｉｃ平台上．
图８　智能合约建模、分析及部署工具
我们采用了经典的ＬｅｍｋｅＨｏｗｓｏｎ算法［１５］来
求解纳什均衡．
６２　有效性实验
依据《中华人民共和国合同法》（１９９９年３月１５日
８５１ 计　　算　　机　　学　　报 ２０２１年
《
 计
 算
 机
 学
 报
 》
颁布），常见的合同共有买卖合同、供用合同、赠与合
同等１５类．我们参照华律网（６６ｌａｗ．ｃｎ）和合同帮
（ｈｅｔｏｎｇｂ．ｃｏｍ）两个网站的合同范本，使用我们开发
的工具对其中１４类合同进行了建模和分析．只有居
间合同因为涉及到多方参与，暂时不支持．
我们总计对１４大类５０个合同进行了建模和分
析．并根据分析结果将这些合同分为三个等级．
若一个纳什均衡点，参与各方效用（收益）均为
零，我们称为全零；若参与各方效用均为正，称为全
正；若有正有负，称为正负；这三类之外的归入其他．
如图９所示，在合同范本中，大部分合同质量是
合格的，其中有３５％的合同达到了优秀．这些合同
中，因为只有全零和全正的纳什均衡点，参与各方会
优先考虑“双赢”的博弈策略．
优：纳什均衡点全部为全正，或是全零＋全正
中：其余情况
差：纳什均衡点全部为全零或正负
图９　合同分析结果
但我们也看到，有４１％的合同存在问题．这些
合同中，大部分是只存在全零的纳什均衡点．此时，
参与各方在综合利弊之后，将很可能选择不参与博
弈，也就是不执行合同．
下面我们分析一个评分为“差”的合同．
合同实例：消费寄托合同
犆１（甲，乙，，寄物品＆＆付寄托金，（７，１））
犆２（乙，甲，犆１．狊犪狋，受领，（∞，１））
犆３（乙，甲，犆２．狊犪狋，使用寄托物，（∞，３０））
犆４（乙，甲，犆２．狊犪狋＆＆犼狌犱犵犲（寄托满３０天），返还，（∞，３））
消费寄托合同的含义是甲方将货物寄托在乙方
处，并支付寄托金．乙方可以在寄托期间使用部分寄
托物品（比如煤炭），但是当寄托期满，乙方必须补足
原有物品数量并归还给甲方．
上述合约的含义是：甲方将物品寄托给乙方并
且付给乙方３０００元寄托费（犆１），乙方决定是否受领
寄托物（犆２）．乙方可以自由消费寄托物（犆３），但是
必须在寄托时间到期（由犼狌犱犵犲函数调用预言机实
现）后将寄托物全额返还给甲方（犆４）．
如果一开始甲方就没有将物品寄托给乙方，双
方受益均为０．或者甲方想要将物品寄托给乙方，但
是乙方不受领寄托物，双方受益也均为０．但是当寄
托物一旦成功寄托后，乙方可以自由选择是否执行
承诺犆４，如果乙方违约，不将寄托物返还给甲方，这
能使乙方自己获得更高的收益．
因此，上述合同只有全零的纳什均衡点．甲如果
选择寄托物品，那么作为理性的博弈参与人，乙将选
择使自己收益最大的策略———违约．那么甲在分析利
弊之后，最好的对策是不寄托物品．也就意味着合同
根本不会被执行．这样的合同不利于双方重复博弈．
需要指出的是，我们通过自动分析，发现很多合
同范本都存在上述问题，没有对某参与方的违约行
为予以惩罚．那么合同是否顺利执行可能只有取决
于该参与方的道德水平或法律诉讼．从商务合同的
原则来看，这显然是不合理的．
可以看出，我们提出的建模方法可以对现实中
大多数合同进行建模；并且，基于博弈论对合同自动
分析能够发现潜在有逻辑缺陷（不公平）的合同．
６３　效率实验
我们按状态结点数量将合同分为四类，结点数量
分别为［１，５０］，［５１，１００］，［１０１，２００］以及［２０１，∞）．
状态结点的数量基本反映了合同的复杂程度．
我们对比了四类方法：
（１）ＤＦＡ方法．采用基本的智能合约建模方法，
未做任何化简．
（２）ＳＥ方法．基于策略等价（ＳｔｒａｔｅｇｙＥｑｕｉｖａ
ｌｅｎｃｅ，ＳＥ）原则对状态变迁图进行化简．
（３）ＳＥ＋ＮＥ方法．采用了ＳＥ方法和纳什均衡
等价原则（ＮａｓｈＥｑｕｉｖａｌｅｎｃｅ，ＮＥ）对状态变迁图
化简．
（４）ＳＥ＋ＮＥ＋ＲＳ方法．采用以上两类化简方法
基础上，还采用了冗余策略组合化简方法（Ｒｅｄｕｎｄａｎｔ
Ｓｔｒａｔｅｇｙ，ＲＳ）．
下面我们分别从状态结点个数、策略组合个数
以及计算纳什均衡时间三个方面验证我们所提出方
法的有效性．
图１０对比了ＤＦＡ、ＳＥ和ＳＥ＋ＮＥ这三种方法
在四类合同中产生的状态结点数量．可见随着合同
趋于复杂，化简方法效果越明显．特别地，当合同较
为复杂，化简之后的结点数量只有化简前的约１％．
由于最后一种化简方法（ＲＳ）并不会减少状态结点
个数，我们没有在图１０中列出来．
接下来，我们深入分析三种化简方法在计算纳
什均衡过程中的效果．由于ＤＦＡ方法只能计算出
９５１１期 陈晋川等：基于纳什均衡的智能合约缺陷检测
《
 计
 算
 机
 学
 报
 》
图１０　状态结点个数
极少数非常简单合同的纳什均衡，在后续分析中，不
再列出ＤＦＡ方法的结果．
图１１对比了ＳＥ、ＳＥ＋ＮＥ和ＳＥ＋ＮＥ＋ＲＳ这
三种方法在四类合同中产生的策略组合数量（对数
坐标）．可以明显看到，叠加了冗余策略化简之后，策
略组合数量明显下降，对于复杂的合同，ＳＥ＋ＮＥ＋
ＲＳ方法的策略组合数比ＳＥ＋ＮＥ方法少了６个数
量级，而ＳＥ方法将会产生极多的策略组合，以至于
根本不能在有效时间内计算出纳什均衡．
图１１　策略组合个数
图１２　计算纳什均衡所需时间（单位：ｓ）
图１２展示了四类合同中ＳＥ、ＳＥ＋ＮＥ和ＳＥ＋
ＮＥ＋ＲＳ这三种方法在计算纳什均衡耗时的对比
（对数坐标）．可以看到，叠加了冗余策略化简之后，
计算纳什均衡的效率同样大幅提升．对于一些非常
复杂的合同，ＳＥ＋ＮＥ方法需要超过一小时来求纳
什均衡，而ＳＥ＋ＮＥ＋ＲＳ方法只需要几秒．我们在
该实验中设置的最长时间为１ｈ，因此对于ＳＥ方法，
其实际需要的时间远超过图中的数据．
以上结果表明，我们所提出的化简方法可大幅
度缩减计算纳什均衡所需的时间．
７　总结和展望
区块链使用智能合约描述参与各方需要共同遵
守的规则．一旦合约中存在漏洞问题，往往就会带来
巨大的损失，因此智能合约缺陷检测成为了受到广
泛关注的研究问题．然而，现在区块链的智能合约并
没有统一的编程语言和运行模型，一般需要由不懂
计算机编程语言的管理人员负责智能合约的创建
和检测．针对这个问题，我们之前的工作提出了一
种编程语言无关、易于理解的智能合约模型．本文
中，在这个合约模型的基础上，我们形式化定义了
智能合约的博弈问题，然后提出基于纳什均衡的
漏洞检测方法；并提出了一系列的策略形式化简
算法，实现高效的缺陷检测．此外，我们实现了一
个图形化的工具，可以对智能合约进行建模、分析
和部署．最后，通过实验对方法的可用性和效率进
行了验证．
未来我们将进一步完善建模方法，支持更复杂
的语义．也会研究基于机器学习来求解纳什均衡的
方法，以支持更为复杂的合同．
参考文献
［１］ＳｚａｂｏＮ．Ｓｍａｒｔｃｏｎｔｒａｃｔｓ：Ｂｕｉｌｄｉｎｇｂｌｏｃｋｓｆｏｒｄｉｇｉｔａｌｍａｒｋｅｔｓ．
ＥＸＴＲＯＰＹ：ＴｈｅＪｏｕｒｎａｌｏｆＴｒａｎｓｈｕｍａｎｉｓｔＴｈｏｕｇｈｔ，１９９６，
１６：
［２］ＬｕｕＬ，ＣｈｕＤＨ，ＯｌｉｃｋｅｌＨ，ｅｔａｌ．Ｍａｋｉｎｇｓｍａｒｔｃｏｎｔｒａｃｔｓ
ｓｍａｒｔｅｒ／／ＰｒｏｃｅｅｄｉｎｇｓｏｆｔｈｅＡＣＭＳＩＧＳＡＣＣｏｎｆｅｒｅｎｃｅｏｎ
ＣｏｍｐｕｔｅｒａｎｄＣｏｍｍｕｎｉｃａｔｉｏｎｓＳｅｃｕｒｉｔｙ（ＣＣＳ’１６）．Ｖｉｅｎｎａ，
Ａｕｓｔｒｉａ，２０１６：２５４２６９
［３］ＭｉｎｉｓｔｒｙｏｆＩｎｄｕｓｔｒｙａｎｄＩｎｆｏｒｍａｔｉｏｎＴｅｃｈｎｏｌｏｇｙ．Ｗｈｉｔｅ
ＰａｐｅｒｏｎＣｈｉｎａ’ｓＢｌｏｃｋｃｈａｉｎＴｅｃｈｎｏｌｏｇｙａｎｄＡｐｐｌｉｃａｔｉｏｎ
Ｄｅｖｅｌｏｐｍｅｎｔ，Ｏｃｔｏｂｅｒ２０１６（ｉｎＣｈｉｎｅｓｅ）
（工信部．《中国区块链技术和运用发展白皮书》，２０１６年
１０月）
［４］ＷａｎｇＰｕＷｅｉ，ＹａｎｇＨａｎｇＴｉａｎ，ＭｅｎｇＪｉ，ｅｔａｌ．Ｆｏｒｍａｌ
ｄｅｆｉｎｉｔｉｏｎｆｏｒｃｌａｓｓｉｃａｌｓｍａｒｔｃｏｎｔｒａｃｔｓａｎｄｒｅｆｅｒｅｎｃｅｉｍｐｌｅ
ｍｅｎｔａｔｉｏｎ．ＪｏｕｒｎａｌｏｆＳｏｆｔｗａｒｅ，２０１９，３０（９）：２６０８２６１９（ｉｎ
Ｃｈｉｎｅｓｅ）
（王璞巍，杨航天，孟佶等．面向合同的智能合约的形式化定
义及参考实现．软件学报，２０１９，３０（９）：２６０８２６１９）
［５］ＤｅｓａｉＮ，ＣｈｏｐｒａＡＫ，ＳｉｎｇｈＭＰ．Ｒｅｐｒｅｓｅｎｔｉｎｇａｎｄｒｅａｓｏｎｉｎｇ
ａｂｏｕｔｃｏｍｍｉｔｍｅｎｔｓｉｎｂｕｓｉｎｅｓｓｐｒｏｃｅｓｓｅｓ／／Ｐｒｏｃｅｅｄｉｎｇｓｏｆｔｈｅ
２２ｎｄＡＡＡＩＣｏｎｆｅｒｅｎｃｅｏｎＡｒｔｉｆｉｃｉａｌＩｎｔｅｌｌｉｇｅｎｃｅ．Ｖａｎｃｏｕｖｅｒ，
Ｃａｎａｄａ，２００７：１３２８１３３３
０６１ 计　　算　　机　　学　　报 ２０２１年
《
 计
 算
 机
 学
 报
 》
［６］ＯｓｂｏｒｎｅＭＪ，ＲｕｂｉｎｓｔｅｉｎＡ．ＡＣｏｕｒｓｅｉｎＧａｍｅＴｈｅｏｒｙ．
ＵＳＡ：ＭＩＴＰｒｅｓｓ，１９９４
［７］ＹａｎｇＺ，ＬｅｉＨ．Ｆｏｒｍａｌｐｒｏｃｅｓｓｖｉｒｔｕａｌｍａｃｈｉｎｅｆｏｒｓｍａｒｔ
ｃｏｎｔｒａｃｔｓｖｅｒｉｆｉｃａｔｉｏｎ．ＩｎｔｅｒｎａｔｉｏｎａｌＪｏｕｒｎａｌｏｆＰｅｒｆｏｒｍａｂｉｌｉｔｙ
Ｅｎｇｉｎｅｅｒｉｎｇ，２０１８，１４（８）：１７２６１７３４
［８］ＢｉｇｉＧ，ＢｒａｃｃｉａｌｉＡ，ＭｅａｃｃｉＧ，ｅｔａｌ．Ｖａｌｉｄａｔｉｏｎｏｆｄｅｃｅｎｔｒａｌｉｚｅｄ
ｓｍａｒｔｃｏｎｔｒａｃｔｓｔｈｒｏｕｇｈｇａｍｅｔｈｅｏｒｙａｎｄｆｏｒｍａｌｍｅｔｈｏｄｓ／／
ＢｏｄｅｉＣ，ＦｅｒｒａｒｉＧ，ＰｒｉａｍｉＣ，ｅｄｓ．ＰｒｏｇｒａｍｍｉｎｇＬａｎｇｕａｇｅｓ
ｗｉｔｈＡｐｐｌｉｃａｔｉｏｎｓｔｏＢｉｏｌｏｇｙａｎｄＳｅｃｕｒｉｔｙ，ＬｅｃｔｕｒｅＮｏｔｅｓｉｎ
ＣｏｍｐｕｔｅｒＳｃｉｅｎｃｅ９４６５．Ｃｈａｍ：Ｓｐｒｉｎｇｅｒ，２０１５：１４２１６１
［９］ＭａｖｒｉｄｏｕＡ，ＬａｓｚｋａＡ．ＤｅｓｉｇｎｉｎｇｓｅｃｕｒｅＥｔｈｅｒｅｕｍｓｍａｒｔ
ｃｏｎｔｒａｃｔｓ：Ａｆｉｎｉｔｅｓｔａｔｅｍａｃｈｉｎｅｂａｓｅｄａｐｐｒｏａｃｈ／／Ｐｒｏｃｅｅｄｉｎｇｓ
ｏｆｔｈｅ２２ｎｄＩｎｔｅｒｎａｔｉｏｎａｌＣｏｎｆｅｒｅｎｃｅｏｎＦｉｎａｎｃｉａｌＣｒｙｐｔｏｇｒａｐｈｙ
ａｎｄＤａｔａＳｅｃｕｒｉｔｙ（ＦＣ２０１８）．Ｎｉｅｕｗｐｏｏｒｔ，Ｃｕｒａｃａｏ，２０１８：
５２３５４０
［１０］ＧａｏＸ，ＳｉｎｇｈＭＰ．Ｅｘｔｒａｃｔｉｎｇｎｏｒｍａｔｉｖｅｒｅｌａｔｉｏｎｓｈｉｐｓｆｒｏｍ
ｂｕｓｉｎｅｓｓｃｏｎｔｒａｃｔｓ／／ＰｒｏｃｅｅｄｉｎｇｓｏｆｔｈｅＩｎｔｅｒｎａｔｉｏｎａｌＣｏｎｆｅｒｅｎｃｅ
ｏｎＡｕｔｏｎｏｍｏｕｓＡｇｅｎｔｓａｎｄＭｕｌｔｉａｇｅｎｔＳｙｓｔｅｍｓ（ＡＡＭＡＳ）．
Ｐａｒｉｓ，Ｆｒａｎｃｅ，２０１４：１０１１０８
［１１］ＳｉｎｇｈＭＰ，ＣｈｏｐｒａＡＫ．Ｃｌｏｕｓｅａｕ：Ｇｅｎｅｒａｔｉｎｇｃｏｍｍｕｎｉｃａｔｉｏｎ
ｐｒｏｔｏｃｏｌｓｆｒｏｍｃｏｍｍｉｔｍｅｎｔｓ／／Ｐｒｏｃｅｅｄｉｎｇｓｏｆｔｈｅ３４ｔｈ
ＣｏｎｆｅｒｅｎｃｅｏｎＡｒｔｉｆｉｃｉａｌＩｎｔｅｌｌｉｇｅｎｃｅ（ＡＡＡＩ）．ＮｅｗＹｏｒｋ，
ＵＳＡ，２０２０
［１２］ＤｅｓａｉＮ，ＮａｒｅｎｄｒａＮＣ，ＳｉｎｇｈＭＰ．Ｃｈｅｃｋｉｎｇｃｏｒｒｅｃｔｎｅｓｓｏｆ
ｂｕｓｉｎｅｓｓｃｏｎｔｒａｃｔｓｖｉａｃｏｍｍｉｔｍｅｎｔｓ／／Ｐｒｏｃｅｅｄｉｎｇｓｏｆｔｈｅ７ｔｈ
ＩｎｔｅｒｎａｔｉｏｎａｌＪｏｉｎｔＣｏｎｆｅｒｅｎｃｅｏｎＡｕｔｏｎｏｍｏｕｓＡｇｅｎｔｓａｎｄ
ＭｕｌｔｉａｇｅｎｔＳｙｓｔｅｍｓ（ＡＡＭＡＳ２００８）．Ｅｓｔｏｒｉｌ，Ｐｏｒｔｕｇａｌ，
２００８：７８７７９４
［１３］ＣｈｏｐｒａＡＫ，ＯｒｅｎＮ，ＳｉｎｇｈＭＰ，ｅｔａｌ．Ａｎａｌｙｚｉｎｇｃｏｎｔｒａｃｔ
ｒｏｂｕｓｔｎｅｓｓｔｈｒｏｕｇｈａｍｏｄｅｌｏｆｃｏｍｍｉｔｍｅｎｔｓ／／Ｐｒｏｃｅｅｄｉｎｇｓｏｆ
ｔｈｅ１１ｔｈＡＡＭＡＳＩｎｔｅｒｎａｔｉｏｎａｌＷｏｒｋｓｈｏｐｏｎＡｇｅｎｔＯｒｉｅｎｔｅｄ
ＳｏｆｔｗａｒｅＥｎｇｉｎｅｅｒｉｎｇ（ＡＯＳＥ）．Ｂｅｒｌｉｎ，Ｇｅｒｍａｎｙ，２０１１：１７３６
［１４］ＡｄｌｅｒＪ，ＢｅｒｒｙｈｉｌｌＲ，ＶｅｎｅｒｉｓＡ，ｅｔａｌ．Ａｓｔｒａｅａ：Ａｄｅｃｅｎ
ｔｒａｌｉｚｅｄｂｌｏｃｋｃｈａｉｎｏｒａｃｌｅ／／Ｐｒｏｃｅｅｄｉｎｇｓｏｆｔｈｅ２０１８ＩＥＥＥ
ＩｎｔｅｒｎａｔｉｏｎａｌＣｏｎｆｅｒｅｎｃｅｏｎＩｎｔｅｒｎｅｔｏｆＴｈｉｎｇｓ（ｉＴｈｉｎｇｓ）ａｎｄ
ＩＥＥＥＧｒｅｅｎＣｏｍｐｕｔｉｎｇａｎｄＣｏｍｍｕｎｉｃａｔｉｏｎｓ（ＧｒｅｅｎＣｏｍ）
ａｎｄＩＥＥＥＣｙｂｅｒ，ＰｈｙｓｉｃａｌａｎｄＳｏｃｉａｌＣｏｍｐｕｔｉｎｇ（ＣＰＳＣｏｍ）
ａｎｄＩＥＥＥＳｍａｒｔＤａｔａ（ＳｍａｒｔＤａｔａ）．Ｈａｌｉｆａｘ，Ｃａｎａｄａ，２０１８：
１１４５１１５２
［１５］ＳｈａｐｌｅｙＬＳ．ＡｎｏｔｅｏｎｔｈｅＬｅｍｋｅＨｏｗｓｏｎａｌｇｏｒｉｔｈｍ／／
ＢａｌｉｎｓｋｉＭＬｅｄ．ＰｉｖｏｔｉｎｇａｎｄＥｘｔｅｎｓｉｏｎ：Ｍａｔｈｅｍａｔｉｃａｌ
ＰｒｏｇｒａｍｍｉｎｇＳｔｕｄｉｅｓ，ｖｏｌ１．Ｂｅｒｌｉｎ，Ｇｅｒｍａｎｙ：Ｓｐｒｉｎｇｅｒ，
２００９
［１６］ＳｕｒｅｋａＡ，ＷｕｒｍａｎＰＲ．ＵｓｉｎｇＴａｂｕｂｅｓｔｒｅｓｐｏｎｓｅｓｅａｒｃｈｔｏ
ｆｉｎｄｐｕｒｅｓｔｒａｔｅｇｙＮａｓｈｅｑｕｉｌｉｂｒｉａｉｎｎｏｒｍａｌｆｏｒｍｇａｍｅｓ／／
Ｐｒｏｃｅｅｄｉｎｇｓｏｆｔｈｅ４ｔｈＩｎｔｅｒｎａｔｉｏｎａｌＪｏｉｎｔＣｏｎｆｅｒｅｎｃｅｏｎ
ＡｕｔｏｎｏｍｏｕｓＡｇｅｎｔｓａｎｄＭｕｌｔｉａｇｅｎｔＳｙｓｔｅｍｓ（ＡＡＭＡＳ２００５）．
Ｕｔｒｅｃｈｔ，ＴｈｅＮｅｔｈｅｒｌａｎｄｓ，２００５：１０２３１０２９
犆犎犈犖犑犻狀犆犺狌犪狀，Ｐｈ．Ｄ．，ａｓｓｏｃｉａｔｅ
ｐｒｏｆｅｓｓｏｒ．Ｈｉｓｍａｉｎｒｅｓｅａｒｃｈｉｎｔｅｒｅｓｔｓ
ｉｎｃｌｕｄｅｄｉｓｔｒｉｂｕｔｅｄｄａｔａｍａｎａｇｅｍｅｎｔａｎｄ
ｂｌｏｃｋｃｈａｉｎ．
犡犐犃犎狌犪犎狌犻，Ｍ．Ｓ．ｃａｎｄｉｄａｔｅ．Ｈｉｓｍａｉｎｒｅｓｅａｒｃｈ
ｉｎｔｅｒｅｓｔｓｉｎｃｌｕｄｅｂｌｏｃｋｃｈａｉｎａｎｄｓｍａｒｔｃｏｎｔｒａｃｔｓ．
犠犃犖犌犘狌犠犲犻，Ｐｈ．Ｄ．，ａｓｓｏｃｉａｔｅｐｒｏｆｅｓｓｏｒ．Ｈｉｓｍａｉｎ
ｒｅｓｅａｒｃｈｉｎｔｅｒｅｓｔｓｉｎｃｌｕｄｅｓｅｒｖｉｃｅｃｏｍｐｕｔｉｎｇａｎｄｂｌｏｃｋｃｈａｉｎ．
犕犃犖犪犅狅，Ｍ．Ｓ．ｃａｎｄｉｄａｔｅ．Ｈｉｓｍａｉｎｒｅｓｅａｒｃｈｉｎｔｅｒｅｓｔｓ
ｉｎｃｌｕｄｅｄｉｓｔｒｉｂｕｔｅｄｃｏｍｐｕｔｉｎｇａｎｄｂｌｏｃｋｃｈａｉｎ．
犠犃犖犌犙犻，Ｍ．Ｓ．ｃａｎｄｉｄａｔｅ．Ｈｅｒｍａｉｎｒｅｓｅａｒｃｈｉｎｔｅｒｅｓｔ
ｉｓｂｌｏｃｋｃｈａｉｎ．
犔犐犎犪狅犚犪狀，Ｍ．Ｓ．ｃａｎｄｉｄａｔｅ．Ｈｉｓｍａｉｎｒｅｓｅａｒｃｈｉｎｔｅｒｅｓｔｓ
ｉｎｃｌｕｄｅｓｅｒｖｉｃｅｃｏｍｐｕｔｉｎｇａｎｄｂｌｏｃｋｃｈａｉｎ．
犇犝犡犻犪狅犢狅狀犵，Ｐｈ．Ｄ．，ｐｒｏｆｅｓｓｏｒ．Ｈｉｓｍａｉｎｒｅｓｅａｒｃｈ
ｉｎｔｅｒｅｓｔｓｉｎｃｌｕｄｅｄｉｓｔｒｉｂｕｔｅｄｄａｔａｍａｎａｇｅｍｅｎｔｔｅｃｈｎｏｌｏｇｙ．
犅犪犮犽犵狉狅狌狀犱
Ｔｈｉｓｗｏｒｋｆｏｃｕｓｅｓｏｎｔｈｅｐｒｏｂｌｅｍｏｆｍｏｄｅｌｌｉｎｇａｎｄ
ａｎａｌｙｚｉｎｇｓｍａｒｔｃｏｎｔｒａｃｔｓ．Ｒｅｃｅｎｔｙｅａｒｓ，ｓｍａｒｔｃｏｎｔｒａｃｔｓａｎｄ
ｂｌｏｃｋｃｈａｉｎｂｅｃｏｍｅａｈｏｔｒｅｓｅａｒｃｈｔｏｐｉｃｉｎｄｉｓｔｒｉｂｕｔｅｄｃｏｍｐｕ
ｔｉｎｇ，ｉｎｆｏｒｍａｔｉｏｎｓｅｃｕｒｉｔｙ，ｄａｔａｂａｓｅ，ａｎｄｓｅｒｖｉｃｅｃｏｍｐｕｔｉｎｇ
ｅｔｃ．Ｍｏｓｔｗｏｒｋｓｒｅｇａｒｄｓｍａｒｔｃｏｎｔｒａｃｔａｓｃｏｍｐｕｔｅｒｐｒｏｇｒａｍｓ
ｒｕｎｎｉｎｇｏｎｂｌｏｃｋｃｈａｉｎｓｙｓｔｅｍｓ．Ｈｅｎｃｅｔｈｅｓｅｓｍａｒｔｃｏｎｔｒａｃｔｓ
ｈａｖｅｎｏｔｈｉｎｇｔｏｄｏｗｉｔｈ“ｃｏｎｔｒａｃｔｓ”．Ｏｕｒｗｏｒｋｔｒｉｅｓｔｏ
ｂｒｉｄｇｅｔｈｅｇａｐｂｅｔｗｅｅｎｂｕｓｉｎｅｓｓｃｏｎｔｒａｃｔｓａｎｄｃｏｍｐｕｔｅｒ
ｃｏｄｅｓ．
Ｍｏｒｅｏｖｅｒ，ｉｎｔｈｅｍｕｌｔｉａｇｅｎｔｃｏｍｍｕｎｉｔｙｔｈｅｒｅｈａｖｅ
ｂｅｅｎｍａｎｙｗｏｒｋｓｏｎｍｏｄｅｌｌｉｎｇｂｕｓｉｎｅｓｓｃｏｎｔｒａｃｔｓ，ｏｒ
ｉｎｔｅｒｏｒｇａｎｉｚａｔｉｏｎｐｒｏｃｅｓｓｅｓ．Ｍｏｓｔｏｆｔｈｅｓｅｗｏｒｋｓａｒｅｂａｓｅｄ
ｏｎｔｈｅｃｏｍｍｉｔｍｅｎｔｍｏｄｅｌ．Ｔｈｅｙｔｒｙｔｏｄｅｓｃｒｉｂｅｂｕｓｉｎｅｓｓ
ｃｏｎｔｒａｃｔｓｗｉｔｈｆｏｒｍａｌｍｏｄｅｌｓ，ａｎａｌｙｚｅｔｈｅｃｏｒｒｅｃｔｎｅｓｓｏｆｔｈｅ
ｐｒｏｐｏｓｅｄｍｏｄｅｌｓ，ａｎｄｄｉｓｃｕｓｓｈｏｗｔｏｕｔｉｌｉｚｅｔｈｅｍｏｄｅｌｓｔｏ
ｓｉｍｕｌａｔｅｔｈｅｐｒｏｃｅｓｓｅｓｏｆｅｘｅｃｕｔｉｎｇｂｕｓｉｎｅｓｓｃｏｎｔｒａｃｔｓ．
Ｄｉｆｆｅｒｅｎｔｆｒｏｍｔｈｅｓｅｗｏｒｋｓ，ｔｈｅｅｍｐｈａｓｉｓｏｆｔｈｉｓｐａｐｅｒ
ｉｓａｂｏｕｔｈｏｗｔｏａｎａｌｙｚｅｔｈｅｌｏｏｐｈｏｌｅｓｏｆｃｏｎｔｒａｃｔｓ．Ｆｏｒ
ｔｈｉｓｐｕｒｐｏｓｅ，ｗｅｐｒｏｐｏｓｅａｍｅｔｈｏｄｔｏｃｏｍｐｕｔｅｔｈｅＮａｓｈ
ｅｑｕｉｌｉｂｒｉｕｍｓｏｆｆｏｒｍａｌｉｚｅｄｃｏｎｔｒａｃｔｓａｎｄａｓｅｒｉｅｓｏｆｔｅｃｈｎｉｑｕｅｓ
ｔｏｓｐｅｅｄｕｐｔｈｉｓｐｒｏｃｅｓｓ．Ｔｏｔｈｅｂｅｓｔｏｆｏｕｒｋｎｏｗｌｅｄｇｅ，ｔｈｉｓ
ｗｏｒｋｉｓｔｈｅｆｉｒｓｔｏｎｅｔｈａｔｉｌｌｕｓｔｒａｔｅｓａｐｒａｃｔｉｃａｌｐｒｏｃｅｓｓｔｏ
ｄｅｔｅｃｔｌｏｏｐｈｏｌｅｓｏｆｂｕｓｉｎｅｓｓｃｏｎｔｒａｃｔｓｂａｓｅｄｏｎＧａｍｅｔｈｅｏｒｙ．
Ｔｈｉｓｉｓｔｈｅｎｅｗｅｓｔｒｅｓｕｌｔｏｆｏｕｒｒｅｓｅａｒｃｈ．Ｐｒｅｖｉｏｕｓｗｏｒｋｓｏｎ
ｔｈｉｓｔｏｐｉｃｈａｖｅｂｅｅｎｐｕｂｌｉｓｈｅｄｉｎＩＣＳＥ，ＴＰＤＳ，Ｊｏｕｒｎａｌｏｆ
Ｓｏｆｔｗａｒｅ（ｉｎＣｈｉｎｅｓｅ）ｅｔｃ．
ＴｈｉｓｗｏｒｋｉｓｓｕｐｐｏｒｔｅｄｂｙｔｈｅＮａｔｉｏｎａｌＮａｔｕｒａｌＳｃｉｅｎｃｅ
ＦｏｕｎｄａｔｉｏｎｏｆＣｈｉｎａ（Ｎｏ．Ｕ１９１１２０３），ａｎｄｔｈｅｊｏｉｎｔｐｒｏｊｅｃｔｓ
ｆｒｏｍＧｕｉｚｈｏｕＣｏｌｌｅｇｅｏｆＦｉｎａｎｃｅａｎｄＥｃｏｎｏｍｉｃｓａｎｄＣｈｉｎｅｓｅ
ＡｃａｄｅｍｙｏｆＩｎｔｅｒｎａｔｉｏｎａｌＴｒａｄｅａｎｄＥｃｏｎｏｍｉｃｓＣｏｏｐｅｒａｔｉｏｎ
（Ｎｏ．２０１７ＳＷＢＺＤ０８）．
１６１１期 陈晋川等：基于纳什均衡的智能合约缺陷检测
《
 计
 算
 机
 学
 报
 》