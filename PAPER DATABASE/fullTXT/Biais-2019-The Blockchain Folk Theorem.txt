OP-REVF180096
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1662 1662–1715
The Blockchain Folk Theorem
Bruno Biais
Toulouse School of Economics, CNRS, Université Toulouse Capitole,
TSM-R and HEC Paris
Christophe Bisière
Toulouse School of Economics, Université Toulouse Capitole, TSM-R
Matthieu Bouvard
Desautels Faculty of Management, McGill University
Catherine Casamatta
Toulouse School of Economics, Université Toulouse Capitole, TSM-R
Blockchains are distributed ledgers, operated within peer-to-peer networks. We model
the proof-of-work blockchain protocol as a stochastic game and analyze the equilibrium
strategies of rational, strategic miners. Mining the longest chain is a Markov perfect
equilibrium, without forking, in line with Nakamoto (2008). The blockchain protocol,
however, is a coordination game, with multiple equilibria. There exist equilibria with
forks, leading to orphaned blocks and persistent divergence between chains. We also
show how forks can be generated by information delays and software upgrades. Last we
identify negative externalities implying that equilibrium investment in computing capacity
is excessive. (JEL C73, G20, L86)
Received May 31, 2017; editorial decision July 6, 2018 by Editor Itay Goldstein.
Blockchains are decentralized protocols for recording transactions and asset
ownership. In contrast with centralized protocols in which one authority is in
charge of maintaining a unique common ledger, a blockchain operates within
a network, whose participants each possess and update their own version of
Many thanks for helpful comments to our editor I. Goldstein, two anonymous referees, C. Michel, V. Glode,
B. Gobillard, C. Harvey, J. Hörner, A. Kirilenko, G. Laroque, T. Mariotti, J. Prat, J. Tirole, S. Villeneuve,
participants in the TSE Blockchain working group, the Inquire Conference in Liverpool, the GSE Summer
Forum in Barcelona, the Africa Meeting of the Econometric Society in Algiers, the RFS Fintech Workshop and
Conference, the Oxford Financial Intermediation Theory Conference, the Swissquote Conference, the Digital
Economics Conference in Toulouse, the BoF/CEPR Conference on Money in the Digital Age in Helsinki, the
Swiss Finance Institute Research Days in Gerzensee, and seminars at University of Geneva, Sciences Po Paris,
IAST Toulouse, INRIA Paris, TSE, University of Tokyo, University of Amsterdam and University of Toronto.
Financial support from the FBF-IDEI Chair on Investment banking and financial markets value chain is gratefully
acknowledged. This research also benefited from the support of the Europlace Institute of Finance, and the Jean-
Jacques Laffont Digital chair. Send correspondence to Bruno Biais, HEC Paris, 1 Rue de la Libération, 78350
Jouy-en-Josas, France; telephone: +33 1 39 67 98 06. E-mail: biaisb@hec.fr.
© The Author(s) 2019. Published by Oxford University Press on behalf of The Society for Financial Studies.
All rights reserved. For permissions, please e-mail: journals.permissions@oup.com.
doi:10.1093/rfs/hhy095
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1663 1662–1715
The Blockchain Folk Theorem
the ledger, which is therefore distributed. The blockchain design was the main
innovation underlying the digital currency network Bitcoin (Nakamoto 2008),
but its potential benefits in terms of cost efficiency, speed, and security, for a
variety of assets and contracts, have attracted interest from a broad range of
institutions and businesses.1 Blockchain experiments have been conducted for
supply chains, trade finance, and financial transactions, for example by Nasdaq,
the Australian Stock Exchange, BHP Billiton, Banque de France, and Ripple.
Our focus is on public blockchains, such as Bitcoin or Ethereum, which
are fully decentralized and in which participants are anonymous. Public
blockchains stand in contrast to private blockchains, in which a central authority
can authorize participants and certify transactions. The main issue we address
is whether public blockchains can be expected to generate stable consensus: Is
such consensus a necessary byproduct of the blockchain protocol? Or could the
blockchain protocol lead to the emergence of different, competing, versions of
the ledger?
Each block, in the blockchain, offers an updated version of the ledger,
taking into account recent transactions, and chained to a previous version
of the ledger—that is, a previous block. In an ideal blockchain, there is a
single sequence of blocks, registering the dynamics of the ledger, on which
all participants agree. In contrast to this situation, there could be forks in
the blockchain. In that case there are competing branches, each registering
a potentially different version of the ledger. Such forks could make the ledger
less stable, reliable, and useful, as they could create uncertainty about the
distribution of property rights. In practice, as discussed in the next section,
there have been several forks, some of which have persisted until now. We
endeavor to understand the economic forces at the root of forks, and why the
blockchain protocol does not seem to always be successful at avoiding them.
To study the dynamics of the blockchain, we analyze the behavior of its key
participants: the miners. It is the miners who decide to which previous block a
new block is chained and thus give rise to a single chain or trigger forks. We
take a game-theoretic approach to analyze the strategies of the miners and the
resulting equilibrium blockchain dynamics.
The rules of the game played by the miners in the major public blockchains
(such as, e.g., Bitcoin or Ethereum) are set by the protocol known as “proof-
of-work,” which can be sketched as follows (and is described in more details
in the next section): At each point in time, miners try to validate a new block
of transactions. This implies solving a purely numerical problem unrelated to
the block’s content, an activity referred to as “mining.” A miner who solves
his problem obtains a proof-of-work, which he attaches to his block before
disseminating it through the network. The instantaneous probability that a miner
solves his proof-of-work problem is increasing in his computing power. In this
1 The blockchain is cost effective in that the administrative costs of running it are limited compared with those
incurred within older technologies and institutions, such as notaries, banks, or depositories.
1663
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1664 1662–1715
The Review of Financial Studies / v 32 n 5 2019
Figure 1
The blockchain
At t =0, there is a genesis block B0 and a stock of transactions included in a block B1, chained to B0. Miners work
on a computational problem until a miner solves B1, at t1. B1 is broadcast to all. Nodes check proof-of-work
and transactions validity, and express acceptance by chaining the next block to B1.
Figure 2
A fork
context, at each point in time, the identity of the miner who proposes the next
block is the outcome of a random draw. This ensures that miners take turns
to validate blocks, and therefore no single miner has control over the whole
verification process. When a new block is disseminated through the network,
it becomes part of the consensus if miners chain their next block to it.
As argued by Nakamoto (2008), proof-of-work generates a stable consensus,
or in other words, a single chain, if miners always take the last solved block as
the parent for their next block. This ideal blockchain is illustrated in Figure 1.
Miners, however, may choose to discard certain blocks. Suppose, for
example, that the last block solved is Bn, but miner m chains his next block to
the parent of Bn, that is, Bn−1. This starts a fork, as illustrated in Figure 2.
If some miners follow m, while others continue to attach their blocks to the
original chain, there are competing versions of the ledger. This reduces the
credibility and reliability of the blockchain, especially if the fork is persistent.
Even if, eventually, all miners agree to attach their blocks to the same chain,
the occurrence of the fork is not innocuous. The blocks in the chain eventually
abandoned are orphaned. They have been mined in vain, and the corresponding
computing power and energy have been wasted. Moreover, the transactions
recorded in the orphaned blocks could be called in question.
1664
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1665 1662–1715
The Blockchain Folk Theorem
A fork can also occur when some miners adopt a new version of the
mining software that is incompatible with the current version. If miners fail
to coordinate on the same software, this triggers a fork.
Does the blockchain protocol rule out the occurrence of forks? In the
frictionless case in which information is instantaneously disseminated in the
network, and there is no attempt to double-spend (such attempts are described in
the next section), it is commonly assumed that a single blockchain will prevail.
To examine the validity of that “folk theorem,” we design a model that captures
the key features of the proof-of-work blockchain protocol: There are M risk-
neutral, rational, and strategic miners. Each time a miner solves a block, he
obtains a reward in the cryptocurrency associated with the branch to which his
block belongs. Miners choose to which previous block to chain their current
block. They do so, observing all previously solved blocks, to maximize the
expectation of their cumulated rewards at an exogenous liquidation time. We
solve for Markov perfect equilibria of this stochastic game.
Our analysis of this game uncovers two important economic forces at play
in the blockchain.
• First, miners’ actions are strategic complements: Recall their rewards are
paid in the cryptocurrency associated with the chain on which they are
solving blocks. We assume the value of that cryptocurrency depends on
the credibility of the corresponding chain, which is higher if more miners
are active on it. Hence, miners benefit from coordinating on a single
chain, which they can achieve by playing the longest chain rule (hereafter
LCR), as suggested by Nakamoto (2008). This sustains a Pareto-optimal
equilibrium (Proposition 1). The same coordination motives, however,
sustain equilibria with forks. If at some time (e.g., when a sunspot is
observed) a miner anticipates all others to fork and mine a new branch,
his best response is to follow them. Indeed, he rationally anticipates that
any block solved out of the equilibrium path will not be accepted by other
miners and the corresponding reward will be worthless (Proposition 2).
• Second, we identify a countervailing force that we refer to as “vested
interest”: An important feature of the blockchain is that miners cannot
immediately spend or convert the cryptocurrency earned for solving
blocks. Consequently, a miner who has accumulated rewards by solving
several blocks on a given chain has a vested interest in this chain
remaining active. In particular, the value of these rewards would drop if he
moved to a different chain. Vested interests may counteract coordination
motives for a group of miners, inducing them to keep mining a minority
chain, and sustaining persistent forks in equilibrium (Proposition 3).
Unlike temporary forks that only rely on coordination motives and would
arise with atomistic miners, equilibria with persistent forks depend on
miners taking into account the impact of their actions on the blockchain.
It is likely, in practice, that large pools of miners, such as AntPool,
1665
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1666 1662–1715
The Review of Financial Studies / v 32 n 5 2019
BTC.com, or Slush Pool, who each represent more than 10% of the
computing power, indeed behave strategically.
Next, we enrich the model and make it more realistic by incorporating
further real world characteristics of blockchains, such as information delays,
and instances in which miners have to choose between incompatible upgrades
of the mining software. We show that like the sunspots in our basic model, these
characteristics can trigger forks on the equilibrium path. And we show that the
same fundamental interplay of coordination motives and vested interests as in
the basic case underlies equilibria with forks in these more realistic extensions
of the model.
Finally, we endogenize the computing capacity that each miner installs.
Because the difficulty of the mining process is adjusted upwards when the
total computing capacity in the network increases, a miner’s investment in
computing power exerts a negative externality on all other miners. This gives
rise to an arms race in which each miner ends up overinvesting (not unlike in
Glode, Green, and Lowery 2012 and Biais, Foucault and Moinas 2016). This
analysis points to another source of inefficiency in the blockchain design.
Early academic contributions on distributed consensus are in computer
science. Since seminal work by Pease, Shostak, and Lamport (1980) and
Lamport, Shostak, and Pease (1982), finding protocols that allow network
participants to reach an agreement has been a major issue in computer science.
In a Byzantine agreement (BA) setting, participants seek to agree on a common
output aggregating private inputs, in the presence of “malicious” participants
who try to attack, that is, disrupt the agreement. Nakamoto (2008) proposes the
proof-of-work blockchain protocol to achieve consensus with high probability,
in spite of potential attacks by malicious miners seeking to create a branch
faster than the “honest” ones. Miller and LaViola (2014), Pass, Seeman, and
Shelat (2017), and Garay, Kiayias, and Leonardos (2015) consider a larger set
of attacks.2 Their results suggest that the protocol is robust as long as honest
miners represent the majority of computing power.3
While these papers consider ad hoc strategies from exogenously honest or
malicious participants, we study optimal strategies from rational and profit-
maximizing players in a game. The computer science papers to which our
analysis is the closest, by Kroll, Davey, and Felten (2013) and Carlsten et al.
(2016), analyze interactions between miners as a game. Kroll, Davey, and Felten
(2013) offer interesting economic intuition, but do not develop a formal game-
theoretic analysis. Carlsten et al. (2016) focus on specific strategies (regarding
the choice of which block to chain to, and which transactions to include in a
block) and show that they constitute an equilibrium. Relative to the computer
2 Eyal and Sirer (2014) analyze a specific strategy called selfish mining, by which some miners maintain a “secret”
branch of blocks and then release it to the network.
3 See Bonneau et al. (2015) for a survey of the literature analyzing Bitcoin.
1666
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1667 1662–1715
The Blockchain Folk Theorem
science literature, our contribution is twofold: To the best of our knowledge,
our paper offers the first formal game-theoretic analysis of equilibria in the
proof-of-work blockchain protocol. It is also the first to point to the importance
of coordination effects in that protocol and show that they lead to multiple
equilibria involving forks.
Our paper also relates to an emerging literature in economics and finance on
blockchains. Harvey (2016) discusses the pros and cons of blockchains, while
Raskin and Yermack (2016) and Yermack (2017) discuss their implications for
central banking and corporate governance, respectively. Cong and He (2019)
model the effect of blockchains on product market competition: blockchains
improve contractibility and favor entry, but increase access to transaction data,
which helps sustain collusive equilibria.4 While these papers focus on the
consequences of blockchains deployment, we provide a formal analysis of the
blockchain consensus-building mechanism itself under proof-of-work. Chiu
and Koeppl (2019) also analyze the proof-of-work protocol, and focus on
investors’ incentives to double-spend, while we focus on miners’ incentives to
maintain consensus. The analysis of proof-of-stake protocols in Saleh (2017)
is complementary to our analysis of proof-of-work. Several papers (e.g., Evans
2014) note that a problem with the Bitcoin mining incentive scheme is that
miners are paid with bitcoins, which have a volatile value. In our analysis, the
only source of variation in the value of rewards to a given block is the extent to
which the chain including that block is actively mined. We analyze how these
variations affect incentives.
1. A Primer on Blockchains
In this section we first describe the blockchain protocol and then discuss forks
that occurred in blockchains.
1.1 The blockchain protocol
1.1.1 Centralized versus decentralized ledgers. A ledger is a collection of
records, regarding ownership, transactions, identity, and so on. For ledgers to
facilitate interactions among economic agents, it is essential that the agents
reach a consensus about the state of the ledger and its authenticity. Historically,
a central authority, e.g., the state and its delegates, ensured this consensus by
managing and certifying the ledger. Such centralized ledgers, however, cannot
operate satisfactorily if the central authority behaves opportunistically, e.g., by
excluding some participants or transactions, or by distorting the ledger.
The distributed ledger technology (DLT) can overcome that obstacle. Within
a distributed ledger, there is a network of participants, and each participant
4 Relatedly, Catalini and Gans (2016) argue that blockchains improve verifiability and allow bypassing
intermediaries. Khapko and Zoican (2017), who study endogenous settlement time, and Malinova and Park
(2017), who study the impact of anonymity in financial markets, are motivated by features and capabilities of
blockchains.
1667
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1668 1662–1715
The Review of Financial Studies / v 32 n 5 2019
maintains its own ledger. When an economic transaction occurs, the trading
parties send this information to the network, so that it can be validated by
network participants, each including it in its own ledger. Ledgers should
eventually be the same for all participants, giving rise to consensus on a single,
distributed, ledger.
Blockchain is the distributed ledger protocol invented by Nakamoto (2008)
when he created Bitcoin. The elegance and novelty of his solution relies in
particular on its endeavor to incorporate the incentives of the participants.5
This justifies our game-theoretic approach that accounts for these incentives to
investigate the properties of this protocol.
1.1.2 Proof-of-work. Decentralization of the ledger implies that its validation
should not be controlled or manipulated by a single participant or a small
number of colluding participants. One way to associate all participants to the
validation of transactions would be to rely on majority voting. However, as
noted by Nakamoto (2008, page 3): “If the majority were based on one-IP-
address-one-vote, it could be subverted by anyone able to allocate many IPs.”
The solution proposed by Nakamoto (2008) to this so-called Sybil attack
is called “proof-of-work.” For convenience, participants do not validate each
transaction individually but group them in blocks. One participant is designated
to send his block to the network to update the ledger. In order to be designated,
each participant works to solve a computational problem with adjustable
difficulty (referred to as a “moderately-hard puzzle” in computer science; see
Dwork and Naor 1993) attached to his block. The term “work” in proof-of-
work therefore refers to using computers and electricity to perform this task.
The problem to solve has nothing to do with the economic transactions included
in a block. Rather, it requests using computing power to perform independent
trials (similar to draws under replacement) until one finds a solution to an
arbitrary numerical problem (a hash value lower than a given threshold). As
nodes randomly draw candidate solutions, one of them eventually gets lucky
and solves the problem before the others. Thus, proof-of-work is a way to
randomize across participants who will propose the next change to the ledger.
A drawback of proof-of-work is that it requires costly computing capacity.
An alternative protocol to save on electricity and hardware costs is proof-of-
stake (see Saleh 2017). The basic idea is that each participant’s probability
to be designated to propose a block for validation depends on the amount
of cryptocurrency he owns: the larger that amount, the more frequently a
participant will be chosen. Ideally, this system ensures that those who have
more stake in the network (and are thus more eager to maintain consensus)
are more likely to contribute to the validation process. But no major fully
5 Section 6 of Nakamoto (2008) seminal paper is entitled “Incentive.”
1668
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1669 1662–1715
The Blockchain Folk Theorem
decentralized blockchain network uses proof-of-stake yet.6 For that reason we
focus on proof-of-work in our analysis.
A property of moderately-hard puzzles is that the solution is not easy to find,
but easy to verify. Hence, when they receive a block for validation, participants
easily check whether the sender actually found the solution. If participants
accept this block, they take it as the parent of the new block they start mining.
Thus, as written by Nakamoto (2008) page 8, participants “vote with their CPU
power, expressing their acceptance of valid blocks by working on extending
them and rejecting invalid blocks by refusing to work on them.”
This process gives rise to a chain of consecutively solved blocks, that is, the
blockchain, as illustrated in Figure 1.
1.1.3 Miners. The nodes conducting the earlier-mentioned tasks are called
miners, as they get rewarded for solving proof-of-work problems with newly-
created units of the cryptocurrency (12.5 BTC per block on Bitcoin in 2018,
and 3 ETH on Ethereum since October 2017).7 They also receive transaction
fees that the originators of economic transactions can choose to offer for the
validation of these transactions. These rewards are included in the block that
generates them. Bitcoin imposes a 100-block delay before rewards earned
through mining can be spent.
In practice, miners gather in large pools. Figure 3 presents the distribution
of computing power of the pools operating on Bitcoin in May 2018.
The figure illustrates that 10 mining pools represented about 86% of
the total hash capacity. Pools allow miners to mutualize block discovery
risk. They also coordinate individual mining strategies. For example, on
https://www.bitcoinmining.com/bitcoin-mining-pools/, one can read: “If you
participate in a Bitcoin mining pool then you will want to ensure that they are
engaging in behavior that is in agreement with your philosophy towards Bitcoin.
... Therefore, it is your duty to make sure that any Bitcoin mining power you
direct to a mining pool does not attempt to enforce network consensus rules
you disagree with.”
1.1.4 Difficulty. As explained in Nakamoto (2008), the time it takes miner
m to solve a block problem is exponential with parameter θm. Thus, θm is the
instantaneous probability that m solves the block he is mining. θm is determined
by the miner’s individual computing power, or hash power, hm, and by the
6 Protocols inspired by proof-of-stake are currently used by Nxt or BlackCoin. The Ethereum community has
been trying for a long time to develop a proof-of-stake algorithm. Their proof-of-work protocol even includes
an exponential increase in difficulty (difficulty bomb) to induce miners to switch to the upcoming proof-of-stake
protocol. Its development proved difficult, however, and the difficulty bomb has been delayed.
7 These are the main sources of cryptocurrency creation. Some blockchain protocols can also include additional
rewards.
1669
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
https://www.bitcoinmining.com/bitcoin-mining-pools/
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1670 1662–1715
The Review of Financial Studies / v 32 n 5 2019
Figure 3
Estimated hashrate distribution of Bitcoin mining pools on May 8, 2018
Source: blockchain.info.
difficulty of the mining task set by the network protocol, D:8
θm =
hm
D
. (1)
The difficulty is set by the blockchain protocol so that the expected time between
two block solutions is targeted to a constant, X (on Bitcoin X=10 minutes,
while on Ethereum it is currently 15 seconds). Thus, using the properties of
exponential distributions, for given hash powers, the difficulty D is set so that
X=
1∑
i∈Mθi
=
1∑
i∈M
hi
D
=
D∑
i∈Mhi
. (2)
Equation (2) implies that the difficulty D is equal to the average duration
between block solutions (X) multiplied by the total computing power:
D =X
(∑
i∈M
hi
)
. (3)
If the total computing power increases (e.g., due to the entry of new miners),
the protocol ensures that the difficulty is scaled up so that average duration
between two blocks remains equal to the desired level. Thus, on Bitcoin, every
8 Indeed, when miners try to solve the hash problem, at each trial they have a probability 1
D
to solve the problem.
The hash power hm is the number of trials per unit of time.
1670
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1671 1662–1715
The Blockchain Folk Theorem
2,016 blocks, that is, approximately every two weeks, the difficulty is rescaled
to ensure that the average time between blocks remains at 10 minutes.
Together, Equations (1) and (3) imply
θm =
1
X
hm∑
i∈Mhi
. (4)
Equation (4) implies that the instantaneous probability to find a block for miner
m is increasing in his or her own computing capacity, but decreasing in the
capacity of the others.
1.2 Forks
Consensus on the decentralized ledger requires that there is only one chain of
blocks, observed by all and on which all agree. It is jeopardized if the chain
splits into a fork, with two competing branches, each with its own version of
the ledger. In the present section we review some reasons why forks can happen
in blockchains, and describe forks that actually occurred.
1.2.1 Information delays. In practice, the information that a block has been
solved is not transmitted instantaneously and simultaneously to all network
participants. For example, miners in Siberia might learn before miners in
Iceland that a block has been solved in China. Thus, it will routinely happen that
a block has just been solved but some participants are not yet aware of that. If
these participants solve their own block in the meantime, this starts a fork with
two competing blocks attached to the same parent. Nakamoto (2008) identified
that problem and suggested it would be solved if miners always chained their
blocks to the longest chain (following the LCR):
Nodes always consider the longest chain to be the correct one
and will keep working on extending it. If two nodes broadcast
different versions of the next block simultaneously, some nodes
may receive one or the other first. In that case, they work on
the first one they received, but save the other branch in case it
becomes longer. The tie will be broken when the next proof-of-
work is found and one branch becomes longer; the nodes that were
working on the other branch will then switch to the longer one.
(Nakamoto 2008, page 3)
1.2.2 Double-spending. The blockchain protocol was also designed to
prevent “double-spending.” Suppose a miner buys an object from a seller,
paying for it with bitcoins. The corresponding transaction is recorded in a
block B. When the latter is validated, as soon as the seller delivers the object,
the buyer has an incentive to start a fork: he could try to solve a block that does
not contain his transaction, and that is chained to the parent of B, in the hope
of attracting miners to his chain. If he succeeded in doing so, no block would
1671
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1672 1662–1715
The Review of Financial Studies / v 32 n 5 2019
be chained to B (i.e., B would be “orphaned” ), which would void the transfer
of his bitcoins to the seller. Nakamoto (2008) argues that double-spending is
unlikely to be successful because it would require solving blocks faster than
the rest of the network.9
1.2.3 Software upgrades. So far we have used the term “fork” to refer to chain
splits. There is another possible use of the term: In the context of open source
software, forking means copying the source code of a computer program and
modifying it to create a different version. As emphasized by Lerner and Tirole
(2002), this gives rise to coordination issues on which version is adopted by
participants. In a blockchain, a “soft fork” is the introduction of an upgraded
version of the software that remains compatible with the previous version:
blocks mined with the new version are considered as valid by miners still
running the old version (but the opposite is in general not true). In contrast, a
“hard fork” is not backward-compatible, as upgraded miners create blocks that
are rejected as invalid by non-upgraded miners. As long as some miners do not
accept blocks considered as valid by others, a software upgrade can trigger a
fork in the blockchain. We describe here some actual unintended or intended
forks triggered by software upgrades.
1.2.4 Unintended forks. An important chain split occurred on the Bitcoin
blockchain in March 2013, following what developers thought to be an
innocuous software upgrade: some time earlier, some miners upgraded to a new
version of the software, referred to as 0.8. On March 11, 2013, there turned out
to be a bug so that the miners operating with the 0.7 version rejected as invalid
one block solved by the 0.8 miners and consequently the subsequent ones (thus
the 0.8 upgrade was in fact an unintended hard fork, which miners identified
with a delay). From that point on, the 0.8 miners worked on a chain stemming
from that block, while the 0.7 worked on a competing chain, stemming from
its parent. When they discovered the split, participants all wanted to revert
to a single chain, but they had to decide which branch to keep and which to
orphan. Achieving coordination turned out to be difficult, as illustrated by the
following discussion between Bitcoin software developers and miners (reported
by Narayanan 2015):
Gavin Andresen: the 0.8 fork is longer, yes? so majority hashpower
is 0.8 … first rule of bitcoin: majority hashpower wins
Luke Dashjr: if we go with 0.8 we are hard forking
BTC Guild: I can single handedly put 0.7 back to the majority
hashpower. I just need confirmation that that’s what should be
done.
9 See also Teusch, Jain, and Saxena (2016).
1672
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1673 1662–1715
The Blockchain Folk Theorem
Pieter Wuille: that is what should be done, but we should have
consensus first.
Miners faced a dilemma. Should they follow the LCR and mine the 0.8 chain
which had attracted the majority of the computing power? Or should they revert
to the 0.7 version? Miners wanted to abide to the consensus, but they first needed
to coordinate on what the consensus should be.
Eventually, BTC Guild, which was one of the largest pools at the time, chose
to downgrade to the 0.7 version. This resulted in the 0.7 chain becoming the
longest, and all miners coordinating back to it. It took 8 hours before participants
could solve the problem. Consequently, more than 24 blocks, solved on the
0.8 chain, became orphaned, and their miners (including BTC Guild) lost
the corresponding rewards. Commenting on this situation, Narayanan (2015)
wrote:
One way to look at this is that BTC Guild sacrificed revenues
for the good of the network. But these actions can also be justified
from a revenue-miximizing perspective. If the BTC Guild operator
believed that the 0.7 branch would win anyway (perhaps the
developers would be able to convince another large pool operator),
then moving first is relatively best, since delaying would only take
BTC Guild further down the doomed branch.
This discussion underscores that miners’ coordination, or the lack thereof,
plays an important role in the emergence and resolution of forks. It also
underscores the importance of beliefs in this context: An individual miner (or
a pool such as, e.g., BTC Guild) decides to chain his blocks to the branch
that he believes the others will choose. Thus, beliefs about the actions of
others influence one’s action. This generates a form of beauty contest, in which
coordination effects are critical.
1.2.5 Intended forks. Ethereum underwent a hard fork in the summer of
2016. Following the hack of TheDAO, a large venture capital fund operating
through smart contracts on Ethereum, members of the Ethereum community
suggested to roll back the blockchain in order to cancel the transactions that
diverted the fund’s money. They hoped all participants would coordinate on that
hard fork, leading to a single active chain. Other members, however, refused
to alter the history of the ledger and rejected the hard fork. Consequently,
Ethereum split in two incompatible branches, Ethereum and Ethereum Classic.
These two branches still exist, each corresponding to a different ledger and
history of trades, and a different cryptocurrency. As of May 2018, Ethereum
Classic represented about 3.5% of the hash capacity of Ethereum, and the
price of ETC was about 3% of the ETH price. This episode illustrates the
difficulty to achieve coordination on a single chain, the uncertainty about
miners’ actions and the resulting occurrence of persistent competition between
alternative chains.
1673
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1674 1662–1715
The Review of Financial Studies / v 32 n 5 2019
Bitcoin also underwent two hard forks, in the summer and in the fall of
2017. The first fork is linked to the size of blocks that can be mined on
the blockchain. The community had long been divided on how to relax the
limitation of the network throughput.10 Several solutions were supported by
different participants, with the threat of some to fork in order to impose their
preferred solution. In the New York Agreement signed on May 2017, most
mining pool operators agreed to roll out a compromise solution (SegWit2x).
Yet, another way to increase throughput, Bitcoin Cash, was implemented, via
a hard fork, on 1 August 2017. Bitcoin then split in two branches, with two
different cryptocurrencies, Bitcoin and Bitcoin Cash. On the former branch,
following the New York Agreement, a hard fork was planned for November
2017 to double the size of blocks. There was a lot of uncertainty, and discussion
among miners, about who would adopt SegWit2x, and whether there would be
a new chain split. Many Bitcoin community members announced that a chain
split was very likely. At odds with those forecasts, the SegWit2x hard fork was
abandoned. One could have thought this meant participants would coordinate on
Bitcoin. Quite to the contrary, a large fraction of miners reacted by shifting from
Bitcoin to Bitcoin Cash. While in early November 12-hour average hashrates
were about 10 Exahashes (1018 hashes) per second on Bitcoin versus less than
2 on Bitcoin Cash, on November 12, 2017, hashrates were similar on the two
branches.
The second fork, Bitcoin Gold, which occurred in the fall of 2017, relies
on a different proof-of-work algorithm than Bitcoin. It allows miners to mine
efficiently using generic graphics processing units (GPU) by preventing the
use of specific ASIC (integrated circuits that cannot be used for any other
purpose than mining and are produced by a small number of firms). While it
was initially unclear whether this fork would attract computing capacity, it is
now implemented with a market capitalization around $1.2 billion as of May
2018.
A dozen other hard forks occurred on Bitcoin in December 2017, each
proposing a modified version of the mining software or reward policy (as, for
instance, Bitcoin God, Super Bitcoin, Bitcoin X, Oil Bitcoin, Bitcoin World,
Lightning Bitcoin...). Although it is uncertain how many of these forks will
remain, these episodes underscore that it is difficult for miners to coordinate
on a single chain, that chain splits are not uncommon, and that the outcome is
hard to predict, even for major participants. In the next sections, we analyze
the economic mechanisms that are at the roots of these forks.
2. Basic Model
In line with the previous description of the blockchain technology, we consider
the following model.
10 The Bitcoin protocol sets the maximum size of a block of transactions to one megabyte. This limit slows down
the speed of transactions validation and hinders the development of the network itself.
1674
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1675 1662–1715
The Blockchain Folk Theorem
2.0.1 Miners and pools. There are M >2 risk-neutral miners, indexed by
m∈M= {1,...M}. Equivalently, each m can be thought of as a mining pool,
since, as explained in the previous section, a pool coordinates the strategies of
a group of miners.
2.0.2 Mining technology. There is a continuous flow of transactions sent
for confirmation by end users.11 We assume all miners perfectly and
instantaneously observe this flow, which they include in the blocks they mine.
As mentioned earlier, the time it takes miner m to solve a block problem is an
exponentially distributed random variable with parameter θm. We first consider a
stationary environment, in which the number of miners, their computer capacity,
and the difficulty of the task are constant (so that the θm are constant also). Then,
in Section 5, we endogenize difficulty and computing capacities.
A key property of the exponential distribution is that it is memoryless: at
each point in time, the distribution of the waiting time until the miner finds
a solution is independent from how long the miner has been working on the
problem.12 This waiting time is also independent of which block m is mining,
and of which blocks the other miners are mining. We denote by Nm the Poisson
process jumping each time miner m solves a block. Thus, the number of blocks
solved by miner m between time 0 and time t is
Nm(t)=
∫ t
s=0
dNm(s). (5)
We assume that miners do not update the set of transactions defining the block
they mine until a hash problem is solved (transactions that flow in meanwhile
are stored in a buffer.) Relaxing that assumption would not alter the economic
mechanism we analyze here.
We also assume that at time zm, exponentially distributed with parameter λm,
miner m is hit by a liquidity shock. At time zm the miner must leave the game
and sell the cryptocurrencies he earned or purchased previously to a new miner
who also inherits his beliefs and preferences. Thus, exits are compensated by
entries and the environment is stationary. The times at which blocks are solved
and liquidity shocks occur are all independent.
2.0.3 Blockchain. At time 0, there is an initial state of the ledger, encoded in
B0, and an initial set of transactions to be registered. Starting from B0, miners
start working on the first block, B1, which contains this initial set of transactions.
11 We take the flow of transactions to be exogenous, while in practice it can actually be endogenous. For simplicity,
we don’t model the transactions and model the blockchain process directly at the level of the blocks. See Carlsten
et al. (2016) for an analysis of the choice of which transactions to include in a block.
12 Another key property of the exponential distribution is that the minimum of two exponentials, with parameters
θ and θ ′, is also exponential, with parameter θ +θ ′. Thus, when interpreting the M players in our game as M
pools, we interpret the intensity of pool m, θm, as the sum of the intensities of all the miners active in that pool.
1675
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1676 1662–1715
The Review of Financial Studies / v 32 n 5 2019
Once B1 is solved, miners must choose to which parent block to chain the next
block (B2) they mine. If miners choose B1 as a parent block, they continue the
first chain. Alternatively, miners can choose to disregard B1 and attach B2 to
B0. In that case, miners start a fork and the chain splits into two competing
chains, one including B0 and B1, the other B0 and B2.
As the game unfolds, a tree of blocks develops. At each vertex Bk , the tree
includes a label, identifying the miner who solved the corresponding block,
m(Bk). The indices of the blocks give the order in which they have been solved.
That is, if k<n, then block Bk was solved before block Bn.
We first assume that at any time t , all miners observe the tree of solved blocks
Ct = {Bt,Et ,I t }, where Bt =(B0,...Bn) is the set of all blocks that have been
solved by time t , Et = {(B0,B1),...(Bk,Bk′ ),...}, with 0≤k<k′ ≤n, is the set of
edges chaining these blocks, and I t =(m(B1),...m(Bn)) is the set of identities
of miners who solved blocks. We then relax the assumption that Ct is observed
instantaneously to study information delays. Within a tree, a chain is a sequence
of connected blocks in which each block is connected to at most one subsequent
block. Thus, each fork starts a new chain. More formally, we define a fork as
follows:
Definition 1. Fork: There is a fork at time t if and only if there exists
(Bi,Bk,Bk′ ) included in Bt such that Bk �=Bk′ and both (Bi,Bk) and (Bi,Bk′ )
belong to Et .
It is also useful to define the original chain for a given tree Ct , as follows:
Definition 2. Original Chain: Suppose Et contains (Bi,Bk) and (Bi,Bk′ ). A
chain that includes (Bi,Bk) preexists a chain that includes (Bi,Bk′ ) if and
only if k<k′. We call the original chain the chain that preexists all other
chains in Ct .
Note that the original chain is well defined since the “preexist” relation
provides a complete ranking of all chains (as all chains have at least one common
block, B0).
2.0.4 Stopping times. Miners make decisions at different points in time,
corresponding to a sequence of stopping times. Whenever a block is solved
or a miner is hit by a liquidity shock, all miners get to make a decision.
Thus, the sequence of stopping times at which miners make decisions is
T ={0,...τj ,τj+1,...} where the next stopping time after τj ,τj+1, is equal to
τj+1 =min[τ l(τj ),τ b(τj )],τ l(τj ) being the first time a liquidity shock occurs
after τj and τ b(τj ) the first time a block is solved after τj .
2.0.5 Action space. At any time τ ∈T , miners observe the set Bτ of all the
blocks that have been solved previously. A miner’s action is the choice of which
1676
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1677 1662–1715
The Blockchain Folk Theorem
block in Bτ to attach his current block to. All miners m∈M= {1,...M} face
the same action space.
2.0.6 Payoffs. When miner m solves a block in a given chain, he receives a
reward, included in the block he mined, and expressed in the cryptocurrency
corresponding to that chain.13 As mentioned in the previous section, Bitcoin
imposes a 100-block delay before rewards for mining can be spent. To capture
such delays in a simple manner, we assume miner m keeps the units of
cryptocurrency he earned until zm, and then consumes at zm the rewards he
earned throughout the game.
Therefore, a miner’s lifetime payoff depends on the number of blocks he
solved until zm, and on the value of the rewards earned from these blocks when
zm occurs. For example, if a miner entered at date 0, and all his blocks solved
have the same arbitrary value G>0 at zm, his payoff is written
Gm =
[∫ s=zm
s=0
dNm(s)
]
G. (6)
We now present what determines the value of blocks’ rewards. When the
cryptocurrency earned as a reward for mining a block is sold, the price it fetches
depends on the credibility of the chain that contains the block. Consider two
polar cases: In the first case, a block solved by a miner becomes orphaned—that
is, no further blocks are attached to it, so that no miner expresses acceptance of
that block and the transfer of cryptocurrency it encodes. In the second case there
is a single chain to which all blocks belong, reflecting consensus on the blocks
in the chain. The market value of the block’s reward in the first case (when
the block ends up orphaned) is likely to be zero and is bound to be smaller
than in the second case. Now turn to an intermediate case, in which the block
is included in a chain competing with another one. As long as a significant
fraction of the miners are working on each of the chains, the value of rewards
included in the blocks of the two chains can remain positive.
More formally, the payoff for miner m from solving B is an increasing
function, G(.), defined on {0,...,M}, of the number of miners active at time zm
in the chain including B.14 For example, suppose there are two active chains
at time zm. If there are K miners active in the chain including B, and M−K
in the other, the payoffs from solving blocks are the following: The miner who
solved block B, which we denote by m(B), earns G(K) for block B. A miner
who solved a block in the other chain earns G(M−K) for that block. If a miner
solved a block that belongs to both chains, because it was mined before the
13 For simplicity, we neglect transaction fees offered by final traders, since we do not explicitly model transactions.
Carlsten et al. (2016) take the opposite approach by focusing on transaction fees.
14 A bubble component could be added to the payoff function. In a rational bubble model (see for instance Tirole
1982 or Tirole 1985), the bubble component would be a martingale and would not affect the strategies of the
miners since they are risk neutral.
1677
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1678 1662–1715
The Review of Financial Studies / v 32 n 5 2019
inception of the fork, he earns G(M−K)+G(K).15 More generally, if a block
belongs to I chains, each attracting Ki miners with
∑I
i=1Ki ≤M , the value of
this block is
∑I
i=1G(Ki). We set G(0)=G(1)=0, that is, when there is only one
or no miner on a chain, the associated cryptocurrency has no value. Indeed, any
level of consensus requires that at least two miners agree. We also assume G(M)
is strictly positive, hence G(.) is strictly increasing in part of its domain. Finally,
we assume that G is superadditive: when a fork occurs on a chain and creates
two competing chains attracting respectively K1 and K2 miners, the total value
of a unit of cryptocurrency that belongs to the two competing chains (because
it was mined before the inception of the fork) is weakly lower than if the fork
had not occurred. Formally, we have G(K1)+G(K2)≤G(K1 +K2),∀(K1,K2)
such that K1 +K2 ≤M . This implies that the value of a block cannot be greater
than G(M), whatever the number of chains that block belongs to. Note that in
our setting the payoff function G(.) depends on the total number of miners M .
This captures the value of consensus: miners’ rewards depend on the relative
number of miners active on each chain, rather than on the absolute one.
Our assumption that the value of the virtual currency is reduced by forks
is illustrated by Figure 4, which plots the decline in bitcoin value during the
March 2013 fork. The first vertical line indicates the time (around 22:00 UTC
on March 11) at which miners started working on two different chains. Chats
between miners realizing there was a fork started around 23:30.16 At 1:30 on
March 12, a message posted on Bitcointalk asked miners to stop mining one
of the two branches of the chain (the 0.8 branch). The second vertical line
(approximately at 6:20) indicates the time at which the 0.7 branch caught up
the 0.8 branch. By 7:30, miners had stopped mining the 0.8 branch, which
became orphaned, so that the fork was no longer active. The figure illustrates
that when the market realized that miners worked on different branches, this
triggered a 25% drop in the value of the virtual currency (from around 48 at
1:00 to around 36 at 3:00).
2.0.7 States. At time τ ∈T , a state ωτ includes two elements:
• First, ωτ includes the tree of solved blocks Cτ = {Bτ ,Eτ ,I τ }. The entire
set of previously solved blocks, Bτ , is relevant for the miners, since they
can chain a new block to any of these previously solved blocks. For
each miner, the set of blocks he solved, measurable with respect to I τ ,
determines his payoff, and therefore influences his actions.
• Second, as in Duggan (2012) or Cole and Kehoe (2000), to enable
players to coordinate their actions using a public randomization device,
15 We also assume that, if zm occurs just after a miner attempts to fork, the not-yet-realized fork does not reduce
the credibility of the current chain. That is, m(B) earns G(M) for any block B on the current chain, as long as
no block creating a fork has been mined. An alternative hypothesis is that the attempt to fork reduces mining
rewards. Our proofs are robust to that alternative hypothesis.
16 Source: http://web.archive.org/web/20130421062533/http://bitcoinstats.com/irc/bitcoin-dev/logs/2013/03/11.
1678
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1679 1662–1715
The Blockchain Folk Theorem
Figure 4
BTC/USD trade prices on Bitstamp exchange, around the March 2013 Bitcoin fork
The graph plots individual transaction prices obtained from a major bitcoin exchange platform, Bitstamp, during
the March 2013 fork. The first dotted vertical line represents the time at which the fork started, and the second
dotted vertical line represents the time at which the original chain caught up the fork. Data source: Kaiko.
we assume that at each time τ ∈T , the realization of a sunspot random
variable rτ is observed by all, and we include it in the state. rτ is uniformly
distributed on [0,1] and i.i.d. over time.
Thus, we define ωτ =( Cτ , rτ ) and denote by Ω the set of states of the world.
2.0.8 Strategies. Miner m chooses his strategy to maximize his expected
payoff at time zm. At each time τ ∈T , miners observe the whole history of the
game, that is, the state ωτ , as well as, for instance, the exact timing of blocks
resolution and the previous mining choices. In line with Markov perfection, we
consider only strategies that are measurable with respect toωτ .17 A pure strategy
for miner m is a function σ τ
m mapping each possible state of the blockchain
ωτ ∈Ω into an element of the action space Bτ . We denote the strategy of miner
m throughout the entire history of the game by σm and the profile of strategies
for the M miners by σ = {σm}m∈M. σ , combined with the random variables
{z}m∈M and {Nm}m∈M, yields the transition probabilities from one state of the
blockchain to the next.
2.0.9 Equilibrium. The previously described elements define our stochastic
game. Our equilibrium concept is Markov perfect equilibrium, that is, subgame
17 Indeed, the timing of previous block resolutions, as well as previous mining choices, are payoff irrelevant.
1679
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1680 1662–1715
The Review of Financial Studies / v 32 n 5 2019
perfect equilibrium with strategies restricted to depend only on the current
state ωτ .
3. Equilibrium Analysis of the Basic Model
To analyze equilibrium strategies, it is useful to first note that the maximum
lifetime payoff of miner m, entering the market at time 0, is
Gmax
m =
[∫ s=zm
s=0
dNm(s)
]
G(M). (7)
If the miner enters the market later, to replace an earlier miner hit by a liquidity
shock, his maximum payoff is the same as in Equation (7), minus the price he
pays for the cryptocurrency bought from the previous miner. This sunk cost
does not affect his strategy, and we neglect it hereafter.
Gmax
m is a maximum because (i) the total number of blocks solved by m before
zm is
∫ zm
s=0dNm(t), whatever his mining strategy, and (ii) m cannot earn more
than G(M) each time he solves a block. At time t , the expectation of Gmax
m ,
conditional on zm ≥ t , is
Et
[∫ t
s=0
dNm(s)+
∫ zm
s=t
dNm(s)|zm ≥ t
]
G(M)
=
{
Nm(t)+E
[∫ zm
s=t
dNm(s)|zm ≥ t
]}
G(M)
=
{
Nm(t)+
θm
λm
}
G(M). (8)
Does there exist a natural strategy enabling miners to achieve this maximum
expected payoff? The definition of Gmax
m implies that to obtain the maximum
expected payoff, all miners should be on the same chain when any of them is hit
by the liquidity shock. This is the case if all miners stick to the original chain at
any time τ ∈T . If they do so, the longest chain rule (LCR) trivially holds. Our
first proposition states that there exists an equilibrium in which miners follow
this strategy.
Proposition 1. There exists a Markov perfect equilibrium such that on the
equilibrium path there is a single chain and all miners follow the LCR, thus
obtaining their maximum expected payoff, E[Gmax
m ].
The intuition for Proposition 1 is the following. When all miners up to τ attach
their blocks to the original chain, thus following the LCR, there is a single chain
at τ . If the others abide to this strategy, then m can obtain his maximum possible
expected payoff, E[Gmax
m |ωτ ], by also abiding to it. Hence there is no profitable
one-shot deviation from the strategy that consists in extending the original (and
thereby longest) chain. Precisely, each miner rationally anticipates that if he
1680
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1681 1662–1715
The Blockchain Folk Theorem
deviates and solves a block, the other miners will not follow him, and the block
solved out of the equilibrium path will have no value.
In the context of the strategic interaction characterized in Proposition 1,
miners are not really competing to solve their block before the others. That
another miner solves his block before m does not, in itself, reduce m’s gains.
The only thing that matters for miners to obtain the maximum payoff they get
in Proposition 1 is that they coordinate well and all work on the same chain.
This arises only when difficulty is constant, however. In Section 5, we study the
determination of total computing capacity and discuss its allocations to different
branches of the blockchain. In that context, we point out that when one miner
devotes larger computing power to one branch, he raises the difficulty for the
others. This brings in a competition effect, running in the opposite direction to
the coordination effect discussed earlier.
It is noteworthy that the result in Proposition 1 does not depend on the number
of miners M . The economic mechanism involved in Proposition 1 does not
hinge on strategic behavior. It is purely driven by coordination effects, which
would also be at play in a competitive environment.
Proposition 1 emphasises that attaching blocks to the original chain is a
simple way for miners to coordinate their actions and results in a single chain
with no fork. There might, however, be other ways for miners to coordinate in
our stochastic game. In particular, they could rely on the sunspot variable rτ .
We now exhibit an equilibrium in which conditioning actions on rτ leads to
equilibria with forks.
Intuitively, suppose miners follow the original chain until the realization of
the sunspot variable is such that miners anticipate a fork. As shown in the
following, because of coordination effects, this anticipation is self-fulfilling.
More precisely, let τf be the first time at which the sunspot variable is above
1−ε (where ε>0 can be arbitrarily small), and let n(τ ) denote the index of
the last block solved by time τ . Relying on this notation, we can state our next
proposition:
Proposition 2. Consider an arbitrary integer f >0 and ε>0. There exists a
Markov perfect equilibrium such that the following occurs on the equilibrium
path: As long as rτ ≤1−ε, or f ≥n(τ ), there is a single chain and all miners
chain their current block to the previous block, Bn(τ ). At the first time τ such
that rτ >1−ε and f <n(τ ), each miner chains his current block to Bn(τ )−f .
Afterwards, miners chain their current block to the last solved block on the
chain including the edge (Bn(τ )−f ,Bn(τ )+1).
In the statement of the proposition, we focus on what happens on the
equilibrium path. In the proof in the Appendix, we characterize the equilibrium
strategy profile for any state. The intuition of Proposition 2 is the following:
If a miner expects all to fork to Bn(τ )−f , but chooses to deviate and not fork
to Bn(τ )−f , then he expects any block he solves will be orphaned and earn no
1681
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1682 1662–1715
The Review of Financial Studies / v 32 n 5 2019
reward. Rationally anticipating this, he chooses to do like the others and fork
to Bn(τ )−f .
Miners’ behavior in Proposition 2 is reminiscent of actual participants’
behavior during the 2013 Bitcoin fork reported in Section 1.2. Just like
BTC Guild lost the rewards from blocks mined on the 0.8 branch, miners
in Proposition 2 lose rewards from blocks Bn(τ )−f +1 to Bn(τ ), since the fork
stemming from Bn(τ )−f becomes the only active chain. They fork nevertheless
because they anticipate that the others do.
Proposition 2 is stated for any integer f . In practice, Bitcoin Core (the
reference implementation of the bitcoin system) includes several hard-coded
checkpoints, that is, identifiers of blocks coded into the software so that any
fork starting from an earlier block is considered as invalid. In the presence
of checkpoints, f cannot be larger than the distance from the last checkpoint
(provided that miners do not decide to remove checkpoints from their software
code.)
If we measure welfare with respect to miners’ payoffs,18 then the equilibrium
in Proposition 2 is Pareto-dominated by the one in Proposition 1. In Proposition
1, every block earns the miner who solved it a reward G(M) when it is sold to
a subsequent miner. Any subsequent miner who buys the reward resells it for
the same price G(M), which is therefore payoff-neutral for him. In Proposition
2, the same applies for any block that does not belong to the orphaned chain
(Bn(τ )−f +1,Bn(τ )). However, a miner who solved (or inherited) a block on the
orphaned chain obtains a reward worth G(0)=0 after the fork, instead of G(M)
in the equilibrium of Proposition 1. Hence, the fork makes at least one miner
strictly worse off without strictly increasing the payoff of any other miner.
Observe that, like Proposition 1, Proposition 2 does not depend on the number
of miners M . Both propositions hinge on coordination effects, which also arise
in a competitive environment.
While in the previous proposition, in spite of forking, there was eventually a
single chain, we now show that forking can lead to the persistent coexistence of
different branches, as in the Ethereum 2016 and Bitcoin 2017 forks discussed
in Section 1.2.
As in Proposition 2, we consider the possibility that, at some time τf , the
realization of the sunspot suggests forking to a new branch, chained to Bn(τf )−f .
This can give rise to two coexisting chains at time τ >τf , the original chain,
including the blocks linked by the sequence of edges
(B0,B1),...(Bn(τf )−f ,Bn(τf )−f +1),...
18 G(.) can be thought of as the gain from seigniorage, reflecting the value of the cryptocurrency as a medium of
exchange. For simplicity, however, G(.) is exogenous in our model. So we can only define welfare in terms of
the miners’ gains.
1682
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1683 1662–1715
The Blockchain Folk Theorem
and a new chain, including the blocks linked by
(B0,B1),...(Bn(τf )−f ,Bk+1),...
with k≥n(τf ).
The number of blocks solved by m after Bn(τf )−f on any of these two chains
defines the vested interest of m on that chain. We let vo
m(τ,τ f ) and vn
m(τ,τ f )
denote the vested interests of miner m at time τ ≥τf on the original and the
new chain (respectively) when the fork starts at τf . Specifically, suppose miner
m keeps mining the original chain after τf . At τ ≥τf , his vested interest on
the original chain is then equal to vo
m(τ,τ f )=Nm(τ )−Nm(τ (Bn(τf )−f )) (where
τ (Bn(τf )−f ) is the stopping time at which Bn(τf )−f is solved), while his vested
interest on the new chain is vn
m(τ,τ f )=0. Alternatively, consider miner m′
who mines the new chain from time τf on. His vested interest on the original
chain at time τ ≥τf isvo
m′ (τ,τ f )=Nm′ (τf )−Nm′ (τ (Bn(τf )−f )), while his vested
interest on the new chain is vn
m′ (τ,τ f )=Nm′ (τ )−Nm′ (τf ). For miners switching
between the original chain and the new one, vested interests are a bit more
intricate, but they follow the same logic.
Our next result illustrates the consequences of miners’ vested interests. To
state that result, rank the miners by their vested interest in the original chain at
the start of the fork τf as follows:
Pr(zm =τ ′)
Pr(Nm(τ ′)−Nm(τf )=1)
vo
m(τf ,τ f )
≤ Pr(zm+1 =τ ′)
Pr(Nm+1(τ ′)−Nm+1(τf )=1)
vo
m+1(τf ,τ f ), (9)
where Pr(zm =τ ′) is the probability that miner m is hit by a liquidity shock at
the next stopping time τ ′, and Pr(Nm(τ ′)−Nm(τf )=1) is the probability that
he solves his block at τ ′. We show in the proof of Proposition 3 that the ratio of
these two probabilities simplifies to θm
λm
for miner m, and use this simplification
hereafter.
To simplify the exposition, assume that for any K ∈{0,...,M},G(K)+
G(M−K)=G(M). To state our next proposition, we need to define the
following condition on the realized distribution of blocks’ rewards among
miners.
Condition 1. At time τ , there is a single chain and there exists an integer
K∗ ≥ M
2 such that for m>K∗
θm
λm
(
G(K∗)−G(M−K∗)
)≤vo
m(τ,τ )(G(M−K∗)−G(M−K∗−1)) (10)
while for m≤K∗
θm
λm
(G(K∗)−G(M−K∗))≥vo
m(τ,τ )(G(M−K∗ +1)−G(M−K∗)). (11)
1683
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1684 1662–1715
The Review of Financial Studies / v 32 n 5 2019
Figure 5
Equilibrium of Proposition 3
To illustrate Condition 1, consider the following example: M=5 and the
function G(.) is defined by G(0)=G(1)=0; G(2)= 6
5 ; G(3)= 9
5 ; G(4)=G(5)=3,
so that all properties of G(.) are satisfied.19 Assume also that all miners are
identical and have the same ratio θ
λ
. Then Condition 1 holds if there are two
miners (ranked 4 and 5) each with a number of blocks solved in the last f
blocks larger than θ
2λ
, and three miners (ranked 1, 2, and 3) each with a number
of blocks solved in the last f blocks lower than θ
λ
. This example also highlights
that there can be parameter values for which Condition 1 is never satisfied. This
is the case, for instance, if f is smaller than θ
λ
. The next proposition states that
persistent forks can occur in equilibrium, as illustrated in Figure 5.
Proposition 3. Assume that M ≥4. Consider an arbitrary integer f >0 and
ε>0. Define τf as the first time τ at which rτ >1−ε, f <n(τ ), and Condition
1 holds. For ε sufficiently small, there exists a Markov perfect equilibrium in
which, on the equilibrium path, the following occurs: As long as τ <τf , there
is a single chain and all miners chain their current block to Bn(τ ). At τf , all
miners m≤K∗ (defined in Condition 1) chain their current block to Bn(τf )−f
and follow that chain afterwards, while the other miners chain their current
block to Bn(τf ) and follow that chain afterwards.
The intuition for the result is the following. First note that for some miners to
fork, we must have that the left-hand side of Equation (11) be positive, which
implies that K∗ ≥ M
2 . That is, in Proposition 3, persistent forks can occur only
if a majority of miners choose to fork and this is expected by all. Next, see
that if M ≤3, Conditions (10) and (11) can only be satisfied for the degenerate
19 A more general example of G(.) that satisfies all our assumptions is: G(0)=G(1)=0, G(M)=G(M−1)=F , where
F is a strictly positive constant, and for all K such that 1<K <M−1, G(K)=F K
M
.
1684
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1685 1662–1715
The Blockchain Folk Theorem
function G(K)=0 for all K , which contradicts our assumption that G(M)>0.
This is why we assume M ≥4 in the statement of Proposition 3.
Now, suppose all miners expect that a majority will fork and this will result
in two coexisting chains, and examine whether miner m prefers forking or
remaining on the original chain. For m, the benefit from forking is that the blocks
he will mine on the new chain will be worth G(K∗), which is larger than the
value of blocks mined on the original chain, G(M−K∗). This benefit is large if
the probability that m solves a block in any given period, Pr(Nm(τ ′)−Nm(τ )=
1), is large relative to the probability that m leaves the game because of a
liquidity shock, Pr(zm =τ ′), that is, if θm is large relative to λm. This benefit is
captured in the left-hand sides of Equations (10) and (11) in Condition 1.
On the other hand, the cost of mining the new chain is that it reduces the value
of the blocks already mined on the original chain. For instance, if miner m>K∗
deviates from the equilibrium strategy and mines the new chain, he reduces
the value of all the blocks he solved on the original chain from G(M−K∗)
to G(M−K∗−1). This cost is large if m has large vested interests in the
original chain, that is, if vo
m(τ,τ ) is large. This cost is captured in the right-hand
sides of Equations (10) and (11) in Condition 1. The incentive effect of vested
interests is self-reinforcing once the fork occurred. After τf , miners m≤K∗
start accumulating vested interests on the new chain while miners m>K∗
continue accumulating vest interests on the original chain, entrenching further
their respective strategies.
Last, the assumption that for any K ∈{0,...,M},G(K)+G(M−K)=G(M)
ensures that miners only consider the value of rewards from blocks solved
after Bn(τf )−f when assessing the benefit and cost of following one chain or
another.20 It therefore simplifies the presentation of Condition 1. Were this not
true, the value of rewards from these earlier blocks would enter Condition 1 as
well, but a persistent fork equilibrium could still be sustained.
Overall, Proposition 3 shows that the endogenous sorting between miners
who prefer to stick to the original chain and those who fork is driven by two
forces: the number of blocks that a miner expects to solve in the future, and his
vested interest in the original chain. A miner is more likely to fork when the
former is higher and the latter is lower.
Unlike in Proposition 1 and Proposition 2, the equilibrium outcome in
Proposition 3 depends on the number of miners. More precisely, the trade-
offs faced by the miners involve the effect of their mining strategy on the value
of their rewards. If miners were competitive and their choice had no impact on
the value of their rewards, this strategic effect would not arise.
Finally, note that the equilibrium outcome in Proposition 3 is Pareto-
dominated by that in Proposition 1. As earlier, this is because no miner can
20 Note that this assumption does not preclude that for some K1 +K2 <M,G(K1)+G(K2)<G(K1 +K2).
1685
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1686 1662–1715
The Review of Financial Studies / v 32 n 5 2019
earn more than G(M) per solved block, and blocks that belong to either branch
after the fork have a strictly lower value (G(K∗) or G(M−K∗)) than G(M).
4. Enriching the Model
So far we have considered a stylized frictionless case, in which, relying on
abstract sunspots, we showed that coordination effects could lead to forks and
equilibrium multiplicity. We now enrich the analysis by introducing information
delays, double-spending attempts, and upgrades. We show that these realistic
events can play a similar role as sunspots in triggering forks, also because of
coordination effects.
4.1 Information delays
As mentioned previously, Nakamoto (2008) considered the possibility of
information delays in the network, generating short-term forks, and argued these
forks would be rapidly resolved, as miners would follow the longest chain rule.
To examine this point, we extend our model to analyze equilibrium mining in
the presence of delays. We show how the interplay between information delays
and coordination effects gives rise to multiple equilibria.
To keep things as simple as possible, we assume that a delay in information
transmission can happen only once. As long as there has been no delay, each
time a new block Bn is solved, there is a probability η that one (and only one)
of the miners does not observe that event. In that case, each of the M−1 miners
has an equal chance of not observing the block solved by m(Bn). As soon as the
next block (Bn+1) is solved, the miner who did not observe that Bn was solved
learns that information, along with the information that Bn+1 has been solved. To
simplify proofs, we also assume that G(M)=G(M−1)+G(1) (which implies
M ≥3).21 In this extension of our model we obtain the following result.
Proposition 4. When miners can observe solved blocks with a delay, there
exists a Markov perfect equilibrium such that on the equilibrium path miners
always mine the chain that they perceive to be the longest. If there are two
chains of the same length, each miner keeps mining the chain he was mining
just before.
At the equilibrium presented in Proposition 4, because of information delays,
two chains of the same length can appear. At this point, there is a fork. In
that case, miners continue mining the chain on which they were active before
the fork. When one chain becomes strictly longer, miners apply the LCR and
the shortest branch of the fork becomes orphaned. This is in line with the
21 This assumption simplifies the proofs but is not necessary to establish the results. If we instead assume that
G(M−1)+G(1)<G(M), the proposition would still hold provided that the probability of a liquidity shock is
sufficiently small.
1686
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1687 1662–1715
The Blockchain Folk Theorem
conjecture of Nakamoto (2008). The equilibrium described in Proposition 4
therefore illustrates the robustness of the LCR equilibrium of Proposition 1
to information delays. This, however, is not the only equilibrium. Because of
coordination effects, other equilibria can be sustained, in which miners don’t
behave as suggested by Nakamoto (2008). This is illustrated in the following
proposition.
Proposition 5. When miners can observe solved blocks with a delay, there
exists a Markov perfect equilibrium such that on the equilibrium path miners
always mine the chain that they perceive as the longest. If there are two chains
of the same length, miners always chain to the forking branch, and the original
chain becomes orphaned.
In Proposition 5, miners follow the LCR. Yet, when an information delay
causes a fork, with two equally long branches, miners abandon the chain
on which they were active and follow the fork. This equilibrium is in line
with Proposition 2: Both show how coordination effects underpin equilibrium
multiplicity. Yet, while in Proposition 2 forking was triggered by an abstract
sunspot, in Proposition 5 it is triggered by a realistic event, information delays.
In Proposition 5 the fork is only one block long, because the delay can only
affect the observation of one block. On Bitcoin, most temporary forks are one
block long. We collected data from one full node operated by blockchain.info,
which currently reports orphaned blocks since March 2014. We found that out
of 935 reported forks between March 2014 and December 2017, 928 were only
one block long. Intuitively, the frequency of such forks depends on the relative
frequency of block resolution compared to network latency. For example, one-
block-long forks are much more frequent on Ethereum (with one block solved
every 15 seconds) than on Bitcoin (with one block solved every 10 minutes): on
average there have been over 1,000 one-block long forks per day on Ethereum
since January 2018 (source: https://etherscan.io/chart/uncles.).
Longer forks could arise if delays affected more blocks. Note that delays
are not necessarily due to network latency. In the case of the Bitcoin March
2013 fork, delays occurred because one block was mistakenly rejected by
computers running one version of the mining software and it took time for
miners to become aware of that problem. As discussed in Section 1.2, miners
then found it difficult to coordinate on a single chain. This is consistent with
Propositions 4 and 5, which show there is a multiplicity of equilibria, making
it difficult for participants to coordinate. Another example occurred during
the implementation of a soft fork (BIP66) on Bitcoin in July 2015. Some
mining pools representing 40% of the network hashpower were mining blocks
without fully validating previous blocks (a strategy referred to as “simplified
payment verification mining”). They thereby accepted blocks that they should
have considered as invalid, which created a 6-block-long fork on July 4, 2015,
and a 3-block-long fork on July 5, 2015. Although these short-lived forks differ
1687
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
https://etherscan.io/chart/uncles
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1688 1662–1715
The Review of Financial Studies / v 32 n 5 2019
from persistent forks sustained by vested interests, our analysis uncovers that
in both types of fork, coordination effects play a key role.
4.2 Double-spending
Another important potential issue outlined in Nakamoto (2008) is double-
spending. We study later whether it can arise at equilibrium. In the spirit of
the modeling of delays earlier, assume that after each block is solved, there is a
probability η′ that one miner has an opportunity to divert the payment S from
a transaction included in the last block. To earn S, the miner needs to create a
fork and ensure it becomes the only active chain. Assume the opportunity to
double-spend occurs only once and denote γ (m,τ ) the probability that at any
time τ , m is the miner who solves the next block after τ . As for Proposition
4, we assume that G(M)=G(M−1)+G(1) to simplify proofs (which again
implies M ≥3).
Proposition 6. Assume each miner can receive an opportunity to double-
spend and that for any miner
S >
G(M)(2−γ (m,τ ))
γ (m,τ )
. (12)
There exists a Markov perfect equilibrium such that on the equilibrium path,
miners always mine the longest chain, except the miner who has the opportunity
to double-spend. The latter tries to create a fork longer than the original chain.
If he succeeds, all miners chain to his fork and the original chain is orphaned.
When a miner spots a double-spending opportunity, he endeavors to solve
two blocks in a row before the other miners solve any new block on the original
chain. If he succeeds, the fork started by the double-spending miner becomes
the longest chain. If the other miners follow the longest chain rule, they then
chain their blocks to the forking branch. This enables the miner to recover S
and spend it again.
The equilibrium described in Proposition 6 relies on a similar coordination
effect as that of Proposition 4: miners have an interest in following the longest
chain when they anticipate that all other miners do the same. This in turn
can induce a miner to create a fork that will be followed by all miners if it
becomes the longest. But in contrast with the case of delays, the fork does
not start accidentally; it is intentionally triggered by the miner who tries to
double-spend.
It is profitable to try to double-spend if Condition (12) holds. The intuition
for that condition is the following. When trying to create a fork after spotting
S, a miner faces a large risk that his fork does not become the longest chain.
The higher γ (m,τ ), the lower that risk, and the higher the double-spending S,
the larger the compensation for that risk.
In practice, however, Condition (12) is unlikely to hold. A back-of-the-
envelope computation suggests that if λ is small and there are 15 identical
1688
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1689 1662–1715
The Blockchain Folk Theorem
miners, Condition (12) can be approximated as S >30G(M). For Bitcoin,
G(M)=12.5 bitcoins in 2018, hence for Condition (12) to hold, S must be
larger than 375 bitcoins, which is a sizable amount. This condition could be
relaxed, however, if instead of deriving an equilibrium where all miners can
double-spend, one focuses on an equilibrium in which only the miner with the
largest computing power double-spends.
Selfish mining is a related type of attack by which a miner starts a fork in the
hope that it will become longer than the original chain. In this attack, the selfish
miner delays the broadcasting of the blocks he mines on the forking chain, so
that the other miners continue mining the original chain. They therefore bear
the risk of losing all the rewards they earned on that chain. As in the case of
double-spending, selfish mining can only be profitable if a miner has a benefit
other than blocks rewards.22
4.3 Upgrades
As discussed in Section 1.2, blockchain participants sometimes introduce
upgraded versions of the mining software. To study the impact of these
upgrades, we assume it is common knowledge that just after the nth block
on the original chain has been solved, a new technology is introduced. Then,
miners must choose between staying with the existing technology, C =0, and
adopting the new technology, C =1. From this point on, miners choose between
C =0 and C =1 for each block they mine. To capture the notion of hard fork,
we assume that miners can only chain their block to a block solved with the
same technology. We also allow for the possibility that miners derive private
benefits from using one technology or the other. Private benefits can reflect a
cost advantage. For instance, some argued that the mining pools controlled by
Bitmain, an ASIC manufacturer, favored Bitcoin Cash over SegWit because
they had access to a patented mining-enhancing device that cannot be used
with SegWit.23 In contrast, Bitcoin Gold is favored by miners who find it costly
to rely on ASIC. Private benefits can also reflect ideological preferences. The
attempt at increasing the size of blocks on Bitcoin with the SegWit2x hard fork
was supported by a group of large mining pools. It was eventually defeated in
November 2017 by the Bitcoin Core developers who opposed the principle of
a hard fork and the idea of letting these large pools impose their solution. To
model private benefits, we assume that when solving a block with technology
C, miner m obtains a reward (1+bm(C))G(K) where K is the number of miners
active on the chain containing this block.
Proposition 7. There exists a Markov perfect equilibrium in which, on the
equilibrium path, all miners follow the LCR and choose technology C =0, and
22 For instance, Eyal and Sirer (2014) consider that miners want to maximize their relative revenue, so that a selfish
miner has an interest in reducing the profit of the others.
23 This is the ASICBOOST technology that can increase the efficiency of the SHA-256 calculation.
1689
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1690 1662–1715
The Review of Financial Studies / v 32 n 5 2019
another equilibrium in which, on the equilibrium path, all miners follow the
LCR and choose technology C =1.
If a miner anticipates all the other miners will choose technology C, then it
is a best response for this miner to also choose C, whatever his or her private
benefits. The equilibria described in Proposition 7 therefore hinge on the same
coordination effects as in Propositions 1 and 2.
When miners coordinate on the same technology and on following the LCR,
the level and distribution of private benefits does not affect which equilibrium
will prevail. In particular, it can be that C =1 is chosen at equilibrium even
if all miners have a preference for C =0. We now explore how a persistent
fork can also be sustained at equilibrium in the presence of private benefits.
For simplicity, suppose that there are M−K∗ miners with a positive private
benefit for the original technology. We assume bm(1)=0, ∀m, while bm(0)=0,
∀m≤K∗ and bm(0)=b>0 ∀m>K∗. Denote τf the time at which the new
technology is introduced and assume for simplicity, as in Proposition 3, that
G(K)+G(M−K)=G(M) for all K ∈{0,...,M}.
Proposition 8. Assume M ≥4. If
b≥ G(K∗)
G(M−K∗)
−1, (13)
and K∗ ≥ M
2 , there exists a Markov perfect equilibrium in which, on the
equilibrium path, for τ <τf all miners follow the LCR and for τ ≥τf , miners
m≤K∗ choose C =1 and follow the LCR on the chain of blocks mined with
C =1, while miners m>K∗ choose C =0 and follow the LCR on the chain of
blocks mined with C =0.
Proposition 8 focuses on the case in which the majority of miners (K∗ out
of M) have no private benefits, while a minority of them strongly prefers not to
adopt the upgrade. In this context, if it is expected that the majority will opt for
the upgrade, then all the miners who don’t have any private benefit anyhow
choose to adopt the upgrade, but the minority with strong private benefits
sticks to the previous version of the software. This result is reminiscent of
the persistent fork equilibrium described in Proposition 3. For similar reasons
as in Proposition 3, we must have M ≥4 for the equilibrium to exist. One
difference is that here, the fork is initiated by exogenous private benefits, instead
of the endogenous distribution of vested interests from past solved blocks in
Proposition 3. However, once the fork occurred, vested interests play the same
reinforcing role as in Proposition 3 by increasing the incentives of miners to
stick to the chain they initially picked.
Proposition 7, in which miners must choose between two versions of the
software and coordinate on a unique version, is in line with the situation
observed in November 2017, in which all miners eventually coordinated on
1690
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1691 1662–1715
The Blockchain Folk Theorem
refusing SegWit2x. Such unanimity contrasts with Proposition 8, in which
a minority with strong private benefits rejects the upgrade adopted by the
majority. This is in line with the situation observed in July 2016, when a
minority of miners rejected the Ethereum hard fork for ideological reasons.
This is also in line with the Bitcoin Gold fork, which is mined by a minority
of participants, some of which have strong vested interest in that chain due to
their initial allocation of Bitcoin Gold.24
As mentioned earlier, many hard forks occurred during the year 2017 on
Bitcoin. Our analysis highlights that larger, unevenly distributed private benefits
can trigger forks. It is likely that the increase in the network activity, and the
corresponding increase in Bitcoin value, have generated larger private benefits
for some miners, derived from specific technologies or mining rules, which can
explain why fork attempts have been more frequent.
5. Computing Capacity and Difficulty
The previous analysis takes difficulty and computing capacity as given and
fixed, independently from the choices of the miners. Correspondingly, θm is
also given and fixed for all m. In the short term this is a realistic assumption. For
example, on the Bitcoin blockchain between two resets of the difficulty, that is,
approximately within two weeks, difficulty remains constant in all branches. In
the longer term, however, this assumption is less realistic, as miners can decide
to change the computing capacity they allocate to different blockchains, and
difficulties are correspondingly reset. In this section we examine separately (for
simplicity) two aspects of these issues: First, holding total capacity constant, we
discuss how the allocation of computing capacity to different branches changes
difficulty in the different branches. Second, focusing on the equilibrium of
Proposition 1 (with a single chain), we analyze the ex ante equilibrium choice
of computing capacity. A key point in both aspects of the analysis is that when
one miner increases his computing capacity in one branch, he increases the
difficulty in that branch, which exerts a negative externality on the other miners
operating in that branch.
5.1 Difficulty
Suppose there are two persistently competing branches in the blockchain, x
and y, attracting different computing capacity. The key difference between
this setting and our previous analysis is that now the different branches are
assumed to have different difficulties, reflecting different hash power (which
is appropriate in the long term), while previously we assumed the different
branches had the same difficulty (which is appropriate in the short term). To
discuss the strategic issues arising in this setting, suppose miners m=1,...K
24 Bitcoin Gold developers allocated themselves 100,000 units of the new cryptocurrency by pre-mining blocks
before opening the chain to the public.
1691
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1692 1662–1715
The Review of Financial Studies / v 32 n 5 2019
mine branch x while miners m=K +1,...M mine branch y.25 Consider one
miner, for example miner K . If K mines branch x, by Equation (3), his
instantaneous probability of solving a block is
θK (x)=
1
X
hK∑K
m=1hm
, (14)
while his reward from solving a block in that branch is G(K). If, instead, miner
K chose to mine in branch y, his instantaneous probability of solving a block
would be
θK (y)=
1
X
hK∑M
m=K hm
, (15)
while his reward from solving a block in that chain would be G(M−K +1).
Suppose that branch x attracts less miners and computing capacity than y.
Then miner K faces a trade-off: if he successfully mines in branch x, his reward
G(K) is lower than if he succeeds in branch y; on the other hand, his probability
to solve a block is higher on x since the difficulty of mining is larger on y.
The first effect, already present in the previous subsections, makes it attractive
for miners to mine where they expect the others to mine (“crowding in”). The
second effect (“crowding out”) is new to this section and makes it less attractive
to mine a branch where many others mine. Characterizing equilibrium in that
situation is beyond the scope of the present paper. Yet two different types of
externalities can be pointed to.
• On the one hand, when moving from branch x to branch y, miner K
exerts a positive externality on miners m>K , by increasing the value of
the rewards in their branch from G(M−K) to G(M−K +1).
• On the other hand, miner K exerts a negative externality on miners m>
K , by increasing the computing capacity, and hence the difficulty in
branch y.
5.2 Computing capacity
We now endogenize the total computing capacity in the network, that is,
the choices of hash rates hm by all miners at time 0. We investigate the
relation between equilibrium hash capacity and the socially optimal one. Our
analysis of equilibrium capacity is similar to Dimitri (2017). The contribution
of this subsection, relative to Dimitri (2017), is to identify an externality
in the computing capacity acquisition game, which drives a wedge between
equilibrium and social optimality.
To choose hm, miner m needs to anticipate how his computing capacity
will affect his continuation game payoff. To do so, the miner needs to form
25 Miners could also split their computing capacity across the two branches, but that would not alter the thrust of
the argument.
1692
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1693 1662–1715
The Blockchain Folk Theorem
a conjecture on the equilibrium that will prevail in the mining game. For
simplicity, we assume all miners rationally anticipate that the single chain
equilibrium described in Proposition 1 will prevail.
The program of miner m is
max
hm
θm
λm
G(M)− cmhm
λm
, (16)
where cmhm, with cm >0, is the cost of using hm per unit of time. Since cmhm
can be interpreted as the rental cost of the equipment plus the cost of electricity,
it is natural to assume that the cost is linear in the capacity. Miner m bears this
cost until he is hit by a liquidity shock.26
A Nash equilibrium of the computing capacity acquisition game is a vector
{h∗
m}m=1,...M such that h∗
m is the optimal choice of miner m when he anticipates
the others will choose h∗−m. The following proposition presents the equilibrium
computing capacity of the network when all M miners choose to participate.27
Proposition 9. Assume that cm ≤
∑
i∈Mci
M−1 ≤G(M),∀m∈M. When miners
choose to participate to the network and anticipate that no fork will occur,
their equilibrium computing capacity is defined by
h∗
m =
G(M)
X
M−1∑
i∈Mci
(
1−cm
M−1∑
i∈Mci
)
. (17)
The total computing capacity installed on the network is∑
i∈M
h∗
i =
G(M)
X
M−1∑
i∈Mci
. (18)
Condition cm ≤
∑
i∈Mci
M−1 holds if costs, ci , are not too different across miners.
It ensures that the solution to Equation (17) is positive for all miners, while
condition
∑
i∈Mci
M−1 ≤G(M) ensures that it is always possible to find a value
of the difficulty parameter D above one, such that the expected time between
two blocks is X. Equation (17) implies that equilibrium individual computing
capacity is increasing in the mining reward (G(M)), decreasing in the average
duration between blocks (X) and in the unit cost cm. Correspondingly, Equation
(18) implies that total network capacity decreases with
∑
i∈Mci .
We now compare the equilibrium network capacity to what miners would
choose if they could coordinate their choices and maximize their joint profit.
To do so in the simplest possible way, we consider the special case in which all
miners have the same cost c and the same λ.
26 When miner m is hit by a shock, his successor inherits the computing capacity hm.
27 There is also an equilibrium such that all miners choose not to participate. Indeed, if a miner anticipates that the
others will not install any computing capacity, his best response is not to install any capacity either since cm >0
and G(1)=0. We focus on the equilibrium in which the network is created.
1693
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1694 1662–1715
The Review of Financial Studies / v 32 n 5 2019
The corresponding maximization problem is
max
h
M
(
1
λX
h
Mh
G(M)− c
λ
h
)
. (19)
This is decreasing in h. So miners coordinate on the smallest possible value
of h, corresponding to D =1. We then have
∑
i∈Mhi = 1
X
. Comparing this to
Equation (18) we see that, under condition
∑
i∈Mci
M−1 ≤G(M) of Proposition 9,
in equilibrium there is overinvestment in computing capacity: If miners could
cooperatively decide on their individual computing capacity, each would invest
1
MX
. But if all miners invest 1
MX
, then any miner m has an incentive to increase
his own h in order to increase his probability to solve blocks, leading to an arms
race in computing capacity.
As in the previous subsection, by devoting computing capacity to the mining
task, a miner exerts a negative externality on the others, by increasing the
difficulty. This negative externality drives a wedge between equilibrium and
social optimality.
6. Conclusion
Miners’ incentives are key to the production of a robust consensus in a
blockchain. This paper shows that, while miners benefit from coordinating
on a single chain, thereby maintaining consensus, coordination motives can
also lead to abandoning portions of the blockchain. This can jeopardize the
blockchain’s key function, that is, producing a stable and immutable history of
transactions. In addition, vested interests can lead to the persistence of multiple
active chains.
Could these issues be overcome by communication among participants? In
practice, communication among participants proved ineffective in the cases
of Ethereum in 2016 and SegWit2x in 2017. This is in line with theoretical
and experimental findings that communication in games does not necessarily
facilitate coordination (see, e.g., Crawford 1998).
Another issue relates to the negative externalities arising in proof-of-work
blockchains. First, as shown earlier, when choosing individually optimal
computing capacity, miners fail to internalize the negative externality their
investment generates for other miners by increasing difficulty. This implies that
equilibrium capacity acquisition in proof-of-work mining is excessive. Second,
proof-of-work mining generates greenhouse-effect negative externalities,
whose order of magnitude is significant. As of May 2018, the electricity
consumed for Bitcoin mining was equal to the electricity consumption of over
6 million U.S. households, with an average consumption per transaction of
around 850 KWh.28 Pigovian taxation could curb overinvestment in mining, but
28 Source: https://digiconomist.net/bitcoin-energy-consumption.
1694
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
https://digiconomist.net/bitcoin-energy-consumption
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1695 1662–1715
The Blockchain Folk Theorem
it might also be difficult to put in place, given the international decentralization
of mining.
This suggests moving from proof-of-work to proof-of-stake, in which
participants do not have to use computing power and energy to propose blocks
for consensus. Note, however, that proof-of-stake is exposed to the same
coordination problems as proof-of-work, since in both protocols participants
must choose which blocks to accept and are rewarded when the others agree
with their choice. In addition, proof-of-stake comes with its own problems, in
particular the nothing-at-stake effect: a participant can stake his cryptocurrency
units on different branches, thus hindering the emergence of consensus.29
This points to a major dilemma for distributed ledgers: On the one hand,
the anonymity and decentralization of public blockchains expose them to
coordination failures and externalities. On the other hand, private blockchains
can restore coordination and internalize externalities, but only to the extent that
they involve the intervention of a centralized authority, which goes against the
fundamental motivation for blockchain.
Appendix
Notation. We summarize here notation we use throughout the proofs:
- τ (Bn) is the stopping time at which block Bn is solved.
- n(τ ) is the index of the last block solved by time τ .
- Nm(τ ) is the total number of blocks solved by miner m by time τ .
- NC
m (τ ) is the number of blocks solved by miner m on chain C by time τ . In particular,
No
m(τ ) is the number of blocks solved by m on the original chain.
- p(Bn) is the index of the block to which Bn is chained (his parent).
The following lemma implies that a candidate strategy profile {σ ∗
m}m∈M forms a Markov perfect
equilibrium (MPE) if and only if no miner has a profitable one-shot deviation after any possible
history of the game ωτ .30
Lemma A1. Our blockchain game is continuous at infinity.
Proof of Lemma A1. Denote by Gm(σm) the lifetime payoff of miner m if he follows strategy
σm. Consider any alternative strategy, σ ′
m, that prescribes the same actions as σm until time T and
differs afterwards. The difference between the two expected payoffs can be written as
E[Gm(σm)−Gm(σ ′
m)]=Pr(zm ≤T )E[Gm(σm)−Gm(σ ′
m)|zm ≤T ]
+Pr(zm >T )E[Gm(σm)−Gm(σ ′
m)|zm >T ]. (A1)
29 Current proof-of-stake proposals like Casper try to alleviate this problem by imposing coin deposits that can be
seized if a participant is observed to simultaneously bet on several competing branches. It is unclear, however,
whether these proposals are sufficiently robust to be implementable.
30 See, for instance, Proposition 5.7.1 in Mailath and Samuelson (2006).
1695
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1696 1662–1715
The Review of Financial Studies / v 32 n 5 2019
Now, by definition,
E[Gm(σm)−Gm(σ ′
m)|zm ≤T ]=0. (A2)
Moreover, recall that Pr(zm >T )=e−λmT , so that we have31
lim
T →∞Pr(zm >T )=0. (A3)
Last, E[Gm(σm)−Gm(σ ′
m)|zm >T ] is bounded, since E[Gmax
m ] is finite. Hence,
lim
T →∞E[Gm(σm)−Gm(σ ′
m)]=0, (A4)
which ensures that our game is continuous at infinity. �
Proof of Proposition 1. The candidate equilibrium strategy specifies that miners always chain
their block to the last block on the original chain. We let Bn denote that block, and check that no
miner has a profitable one-shot deviation.
Consider the strategy of miner m at time τ after history ωτ . We break the analysis into three
cases, the probabilities of which are independent of the miners’ actions (they reflect the distributions
of independent Poisson processes with exogenous intensities).
(i) Suppose the next event is zm. The equilibrium strategy prescribes that all miners mine the
original chain. Therefore, if m follows the equilibrium strategy and chains his block to
the last block on the original chain, Bn, he earns G(M) for each block he solved on the
original chain and G(0)=0 for any other block.
Suppose m deviates and does not chain his block to Bn. By definition, he cannot earn
more than G(M) for each block he solved on the original chain. In addition, he cannot
earn more than G(1)=0 for each block he solved on forks since all other miners mine the
original chain. Hence deviating is not strictly profitable in this case.
(ii) Suppose the next event is that a block is solved by another miner than m at time τ ′.32 Then
the state of the blockchain at τ ′, ωτ ′ , does not depend on m’s action at τ . By definition,
ωτ ′ captures all the payoff-relevant information, hence m’s action at τ does not affect his
payoff.
(iii) Suppose the next event is that m solves block Bn(τ )+1 at time τ ′. Since all other miners play
the equilibrium strategy going forward and m himself reverts to mining the original chain
after τ ′ (one-shot deviation), which block m chose as a parent block at τ does not affect the
payoff m expects from previously mined blocks or from future blocks. Consequently, m’s
payoff in any one-shot deviation differs from his equilibrium payoff only in the reward he
obtains for Bn(τ )+1. This reward is G(M) if m played the equilibrium strategy and chained
Bn(τ )+1 to Bn, and G(0) if he chained Bn(τ )+1 to any other block as in that case, no miner
will ever chain a block to Bn(τ )+1. Hence deviating is strictly dominated in this case.
Overall, there is no state ωτ in which a one-shot deviation gives m a strictly higher expected
payoff than the candidate equilibrium strategy, which therefore forms a MPE. �
31 Our liquidity shock has the same impact on miner m’s long-term payoff as a discount rate equal to λm.
32 The next event can also be that another miner is hit by a liquidity shock. Which block m chose as a parent block
is also irrelevant in this case. For brevity, we ignore this case in the remainder of the proofs.
1696
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1697 1662–1715
The Blockchain Folk Theorem
Proof of Proposition 2. Let τf be the first time the sunspot variable is above 1−ε and f is
strictly lower than the number of blocks n(τ ). We call “new chain” the chain created by the fork.
Formally, for every τ >τf , the new chain, if it exists, is the chain containing (Bn(τ )−f ,Bk) that
preexists all other chains containing (Bn(τ )−f ,Bk), where k≡min{k̂>n(τf ),(Bn(τ )−f ,B
k̂
)∈ωτ }.
Our candidate equilibrium strategy specifies the following:
(a) Before the fork: If τ <τf , miners chain their block to the last block on the original chain.
(b) At the fork inception and after the fork: If τ ≥τf , miners chain their block to the last
block on the new chain, or to Bn(τ )−f if the new chain does not exist.
We now show that miner m does not have a profitable one-shot deviation from this strategy at
time τ .
(a) Before the fork: Since m’s actions do not affect the occurrence of the sunspot, for τ <τf
the proof operates along the same lines as the proof of Proposition 1.
(b) At the fork inception and after the fork: Suppose τ ≥τf . As in the proof of Proposition 1,
we can restrict attention to the case where m solves the next block, Bn(τ )+1, at time τ ′. In
that case, m′s equilibrium payoff differs from his payoff in a one-shot deviation only in
the reward for block Bn(τ )+1. Since m expects all miners, including himself, to attach their
block to the last block on the new chain after τ ′, m’s reward for block Bn(τ )+1 is G(M)
if he played the equilibrium strategy and chained his block to the last block on the new
chain (or to Bn(τ )−f ), and G(0)=0 if he chained Bn(τ )+1 to any other block. �
Proof of Proposition 3. We start with preliminary steps. Consider τf defined in Proposition 3,
and define the new chain as in the proof of Proposition 2. Let vn
m(τ,τf )=Nn
m(τ )−Nn
m(τf ) be miner
m’s vested interest on that chain, that is, the number of blocks he solved on the new chain after τf .
To define our equilibrium strategies, we use the following condition, which we will derive
explicitly in the proof:
Condition 2. For a given K∗ ≥ M
2 , for τ ≥τf , ωτ is such that for m>K∗
vo
m(τ,τf )(G(M−K∗)−G(M−K∗ −1))−vn
m(τ,τf )(G(K∗ +1)−G(K∗))
≥ Pr(Nm(τ ′)−Nm(τ )=1)
Pr(zm =τ ′)
(G(K∗)−G(M−K∗)), (A5)
while for m≤K∗
vo
m(τ,τf )(G(M−K∗ +1)−G(M−K∗))−vn
m(τ,τf )(G(K∗)−G(K∗ −1))
≤ Pr(Nm(τ ′)−Nm(τ )=1)
Pr(zm =τ ′)
(G(K∗)−G(M−K∗)). (A6)
Our candidate equilibrium strategy profile specifies the following:
(a) Before the fork: If τ <τf , miners chain their block to the last block on the original chain.
(b) At the fork inception and after the fork: If τ ≥τf and Condition 2 holds, miners m≤K∗
chain their block to B
n(τf )−f
if the new chain does not exist, and to the last block on
the new chain otherwise, while miners m>K∗ chain their block to the last block on the
original chain.
(c) After the fork off-path: Suppose τ >τf and Condition 2 does not hold. Let �ω≡ωτ \ωτf
(i.e., �ω contains the history of the game between τf and τ ). Then for every τ ′ ≥τ , all
miners play the strategy prescribed after history ωτ ′ \�ω that is defined in (b). In playing
1697
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1698 1662–1715
The Review of Financial Studies / v 32 n 5 2019
strategies defined in (b), miners consider that the original and the new chain are defined
with respect to history ωτ ′ \�ω.33
As will become explicit later, the specification of the equilibrium strategy in states described in
(c) is useful to rule out certain types of deviations.
To show that a miner does not have a profitable one-shot deviation, we consider each case in
turn.
Proof of part (a): Before the fork. Miner m’s one-shot deviation from equilibrium at time τ <τf
has two effects on his expected payoff. First, it can affect the distribution of vested interests on the
original chain at future times τ such that rτ >1−ε. Second, as in the proof of Proposition 2, it
can impact the value of the block m chooses to mine. As in the previous proofs, these effects are
affected by m’s action at τ only if he solves the next block, Bn(τ )+1.
Consider the first effect. The occurrence of a fork may reduce the payoff participants receive
from the blocks they will mine after τf , as well as some of the blocks they have mined before
τf , namely, the f blocks between the last block solved before the sunspot, B
n(τf ) and the first
block that does not belong to the new chain, B
n(τf )−f +1. For each of these blocks, as well as for
the blocks solved after τf , the maximal loss for miner m is G(M). In addition, m’s deviation has
an impact on the materialisation of this loss only if the sunspot occurs before m’s liquidity shock
when m plays the equilibrium strategy. Hence, an upper bound on this loss, or equivalently, on the
gain from reducing the likelihood of a fork via a deviation is
Pr(τf <zm|ωτ )
[
f +
θm
λm
]
G(M). (A7)
Now,
Pr(τf <zm|ωτ )=
∫ ∞
zm=τ
Pr(τf <zm|ωτ ,zm)λme−λmzmdzm. (A8)
Observe that
Pr(τf <zm|ωτ ,zm)<Pr(∃τ̂ <zm,rτ̂ >1−ε|ωτ ,zm)
=1−Pr(∀τ̂ <zm,rτ̂ ≤1−ε|ωτ ,zm). (A9)
Moreover,
Pr(∀τ̂ <zm,rτ̂ ≤1−ε|ωτ ,zm)=E[(1−ε)ν(τ,zm)], (A10)
where ν(τ,zm) is the number of stopping times between τ and zm. Hence, ν(τ,zm) follows a Poisson
law of parameter
(∑M
m=1θm +λm
)
(zm −τ ). The Laplace transform of ν(τ,zm) is
E
[
eν(τ,zm)]=exp
[(
M∑
m=1
θm +λm
)
(zm −τ )
(
e−1 −1
)]
, (A11)
which is finite. Next, see that
E
[
eν(τ,zm)]=E
+∞∑
k=0
ν(τ,zm)k
k!
, (A12)
which is thus finite. Since ν(τ,zm)≥0, it follows that the sequence
(
E
[
ν(τ,zm)k
]
k!
)
k∈N
is bounded
above.
33 In words, miners play as if the blocks solved between τf and τ do not exist.
1698
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1699 1662–1715
The Blockchain Folk Theorem
Using a Taylor expansion, we get
E
[
(1−ε)ν(τ,zm)]=1−E[ν(τ,zm)]ε+
∑
k≥2
(−1)kE
[
k−1
i=0 [ν(τ,zm)−i]
]
k!
εk. (A13)
Since
(
E
[
ν(τ,zm)k
]
k!
)
k∈N
is bounded above, all the terms where ε has a degree higher than 2 on the
RHS of the previous equation tend to 0 faster than ε. Therefore, for small ε, we have
Pr(∀τ <zm,rτ ≤1−ε|ωτ ,zm)≈1−E[ν(τ,zm)]ε. (A14)
Hence, if ε is close enough to 0, Pr(τf <zm|ωτ ,zm), and therefore the gain from reducing the
likelihood of a fork via a deviation can be arbitrarily small.
Next consider the second effect. If miner m solves Bn(τ )+1 but this block is not on the original
chain, no further block will be chained to it, since all miners henceforth play the equilibrium strategy.
Hence the expected payoff for this block is G(0)=0. If instead m was following the equilibrium
strategy when he solved Bn(τ )+1, the expected payoff from this block is strictly positive.
Overall, the first effect, which reflects the maximum gain from a one-shot deviation can be set
arbitrarily close to 0, while the second effect, which reflects the cost of a one-shot deviation, is
bounded away from 0. Hence, there is no profitable one-shot deviation.
Proof of part (b): At or after the fork.
(i) Consider first a deviation by a miner m>K∗.
Any deviation other than chaining to the last block on the new chain is ruled out by
similar arguments as in Proposition 1. Hence we just check that m prefers to chain his
block to the last block on the original chain, rather than to the last block on the new chain.
As in the proof of Proposition 1, a one-shot deviation affects m’s payoff only if the next
stopping time τ ′ corresponds to two possible events: either m is hit by a liquidity shock
or m solves a block.
– Suppose miner m solves a block at τ ′, that is, Nm(τ ′)−Nm(τ )=1. If Condition 2
is still true at τ ′, since every miner, including m, reverts to the equilibrium strategy
from τ ′ on, the only impact of the deviation is that m earns G(K∗) for block Bn(τ ′)
instead of G(M−K∗) under the equilibrium strategy. If Condition 2 is not true
at τ ′, then from (c), the impact of the deviation is that m earns 0 for block Bn(τ ′)
instead of G(M−K∗) under the equilibrium strategy, and loses all rewards for
blocks solved between τf and τ ′.
– Suppose miner m is hit by a liquidity shock at τ ′, that is, zm =τ ′. Recall that
No
m(τ ) is the number of blocks solved by m on the original chain at time τ . Then
his payoff under the deviation is
vo
m(τ,τf )G(M−K∗ −1)+vn
m(τ,τf )G(K∗ +1)+No
m(τ (B
n(τf )−f
))G(M)
(A15)
instead of
vo
m(τ,τf )G(M−K∗)+vn
m(τ,τf )G(K∗)+No
m(τ (B
n(τf )−f
))G(M) (A16)
under the equilibrium strategy.34
34 Note that we used the assumption that ∀K , G(M)=G(M−K)+G(K) to write down miner m’s payoff from blocks
solved before τ (B
n(τf )−f
).
1699
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1700 1662–1715
The Review of Financial Studies / v 32 n 5 2019
It follows that there is no profitable deviation if
Pr(Nm(τ ′)−Nm(τ )=1)[G(K∗)−G(M−K∗)]≤
Pr(zm =τ ′) [vo
m(τ,τf )(G(M−K∗)−G(M−K∗ −1))
−vn
m(τ,τf )(G(K∗ +1)−G(K∗))]
(A17)
which is exactly inequality (A5) in Condition 2.
(ii) Consider next a deviation by a miner m≤K∗. A symmetric reasoning yields that there is
no profitable deviation if
Pr(Nm(τ ′)−Nm(τ )=1)[G(K∗)−G(M−K∗)]≥
Pr(zm =τ ′) [vo
m(τ,τf )(G(M−K∗ +1)−G(M−K∗))
−vn
m(τ,τf )(G(K∗)−G(K∗ −1))],
(A18)
which is exactly Equation (A6) in Condition 2.
Next, see that at τ =τf , vn
m(τf ,τf )=0 for all miners. Inequality (A5) is then written:
Pr(Nm(τ ′)−Nm(τf )=1)
Pr(zm =τ ′)
[G(K∗)−G(M−K∗)]
<vo
m(τf ,τf )[G(M−K∗)−G(M−K∗ −1)]. (A19)
See that Pr(Nm(τ ′)−Nm(τf )=1)
Pr(zm=τ ′) = θm
λm
. To see this, let x ≡∑m′∈Mλm′ +
∑
m′∈Mθm′ be the
cumulative intensity of all liquidity shocks and block solving times. Note that Pr(Nm(τ ′)−
Nm(τ )=1)=
∫ +∞
τ
θme−x(t−τ )dt = θm
x
. Similarly, Pr(zm =τ ′)=
∫ +∞
τ
λme−x(t−τ )dt = λm
x
.
Hence at τ =τf , (A5) is exactly Inequality (10) in Condition 1. Similarly, Inequality
(A6) is then written:
θm
λm
[G(K∗)−G(M−K∗)]>vo
m(τf ,τf )[G(M−K∗ +1)−G(M−K∗)] (A20)
which is exactly Inequality (11) in Condition 1, evaluated at τ =τf .
Furthermore, if miners adhere to the equilibrium strategy, then miners m≤K∗ always
mine the new chain so that inequality (11) in Condition 1 at τ =τf implies that Inequality
(A6) in Condition 2 is true at any τ >τf . Symmetrically, given that miners m>K∗ stick
to the original chain, Condition 2 is always verified after τf . Hence, given that Condition
1 holds at τf , for τ >τf , Condition 2 holds on the equilibrium path.
Proof of part (c): After the fork off-path. Suppose ωτ is as described in (c). Then given that all
other players play the equilibrium, m’s payoff from adhering to the equilibrium strategy is as in
(b). Following the same logic as in the proof of (b), other deviations can be ruled out. �
Proof of Proposition 4. Our candidate equilibrium strategy specifies the following:
(a) If a miner solved a block outside the original chain thereby creating a one-block-long fork
as long as the original chain, that miner chains his next block to the block he just solved.
(b) Otherwise, each miner chains his current block to the last block solved on the original
chain, except if there is a fork starting with two blocks consecutively solved by the same
miner, longer than the original chain. In that case, each miner chains his block to the
longest chain, which miners consider to be the original chain from that point on.35
35 This is to define equilibrium strategies if a second fork occurs off the equilibrium path.
1700
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1701 1662–1715
The Blockchain Folk Theorem
We further assume that G(M−1)+G(1)=G(M). Indeed, there can be a transient fork created
by one miner who did not observe in time the actual state of the original chain. If another miner
is hit by a liquidity shock precisely when the fork is being formed, the blocks previously solved
by that other miner, which with certainty will not become orphaned, are worth at the time of the
fork G(M−1)+G(1). Given equilibrium strategies, the same blocks will be worth G(M) just after
the fork is resolved. Our assumption means that these blocks have the same value at and after the
fork. This assumption also mirrors the assumption that G(1)=G(0): if only one miner is not on the
same chain as the others, the reward for solving blocks is not affected. We specify in what follows
when this assumption is used.
Proof of part (a). Let Bn be the last block solved on the original chain. Suppose that at time τ ,
miner m has just created a one-block-long fork as long as the original chain by solving Bn(τ ) that
is chained to Bn’s parent, p(Bn).36
As earlier, the relevant choice for m is between chaining his next block to Bn(τ ) (the equilibrium
strategy) and chaining it to Bn (the only relevant deviation). As in the proof of Proposition 1, a
one-shot deviation affects m’s payoff only if the next stopping time corresponds to two possible
events: either m is hit by a liquidity shock or m solves a block.
(i) Suppose the next event is zm. If m deviated and chained his block to Bn, his payoff is
G(0)+No
m(τ (Bn))G(M). Indeed, all miners, including m, chain to Bn. Hence, m earns
G(0) for solving block Bn(τ ) and G(M) for every block he solved on the original chain up
to τ (Bn).
If, instead, m followed the equilibrium strategy and chained his block to Bn(τ ), his payoff
is G(1)+No
m(τp(Bn))[G(M−1)+G(1)]+1{m=m(Bn)}G(M−1). Since m is the only miner
chaining to Bn(τ ), he earns G(1) for block Bn(τ ). In addition, m earns G(M−1)+G(1)
for each block he solved on the original chain up to p(Bn), reflecting the occurrence of
a fork where m chains to Bn(τ ) and the M−1 other miners chain to Bn. Finally, m earns
G(M−1) for Bn if he solved it.
Since by assumption G(M−1)+G(1)=G(M) and G(1)=0, the deviation is not strictly
profitable in that case
(ii) Suppose the next event is that m solves Bn(τ )+1.
– If m deviated and chained his block to Bn, the original chain becomes the only
active chain and Bn(τ ) is orphaned. m’s expected gain is
No
m(τ (Bn))G(M)+G(M)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
−L(τ (Bn(τ )+1)). (A21)
Indeed, m earns G(M) for each block he solved on the original chain up to Bn
and for Bn(τ )+1. The conditional expectation is his expected reward for the blocks
solved after τ (Bn(τ )+1) if none becomes orphaned.37 L(τ (Bn(τ )+1) is the expected
loss due to one of m’s blocks solved after τ (Bn(τ )+1) becoming orphaned. On the
equilibrium path, orphaned blocks occur if and only if a miner observes a block
with delay and creates a successful fork.
36 Since the equilibrium strategies are defined for all states, including those that are not on the equilibrium path,
we cannot exclude that out of equilibrium, some blocks are solved outside the original chain before or after Bn
is solved: p(Bn) is not necessarily Bn−1, and Bn(τ ) is not necessarily Bn+1.
37 As before, if zm occurs when a fork starts, these previously solved blocks are worth G(M−1)+G(1), which is
equal to G(M) by assumption in that case.
1701
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1702 1662–1715
The Review of Financial Studies / v 32 n 5 2019
– If instead m played the equilibrium strategy and chained his block to Bn(τ ), the
chain including Bn(τ ) and Bn(τ )+1 becomes the longest, hence the only active one.
m’s expected gain is
No
m(τ (p(Bn)))G(M)+2G(M)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
−L(τ (Bn(τ )+1)), (A22)
where the second term capture rewards for Bn(τ ) and Bn(τ )+1.
It follows that there is no profitable deviation.
Proof of part (b). As earlier, Bn is the last block solved on the original chain.
(1) Suppose that at time τ , there is no fork of two consecutive blocks solved by the same
miner and longer than the original chain.
For any miner m (who has not started a fork), the two relevant choices are to follow the
equilibrium strategy and chain his block to Bn, or to create a fork by chaining his block
to p(Bn) and try solving two blocks in a row (other deviations are ruled out by the same
reasoning as in Proposition 1).
As in the proof of Proposition 1, a one-shot deviation affects m’s payoff only if the next
stopping time corresponds to two possible events: either m is hit by a liquidity shock or m
solves a block. If the next event is zm, m’s payoff is No
m(zm)G(M) (if there is no fork), or
No
m(zm)(G(M−1)+G(1))=No
m(zm)G(M) (if a fork was started by another miner) whether
he follows the equilibrium strategy or deviates. If the next event is that m solves block
Bn(τ )+1, there are two possible continuations: Either another miner does not observe that
m solved Bn(τ )+1 or all miners observe that m solved Bn(τ )+1. The probabilities of these
two events are independent of m’s action, we consider them in turn.
(i) If all miners observe that m solved Bn(τ )+1, m’s expected gain if he followed the
equilibrium strategy and chained Bn(τ )+1 to Bn is
(No
m(τBn )+1)G(M)+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
−L(τ (Bn(τ )+1)). (A23)
The first term is the reward for blocks solved up to τ (Bn) plus the reward for
mining Bn(τ )+1 when the latter remains on the original chain. The conditional
expectation is m’s expected reward for solving blocks after τ (Bn(τ )+1). The last
term, L(τ (Bn(τ )+1)), is the expected loss due to one of m’s blocks solved after
τ (Bn(τ )+1) becoming orphaned.
m’s expected gain if he deviated and chained Bn(τ )+1 to p(Bn) is38[
No
m(τ (p(Bn))+1{m=m(Bn)}Pr(Bn =p(Bn(τ )+2))
]
G(M)
+Pr(m=m(Bn(τ )+2))G(M)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
−L(τ (Bn(τ )+1)). (A24)
38 Clearly, this is the only relevant deviation since m cannot obtain more if he chained Bn(τ )+1 to Bn(τ ) if Bn(τ )
started a fork: Bn(τ )+1 will never be on the active chain given the equilibrium strategies, even if m solves Bn(τ )+2.
A fortiori, m cannot obtain more if he decides to chain Bn(τ )+1 to any block Bi with i <n(τ ) outside the original
chain.
1702
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1703 1662–1715
The Blockchain Folk Theorem
Indeed, m earns G(M) for all blocks solved on the original chain up to τ (p(Bn),
for Bn if he solved it and it remains on the active chain (if Bn(τ )+2 is attached to
Bn), and for Bn(τ )+1 if it is included in the active chain (if m solves Bn(τ )+2).39
The second term is the continuation payoff for all blocks solved after Bn(τ )+1 if
they are not orphaned afterwards. The third term is the expected loss due to one
of m’s blocks solved after τ (Bn(τ )+1) becoming orphaned. Neither term depends
on which block m chains Bn(τ )+1 to.
Since No
m(τ (Bn))≥No
m(τ (p(Bn))+1{m=m(Bn)}Pr(Bn =p(Bn(τ )+1)), if all min-
ers observe that m solved Bn(τ )+1, m’s expected payoff is larger if he followed
the equilibrium strategy than if he deviated.
(ii) If one miner (m′) did not observe that m solved Bn(τ )+1, m’s expected gain if he
followed the equilibrium strategy is
[No
m(τ (Bn))+1−Pr(m′ =m(Bn(τ )+2)=m(Bn(τ )+3))]G(M)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
. (A25)
The first term is m’s expected reward for solving blocks up to Bn(τ )+1, reflecting
the risk that Bn(τ )+1 become orphaned if m′ solves Bn(τ )+2 and Bn(τ )+3. The second
term is m’s continuation payoff, reflecting that m will be mining on the single
active chain (be it the original one or a fork that becomes the consensus).
If m deviated by chaining Bn(τ )+1 to p(Bn),40 to earn his reward on Bn(τ )+1,
m needs to solve Bn(τ )+2 so his expected gain is[
No
m(τ (p(Bn))+1{m=m(Bn)}Pr(Bn =p(Bn(τ )+2))
]
G(M)
+Pr(m=m(Bn(τ )+2))G(M)
+E[
∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)]. (A26)
As earlier,
No
m(τ (Bn))≥No
m(τ (p(Bn)))+1{m=m(Bn)}Pr(Bn =p(Bn(τ )+2)). (A27)
Consequently, there is no profitable deviation if
1−Pr(m′ =m(Bn(τ )+2)=m(Bn(τ )+3))≥Pr(m=m(Bn(τ )+2)). (A28)
That is,
1≥Pr(m=m(Bn(τ )+2))+Pr(m′ =m(Bn(τ )+2)=m(Bn(τ )+3)), (A29)
which holds because
1≥Pr(m=m(Bn(τ )+2))+Pr(m′ =m(Bn(τ )+2))≥
Pr(m=m(Bn(τ )+2))+Pr(m′ =m(Bn(τ )+2)=m(Bn(τ )+3)). (A30)
This completes the first part of the proof of the optimality of the strategy stated
in (b).
39 A fork can happen if one miner does not observe Bn(τ )+1, but even in that case, Bn(τ ), as well as all previously
solved blocks, will be on the active chain and yield G(M) or G(M−1)+G(1)=G(M) depending on when zm
occurs.
40 As earlier, this is the only relevant deviation.
1703
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1704 1662–1715
The Review of Financial Studies / v 32 n 5 2019
(iii) Suppose there is a fork starting with two blocks consecutively solved by the same miner
and longer than the original chain. The equilibrium strategy then prescribes that miners
chain their block to the longest chain.
If one miner observed a block with delay, we are in the same situation as in Proposition
1, and there is no profitable deviation from mining the longest chain. Off the equilibrium
path, however, that fork could have occurred for other reasons, and a new fork could still
occur because of a delay in the future. In that case there is no profitable deviation (in
particular, trying to create a fork by solving two blocks in a row is dominated by the
equilibrium strategy), as shown in the first part of (b). �
Proof of Proposition 5. Our candidate equilibrium strategy specifies the following:
(a) If a miner solved a block outside the original chain thereby creating a one-block-long fork
as long as the original chain, all miners chain their next block to the fork, which miners
consider to be the original chain from that point on.
(b) Otherwise, each miner chains his current block to the last block solved on the original
chain.
Proof of part (a). Let Bn be the last block solved on the original chain, suppose Bk+1, with k≥n,
is chained to p(Bn). As earlier, the relevant choice for m at time τ is between chaining his next
block to Bk+1 (the equilibrium strategy) and chaining it to Bn (the only relevant deviation). As in
the proof of Proposition 1, a one-shot deviation affects m’s payoff only if the next stopping time
corresponds to two possible events: either m is hit by a liquidity shock or m solves a block.
(i) Suppose the next event is zm. If m deviated and chained his block to Bn his payoff is
1{m=m(Bk+1)}G(M−1)+1{m=m(Bn)}G(1)+No
m(τ (p(Bn)))G(M), (A31)
where G(M−1) is his reward if he solved block Bk+1, and G(1) his reward if he solved
Bn. If, instead, m followed the equilibrium strategy and chained his block to Bk+1, his
payoff is
1{m=m(Bk+1)}G(M)+1{m=m(Bn)}G(0)+No
m(τ (p(Bn)))G(M). (A32)
Since by assumption G(M−1)≤G(M) and G(1)=G(0), the deviation is not strictly
profitable.
(ii) Suppose the next event is that m solves block Bn(τ )+1.
If m chained his block to Bn, Bn(τ )+1 becomes orphaned since all miners, including m
mine the fork after τ (Bn(τ )+1). m’s expected gain is
No
m(τ (p(Bn)))G(M)+1{m=m(Bk+1)}G(M)+1{m=m(Bn)}G(0)+G(0)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
−L(τ (Bn(τ )+1)), (A33)
since blocks Bn and Bn(τ )+1 are orphaned and earn G(0). As before, L(τ (Bn(τ )+1)) is the
expected loss due to one of the blocks solved by m after τ (Bn(τ )+1) becoming orphaned.
If instead m had chained his block to Bk+1, m’s expected gain is
No
m(τ (p(Bn)))G(M)+1{m=m(Bk+1)}G(M)+1{m=m(Bn)}G(0)+G(M)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
−L(τ (Bn(τ )+1)), (A34)
since now m earns G(M) for solving Bk+2.
It follows that the deviation is strictly dominated.
1704
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1705 1662–1715
The Blockchain Folk Theorem
Proof of part (b). As before, Bn is the last block solved on the original chain. Assume there is no
one-block-long fork of the same length as the original chain at time τ . The only relevant deviation
for miner m is to try to start a fork by chaining his current block to p(Bn). If zm occurs, or if another
miner solves the next block, m’s payoff is not affected by which block he currently mines.
Consider the case where the next event is that m solves block Bn(τ )+1. If m deviated and chained
Bn(τ )+1 to p(Bn), his payoff is:
No
m(τ (p(Bn)))G(M)+G(M)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
−L(τ (Bn(τ )+1)). (A35)
Indeed, all miners chain their future blocks to the chain that contains Bn(τ )+1, therefore m earns
G(M) for Bn(τ )+1. If m played the equilibrium strategy and chained Bn(τ )+1 to Bn, he obtains
the same payoff, since he earns G(M) for Bn(τ )+1 as well. Therefore there is no profitable
deviation. �
Proof of Proposition 6. Our candidate equilibrium strategy specifies the following:
(a) If a miner has the opportunity to double-spend, he mines a block chained to the parent of
the last block solved on the original chain.
(b) If a miner solves a block that creates a one-block-long fork as long as the original chain,
that miner chains his next block to the block he just solved, except if he spots an opportunity
to double-spend, in which case he plays according to (a).
(c) Otherwise, each miner chains his current block to the last block solved on the original
chain, except if there is a fork starting with two blocks consecutively solved by the same
miner, longer than the original chain. In that case, each miner chains his block to the
longest chain, which miners consider to be the original chain from that point on.
The general structure of the proof is similar to that of Proposition 4. As in this previous proof,
we assume that G(M−1)+G(1)=G(M) to simplify the exposition. We also clarify that the miner
who earns the reward S is the one who completes a double-spending fork before being hit by
his liquidity shock zm. In particular, a miner who initiates a double-spending fork but is hit by a
liquidity shock before the fork is resolved does not earn S. By contrast, a miner who successfully
completes a double-spending fork initiated by the miner he replaced does earn S.
Proof of part (a). Let Bn be the last block solved on the original chain. Consider the strategy of
miner m who spots the opportunity to double-spend at time τ .
Following the same reasoning as earlier, the relevant choice for m is between chaining his next
block to p(Bn) (the equilibrium strategy), chaining it to Bn, or chaining it to Bn(τ ) if Bn(τ ) is chained
to p(Bn) and m=m(Bn(τ )). (This can happen off path if m started a fork from p(Bn) and spots the
double-spending opportunity right after. By assumption, S can only be earned if m creates a new
fork from p(Bn).) As in the proof for Proposition 1, we can restrict attention to the cases where
the next event is that m either is hit by a liquidity shock, or solves a block.
Suppose first that the next event is zm. If m deviated and chained his block to Bn his payoff is
No
m(τBn )G(M). If, instead, m followed the equilibrium strategy and chained his block to p(Bn),
his payoff is
No
m(τ (p(Bn)))[G(M−1)+G(1)]+1{m=m(Bn)}G(M−1). (A36)
1705
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1706 1662–1715
The Review of Financial Studies / v 32 n 5 2019
Last, suppose m=m(Bn(τ )) and Bn(τ ) is chained to p(Bn). If m deviated and chained his block to
Bn(τ ), his payoff is the same as when chaining his block to p(Bn), plus G(1) for solving Bn(τ ).41
Since by assumption G(M−1)+G(1)=G(M) and G(1)=0, there is no profitable deviation.
Alternatively, suppose the next event is that m solves Bn(τ )+1.
To analyze this case, we condition m’s payoffs on the event that m=m(Bn(τ )+2), that is, m
solves Bn(τ )+2 before being hit by a liquidity shock. This event’s probability is independent from
m’s strategy, and if m follows the equilibrium strategy, then m earns S if and only if this event is
true.
(i) Suppose m solves Bn(τ )+2.
If m deviated and chained his block to Bn, his payoff is
No
m(τ (Bn))G(M)+2G(M)
+E
[∫ zm
τ (Bn(τ )+2)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+2)
]
. (A37)
m earns G(M) for all the blocks solved on the original chain up to τ (Bn). m earns G(M)
for solving Bn(τ )+1 and Bn(τ )+2, which belong to the original chain, and for all the future
blocks solved after τ (Bn(τ )+2), since m knows that no other double-spending opportunity
will be spotted.
If m=m(Bn(τ )) and Bn(τ ) is chained to p(Bn), if m deviated and chained Bn(τ )+1 to
Bn(τ ), his payoff is
No
m(τp(Bn))G(M)+3G(M)
+E
[∫ zm
τ (Bn(τ )+2)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+2)
]
. (A38)
m’s fork has succeeded and he earns G(M) on all blocks solved up to p(Bn) on the original
chain, plus on Bn(τ ), Bn(τ )+1 and Bn(τ )+2.
If m played the equilibrium strategy and chained Bn(τ )+1 to p(Bn), his payoff is
No
m(τp(Bn))G(M)+2G(M)
+E
[∫ zm
τ (Bn(τ )+2)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+2)
]
+S. (A39)
m earns G(M) for all the blocks he solved before the fork (up to p(Bn)), G(M) for
Bn(τ )+1 and for Bn(τ )+2, and for all the future blocks solved after τBn(τ )+2 , since on the
equilibrium path all miners mine on the chain including Bn(τ )+2. In addition, m earns S
from double-spending.
Hence, the net benefit of following the equilibrium strategy rather than deviating is
S−max{1{m=m(Bn)};1{[m=m(Bn(τ ))]
⋂
[p(Bn(τ ))=p(Bn)]}}G(M).
(ii) Suppose that either zm occurs before τ (Bn(τ )+2) or zm occurs after τ (Bn(τ )+2) but m does
not solve Bn(τ )+2. To write m’s payoff, we will distinguish the two events when needed.
41 In that case a fork has started, so the reward for solving Bn is G(M−1), which is lower than G(M). This makes
the deviation even less profitable.
1706
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1707 1662–1715
The Blockchain Folk Theorem
If m deviated and chained Bn(τ+1) to Bn, his payoff is
Pr(zm >τ (Bn(τ )+2))E
⎡
⎣∫ zm
τBn(τ )+2
dNm(t)G(M)dt |zm >τ (Bn(τ )+2)
⎤
⎦
+No
m(τ (Bn))G(M)+G(M). (A40)
m earns G(M) for all the blocks solved up to τ (Bn), for Bn(τ )+1 (since it is on the original
chain), and for blocks solved after τ (Bn(τ )+2) if zm >τ (Bn(τ )+2).
If m=m(Bn(τ )) and Bn(τ ) is chained to p(Bn), if m deviated and chained Bn(τ )+1 to
Bn(τ ), his payoff is
Pr(zm >τ (Bn(τ )+2))E
⎡
⎣∫ zm
τBn(τ )+2
dNm(t)G(M)dt |zm >τ (Bn(τ )+2)
⎤
⎦
+No
m(τ (p(Bn)))G(M)+2G(M). (A41)
m’s fork has succeeded and he earns G(M) on all blocks solved up to p(Bn) on the original
chain, plus on Bn(τ ) and Bn(τ )+1.
If m played the equilibrium strategy and chained Bn(τ )+1 to p(Bn), his payoff is
– if zm occurs first,
No
m(τ (p(Bn)))(G(M−1)+G(1))+1{m=m(Bn)}G(M−1)+G(1). (A42)
In that case, m has created a one-block-long fork as long as the original chain
when he is hit by his liquidity shock. Therefore, he earns G(M−1)+G(1) for all
the blocks he solved on the original chain up to τ (p(Bn)). He also earns G(M−1)
for Bn if he solved it and G(1) for Bn(τ )+1.
– if Bn(τ )+2 is solved by another miner before zm,
No
m(τBn )G(M)+G(0)+E
⎡
⎣∫ zm
τBn(τ )+2
dNm(t)G(M)dt |zm >τ (Bn(τ )+2)
⎤
⎦.
(A43)
m’s fork fails, therefore he earns G(M) for all the blocks he solved on the
original chain up to τ (Bn) and for the blocks solved after τ (Bn(τ )+2).
Since G(M−1)=G(M),42 gains earned by m on all blocks solved up to τ (Bn)
are the same in the two previous events. Hence m’s payoff if he played the
equilibrium strategy when he does not solve Bn(τ )+2 is:
Pr(zm >τ (Bn(τ )+2))E
⎡
⎣∫ zm
τBn(τ )+2
dNm(t)G(M)dt |zm >τ (Bn(τ )+2)
⎤
⎦
+No
m(τBn )G(M). (A44)
Hence, the net benefit of following the equilibrium strategy rather than
deviating when m does not solve Bn(τ )+2 is the difference between Equation (A44)
42 Again, allowing for G(M−1)<G(M) only makes the condition under which the equilibrium exists more intricate.
1707
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1708 1662–1715
The Review of Financial Studies / v 32 n 5 2019
and the maximum of Equations (A40) and (A41), that is,
−
{
G(M)+(1{[m=m(Bn(τ ))]∩[p(Bn(τ ))=p(Bn)]}−1{m=m(Bn)})G(M)
}
. (A45)
Overall, m always follows the equilibrium strategy (including when he solved
Bn) if and only if
Pr[m=m(Bn(τ )+2)|m=m(Bn(τ )+1)][S−G(M)]
> (1−Pr[m=m(Bn(τ )+2)|m=m(Bn(τ )+1)])2G(M)
⇔S >
G(M)(2−Pr[m=m(Bn(τ )+2)|m=m(Bn(τ )+1)])
Pr[m=m(Bn(τ )+2)|m=m(Bn(τ )+1)]
. (A46)
Remark that Pr(m=m(Bn(τ )+2)|m=m(Bn(τ )+1)) is just the probability that at
any time m solves the next block, which we denote γ (m,τ ).
Proof of part (b). As earlier, Bn is the last block solved on the original chain. Suppose that at time
τ , miner m has just created a one-block-long fork as long as the original chain by solving Bn(τ )
that is chained to Bn’s parent, p(Bn). The relevant choice for m at τ is between chaining his next
block to Bn(τ ) (the equilibrium strategy) and chaining it to Bn (the only relevant deviation). The
reasoning is analogous to the proof of Proposition 4 part a), and hence we only sketch it here.
(i) Suppose that the next event is zm.
If m deviated and chained his block to Bn, the original chain remains the only active
chain and m’s payoff is
G(0)+No
m(τ (Bn))G(M), (A47)
where the first term is the reward for Bn(τ ).
If, instead, m followed the equilibrium strategy and chained his block to Bn(τ ), his
payoff is
G(1)+No
m(τ (p(Bn)))[G(M−1)+G(1)]+1{m=m(Bn)}G(M−1), (A48)
where the first term is the reward for Bn(τ ). Since G(M−1)+G(1)=G(M) and G(1)=0,
this deviation is not strictly profitable.
(ii) Suppose the next event is that m solves Bn(τ )+1.
If m deviated and chained his block to Bn, the original chain remains the only active
chain and Bn(τ ) becomes orphaned. Therefore, m’s expected payoff is
No
m(τ (Bn))G(M)+G(M)+S(τ (Bn(τ )+1))−L(τ (Bn(τ )+1))
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
, (A49)
where the second term is the reward for Bn(τ )+1. As earlier, L(τ (Bn(τ )+1)), is the expected
loss due to one of m’s blocks solved after τ (Bn(τ )+1) becoming orphaned. S(τ (Bn(τ )+1))
is the expected benefit from m spotting a double-spending opportunity after τ (Bn(τ )+1).
Note that both L(τ (Bn(τ )+1)) and S(τ (Bn(τ )+1)) are conditional on m’s information at
τ . For instance, if m already had a double-spending opportunity, then L(τ (Bn(τ )+1))=
S(τ (Bn(τ )+1))=0.
1708
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1709 1662–1715
The Blockchain Folk Theorem
If instead m played the equilibrium strategy and chained Bn(τ )+1 to Bn(τ ), the chain
including Bn(τ ) and Bn(τ )+1 becomes the longest one, and all miners hereafter chain their
blocks to it. Thus m’s expected payoff is at least equal to
No
m(τp(Bn))G(M)+2G(M)+S(τ (Bn(τ )+2))−L(τ (Bn(τ )+2))
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+2)
]
, (A50)
where the second term is the reward for Bn(τ )+1 and Bn(τ )+2. This payoff is higher by S if
m has the double-spending opportunity (the only case on the equilibrium path).
Since 1{m=m(Bn)} ≤1, m prefers to follow the equilibrium strategy.
Proof of part (c). The reasoning is analogous to the proof of Proposition 4, part (b), and we only
sketch it here. Bn is the last block on the original chain.
(1) First consider the case in which there is no fork of two consecutive blocks solved by the
same miner and longer than the original chain. For any miner m who does not have the
double-spending opportunity, the only two relevant choices are to chain his block to Bn
(the equilibrium strategy) and to create a fork and try solving two blocks in a row (the
only relevant deviation). As in the proof of Proposition 1, we can restrict attention to the
cases where the next event is that m is hit by a liquidity shock, or solves a block.
– Suppose the next event is zm. If m followed the equilibrium strategy, his payoff is
No
m(zm)G(M) (if there is no fork), or No
m(zm)(G(M−1)+G(1))=No
m(zm)G(M)
(if a fork has started). If m deviated, his payoff is at most equal to No
m(zm)G(M).
– Suppose the next event is that m solves Bn(τ )+1.
If m followed the equilibrium strategy and chained Bn(τ )+1 to Bn, his expected
payoff is
(No
m(τBn )+1)G(M)+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
+S(τ (Bn(τ )+1))−L(τ (Bn(τ )+1)). (A51)
If m deviated and chained Bn(τ )+1 to p(Bn), his expected payoff is[
No
m(τ (p(Bn))+1{m=m(Bn)}Pr(Bn =p(Bn(τ )+2))
+Pr(m=m(Bn(τ )+2))
]
G(M)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)G(M)dt |zm ≥τ (Bn(τ )+1)
]
+S(τ (Bn(τ )+1))−L(τ (Bn(τ )+1)). (A52)
Since No
m(τBn )≥No
m(τp(Bn))+1{m=m(Bn)}Pr(Bn =p(Bn(τ )+2)), m’s expected
payoff is larger if he followed the equilibrium strategy than if he deviated.
(2) Consider the case in which there is a fork starting with two blocks consecutively solved by
the same miner and longer than the original chain. If that fork occurred because one miner
exploited a double-spending opportunity, we are in the same situation as in Proposition 1,
and there is no profitable deviation from mining the longest chain.
If that fork occurred for other reasons (off the equilibrium path), a new fork could still
occur because of a double-spending opportunity in the future. In that case there is no
profitable deviation (in particular, trying to create a fork by solving two blocks in a row is
dominated by the equilibrium strategy), as shown in the first part of (c). �
1709
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1710 1662–1715
The Review of Financial Studies / v 32 n 5 2019
Proof of Proposition 7 Let τf be the time at which the nth block is solved on the original chain.
Hence, B
n(τf ) is the nth block on the original chain. We say that a chain “conforms” to technology
C if every block on that chain solved after τf is mined with technology C. We call “C-chain” the
chain that contains B
n(τf ), conforms to C, and preexists all other chains containing B
n(τf ) and
conforming to C. NC
m (τ ) is the number of blocks solved by m up to τ on the C-chain.
Our candidate equilibrium strategy specifies the following:
(a) For every τ <τf , miners chain their block to the last block on the original chain.
(b) For every τ ≥τf , miners choose C =0 and chain their block to the last block on the chain
that contains B
n(τf ), conforms to C =0, and preexists all other chains containing B
n(τf )
and conforming to C =0. If such a chain does not exist, miners choose C =0 and chain
their block to B
n(τf ).
We consider each case in turn.
(a) Suppose τ <τf . Then using the same reasoning as in Proposition 1, a deviation is not
profitable.
(b) Suppose τ ≥τf . As in the proof of Proposition 1, it is sufficient to compare payoffs when
m solves the next block, Bn(τ )+1.
If miner m played the equilibrium strategy, that is, chose C =0 and chained his block
to the last block on the 0-chain, or to B
n(τf ), his payoff is
N0
m(τ )(1+bm(0))G(M)+(1+bm(0))G(M)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)(1+bm(0))G(M)dt |zm ≥τ (Bn(τ )+1)
]
(A53)
The first term is m’s rewards from blocks solved on the 0-chain up to τ . The second term
is the reward from solving Bn(τ )+1, and the last term is the expected value of solving future
blocks on the 0-chain.
If instead, miner m deviated and chained his block to another block than the last one
on the 0-chain, using any technology C, his payoff is
N0
m(τ )(1+bm(0))G(M)+(1+bm(C))G(1)
+E
[∫ zm
τ (Bn(τ )+1)
dNm(t)(1+bm(0))G(M)dt |zm ≥τ (Bn(τ )+1)
]
(A54)
Hence, the only difference between m’s payoff if he deviates and his equilibrium payoff
is the reward from solving block Bn(τ )+1. This reward is (1+bm(C))G(1)=0 if he deviates
and (1+bm(0))G(M)>0 if he plays the equilibrium strategy. It follows that a deviation is
not profitable.
A symmetric argument sustains the equilibrium in which all miners choose C =1. �
Proof of Proposition 8. We use the same notation as in the proof of Proposition 7 for the C-chain.
To define our equilibrium strategies, we need to introduce the following condition, which we
will derive explicitly in the proof:
1710
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1711 1662–1715
The Blockchain Folk Theorem
Condition 3. For τ ≥τf , ωτ is such that for m>K∗
Pr(Nm(τ ′)−Nm(τ )=1)(G(K∗)−(1+b)G(M−K∗))≤
Pr(zm =τ ′)
⎧⎨
⎩
(N0
m(τ )−N0
m(τf ))(1+b)(G(M−K∗)−G(M−K∗ −1))
−(N1
m(τ )−N1
m(τf ))(G(K∗ +1)−G(K∗)))
⎫⎬
⎭, (A55)
and for m≤K∗
Pr(Nm(τ ′)−Nm(τ )=1)(G(K∗)−G(M−K∗))≥
Pr(zm =τ ′)
⎧⎨
⎩
(N0
m(τ )−N0
m(τf ))(G(M−K∗ +1)−G(M−K∗))
−(N1
m(τ )−N1
m(τf ))(G(K∗)−G(K∗ −1)))
⎫⎬
⎭. (A56)
Our candidate equilibrium strategy specifies the following:
(a) Before the hard fork: If τ <τf , miners chain their block to the last block on the original
chain.
(b) At the hard fork or after: If τ =τf , or if τ >τf , and Condition 3 holds, miners m≤K∗
choose C =1 and chain their block to B
n(τf ) if the 1-chain does not exist, and chain their
block to the last block solved on the 1-chain otherwise, while miners m>K∗ choose C =0
and chain their block to B
n(τf ) if the 0-chain does not exist, and chain their block to the
last block on the 0-chain otherwise.
(c) After the hard fork off-path: Suppose τ >τf and Condition 3 does not hold. Let �ω≡
ωτ \ωτf
(i.e., �ω contains the history of the game between τf and τ ). Then for every
τ ′ ≥τ , all miners play the strategy prescribed after history ωτ ′ \�ω that is defined in (b).
In playing strategies defined in (b), miners consider that the 0-chain and the 1-chain are
defined with respect to history ωτ ′ \�ω.
We need to prove that a miner does not have a profitable one-shot deviation from σ ∗. We
hereafter consider each case in turn.
Proof of part (a): Before the fork. Following the reasoning of the proof of Proposition 1, there
is no profitable deviation. In particular, it is not profitable for any miner m≤K∗ to choose C =1
before τf since any block solved with C =1 will, by definition, not belong to the 1-chain and yield
a reward of 0. Also, note that unlike in the proof of Proposition 3, miners’ actions before τf cannot
after the condition under which the hard fork occurs.
Proof of part (b): at or after the fork.
(i) Consider first a deviation by a miner m>K∗.
Any deviation other than chaining to the last block on the 1-chain is ruled out by similar
arguments as in Proposition 1. Hence check that m prefers to mine blocks on the 0-chain,
rather than on the 1-chain. As earlier, this one-shot deviation affects m’s payoff only if
the next stopping time τ ′, corresponds to two possible events: either m solves his block,
or zm occurs.
– Suppose miner m solves a block at τ ′, that is, Nm(τ ′)−Nm(τ )=1. If Condition 3
is still true at τ ′, since every miner, including m, reverts to the equilibrium strategy
from τ ′ on, the only impact of the deviation is that m earns G(K∗) for block Bn(τ ′)
instead of (1+b)G(M−K∗) under the equilibrium strategy. If Condition 3 is not
true at τ ′, given c), the impact of the deviation is that m earns 0 for block Bn(τ ′)
instead of (1+b)G(M−K∗) under the equilibrium strategy and loses all rewards
for blocks solved between τf and τ ′.
1711
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1712 1662–1715
The Review of Financial Studies / v 32 n 5 2019
– Suppose miner m is hit by a liquidity shock at τ ′, that is, zm =τ ′. Then his payoff
under the deviation is
(N0
m(τ )−N0
m(τf ))(1+b)G(M−K∗ −1)+(N1
m(τ )−N1
m(τf ))G(K∗ +1)
+N0
m(τf )(1+b)G(M) (A57)
instead of
(N0
m(τ )−N0
m(τf ))(1+b)G(M−K∗)+(N1
m(τ )−N1
m(τf ))G(K∗)
+N0
m(τf )(1+b)G(M) (A58)
under the equilibrium strategy.43 It follows that there is no profitable deviation if
Pr(Nm(τ ′)−Nm(τ )=1)(G(K∗)−(1+b)G(M−K∗))≤
Pr(zm =τ ′)
⎧⎨
⎩
(N0
m(τ )−N0
m(τf ))(1+b)(G(M−K∗)−G(M−K∗ −1))
−(N1
m(τ )−N1
m(τf ))(G(K∗ +1)−G(K∗)))
⎫⎬
⎭,
(A59)
which is exactly Inequality (A55) in Condition 3.
(ii) Consider next a deviation by a miner m≤K∗. A symmetric reasoning yields that there is
no profitable deviation if
Pr(Nm(τ ′)−Nm(τ )=1)(G(K∗)−G(M−K∗))≥
Pr(zm =τ ′)
⎧⎨
⎩
(N0
m(τ )−N0
m(τf ))(G(M−K∗ +1)−G(M−K∗))
−(N1
m(τ )−N1
m(τf ))(G(K∗)−G(K∗ −1)))
⎫⎬
⎭,
(A60)
which is exactly Equation (A56) in Condition 3.
Next, see that at τ =τf , NC
m (τ )=NC
m (τf ) for all miners. Inequality (A55) is then written:
(1+b)G(M−K∗)≥G(K∗)⇔b≥ G(K∗)
G(M−K∗)
−1. (A61)
Similarly, Inequality (A56) is then written:
G(K∗)≥G(M−K∗)⇔K∗ ≥ M
2
. (A62)
Furthermore, if miners adhere to the equilibrium strategy, then miners m≤K∗ always
mine the 1-chain so that if K∗ ≥ M
2 , Inequality (A56) in Condition 3 is true at any τ ≥τf .
Given that miners m>K∗ stick to the 0-chain, if b≥ G(K∗)
G(M−K∗) −1, inequality (A55) is
always verified after τf . Hence, for τ ≥τf , Condition 3 holds on the equilibrium path.
Proof of part c): After the fork off-path. Suppose ωτ is as described in (c). Then given that all
other players play the equilibrium, m’s payoff from adhering to the equilibrium strategy is as in
(b) above. Following the same logic as in the proof of (b), other deviations can be ruled out. �
43 Note that we used the assumption that ∀K , G(M)=G(M−K)+G(K) to write down miner m’s payoff from blocks
solved before τf .
1712
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1713 1662–1715
The Blockchain Folk Theorem
Proof of Proposition 9. By construction, D≥1 since 1
D
is the probability to solve the problem
at each trial. If the total computing capacity
∑
i∈Mhi was lower than 1/X, it would not be feasible
to have one block solved every X units of time. To ensure D≥1 with Equation (3), we impose the
technical constraint that ∑
i∈M
hi ≥1/X. (A63)
Substituting Equation (4), each miner’s program in Equation (16) is written
max
hm
hm∑
i∈Mhi
λmX
G(M)− cmhm
λm
, (A64)
which yields the following first-order condition:(∑
i∈Mhi
)−hm(∑
i∈Mhi
)2 G(M)
X
=cm. (A65)
See first that miner m’s participation constraint is∑
i∈M
hi ≤ G(M)
cmX
. (A66)
Evaluated at equilibrium, Equation (A65) yields(∑
i∈M
h∗
i
)
−h∗
m =
X
G(M)
cm
(∑
i∈M
h∗
i
)2
(A67)
(∑
i∈M
h∗
i
)
−cm
X
G(M)
(∑
i∈M
h∗
i
)2
=h∗
m. (A68)
Summing over miners
M
(∑
i∈M
h∗
i
)
−
(∑
i∈M
ci
)
X
G(M)
(∑
i∈M
h∗
i
)2
=
(∑
i∈M
h∗
i∈
)
(A69)
⇔ (M−1)
(∑
i∈M
h∗
i
)
=
(∑
i∈M
ci
)
X
G(M)
(∑
i∈M
h∗
i
)2
(A70)
⇔ (M−1)∑
i∈Mci
G(M)
X
=
∑
i∈M
h∗
m (A71)
⇔
∑
i∈M
h∗
i =
G(M)
X
M−1∑
i∈Mci
, (A72)
which is exactly Equation (18) in Proposition 9. Into participation constraint (A66), this yields
(M−1)cm ≤∑i∈Mci . Next, substituting Equation (18) into (A68), one gets
h∗
m =
(
G(M)
X
M−1∑
i∈Mci
)
−cm
X
G(M)
(
G(M)
X
M−1∑
i∈Mci
)2
.
=
(
G(M)
X
M−1∑
i∈Mci
)(
1−cm
X
G(M)
G(M)
X
M−1∑
i∈Mci
)
=
G(M)
X
M−1∑
i∈Mci
(
1−cm
M−1∑
i∈Mci
)
, (A73)
1713
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1714 1662–1715
The Review of Financial Studies / v 32 n 5 2019
which is exactly Equation (17) in Proposition 9. Last, replacing h∗
m into miner m’s objective
function, one obtains that his equilibrium profit is
G(M)
λmX
(
1− (M−1)cm∑
i∈Mci
)2
. (A74)
�
References
Biais, B., T. Foucault, and S. Moinas. 2016. Equilibrium fast-trading. Journal of Financial Economics
116(2):292–313.
Bonneau, J., A. Miller, J. Clark, A. Narayanan, J. A. Kroll, and E. W. Felten 2015. SoK: Research perspectives
and challenges for Bitcoin and cryptocurrencies. 2015 IEEE Symposium on Security and Privacy, IEEE, 104–21.
Catalini, C., and J. Gans. 2016. Some simple economics of the blockchain. NBER Working Paper No. 22952.
Carlsten, M., H. Kalodner, S. M. Weinberg, and A. Narayanan. 2016. On the instability of Bitcoin without the
block reward. Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security,
ACM, 154–67.
Chiu, J., and T. Koeppl. 2019. Blockchain-based settlement for asset trading. Review of Financial Studies,
32:1716–53.
Cole, H., and T. Kehoe. 2000. Self-fulfilling debt crises. Review of Economic Studies 67(1):91–116.
Cong, L. W., and Z. He. 2019. Blockchain disruption and smart contracts. Review of Financial Studies,
32:1754–97.
Crawford, V. 1998. A survey of experiments on communication via cheap talk. Journal of Economic Theory
78(2):286–98.
Dimitri, N. 2017. Bitcoin mining as a contest. Ledger 2. http://doi.org/10.5195/ledger.2017.96.
Duggan, J. 2012. Noisy stochastic games. Econometrica 80(5):2017–45.
Dwork, C., and M. Naor. 1993. Pricing via processing or combatting junk mail. In E. F. Brickell, ed., Advances
in Cryptology, CRYPTO’92, Lecture Notes in Computer Science 740, 139–47. Berlin: Springer.
Evans, D. S. 2014. Economic aspects of Bitcoin and other decentralized public-ledger currency platforms.
Coase-Sandor Working Paper Series in Law and Economics, University of Chicago Law School.
Eyal, I., and E. Gün Sirer. 2014. Majority is not enough: Bitcoin mining is vulnerable. In N. Christin and R.
Safavi-Naini, eds., Financial Cryptography and Data Security: FC 2014, Lecture Notes in Computer Science
8437, 436–54. Berlin: Springer.
Garay J. A., A. Kiayias, and N. Leonardos. 2015. The Bitcoin backbone protocol: analysis and applications. In E.
Oswald and M. Fischlin, eds., Advances in Cryptology, EUROCRYPT 2015, Lecture Notes in Computer Science
9057, 281–310. Berlin: Springer.
Glode, V., R. Green, and R. Lowery. 2012. Financial expertise as an arms race. Journal of Finance 67(5):1723–59.
Harvey, C. R. 2016. Cryptofinance. Working Paper.
Khapko M., and M. Zoican. 2017. Smart settlement. Working Paper.
Kroll, J. A., I. C. Davey, and E. W. Felten. 2013. The economics of Bitcoin mining, or Bitcoin in the presence of
adversaries. In Proceedings of WEIS Vol. 2013.
Lamport L., R. Shostak, and M. Pease. 1982. The byzantine generals problem. ACM Transactions on
Programming Languages and Systems (TOPLAS) 4(3):382–401.
Lerner, J., and J. Tirole. 2002. Some simple economics of open source. Journal of Industrial Economics
50(2):197–234.
1714
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
http://doi.org/10.5195/ledger.2017.96
[14:54 19/3/2019 RFS-OP-REVF180096.tex] Page: 1715 1662–1715
The Blockchain Folk Theorem
Mailath, G. J., and L. Samuelson. 2006. Repeated games and reputations: Long run relationships. Oxford: Oxford
University Press.
Malinova, K., and A. Park. 2017. Market design with blockchain technology. Working Paper.
Miller, A., and J. J. LaViola Jr. 2014. Anonymous byzantine consensus from moderately-hard puzzles: A model
for Bitcoin. https://socrates1024.s3.amazonaws.com/consensus.pdf.
Nakamoto, S. 2008. Bitcoin: A peer-to-peer electronic cash system. http://bitcoin.org/bitcoin.pdf.
Narayanan, A. 28 July 2015. Analyzing the 2013 Bitcoin fork: Centralized decision-making saved the day.
http://freedom-to-tinker.com/2015/07/28/analyzing-the-2013-bitcoin-fork-centralized-decision-making-saved-
the-day.
Pass R., L. Seeman, and A. Shelat. 2017. Analysis of the blockchain protocol in asynchronous networks. In
J.-S. Coron and J. Buus Nielsen, eds., Advances in Cryptology- EUROCRYPT 2017, Lecture Notes in Computer
Science 10211, 643–73. Cham: Springer.
Pease, M., R. Shostak, and L. Lamport. 1980. Reaching agreement in the presence of faults. Journal of the ACM
27(2):228–34.
Raskin, M., and D. Yermack. 2016. Digital currencies, decentralized ledgers, and the future of central banking.
NBER Working Paper No. 22238.
Saleh, F. 2017. Blockchain without waste: Proof-of-stake. Working Paper.
Teutsch, J., S. Jain, and P. Saxena. 2016. When cryptocurrencies mine their own business. In J. Grossklags and
B. Preneel, eds., Financial Cryptography and Data Security, FC 2016, Lecture Notes in Computer Science 9603,
499–514. Berlin: Springer.
Tirole, J. 1982. On the possibility of speculation under rational expectations. Econometrica 50(5):1163–81.
Tirole, J. 1985. Asset bubbles and overlapping generations. Econometrica 53(6):1499–1528.
Yermack, D. 2017. Corporate governance and blockchains. Review of Finance 21(1):7–31.
1715
D
ow
nloaded from
 https://academ
ic.oup.com
/rfs/article/32/5/1662/5427771 by guest on 15 April 2023
https://socrates1024.s3.amazonaws.com/consensus.pdf
http://bitcoin.org/bitcoin.pdf
http://freedom-to-tinker.com/2015/07/28/analyzing-the-2013-bitcoin-fork-centralized-decision-making-saved-the-day
http://freedom-to-tinker.com/2015/07/28/analyzing-the-2013-bitcoin-fork-centralized-decision-making-saved-the-day
	1 A Primer on Blockchains
	1.1The blockchain protocol
	1.1.1 Centralized versus decentralized ledgers
	1.1.2 Proof-of-work
	1.1.3 Miners
	1.1.4 Difficulty
	1.2Forks
	1.2.1 Information delays
	1.2.2 Double-spending
	1.2.3 Software upgrades
	1.2.4 Unintended forks
	1.2.5 Intended forks
	2 Basic Model
	2.0.1 Miners and pools
	2.0.2 Mining technology
	2.0.3 Blockchain
	2.0.4 Stopping times
	2.0.5 Action space
	2.0.6 Payoffs
	2.0.7 States
	2.0.8 Strategies
	2.0.9 Equilibrium
	3 Equilibrium Analysis of the Basic Model
	4 Enriching the Model
	4.1Information delays
	4.2Double-spending
	4.3Upgrades
	5 Computing Capacity and Difficulty
	5.1Difficulty
	5.2Computing capacity
	6 Conclusion