untitled
 
 
Yustus Eko Oktian 
Department of Computer 
Engineering  
Dongseo University 
Busan, Republic of Korea 
yustus.oktian@gmail.com 
Ivan Kristianto Singgih 
Department of Industrial and 
Management Engineering 
Pohang University of Science and 
Technology (POSTECH) 
Pohang, Republic of Korea 
ivanksinggih@postech.ac.kr 
*corresponding author 
Friska Natalia Ferdinand 
Department of Information System 
Universitas Multimedia Nusantara 
Tangerang, Indonesia 
friska.natalia@umn.ac.id 
 
 
 
 
Abstract—The blockchain-based system is widely being 
studied and implemented for dealing with various real problems 
from securing money transactions, data sharing in healthcare, 
and supply chain in businesses. In this study, we study a 
conceptual framework of a serious game for teaching how the 
mining process occurs in the blockchain using the proof-of-work 
consensus. The purpose of this game is to educate blockchain 
newcomers or developers the importance of mining within a 
short time, how the consensus works, the increasing problem 
complexity, and how coins can be obtained as the result of the 
mining. We believe that this conceptual game can contribute to 
the development of blockchain technology in general. 
Keywords—blockchain; education; mining; serious game 
I.  INTRODUCTION 
Many researchers have developed blockchain-based 
systems in various sectors, e.g., securing bank payments [1], 
or assuring traceability in the food chain [2]. The reason being 
is because blockchain has advantages in providing tamper-
proof and transparent information sharing. Instead of using a 
centralized third party for verifying the transaction data, 
multiple actors, in a distributed manner, participate in the 
verification process that is called mining. The quality of the 
shared information is assured through a comprehensive and 
rigorous verification process that follows a particular 
calculation and updating rules. 
Commonly, many companies and organizations utilize 
serious games for workers’ training purposes involving system 
explanations to users. For example, learning how to assign 
customers to restaurant tables [3], understanding the process 
of train rail maintenance and its difficulties [4], and teaching 
statistics [5]. In this study, we extend the applicability of 
serious games by proposing a game that can help beginners to 
understand how the mining works in the blockchain. Notably, 
we are talking about Bitcoin’s proof-of-work consensus 
algorithm. The goal of our study is to attract more people’s 
attention to the blockchain system, which, in turn, will foster a 
better understanding and development of blockchain for users 
and developers. The rest of this paper is described as follows. 
Sections II and III provide some basic concepts of the 
blockchain and serious games. Section IV lists some related 
studies in the blockchain game. Section V explains the 
architecture of proposed serious games, including actors and 
required data transfers within the game. Section VI shows the 
conclusion of the study. 
II. BLOCKCHAIN 
Blockchain is a peer-to-peer distributed ledger that shares 
information among all participants in its network [6]. A 
participant creates a transaction, and then broadcast it to other 
peers. The receiving peers may gather multiple transactions 
from many users and form a block. We can identify a block by 
its hash. Furthermore, It has a corresponding hash of the 
previous block that refers to the monetary state before the 
current block. The next block will also reference the hash of 
the current block, thereby creating a chain, as illustrated in [7] 
using Fig. 1. Each block comprises of two parts: block's 
 
Fig. 1. Block structure in blockchain 
177978-1-7281-0726-4/19/$31.00 ©2019 IEEE
2019 5th International Conference on New Media Studies
Bali, Indonesia | October 09-11, 2019
Serious Game for Blockchain Education Purposes 
(using Proof-of-Work consensus of Bitcoin) 
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:59 UTC from IEEE Xplore.  Restrictions apply. 
header and block's body. We store a list of the transactions are 
in the body. Meanwhile, we save the metadata in the header. 
Finally, the node who construct the block broadcast the block 
to other peers. 
Since any node in the network can send transactions to the 
other nodes and generate blocks arbitrarily. There will be 
many generated blocks scattered in the network. Therefore, 
there must be a method to make all of the participants agree on 
the same block. In other words, the participants have to 
achieve a consensus on how the distributed ledger looks like 
[8]. In Bitcoin, they use an algorithm called 'Proof of Work.' 
In Proof of Work, all participants have to race to find a 
valid hash for the subsequent block. First, a participant gathers 
transactions into a single block and puts this transaction data 
in the block body. After that, he constructs the block header, 
which includes a timestamp, hash of the Merkle root tree from 
the transactions, the hash of the previous block, and a nonce 
[9]. He then hashes all of that information using the SHA-256 
algorithm [10]. The resulting hash needs to match the 
difficulty target [6]. If the target is not satisfied, he can try 
changing the value of the nonce repeatedly until the resulting 
hash is satisfied [11, 12]. When he finds the correct hash, he 
broadcast the block with a valid hash to other participants.  
When one participant receives broadcasted block from 
other participants, he verifies whether the block contains a 
valid hash. If the hash is legit, he extends his current block 
with the one he just received, and continue racing to generate 
a hash for the next blocks.  
Bitcoin compensates a node which generates a valid block 
with coin rewards from the system [13], and also from the 
included transactions fee in the block he made [10]. This 
reward mechanism encourages other participants to continue 
racing to find the valid hash for the subsequent block. The 
way we find the valid block is analogous to the way we find 
gold in the mining field. Therefore, people sometimes refer to 
this process as mining and the participants who work to find a 
valid hash as miners. 
During Bitcoin operation, a node may receive two valid 
blocks, and they have the option to extend the current block 
with both of them. Thus, it creates a fork, where there are two 
versions of the ledger in the network. Honest nodes can 
unintentionally create this fork, for example, if two nodes find 
a valid block at the same. However, this is rare to happen. 
What most likely to happen is that a malicious node (with very 
high computing capability) intentionally creates a fork to 
perform the Double Spending attack. Bitcoin solves this fork 
problem by a 'Longest Chain Policy,' in which nodes have to 
pick a block with the most extended block number when they 
receive multiple blocks at the same time [14]. 
Ironically, the only way to find the correct hash is by 
brute-forcing (i.e., try one combination after another for all 
possible outcome). Therefore, the miners need considerable 
computational power to do so [10]. The Bitcoin software 
always guarantees that any node can find this hash within 
approximately 10 minutes. This delay is necessary to assure 
that any broadcasted transactions can arrive at any node 
throughout the world, where the latency can vary across the 
globe. However, if more players join the network, participants 
can find a valid block in less than 10 minutes. In result, the 
network has higher chances of getting forks and inconsistency 
among nodes. Therefore, Bitcoin has a difficulty target that the 
developer can increase or decrease to maintain the stability of 
the network [15]. 
III. SERIOUS GAMES 
Serious games are defined in [16] as “games that do not 
have entertainment, enjoyment or fun as their primary 
purpose”. Serious games can be used for the following 
purposes: training, advertising, simulation, and education [17]. 
Through the interaction with the game, the users are 
encouraged to think and make decisions that are useful for 
providing a wide variety of learning values. Some examples of 
serious games are freight transport mode selection [18], 
hostage saving game [19], and yard crane scheduling game 
[20]. 
The following characteristics need to be listed when 
designing a serious game: 
• Market of the game, e.g., military, healthcare, 
education, politics, advertising, etc [16]. 
• Target of game, that can be differentiated into general 
public (anyone), professional (workers from the 
targeted market), and students [16]. 
• Purpose of game, e.g., informing basic types of rail 
maintenance and making users aware of difficulties in 
regular maintenance in a rail maintenance game [4]. 
• Dataflow and activity considered in the studied 
problem [21]. 
• Scenarios in the game that represents the increased 
difficulty in the considered problems. 
Chamberlin [22] listed some recommendations for 
developing games with learning purposes as follows: 
• The game should provide feedback for the users as they 
advance through the game. Scores and rewards can 
motivate users to play better. 
• The level of user’s involvement and decision making 
must be increased during the game. 
• Challenges are required through an increase in game 
complexity and problems to be solved, but not 
exceeding the user capabilities. 
• The educational information needs to be repeated in 
various places with different approaches. 
• The users need to be involved during game 
development through discussions and regular game 
testing. 
IV. LITERATURE REVIEW 
Search for related studies about blockchain game is 
initially conducted from some databases with search keywords 
presented in Table I. 
178
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:59 UTC from IEEE Xplore.  Restrictions apply. 
TABLE I.  FIELDS AND KEYWORDS FOR SEARCH 
Database Searched 
fields 
Keywords 
for search 
Number of 
found 
papers 
Number of 
selected 
papers 
Web of  
Science [23] 
Title 
blockchain 
AND game 
9 1 
Springer [24] Title 0 0 
ScienceDirect 
[25] 
Title, 
abstract, 
keywords 
11 0 
 
Most papers discuss strategies used during the mining 
process (e.g., negotiation game and game theory concepts in 
blockchain). Among all found papers, the only study about 
blockchain gaming is [26]. In [26], blockchain is used to track 
and verify players’ assets and prevents cheats in a multi-player 
game. 
In addition to those studies, more searches are conducted. 
The closest studies with ours are The Blockchain Game 
[27,28], The Cryptocurrency Board Game [29], and Rhythm 
Dungeon [30].  Christianson [27,28] proposed a classroom 
game activity for teaching blockchain to students. In the game, 
a case for storing students’ scores is considered. Players act as 
miners to verify students’ grade information. A hash number 
is calculated using the value of the first letter in the course ID, 
a public key assigned to the student, the grade, a part of the 
previous hash number, and a nonce that is represented by 
values between 1 and 3. The hash number is valid if it can be 
divided by 3 [31], and its value is checked by all other players 
in the game. Our study differs with [27,28] in terms of the 
complexity of the hash number generation, consideration of 
real transaction data, and computer-based data visualization to 
speed up to process of understanding the blockchain by the 
players. In The Cryptocurrency Board Game [29], players 
compete by buying and upgrading machines to perform 
mining process and gather the most amount of Bitcoins. The 
main purpose of the developed board game is creating values 
using money that exists in the cryptocurrency market and 
investing back the obtained money into the cryptomarket [32]. 
In Rhythm Dungeon [30], players use game characters to fight 
enemies by pressing buttons following given drum beats. The 
enemies are generated from other games using a smart 
contract. Defeating enemies allow players to improve their 
character skills. After playing in this decentralized blockchain 
environment, players can upload their characters to let them 
appear in other players’ games. Our study is different with 
[29] and [30] because our game focuses on providing 
education about mining processes in blockchain (reading and 
verifying transaction data, updating blockchain node network, 
and collecting rewards) for the players. 
Other different concepts of blockchain game are using 
blockchain’s tokens for buying and selling processes when 
playing the games (the tokens are stored in players’ e-wallet) 
[33] (e.g., CryptoKitties [34], Bitpet [35]), using smart 
contract for removing middleman during the payment process 
(e.g., EOSlots [36]), using blockchain to verify the 
authenticity of exchanged goods in the game (e.g., Gods 
Unchained [37]), players’ identity management [38], and 
teaching blockchain concepts through fun quizzes with simple 
adventurous story game (e.g., CryptoZombies Origins: What 
is Blockchain? [39]). Review of more games is provided in 
[40]. 
Based on the authors’ knowledge, our study is the first that 
propose an educational game for learning mining process in 
blockchain. Our proposed game provides detailed information 
related to data that must be validated, updated blockchain 
node network, and reward collection reports to support an 
exciting and competitive learning process of the players. 
V. BLOCKCHAIN MINING GAME 
We propose a conceptual framework for developing a 
blockchain mining game. The purposes of the game are: 
• Provide education about how a blockchain system 
works, including how to perform the mining process, 
how consensus is achieved, and how the users collect 
the rewards. 
• Encourage users to conduct further studies about 
blockchain. 
The target users of the game are general public (including 
professionals and students). Professionals (e.g., software 
developers) that has no much background about blockchain 
but somehow want to develop new blockchain-related 
businesses can learn about blockchain through the game and 
develop useful blockchain software for solving real problems. 
Meanwhile, students from computer engineering, financial, 
and industrial engineering related fields can learn about 
blockchain basics that are useful when they act as users of 
blockchain systems or learn about how to develop a part of the 
blockchain system (e.g., user interface, hashing functions, data 
management, simulation, etc.). Our proposed framework is 
shown in Fig. 2. 
The framework is divided into two parts, the main 
framework, in which the blockchain mining activities are 
performed, and game condition-based updating framework 
that is a supporting part of the main framework. The updating 
framework is used to ensure that required input data are stored 
and updated and allow the game to maintain its attractiveness 
(e.g., by designing game problems that match the user’s 
capability). The detailed explanation for each part is presented 
below. 
A. Game Condition-based Updating Framework 
This part manages the user information and other 
blockchain system-related information. The game condition-
based updating framework is as follows: 
1) U1. Storing and updating user information: A user 
must register and log in before playing the game. A unique 
user ID is provided and used to identify the user throughout 
the whole game (U1.1). Starting from when a user registers 
into the game, a reward score accumulating process begins 
(U1.2). This reward score tracking is used to evaluate the 
user’s performance in the game. An updated reward list is 
continuously presented for all users throughout the game to 
motivate users making better decisions by winning more 
179
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:59 UTC from IEEE Xplore.  Restrictions apply. 
rewards. For assuring that users with similar computation 
capabilities compete with each other, the users are grouped 
based on their total collected rewards (U1.3) after playing the 
game for a certain amount of time (when one session of the 
game, e.g., 30 minutes, is completed, all transaction data and 
ledgers are reset, and another new fresh game is started). The 
reward list is generated for each user group. After a certain 
predetermined time, the groups are updated. The user with an 
updated group (moving to a higher or lower group) are 
notified, and the user information in the reward list of the new 
group is presented to the user. 
2) U2. Storing and updating system information: The 
system stores how often a new block is validated and added 
into the common or distributed ledger (U2.1). In the real 
situation, it is expected that a new block is added every 10 
minutes (t), which might be too long for our game. Thus, a 
shorter time might be set, e.g., 1 minute. A difficulty target is 
updated (U2.2) after a certain time period, e.g., 10 minutes, to 
assure that the time interval between a new block addition is 
as close as possible with the time t. If a new block is generated 
to fast, the difficulty target is increased, and vice versa. 
B. Main Framework 
The main framework consists of 4 parts: 
1) M1. Monetary transaction generation: Users in this 
game deal with money transfer information between given n 
persons in the game. A transaction must have the amount and 
sender-receiver information (M1.1 and M1.2). Each 
transaction is generated randomly during the game with a 
given interarrival time between the generation of transactions. 
The system keeps track of each person’s balance account and 
generates a feasible amount of money to be transferred, 
considering the updated balances. Each new transaction is 
added into a table in each user’s monitor right after the 
transaction is generated.  
2) M2. Block generation: Each user can access the 
information and determine which transaction he/she want to 
include into a new block. A block can consist of up to 5 
transactions. This flexibility is to allow users generating more 
hash numbers, considering that the hash numbers are 
generated based on the contents of the generated block. A user 
can include the transaction into the block by dragging each 
specific transaction into a block shown in the monitor (M2.1). 
After the user confirms the block contents, the user must click 
a “generating hash number” button for generating a new hash 
number (M2.2). If the generated number is is less than the 
difficulty target that is generated by the system, the user is 
notified that a feasible hash number is found, the block 
generation is completed, and the user can continue generating 
other new blocks. An online hash number generator can be 
used for generating the numbers [41] after the game 
automatically copies the following values into the generator 
link: transaction contents, nonce, and timestamp. The 
timestamp itself is updated during the game continuously, e.g., 
in every 1 second. 
3) M3. Block validation: A newly generated block is 
broadcasted to all users (M3.1). The information is added into 
a “new unvalidated blocks” list, and a notification is given to 
the users to allow them to determine whether to start 
validating the new block or continue mining another new 
block. If the validating user is already or currently generating 
another new block that contains partially or fully same 
transactions with the new one, the validating user is notified to 
encourage him/her to validate this new block first. The users 
then validate the new block (M3.2). If more than a certain 
number of users validate a new block, e.g., 51% of the users, 
then the block is validated. The validated block is used to 
update the block structure in the system (M3.3). The validated 
block and new block structure are then shared to all users. If 
the block contains any same transactions with the one that is 
being dealt with any other user, that user is notified and 
his/her not yet generated or validated block is removed 
automatically. 
4) M4. Reward distribution and update: A user that 
generates the validated block is given a reward, e.g., 1.25 
coins, every time his/her block is validated (M4.1). At the 
 
Fig. 2. Blockchain mining game framework 
180
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:59 UTC from IEEE Xplore.  Restrictions apply. 
same time, the reward list in the corresponding user group is 
updated, and the information is shared to all users (M4.2). The 
users can then evaluate their performance compared with all 
other users and determine his/her next strategy for generating 
new blocks, e.g., selecting which transaction to be dealt with 
first. 
TABLE II.  THE DIFFICULTY LEVEL OF THE GAME 
Difficulty 
Level 
Considered Functions 
Automatic update of 
user’s own distributed 
ledger when a new block 
is validated 
Must validate a new block 
when a new block is generated 
(cannot continue generating 
other new blocks before 
completing the validation) 
Easy Yes Yes 
Medium No Yes 
Hard No No 
 
C. Evaluation Report and Game Level Update 
At the end of a game session, each user is provided with 
information of his/her performance, especially their total 
amount of collected reward and their placement in the reward 
scoreboard. Additional information can be provided in the 
evaluation report, e.g., number of own generated blocks, 
number of own validated blocks, average block generation 
time, etc, that are measured in relative with other users’ 
performances. Beside automatically regroup users with similar 
reward scores, the user can always select whether to change 
the game difficulty. Considered levels of game difficulties and 
their characteristics are shown in Table II. 
D. User Interface of the Game 
We propose the following user interfaces (in Figs. 3-9). 
The user interfaces are developed based on the framework in 
Fig. 2. 
 
 
 
 
 
Fig. 3. User interface (actors’ initial fund) 
 
Fig. 4. User interface (list of transactions) 
 
Fig. 5. User interface (broadcasted nodes) 
 
Fig. 6. User interface (player’s blockchain network 
before hash number generation) 
181
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:59 UTC from IEEE Xplore.  Restrictions apply. 
 
 
 
VI. CONCLUSIONS 
In this study, a serious game for learning the blockchain 
mining process is proposed. A game story is designed with 
required mining-related activities. In the proposed game, the 
user’s excitement is assured by allowing users to compete with 
other users that have the same level of skills. A performance 
evaluation report is evaluated at the end of the game to allow 
and relative performance result is also shown in real time to 
motivate users finding better ways to mine the blocks. 
REFERENCES 
[1] X. Xu, Q. Lu, Y. Liu, L. Zhu, H. Yao, and A. V. Vasilakos, “Designing 
blockchain-based applications a case study for imported product 
traceability,” Future Generation Computer Systems, vol. 92, pp. 399–
406, 2019. 
[2] B. A. Tama, B. J. Kweka, Y. Park, and K.-H. Rhee, “A critical review of 
blockchain and its current applications,” Proceedings of International 
Conference on Electrical Engineering and Computer Science, 2017. 
[3] H. Mizuyama, A. Yoshida, and T. Nonaka, “A serious game for eliciting 
tacit strategies for dynamic table assignment in a restaurant,” in 
Intersections in Simulation and Gaming, A. Naweed, M. Wardaszko, E. 
Leigh, and S. Meijer, Eds. Switzerland: Springer, 2018, pp. 394–410. 
[4] D. Alderliesten, K. Vale kait , N. Z. Salamon, J. T. Balint, and R. 
Bidarra, “MainTrain: a serious game on the compexities of rail 
maintenance,” in Games and Learning Alliance, M. Gentile, M. Allegra, 
and H. Söbke, Eds. Switzerland: Springer, 2019, pp. 82–89. 
[5] T. Barbosa, S. Lopes, C. P. Leão, F. Soares, and V. Carvalho, “Serious 
game for teaching statistics in higher education: storyboard design,” in 
Interactivity, Game Creation, Design, Learning, and Innovation, A. L. 
Brooks, E. Brooks, and C. Sylla, Eds. Switzerland: Springer, 2019, pp. 
169–175. 
[6] R. Azzi, R. K. Chamoun, and M. Sokhn, “The power of a blcokchain-
based supply chain,” Computers & Industrial Engineering, vol. 135, pp. 
582–592, 2019. 
[7] J. Waldman, “Blockchain Fundamentals,” 
https://msdn.microsoft.com/en-us/magazine/mt845650.aspx, accessed in 
July 13th, 2019. 
[8] Y. Wang, M. Singgih, J. Wang, and M. Rit, “Making sense of 
blockchain technology: how will it transform supply chains,” 
International Journal of Production Economics, vol. 211, pp. 221–236, 
2019. 
[9] R.-Y. Chen, “A traceability chain algorithm for artificial neural 
networks using T-S fuzzy cognitive maps in blockchain,” Future 
Generation Computer Systems, vol. 80, pp. 198–210, 2018. 
[10] K. Chatterjee, A. Goharshady, and A. Pourdamghani, “Hybrid mining: 
exploiting blockchain’s computational power for distributed problem 
solving,” Proceedings of ACM Symposium on Applied Computing, 
April 2019. 
[11] I. Eyal and E. G. Sirer, “Majority is not enough: bitcoin mining is 
vulnerable,” Proceedings of Eighteenth International Conference on 
Financial Cryptography and Data Security, 2014. 
[12] J. Herrera-Joancomartí, “Research and challenges on bitcoin 
anonymity,” in Data Privacy Management, Autonomous Spontaneous 
Security, and Security Assurance, J. Garcia-Alfaro, J. Herrera-
Joancomartí, E. Lupu, J. Posegga, A. Aldini, F. Martinelli, and N. Suri, 
Eds. Switzerland: Springer, 2015, pp. 3–16. 
[13] W. Di, L. Xiang-dong, Y. Xiang-bin, P. Rui, and L. Gang, “Equilibrium 
analysis of bitcoin block withholding attack: a generalized model,” 
Reliability Engineering and System Safety, vol. 185, pp. 318–328, 2019. 
[14] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” 
https://www.ussc.gov/sites/default/files/pdf/training/annual-national-
training-seminar/2018/Emerging_Tech_Bitcoin_Crypto.pdf, accessed in 
July 13th, 2019. 
[15] K. J. O’Dwyer and D. Malone, “Bitcoin mining and its energy 
footprint,” Proceedings of 25th IET Irish Signals & Systems Conference 
2014 and 2014 China-Ireland International Conference on Information 
and Communications Technologies, 2014. 
[16] D. Djaouti, J. Alvarez, and J.-P. Jessel, “Classifying serious games: the 
G/P/S model,” in Handbook of Research on Improving Learning and 
 
Fig. 7. User interface (player’s blockchain network after 
infeasible hash number generation) 
 
Fig. 8. User interface (player’s blockchain network after 
feasible hash number generation and broadcasting) 
 
Fig. 9. User interface (scoreboard) 
182
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:59 UTC from IEEE Xplore.  Restrictions apply. 
Motivation Through Educational Games: Multi-disciplinary 
Approaches, P. Felicia, Eds. Hershey: IGI Global, 2011. 
[17] S. Shabanah, “Computer games for algorithm learning,” in handbook of 
Research on Improving Learning and Motivation through Educational 
Games: Multidisciplinady Approaches, P. Felicia, Eds. Hershey: IGI 
Global, 2011, pp. 1036–1063. 
[18] M. R. Brooks, S. M. Puckett, D. A. Hensher, and A. Sammons, 
“Understanding mode choice decisions: a study of Australian freight 
shippers,” Maritime Economics & Logistics, vol. 14, pp. 274–299, 2012. 
[19] R. Klemke, S. Ternier, M. Kalz, B. Schmitz, and M. Specht, “Immersive 
multi-user decision training games with ARLearn,” in Open Learning 
and Teaching in Educational Communities, C. Rensing, S. de Freitas, T. 
Ley, and P. J. Muñoz-Merino, Eds. Switzerland: Springer, 2014, pp. 
207–220. 
[20] A. Verbraeck, S. Kurapati, and H. Lukosch, “Serious games for 
improving situational awareness in container terminals,” in Logistics and 
Supply Chain Innovation: Birdging the Gap between Theory and 
Practice, H. Zijm, M. Klumpp, U. Clausen, and M. ten Hompel, Eds. 
Switzerland: Springer, 2016, pp. 413–431. 
[21] J. Hense, M. Klevers, M. Sailer, T. Horenburg, H. Mandl, and W. 
Günthner, “Using gamification to enhance staff motivation in logistics,” 
in Frontiers in Gaming Simulation, S. A. Meijer and R. Smeds, Eds. 
Switzerland: Springer, 2014, pp. 206–213. 
[22] B. Chamberlin, “Creating entertaining games with educational content: 
case studies of user experiences with the children’s website, food 
detectives fight bac!,” Doctoral Dissertation, University of Virginia, 
2003. 
[23] Web of Science, “Basic Search,” https://www.webofknowledge.com, 
accessed in September 5th, 2019. 
[24] SpringerLink, “Search,” https://link.springer.com/, accessed in 
September 5th, 2019. 
[25] ScienceDirect, “Search,” https://www.sciencedirect.com/, accessed in 
September 5th, 2019. 
[26] S. Kalra, R. Sanghi, and M. Dhawan, “Blockchain-based real-time cheat 
prevention and robustness for multi-player online games,” Proceedings 
of the 14th International Conference on Emerging Networking 
Experiments and Technologies, 2018. 
[27] J. S. Christianson, “The Blockchain Game: A great new tool for your 
classroom,” https://www.ibm.com/blogs/blockchain/2019/04/the-
blockchain-game-a-great-new-tool-for-your-classroom/, accessed in 
September 5th, 2019. 
[28] J. S. Christianson, “Resources: The Blockchain Game,” 
https://www.christiansonjs.com/the-blockchain-game/, accessed in 
September 5th, 2019. 
[29] Cryptum Network, “Blockchain: The Cryptocurrency Board Game,” 
https://cryptum.co/cryptum-board-games/blockchain-the-
cryptocurrency-board-game/, accessed in September 5th, 2019. 
[30] T. Wang, S. Zhang, X. Wu, and W. Cai, “Rhythm dungeon: a 
blockchain-based music roguelike game,” Proceedings of the 14th 
International Conference on the Foundations of Digital Games, 2019. 
[31] J. S. Christianson, “The Blockchain Game,” 
https://www.youtube.com/watch?v=v58PDrkNIQk&feature=youtu.be, 
accessed in September 5th, 2019. 
[32] Cryptum Network, “Why Board Games? What Kind of Market is 
That?,” https://cryptum.co/why-board-games-on-the-blockchain/, 
accessed in September 5th, 2019. 
[33] A. Bridgwater, “How Blockchain Works In Video Games,” 
https://www.forbes.com/sites/adrianbridgwater/2019/03/13/how-
blockchain-works-in-video-games/#12bdf3605e65, accessed in 
September 5th, 2019. 
[34] N. Bowles, “CryptoKitties, Explained ... Mostly,” 
https://www.nytimes.com/2017/12/28/style/cryptokitties-want-a-
blockchain-snuggle.html, accessed in September 5th, 2019. 
[35] Reuters Plus, “Blockchain-based Crypto Game Bitpet Announce their 
Impending Airdrop Event,” 
https://www.reuters.com/brandfeatures/venture-capital/article?id=38296, 
accessed in September 5th, 2019. 
[36] T. Min and W. Cai, “A security case study for blockchain games,” 
Proceedings of IEEE Games Entertainment & Media Conference, 2019. 
[37] M. Orcutt, “This Blockchain-Based Card Game Shows Us the Future of 
Ownership,” https://www.technologyreview.com/s/613944/this-
blockchain-based-card-game-shows-us-the-future-of-ownership/, 
accessed in September 5th, 2019. 
[38] M. Brusov, “Digital Assets Beyond Bitcoin: Three Blockchain 
Opportunities In Tech,” 
https://www.forbes.com/sites/forbestechcouncil/2019/08/07/digital-
assets-beyond-bitcoin-three-blockchain-opportunities-in-
tech/#5dce265674b9, accessed in September 5th, 2019. 
[39] Dilanka, “How to Teach Your NON-NERD Friends (and Family) How 
Blockchain Works — While Having Fun,” https://medium.com/loom-
network/how-to-teach-your-non-nerd-friends-and-family-how-
blockchain-works-while-having-fun-71f21aae7d03, accessed in 
September 5th, 2019. 
[40] T. Min, H. Wang, Y. Guo, and W. Cai, “A security case study for 
blockchain games,” Proceedings of IEEE Conference on Games, 2019. 
[41] PasswordsGenerator.net, “SHA256 Hash Generator,” 
https://passwordsgenerator.net/sha256-hash-generator/, accessed in July 
7th, 2019. 
 
183
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:59 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize false
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Required"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice