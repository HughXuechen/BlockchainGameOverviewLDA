Research on the Storage and Sharing Model of Electronic License Based on Blockchain
Research on the Storage and Sharing Model
of Electronic License Based on Blockchain
Sheping Zhai1,2, Xi Li1(B), and Yunlong Wang1
1 School of Computer Science and Technology, Xi’an University of Posts
and Telecommunications, Xi’an 710121, China
2 Shaanxi Key Laboratory of Network Data Analysis and Intelligent Processing, Xi’an
University of Posts and Telecommunications, Xi’an 710121, China
Abstract. Traditional electronic license management system has some problems,
such as data fraud and difficulty in sharing. To solve these problems, a blockchain-
based electronic license storage and sharing model are proposed. Firstly, build
alliance chain, and use the characteristics of blockchain to ensure the authenticity
of electronic license information. Secondly, the El Gamal digital signature scheme
is improved. Finally, the PBFT consensus algorithm is improved. The analysis and
results show that the model can effectively and quickly realize the secure storage
and sharing of electronic licenses.
Keywords: Blockchain · Electronic license · Digital signature · Practical
Byzantine fault tolerance algorithm (PBFT)
1 Introduction
License materials commonly used in people’s lives will be uniformly filed and managed
by license issuing agencies and government departments, providing valid certificates for
handling related affairs [1]. However, the commonly used paper authentication materials
will be lost and damaged, which will make the licensed materials lose their original
authentication ability. If stored in the form of electronic files, the above problems can
be effectively solved [2].
At present, the centralized electronic licensemanagement platform has the following
two problems: First, the data is easy to be tampered with; Second, the sharing efficiency
of electronic license is low [3]. Therefore, how to solve the above problems is the research
focus of the government service industry.
Blockchain has the characteristics of non-tampering, non-forgery, etc. [4], which
can be used to realize secure and credible electronic license management. SUN et al.
[5] proposed a conceptual model of shared services based on blockchain. The research
only focused on the concept and model, but did not propose a feasible solution. NOE
et al. [6] proposed a distributed peer-to-peer e-government system framework based
on blockchain, but this framework has some shortcomings in data sharing and data
processing speed.
This work was supported by Xi’an University of Posts and Telecommunications Graduate
Innovation Fund (CXJJLY202032).
© The Author(s), under exclusive license to Springer Nature Switzerland AG 2022
Q. Xie et al. (Eds.): ICNC-FSKD 2021, LNDECT 89, pp. 1321–1330, 2022.
https://doi.org/10.1007/978-3-030-89698-0_136
http://crossmark.crossref.org/dialog/?doi=10.1007/978-3-030-89698-0_136&domain=pdf
https://doi.org/10.1007/978-3-030-89698-0_136
1322 S. Zhai et al.
2 Related Work
2.1 Blockchain
Block in blockchain generally includes two parts: block head and block, as shown in
Fig. 1. Blockchain technology uses P2P network, data encryption, timestamp, distributed
consistency and incentive mechanism to avoid the problems of high trust, low efficiency
and low security of data storage in centralized system [7].
Previous 
block
Next 
block
version number Block header
Previous 
block
Timesta-
mp Nonce Target 
hash
Merkle root
Hash 1234
Number of 
transactions
Hash 12 Hash 34
Block body
Hash 1 Hash 2 Hash 3 Hash 4
T1 T2 T3 T4
Genesis 
block
New block 
at the end
Fig. 1. Blockchain structure
2.2 El Gamal Algorithm
El Gamal is an asymmetric key cryptosystem invented by Taher El Gamal in 1985 [8]. El
Gamal algorithm is a non-deterministic signature algorithm based on discrete logarithm
problem, and its security depends on the difficulty of calculating the numerical model of
discrete large prime numbers [9]. El Gamal algorithm is divided into three stages: key
generation, encryption and decryption.
2.3 PBFT Consensus Algorithm
Consistency algorithm ensures the data consistency of blockchain system, and data can
only be stored in blockchain after reaching agreement among nodes. At present, the
mainstream consensus algorithms include job certification (PoW) [11], share certifica-
tion (PoS) [12] and so on. Considering the influence of efficiency and Byzantine fault
tolerance (BFT) on the system, Castro and Liskov put forward practical Byzantine fault
tolerance (PBFT) [13], which greatly reduced the complexity of Byzantine fault toler-
ance algorithm and enabled it to be implemented in the system [14]. In a system with
n nodes in total, the maximum error node number f tolerated by PBFT algorithm is
(n−1)/3.
3 System Model
As shown in Fig. 2, the proposed model has five alliance chain nodes, multiple elec-
tronic license information owners, business processing departments and ElGamal digital
signaturemodule. First, registerwith the client; Secondly, the user submits relevant infor-
mation, if the information is complete, it enters the information audit department, if the
Research on the Storage and Sharing Model of Electronic License 1323
information is complete and legal, it is encrypted, and the corresponding parameters and
keys are generated by El Gamal digital signature algorithm, and signed for verification;
Finally, the electronic license is generated by the license generation department, stored
in the blockchain, and reaches other department nodes through the consensus of the
master node.
Client Information 
Transceiving 
Department
Information 
Review 
Department
License 
Generation 
Department
Business processing departments
Civil 
Affairs 
Node
Tax node
Public 
Security 
Node
Social 
Security 
Node
Master node
Consortium 
Blockchain
SignatureSign Verify
InformationInformationInformation
Data
Private key Public key
El Gamal Digital signature 
a. Information 
registration
b. Complete 
information
b'. Incomplete 
information
c. The 
information 
is legal and 
signedc'. Information is illegal
d. Generate 
electronic 
license
e. Store the electronic 
certificate on the blockchain 
and Consensus on the master 
node to other nodes
f. Query the electronic certificate 
Fig. 2. Secure storage and sharing model of electronic license based on blockchain
4 Implementation Scheme Design
4.1 License Data Structure
The license data generally includes the user’s real identity information, license infor-
mation, etc. and the license data SSL to be stored and shared is constructed, so that the
structure of SSL is shown in Formula (1):
SSL={Identity,LicenseInformation,E(Identity)} (1)
Among them, Identity is the real identity information of the user. LicenseInformation
refers to license information. E(Identity) means that the real identity information is
encrypted by El Gamal digital signature algorithm.
4.2 Improved El Gamal Digital Signature Scheme
The security of El Gamal digital signature algorithm generally depends on the selection
of random numbers. The improved digital signature algorithm adds a random number
based on the random number selection of the traditional algorithm. The main purpose is
to make the traditional algorithm more complex and difficult to decipher. The specific
algorithm is as follows:
(1) Key Generation
Algorithm 1: Key Generation Algorithm.
1324 S. Zhai et al.
Input: Random number N , prime number P , primitive M , *
PM Z∈ . 
Output: Key.
Step 1: Select random number N , *
1PN Z −∈ ; 
Step 2: Calculate modNS M P= , take ( )h m as the private key on the basis of 
modNS M P= , and calculate ( ) modh mQ M P= ; 
Step 3: Outputting the public key as Q and the private key as N . 
(2) Signature Generation
Algorithm 2: Signature Generation Algorithm.
Input: Random numbers A and B , prime number P , primitive M , *
PM Z∈ . 
Output: the signature of message D and the signature formula.
Step 1: Select and add random numbers A and B , *
PA Z∈ and *
PB Z∈ ; 
Step 2: Calculate and generate the corresponding signature formula 
mod modBAX M P Y M P= =、 ; 
Step 3: On the basis of the formula modBY M P= , the private key and message 
plaintext are taken as the input of hash function, then ( )( ) ( )1 mod 1H h m NX A P−= − − can 
be changed into ( )( ) ( )1 mod 1H h m S NX NY B P−= − − − ; 
Step 4: Calculate ( ) modh m SX Y HS X Y M P≡ and 
( ) ( )
( )( ) ( )
mod 1
mod 1
K A BX NS P
H Y BX h m P
⎧ = − − −⎪
⎨
= + + −⎪⎩
; 
Step 5: Output signature ( ), , ,X H S K , output signature formula
( )( ) ( ){ ( ) ( )}mod , mod , mod , mod 1 , mod 1BANS M P X M P Y M P H Y BX h m P K A BX NS P= = = = + + − = − − − . 
(3) Signature Verification
Algorithm 3: Signature Verification Algorithm.
Input: ( ) ( )( ) ( )mod mod 1h m SX Y HS X Y M P H Y BX h m P≡ = + + −、 , prime P , primitive M , *
PM Z∈ . 
Output: verification result.
Step 1: Calculate mod modEM P XQ P≡ and ( )E H Y NS K= − + + ; 
Step 2: Through the mod modEM P XQ P≡ and ( )E H Y NS K= − + + could discern 
equation ( )mod modH Y NS KEM P M P− + +≡ . 
Step 3: Assume that signature be true, According to the formula 
( )( ) ( ) ( ) ( ){ ( ) }mod 1 , mod 1 , mod modH Y NS KEH Y BX h m P K Q BX NS P M P M P− + += + + − = − − − ≡ available equa-
tion ( )( ) ( )( ){ -mod mod modY BX h m Y NS BX NS h m AEM P M P M P+ + − + − +≡≡ ; 
Step 4: From the formula
( )
( )( ) ( )( )-
mod , mod
mod mod mod
h mA
Y BX h m Y NS BX NS h m AE
X M P Q M P
M P M P M P+ + − + − +
⎧ = =⎪
⎨
≡≡⎪⎩
available equation, 
At this time; 
Step 5: If all equations are true, output the valid result of the signature and the 
verification formula mod modEM P XQ P≡ ; Otherwise, no output is made.
Research on the Storage and Sharing Model of Electronic License 1325
4.3 Improved PBFT Consensus Algorithm
(1) Credit model and voting mechanism
In the improved PBFT algorithm, the trust model and voting mechanism are adopted
to reduce the probability of abnormal nodes acting as master nodes.
1) Credit value and node status
In the credit model, the node credit value is set to [0,300]. If the node successfully
generates a valid block, five points are added. At the same time, according to the credit
value, the status identifier is assigned to each node, as shown in Table 1.
Table 1. Node status setting table.
Credit value Node state
[0–20) Invalid status
[20–60) Untrusted state
[60–120) Error state
[120–200) Normal conditions
[200–300] Trusted state
2) Node state transition
Node state transition refers to the changes of nodes in five states in Table 1. At the
beginning, the node is in normal state, and the valid blocks generated many times can be
upgraded to trusted state; If the credit value of the node is higher than the good threshold
and the data block fails due to the shutdown behavior, the node will become abnormal;
If a node has malicious behavior in the process of consistency, the node will become
untrustworthy, and if these behaviors continue, it will be converted into an invalid state.
The node state transition is shown in Fig. 3.
Generate valid blocks many 
times to reach the trusted thresholdTrusted node
Invalid node
Normal node
Untrusted node
Check
Exception nodeDowntime or malicious behavior
Generate invalid block
Generate valid blocks multiple
times to reach an acceptable threshold
Generate invalid block
Trusted 
node 
downtime 
Downtime or malicious behavior
Fig. 3. Node state transition
1326 S. Zhai et al.
3) Voting Mechanism
The main function of the voting mechanism is to establish a master node together
with the credit model. In this paper, a new voting calculation formula is proposed, in
which only trusted nodes and normal nodes have all the rights to participate in the primary
election, voting and consensus process of primary election. The formula for calculating
the final score of participating nodes is shown in Formula (2):
Sm = Cm ∗ α +
(∑m
t=1
Ct
300
∗ Vt
)
∗ β (2)
In the above formula, the total score is mainly divided into basic score and voting
score. The basis is divided into the product of the credit value of candidate nodes and
parameter α, and the voting is divided into the ratio of the credit value of voting nodes
to the total credit value, and the voting situation and parameter β are calculated. The
credit value of candidate nodem is Cm, the credit value of voting node t is Ct , the voting
situation of node t is expressed by Vt , and support, opposition and abstention correspond
to 1, −1 and 0 respectively.
(2) Optimize the consistency protocol
The improved PBFT consensus algorithm mainly realizes consensus among partici-
pating consensus nodes, and optimizes the three-stage protocol into two stages, namely,
consensus proposal and consensus confirmation, as shown in Fig. 4.
Client
Replica node
Replica node1
Replica node2
Replica node3
Request Consistency-
Proposal
Consistency-
Confirm Reply
×
Fig. 4. Improved PBFT algorithm flow
(3) Optimize the view switching protocol
In order to ensure the safety and reliability of the master node, once the master node
is found to be untrustworthy, the replica node can apply for view switching and re-select
the master node by changing the view. The specific process is as follows:
Algorithm 4: Optimize the view switching protocol algorithm.
Research on the Storage and Sharing Model of Electronic License 1327
5 Experimental Analysis
5.1 Safety Analysis
The model proposed in this paper uses an improved El Gamal digital signature scheme.
This paper analyzes the security of the system by simulating various attacks. The specific
analysis is as follows:
If the attacker intercepts the signature of the sent message, on the premise of
ensuring the security of the public key and the private key, according to the formula
H = (Y + BX + h(m)) mod (P − 1), the real message signature with hash function
value is added to replace the message in the form of forged signature, but it is difficult to
find two hash values of the same message according to the hash function characteristics,
so the replaced message is not the original message, which does not conform to the
digital signature of the original signature.
If the attacker has intercepted the signature of the sent message and wants to replace
the forged signature in a random way, assuming that the attacker wants to replace it
with a random number, then according to the formula X = MA mod P, the formula{
Q = Mh(m) mod P
H = (Y + BX + h(m)) mod (P − 1)
can be obtained, and the forged signature needs
to be selected from four unknowns in the equations, so the attacker’s signature is invalid
and rejected in the verification process.
It can be seen from the security analysis that the improved El Gamal digital signature
algorithm improves the data security.
5.2 Performance Analysis
In order to test the performance of the model proposed in this paper, the consensus delay,
throughput and communication overhead are tested in the same network. Figure 5 shows
the comparison of the consensus delay between PBFT algorithm and the improved PBFT
algorithm.
1328 S. Zhai et al.
Fig. 5. Experimental results of consensus delay
Delay means the time required from block generation to confirmation of new block,
and the delay formula is shown in (3):
Delay = TA − TB (3)
In which TA stands for block confirmation time, TB stands for block generation time.
In Fig. 5, the delay of the traditional PBFT algorithm is about 220 ms, while the delay of
the improved PBFT algorithm is 245 ms, because it takes a certain time to determine the
master node through the credit model and voting mechanism when the system just runs.
Finally, the delay of the improved PBFT algorithm is stable at about 145 ms, which is
significantly lower than that of the PBFT algorithm.
Comparison of communication overhead between traditional PBFT algorithm and
improved PBFT algorithm is shown in Fig. 6. The communication overhead of traditional
PBFT algorithm and improved PBFT algorithm is tested with 10, 20, 30, 40 and 50
nodes respectively. The ordinate is the communication times generated once on average,
and the abscissa is the number of nodes in the system. The change of communication
times between PBFT algorithm and improved PBFT algorithm with the increase of node
number is compared. It can be seen from Fig. 6 that with the increase of the number of
nodes in the system, the communication overhead of the improved PBFT algorithm is
much smaller than that of the original PBFT algorithm.
Fig. 6. Experimental results of communication overhead
Research on the Storage and Sharing Model of Electronic License 1329
In the blockchain system, throughput refers to the transaction processing capacity of
the system per unit time, which can measure the concurrent processing capacity of the
system, and is usually expressed by TPS. As shown in formula (4):
TPS = Transaction�t
�t
(4)
�t is the block time, and Transaction�t represents the number of transactions
included in the block time. In the experiment, 5, 10, 15, 20, 25, 30, 35, 40, 45 and 50
nodes were used to test the throughput of the original PBFT algorithm and the improved
PBFT algorithm. In Fig. 7, the throughput of the PBFT algorithm decreases with the
increase of nodes in the system, while the throughput of the improved PBFT algorithm
gradually increases at first, but when the number of nodes exceeds 35, the performance
of the improved PBFT algorithm will remain stable.
Fig. 7. Throughput experiment results
6 Conclusions
To solve the problems of poor security and low sharing efficiency of traditional electronic
license storage, El Gamal digital signature technology is improved to ensure user pri-
vacy, PBFT consensus algorithm is improved, and a blockchain-based electronic license
storage and sharing model is designed. Finally, the model is verified and analyzed by
experiments, and the results show that the model has good performance and can meet
the basic requirements.
Acknowledgements. Thanks to the special fund construction project of key disciplines in colleges
and universities in Shaanxi province, which laid the foundation for the related work in this paper.
References
1. Lnes, S., Ubacht, J., et al.: Blockchain in government: benefits and implications of distributed
ledger technology for information sharing. Govern. Inf. Q. 34(3), 355–364 (2017)
2. Kshetri, N.: Blockchain’s roles in strengthening cybersecurity and protecting privacy.
Telecommun. Policy 41(10), 1027–1038 (2017)
1330 S. Zhai et al.
3. Janssen, M., Wagenaara, R.W.: An analysis of a shared services centre in e-government. In:
37th Hawaii International Conference on System Sciences, pp. 556–564. IEEE Computer
Society, Hawaii (2004)
4. Weng, X.Y.: Research on cloud computing data sharing system based on blockchain. Comput.
Eng. Appl. 57(3), 120–124 (2021)
5. Sun, J.J., Yan, J.Q., Zhang, K.Z.K.: Blockchain-based sharing services: what blockchain
technology can contribute to smart cities. Financ. Innov. 2(1), 3–7 (2016)
6. Elisa, N., Yang, L., Chao, F., et al.: A framework of blockchain-based secure and privacy-
preserving e-government system. Wireless Netw. 12(3), 174–182 (2018)
7. Wang, F., Shen, S.B.: A trusted data sharing solution based on blockchain. Comput. Technol.
Dev. 30(9), 115–121 (2020)
8. El Gamal, T.: A public key cryptosystem and a signature scheme based on discrete logarithms.
IEEE Trans. Inf. Theory 31(4), 469–472 (1985)
9. Zhang, H.Y., Zhagn, J.: Research and design of an improved El Gamal digital signature
scheme. Comput. Eng. Sci. 31(12), 35–37+80 (2009)
10. Szydlo, M.: Merkle tree traversal in log space and time. In: International Conference on
Advances in 2004, pp. 541–554. The College of Information Sciences and Technology,
Springer Berlin Heidelberg (2004)
11. Nakamoto, S.: Bitcoin: A Peer-to-Peer Electronic Cash System. https://bitcoin.org/bitcoin.
pdf. Accessed 10 Apr 2021
12. Larimer, D.: Delegated Proof-of-Stake. http://www.bts.hk/dpos-baipishu.html. Accessed 10
Apr 2021
13. Castro,M., Liskov, B.: Practical byzantine fault tolerance and proactive recovery. ACMTrans.
Comput. Syst. 20(4), 398–461 (2002)
14. Yuan, Y., Ni, X.C., Zeng, S., et al.: Development status and prospect of blockchain consensus
algorithm. J. Autom. 44(11), 2011–2022 (2018)
https://bitcoin.org/bitcoin.pdf
http://www.bts.hk/dpos-baipishu.html
	Research on the Storage and Sharing Model of Electronic License Based on Blockchain
	1 Introduction
	2 Related Work
	2.1 Blockchain
	2.2 El Gamal Algorithm
	2.3 PBFT Consensus Algorithm
	3 System Model
	4 Implementation Scheme Design
	4.1 License Data Structure
	4.2 Improved El Gamal Digital Signature Scheme
	4.3 Improved PBFT Consensus Algorithm
	5 Experimental Analysis
	5.1 Safety Analysis
	5.2 Performance Analysis
	6 Conclusions
	References