3-E2020071(BTTA).dvi
Journal of Systems Science and Information
Jun., 2021, Vol. 9, No. 3, pp. 255–265
DOI: 10.21078/JSSI-2021-255-11
A Hashing Power Allocation Game with and without Risk-free Asset
Yukun CHENG
School of Business, Suzhou University of Science and Technology, Suzhou 215009, China
E-mail: ykcheng@amss.ac.cn
Donglei DU
Faculty of Management, University of New Brunswick, NB Canada, Fredericton E3B 9Y2, Canada
E-mail: ddu@unb.ca
Qiaoming HAN∗
School of Economics & Management, Nanjing Tech University, Nanjing 211800, China
E-mail: qmhan@zufe.edu.cn
Abstract Miners in various blockchain-backed cryptocurrency networks compete to maintain the
validity of the underlying distributed ledgers to earn the bootstrapped cryptocurrencies. With limited
hashing power, each miner needs to decide how to allocate their resource to different cryptocurrencies
so as to achieve the best overall payoff. Together all the miners form a hashing power allocation game.
We consider two settings of the game, depending on whether each miner can allocate their fund to a
risk-free asset or not. We show that this game admits unique pure Nash equilibrium in closed-form for
both settings.
Keywords game and Nash equilibrium; blockchain; cryptocurrency; mining; risk-neutral; risk-averse
1 Introduction
With the advancement of the blockchain technologies (a.k.a., distributed ledger technology),
distributed applications (DApps) are burgeoning. Starting from the bitcoin, many altcoins have
been proposed to achieve different goals. At the time of this writing, there are almost 1,600
cryptocurrencies with market capitalization totaling approximate $456 billion1, and among
them Bitcoin, Ethereum and Ripple are the top three market-caped crypto-currencies.
Miners in these peer-to-peer networks play the important role of maintaining the integrity
of the underlying blockchains, incentivized to earn digital currencies and transaction fees. Min-
ing involves executing a distributed consensus protocol on how to achieve agreement of the
underlying ledger when there is no central authority in presence. Among them, proof-of-work
Received August 12, 2020, accepted January 18, 2021
The first author’s research is supported by the National Nature Science Foundation of China (11871366), USTS
Think Tank for Urban Development, Qin Lan Project for Young Academic Leaders and Qin Lan Project for Key
Teachers. The second author’s research is supported by the Natural Sciences and Engineering Research Council
of Canada (NSERC) (06446), and NSFC (11771386 and 11728104). The third author’s research is supported by
NSFC (11771386 and 11728104)
∗Corresponding author
1According to https://coinmarketcap.com/.
256 CHENG Y K, DU D L, HAN Q M.
(PoW)[1] and proof-of-stake (PoS)[2] are the widely adopted consensus protocols by existing
crypto-currencies.
For example, in the PoW framework, during a given average time period (e.g., every 10
minutes for Bitcoin), miners participate in a winner-take-all competition to extend the next
block on the longest block chain by solving some cryptographic hashing proof-of-work, a math-
ematical puzzle. As a concrete case, in Bitcoin network, the puzzle goes as follows[3]: Given a
difficulty d > 0, a challenge c and a nonce x (usually bit-strings), a function
Fd(c, x) → {TRUE, FALSE}
is called a Proof-of-Work (PoW) function if it has the following two properties: (i) Fd(c, x) is
fast to compute, given d, c, and x; and (ii) for fixed parameters d and c, finding x such that
Fd(c; x) = TRUE is computationally difficult but feasible. The difficulty d is used to adjust the
time to find such an x.
With miners equipped with certain computing power (a.k.a., hashing power in Bitcoin net-
work) and a large number of different cryptocurrencies to mine, they are facing the challenge
on how to allocate their computing power to compete in mining each cryptocurrency to maxi-
mize their expected payoffs. Due to the competitive nature of the mining protocol, all miners
together form a non-cooperative allocation game. This work aims to answer the following
questions associated with the aforementioned game:
1) Does Nash Equilibrium (NE) exist?
2) Is NE unique?
3) Can the NE be computed efficiently?
We offer affirmative answers to all three questions for our game. We show that the NE
allocation is unique and follows a proportional rule (Theorem 1) where each miner allocates
his total computing power to a given cryptocurrency proportional to the percentage of the
award among all currencies, while his expected revenue is proportional to the percentage of the
hashing power possessed and the total award.
The equilibrium analysis of the allocation game is of both theoretical and practical relevance.
On the theoretical side, we set up a succinct backbone model which admits a closed-form solu-
tion via non-trivial technical analysis. On the practical side, we provide insights which can help
mining pool managers or individual miners in making the most important operational/tactical
decisions, namely how to allocate the hashing power when facing under reward and peer com-
petition.
To filter out the most salient factors that are of managerial relevance, we made some simpli-
fications in the modelling, such as the the assumption that the cost to purchase certain hashing
power is independent from the price of the currencies. However, this type of deviations from
the realism on one hand may be a good approximation to reality and on the other hand is to
be expected in an early attempt to apprehend an otherwise complex problem. Also, this work
focuses on static games, and leave the discussion of dynamic games to future research.
A Hashing Power Allocation Game with and without Risk-free Asset 257
2 Relevant Literature
Our computing power allocation game is relevant to several areas, including game theory,
portfolio management, and market equilibrium models.
Several blockchain games (mainly non-cooperative in nature) are proposed in the recent
literature to address and improve upon the limitations of existing distributed consensus mecha-
nism in various crypt-currencies[4–8], while some other games (mainly non-cooperative in nature)
focus on the application layer without invoking any protocol technicality, such as the mining
pool games[7, 9–12]. Our computing power allocation game is non-cooperative and focuses on
the application layer; namely the allocation of mining resource. Furthermore, these games all
deal with a single currency, which is a major difference from the game investigated in this work.
Dimitri[13] studied a special case of our game where there is only one currency available for
mining. [14] is a survey on this line of research.
Our computing power allocation game is similar to the extensively-studied general blotto
game in the game theory literature[15–18], but the two models have completely different utility
functions to suit different applications in mind.
The resource allocation nature is also relevant to the large literature on portfolio management[19],
and the market equilibrium model, in particular the Fisher market[20, 21]. However, the port-
folio management literature usually assume that the supply of assets is independent from the
allocation decision. And the Fisher market models focus on finding market-clearing prices and
the allocation rule at market equilibrium.
The readers are referred to the survey[22] for research perspectives and challenges for Bitcoin
and cryptocurrencies.
We describe the the hashing power allocation game in Section 3. We consider games without
and with a risk-free asset in Sections 4 and 5, respectively.
3 The Hashing Power Allocation Game
There are n miners N = {1, 2, · · · , n} with computing powers h = (h1, h2, · · · , hn)T ∈ R
n
+
(the cost to possess such a computing power, expressed in fiat currency such as US dollar) and
there are m cryptocurrencies M = {1, 2, · · · , m} available for mining. When there is a risk-free
asset with return r, we introduce a dummy labeled as currency 0.
Miner i ∈ N allocates xij ≥ 0 of his computing power to mine cryptocurrency j ∈ M . Let
xi0 be the hashing power allocated to the dummy risk-free asset whose return is known as r for
any amount allocated. Evidently, we have
∑
j∈M
xij + xi0 = hi, ∀i ∈ N.
For each cryptocurrency j ∈ M , the n miners play a winner-take-all game and the winner
is rewarded with uncertain reward vector R = (R1, R2, · · · , Rm)T (expressed in fiat currency
such as US dollar) with mean vector E[R] = µT = (µ1, µ2, · · · , µm)T. Miner i ∈ N wins
cryptocurrency j ∈ M with probability proportional to its allocated computing power
pij =
xij
∑
ℓ∈N xℓj
, (1)
258 CHENG Y K, DU D L, HAN Q M.
and his profit for mining cryptocurrency j ∈ M is given by
πij(x) =



Rj − xij , w.p. pij ,
−xij , w.p. 1 − pij .
Moreover the profit obtained with the risk-free asset is given by
πi0 = rxi0.
Therefore miner i’s total profit is given by
πi(x) =
∑
j∈M
πij(x) + πi0 =
∑
j∈M
Rjpij −
∑
j∈M
xij + rxi0
=
∑
j∈M
Rj
xij
∑
ℓ∈N xℓj
− hi + (1 + r)xi0 = RTyi(x) − hi + (1 + r)xi0,
where x = (x1 x2 · · · xn)T = (xij)n×m ∈ R
n×m
+ and
yi(x) =





xi1
x11+···+xn1
...
xim
x1m+···+xnm





, ∀i ∈ N. (2)
The mean profit of miner i is given by
ER[πi(x)] = µTyi(x) − hi + (1 + r)xi0 . (3)
4 Game without Risk-free Asset
We recall the result without a risk-free asset. When miners allocate all their funds to mining,
the NE for the miners game can be obtained by solving the following n optimization problems
based on (3): For any given i ∈ N ,
max
xi·∈R
m
+

µTyi(x) :
∑
j∈M
xij = hi

 . (4)
Theorem 1 (see [23]) Assume that
∑m
1 µℓ ≥
∑n
1 hℓ. The hashing power game with
risk-neutral miners (4) admits the following unique NE
x∗
ij =
µj
∑m
1 µℓ
· hi, ∀i ∈ N, ∀j ∈ M,
along with each miner i’s expected profit
ER[πi(x
∗)] =
hi
∑n
1 hℓ
·
m
∑
1
µℓ − hi = hi
∑m
1 µℓ −
∑n
1 hℓ
∑n
1 hℓ
, ∀i ∈ N.
This result was obtained in our conference proceedings[23]. However the proof therein con-
tains some errors. In this journal version we corrected all errors and include the full proof of
Theorem 1 in the appendix.
A Hashing Power Allocation Game with and without Risk-free Asset 259
5 Game with a Risk-free Asset
The main contribution of this work is to include a risk-free asset. When miners have the
option to allocate their funds to both mining and the risk-free asset, the NE for the miners
game can be obtained by solving the following n optimization problems based on (3): For any
given i ∈ N ,
max
xi·∈R
m
+

µTyi(x) − hi + (1 + r)xi0 :
∑
j∈M
xij + xi0 = hi

 . (5)
Let h̄i = hi − xi0. This problem is equivalent to the following parametric problem:
max
0≤h̄i≤hi
max
xi·∈R
m
+

µTyi(x) − (1 + r)h̄i + rhi :
∑
j∈M
xij = h̄i

 . (6)
Using Theorem 1, the last problem is reduced to the following optimization problem
max
0≤h̄i≤hi
[
h̄i
∑m
1 µℓ
∑n
1 h̄ℓ
− (1 + r)h̄i
]
. (7)
Theorem 2 Assume that h1 ≤ h2 ≤ · · · ≤ hn. The solution to problem (7) is as follows.
(i) If
∑ n−1
1
hℓ·
∑m
1
uj
(
∑
n
1
hℓ)
2 ≥ 1 + r, then h̄i = hi for i = 1, 2, · · · , n. This case includes all those
miners who spend their entire cash.
(ii) If n−1
n2 ·
∑m
1 uj < (1 + r)h1, then h̄i = ĥ = n−1
(1+r)n2
∑m
1 uj, i = 1, 2, · · · , n. This case
includes all those miners who invest the same amount on the cryptocurrencies and invest
the remaining amounts into the bond, earning an interest of r, respectively.
(iii) Otherwise, there exists an index 1 ≤ k ≤ n − 1 such that
1 + r
∑m
1 uj
>
∑k
1 hℓ + (n − k − 1)hk+1
(
∑k
1 hℓ + (n − k)hk+1
)2 ≥
∑k−1
1 hℓ + (n − k)hk
(
∑k−1
1 hℓ + (n − k + 1)hk
)2 ≥
1 + r
∑m
1 uj
.
Find hk ≤ ĥ < hk+1 such that
∑k
1 hℓ + (n − k − 1)ĥ
(
∑k
1 hℓ + (n − k)ĥ
)2 =
1 + r
∑m
1 uj
,
then
h̄i =



hi, i = 1, 2, · · · , k,
ĥ, i = k + 1, k + 2, · · · , n.
In this case, miners are divided into two classes: The first class {1, 2, · · · , k} contain those
miners who spend their entire cash; and the second class {k + 1, k + 2, · · · , n} contains all
those miners who invest the same amount on the cryptocurrencies and invest the remaining
amounts into the bond, earning an interest of r, respectively.
260 CHENG Y K, DU D L, HAN Q M.
The hashing power game with a risk-free asset (5) admits the following unique NE
x∗
ij =



µj
∑m
1 µℓ
· h̄i, ∀i ∈ N, ∀j ∈ M,
hi − h̄i, ∀i ∈ N, j = 0.
along with each miner i’s expected payoff
ER[πi(x
∗)] =
h̄i
∑n
1 h̄ℓ
·
m
∑
1
µℓ − (1 + r)h̄i + rhi = h̄i
∑m
1 µℓ − (1 + r)
∑n
1 h̄ℓ
∑n
1 h̄ℓ
+ rhi, ∀i ∈ N.
Proof Let fi(h̄i) = h̄i
∑ m
1
µℓ
∑
n
1
h̄ℓ
− (1 + r)h̄i, then f ′
i(h̄i) =
(
∑n
1
h̄ℓ−h̄i)
(
∑
n
1
h̄ℓ)2
·
∑m
1 µℓ − (1 + r). If
∑ n−1
1
hℓ·
∑
m
1
uj
(
∑
n
1
hℓ)
2 ≥ 1 + r, then f ′
i(h̄i) ≥ 0 at h̄i = hi for i = 1, 2, · · · , n, so the solution to (7) is
h̄i = hi for i = 1, 2, · · · , n. Otherwise, some or all h̄i = ĥ at the solution (7) so that f ′
i(h̄i) ≥ 0
for i = 1, 2, · · · , n. The conclusion is obtained.
We make the following observations based on Theorem 2:
1) At the NE, the return keeps the same for all miners, that is,
∑ m
1
µℓ
∑
n
1
h̄ℓ
− (1 + r).
2) At the NE, the marginal profit f ′
i(h̄i) =
(
∑n
1
h̄ℓ−h̄i)
(
∑
n
1
h̄ℓ)2
·
∑m
1 µℓ − (1 + r) is larger for miner i
with smaller h̄i.
3) Miner i’s expected profit h̄i
∑
n
1
h̄ℓ
·
∑m
1 µℓ − (1 + r)h̄i + rhi includes two parts. Part rhi is the
risk-free return for hi. Part h̄i
∑
n
1
h̄ℓ
·
∑m
1 µℓ − (1 + r)h̄i is the excess return.
4) The total social welfare is increasing. The rate of increasing is larger than r.
6 Conclusion
Many future research problems are worth pursuing, such as the risk-averse miners and
dynamic versions of the game.
References
[1] Nakamoto S. Bitcoin: A peer-to-peer electronic cash system, 2008.
[2] Saleh F. Blockchain without waste: Proof-of-stake, 2017.
[3] Roger W. The Science of the Blockchain. Inverted Forest Publishing, 2016.
[4] Biais B, Bisiere C, Bouvard M, et al. The blockchain folk theorem. The Review of Financial Studies,
2019, 32(5): 1662–1715.
[5] Carlsten M, Kalodner H, Weinberg S M, et al. On the instability of bitcoin without the block reward.
Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, 2016:
154–167.
[6] Eyal I, Sirer E G. Majority is not enough: Bitcoin mining is vulnerable. Christin N, Safavi-Naini R.
Financial Cryptography and Data Security. Berlin, Heidelberg: Springer, 2014: 436–454.
[7] Göbel J, Keeler H P, Krzesinski A E, et al. Bitcoin blockchain dynamics: The selfish-mine strategy in the
presence of propagation delay. Performance Evaluation, 2016, 104: 23–41.
[8] Kiayias A, Koutsoupias E, Kyropoulou M, et al. Blockchain mining games. Proceedings of the 2016 ACM
Conference on Economics and Computation, 2016: 365–382.
[9] Eyal I. The miner’s dilemma. 2015 IEEE Symposium on Security and Privacy (SP), 2015: 89–103.
[10] Fisch B A, Pass R, Shelat A. Socially optimal mining pools. arXiv preprint arXiv: 1703.03846, 2017.
A Hashing Power Allocation Game with and without Risk-free Asset 261
[11] Parham R. The predictable cost of bitcoin. SSRN Electronic Journal, 2017.
[12] Rosenfeld M. Analysis of bitcoin pooled mining reward systems. arXiv preprint arXiv: 1112.4980, 2011.
[13] Dimitri N. Bitcoin mining as a contest. Ledger, 2017, 2(1): 31–37.
[14] Liu Z, Luong N C, Wang W, et al. A survey on applications of game theory in blockchain. arXiv preprint
arXiv: 1902.10865, 2019.
[15] Alpern S, Howard J. Winner-take-all games: The strategic optimisation of rank. Operations Research,
2017, 65(5): 1165–1176.
[16] Hart S. Discrete colonel blotto and general lotto games. Int J Game Theory, 2008, 36: 441–460.
[17] Goldberg L A, Goldberg P W, Krysta P, et al. Ranking games that have competitiveness-based strategies.
Theoret. Comput. Sci., 2013, 476: 24–37.
[18] Roberson B. The colonel blotto game. Economic Theory, 2006, 29: 1–24.
[19] Markowitz H. Portfolio selection: Efficient diversification of investments. Cowles Foundation monograph
NO. 16. New York: John Wiley & Sons, Inc, 1959.
[20] Mas-Colell A, Whinston M D, Green J R, et al. Microeconomic Theory, volume 1. Oxford University
Press, New York, 1995.
[21] Nisan N, Roughgarden T, Tardos E, et al. Algorithmic Game Theory Cambridge University Press. Cam-
bridge, UK: Cambridge University Press, 2007.
[22] Bonneau J, Miller A, Clark J, et al. Sok: Research perspectives and challenges for bitcoin and cryptocur-
rencies. 2015 IEEE Symposium on Security and Privacy (SP), 2015: 104–121.
[23] Cheng Y, Du D, Han Q. A hashing power allocation game in cryptocurrencies. International Symposium
on Algorithmic Game Theory, 2018: 226–238.
[24] Rosen J. Existence and uniqueness of equilibrium points for concave n-person games. Econometrica, 1965,
3(3): 520–534.
Appendix
Proof of Theorem 1
By the definition of Nash equilibrium, the computing power allocation profile x = (x1, x2,
· · · , xn) is an NE if and only if each miner’s allocation is the best response to the others. Let us
denote y
j
−i =
∑
l 6=i xlj . Then the best response of miner i is just the solution of the following
optimization problem:
max Ui(xi1, xi2, · · · , xim) =
∑
j∈M
xij
xij + y
j
−i
µj (8)
s.t.
∑
j∈M
xij = hi,
xij ≥ 0.
However, there is one difficulty, that is at the point where for some cryptocurrency j ∈ M ,
xij = 0 for each i ∈ N , Ui is discontinuous. So we cannot apply the standard method directly in
[24] to study Nash equilibrium. We first propose the following lemma to characterize an Nash
equilibrium by pointing out that any Nash equilibrium could not be the discontinuous points.
Lemma 1 If allocation x is an NE, then
∑
i∈N xij > 0 for each cryptocurrency j ∈ M .
Proof To obtain this characterization of NE, it is sufficient for us to prove that any
allocation profile x, in which there is a cryptocurrency j ∈ M such that xij = 0 for each i ∈ N ,
cannot be a Nash equilibrium.
W.l.o.g. we assume that xk1 = 0 for each k ∈ N . Then there must exist another
cryptocurrency, say j = 2, with xi2 > 0 for miner i. That is, the allocation of miner i is
262 CHENG Y K, DU D L, HAN Q M.
xi = (0, xi2, xi3, · · · , xim). Let us consider another allocation x
′
i, with x′
i1 = ǫ, x′
i2 = xi2 − ǫ
and x′
ij = xij for each j = 3, 4, · · · , m, in which
0 < ǫ < min
{
xi2,
µ1
(
∑
h∈N xh2
)2
µ1
∑
h∈N xh2 + µ2
∑
h 6=i xh2
}
.
On one hand, allocation x
′
i is feasible if 0 < ǫ < xi2. On the other hand, if other miners re-
main their allocations unchanged and miner i reallocate his computing power as x
′
i unilaterally,
then miner i will obtain the whole reward from cryptocurrency 1 and his utility shall be
U
′
i = µ1 +
xi2 − ǫ
∑
h∈N
xh2 − ǫ
µ2 +
∑
j=3
xij
∑
h∈N
xhj
µj .
The difference of utility is
∆Ui = U
′
i − Ui = µ1 +
xi2 − ǫ
∑
h∈N
xh2 − ǫ
µ2 −
xi2
∑
h∈N
xh2
µ2
= µ1 −
∑
h∈N,h6=i
xh2µ2ǫ
∑
h∈N
xh2(
∑
h∈N
xh2 − ǫ)
=
µ1(
∑
h∈N
xh2)
2
− (µ1
∑
h∈N
xh2 + µ2
∑
h6=i
xh2)ǫ
∑
h∈N
xh2(
∑
h∈N
xh2 − ǫ)
>
µ1(
∑
h∈N xh2)
2
− (µ1
∑
h∈N xh2 + µ2
∑
h6=i xh2)ǫ
(
∑
h∈N xh2)2
> 0.
The last inequality is from the definition of ǫ. Thus we can conclude that the allocation x in
which for some j ∈ M , xij = 0 for each i ∈ N , is not a Nash equilibrium.
Obviously, given the other miners’ allocation profile x−i, utility function Ui is concave and
the domain {(xi1, xi2, · · · , xim)|
∑m
1 xij = hi, xij ≥ 0} is convex and compact. Therefore, the
optimal solution of (8) is the KKT point. By the first-order optimality condition, there exists
a Lagrange multiplier αi such that
∂Ui
∂xij
=
∑
h 6=i xhj
(
∑n
h=1 xhj)2
· µj



= αi, if xij > 0,
≤ αi, if xij = 0.
(9)
Intuitively, at an equilibrium, each miner has the same marginal value on cryptocurrencies
which they place positive allocation to and has lower marginal values on those cryptocurrencies
that they do not assign computing power.
We first prove that each element of the Nash equilibrium solution which satisfies KKT
condition (9) is positive. Given an allocation, let Yj =
∑n
i=1 xij , 1, 2, · · · , m, for convenience.
Lemma 2 If x is the NE solution of (8) which satisfies KKT condition (9), then xij > 0
for each i ∈ N and j ∈ M .
Proof We will prove the correctness of this lemma by supposing to the contrary that
there is at least one zero element in x. Then we try to drive the contradiction by distinguishing
following two cases.
Case 1 There is only one miner, say miner 1, whose allocation profile has at least one
element equal to zero.
A Hashing Power Allocation Game with and without Risk-free Asset 263
Without loss of generality, assume x11 = 0. Of course, his allocation profile must has at least
one positive element, say x12 > 0. At this time, the number of miners must be greater than or
equal to 3. Otherwise, if there are only two miners, then miner 2 can obtain the whole reward
of cryptocurrency 1, even though he only allocates arbitrarily small and positive computing
power. Therefore the fact of no lower limit to his allocation, results in the nonexistence of the
NE. So there are at least 3 miners in the game.
Based on the condition that there is only one miner having zero element, it is obvious that
xi1 > 0 and xi2 > 0 for each i = 2, 3 · · · , n. Obviously, Y1 =
∑n
i=2 xi1 and Y2 =
∑n
i=1 xi2.
Since x11 = 0 and x12 > 0, the KKT condition (9) promises
µ1
Y1
=
∂U1
∂x11
∣
∣
∣
∣
x
≤
∂U1
∂x12
∣
∣
∣
∣
x
=
µ2(Y2 − x12)
Y 2
2
. (10)
For each miner i = 2, 3, · · · , n, the following equations are right by the conditions of xi1 > 0
and xi2 > 0 and the KKT condition (9),
µ1(Y1 − xi1)
Y 2
1
=
∂Ui
∂xi1
∣
∣
∣
∣
x
=
∂Ui
∂xi2
∣
∣
∣
∣
x
=
µ2(Y2 − xi2)
Y 2
2
. (11)
From (10) and (11), we have
µ1
µ2
≤
Y2 − x12
Y1
·
(
Y1
Y2
)2
, (12)
µ1
µ2
=
Y2 − xi2
Y1 − xi1
·
(
Y1
Y2
)2
. (13)
By combining (12) and (13),
µ1
µ2
=
(n − 1)Y2 −
∑n
i=2 xi2
(n − 1)Y1 −
∑n
i=2 xi1
·
(
Y1
Y2
)2
≤
Y2 − x12
Y1
·
(
Y1
Y2
)2
. (14)
In addition, since Y1 =
∑n
i=2 xi1 + x11 =
∑n
i=2 xi1 and Y2 =
∑n
i=1 xi2, (14) can be rewritten as
(n − 2)Y2 + x12
(n − 2)Y1
≤
Y2 − x12
Y1
. (15)
However, the condition of x12 > 0 shows the inequality in (15) can not hold. It is a contradiction.
Case 2 There are at least two miners in the game, whose allocations have elements equal
to zero.
For this case, we first discuss the subcase that there are two miners, say miner 1 and 2,
and two crptocurrencies, say crptocurrency 1 and 2, such that x11 = 0, x12 > 0 and x21 > 0,
x22 = 0.
Therefore, by the KKT condition (9), we have
µ1
Y1
≤
µ2(Y2 − x12)
Y 2
2
, (16)
µ2
Y2
≤
µ1(Y1 − x21)
Y 2
1
. (17)
264 CHENG Y K, DU D L, HAN Q M.
Hence, by (16) and (17),
µ2(Y2 − x12)
Y 2
2
≥
µ1
Y1
>
µ1(Y1 − x21)
Y 2
1
≥
µ2
Y2
,
which is not right, since x12 > 0 by assumption.
Next, we will discuss the rest case, in which there are more than be two miners whose
allocations have some elements equal to zero. Without loss of generality, assume x11 = 0. At
the same time, miner 1 must also have at least one positive element, say x12 > 0. Now let us
define the miner set as N ′ = {i ∈ N |xi1 > 0}. Clearly, xi2 > 0 for each i ∈ N ′. If there is one
miner i ∈ N ′ having xi2 = 0, then the previous subcase happens. Thus we have Y1 =
∑
i∈N ′ xi1.
Similar to the analysis for Case 1, we can get the followings by KKT condition (9).
µ1
Y1
≤
µ2(Y2 − x12)
Y 2
2
, (18)
µ1(Y1 − xi1)
Y 2
1
=
µ2(Y2 − xi2)
Y 2
2
, for each i ∈ N ′. (19)
Therefore,
Y2 − x12
Y1
·
(
Y1
Y2
)2
≥
µ1
µ2
=
|N ′|Y2 −
∑
i∈N ′ xi2
|N ′|Y1 −
∑
i∈N ′ xi1
(
Y1
Y2
)2
.
In addition, by the condition of Y1 =
∑
i∈N ′ xi1, we have
Y2 − x12
Y1
≥
(|N ′| − 1)Y2 +
∑
i6∈N ′ xi2
(|N ′| − 1)Y1
. (20)
Obviously, (20) is not right, because x12 > 0.
Conveniently, the following corollary can be derived directly from Lemma 2.
Corollary 1 An allocation x in the hash power allocation game is a Nash equilibrium, if
and only if for each miner i ∈ N and any cryptocurrency j, there is a constant αi satisfying
∑
h 6=i xhj
(
∑n
h=1 xhj)2
· µj = αi. (21)
Proof Since each element of a Nash equilibrium solution is positive by Lemma 2, then
KKT condition (9) promises (21) directly.
Based on the sufficient and necessary condition for a Nash equilibrium in Corollary 1, we
will prove Theorem 1.
Proof of Theorem 1 We first prove that a hash power allocation profile x = (xij) is a Nash
equilibrium, if and only if it has the form as xij =
µj
∑
m
ℓ=1
µℓ
· hi, for any i ∈ N and j ∈ M .
It is not hard to see that once each xij has the form as xij =
µj
∑
m
1
µℓ
·hi, then for any j ∈ M ,
∑
h 6=i xhj
(
∑n
h=1 xhj)2
· µj =
∑n
h=1 hh − hi
(
∑n
h=1 hh)2
( m
∑
1
µℓ
)
,
which is irrelevant to the cyprocurrency j and such a ratio can be defined as αi. Then the
allocation x = (xij) with xij =
µj
∑
m
1
µℓ
· hi is a Nash equilibrium by Corollary 1.
A Hashing Power Allocation Game with and without Risk-free Asset 265
On the other hand, Corollary 1 shows for any j ∈ M ,
∑
h6=i
xhj
(
∑
n
h=1
xhj)2
· µj = αi. It implies
n
∑
i=1
αi =
n
∑
i=1
∑
h 6=i xhj
(
∑n
h=1 xhj)2
µj =
(n − 1)
∑n
h=1 xhj
(
∑n
h=1 xhj)2
µj =
n − 1
∑n
h=1 xhj
µj . (22)
From Equation (22), we continue to have
n
∑
i=1
αi =
(n − 1)µ1
∑n
h=1 xh1
= · · · =
(n − 1)µm
∑n
h=1 xhm
.
Then
µ1
∑n
h=1 xh1
= · · · =
µm
∑n
h=1 xhm
=
∑m
1 µj
∑m
1
∑n
i=1 xij
=
∑m
1 µj
∑n
i=1 hi
.
So
∑n
i=1 αi = (n − 1) ·
∑
m
1
µj
∑
n
i=1
hi
, which is a constant. In addition, from Equation (22), we can
get
∑n
h=1 xhj
µj
=
n − 1
∑n
i=1 αi
, ∀j ∈ M. (23)
Then for any j ∈ M ,
αi =
∑
h6=i xhj
(
∑n
h=1
xhj)2
µj =
∑
h6=i xhj
µj
(
µj
∑n
h=1
xhj
)2
=
∑
h6=i xhj
µj
(
∑n
i=1
αi
n − 1
)2
, (24)
where the last equality is from (23). Also Equation (24) guarantees
∑
h 6=i xhj
µj
=
(n − 1)2αi
(
∑n
i=1 αi)2
. (25)
Furthermore, the difference between (23) and (25) is
xij
µj
=
n − 1
∑n
i=1 αi
−
(n − 1)2αi
(
∑n
i=1 αi)2
. (26)
Since
∑n
i=1 αi = (n− 1) ·
∑
m
1
µj
∑
n
i=1
hi
is a constant, the right side of (26) is only related to index i,
denote it by γi. Then xij = γiµj . By the condition of
∑m
j=1 xij = hi, we have
m
∑
j=1
xij =
m
∑
j=1
γiµj = γi
m
∑
j=1
µj = hi.
Therefore, γi = hi
∑
n
1
µj
and xij =
µj
∑
m
1
µℓ
· hi. It concludes this claim.
Based on the necessary and sufficient condition of NE, and the formation of each miner’s
expected payoff without a risk-free asset (3), we can get each miner i’s expected payoff which
is hi ·
∑
m
1
µℓ
∑
n
1
hℓ
− hi.