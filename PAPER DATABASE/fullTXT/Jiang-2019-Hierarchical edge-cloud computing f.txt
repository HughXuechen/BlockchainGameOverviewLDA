Hierarchical Edge-Cloud Computing for Mobile Blockchain Mining Game
2019 IEEE 39th International Conference on Distributed Computing Systems (ICDCS)
Hierarchical Edge-Cloud Computing for Mobile
Blockchain Mining Game
Suhan Jiang, Xinyi Li, and Jie Wu
Department of Computer and Information Sciences, Temple University
{Suhan.Jiang, Xinyi.Li, and jiewu}@temple.edu
Abstract-Computation offloading has been considered as a
viable solution to blockchain mining in mobile environments.
In this paper, we present a two-layer computation offloading
paradigm that includes an edge computing service provider (ESP)
and a cloud computing service provider (CSP). We formulate
a multi-leader multi-follower Stackelberg game to address the
computing resource management problem in such a network,
by jointly maximizing the profits of each service provider (SP)
and the payoffs of individual miners. Two practical scenarios
are investigated: a fixed-miner-number scenario for permissioned
blockchains and a dynamic-miner-number scenario for permis­
sionless blockchains. For the fixed-miner-number scenario, we
discuss two different edge operation modes, i.e., the ESP is
connected (to the CSP) or standalone, which form different
miner subgames based on whether each miner's strategy set is
mutually dependent. The existence and uniqueness of Stackelberg
equilibrium (SE) in both modes are analyzed, according to which
algorithms are proposed to achieve the corresponding SE(s). For
the dynamic-miner-number scenario, we focus on the impact
of population uncertainty and find that the uncertainty inflates
the aggressiveness in the ESP resource purchasing. Numerical
evaluations are presented to verify the proposed models.
Index Terms-Cloud computing, edge computing, game theory,
load sharing, mobile blockchain mining.
I. INTRODUCTION
There is a wide adoption of blockchain technology ranging
from cryptocurrency, financial services, Internet of Things
(loT) to public and social services. As a distributed ledger,
blockchain records data in the form of linked blocks se­
cured by cryptography. Consensus protocol is the core of
blockchain, since it regulates the maintenance for such an
append-only public ledger in a distributed fashion. Currently,
most blockchain applications are on top of a proof-of-work
(PoW) protocol. In a PoW-based blockchain network, miners
collect blocks of data, verify their integrity, and append them
to the blockchain. In order to add a block to the blockchain,
miners are required to solve a computationally challenging
PoW puzzle. The security and reliability are thus ensured by
this mechanism which requires numerous trials and errors for
a valid solution. The blockchain grows with the repetitive
block-appending processes, each of which is considered as
one mining round; meanwhile, the owner of the on-chain block
receives monetary rewards as the mining incentive.
However, the energy consumption and the computing power
required to perform PoW computation are prohibitively high
for mobile devices, thus hindering the practical usage of
blockchain in mobile environments. Offloading PoW computa-
2575-8411119/$31.00 ©2019 IEEE
DOIIO.l109/ICDCS.2019.00133
1327
Prices
M.iner
•m,.:ID (2)
•m,lI§)
(I)
Fig. 1: Mobile blockchain mining network: (I) oflloading to the ESP; (2)
oflloading to the CSP; (3) automatic transfer from the ESP to the CSP.
tion to the external machines has been proven effective in over­
coming the aforementioned limitations and promoting mobile
blockchain applications. Specifically, both an edge computing
service provider (ESP) and a cloud computing service provider
(CSP) can provide computing resources for mobile devices.
While a CSP can guarantee a good isolation among multiple
computation offloading requests (i.e., there is no competition
for cloud computing resources) with a relatively cheap price,
significant network delays hamper the performance of cloud
computing. Due to the delay-sensitive nature of mining, an
ESP is considered as an efficient proximity alternative with the
capability of providing low-latency service. However, mobile
miners may have to compete against each other for the limited
and expensive edge computing resources.
In this paper, we present a hierarchical computation offload­
ing paradigm consisting of two service providers (SPs), i.e.,
a nearby ESP and a remote CSP, and a set of miners in a
mobile blockchain mining network. As depicted in Fig. 1, each
miner is willing to offload its PoW computation to either of
these two SPs or both of them. Once the ESP is overloaded
with requests, it responds differently according to its operation
mode. Specifically, two edge computing operation modes, i.e.,
the ESP connected to the CSP and standalone, have been
implemented in practice. Consequently, an edge computing
request, which fails to be satisfied by the ESP, will be sent to
the backup CSP in the connected mode (characterized by the
line(3) in Fig. I), or rejected in the standalone mode. In the
standalone mode, miners can resend those requests rejected
by the ESP to the CSP. However, the communication delay
will be considerably longer than that in the connected mode
where the ESP executes automatic transfers. In the standalone
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
providers. Fig. 1 depicts an overview of this network. The
SP side consists of a nearby ESP and a remote CSP that
make profits by contributing their computing power sold by
unit. One unit from the ESP is functionally equivalent to one
from the CSP. In the proposed network, message transmission
time is viewed as communication delay. For simplicity, we
assume communication delay between the ESP and miners is
negligible as 0, while communication delay between the CSP
and the ESP/miners is the same as Davg • Besides, the ESP is
assumed to have limited computing capability, while the CSP
owns unlimited computing power.
The end-user side is a network with N miners using mobile
devices. We differentiate them in terms of available budget
which gives an upper bound on the amount of computing units
they can afford. Thus, different types of miners have different
requests on computing power. We employ a utility function
to describe each miner's expected payoff, i.e., the difference
between its expected income and expected cost. The SPs and
the miners have bidirectional communications for exchanging
price and request information. Miners receive prices from the
SPs and transmit their requests to them.
We consider two practical edge operation modes, i.e., con­
nected to the CSP or standalone, differing in whether the
ESP would share loads with the CSP if it is computationally
overloaded. Based on these two modes, we characterize the
limited computing capability of the ESP in two ways. In
connected mode, the ESP's computing limitation is captured
by an expected transfer rate, i.e., (l-h} A request to the ESP
may automatically be transferred to the CSP with a probability
of(I-h) in expectation. As an empirical value, (I-h) is common
knowledge in the game. Instead, if operating in standalone
mode without load sharing, the ESP is limited with Emax
computing units and hence rejects requests once overloaded.
B. SP-Miner Interaction: A Stackelberg Game
We focus on interactions between the SPs and the miners.
Each miner's income depends all miners' strategies and its cost
varies according to the prices set by each SP. In fact, each SP
decides its unit price by considering miners' requests as well as
the rival SP's price. Game theory provides a natural paradigm
to model the interactions between the SPs and the miners in
this network. Each SP sets the unit price and announces it to
the miners. The miners respond to the price by requesting
mode, miners' requests are mutually affected and should be
dedicated to avoid overloading the ESP.
We exploit game theory to analyze the complex interactions
among SPs and mobile miners. To solve the price-based
resource management problem, we leverage a multi-leader
multi-follower Stackelberg game, which includes two sub­
games for the SPs (as leaders) and the miners (as followers),
respectively. In the SP subgame, each SP has a privilege to
set unit prices on its computing resources by anticipating the
miners' responses. In the miner subgame, the miners decide
their requests according to the observed unit prices. Moreover,
we investigate how edge operation modes will affect the
miner subgame. In the connected mode, the miner subgame is
formulated as a classical Nash equilibrium problem (NEP).
However, the miner subgame becomes a generalized Nash
equilibrium problem (GNEP) in the standalone mode. GNEPs
differ from NEPs in that, while in an NEP only the players'
objective functions depend on the other players' strategies, in
a GNEP both the objective functions and the strategy sets
depend on the other players' strategies. In the standalone
mode, due to the limited computing units at the ESP side,
whether a miner's edge computing request can be satisfied is
affected by other miners' requests.
All previous studies assume that the miner number is fixed
as a common knowledge in the proposed games. In practice,
for perrnissionless blockchains where miners can randomly
join or leave, the miner number may change. Thus, we also
discuss the impact of population uncertainty on the miners'
strategies by modeling the miner number as a random variable.
The major contributions of this paper are as follows:
• We propose a Stackelberg game to solve a price-based
computing resource management problem in a mobile
blockchain mining network with two SPs.
• We study the proposed Stackelberg game in two practical
edge operation modes, thereby formulating two different
miner subgames: an NEP in the connected mode and a
GNEP in the standalone mode.
• We analyze the existence and uniqueness of Stackelberg
equilibrium (SE) for both edge operation modes, based on
which algorithms are proposed to obtain SE solutions.
• We consider a special case of homogeneous miners and
derive explicit-form expressions of the most profitable price
strategies for each SP and the optimal resource requests for
individual miners in each mode.
• We study the impacts of population uncertainty, which
incurs more resource requests at the ESP side.
• We conduct experiments in a reinforcement learning frame­
work to validate our analysis. The achieved equilibria are
consistent with our theoretical results .
II. SYSTEM MODEL AND GAME FORMULATION
A. A Mobile Blockchain Mining Network
This paper focuses on a mobile blockchain mining network.
Corresponding notations are listed in Table I. We consider
N end users, which we also call miners, and two service
1328
Symbol
PelPc
CelCc
I-h
Emax
D av9
N
TABLE I: Summary of Notations.
Description
unit price set by the ESP/CSP
unit cost of the ESP/CSP
the ESP's expected transfer rate in connected mode
total computing capacity of the standalone ESP
average transmission delay with the CSP
total number of miners
the i-th miner
number of ESP/CSP units requested by mi
mis request vector to the SPs, in the form of lei, Ci]T
stacked request vectors of all miners
stacked request vectors of all miners excluding mi's
blockchain mining reward
blockchain fork rate
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
where Wi represents m/s expected winning probability, an
accurate definition and detailed explanations of which will be
given in Section m. Each miner mi aims to maximize its
utility and constraint (l b) ensures that mi is within its budget.
2) SP Side Utility: The objective of each SP is to optimize
its profit by determining the corresponding unit price. The
optimization problem (including OPESP and OPcsP) at SP side
is thus defined as in Eq.(2a) and Eq.(2b) for the ESP and the
CSP, respectively.
Problem 2 (SP SUBGAME: OPsp).
N
maximize if" = (Pe - Ce) . E where E = L i=l ei (2a)
N
maximize "Vc = (Pc - Cc) . C where C = L i=l C;, (2b)
3) Stackelberg Game: OPsp and OPMINER together form
the proposed Stackelberg game. To achieve equilibrium in this
game, where neither the leaders (SPs) nor the followers (min­
ers) have incentives to deviate, we need to find its subgame
perfect Nash equilibria (NE) in both the leader stage and the
follower stage, by applying backward induction. Formally, the
SE point(s) is defined as follows.
Definition 1. Let [E*, C*] and [P;, P;] denote the optimal
resource request vector of all miners and the optimal com­
puting unit price vector of SPs, respectively. Let [e:, C:]~l =
[E*, C*], then the point (E*, C* , P;, P;) is the Stackelberg
equilibrium if the following conditions hold:
Ve(P;,E*) ~ Ve(Pe,E*),\lPe, (3a)
Vc(P;, C*) ~ Vc(Pc, C*), \lPc, (3b)
Ui(e;,c;,P;,P;) ~ Ui(ei,ci,P;,P;),\li. (3c)
an optimal amount of computing units to the SPs. Since
the SPs act first and then the miners make their decision
based on the prices, the two events are sequential. Thus, we
model the interactions between the SPs and the miners using
a Stackelberg game. In our proposed game, the SPs are the
leaders and the consumers are the followers. It is a multi­
leader multi-follower Stackelberg game, two stages of which
can be described as follows.
In the first stage, the competition between the ESP and
the CSP forms a non-cooperative leader subgame, where
each SP optimizes its unit price (Pe/Pc) by predicting the
miners' reactions as well as considering the other SP's price
strategy. In the second stage, each miner, i.e., mi, responds to
the current prices, by sending request(s) to the target SP(s),
considering its budget B i and requests of other miners'. Since
requests are generated for individual utility maximization, a
non-cooperative follower subgame is also formed.
1) Miner Side Utility: Let ei and C;, be m/s requests on the
ESP and the CSP, respectively. Given the constant R as the
mining reward, we define m/s optimization problem below.
Problem 1 (MINER SUBGAME: OPMINER)'
maximize
subject to
Ui = R· Wi - (Pe . ei + Pc . Ci),
Pe . ei + Pc . Ci :S B i , ei ~ 0,
(la)
Ci ~ O. (lb)
C. Main Results
We summarize the main results of our analysis based on
whether the miner number is a constant or a random variable.
Scenario 1: the miner number N is a constant.
(1) The ESP operates in the connected mode:
• In the heterogeneous-miner case, we prove the existence and
uniqueness of SE (Theorem 2) and provide a best response
algorithm (Algorithm 1) to find the unique SE point.
• In the homogeneous-miner case, we derive explicit-form
expressions of the optimal pricing for the SPs (Theorem 4)
and resource management strategies (Theorem 3) for all the
miners, given miners' identical budget.
(2) The ESP operates in the standalone mode:
• In the heterogeneous-miner case, the existence of the SE is
validated by capitalizing on the variational inequality the­
ory (Theorem 5). An effective distributed price bargaining
algorithm (Algorithm 2) with guaranteed convergence is
proposed to find one SE point.
• In the sufficient-budget case, we symbolically express the
optimal prices and resource management strategies (Table II)
given a sufficiently large budget for the miners.
Scenario 2: the miner number N is a random variable.
• We reformulate the proposed game given that the miner
number is subject to a Gaussian distribution.
• Numerical analysis shows that, population uncertainty ren­
ders miners more aggressive to buy resources from the ESP,
causing the profit to increase at the ESP side.
• A reinforcement learning framework is applied to further
confirm the numerical results.
III. A MINER'S WINNING PROBABILITY
A. Parameter Analysis
As the core part of each miner mi's utility, Wi is determined
by multiple parameters. To win mining rewards, mi has to be
the first to solve its PoW puzzle and propagate its block to
reach consensus. The chance for mi to find a PoW solution
is positively correlated to its relative computing power, which
is the ratio of m/s computing power out of all computing
power in the network. A mined block will be broadcast
among all miners and its propagation time may vary due to
the underlying factors like network topology and block size.
During its propagation time, blockchain forks and this mined
block is to be discarded if another conflicting block is found
and reaches consensus faster. Generally, Wi diminishes if the
corresponding block takes more propagation time. The relation
between the blockchain fork rate and the propagation time has
been studied in Bitcoin [1], a classic PoW-based blockchain
application. Fig. 2(a) provides its block collision probability
density function (PDF) with respect to communication delay,
which is subject to an exponential distribution. Thereby, the
split rate, i.e., the block collision cumulative distribution func­
tion (CDF), is almost linearly proportional to communication
delay, as shown in Fig. 2(b).
In this paper, we assume that the proposed network follows
the same pattern of collision PDF and CDF as in Bitcoin.
1329
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
(a) Probability density function of a (b) Average number of blockchain
conflicting block being found while forks per 24 hours as a function of
there exists another block being communication delay, averaged over
propagated in the network [2]. all the nodes in the network [3].
Fig. 2: Communication delay can cause temporary blockchain splits.
We denote the blockchain fork rate by fJ, a function of
the block propagation time. In the conventional rig mining,
propagation time only includes the block broadcast time within
the network. However, a mobile blockchain mining network
also views communication delay between the SPs (the esp in
this paper) and miners as part of the block propagation time.
For simplicity, we consider that the time taken to broadcast
a mined block among all miners is identical to O. Hence,
communication delay with the esp D avg is the only possible
source of the propagation time in the proposed network,
which can lead to a blockchain fork rate equal to fJavg. We
use fJ to represent fJavg for simplified writing. Thus, Wi
mainly depends on m/s relative computing power and and
the blockchain fork rate caused by transmission delay.
B. Expression of Individual Winning Probability
In this part, we will derive an expression of Wi under
the assumption that each miner m/s request, denoted by a
vector ri = lei, CilT, is fully satisfied at the SP side. Let
r ~ {rl, r2, ... , rN} and r -i represent the request profile
of all miners and all other miners except mi, respectively.
We denote E in Eq. (2a) and C in Eq. (2b) as the total
number of computing units requested on the ESP and the esp,
respectively. S = E+C therefore represents the total requested
computing units in the network. The winning probability, in
the form of Wi = Wie + WiG, consists of two parts, Wie and
W?, jointly contributed by the ESP and the esp, where W i
e
and WiG are functions of ri and r -i given below:
Wie(ri,r_i)=edS+ei~.~fJcj/ES, (4)
Jr'
WiG(ri,T-i) = Ci/S - Ci ~#ifJej/ES. (5)
For a better understanding, we begin with the analysis on Wr•Wr Ci/Srepresents the expected chance that mi mines a
cloud-solved block B. Now we discuss the probability that B
is discarded before it reaches consensus. With a chance of fJ,
a conflicting block B' would be found during the propagation
time Davg . A cloud-solved B' has the same propagation time
D avg and thus cannot beat B. However, B will be discarded
if B' is found in the edge and hence reaches consensus
immediately. WiG in Eq. (5) characterizes the fact that, the
probability of a successful cloud mining is discounted by the
chance that the mined block is discarded due to any conflicting
edge-solved block. Here, ej / E approximates the rate that B'
~ 0.1
~ 0.01
~
« 0.001 L--~_~_~~~-----'
80 100 120 0.001 0.01 0.1 10 100
(7)
However, this assumption cannot always hold when we take
the ESP's computing capability into consideration. It is pos­
sible that overall requests from the miner side are beyond
the ESP's computing capability. Thus, we further refine the
individual winning probability based on whether ei can be
satisfied by the ESP or not. Now we discuss how ri will be
responded to if ei is beyond the ESP's capability, in connected
mode and in standalone mode, respectively. We denote the
corresponding winning probability by W i
1- h .
I) Failure in connected mode: In this case, ei would be
transferred from the ESP to the esp, and therefore, r i is
degraded as [0, ei + CilT. The total computing power in the
network stays unchanged as S, while E - ei and C + ei
represent the actual resource allocation by the ESP and the
esp, respectively. Eq. (7) gives the winning probability.
C. User Requests and SP Responses
All above analysis is based on the assumption that mi's
request ri is responded to by the ESP and the esp as what it
expects, i.e., if ri is fully satisfied by the ESP and the esp as
its original form lei, cil T , the individual winning probability
on this condition is denoted by W i
h and shown in Eq. (6)
Wi
h = (ei + Ci)/S + fJ(eiC - CiE)/ES. (6)
N N
'" Wi = '" (We + WG)LJi=l LJi=l' ,
N
= ~i=l [(ei+Ci)/S+fJ·(eiC+CiE)/ES]
N
= ~i=l [edS+cdS]
N
+ fJ ~i=l [ei(C--ci)/ES + ci(E-ei)/ESl
N
= l+fJ ~i=l (eiC--ciE)/ES = 1. D
Thus, we are now ready to conclude that, the winning
probability we use is valid, hence our model as well. Note
that m/s winning probability and hence its utility depends
not only on its own request but also on the other miners'.
is mined in the edge by another miner mk. We don't consider
the situation, where B' is an edge-solved block for mi itself,
as a discount factor, since mi still wins.•Wr m/s winning probability of edge mining is the addition
of (i) the chance that mi is the first to successfully mine a
block using its edge computing power, expressed as edSand
(ii) a summed chance that mi's edge-solved block surpasses
a cloud-solved block mined by any other miner mk. The
corresponding expression is shown in Eq. (4).
We verify the validity of Wi as a probability mass function.
Theorem 1. Wi = Wi
e+wt is a valid probability mass func­
tion to express the winning probability of individual miners in
a mobile blockchain mining network.
Proof We present the full verification process by checking
that I:~l Wi = 1 holds.
A,'cmgc communication delay (s)
100 ,----------,----------,
~
:: 10
j
Communication delay (s)
1.6 xJO-3
0
0
L2
~ "\E
~ 0.4
£
20 " 6Q
1330
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
I https:llsites.temple.edu/suhanjiang/201910II12/supplementary-materialsl
(14)
(15)
(13)
h{3E_iR E .
(1 + Al)(Pe - Pc) -tl
R(I-{3) (E_i+C-i)
(l+Al)Pc
Al (Pe . ei + Pc . Ci - B i ) = 0,
A2ei = 0, A3Ci = 0, Al > 0, A2' A3, ei, Ci ::::: 0.
By the first-order optimality condition \7L i = 0, it immedi­
ately follows that A2 = A3 = 0. Thus
and the complementary slackness conditions are
the VI problem has a non-empty solution set. The existence
of NE thus follows the sufficient conditions. Details and the
proof of its uniqueness can be found on our website1. D
As a rational player, each miner optimizes its utility by
solving the NEPMINER problem as follows. Using Lagrange's
multipliers >'1, A2, and A3 for the constraints in Eq. (ld), the
optimization problem is thus converted to the form
L i = R· [(1- (3)(ei + Ci)jS + {3hedE]- (Pe' ei + Pc' Ci)
- Al(Pe . ei + Pc' Ci - B i ) + A2ei + A3Ci, (12)
where: at = h{3R/(Pe - Pc) and d = (1 - (3)Rj Pc. Hence
substituting Eq. (15) back into Eq. (l4) gives the explicit form
of the solution to the NEPMINER problem, i.e., each miner's
best response strategy. This naturally gives a distributed iter­
ative algorithm, allowing each miner to iteratively update its
strategy, given the strategies of other miners. When this unique
subgame NE is ensured, the algorithm's convergence is also
guaranteed. The uniqueness of NE in NEPMINER is guaranteed
given that F defined in Eq. (11) is strictly monotone.
2) SP Subgame Equilibrium: With the knowledge of the
miners' strategies, each SP makes its decision by solving the
NEPsp defined below.
Problem 2a (SP SUBGAME: NEPsp).
maximize Ve = (Pe - Ge) . E where E = 2.:;=1 ei, (16a)
maximize Vc = (Pc - Gc) . G where G = 2.:;=1 Ci. (16b)
3) Stackelberg Equilibrium in Connected Mode: We take
advantage of a distributed algorithm called Asynchronous
Best-response, as is shown in Algorithm 1, to find the unique
NE point in OPsp defined in Problem 2. The solution's
uniqueness further guarantees the global convergence and SE
is achieved, given that NE is found in the leader stage.
(8)
2) Failure in standalone mode: Since ei would be rejected
by the ESP, ri is degraded as [0, Ci]T. Thus, the total com­
puting power of edge computing and that in the network are
reduced to E - ei and S - ei, respectively. Eq. (8) gives the
corresponding winning probability.
Thus, the existence and uniqueness of an NE of this miner
subgame is given by the following theorem.
Theorem 2. A unique Nash equilibrium exists in NEPMINER'
Proof Denote the equivalent variational inequality (VI) prob­
lem VI(K, F) ==.NEP(X,U), where
F:= (\7iUi)~=I' X = ([ei,ci]T)~=I' U = (U;)~=I'
K := K 1 x K 2 X .•. x K n , (11)
Ki := Hei, Ci)lPe . ei + Pc' Ci S Bi , ei ::::: 0, Ci ::::: O}.
Obviously, (i) K i is closed and convex, Vi and (ii) Ui is
continuously differentiable and convex w.r.t. lei, Ci]T, Vi, then
A. Connected Mode
In this mode, the ESP's limited computing capability is
characterized by the ESP's expected transfer rate (1 - h).
1) Miner Subgame Equilibrium: Consequently, mi should
consider two possible results: (i) with a probability of h, its
request on the ESP is satisfied; (ii) with a probability of (1-h),
its request on the ESP is automatically transferred to the CSP
with a degraded service. Thus, Wi can reflect these two results
by applying the law of total expectation as shown in Eq. (9)
Wi = h· Wih + (1 - h) . Wi
1- h (9)
= h· [(ei + Ci)jS + {3. (eiG - CiE)jES]
+ (1 - h)· (1 - (3)(ei + Ci)jS
= (1 - (3)(ei + Ci)jS + {3hedE,
IV. FIXED MINER NUMBER SCENARIO
In the fixed miner number scenario, we assume that the
network contains a fixed set of miners. That is, the number of
miners is modeled as a constant, i.e., N ~ n. We consider two
edge computing operation modes: connected and standalone.
We apply backward induction to analyze the subgame perfect
NE in each stage for both modes. In the connected mode,
the uniqueness of the SE is validated by identifying the best
response strategies of the miners. In the standalone mode, the
existence of the SE is proved by capitalizing on the variational
inequality theory. Then, we get the closed-form price and
resource allocation solutions to a special homogeneous-miner
case for both modes. Besides, we compare the profits at the
SP side and the miner side in these two modes
where Wi = (1 - (3) (ei + Ci) j S + (3hedE.
then the OPMINER problem can be concreted as below.
Problem la (MINER SUBGAME: NEPMINER)'
maximize Ui = R· Wi - (Pe . ei + Pc . Ci) , (lOa)
subject to Pe · ei + Pc . Ci S B i , ei::::: 0, Ci::::: 0, (lOb)
1331
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
Algorithm 1 Asynchronous Best-Response Algorithm
Output: k, k E {e, C}
Input: Choose any feasible starting point Pk
1: for iteration i do
2: Receive the optimal requests of miners
3: Predict the strategy of the other SP
4: Decide p~i)
5: if p~i) == p~i-l) then Stop
6: else send Pi to miners
solution to the NEPHOMOMINER problem is shown in Eq.(l9)
{
• (3hR(n - 1)
ei = n 2 (Pe - Pc) ,
• _ R(n - 1) [(1 - (3)Pe - Pc] (19)
ci - n 2 Pc(Pe - Pc) .
Now, we start to analyze the SP optimization problem,
which can be rewritten as follows.
Problem 2b (SP SUBGAME: NEPsPHOMOMINER).
Theorem 4. The unique Nash equilibrium for the SPs in the
NEPsPHOMOMINER problem is given below:
Proof We start with the optimal P; by analyzing the con­
vexity of Vc . We calculate the first derivative of Vc and
find that it is a concave function given the constraint (34).
Thus, its optimal P; can be achieved by solving avc /ap2 =
o where Pc < Pel - (3/[1- (1- h)(3] and P; is shown in Eq.
(4), as is a function dependent on Pe set by the ESP. Given
the response strategy of the CSP, the ESP can optimize his
payoff by maximizing the re-written Ve .
nB(3h
v;, = (1 _ (3 + h(3)(Pe _ P~) . (Pe - Ge) (22)
We calculate the second derivative of v;, and find that
a2Ve / aP; ::; 0 holds for any valid Pe value.
Thus, the ESP has his dominant strategy P: (which exists,
but is hard to be expressed symbolically) and the CSP has his
best response strategy P; (which is shown in Eq. (4)). In this
situation, NE is achieved in the leader stage. We analyze P:
and P; and find that they only depend on their own operating
costs Ge , Gc , and the network delay penalty factor (3. 0
C. Standalone Mode
In standalone mode, the ESP only has a total of Emax
computing units, where Emax is a common knowledge in this
game. It has to reject some requests when overloaded. Thus,
the aggregate requests from all miners should be no more than
Emax in order to avoid being rejected.
I) Subgame Equilibrium: In standalone mode, given other
miners' requests T -i, mi should ensure that ei can be sat­
isfied by the ESP. Mathematically, this can be written as
E = L:~=1 ek ::; Emax . Under this constraint, its winning
probability is expressed in Eq. (23).
{
P: =p,
p' = Gcp(1 - (3) - pJGch(3(p - Gc)(l - (3)
c [1 - (3(1 - h)]Gc - (3hPe .
(21)
Ve=(Pe-Ge)·e;, Vc=(Pc-Gc)'c;, (20a)
1-(3
Pc < 1 _ (1 _ h)(3Pe, (20b)
B(3h • B [(l-(3)(Pe-Pc)-Pc(3h]
(l-(3+h(3)(Pe-Pc)' ci Pc (1-(3+h(3) (Pe-Pc) .
where e;
maximize
subject to
provided that the prices set by the ESP and the CSP satisfy
1-(3
Pc < 1 _ (3 + h(3 Pe.
Proof According to (13), we have E 2 = ur L:j#i ej/(l +..\)
and 8 2 = u~ L:j#i (ej + cj)/(1 +..\) for each miner mi,
which will yield E 2 /82 = ur(E - ei)/[u~(8 - ei - Ci)]'
Then, we calculate the summation of this expression for all
the miners: E/8 = uUu~ = [h(3/(l- (3)] . Pc/(Pe - Pc)'
In order to get a mixed strategy, E / 8 > 1 must hold, i.e.,
Eq.(3) holds. Since all miners are homogeneous, their best
response strategies are identical as well, i.e., E = nei and
8 = n(ei + Ci)' By substituting these two equations into
Eq. (15), we obtain the NE for miner mi in Eq.(18). 0
Theorem 3. The unique Nash equilibrium for miner mi in the
NEPIIOMOMINER problem is given below
{
• B(3h
ei = (1 - (3 + h(3)(Pe - Pc) ,
• _ B [(1 - (3)(Pe - Pc) - Pc(3h] (18)
ci - Pc(1- (3 + h(3)(Pe - Pc) ,
We will provide the explicit-form expression or the pricing
strategy for the homogeneous-miner case defined above in
Problem (lb).
maximize Ui = R· Wi - (Pe . ei + Pc . Ci) , (17a)
subjectto Pe·ei+Pc·Ci::;B, ei>O, e;>O, (17b)
B. Homogeneous Miners with Identical Budgets
The solutions to the NEPMINER are infeasible to express in
a symbolic manner. Fortunately, we are able to get the closed­
form computation offloading solutions for the NEPMINER in a
special case. We consider a homogeneous-miner case where
each miner is homogeneous with an identical budget B. We are
interested in finding an NE where miners decide on a mixed
request, buying computing units from both the ESP and the
CSP. Thus, constraint (lOb) is modified as ei > 0, Ci > O.
The corresponding miner side optimization problem can be
rewritten as the NEPHOMOMINER problem in the following.
Problem Ib (MINER SUBGAME: NEPHOMOMINER).
Corollary 1. If the budget B is sufficiently large, the explicit
(23)
1332
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
TABLE IT: Optimal requests of homogeneous miners with sufficiently large
budgets where I = (n - I)R/n.
(a) Statistics on the miner number (b) Corresponding histogram and
among 20 mining rounds. underlying distribution N(/-L, (72).
Fig. 3: A toy example for population dynamics of moblie miners.
Mode E* C* S*
Connected ~h I [(1-I3~e -Pc + )3(1 - h)] -y(1-/3)
Pe-Pc Pc
Standalone ~ (l-/3)Pe -Pc -y(1-/3)
Fe-Pc I Pc ----p;;--
5 6 7 8 9 10 II 12 13 14 15
Number of miners
15
Algorithm 2 Price Bargaining
Input: Choose any feasible starting point Pe, Pc
1: for each miner i do
2: Receive Pe, Pc
3: Predict the optimal requests of other miners
4: Decide its computing request lei, CijT
5: Send ei to the ESP and send Ci to the CSP
6: for the ESP do
7: Receive the optimal edge requests of miners
8: Predict the strategy of the CSP
9: Decide Pe and send Pe to miners
10: for the CSP do
11: Receive the optimal cloud requests of miners
12: Predict the strategy of the ESP
13: Decide Pc and send Pc to miners
Now, we reformulate the OPMINER problem in the following.
Problem Ie (MINER SUBGAME: GNEPMINER).
where Wi = (ei + Ci)/S + (3. (eiG - e;E)/ES. Constraint
(24b) ensures that m;'s request to the ESP can be satisfied.
Since all miners' requests are mutually dependent, the
GNEPMINER problem is a Generalized Nash Equilibrium Prob­
lem (GNEP). In GNEPMINER, the dependence of each miner's
strategy set on the other miners' strategies is represented by the
(linear) constraint (24b), which includes each miners' request
ei to the ESP. More specifically, since the miners all share
a jointly convex shared constraint (lCSC), this subgame is
known as a jointly convex game.
2) Existence of Stackelberg equilibria: Similar with the
proof for NEPMINER NE in Theorem 2, the existence of
GNEPMINER NE is easily followed by capitalizing on the
variational inequality theory.
Theorem 5. Given a price set {Pe, Pc} from the SP side, there
exists at least one Nash equilibrium for the non-cooperative
subgame at miner side in standalone mode.
In general, a GNEP could have infinite solutions. Namely,
there are multiple NEs in the follower stage, and thus there is
no efficient algorithm to obtain the global optimal pricing and
computation offloading strategy for the proposed Stackelberg
game. Here, we provide a distributed algorithm which first
computes a unique variational solution to the GNEPMINER
problem and then finds the corresponding solution to the SP
SUBGAME: GNEPsp problem (defined later) based on the
computed miner Nash equilibrium. Note, there is no guarantee
that the SE produced by Algorithm 2 is a global optima.
Problem 2e (SP SUBGAME: GNEPsp).
maximize "Ve=(Pe-Ge)·E, Vc=(Pc-Gc)·G, (25a)
subject to E = Emax . (25b)
maximize
subject to
Ui = R· Wi - (Pe . ei + Pc . Ci) ,
E:s: Emax ,
Pe · ei + pc· Ci:S: B i , ei,Ci ~ 0,
(24a)
(24b)
(24c)
3) Homogeneous Miners with Sufficiently Large Budgets:
In the standalone mode, we also consider a special case where
all miners are considered with a large amount of budgets
in that their optimization problem is never constrained by
the lack of sufficient budgets. Since the analysis is quite
similar as is in the connected mode, we just list our results
in Table IT, which is compared to the corresponding results
in the connected mode. From Table IT, we find that the total
requested units at the miners' side remain unchanged, while
the standalone mode encourages more purchases from the ESP.
The numerical results provided in Section VI also show that
the ESP's equilibrium prices in the standalone mode is higher
compared to those in the connected mode. Thus, we conclude
that the ESP in the standalone mode gains more profits.
v. DYNAMIC MINER NUMBER SCENARIO
Obviously, in the above analysis, we assume the miner num­
ber N is common knowledge in the proposed games. In prac­
tice, this scenario is applicable to permissioned blockchains,
where miners are pre-selected by a central authority or consor­
tium. However, most blockchains are perrnissionless, in which
anyone can participate in or retreat from the mining process, so
the previous scenario may not be suitable. For such situations,
we consider a more general scenario by introducing popu­
lation uncertainty. Games with population uncertainty relax
the assumption that the exact number of players is common
knowledge. Thus, we model the miner number, N, as a random
variable. In particular, N follows a Gaussian distribution with
mean J1, and variance (72. We have N rv N(J1" (72) where
N = k with probability P(k) = <l>(k) - <l>(k - 1). Fig. 3
gives a toy example where the number of miner can be fit to
a Gaussian distribution with J1, = 10 and (72 = 4.
In this scenario, we only consider standalone mode and
derive the miner utility function Ui as below.
(26)
1333
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
Ui
h = Pe . ei + Pc . Ci - R . W i
h
U 1- h P P R W 1- h
i = e·ei+ c'Ci- . i
Wi
h =2:: P(k) [(ei+ci)/Sk+,B(eiCk--eiEk)/(SkEk)]
Wl-h = (l-,B)(ei+ci)/S",
k k
Sk = Ek+Ck, E k = 2:. ej, Cn = "'. Cj, Vk E [l, u]
J=l L...-J=l
Thus, the OPMINER problem in this scenario can be refor­
mulated as in Eq. (27).
Problem Id (MINER SUBGAME: OPOYNAMICMINER).
maximize Ui(J.I" ( 2 ) (27a)
subject to Pe · ei + pc· Ci ~ B i , ei 20, Ci 20 (27b)
Problem 2d (SP SUBGAME: OPsp ).
maximize Ve=(Pe-Ce)·E, Vc=(Pc-Cc)·C (28)
The objective function presented in Eq. (27) is so complex
that it is infeasible to express its equilibrium expression in
a symbolic manner. Therefore, we use numerical analysis to
find equilibria in the network. As numerical results will later
show in Section VI, we find that with an identical Pe , the
uncertainty incurred by the dynamic population renders miners
more aggressive to buy computing units from the ESP, even
beyond its capability Emax .
VI. SIMULATION
In this section, numerical examples are provided to examine
how miners figure out their optimal requests based on the
prices of the SPs and how the SPs optimize their unit prices
based on their available power and the miners' budgets. We
start with a small mobile blockchain mining network with only
5 miners with budgets B i , Vi E [1,5].
A. Miner Subgame Equilibrium
Our experiments evaluate how the corresponding miner
subgame Nash equilibrium is influenced if the parameter
values change.
i) influences from SP side: We first consider the different
prices at SP side. Assuming a homogeneous-miner case in the
connected mode, where B i = 200, Vi E [1,5] holds, Fig.
4 obviously reflects that, if the esP's price Pc unilaterally
increases, miners tend to buy more units from the ESP,
leading to more revenue at the ESP side. Similarly, from
Fig. 4, we can also conclude that the blockchain fork rate ,B
caused by the esP's communication delay also has a negative
effect on the number of total units sold by the esp as well
as his total revenue. However, from Fig. 5(c), we find the
total revenue at the SP side remains almost unchanged no
matter how prices and communication delay change.In the
same miner configuration, we analyze the impact of edge
operation modes. If the ESP operates in the standalone mode,
we see its computing capability is positively related to miners'
requests, which can be easily followed in Fig. 6. From this
figure, we can conclude that, miners are discouraged from
buying units from an ESP working in the connected mode.
We see a cross in the Fig. 6. This explains the esP's optimal
prices under different communication delays. The longer the
communication delay, the lower theoptimal price.
2) influences at miner side: Miners also mutually affect
each other in this mining network. Fig. 7 shows the changes
on all the miners' utilities when their budget of B i varies
from 20 to 200. mi's requests to the ESP and the esp keep
increasing and its utility follows a similar trend. However, we
can see that m1's total requests to both SPs are similar even
with different communication delays at the esp side.
B. SP Subgame
We also study how communication delay and edge oper­
ation modes as well as the SP's operating costs affect their
equilibrium prices. Fig. 8 depicts the equilibrium prices of the
SPs. The ESP's prices increase linearly as its unit operating
cost increases. In both modes, the ESP charges a higher price,
because it has less power available and its communication
delay is 0 in the proposed network. However, its advantage
will be shaded if the communication delay at the esp side
decreases. Besides, the ESP's computation limitation also
poses an upper bound on its profits. We also discover that
the standalone mode allows the ESP a higher price while it
decreases the esP's price and its profits.
According to numerous experiments, we find that the total
amounts of sold-out computing units are always approximately
equal, if we allow a sufficiently large budget and a fixed
number of miners. Besides, we can see that the SP-side
welfare is bounded by the total miner budgets in the beginning.
However, as the budgets increase to a certain degree, the
total welfare of these two SPs are positively related to the
blockchain mining reward.
C. Population Uncertainty
In Section V, we consider the miner number as a variable
subject to a specific Gaussian distribution. To capture the
dynamics of the miner number, we use a reinforcement learn­
ing (RL) framework to allow miners to learn the population
uncertainty and hence improve their strategies. We conduct our
simulation within a small mining network of 5 homogeneous
miners. We define a time period T as adding 50 blocks.
During T, prices from these two SPs are fixed and the
miner number changes subject to N(J.I" ( 2 ). The reason why
we choose T = 50 in our all experiments is that miners'
strategies converge after at most 50 blocks added even in
such an unstable-population mining network. Once the miners'
behavior converges, both the ESP and the esp update their
pricing strategies adaptively. These two steps repeat until a
fixed point for both sides is reached. We also apply such a
process to a fixed number scenario where N = J.I,.
In Fig. 9, all unfilled points are the results produced by
the RL framework, while all lines are computed using our
proposed model. Obviously, the results of our model are anas­
tomotic with the learned strategies. In Fig. 9(a), we conclude
that the uncertainty caused by the miner number renders each
miner to buy more units from the ESP, making the total
1334
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
4.1
200,---__-_--_-----,200r------~----_____,
"-
r; 190 if.
~ 160
~IW ~IID
~ 170 ~
~ SO
.~ 160 {3=O.02 .;: ....... {3=O.02
... ,8=0.04 3 -,8=0.04
ca 150 ,8-006 S 40 ......,8=006
~ -+- =0:08 ~ -+- =0:08140 Oc==='----~-----~4.2 ~.4 4~ 4.8 4 4.2 4A 4.6 4.8 4 4.2 4A 4.6
Price sct by the CSP: Pc Price set by the CSP: Pc Price set by the CSP: P
(a) Miners' requests to the ESP. (b) Miners' requests to the CSP' (c) Miners' requests to the SPs
Fig. 4: Homogeneous miners with identical budgets and Pe = 5.
:;; 200r;=o=;::=,--~----,
~160
£120~~-"--'~
"0
"0
;;; 80
"§
~ 4:t===~==~===-_~
4
(a) f3 = 0.02. (b) f3 = 0.06.
Fig. 6: Connected Vs Standalone.
4.8
VIII. CONCLUSION
In this paper, we have proposed a Stackelberg game between
the SPs for optimal price strategies and among the mobile min­
ers for optimal computation offloading requests. Two practical
edge computing operation modes are investigated, i.e., the ESP
is connected to the CSP or standalone. First, we characterize
the miner number as a constant in both modes. We discuss
800,---__-_--_-----,
4.8
8001~==:===:===:==3e; ~
~ 790:===:===:===::====-::
g780
~ [811=002~ 770 ---,13=0.04
'0 ......{FO.06
f- 760 -+-..11=9.08
~.2 4.4 4.6 4.8 4 ~.2 4.4 4.6
Price set by the CSP: Pc Price set by the CSP: P
(b) The CSP's revenue. (c) Total revenue at SP side.
Fig. 5: Homogeneous miners with identical budgets and Pe = 5.
offloading in mobile blockchain mining under the PoW con­
sensus. However, we consider a more complicated assumption
in which miners can perform a two-layer computation offload­
ing to either/both of the ESP and the CSP.
2) Stackelberg Game in Offloading Mechanism: Stackel­
berg Game is a widely-used model in the field of offloading
mechanisms. A large body of existing literature [10-17] fo­
cuses on minimizing offloading users' computation overhead
in terms of energy and latency. To this end, researchers have
developed distributed decision making methodologies. In the
field of mobile blockchain mining offloading [6, 7], there are
few works and most of them are in the single-leader scenario
where mobile miners only offload their computation to an
SP, e.g. fog. In our paper, we consider a multi-leader multi­
follower Stackelberg game to jointly maximize the profit of the
SPs and the individual utilities of mobile miners. We assume
a resource-limited edge layer working in either stand-alone or
connected operation mode with the cloud layer.
3) Reinforcement Learning in Incomplete Information
Game: Although analysis in game theory always assumes
the observable strategies of other players, it is more realis­
tic that the miner's action is the private information which
is unobservable by others. In addition to applying game­
theoretical analysis on the proposed game, we also develop a
reinforcement learning framework [18-21] in our evaluation,
allowing all players to select their best response strategies
and update their beliefs about unobservable actions of others
through repeated interactions with each other in a stochastic
environment. This framework confirms our proposed model.
o4L----,4'=-.'--4:""":.4--4'""----"",.4.'.
Price set by the CSP: Pc
VII. RELATED WORK
4.2 4.4 4.6
Price set by the CSP: P
(a) The ESP's reven~e.
-+-11=0.02
--,8=0.04--11=0.06-+- =0.08
800.-===,------------,
"­vo
~ 600
-5
~o
g 400
!
~ 200.L--_~~
oL--~~-~--~----'
4
80
4~.~=~==~:::::==~-J
4 4.2 4.4 4.6 4.8
Pricc set by the CSP: Pc
requests sometimes can exceed the ESP's capability. Besides,
we also find the variance also affects a miner's request to the
ESP, i.e., a larger variance leads to a more ESP-prone miner,
according to Fig. 9(b). Both Fig. 9(a) and (b) are generated
based on the ESP's connected mode. We also conduct a check
experiment in the standalone mode. The results in the dynamic
scenario show that the miners are discouraged from buying
units at the ESP side in the connected mode. These results are
similar to those in the fixed scenario.
1) Mobile Blockchain Applications: There exist two dif­
ferent categories of research in the field of blockchain ap­
plications in wireless networks. The first category focuses
on blockchain protocols [4, 5] to eliminate overhead while
maintaining most of blockchain's security and privacy. These
research works are beneficial for secure and decentralized
data communication in wireless networks. Instead of designing
and implementing light-weight blockchain-based protocols,
the second category [6-9] investigates pricing and resource
management schemes for supporting blockchain applications
in a mobile environment. The focus here is on the mining
under the PoW consensus [1], which results in the competition
among miners to receive a mining reward. Due to limited
computing resources of their mobile terminals, miners offload
the PoW computations to local edge servers [6, 7]. In this
paper, we also study the problem of pricing and computation
1335
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
40 40 g;
0- 4-iFO.1 0- 4-iFO.1 ~40
4- )1=0.1
en -+-)1=0.08 en -+-iFO.08 -+-iFO.08UJ u :g.s 30 -e- =0.02 -5 30 -e- -0.02 -e- -0.02
~
1;' 1;' -= 30
~ 20 ~ 20
1;'
"0
'" ~ 20
C § 10~ 10 §
" "~ ~ ca 10
~
60 100 140 180 20 60 100 140 180 20 60 100 140 180
Identical budget: B Identical budget: B Identical budget: B
(a) A miner's request to the ESP. (b) A miner's request to the CSP. (c) A miner's request to the both SPs.
Fig. 7: m;'s budget Bl varies from 20 to 200, with 5 miners in total.
(a) (3 = 0.Q2. (b) (3 = 0.06.
Fig. 8: The CSP's unit cost is 0.5, while the ESP's unit cost changes.
with security and qos constraints," in 2018 International Con­
ference on Computing, Networking and Communications.
[6] M. Liu, F. R. Yu, Y. Teng, V. C. Leung, and M. Song,
"Joint computation offloading and content caching for wireless
blockchain networks," in IEEE INFOCOM 2018-IEEE Confer­
ence on Computer Communications Workshops.
[7] Z. Xiong, S. Feng, D. Niyato, P. Wang, and Z. Han, "Optimal
pricing-based edge computing resource management in mobile
blockchain," in 2018 IEEE International Conference on Com­
munications.
[8] N. C. Luong, Z. Xiong, P. Wang, and D. Niyato, "Optimal
auction for edge computing resource management in mobile
blockchain networks: A deep learning approach," in 2018 IEEE
International Conference on Communications.
[9] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, "Social welfare
maximization auction in edge computing resource allocation for
mobile blockchain," in 2018 IEEE international conference on
communications.
[10] L. Xiao, C. Xie, T. Chen, H. Dai, and H. V. Poor, ''A mobile
offloading game against smart attacks," IEEE Access.
[11] Y. Liu, C. Xu, Y. Zhan, Z. Liu, J. Guan, and H. Zhang,
"Incentive mechanism for computation offloading using edge
computing: a stackelberg game approach," Computer Networks.
[12] X. Wang, X. Chen, W. Wu, N. An, and L. Wang, "Cooperative
application execution in mobile cloud computing: A stackelberg
game approach," IEEE Communications Letters.
[13] L. Song, D. Niyato, Z. Han, and E. Hossain, "Game-theoretic
resource allocation methods for device-to-device communica­
tion," IEEE Wireless Communications.
[14] H. Zhang, Y. Xiao, S. Bu, D. Niyato, R. Yu, and Z. Han, "Fog
computing in multi-tier data center networks: a hierarchical
game approach," in 2016 IEEE international conference on
communications.
[15] T. M. Ho, N. H. Tran, C. T. Do, S. A. Kazmi, T. LeAnh,
and C. S. Hong, "Data offloading in heterogeneous cellular
networks: Stackelberg game based approach," in 2015 Asia­
Pacific Network Operations and Management Symposium.
[16] Y. Sun, H. Shao, X. Liu, J. Zhang, J. Qiu, and Y. Xu, "Traffic
offloading in two-tier multi-mode small cell networks over
unlicensed bands: A hierarchical learning framework." TIIS.
[17] X. Zhang, L. Guo, M. Li, and Y. Fang, "Social-enabled data of­
floading via mobile participation-a game-theoretical approach,"
in 2016 IEEE Global Communications Conference.
[18] A. Outchakoucht, E.-S. Hamza, and J. P. Leory, "Dynamic
access control policy based on blockchain and machine learning
for the internet of things," International Journal of Advanced
Computer Science and Applications.
[19] I. Erev and A. E. Roth, "Predicting how people play games:
Reinforcement learning in experimental games with unique,
mixed strategy equilibria," American economic review.
[20] M. Bowling and M. Veloso, "An analysis of stochastic game
theory for multiagent reinforcement learning," Tech. Rep., 2000.
[21] J. Hu and M. P. Wellman, "Multiagent reinforcement learning:
theoretical framework and an algorithm." in ICML.
90
1.40.8 I 1.2
Unit cost of the ESP: Ce
50 60 70 80
The capability of the ESP: Em..."
(b) (3 = 0.06.
IO"",,=-~_~_~ __~----,
40
1.4
.....e.- ESP: N=5
--- ESP: N-(S,0.25)
~ 30 =:: ~~~: ~:~,l)
~=G='k-;:;::;-~ ! 20 """"ii;;";;;;,,;;;;;;;;d;:~};:::~:!~::)
Ji
Fig. 9: Miner number: fixed vs dynamic.
(a) (3 = 0.02.
0.04 0.06
Delay factor: /3
0.8 I 1.2
Unit cost of the ESP: Ce
0.02
40,-----~--~--~-__,
30 -----~- _..
§
::: :20
.~
§ 10
~
V> °
REFERENCES
[1] S. Nakamoto, "Bitcoin: A peer-to-peer electronic cash system."
[2] C. Decker and R. Wattenhofer, "Information propagation in
the bitcoin network," in 2013 IEEE Thirteenth International
Conference on Peer-to-Peer Computing.
[3] J. Gobel, H. P. Keeler, A. E. Krzesinski, and P. G. Taylor,
"Bitcoin blockchain dynamics: The selfish-mine strategy in the
presence of propagation delay," Performance Evaluation.
[4] A. Dorri, S. S. Kanhere, R. Jurdak, and P. Gauravaram,
"Blockchain for iot security and privacy: The case study of
a smart home," in 2017 IEEE international conference on
pervasive computing and communications workshops.
[5] D. B. Rawat and A. Alshaikhi, "Leveraging distributed
blockchain-based scheme for wireless network virtualization
the existence and the uniqueness of Stackelberg equilibrium
in the proposed games and provide algorithms to achieve
SE point(s). Our analysis indicates that the connected mode
discourages miners from buying computing resources from the
ESP. Then, we study the impact of a dynamic miner number.
Interestingly, we find that uncertainty incurred by the dynamic
population renders miners more aggressive to buy computing
resources from the ESP. Numerical experiments based on a
reinforcement learning framework have been conducted to
further confirm our analysis.
IX. ACKNOWLEDGEMENT
This research was supported in part by NSF grants CNS
1824440, CNS 1828363, CNS 1757533, CNS 1629746, CNS
1651947, and CNS 1564128.
1336
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:22:05 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize false
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Required"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice