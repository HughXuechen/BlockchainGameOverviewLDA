Blockchain Meets Edge Computing: Stackelberg Game and Double Auction Based Task Offloading for Mobile Blockchain
IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 69, NO. 5, MAY 2020 5549
Blockchain Meets Edge Computing: Stackelberg
Game and Double Auction Based Task
Offloading for Mobile Blockchain
Shaoyong Guo , Yao Dai , Song Guo , Fellow, IEEE, Xuesong Qiu , Senior Member, IEEE, and Feng Qi
Abstract—Blockchain technology is developing rapidly and has
been applied in various aspects, among which there are broad
prospects in Internet of Things (IoT). However, IoT mobile devices
are restricted in communication and computation due to mobil-
ity and portability, so that they can’t afford the high computing
cost for blockchain mining process. To solve it, the free resources
displayed on non-mining-devices and edge cloud are selected to
construct collaborative mining network(CMN) to execute mining
tasks for mobile blockchain. Miners can offload their mining tasks
to non-mining-devices within a CMN or the edge cloud when there
are insufficient resources. Considering competition for resource
of non-mining-devices, resource allocation problem in a CMN is
formulated as a double auction game, among which Bayes-Nash
Equilibrium (BNE) is analyzed to figure out the optimal auction
price. When offloading to edge cloud, Stackelberg game is adopted
to model interactions between edge cloud operator and different
CMNs to obtain the optimal resource price and devices’ resource
demands. The mechanism realizes improving the mining utility in
mining networks while ensuring the maximum profit of edge cloud
operator. Finally, profits of mining networks are compared with
an existing mode which only considers offloading to edge cloud.
Under the proposed mechanism, mining networks obtain 6.86%
more profits on average.
Index Terms—Edge computing, IoT, blockchain, resource
management, task offloading.
I. INTRODUCTION
THE Internet of Things (IoT) connects a large scale of
heterogeneous devices for information exchanging and
economic benefits, in which Mobile Edge Computing (MEC) is a
Manuscript received January 23, 2020; revised February 28, 2020; accepted
March 16, 2020. Date of publication March 19, 2020; date of current version May
14, 2020. This work was supported in part by the National Key R&D Program of
China under Grant 2019YFB2102302, in part by the National Natural Science
Foundation of China under Grant 61702048, and in part by Ubiquitous Energy
Internet of Things based on Industrial Internet Test Bed. The review of this
article was coordinated by Prof. L. Zhu. (Corresponding author: Xuesong Qiu.)
Shaoyong Guo, Yao Dai, and Xuesong Qiu are with the State Key Labo-
ratory of Networking and Switching Technology, Beijing University of Posts
and Telecommunications, Beijing 100876, China (e-mail: syguo@bupt.edu.cn;
daiyao@bupt.edu.cn; xsqiu@bupt.edu.cn).
Song Guo is with the Department of Computing and Research Institute for
Sustainable Urban Development, Hong Kong Polytechnic University, Hong
Kong (e-mail: song.guo@polyu.edu.hk).
Feng Qi is with the State Key Laboratory of Networking and Switching Tech-
nology, Beijing University of Posts and Telecommunications, Beijing 100876,
China, and also with the Cyberspace Security Research Center, Peng Cheng
Laboratory, Shenzhen 518066, China (e-mail: qifeng@bupt.edu.cn).
Digital Object Identifier 10.1109/TVT.2020.2982000
promising solution that allows mobile devices to run demanding
applications by providing computing resources. However, build-
ing trust between multiple parties in MEC is a challenge because
these parties often have conflicting interests [1], [2]. To address
this problem, blockchain which is a tamper proof transaction
database shared by all nodes participating in a network based
on a consensus protocol is introduced [3]. Features like security,
transparency and decentralization allow it to be a distributed
peer-to-peer network where non-trusting members can interact
with each other in a verifiable manner without a trusted inter-
mediary [4], [5]. To ensure data security in mobile commerce
between mobile devices, blockchain has been integrated as an
efficient security solution into establishing trust between mobile
devices in a decentralized network [6].
The development of blockchain in IoT mobile applications is
hindered by a major challenge brought by heavy computational
process [1]. Blockchain’s security relies on a proof-of-work pro-
cedure called mining, which is a difficult mathematical problem
making blockchain almost impossible to be tampered with [7].
When a transaction is generated and broadcasted, it will be col-
lected and validated by some nodes concurrently in the network,
then mining nodes constantly try to find a rare random number
which generates a specific hash value [8]. Mobile devices are re-
stricted in key areas related to communication and computation
such as memory, battery and processing due to design choices
that guarantee their mobility [9], [10], so that they fall short to
afford the high computing resources to find the value in min-
ing process [11]. To support mining tasks execution in mobile
environments for mobile devices, we suggest offloading mining
tasks to edge cloud and neighbor non-mining-devices [9], [12].
Recently, several edge computing resource allocation
schemes and blockchain mining task offloading models have
been proposed to provide solutions. Focusing on the optimiza-
tion of resource allocation and pricing between mobile users
and edge cloud, Z. Xiong et al. proposed a Stackelberg game
based economic approach for mobile devices to offload mining
tasks to edge nodes in [13]. J. Wang et al. designed a Deep
Reinforcement Learning based Resource Allocation (DRLRA)
mechanism, which can adapt to different MEC environments and
allocate computing resources efficiently [14]. These researches
help a lot to optimize mining offloading strategies, but they only
consider optimization of a single device offloading tasks to the
edge cloud. Differently, we consider the optimization of mining
0018-9545 © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0003-2033-8431
https://orcid.org/0000-0003-2774-0204
https://orcid.org/0000-0001-9831-2202
https://orcid.org/0000-0002-7899-539X
https://orcid.org/0000-0003-2481-8774
mailto:syguo@bupt.edu.cn
mailto:daiyao@bupt.edu.cn
mailto:xsqiu@bupt.edu.cn
mailto:song.guo@polyu.edu.hk
mailto:qifeng@bupt.edu.cn
5550 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 69, NO. 5, MAY 2020
offloading to both neighbor devices and edge cloud operator
(ECO).
Since the probability of an individual miner to find a new
block in due time is excruciatingly small, we suggest mobile
devices in proximity interconnecting with each other to form a
Collaborative Mining Network (CMN), which is like a mining
pool [15]. Mining-devices gather their computational resources
and share their hashing power in the CMN in order to smooth out
their mining rewards effectively. Then they split the reward in
proportion to their contribution to solving a block [16]. However,
due to high mobility [17], some mining-devices may not stay in a
CMN for sufficient time to contribute resources that meet the ex-
pected average mining resources. They should obtain less reward
than in proportion to their contribution. Therefore, some devices
with high mobility may not be profitable to mine, so that they can
share their resources with neighbor mining-devices within the
CMN instead of participating in mining, which we call sharing-
devices. In view of competitions between mining-devices for
sharing-devices’ resources, we adopt a double auction method
to manage mining offloading. In the auction, the BNE [18] of
each mining-device’s net profit is first calculated based on their
values of the resources to figure out the optimal bid. Meanwhile,
sharing-devices analyze BNE of their expected profits based
on mining cost to obtain the optimal asking price. Then, the
auction strategy is determined based on mining-devices’ bids
and sharing-devices’ asking prices.
However, task offloading within CMN is not enough, the
growing amount of mining tasks will push current CMN resource
to the limit, then the mining processes will be performed with the
support of ECO. In the process of mining offloading to ECO,
we consider CMN as a whole, and mining-devices apply for
resources from ECO through proxy in CMN. Therefore, we
consider the total resources that a CMN requests from ECO
and total mining profits in it. Since the non-cooperative CMNs
and ECO can be assumed as intelligent decision-makers [12],
[19], a two-stage Stackelberg game is adopted to model the
interactions between ECO and CMNs. In the first stage, con-
sidering competitions with other CMNs and prices of ECO’s
resources, CMNs determine the optimal resource demands from
ECO. In the second stage, ECO who aims at maximizing its
profit decides upon the optimal resource price based on CMNs’
resource demands.
Compared to traditional edge computing, innovations of our
work lie in that mobile devices can offload their blockchain
mining tasks to both neighbor devices and edge cloud. The main
goal of our study is to calculate the optimal resource allocation to
maximize the profits of ECO and CMN. The main contributions
of this paper are summarized as follows:
� We proposed a novel resource management schema for
mobile blockchain. In our schema, mobile devices in prox-
imity aggregate computing resources to form a CMN to
reduce the uncertainty of successful mining. The mining
tasks of devices with limited resources can be offloaded to
capable ones. Moreover, we analyze the optimal execution
time of the task offloading algorithm every time a device
joins or exits through simulation for adapting to the high
dynamics of the IoT.
� Our mechanism supports two offloading modes. Min-
ers can offload their mining tasks to non-mining-devices
within the CMN or to edge cloud, which takes advantage
of idle resources within the CMN and reduces the load on
edge cloud.
� To manage resource allocation between mining-devices
and sharing-devices in a CMN, we formulate the problem
as a double auction game. The expected utility of two sides
are formulated regarding resource value and cost, and then
we calculate the BNE of the utility to obtain the optimal
auction price.
� Mining offloading to ECO is developed as a price-based
optimization problem to maximize the profits of ECO and
CMN, in which both uniform pricing and differentiated
pricing are considered. Stackelberg game is applied to
model interactions between ECO and CMNs, in which we
formulate the profits of both. Based on the profit function,
we analyze the NE to obtain the optimal price of ECO and
the most profit of CMN.
The rest of this paper is organized as follows. Section II re-
views the related work. Section III presents the system model and
objective formulation. A double auction algorithm for resource
allocation in the CMN is presented in Section IV, after which
we analyze the NE of Stackelberg game between CMNs and
ECO in Section V. The experimental results and corresponding
discussions are presented in Section VI, followed by conclusions
in Section VII.
II. RELATED WORK
A. Blockchain Mining Mechanisms
Recently, several blockchain mining mechanisms have been
proposed. S. Kim et al. [16] presented a blockchain mining
game model based on multi-leader multi-follower Stackelberg
game. In the model, users are grouped into multiple distributed
mining pools to gather resources while Stackelberg game is used
to solve collaboration and competition issues in each mining
pool and between multiple pools. L. Luu et al. [20] introduced
a distributed computational power splitting game (CPS game)
model to realize profit maximization. M. Salimitari et al. [21]
presented a prospect theoretic approach for profit maximization
in bitcoin pool mining. Since it is a big challenge for a new miner
to decide which pool to join to get the most profits, they used
prospect theory to calculate the miner’s expected utility deriving
from each pool.
These blockchain mining mechanisms have solved the opti-
mal mining scheme of the blockchain network effectively, but
it is still difficult to apply the schemes to the mobile blockchain
network because mobile devices have limited communication
and computation capability. However, with MEC, computation
tasks can be offloaded to the edge network. We draw on their
ideas for collaborative mining in the mining pool and propose
a collaborative mining network CMN. Moreover, in the CMN,
the devices can upload mining tasks to adjacent idle devices or
edge cloud.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: BLOCKCHAIN MEETS EDGE COMPUTING 5551
B. Mobile Blockchain Application
Blockchain has also been applied in many scenarios in IoT.
To ensure the safety of mobile commerce, K. Suankaewma-
nee et al. [22] introduced MobiChain which can authenticate
and record transactions between mobile applications on the
blockchain to prevent tampering or repudiation. Gai et al. [23]
proposed a permissioned blockchain edge model for smart grid
networks to help with the privacy protection and energy security
of smart grids. Furthermore, the authors presented a consortium
blockchain-oriented approach to address the problem of trading
information leakage in blockchain in [24]. In order to solve the
insecurity issue of data outsourcing to designated data centers,
P. K. Sharma et al. [25] put forward a novel blockchain-based
distributed cloud architecture which included three layers. The
device layer was used to monitor public infrastructure environ-
ments and request services. In the cloud layer, blockchain was
adopted to supervise the process of data access and resource
allocation. In the fog layer, they brought computing resources
to the edge of the IoT network based on SDN and blockchain.
These studies have integrated blockchain into various areas
of the IoT effectively. However, in mobile edge networks, the
widespread application of blockchain is challenging due to
limited computing and storage resources of mobile devices. To
support the application of blockchain in mobile networks, we
propose to offload blockchain mining tasks to the edge network.
C. Edge Computing Resource Allocation
Now that compute-intensive mining tasks can be offloaded to
the edge cloud, we further consider resource allocation strategies
in the edge and CMN. The edge computing resource allocation
problem has also interested some researchers recently. Several
approaches have been proposed to provide solutions: resource
auction [26], [27], game theory [28]–[30], Deep Reinforcement
Learning (DRL) [31], [32], etc.
Considering resource auction, Y. Jiao et al. [26] investigated
an auction mechanism in the mobile blockchain to maximize
social welfare. The social welfare was described as the profit
of the whole blockchain network. Each time miners decided
upon their bids, the system selected winners until social welfare
decreased. N. C. Luong et al. [27] proposed a deep-learning-
based auction method for edge computing resource allocation.
They constructed a multi-layer neural network architecture to
provide solution of the optimal auction. Yang et al. [31] de-
signed a real-time adaptive schema for computational resource
allocation to support task offloading of mobile users based on
DRL. Tan et al. [32] invented a DRL-based multi-time-scale
framework, which jointly optimizes communication, caching,
and computational design issues to achieve the optimal cost
effectiveness of vehicle networks. Gai et al. [33] designed the
Energy-Aware Heterogeneous Cloud Management model and
proposed an adaptive solution to address the task offloading
problem for reducing the computation costs.
Game theory has also already been extensively applied to
optimize the problem of edge computing resource allocation.
Z. Xiong et al. put forward a two-stage Stackelberg game model
in [28] to acquire the optimal price-based resource management
between mobile devices and edge cloud service provider in mo-
bile blockchain. In [30], two data offloading mechanisms among
multiple mobile users based on game theory were proposed. The
multi-item auction (MIA) based data offloading approach was
designed from the perspective of mobile operator who wanted
to maximize his revenue. And for the mobile subscriber aiming
at minimizing the payment, they proposed a congestion game
(COG) based data offloading approach. X. Chen et al. [29]
adopted a game theoretic approach to address the challenges
of choosing between local computing and cloud computing.
These recent researches have achieved excellent results and
introduced innovations well worth adopting. On the basis of
existing resource allocation optimization strategies, we take both
the mining benefits of CMN and edge cloud as the optimization
goal, to adapt to our scenario. Besides, different from these
existing researches on mining strategies in edge network, we
support mining offloading not only to edge clouds, but also to
neighbour devices to take advantage of idle device resources
within the CMN and reduce communication delays.
III. SYSTEM MODEL
A. Network Model
As shown in Fig. 1, we consider a scenario with an ECO and
several CMNs M = {1, . . . ,M} in a mobile blockchain. CMN
i is consisted of multiple mobile devices N〉 = {1, . . . , Ni}
which are arranged according to the time of joining CMN,
and the available resources of mobile devices in it are set to
Ci = {c1, . . . , cNi
}. Note that the collection is dynamic, Ni will
change when a device joins or exits the CMN. As mentioned
before, there are both mining-devices and sharing-devices in the
CMN. We use Mi = {1, . . . ,Mi} to describe mining-devices
in CMN i. Mining-devices can apply for resources from ECO
through the edge broker or from sharing-devices within the CMN
to offload their mining tasks. In order to reduce transmission
costs, the mining task is preferentially offloaded to sharing-
devices within the CMN through an auction mechanism which
will be detailed in section 3.2. Considering different CMNs, let
R = {r1, . . . , rM} denote the expected average resources for
mining of different CMNs. Only if resources in a CMN can’t
reach the expected value, the edge broker in it requests resources
for mining-devices from ECO. Therefore, a CMN’s resource
demand from ECO is the expected mining resources minus the
resources it owns, defined as yi = max(Miri −
∑
j∈N〉 cj , 0).
Obviously, there is a limit that ri ∈ [ri, r], ∀i ∈ M, where ri is
the average resources of mobile devices in CMN i and r is the
maximum resources can be provided by ECO.
The generation of a new block consists of two stages: mining
and consensus. In the mining process, miners compete to mine
to create a new block. Let ω = {ω1, . . . , ωM} denote the miner
number vector of CMNs such that the possibility of a CMN
successfully mining can be expressed as its hashing power
hi(ri, r−i) =
Miri∑
j∈M Mjrj
, hi > 0, (1)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
5552 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 69, NO. 5, MAY 2020
Fig. 1. Mobile blockchain with two mining offloading modes: offloading to neighbor devices and edge cloud.
in which
∑
j∈M hj = 1. After a valid block is mined, it is
instantaneously propagated across the network for verification
to complete the consensus process. If the propagation and verifi-
cation time is too long, the mined block will become an orphaned
block which is abandoned by blockchain. Here, we set miner i’s
block propagation delay as τpi = ti
γ·c , where ti is the number
of transactions in the block, γ is the network scale-related
parameter, and c is the average effective channel capacity of
each link [34]. As the verification and PoW computing time for
a transaction requires a fixed amount of computation, the time is
assumed linear to the number of transactions in the block [35],
expressed as τvi = l · ti, where l is a parameter determined
by network scale and the average verification speed of nodes.
Considering that the generation of new blocks follows a Poisson
process, miner i’s orphaning probability can be approximated as
Po(ti) = 1 − e−λ(
ti
γc+lti) with a process parameter λ referring
to the complexity of mining a block. Obviously, the probability
of CMN i successfully mining to generate a block is
Pi(ri,Mi, ti)=hi × (1 − Po(ti)) =
Miri∑
j∈M Mjrj
e−λ(
ti
γc+lti).
(2)
CMN i successfully mining will gain a corresponding mining
reward. The reward consists of a fixed reward R and a commis-
sion reward defined as rti, in which ti represents the number of
its mining transactions and r is the reward for unit transaction
(reward rate). Additionally, it is charged for using resources of
ECO. Therefore, CMN i’s utility is formulated as
UM
i = (R+ rti)
Miri∑
j∈M Mjrj
e−λ(
ti
γc+lti)
−
⎛
⎝Miri −
∑
j∈N〉
cj
⎞
⎠ pi −
∑
j∈N〉
Bi
jcj , (3)
where pi is ECO’s unit resource price to CMN i, and the cost
for device j in CMN i using unit resource is defined as Bi
j .
After successful mining, mining-devices split the reward in
proportion to their contributed resources to solve the block.
Moreover, we impose certain penalties on those who leave the
CMN before providing enough mining resources that meet the
expected average mining resources ri, and reward the excess. So
the expected profit of mining-device k in CMN i is formulated
as
Um
k,i =
c
′
k
c
′
k +
∑
j �=k cj
E − (ri − c
′
k)ρi − c
′
kB
i
k, (4)
where E = (R+rti)Miri∑
j∈M Mjrj
e−λ(
ti
γc+lti) − (Miri −
∑
j∈N〉 cj)pi,
c
′
k is the number of resources actually used for mining before
the node exits and ρi is the penalty coefficient in CMN i set
according to the market. We can see that some mobile devices
with tiny resources and high mobility may not be profitable. So
when a new device joins the CMN, it first estimates the mining
profit regarding its resources. If it is not profitable, it can choose
to share its resources to high-capacity devices.
B. Mining Offloading Model
In this subsection, a double auction model is adopted for
mining offloading within the CMN, and mining offloading to
ECO is modeled as a Stackelberg game.
1) Mining Offloading Within CMN: Considering the com-
petition among mining-devices, we adopt a double auc-
tion [36], [37] method for resource sharing between mobile
devices in CMN.
In the double auction, each mining-device (buyer) i decides a
bid for unit resource indicated as bi. Each sharing-device (seller)
j has a maximum amount of resources available defined as Rj ,
and the asking price for unit resource is given as sj . Since the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: BLOCKCHAIN MEETS EDGE COMPUTING 5553
mining profit function of a single mobile device is convex in the
resource quantity, gaining more mining resources will definitely
bring more profit. So we assume that the resource demand of
the mining-device is always more than any sharing-device’s
resource supply. Then, the bids, asking prices and resources
available information are all sent to the edge broker who man-
ages auction process.
Assuming that there are n buyers bidding for m sellers’
resources. To ensure all the sellers profitable, we find the inter-
section point before which sellers‘ asking prices are lower than
buyers’ bids. So bids of the n buyers are arranged in descending
order as b1 ≥ b2 ≥ · · · ≥ bn, and asking prices of the m sellers
are arranged in ascending order as s1 ≤ s2 ≤ · · · ≤ sm. If a
value k satisfying the condition bk ≥ sk and bk+1 < sk+1 can
be found, there are successful matches in the auction. To match
the supply and resource demand [38], the sellers before k are
arranged in ascending order of resource supplies asR1′ ≤ R2′ ≤
· · · ≤ Rk′ . Then the auction price between buyer k and seller k
′
is determined to (sk′ + bk)/2. After making the deal, the two
are removed from the market and the other participants repeat
the above process. When there is no k satisfying the condition,
the edge broker informs the remaining sellers and buyers to
reconsider their prices. If there are only sellers remaining after
the auction, all buyers and the remaining sellers open a new
round of auctions.
Obviously, the profit of buyer k is ub = vk − (sk′ + bk)/2,
and the profit of seller k
′
is us = (sk′ + bk)/2 −Bk′ , where vk
is the value that unit auctioned resource can create to buyer k
and Bk′ is seller k
′
’s cost of unit computing resource.
Since the buyers do not bid at the same time, they can not
know the price strategy of others. And the match result will not
be known until auction ends. So it is a static game of incomplete
information and BNE exists. In accordance with Harsanyi’s
theory [36], BNE is generally analyzed to obtain the expected
utility maximization with incomplete information in traditional
auctions as
E(u) = (vi − bi)Pwin(bi), (5)
where Pwin(bi) is buyer i’s probability of winning the auction,
vi is the expected profit from unit auctioned resource and bi is
his bid for unit resource.
As the buyers aim at maximizing their expected profits by giv-
ing the optimal bids, the optimization problem can be described
as
P1 : maxbi
ub(bi(vi)) = (vi − bi(vi)) · P{bi ≥ sj(Bj)}.
(6)
The sellers focus on figuring out the optimal asking price to
maximize their expect profits, so the optimization problem can
be formulated as
P2 : maxsj us(sj(Bj))=(sj(Bj)−Bj) · P{bi(vi) ≥ sj}.
(7)
2) Mining Offloading to ECO: ECO is profitable by charging
the CMNs for using its resources. So its net profit is given as
revenue from CMNs getting rid of calculation cost
UECO =
∑
i∈M
(pi −B)
⎛
⎝Miri −
∑
j∈N〉
cj
⎞
⎠, (8)
where B is the cost for performing unit work on edge cloud.
CMN tends to achieve its maximum utility while ECO focuses
on getting the most profits. Hence, to adjust the demand of
computation resources and the price for using them, this process
is modeled as Stackelberg Game. ECO who is the leader first
declares the prices for unit resource to CMNs (followers). Based
on other CMNs’ strategies and the prices announced from ECO,
the followers decide their expected mining resources. Then,
according to the state of resource allocation, ECO provides the
optimal price to obtain the maximum profit.
The objective of CMN i is to maximize its own utility by
choosing the optimal mining resource size for given price pi set
by the ECO. Mathematically, this problem can be described as
P3 : maxri U
M
i (ri, r−i, pi)=(R+ rti)
Miri∑
j∈M Mjrj
e−λ(
ti
γc+lti)
−
⎛
⎝Miri −
∑
j∈N〉
cj
⎞
⎠ pi −
∑
j∈N〉
Bi
jcj . (9)
The goal of ECO is to maximize its revenue obtained from
renting computation resources to mobile devices. Mathemati-
cally, the optimization problem at ECO’s side can be expressed
as
P4 : maxp≥0 UECO(p, r) =
∑
i∈M
(pi −B)
⎛
⎝Miri −
∑
j∈N〉
cj
⎞
⎠,
(10)
note that pi can be uniform or different meaning that pricing can
adapt to different demands of CMNs for resources.
IV. OFFLOADING WITHIN CMN BASED ON
DOUBLE AUCTION
In this section, on the basis of the double auction model
presented in section 3.2.1, we calculate the BNE to acquire the
optimal auction strategy in CMN.
In a round of mining, mobile devices first carry out the auction
process to offload mining tasks to neighbour devices. After
that, the remaining mining tasks will be offloaded to the edge
cloud. Since the network is dynamic, we consider to balance the
algorithm overhead and wait time of newly joining devices and
set the process to non-preemptive. When the number of newly
joining devices for mining in the CMN reaches Nf , these newly
added devices execute the proposed algorithm and perform a
new round of mining.
The sellers do not bid at the same time, when a new sharing-
device joins the CMN, it announces the asking price to mining-
devices. When a sharing-device exits, the profit it obtains is
the number of resources it provides by auction price. To sim-
plify the process, we premise that all mining-devices (buyers)
and sharing-devices (sellers) give prices with a linear strategy.
Before buyer i participates in the auction, it first considers the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
5554 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 69, NO. 5, MAY 2020
resource value as part of its bid, presented as
bi = ηb + ξb × vi, (11)
where vi =
ci∑
j∈N〉 cj
E + ρ obtained from (4) is miner i’s pos-
sible profit from unit auctioned resource, and ηb and ξb are the
fixed parameters. And seller j considers the cost as part of its
asking price, presented as
sj = ηs + ξs ×Bj , (12)
and ηs and ξs are the fixed parameters.
According to the history of transaction records, it is sup-
posed that the permitted maximum auction price in the market
is Pmax and the permitted minimum auction price is Pmin.
So unit cost and profit from unit resource follow uniform
distribution
Bi ∼ U [Pmin, Pmax], vi ∼ U [Pmin, Pmax]. (13)
Thus, sj and bi follow
sj ∼ U [ηs + ξsPmin, ηs + ξsPmax],
bi ∼ U [ηb + ξbPmin, ηb + ξbPmax]. (14)
Considering the property of uniform distribution and the
definition of auction price, (6) and (7) can be further transformed
into
P1
′
: maxbi
{
vi − 1
2
[bi + E(sj(Bj) | bi ≥ sj(Bj))]
}
· P{bi ≥ sj(Bj)}. (15)
P2
′
: maxsj
{
1
2
[sj + E(bi(vi) | bi(vi) ≥ sj)]−Bj
}
· P{bi(vi) ≥ sj}. (16)
Further, P{bi ≥ sj(Bj)} and E(sj(Bj) | bi ≥ sj(Bj)) can
be calculated as (17) and (18).
P{bi≥sj(Bj)} = P
{
Bj≤bi − ηs
ξs
}
=
bi − (ηs + ξsPmin)
(Pmax − Pmin)ξs
, (17)
E{sj(Bj)|bi≥sj(Bj)} =
∫ bi
ηs+ξsPmin
1
(Pmax−Pmin)ξs
xdx
P{bi≥sj(Bj)}
=
1
2
(bi + ηs + ξsPmin). (18)
Finally, by substituting the above two formulas into (15) we
can achieve the final form of P1
′
P1
′′
: maxbi
{
vi − 1
2
[
bi +
1
2
(bi + ηs + ξsPmin)
]}
· bi − (ηs + ξsPmin)
(Pmax − Pmin)ξs
. (19)
Similarly, P2
′
can be further simplified to
P2
′′
: maxsj
{
1
2
[
sj +
1
2
(sj + ηb + ξbPmax))
]
−Bj
}
· (ηb + ξbPmin)− sj
(Pmax − Pmin)ξb
. (20)
We derive the first order and second order derivatives of the
above two equations, finding that the two problems are concave.
Let the first derivatives be 0, and we can obtain
bi =
2vi + (ηs + ξsPmin)
3
, (21)
sj =
2Bj + (ηb + ξbPmax)
3
. (22)
By substituting (11), (14) into (21), (22), the equilibrium point
can be obtained.
ηs =
Pmin
12
+
Pmax
4
, ξs =
2
3
, (23)
ηb =
Pmax
12
+
Pmin
4
, ξb =
2
3
. (24)
Finally, we obtain the optimal bid and asking price as listed
below. We can see that the buyer gives its optimal bid linear to
the value and the optimal asking price of seller is linear to the
cost.
b∗i =
2vi
3
+
Pmin
4
+
Pmax
12
, (25)
s∗j =
2Bj
3
+
Pmax
4
+
Pmin
12
. (26)
To sum up the auction model in section 3.2.1 and the opti-
mization problems above, a resource auction algorithm in CMN
is presented in Algorithm 1.
V. OFFLOADING BETWEEN CMN AND ECO BASED ON
STACKELBERG GAME
In this section, on the basis of the Stackelberg game model
presented in section 3.2.2, we analyze the performance of the
game model and calculate the NE to obtain the optimal resource
allocation and pricing between ECO and CMNs.
A. Offloading Algorithm
Given the utility function defined in (9) and (10), we now
analyze the performance of the Stackelberg game. The strate-
gic game can be formulated as Γ = 〈M, (ri)i∈M, (ui)i∈M〉, in
which the players are M CMNs. (ri)i∈M denotes the set of
strategies (number of mining resources) of CMNs, and (ui)i∈M
denotes the utility functions. We refer to the game as a multi-user
noncooperative offloading game. Considering that if CMNs can
compute a strategy profile in which no CMN can further increase
its utility overhead by changing its strategy, there is a pure NE
in the game.
Definition 1: For the strategic game Γ, given the price vec-
tor set by ECO p∗ = (p∗1, p
∗
2, . . . , p
∗
M ), no CMN can increase
its utility overhead by unilaterally changing its strategy under
strategy profile r∗ = (r∗1, r
∗
2, . . . , r
∗
M ), r∗ is the unique NE, i.e.,
UM
i (r∗i , r
∗
−i, p
∗
i ) > UM
i (ri, r
∗
−i, p
∗
i ), ∀ri ∈ R. (27)
Based on the NE of the mining resources in game Γ, ECO
(leader) can optimize its pricing strategy to maximize its profit
defined in (10).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: BLOCKCHAIN MEETS EDGE COMPUTING 5555
Definition 2: Given the NE of the mining resources in game
Γ, a strategy profile p∗ = (p∗1, p
∗
2, . . . , p
∗
M ) is the optimal price,
if at p∗, ECO can’t further increase its profit by unilaterally
changing its strategy, i.e.,
UECO
i (p∗, r∗) > UECO
i (p, r∗), ∀p > 0. (28)
To sum up, the Stackelberg game based offloading algorithm
between CMN and ECO is detailed in Algorithm 2.
B. Analysis of the NE for the Offloading Game Between
CMN and ECO
We consider two modes of ECO’s pricing: uniform pricing
and differentiated pricing. Next, the existence of the optimal
mining resources and the optimal prices in these two modes will
be proved.
1) Uniform Pricing: Under uniform pricing, ECO charges
the same price p for different users, so we can replace pi with p
in (9) and (10).
Theorem 1: The NE in game Γ = 〈M, (ri)i∈M, (ui)i∈M〉
exists.
Proof: The strategy space is defined to ri ∈ [ri, r],where ri
is the average resources of mining-devices in CMN i and r is
the maximum resources can be provided by ECO. So it is a
nonempty, compact and convex subset of the Euclidean space
RM , UM
i is obviously continuous in ri. We take the first order
and second order derivatives of (7) with respect to ri, which are
given as follows.
∂UM
i
∂ri
= Mi(R+ rti)e
−λ(
ti
γc+lti)
∑
i�=j Mjrj
(
∑
j∈M Mjrj)2
−Mip,
(29)
∂2UM
i
∂2ri
= −2M 2
i (R+ rti)e
−λ(
ti
γc+lti)
∑
i �=j Mjrj
(
∑
j∈M Mjrj)3
. (30)
Since
∑
i�=j Mjrj
(
∑
j∈M Mjrj)2 > 0 and −2M 2
i
∑
i�=j Mjrj
(
∑
j∈M Mjrj)3 < 0, the
second order derivative of Um
i with respect to ri is always
negative so that Um
i is concave in ri. Now we have proved the
existence of the NE. �
Theorem 2: The NE of game Γ is unique.
Proof: Let r∗i denote the value of resource that satisfies the
condition ∂UM
i
∂ri
= 0. From (29) we can get the best response
function of CMN i as
r∗i = Fi(x) =
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎩
ri,
ζr −∑i �=j Mjrj
Mi
< ri,
r,
ζr −∑i�=j Mjrj
Mi
> r,
ζr −∑i�=j Mjrj
Mi
, otherwise,
(31)
where ζr =
√
(R+rti)
∑
i�=j Mjrj
peλ(
ti
γc+lti)
.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
5556 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 69, NO. 5, MAY 2020
The functionFi(x) is positive, monotonic and scalable, which
is a standard function. Therefore, there is a unique NE for game
Γ. �
Theorem 3: The unique NE for game Γ is given as
r∗i =
M − 1
Mi
∑
j∈M ζuj
− ζui
Mi
(
M − 1
∑
j∈M ζuj
)2
, ∀i ∈ M, (32)
where ζuj = peλ(
tj
γc+ltj)
(R+rtj)
.
Proof: Let ∂UM
i
∂ri
in equation (29) be 0, we can get
∑
i �=j Mjrj
(
∑
j∈M Mjrj)2
=
MipEi
Mi(R+ rti)
, (33)
where Ei = eλ(
ti
γc+lti).
To make it tractable, we get
∑
j∈M
Mjrj =
√
Mi(R+ rti)
∑
i �=j Mjrj
MipEi
. (34)
The sum of two sides of (33) at different i is calculated as
(M − 1)
∑
j∈M Mjrj
(
∑
j∈M Mjrj)2
=
∑
i∈M
MipEi
Mi(R+ rti)
. (35)
By simplifying (35),
∑
j∈M
Mjrj =
M − 1
∑
i∈M
MipEi
Mi(R+rti)
. (36)
Finally, by substituting equation (36) into equation (34), the
NE is obtained as equation (32). �
Theorem 4: ECO has a unique optimal price to maximize
profit when ri ∈ [ri, r].
Proof: By substituting (32) into (10), we simplify the ECO
profit maximization problem to
UECO(p, r)=
∑
i∈M
p−B
p
N(M − 1)
∑
j∈M
Neλ(
tj
γc+ltj)
(R+rtj)
−(p−B)C,
(37)
where C is
∑
i∈M
∑
j∈N〉 cj . Then we calculate the first and
second derivatives of profit UECO as follows.
∂UECO
∂p
=
∑
i∈M
B
p2
N(M − 1)
∑
j∈M
Neλ(
tj
γc+ltj)
(R+rtj)
− C, (38)
∂2UECO
∂2p
=
∑
i∈M
−2B
p3
N(M − 1)
∑
j∈M
Neλ(
tj
γc+ltj)
(R+rtj)
. (39)
Since the second derivative of UECO with respect to p is
always negative, UECO is concave in p. Now we have proved
that, with the unique optimal price, the maximum profit of ECO
can be obtained. �
2) Differentiated Pricing: Under the differentiated pricing
scheme, ECO can charge different prices pi for different CMNs
based on their demands on resources,
Theorem 5: There is a unique NE in Γ =
〈M, (ri)i∈M, (ui)i∈M〉.
Proof: Similar to uniform pricing, the NE exits since the
second derivative (41) is always negative and Um
i is concave in
ri.
∂UM
i
∂ri
= Mi(R+ rti)e
−λ(
ti
γc+lti)
∑
i �=j Mjrj
(
∑
j∈M Mjrj)2
−Mipi,
(40)
∂2UM
i
∂2ri
= −2M 2
i (R+ rti)e
−λ(
ti
γc+lti)
∑
i�=j Mjrj
(
∑
j∈M Mjrj)3
. (41)
�
In addition, let r∗i denote the value of resource that satisfies
the condition ∂UM
i
∂ri
= 0. From (40) we can get that the best
response function is standard and the NE is unique similar to
uniform pricing, which is given as
r∗i =
M − 1
Mi
∑
j∈M ζdj
− ζdi
Mi
(
M − 1
∑
j∈M ζdj
)2
, ∀i ∈ M, (42)
where ζdj =
pjNeλ(
tj
γc+ltj)
(R+rtj)
.
Theorem 6: ECO has a unique optimal price vector p to
maximize profit when ri ∈ [ri, r].
Proof: We first take the first and second partial derivative
of UECO(p) with respect to pi and the second mixed partial
derivative with respect to pi, pj as
∂UECO
∂pi
=
∑
j∈M B(M − 1) Ej
(R+rtj)
(
∑
j∈M
pjEj
(R+rtj)
)2
− C, (43)
∂2UECO
∂2pi
=
−2 Ei
(R+rti)
∑
j∈M B(M−1) Ej
(R+rtj)
(
∑
j∈M
pjEj
(R+rtj)
)3
, (44)
∂2UECO
∂pi∂pj
=
−2 Ej
(R+rtj)
∑
j∈M B(M−1) Ej
(R+rtj)
(
∑
j∈M
pjEj
(R+rtj)
)3
, (45)
where Ej = eλ(
tj
γc+ltj).
Then the Hessian matrix of UECO(p) is described as
H = Δ ·
⎡
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
E1
(R+rt1)
E2
(R+rt2)
. . . EM
(R+rtM )
E1
(R+rt1)
E2
(R+rt2)
. . . EM
(R+rtM )
. . . . . . . . . . . .
E1
(R+rt1)
E2
(R+rt2)
. . . EM
(R+rtM )
E1
(R+rt1)
E2
(R+rt2)
. . . EM
(R+rtM )
⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
, (46)
where Δ = −2B(M − 1)
∑
j∈M
Ej
(R+rtj)
/(
∑
j∈M
pjEj
(R+rtj)
)3.
Since the second partial derivative (44) and the second mixed
partial derivative (45) are always negative, the Hessian matrix
of UECO(p) is obviously semi-negative. Therefore, UECO(p)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: BLOCKCHAIN MEETS EDGE COMPUTING 5557
TABLE I
SYMBOL SUMMARY
is concave on each pi and there is a unique optimal price vector
to get the maximum profit of ECO. �
We now finish proving the unique existence of the optimal
mining resource allocation and the optimal prices under uniform
pricing and differentiated pricing.
VI. SIMULATION RESULTS AND EVALUATIONS
A. Simulation Settings
Experimentally, the proposed system is implemented by using
Hyperledger Fabric to write smart contracts on the blockchain.
The Fabric network is divided into four organizations, and each
organization enables sixteen peers to simulate a CMN. Each peer
is installed on a x64 virtual machine with 32 vCPUs. In order
to ensure the accuracy of the experimental results without being
affected by device random exit or entry, we initiate 10 fabric
networks and average the experimental results.
In the experiment, we first create 500 blocks based on the
loadtest library of Node.js and use the peers to implement the
mining process. Then we study the resource allocation and prof-
its of ECO and CMN as the primary performance metrics for the
proposed mechanism. Profits of ECO and miners are compared
with the pricing-based edge computing resource management
method (PECRM) in [28]. PECRM is a pricing-based method
for edge resources which only considers offloading to edge
cloud. Simulation results verify the superiority of the proposed
mechanism. Further, we study the impact of various configurable
parameters such as delay effect, transaction number, reward
rate, etc. on the performance of CMN and ECO to give some
suggestions on their mining strategies. The related parameters
in the simulation are listed inTable II, which are derived from
simulation on the fabric. They are applied in simulation exam-
ples unless otherwise stated.
B. Simulation Results and Evaluations
As described in Section IV, when the number of newly joining
devices for mining reaches Nf , a new round of mining is carried
TABLE II
SIMULATION PARAMETERS
Fig. 2. Profit of CMN in a mining interval at different algorithm execution
frequencies.
out. Under the experimental parameters in Table II, we can get
an average mining time of 10 minutes. In a mining interval T ,
we assume that 10 new devices join the CMN every 5/3 minutes.
Fig. 2. shows profits of CMN under different Nf when there are
60, 80, and 100 miners in a CMN initially. We can get that, in the
interval T , if a new round of mining starts when Nf is slightly
less than half of the original number of miners, the maximum
profit can be obtained.
Next, more numerical simulations are performed to verify the
superiority of the proposed mechanism. We initiate three CMNs,
each with 100 devices.
We first analyze the mining success possibility of three CMNs
under different parameters in Fig. 3. We can see that with the
increase of delay effect, the mining success possibility decreases
because the probability of generating an orphan block increases.
When the delay effect is more than 0.06, the mining success
possibility of CMN with miner density (number of mining-
devices/total devices) 0.5 is less than 0.05. Therefore, in the case
of high delay effect, it is not necessarily profitable for CMN with
few mining-devices to mine. Besides, CMN with miner density
0.7 has a higher success rate under differentiated pricing than
uniform pricing, while CMN with miner density 0.5 and 0.9 are
opposite. This is because under differentiated pricing, ECO fixes
the price flexibly in view of mining-device number. According to
Fig. 5, ECO charges more for unit resource usage of CMN with
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
5558 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 69, NO. 5, MAY 2020
Fig. 3. Mining success possibilities under different delay effects, mining-
device numbers and pricing schemes.
Fig. 5. Average auction price under different transaction numbers, reward rates
and pricing schemes.
more mining-devices, so that there are less resource requests
in CMN with high mining-device number under differentiated
pricing than uniform pricing, resulting in lower mining success
rate under differentiated pricing than uniform pricing.
Fig. 4 and Fig. 5 depict the auction price of resources within
the CMN with respect to transcation number, reward rate, and
delay effect.
According to Fig. 4, the average auction price of resources
is between 40 and 50. This range is reasonable due to higher
than computational cost and lower than ECO’s price. In terms
of mining-device number, the auction price within the CMN
decreases as the mining-device number increases, as mining-
devices give bids based on their expected profits, which decrease
as the number of mining-devices increases. The figure also
compares the auction price under differentiated pricing and
uniform pricing. Since the optimal price under differentiated
pricing is lower than uniform pricing, the expected profit under
differentiated pricing is higher, generating higher auction price.
Meanwhile, the possibility of successful mining drops when
delay effect increases, so the auction price steps down.
Fig. 4. Average auction price under different mining-device numbers, delay
effects and pricing schemes.
Fig. 6. Optimal price of ECO under different mining-device numbers, price
limits and pricing schemes.
In Fig. 5, the increase in transaction number brings an increase
in the auction price. Similar to Fig. 4, the auction price is
determined by the expected profit and the computing cost. When
the number of transactions is not overloaded, the commission
remuneration is proportional to transaction number. And since
the cost is fixed and the expected profit rises as transaction
number rises, the expected profit increases too. Similarly, the
auction price is higher under high reward rate.
In Fig. 6, CMNs with price limits of 70, 80 and 90 are
compared to obtain the pricing strategy of ECO. CMN with
a price limit under uniform pricing always sets the optimal price
to the highest price within the limit. But the optimal price under
differentiated pricing is slightly lower than uniform pricing and
approaches the limit gradually as the mining-device number
increases. Due to differentiated pricing, the optimal price can be
dynamically adjusted according to different resource demands.
It is expected that competition with more miners forces up the
optimal price.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: BLOCKCHAIN MEETS EDGE COMPUTING 5559
Fig. 7. Optimal average resource allocation under different mining-device
numbers, delay effects and pricing schemes.
Fig. 8. Optimal average resource allocation under different mining-device
numbers, transaction numbers and pricing schemes.
The analysis of resource demand is presented in Fig. 7 and
Fig. 8. In Fig. 7, we find that under uniform pricing, as the
mining-device number increases, the optimal average resource
demand increases. However, under differentiated pricing, as the
increase in mining-device number leads to a rise in resource
prices, the average resource demand decreases after reaching a
certain level due to high price. Besides, when the mining-device
number is fixed, the lower the delay effect, the higher the average
resource demand. This is because miners have higher enthusiasm
to mine when the possibility of success is high. Fig. 8 shows that a
higher reward rate motivates miners to request more resources. It
also shows that with the increase of transaction number, average
resource demand increases. That’s because more transactions
introduces higher profitability, thus motivating miners to com-
pete for more resources to improve the possibility of successful
mining.
The profit of miners under our mechanism is compared with
PECRM in [28] in Fig. 9. We consider the impact of delay effect
and reward rate under differentiated pricing respectively. On
Fig. 9. Comparison of CMNs’ profit under PECRM and our mechanism.
average, the total profit of miners in a CMN under our mecha-
nism is 6.86% higher than PECRM. This is because we support
mining offloading to neighbor mobile devices to take advantage
of the idle computing resources in the network, thus reducing the
amount of resources requested from ECO. The top picture shows
that the higher the reward rate, the higher the CMN’s profit.
It’s expected that high returns inspire miners requesting more
resources to mine, which in turn improves the profit of CMN.
And as more miners contribute more hashing power in the CMN,
the possibility of successful mining increases, so the CMN with
more mining-devices get higher profits. The picture below shows
that under different delay effect, the profit under our mechanism
is still higher than PECRM. Moreover, with the increase of the
delay effect, the expected profit of CMN decreases. The reason
is that longer propagation delays reduce the probability of block
generation, thus reducing the expected profit.
We also observe the changing trend of ECO’s profit with
respect to delay effect and reward rate under our mechanism and
PECRM. According to Fig. 10, the profit of ECO increases as
reward rate increases due to that higher reward rate inspires more
resource demand. On the contrary, the profit of ECO decreases
when the delay effect increases. Recall from Fig. 6, average
resource demand in CMN decreases as the delay effect increases,
which in turn brings down the profit of ECO. We also compare
the profit of ECO under our mechanism with PECRM. By reason
of more resource sharing within the CMN to reduce mining
costs, the resource demand from ECO under our mechanism is
less, thus the profit of ECO under our mechanism is lower than
PECRM. This is reasonable because we are more focused on
determining the optimal resource allocation and obtaining the
maximum profit of CMN based on ECO’s optimal price.
In summary, we come to the conclusion that miners request
more resources and benefit more with lower delay effect, larger
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
5560 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 69, NO. 5, MAY 2020
Fig. 10. Comparison of ECOs’ profit under PECRM and our mechanism.
transaction volumes, and higher reward rate. And there are more
resource requests under the differentiated pricing scheme, so that
ECO profits more. What’s more, miners obtain more profits on
average when offloading to both CMNs and ECO than only to
ECO.
VII. CONCLUSION
Aiming at applying blockchain in IoT mobile devices, this
paper proposes that the free resource displayed on non-mining-
devices and edge cloud can be selected to construct collaborative
mining network (CMN) to execute mining tasks for mobile
blockchain. In the CMN, mobile users decide whether to offload
mining tasks to sharing-devices in the CMN or edge cloud.
Further, offloading within the CMN is managed by a double
auction mechanism, in which the BNE is calculated to figure
out the optimal auction price. Then, we model the interactions
between ECO and CMNs as a Stackelberg game and analyze
the NE of the game to obtain the optimal price and resource
allocation method. In the simulation, we study the impact of
various configurable parameters on the performance of CMNs
and ECO. Moreover, the performance of our mechanism is
compared with the PECRM method, simulation results show
that under our proposed mechanism, CMNs obtain 6.86% more
profits on average.
REFERENCES
[1] W. Chen et al., “Cooperative and distributed computation offloading for
blockchain-empowered industrial internet of things,” IEEE Internet Things
J., vol. 6, no. 5, pp. 8433–8446, Oct. 2019.
[2] X. Qiu, L. Liu, W. Chen, Z. Hong, and Z. Zheng, “Online deep rein-
forcement learning for computation offloading in blockchain-empowered
mobile edge computing,” IEEE Trans. Veh. Technol., vol. 68, no. 8,
pp. 8050–8062, Aug. 2019.
[3] J. Huang, L. Kong, G. Chen, M. Wu, X. Liu, and P. Zeng, “Towards
secure industrial IoT: Blockchain system with credit-based consensus
mechanism,” IEEE Trans. Ind. Informat., vol. 15, no. 6, pp. 3680–3689,
Jun. 2019.
[4] O. Novo, “Blockchain meets IoT: An architecture for scalable access
management in IoT,” IEEE Internet Things J., vol. 5, no. 2, pp. 1184–1195,
Apr. 2018.
[5] P. K. Sharma, S. Singh, Y. Jeong, and J. H. Park, “Distblocknet: A
distributed blockchains-based secure SDN architecture for IoT networks,”
IEEE Commun. Mag., vol. 55, no. 9, pp. 78–85, Sep. 2017.
[6] K. Suankaewmanee, D. T. Hoang, D. Niyato, S. Sawadsitang, P. Wang, and
Z. Han, “Performance analysis and application of mobile blockchain,” in
Proc. Int. Conf. Comput., Netw. Commun., Mar. 2018, pp. 642–646.
[7] N. Zhao, H. Wu, and Y. Chen, “Coalition game-based computation re-
source allocation for wireless blockchain networks,” IEEE Internet Things
J., vol. 6, no. 5, pp. 8507–8518, Oct. 2019.
[8] H. Cho, “Asic-resistance of multi-hash proof-of-work mechanisms for
blockchain consensus protocols,” IEEE Access, vol. 6, pp. 66 210–66 222,
2018.
[9] T. G. Rodrigues, K. Suto, H. Nishiyama, N. Kato, and K. Temma,
“Cloudlets activation scheme for scalable mobile edge computing with
transmission power control and virtual machine migration,” IEEE Trans.
Comput., vol. 67, no. 9, pp. 1287–1300, Sep. 2018.
[10] Y. Chen, B. Ai, Y. Niu, R. He, Z. Zhong, and Z. Han, “Resource al-
location for device-to-device communications in multi-cell multi-band
heterogeneous cellular networks,” IEEE Trans. Veh. Technol., vol. 68, no. 5,
pp. 4760–4773, May 2019.
[11] P. Fairley, “Blockchain world - feeding the blockchain beast if bitcoin ever
does go mainstream, the electricity needed to sustain it will be enormous,”
IEEE Spectr., vol. 54, no. 10, pp. 36–59, Oct. 2017.
[12] H. Guo, J. Liu, and J. Zhang, “Computation offloading for multi-access
mobile edge computing in ultra-dense networks,” IEEE Commun. Mag.,
vol. 56, no. 8, pp. 14–19, Aug. 2018.
[13] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When mobile
blockchain meets edge computing,” IEEE Commun. Mag., vol. 56, no. 8,
pp. 33–39, Aug. 2018.
[14] J. Wang, L. Zhao, J. Liu, and N. Kato, “Smart resource allocation for
mobile edge computing: A deep reinforcement learning approach,” IEEE
Trans. Emerg. Topics Comput., p. 1, 2019.
[15] R. Qin, Y. Yuan, and F. Wang, “Research on the selection strategies of
blockchain mining pools,” IEEE Trans. Comput. Social Syst., vol. 5, no. 3,
pp. 748–757, Sep. 2018.
[16] S. Kim, “A novel bitcoin mining scheme based on the multi-leader multi-
follower stackelberg game model,” IEEE Access, vol. 6, pp. 48 902–48 912,
2018.
[17] F. Tang, Z. M. Fadlullah, N. Kato, F. Ono, and R. Miura, “Ac-POCA:
Anticoordination game based partially overlapping channels assignment
in combined UAV and D2D-based networks,” IEEE Trans. Veh. Technol.,
vol. 67, no. 2, pp. 1672–1683, Feb. 2018.
[18] S. Zou, Z. Ma, and X. Liu, “Resource allocation game under double-sided
auction mechanism: Efficiency and convergence,” IEEE Trans. Autom.
Control, vol. 63, no. 5, pp. 1273–1287, May 2018.
[19] A. Kiayias, E. Koutsoupias, M. Kyropoulou, and Y. Tselekounis,
“Blockchain mining games,” in Proc. 2016 ACM Conf. Econ. Comput.,
2016, pp. 365–382.
[20] L. Luu, R. Saha, I. Parameshwaran, P. Saxena, and A. Hobor, “On power
splitting games in distributed computation: The case of bitcoin pooled
mining,” in Proc. IEEE 28th Comput. Secur. Found. Symp., Jul. 2015,
pp. 397–411.
[21] M. Salimitari, M. Chatterjee, M. Yuksel, and E. Pasiliao, “Profit max-
imization for bitcoin pool mining: A prospect theoretic approach,” in
Proc. IEEE 3rd Int. Conf. Collaboration Internet Comput., Oct. 2017,
pp. 267–274.
[22] K. Suankaewmanee, D. T. Hoang, D. Niyato, S. Sawadsitang, P.
Wang, and Z. Han, “Performance analysis and application of mobile
blockchain,” in Proc. Int. Conf. Comput., Netw. Commun., Mar. 2018,
pp. 642–646.
[23] K. Gai, Y. Wu, L. Zhu, L. Xu, and Y. Zhang, “Permissioned blockchain
and edge computing empowered privacy-preserving smart grid networks,”
IEEE Internet Things J., vol. 6, no. 5, pp. 7992–8004, Oct. 2019.
[24] K. Gai, Y. Wu, L. Zhu, M. Qiu, and M. Shen, “Privacy-preserving energy
trading using consortium blockchain in smart grid,” IEEE Trans. Ind.
Informat., vol. 15, no. 6, pp. 3548–3558, Jun. 2019.
[25] P. K. Sharma, M. Chen, and J. H. Park, “A software defined fog node based
distributed blockchain cloud architecture for IOT,” IEEE Access, vol. 6,
pp. 115–124, 2018.
[26] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, “Social welfare maximization
auction in edge computing resource allocation for mobile blockchain,”
IEEE Int. Conf. Commun., May 2018, pp. 1–6.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: BLOCKCHAIN MEETS EDGE COMPUTING 5561
[27] N. C. Luong, Z. Xiong, P. Wang, and D. Niyato, “Optimal auction for edge
computing resource management in mobile blockchain networks: A deep
learning approach,” IEEE Int. Conf. Commun., May 2018, pp. 1–6.
[28] Z. Xiong, S. Feng, D. Niyato, P. Wang, and Z. Han, “Optimal pricing-based
edge computing resource management in mobile blockchain,” IEEE Int.
Conf. Commun., May 2018, pp. 1–6.
[29] X. Chen, L. Jiao, W. Li, and X. Fu, “Efficient multi-user computation
offloading for mobile-edge cloud computing,” IEEE/ACM Trans. Netw.,
vol. 24, no. 5, pp. 2795–2808, Oct. 2016.
[30] D. Liu, L. Khoukhi, and A. Hafid, “Decentralized data offloading for
mobile cloud computing based on game theory,” in Proc. 2nd Int. Conf.
Fog Mobile Edge Comput., May 2017, pp. 20–24.
[31] T. Yang, Y. Hu, M. C. Gursoy, A. Schmeink, and R. Mathar, “Deep
reinforcement learning based resource allocation in low latency edge
computing networks,” in Proc. 15th Int. Symp. Wireless Commun. Syst.,
Aug. 2018, pp. 1–5.
[32] L. T. Tan and R. Q. Hu, “Mobility-aware edge caching and computing
in vehicle networks: A deep reinforcement learning,” IEEE Trans. Veh.
Technol., vol. 67, no. 11, pp. 10 190–10 203, Nov. 2018.
[33] K. Gai, M. Qiu, and H. Zhao, “Energy-aware task assignment for mobile
cyber-enabled applications in heterogeneous cloud computing,” J. Parallel
Distrib. Comput., vol. 111, pp. 126–135, 2018.
[34] X. Liu, W. Wang, D. Niyato, N. Zhao, and P. Wang, “Evolutionary game for
mining pool selection in blockchain networks,” IEEE Wireless Commun.
Lett., vol. 7, no. 5, pp. 760–763, Oct. 2018.
[35] J. Li, Y. Yuan, S. Wang, and F. Wang, “Transaction queuing game in bitcoin
blockchain,” in Proc. IEEE Intell. Vehicles Symp., Jun. 2018, pp. 114–119.
[36] A. Yassine, M. S. Hossain, G. Muhammad, and M. Guizani, “Double
auction mechanisms for dynamic autonomous electric vehicles energy
trading,” IEEE Trans. Veh. Technol., vol. 68, no. 8, pp. 7466–7476,
Aug. 2019.
[37] Z. Chen, T. Ni, H. Zhong, S. Zhang, and J. Cui, “Differentially private
double spectrum auction with approximate social welfare maximiza-
tion,” IEEE Trans. Inf. Forensics Secur., vol. 14, no. 11, pp. 2805–2818,
Nov. 2019.
[38] D. Li, Q. Yang, W. Yu, D. An, Y. Zhang, and W. Zhao, “Towards differential
privacy-based online double auction for smart grid,” IEEE Trans. Inf.
Forensics Secur., vol. 15, pp. 971–986, Aug. 2019.
Shaoyong Guo received the Ph.D. degree from the
Beijing University of Posts and Telecommunication,
Beijing, China. He is currently with the Depart-
ment of State Key Laboratory of Networking and
Switching Technology, Beijing, China. His research
interests include blockchain application technology,
edge computing, and IIoT in energy internet. His
main contribution about blockchain and Internet of
Things is taking the lead to declare ITU—standard:
Decentralized IoT communication architecture based
on information centric networking and blockchain in
ITU-T SG20 2018 and undertake State Grid’s project Application Research of
Blockchain Technology in Energy Internet.
Yao Dai received the B.S. degree in information
security from the Beijing University of Posts and
Telecommunication, Beijing, China in 2014. She is
currently working toward the MA.Sc. degree with
the State Key Laboratory of Networking and Switch-
ing Technology, Beijing University of Posts and
Telecommunications. Her main research interest lies
in edge computing, blockchain and Internet of Things
in energy Internet, including resource allocation and
application of the blockchain.
Song Guo (Fellow, IEEE) received the Ph.D. degree
in computer science from the University of Ottawa,
Ottawa, ON, Canada. He is currently a Full Professor
with the Department of Computing, The Hong Kong
Polytechnic University, Hong Kong. Prior to joining
PolyU, he was a Full Professor with the University of
Aizu, Aizuwakamatsu, Japan. His research interests
include the areas of cloud and green computing, big
data, wireless networks, and cyber-physical systems.
He has authored or coauthored more than 300 confer-
ence and journal papers in these areas and received
multiple best paper awards from IEEE/ACM conferences. His research has been
sponsored by JSPS, JST, MIC, NSF, NSFC, and industrial companies. He has
served as an Editor of several journals, including IEEE TRANSACTIONS ON
PARALLEL AND DISTRIBUTED SYSTEMS, IEEE TRANSACTIONS ON EMERGING
TOPICS IN COMPUTING, IEEE TRANSACTIONS ON GREEN COMMUNICATIONS
AND NETWORKING, IEEE Communications Magazine, and Wireless Networks.
He has been actively participating in international conferences as a General Chair
and TPC Chair. He is a Senior Member of ACM, and an IEEE Communications
Society Distinguished Lecturer.
Xuesong Qiu (Senior Member, IEEE) was born in
1973. He received the Ph.D. degree from the Beijing
University of Posts and Telecommunications, Bei-
jing, China, in 2000. He is currently a Professor and
the Ph.D. Supervisor with the State Key Laboratory
of Networking and Switching Technology, Beijing
University of Posts and Telecommunications. He has
authored about 100 SCI/EI index papers. He presides
over a series of key research projects on network
and service management, including the projects sup-
ported by the National Natural Science Foundation
and the National High Tech Research and Development Program of China.
Feng Qi is currently a Professor with the Beijing
University of Posts and Telecommunications, Bei-
jing, China, engaged in scientific research, teach-
ing, and standardization research in information and
communication. He is with Cyberspace Security Re-
search Center, Peng Cheng Laboratory, Shenzhen,
China. His research interests include communications
software, network management, and business intelli-
gence. He was the recipient of two National Science
and Technology Progress Awards. He has also written
more than ten ITU-T International Standards and
Industry Standards. Served as the Vice Chairman of the ITU-T Study Group
4 and Study Group 12.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:40:06 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice