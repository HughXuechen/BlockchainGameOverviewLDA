Stackelberg Game Based Edge Computing Resource Management for Mobile Blockchain
Stackelberg Game Based Edge Computing Resource
Management for Mobile Blockchain
Yuqi Fan, Guangming Shen
Zhifeng Jin, Donghui Hu, Lei Shi
yuqi.fan@hfut.edu.cn,2018170910@hfut.edu.cn
2019170960@hfut.edu.cn,hudh@hfut.edu.cn
shilei@hfut.edu.cn
School of Computer Science and Information Engineering,
Hefei University of Technology
Hefei, Anhui, China
Xiaohui Yuan
xiaohui.yuan@unt.edu
Department of Computer Science and Engineering,
University of North Texas
Denton, TX, USA
ABSTRACT
Blockchain can provide a dependable environment for mobile appli-
cations. As the core of blockchain, mining consumes a large amount
of computing resources, while mobile devices are too resource-
limited to perform the mining. Offloading mining computation tasks
to an edge computing service provider (ESP) or a cloud computing
service provider (CSP) is considered as a feasible solution to mobile
blockchain mining. However, the computing resources of the ESP
are not unlimited. Therefore, rational edge computing resource man-
agement is critical to maximizing the utilities of the ESP and the
miners. Most of the existing work assumes that the service provider
is an ESP or a CSP, or both. In this paper, we construct a comput-
ing offloading model consisting of multiple miners, an ESP, and a
CSP, where the ESP and the CSP are independent of each other. We
formulate a Stackelberg game with the ESP as the leader and the
miners as the followers for optimal pricing-based edge computing
resource management. We analyze the existence and uniqueness
of Stackelberg game equilibrium and derive the miners’ optimal
computing resource requests. We then propose an effective golden
section based Stackelberg game equilibrium searching algorithm
(SES) for resource pricing. We conduct the experiments through
simulations. The simulation results show that the proposed comput-
ing offloading model and algorithm can achieve high unit service
utilities of both the ESP and the end devices.
KEYWORDS
Edge computing, mobile blockchain mining, resource management,
Stackelberg game
ACM Reference Format:
Yuqi Fan, Guangming Shen, Zhifeng Jin, Donghui Hu, Lei Shi, and Xiaohui
Yuan. 2020. Stackelberg Game Based Edge Computing Resource Manage-
ment for Mobile Blockchain. In ACM Turing Celebration Conference - China
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ACM TURC’20, May 22–24, 2020, Hefei, China
© 2020 Association for Computing Machinery.
ACM ISBN 978-1-4503-7534-4/20/05. . . $15.00
https://doi.org/10.1145/3393527.3393565
(ACM TURC’20), May 22–24, 2020, Hefei, China. ACM, New York, NY,
USA, 5 pages. https://doi.org/10.1145/3393527.3393565
1 INTRODUCTION
Blockchain has been increasingly used in various areas such as
Bitcoin, financial services, Internet of Things (IoT), smart grid power
systems, etc. The annual revenue of the enterprise applications of
blockchain is estimated to increase to approximately $19.9 billion by
2025 [1]. Distributed users in blockchain network record and share
data blocks under the premise of following a consensus mechanism.
Mining plays a vital role in blockchain. A group of users, called
miners, compete to solve a compute-intensive problem. The first
miner who successfully solves the computation problem and reaches
an agreement with other miners is considered as the winner of the
competition. The winner will receive a reward and a new block will
be appended to the blockchain.
Blockchain can provide a dependable environment for mobile
applications [2, 3]. However, the computing resources required to
solve the compute-intensive mining problem are prohibitively high
for mobile devices [4]. Edge computing is considered as a viable
solution to blockchain mining in mobile environments [5], where the
end devices offload the mining tasks to an edge computing service
provider (ESP). The ESP makes profits by allocating the computing
resources for the mining tasks offloaded by the end devices. Never-
theless, the computing resources of the ESP are not unlimited and
thus competitive. Therefore, careful resource management is critical
for the ESP and end devices to maximize their utilities.
Some research on resource management for mobile blockchain
mining has been conducted. A game model consisting of miners
for the mining process of blockchain was constructed, and each
miner made the decision on which branch of the blockchain to
follow [6]. The mining pool problem was investigated by proposing
a cooperative game model, where the miners form an alliance to
finish the computing power accumulation and share stable reward
[7]. The occurrence of solving the problems of PoW is modeled as
a random variable following a Poisson process, and the analytical
solution to Nash equilibrium for two miners was presented [8]. A
two-stage Stackelberg game was adopted to jointly maximize the
profit of the ESP and the individual utilities of different miners
[9]. A joint optimization framework of Fog nodes, data service
operators and data service subscribers was proposed to implement
the optimal resource allocation scheme in a distributed manner [10].
https://doi.org/10.1145/3393527.3393565
https://doi.org/10.1145/3393527.3393565
http://crossmark.crossref.org/dialog/?doi=10.1145%2F3393527.3393565&domain=pdf&date_stamp=2020-10-26
ACM TURC’20, May 22–24, 2020, Hefei, China Fan and Shen, et al.
The PoW protocol was formalized into a Cournot game, in which
users compete to update the blockchain for rewards [11]. An optimal
auction based on deep learning for the edge resource allocation
was proposed to use valuations of the miners as the training data to
adjust the parameters of the neural networks [12]. An auction-based
market model was constructed to achieve an efficient allocation of
computing resources [13]. A joint optimization problem of mining
task offloading and block cryptographic hash cache was modeled,
and an alternating direction multiplier method was adopted to solve
the problem [14]. Two algorithms were designed to determine the
amount of computing power the mobile terminal can obtain from
different edge servers, with the aim to maximize the total net return
of mobile terminals while maintaining the fairness between the
mobile terminals [15].
Most of the existing work assumes that the service provider is an
ESP or a cloud computing service provider (CSP), or both. However,
the ESP and the CSP may be independent of each other. In this paper,
we tackle the problem of edge computing resource management for
mobile blockchain mining to maximize the utilities of ESP and end
devices with the ESP and the CSP independent of each other. The
main contributions of this paper are as follows:
(1) We construct a computing offloading model consisting of an
ESP, a CSP, and multiple mobile miners/end devices. The
mining tasks of end devices may be offloaded to the ESP
which purchases computing resources from the CSP in case
that the ESP has no enough capacity to accommodate the
requests.
(2) We design the utility functions of ESP and miners to capture
the intrinsic relationship among ESP, CSP, and miners. We for-
mulate a Stackelberg game with the ESP as the leader and the
miners as the followers for optimal pricing-based edge com-
puting resource management. We also prove the existence and
uniqueness of the Stackelberg game equilibrium and derive
the optimal amount of computing resources to purchase for
the miners. We then propose an efficient golden section based
Stackelberg game equilibrium searching algorithm (SES) for
the resource pricing.
(3) We conduct simulations to evaluate the performance of the
proposed model and algorithm. Simulation results demon-
strate the proposed model and algorithm can achieve high
unit service utilities of the ESP and the end devices.
2 COMPUTING OFFLOADING GAME
BETWEEN ESP AND MINERS
Each resource-limited end device conducts mining by offloading
the mining tasks to the ESP. The ESP and the CSP are independent
of each other. The CSP typically has enough processing capacity
to execute the mining tasks, while the miners will experience an
unpredictable Internet communication latency with the CSP. The
ESP is close to the miners so that the network latency between
the ESP and the end devices is low. Therefore, the efficiency of
executing the tasks at the edge is better than that at the cloud; that
is, the ESP achieves performance gain over the CSP. Note that the
edge has a computing capacity. When overloaded, the ESP purchases
computing resources from the CSP. The system model is illustrated
M
bb
i
b
Figure 1: System Model.
in Fig. 1, and the symbols and notations used in the paper are listed
in Table 1.
Table 1: Symbols and notations
𝐵 the set of miners/end devices
𝑀 the number of miners
𝑏𝑖 the 𝑖-th miner
𝑞𝑖 the amount of services/computing resources purchased miner 𝑏𝑖
𝑄𝑖 the maximum amount of services/computing resources that 𝑏𝑖 will pur-
chase
𝑤 the unit service reward of miners
𝑝𝑐 the unit service price of the CSP
𝑝𝑒 the unit service price of the ESP
𝛼 the unit service provisioning cost of the ESP
𝐶𝑐 the performance of executing the mining tasks at the CSP
𝐶𝑒 the performance of executing the mining tasks at the ESP
𝑁 the ESP’s computing capacity
𝐸𝑖 the utility of miner 𝑏𝑖
𝐸0 the utility of the ESP
ESP’s unit service price 𝑝𝑒 has an important impact on the ESP’s
utility. A higher 𝑝𝑒 leads to a higher ESP’s utility for a given amount
of services purchased by the miners. A low 𝑝𝑒 will attract the miners
to purchase a large amount of computing resources. Note that service
provisioning also imposes cost on the ESP, where the cost includes
power, equipment loss, etc. As the total amount of computing re-
sources sold increases, the ESP’s cost will also increase. If the total
demand of computing resources from the miners exceed the ESP’s
computing capacity, the ESP has to purchase computing resources
from the CSP at price 𝑝𝑐 , which brings computing resource purchase
cost to the ESP. If 𝑝𝑒 < 𝑝𝑐 , the ESP will experience a loss by pro-
viding computing resources to the miners, and hence the ESP are
not willing to provide services to the end devices. Therefore, we set
𝑝𝑒 ≤ 𝑝𝑐 .
The ESP’s utility, 𝐸0, is defined as follows:
𝐸0 = 𝑝𝑒Σ
𝑀
𝑖=1𝑞𝑖 + 𝛾
𝐶𝑒−𝐶𝑐
𝐶𝑐
min{𝑛, Σ𝑀
𝑖=1𝑞𝑖 }
−𝛼Σ𝑀
𝑖=1𝑞𝑖 − 𝑝𝑐 max{0, Σ𝑀
𝑖=1𝑞𝑖 − 𝑁 },
(1)
where 𝛾 is the weight of task execution efficiency.
The objective of the ESP is
Stackelberg Game Based Edge Computing Resource Management for Mobile Blockchain ACM TURC’20, May 22–24, 2020, Hefei, China
max𝐸0 = 𝑝𝑒Σ
𝑀
𝑖=1𝑞𝑖 + 𝛾
𝐶𝑒−𝐶𝑐
𝐶𝑐
min{𝑛, Σ𝑀
𝑖=1𝑞𝑖 }
−𝛼Σ𝑀
𝑖=1𝑞𝑖 − 𝑝𝑐 max{0, Σ𝑀
𝑖=1𝑞𝑖 − 𝑁 },
(2)
subject to:
0 ≤ 𝑝𝑒 ≤ 𝑝𝑐 .
Running the offloaded tasks at the cloud increases the latency
of executing mining tasks and degrades the performance of task
execution. The utility of miner 𝑏𝑖 , 𝐸𝑖 , is defined as follows:
𝐸𝑖 = 𝑤𝑞𝑖 − 𝑝𝑒𝑞𝑖 −
𝛽𝑖𝑞
2
𝑖
𝑁
, (3)
where 𝛽𝑖 is the weight of task response time for miner 𝑏𝑖 .
The objective of each miner 𝑏𝑖 is
max𝐸𝑖 = 𝑤𝑞𝑖 − 𝑝𝑒𝑞𝑖 −
𝛽𝑖𝑞
2
𝑖
𝑁
, (4)
subject to:
0 ≤ 𝑞𝑖 ≤ 𝑄𝑖 .
During the interaction between the ESP and the miners, the ESP
acts first to set unit service price 𝑝𝑒 , and then the miners respond to
the price by deciding the amount of computing resources to purchase.
Therefore, the interaction between the ESP and the users can be
formalized as a Stackelberg game with a single leader and multiple
followers, where the leader is the ESP and the each follower is a
miner.
3 RESOURCE MANAGEMENT BASED ON
GOLDEN SECTION SEARCH
In this section, we first prove the existence and uniqueness of equi-
librium of the Stackelberg game between the ESP and the miners
and derive the miners’ optimal amount of computing resources to
purchase. We then propose a Stackelberg game equilibrium search
algorithm based on the golden section search (SES) for resource
pricing.
3.1 Analysis of the Stackelberg game
LEMMA 1. There is a unique equilibrium in miner sub-game.
Proof: During miner sub-game, i.e. the second phase of the Stackel-
berg game, each miner 𝑏𝑖 determines 𝑞𝑖 , the amount of computing
resources to purchase, with the goal of maximizing the utility at
given resource price 𝑝𝑒 . The miner’s utility function defined in Equa-
tion (3) is continuous, and the second derivative of the function is
calculated as follows:
𝜕2𝐸𝑖
𝜕𝑞2
𝑖
= −2𝛽𝑖
𝑁
. (5)
We can get 𝜕2𝐸𝑖
𝜕𝑞2
𝑖
≤ 0, since 𝛽𝑖 ≥ 0 and 𝑁 > 0. Therefore, miner’s
utility 𝐸𝑖 is a strict concave function of variable 𝑞𝑖 , and there exists
a unique equilibrium in miner sub-game. □
LEMMA 2. At given computing resource price 𝑝𝑒 , the optimal
amount of computing resources purchased by miner 𝑏𝑖 is calculated
as
𝑞∗𝑖 = min( (𝑤 − 𝑝𝑒 )𝑁
2𝛽𝑖
, 𝑄𝑖 ) . (6)
Proof: At given 𝑝𝑒 , miner 𝑏𝑖 decides 𝑞𝑖 by making the first derivative
of Equation (3) equal to zero as Equation (7).
𝜕𝐸𝑖
𝜕𝑞𝑖
= 𝑤 − 𝑝𝑒 −
2𝛽𝑖
𝑁
𝑞𝑖 = 0. (7)
Note that 𝑞𝑖 ≤ 𝑄𝑖 . Therefore, the lemma is proven. □
THEOREM 1. The unique equilibrium exists in the Stackelberg
game between the ESP and the miners.
Proof:
According to Lemma 1, there is a unique equilibrium in the
second phase of the Stackelberg game. Next, we consider the first
phase of the Stackelberg game during which 𝑝𝑒 is determined by
the ESP. We can recalculate ESP utility 𝐸0 based on 𝑞∗
𝑖
obtained by
Lemma 2 as Equation (8).
𝐸0 = 𝑝𝑒Σ
𝑀
𝑖=1min{ (𝑤−𝑝𝑒 )𝑁
2𝛽𝑖 , 𝑄𝑖 } + 𝛾 𝐶𝑒−𝐶𝑐
𝐶𝑐
×min(𝑁,
min{ (𝑤−𝑝𝑒 )𝑁
2𝛽𝑖 , 𝑄𝑖 }) − 𝛼Σ𝑀
𝑖=1min( (𝑤−𝑝𝑒 )𝑁
2𝛽𝑖 , 𝑄𝑖 )
−𝑝𝑐 ×max{0, Σ𝑀
𝑖=1min (𝑤−𝑝𝑒 )𝑛
2𝛽𝑖 , 𝑄𝑖 − 𝑁 }.
(8)
The second derivative of the function is calculated via Equa-
tion (9).
𝜕2𝐸0
𝜕𝑝2
𝑒
=
𝑀∑
𝑖=1

0, (𝑤−𝑝𝑒 )𝑁
2𝛽𝑖 ≥ 𝑄𝑖 ;
−𝑁
𝛽𝑖
,
(𝑤−𝑝𝑒 )𝑁
2𝛽𝑖 < 𝑄𝑖 .
(9)
Since 𝑤 > 0, 𝛽𝑖 ≥ 0, and 𝑁 > 0, we can get 𝛿2𝐸0
𝛿𝑃2
𝑒
≤ 0, and hence
𝐸0 is a strict concave function of 𝑝𝑒 (0 < 𝑝𝑒 < 𝑝𝑐 ). That is, the ESP
can find the optimal 𝑝𝑒 to maximize the ESP’s utility. Therefore, the
Stackelberg game has a unique equilibrium. □
3.2 Stackelberg game equilibrium search
algorithm
Algorithm 1 SES
Input: 𝐵, 𝑀 , 𝑁 , 𝑤 , 𝑝𝑒 , 𝑝𝑐 , 𝑄𝑖 , 𝛼 , 𝛽𝑖 , 𝛾 , 𝜖.
Output: Optimal computing resource price 𝑝∗𝑒 .
1: Initialize 𝑡0 = 0, 𝑡3 = 𝑝𝑐 ;
2: while 𝑡3 − 𝑡0 ≥ 𝜖 do
3: 𝑡1 = 𝑡0 + 0.382(𝑡3 − 𝑡0), 𝑡2 = 𝑡0 + 0.618(𝑡3 − 𝑡0);
4: Calculate 𝑞∗
𝑖
(∀𝑏𝑖 ∈ 𝐵) at price 𝑡1;
5: Calculate ESP’s utility 𝐸
′
0 with 𝑞∗
𝑖
;
6: Calculate 𝑞∗
𝑖
(∀𝑏𝑖 ∈ 𝐵) at price 𝑡2;
7: Calculate ESP’s utility 𝐸
′′
0 with 𝑞∗
𝑖
;
8: if 𝐸
′
0 > 𝐸
′′
0 then
9: 𝑡3 = 𝑡2;
10: else if then
11: 𝑡0 = 𝑡1;
12: end if
13: end while
14: return 𝑝𝑒 =
𝑡0+𝑡3
2 .
The miners can calculate the optimal amount of computing re-
sources to purchase with Equation (6) when the ESP determines
computing resource price 𝑝𝑒 , so we need to find the optimal 𝑝𝑒 to
ACM TURC’20, May 22–24, 2020, Hefei, China Fan and Shen, et al.
maximize the ESP’s utility. The equilibrium point prediction of the
Stackelberg game in this paper is a one-dimensional single-peak
concave function extreme value searching problem, since the range
of 𝑝𝑒 is [0, 𝑝𝑐 ].
We propose an efficient golden section based Stackelberg game
equilibrium searching algorithm as shown in Algorithm 1. Two
points 𝑡1 and 𝑡2 are inserted in the searching interval of [𝑡0, 𝑡3] based
on the ratio of 0.618, where 𝑡0 and 𝑡3 are initialized as 0 and 𝑝𝑐 ,
respectively. For points 𝑡1 and 𝑡2, we calculate the optimal amount
of computing resources to purchase via Equation (6). We then obtain
the ESP’s utility function values at the two inserted points, i.e. 𝐸
′
0
and 𝐸
′′
0 . The searching interval is divided into three segments by
the inserted points. We compare the values of 𝐸
′
0 and 𝐸
′′
0 according
to the nature of the single-peak function, and one of the segments,
either [𝑡0, 𝑡1] or [𝑡2, 𝑡3], is deleted to reduce the original searching
interval. The algorithm proceeds iteratively following the process of
narrowing the searching interval until the size of searching interval
[𝑡0, 𝑡3] is less than the predefined precision threshold 𝜖. The middle
value of the final searching interval is returned as the approximate
maximum value of ESP’s computing resource price.
4 PERFORMANCE EVALUATION
In this section, we evaluate the performance of the proposed algo-
rithm (SES) through simulations. We also investigate the impact of
important parameters on the proposed algorithm.
4.1 Unit service utility of ESP
8 9 10 11 12 13 14 15 16
Number of miners : M
4
4.5
5
5.5
6
6.5
7
7.5
8
8.5
9
U
ni
t s
er
vi
ce
 u
til
ity
 o
f E
S
P
pc= 6
pc= 7
Figure 2: Impact of the number of miners on unit service utility
of ESP.
Fig. 2 shows the unit service utility of ESP 𝐸0
Σ𝑁
𝑖=1𝑞𝑖
versus different
numbers of miners, assuming 𝑁 = 100, 𝑤 = 10, 𝐶𝑒−𝐶𝑐
𝐶𝑐
= 1, 𝛼 =
1, 𝛾 = 3, 𝛽𝑖 ∈ [15, 25], and 𝑄𝑖 ∈ [40, 50] (∀𝑏𝑖 ∈ 𝐵). The unit
service utility of ESP initially increases and then decreases with
the increasing number of miners. A large number of miners leads
to a large number of computing resource requests, and hence the
ESP increases computing resource price 𝑝𝑒 to earn more income
and control the total amount of services sold. As a result, the unit
service utility of ESP initially shows an increasing trend. When the
total number of services purchased by miners exceeds the ESP’s
computing capacity, high 𝑝𝑒 makes the miners unwilling to buy
computing resources, resulting in a decreasing trend in the unit
service utility of ESP. A high cloud service price 𝑝𝑐 makes the ESP
take a large increase of 𝑝𝑒 to control the total number of services
purchased by the miners. Therefore, the unit service utility of ESP
starts to decline with a higher 𝑝𝑐 later than that with a lower 𝑝𝑐 .
1 2 3 4 5
Unit service provisioning cost of ESP : 
3
6
9
12
15
U
ni
t s
er
vi
ce
 u
til
ity
 o
f E
S
P
Performance gain=1
Performance gain=2
Performance gain=3
Figure 3: Impact of unit service provisioning cost on unit service
utility of ESP.
Fig. 3 illustrates the unit service utility of ESP with different 𝛼 ,
the unit service provisioning cost imposed on the ESP, assuming
𝑀 = 10, 𝑁 = 300, 𝑤 = 12, 𝑝𝑐 = 8, 𝛾 = 5, 𝛽𝑖 ∈ [10, 13], and
𝑄𝑖 ∈ [40, 50] (∀𝑏𝑖 ∈ 𝐵). The unit service utility of ESP decreases
as 𝛼 increases. The increase of 𝛼 indicates that the ESP takes an
increasing cost to provide services to the miners, which leads to
a decrease in the unit service utility of ESP. With the same 𝛼 , the
increase in performance gain of ESP over CSP means that the ESP
performs increasingly better than the CSP, which increases the unit
service utility of ESP.
In general, Figs. 2 and 3 demonstrate that the unit service utility
of ESP increases with the increase of (1) 𝑤 which is the unit service
reward obtained by the miners, (2) cloud service price 𝑝𝑐 , and (3)
ESP’s computing capacity 𝑁 . With the increase of the number of
miners, the unit service utility of ESP initially increases and then
decreases.
4.2 Unit service utility of miners
Fig. 4 shows the unit service utility of miners
Σ𝑀
𝑖=1𝐸𝑖
Σ𝑀
𝑖=1𝑞𝑖
versus different
ESP’s computing capacity 𝑁 , assuming 𝑀 = 10, 𝑤 = 12, 𝑝𝑐 =
7, 𝐶𝑒−𝐶𝑐
𝐶𝑐
= 1, 𝛼 = 1, 𝛾 = 3, and 𝑄𝑖 ∈ [40, 50] (∀𝑏𝑖 ∈ 𝐵). The
unit service utility of miners increases with the increase of 𝑁 . A
large ESP’s computing capacity enables a big number of tasks to
be executed by the edge, which increases the miners’ utilities. It
can be observed that a large 𝛽, the weight range of task response
time, results in a low unit service utility of miners, since the negative
impact of executing the tasks at the cloud increases with the increase
of 𝛽.
Fig. 5 depicts the unit service utility of miners by varying 𝑤 ,
the unit service reward of the miners, assuming 𝑀 = 10, 𝑝𝑐 = 7,
Stackelberg Game Based Edge Computing Resource Management for Mobile Blockchain ACM TURC’20, May 22–24, 2020, Hefei, China
300 320 340 360 380 400 420 440 460 480 500
Unit service provisioning cost of ESP : 
2.8
3
3.2
3.4
3.6
3.8
4
U
ni
t s
er
vi
ce
 u
til
ity
 o
f m
in
er
s
=[10,13]
=[13,16]
Figure 4: Impact of ESP’s computing capacity on unit service
utility of miners.
10 10.5 11 11.5 12 12.5 13
Unit service reward of miners : w
1.5
2
2.5
3
3.5
4
4.5
5
U
ni
t s
er
vi
ce
 u
til
ity
 o
f m
in
er
s
N=300
N=400
N=500
Figure 5: Impact of unit service reward𝑤 on unit service utility
of miners.
𝐶𝑒−𝐶𝑐
𝐶𝑐
= 1, 𝛼 = 1, 𝛾 = 3, 𝛽𝑖 ∈ [10, 13], and 𝑄𝑖 ∈ [40, 50] (∀𝑏𝑖 ∈ 𝐵).
The service utility of miners increases as 𝑤 increases. The increase
of 𝑤 leads to more rewards of the miners, such that the miners are
willing to purchase more computing resources. With a small ESP’s
computing capacity, the miners’ competition for edge resources is
intense so that a big number of tasks are executed by the CSP, which
decreases the miners’ utilities.
In general, Figs. 4 and 5 demonstrate that the unit service utility
of miners increases with the increase of (1) 𝛼 which is the weight of
ESP’s unit service provisioning cost, (2) 𝛽𝑖 which is the weight of
task response time for each miner 𝑏𝑖 , (3) 𝑤 which is the unit service
reward obtained by the miners, and (4) ESP’s computing capacity
𝑁 .
5 CONCLUSIONS
Offloading mining computation tasks to an edge computing service
provider (ESP) or a cloud computing service provider (CSP) is con-
sidered as a feasible solution for end devices to conduct blockchain
mining in mobile environments. The ESP makes profit by allocat-
ing computing resources for the mining tasks of end devices. The
computing resources of the edge server are limited, and hence ra-
tional management of computing resources at the edge is critical to
maximizing the utilities of the ESP and the miners. In this paper, we
constructed a computing offloading model which includes multiple
miners, an ESP, and a CSP, where the ESP and the CSP are inde-
pendent of each other. We formulated a Stackelberg game between
the ESP and the miners for optimal pricing-based edge comput-
ing resource management. We proved the existence and uniqueness
of Stackelberg game equilibrium and derived the miners’ optimal
amount of computing resources to purchase. We then proposed an
effective golden section based Stackelberg game equilibrium search-
ing algorithm (SES) for resource pricing. The simulation results
demonstrated that the proposed model and algorithm could achieve
high unit service utilities of both the ESP and the end devices.
6 ACKNOWLEDGMENTS
This work was partly supported by the National Natural Science
Foundation of China under Grant U1836102.
REFERENCES
[1] “Blockchain for enterprise applications.” https://www.tractica.com/research/
blockchain-for-enterprise-applications, 2018.
[2] A. Dorri, S. S. Kanhere, and R. Jurdak, “Blockchain in Internet of Things: Chal-
lenges and solutions,” arXiv:1608.05187, August 2016.
[3] D. B. Rawat and A. Alshaikhi, “Leveraging distributed blockchain-based scheme
for wireless network virtualization with security and QoS constraints,” in 2018 In-
ternational Conference on Computing, Networking and Communications (ICNC).
IEEE, 2018, pp. 332–336.
[4] K. Suankaewmanee, D. T. Hoang, D. Niyato, S. Sawadsitang, P. Wang, and Z. Han,
“Performance analysis and application of mobile blockchain,” in 2018 International
Conference on Computing, Networking and Communications (ICNC). IEEE,
2018, pp. 642–646.
[5] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, “Social welfare maximization auction
in edge computing resource allocation for mobile blockchain,” in 2018 IEEE
International Conference on Communications (ICC), 2018, pp. 1–6.
[6] J. A. Kroll, I. C. Davey, and E. W. Felten, “The economics of bitcoin mining, or
bitcoin in the presence of adversaries,” in Proceedings of WEIS, 2013, p. 11.
[7] Y. Lewenberg, Y. Bachrach, Y. Sompolinsky, A. Zohar, and J. S. Rosenschein,
“Bitcoin mining pools: A cooperative game theoretic analysis,” in Proceedings of
the 2015 International Conference on Autonomous Agents and Multiagent Systems,
2015, pp. 919–927.
[8] N. Houy, “The bitcoin mining game,” Ledger, vol. 1, pp. 53–68, 2016.
[9] Z. Xiong, S. Feng, D. Niyato, P. Wang, and Z. Han, “Optimal pricing-based
edge computing resource management in mobile blockchain,” in 2018 IEEE
International Conference on Communications (ICC), 05 2018, pp. 1–6.
[10] H. Zhang, Y. Xiao, S. Bu, D. Niyato, F. R. Yu, and Z. Han, “Computing resource
allocation in three-tier IoT fog networks: A joint optimization approach combining
Stackelberg game and matching,” IEEE Internet of Things Journal, vol. 4, no. 5,
pp. 1204–1215, 2017.
[11] J. Chiu and T. Koeppl, “Incentive compatibility on the blockchain,” in Social
Design. Springer, 2019, pp. 323–335.
[12] N. C. Luong, Z. Xiong, P. Wang, and D. Niyato, “Optimal auction for edge
computing resource management in mobile blockchain networks: A deep learning
approach,” in 2018 IEEE International Conference on Communications (ICC).
IEEE, 2018, pp. 1–6.
[13] Y. Jiao, P. Wang, D. Niyato, and K. Suankaewmanee, “Auction mechanisms in
cloud/fog computing resource allocation for public blockchain networks,” IEEE
Transactions on Parallel and Distributed Systems, 2019.
[14] M. Liu, F. R. Yu, and Y. e. a. Teng, “Computation offloading and content caching
in wireless blockchain networks with mobile edge computing,” IEEE Transactions
on Vehicular Technology, vol. 67, no. 11, pp. 11 008–11 021, 2018.
[15] Y. Wu, X. Chen, J. Shi, K. Ni, L. Qian, L. Huang, and K. Zhang, “Optimal compu-
tational power allocation in multi-access mobile edge computing for blockchain,”
Sensors, vol. 18, no. 10, p. 3472, 2018.
https://www.tractica.com/research/blockchain-for-enterprise-applications
https://www.tractica.com/research/blockchain-for-enterprise-applications
	Abstract
	1 Introduction
	2 Computing Offloading Game Between ESP and Miners
	3 Resource Management based on Golden Section Search
	3.1 Analysis of the Stackelberg game
	3.2 Stackelberg game equilibrium search algorithm
	4 Performance Evaluation
	4.1 Unit service utility of ESP
	4.2 Unit service utility of miners
	5 Conclusions
	6 Acknowledgments
	References