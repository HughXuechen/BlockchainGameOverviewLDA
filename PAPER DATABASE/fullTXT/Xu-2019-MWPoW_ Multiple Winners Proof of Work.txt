Research Article
MWPoW: Multiple Winners Proof of Work Protocol, a
Decentralisation Strengthened Fast-ConfirmBlockchain Protocol
Yibin Xu 1 and Yangyu Huang 2
1School of Computer Science and Informatics, Cardi� University, Cardi�, CF24 3AA, UK
2School of Electronic Engineering and Automation, Guilin University of Electronic Technology, Guilin 541004, China
Correspondence should be addressed to Yibin Xu; work@xuyibin.top
Received 11 July 2019; Accepted 8 October 2019; Published 18 November 2019
Guest Editor: Veljko Milutinovic
Copyright © 2019 Yibin Xu and Yangyu Huang. �is is an open access article distributed under the Creative Commons
Attribution License, which permits unrestricted use, distribution, and reproduction in anymedium, provided the original work is
properly cited.
Blockchain mining should not be a game among power oligarchs. In this paper, we present the Multiple Winners Proof of Work
Protocol (MWPoW), a mining-pool-like decentralised blockchain consensus protocol. MWPoW enables disadvantaged nodes
which post only a small amount of calculation resource in the mining game to create blocks together and compete with power
oligarchs without centralised representatives. A precise Support Rate of blocks can be determined through the mining process; the
mechanism of the mainchain determination is therefore changed and has become faster and more straightforward. Amethod that
periodically adjusts the block size and the block interval is introduced into MWPoW, which increases the system �exibility in the
changes of network conditions and data �ow. Experiments suggest, without lifting calculation and bandwidth requirements,
MWPoW is more attractive to disadvantaged nodes due to its mostly increased reward expectation for disadvantaged nodes. �e
transaction pending time is shortened chie�y, and either the block interval or the block size can be adapted amid the changes of
overall network conditions.
1. Introduction
Bitcoin [1], Ethereum [2], and other blockchain systems take
the research direction of acquiring a consistent view among
mutually distrusting participants to public attention.
Blockchain’s transparency and irreversibility make it a
perfect mechanism for maintaining the integrity and public
con�dence in applications like crowd-funding and gam-
bling, where trust is the essence. Blockchain also brings hope
to change our �nancial system and other �elds that are
vulnerable to the catastrophe caused by a failure in a single
central component. Blockchain achieved the named prop-
erties with the premise that more than half of the partici-
pated resources are always honest. Every decision in the
blockchain is a decentralised consensus decision among the
participants instead of a centralised order from the superior
governor. A blockchain is entirely decentralised when it
operates in a permitless mode where it opens the mem-
bership and sustains anonymous participants to join and
leave the system freely. Nevertheless, there are problems
with the design of permitless blockchain. With people
seeking to extend the usage of permitless blockchain to
various �elds, they have found that themajority implemental
barrier is the dilemma between the increment of throughput
and the maintenance of decentralisation.
On the one hand, the decentralisation and security of
blockchain are in jeopardy. Permitless blockchain usually
uses cryptocurrency to reward its participants to encourage
participation; however, the less competitive nodes are
expecting less or zero rewards. In Bitcoin (Nakamoto
blockchain), with a standard computer having a hash rate of
1millionH/s, the computer has to mine for an average of
62,000 years to �nd a block [3]. �e design that only the
block creator receives remuneration in every iteration of the
mining game has discouraged the disadvantaged nodes from
participating in this tensed competition, causing a tendency
to partly-centralisation.We see the same problem in Proof of
Stake (PoS) [4] byzantine consensus protocol, the people
Hindawi
Security and Communication Networks
Volume 2019, Article ID 3674274, 13 pages
https://doi.org/10.1155/2019/3674274
mailto:work@xuyibin.top
https://orcid.org/0000-0001-8490-5285
https://orcid.org/0000-0002-0491-6871
https://creativecommons.org/licenses/by/4.0/
https://creativecommons.org/licenses/by/4.0/
https://creativecommons.org/licenses/by/4.0/
https://creativecommons.org/licenses/by/4.0/
https://doi.org/10.1155/2019/3674274
with more tokens become oligarchs who are likely to win the
game. -e decentralisation is further damaged when nodes
join in the mining pools for a higher reward expectation. A
mining pool is a centralised node that gathers the resources
from individual nodes, mine as one, and distribute the
funding gained based on the resources individual nodes
posted. -e participated nodes generally have no sense of
how their resources are used; thus, honest mining pool
participants can also be an accomplice of byzantines. Merged
mining [5] is an example of this, where the mining pool
participants’ power can be used in multiple mining games of
different blockchains without their acknowledgements. -e
same problem goes to DPoS, where the stakes of minorities
are gathered by several prominent representatives, the
system is partly centralised, and then the security concerns
are aroused.
Blockchain needs to enable as many devices as possible
to participate in maintaining the decentralisation. It must
give disadvantaged devices enough time (block interval) to
digest information, verify blocks, and reach a consensus with
others. Every block interval consists of two subintervals: the
time for creating a block and the time for broadcasting the
block. -e time allocation inside every block interval
changes with the come and go of participants of diverse
calculation ability and network situation. It is difficult to
conclude a convincing reason for setting a specific block
interval and whether a block interval adjustment improves
the performance or damages the security. A previous re-
search [6] shows that a significant propagation latency in
blockchain network may cause miners to mine on dated
blocks. If the block interval is too short, the impact of
network advantage may surpass that of calculation advan-
tage in the chance to win the mining game, causing a
weakened security.
On the other hand, the throughput (transactions per
second) of blockchain, in reality, is relatively low to power its
potential applications. For the network latency and security
concerns, the block size cannot be significant. If the block
size is large, with the same block interval, the subinterval for
creating a block is shorter compared to that with smaller
block size. -is setting may cause an unbalance of the time
allocation between the two subintervals, further damaging
the security of the blockchain.
Most blockchains [1, 4, 7] require three later block
confirmations to confirm a transaction embedded to
block. -is rule brings a pending time of at least 30
minutes to accept the transaction in bitcoin [1], without
counting the pending time before a block embeds this
transaction. -is rule also contributes to the low
throughput problem because only the confirmed trans-
actions can be used in further transactions. However, this
rule is essential for the blockchain security. People only
know if a branch of blocks is the longest one to their
knowledge. -ey do not know the exact percentage of the
overall calculation power that has agreed on that branch
and if there is an unknown branch of blocks of more
support. People must wait for a predefined time window
to accept a block to the mainchain and prevent a wrong
decision in a significant propagation latency. -ere are
alternatives to this mainchain determine rule in pro-
tocols like Directed Acyclic Graph [8–10] which has
uncertain transaction confirmation time and is more
vulnerable to attacks. GHOST [11] shortens the time for
mainchain determination by allowing people mine on the
branch that has the most blocks instead of the highest
branch. However, it still requires later block confirma-
tions to accept a block finally. -ere is no clue of how
much percentage of the overall calculation power in exact
an attempt would take to overwrite the mainchain.
-is problem also exists in other blockchain byzantine
consensus protocols, e.g., Proof of Stake (PoS) [4] and
Delegated Proof of Stake (DPoS) [7]. -ey take a long
pending time to decide on a branch of blocks as the
mainchain confidently. -ere are many byzantine consensus
mechanisms in pre-blockchain eras; they often make se-
curity/performance trade-offs which make them no longer a
trustworthy decentralised system. Byzantine consensus
mechanisms such as those in [12–14] are specified working
in a closed-membership setting, the participants are fixed,
and they all know each other’s identities through authen-
ticated third parties. -ese mechanisms are incredibly
vulnerable to Sybil attacks [15], where the byzantine re-
peatedly creates different identities to acquire a significant
influence on the system. More protocols such as those in
[16–18] either scale poorly with the number of participants
or are inefficient.
In this paper, we showMultiple Winners Proof of Work
protocol (MWPoW), a consensus protocol that attempts to
increase the scalability of blockchain while maintaining the
decentralisation by (1) introducing a method to dynami-
cally adjust the block interval and make it fit into the
network situation, (2) changing the way of mainchain
determination and shortening the transaction pending
time, and (3) strengthening the decentralisation by in-
creasing the chance for disadvantaged participants to re-
ceive remuneration.
In MWPoW, we encourage people to join in the
blockchain directly by eliminating the reward-expectation
gap between mining on the blockchain and mining in a
mining pool. A block is not published by one miner but by a
group of miners. Miners receive remuneration based on
their contribution directly if they collectively mined a block.
We improve the scalability of blockchain by shortening the
time to accept a block finally: any node can calculate a
precise Support Rate of a block without waiting later block
confirmations. An exact percentage for time allocation in
block interval can be derived, either the block size or the
block interval can be dynamically adjusted safely and rea-
sonably to fit into the data flow.
Compared to the previous MWPoW paper [19], this
paper makes the following improvements; parts of the
MWPoW are redesigned:
(i) -e mandatory grouping requirements are re-
moved, and miners are not assigned into three
predefined groups.
(ii) -e block Support Rate is systematically defined and
analyzed.
2 Security and Communication Networks
(iii) -e branch choosing and the mainchain de-
termination method are thoroughly redefined.
(iv) -e new approach to adjust block interval and block
size is introduced.
(v) -e performance is compared with other fast-
confirm protocols.
2. Multiple Winners Proof of Work Protocol
2.1. MWPoW Outline
2.1.1. Definition
(i) Calculation Power Claim. A miner’s calculation
power is defined as the hash difficulty one can
achieve in a fixed time window. Calculation Power
Claim is the hash difficulty that a miner intends to
reach in every round of the mining game:
CP � CP0 + CP1 + · · · + CPN− 1, (1)
where CP is the overall power claimed by regis-
tered participants, N is the number of registered
participants in the network, and CPN− 1 is the
Calculation Power Claim of registered participant
N.
(ii) New Join. New Join is a data set, which records the
Calculation Power Claim of a participant and a
wallet address of this participant (the wallet ad-
dress is used for receiving remuneration). -ere is
a Nonce field in New Join, which is used for
adjusting the hash of New Join. For a New Join to
be valid, the hash of this New Join must meet at
least the Calculation Power Claim of this New Join.
Table 1 shows the structure of New Join.
(iii) Try Range. Try Range (TR) is a number interval of
the Nonce in block header:
TRi � 􏽘
i− 1
k�0
Ttk, 􏽘
i
k�0
Ttk
⎡⎣ ⎞⎠, Tti∈N �
CPi
CP
∗ 2256, (2)
whereN is the number of registered participants in
the network. Miner i ∈ N mines on TRi.
(iv) Acceptance Difficulty. -e first block that reaches
the Acceptance Difficulty in a round of mining
should be placed in the mainchain. Acceptance
Difficulty is adjusted based on how much time is
consumed for the winner block to achieve the
Acceptance Difficulty:
ADx �
BI∗ADx− 1
Timestampx− 1 − Timestampx− 2
, (3)
where ADx is the Acceptance Difficulty at the block
height X, BI is the predefined block interval, and
Timestampx is the time when block X is created.
(v) Entrance Difficulty. A block is broadcasted to the
network when this block reached Entrance Diffi-
culty. Entrance Difficulty of a new round is
adjusted base on how many blocks reached En-
trance Difficulty in the previous round of the game:
EDx � min
NEX− 1
DN
∗EDX− 1,
ADx
2
􏼒 􏼓, (4)
where EDx is the Entrance Difficulty at the block
height X; NEx− 1 is the number of blocks reached
Entrance Difficulty at block height X − 1; DN is the
ideal number of NE, and we set DN � 1.
(vi) Share. Share is a container of Nonce when
broadcasting. -e Nonce inside a Share which is
sent by a miner must make the hash of the block
fulfill at least 25% of this miner’s Calculation
Power Claim. Table 2 shows the structure of Share.
(vii) Countable Share. If a miner has sent at least two
valid Shares for a block, the difficulties of these
Shares are counted toward the Support Rate of this
block and the miner will be able to receive re-
muneration for announcing this block if this block
wins the game later.
(viii) Share Difficulty Cap. -e maximum sum of diffi-
culties of Countable Shares sent by a miner X in a
round of game is CPX (its Calculation Power
Claim). If it sends more, the sum is capped at CPX.
(ix) Support Rate. -e Support Rate of a block is de-
fined as the ratio between the sum of the difficulties
of the Countable Shares for the branches stem
from this block and the sum of difficulties of all
Countable Shares of all the branches in the
blockchain since the block height of this block:
SRX �
􏽐
XL
i�XSD i{ }
􏽐
k
i�0􏽐
iL
j�iSD j{ }
. (5)
where SRX is the Support Rate of block X; XL is the
latest block on top of the blockchain branch stem
from block X; k is the number of all the branches;
iL refers to the latest block on top of the specific
branch; SD i{ } is the total difficulty of the Countable
Shares for block i.
Figure 1 shows an example where red and blue
dotted boxes include the branches stem from block
1 and block 2, respectively. -e Support Rate of
block 1 is 28.57% while which of block 2 is 71.43%.
(x) Reward. -e reward is given as follows:
Ri∈NR �
SDi
SD X{ }
∗R X{ }. (6)
where NR is the set of miners who contributed the
Countable Shares for announcing block X; R X{ } is
the overall reward assigned from the system for the
block at the block height X; Shares of block X are
embedded in block X + 1; SD X{ } is the total dif-
ficulty of the Countable Shares embedded in block
X + 1; SDi is the difficulty of the Countable Shares
miner i contributed to; and Ri∈NR is the amount of
remuneration given to miner i as a Coinbase
transaction in block X + 1.
Security and Communication Networks 3
(xi) Valid Block. A miner determines a block as a valid
one when the transactions, New Joins and Shares
in this block are correct; the Shares and New Joins
must be more than 90% previously known to the
miner.
(xii) Registered Power. -e Registered Power of a
block height is defined as the sum of all the new
calculation power shown in the New Joins
embedded in the block sat this block height plus
the sum of all the remaining calculation power
after expelling unqualified miners who failed to
show 50% of their powers when announcing the
preceding block. Figure 2 shows an example,
where the New Joins of miner A and miner B are
embedded in block 1, Miner A worked on block
2, and miner B worked on block 3 (that is why
they are expelled from the other branch). -e
New Joins of miners C, D, E, F, G, H, I, J, K, and
L show up on the network and should be em-
bedded into a block at the block height X; block
2 does not include L, and block 3 does not
include D; however, both blocks can be ac-
cepted as the discrepancy does not excel 10% of
the contents in the network. But, when calcu-
lating the Registered Power, all the new par-
ticipants as well as the remained miners should
count.
(xiii) Restriction for Branch Choosing. If a miner has sent
two Shares for a block, this miner is not allowed to
change branches in this round of the game. If a
miner broadcasted two or more valid Shares for
blocks of different branches at the same block
height, the miner would be expelled from the game
and its contribution will not be counted toward the
Support Rate.
(xiv) Statement Rate. STRX � SRPX/RpX, where
SRPX � sum(CPi∈k), k is the set of miners who
have sent two valid Shares for a block at the block
height X and are not violating the restriction for
branch choosing, and RpX is the Registered Power
at the block height X.
(xv) Noncommittal Power. If a miner has not yet sent
two Shares for a block, its power is counted toward
the Noncommittal Power. If a miner breaks the
restriction for branch choosing, its Shares will be
eliminated from the Support Rate of all blocks at
this block height and will not be counted toward
Noncommittal Power.
(xvi) Block Size. -e number of transaction allowances
per block.
2.1.2. Game Overview. Miners need to claim the calculation
power they intended to put into the mining game before
participating the game. Each miner is given a unique TR
based on the calculation power it claimed. When a miner
creates a block and finds a Nonce that fulfill Entrance
Difficulty in its TR, it will broadcast the block as well as the
Share. -en other miners will attempt to find a Nonce in
their TR to make this block fulfill the Acceptance Difficulty
Table 2: Structure of Share.
Filed Purpose Size (bytes)
L_4_D_IH Last 4 bytes of the block header hash of a block
candidate 4
Nonce Hash tried (A 256-bit number) 32
1
2
Share ShareShare
Share
Share
Share
Share
Share
ShareShare
Share
Share
Share
Share
Total difficulty
derived from
Shares: 2000
Total difficulty
derived from
Shares: 5000
SR1 = 2000/(2000 + 5000) = 28.57% SR2 = 5000/(2000 + 5000) = 71.43%
Figure 1: -e Support Rate of block 1 and block 2.
1
A, B
added 2
3
A remained,
C, D, E, G, H, I, J, K added
B remained,
C, E, G, H, I, J, K, L added
Block height X – 1 X
Registered Power of block height X =
SumPower(A,B,C,D,E,F,G,H,I,J,K,L)
Figure 2: Explanation for Registered Power.
Table 1: Structure of New Join.
Filed Purpose Bytes
HashPrevBlock A 256-bit hash of the latest block in the mainchain 32
Intended_difficulty -e power (difficulty) which the miner intended to
place into the mining game 4
Wallet address For receiving compensation 34
Nonce Hash tried (A 256-bit number starts from 0) 32
4 Security and Communication Networks
if they acknowledge this block as a valid one. Ideally,
miners should announce a block collectively by doing PoW
in their TR in parallel. When a Share of a block is
broadcasted and the Nonce in it made the block reached the
Acceptance Difficulty, this block is announced. -e first
block that reaches Acceptance Difficulty is the winner
block, and miners who contribute Shares to this block will
divide the remuneration of mining. During the an-
nouncement, miners should send Shares which do not
fulfill the Acceptance Difficulty but fulfill at least 25% of the
power they claimed previously as the proof of contribution.
A miner can only send up to four Shares to the network per
round of the game. If more than one block is successfully
announced in a round of game, miners should mine on top
of the one first reached Acceptance Difficulty from their
perspectives (miners may have different views due to the
network delay). Assume that this winner block is the block
X, the blocks at the next block height (block X + 1) will
embed Shares of block X. According to the Shares em-
bedded, if a miner failed to find the Shares which together
weighted more than 50% of the power it previously
claimed, this miner will be expelled from the game (its TR
will be cancelled since BH X + 1). -e remuneration for the
miners of block X is given at the block height BH X + 1
through the Coinbase transaction. All the valid miners of
block X divide the reward based on the difficulty of Shares
they sent. As every miner oversees different Try Ranges, it is
easy to determine who should receive remuneration and
what amount of remuneration.
2.1.3. Game Procedure
(i) Register power: A new miner creates and submits a
New Join to the system.
(ii) Get a Try Range: Miners whose New Joins are em-
bedded into a block will be assigned with Try Ranges.
(iii) Mining: -e miners try to create a block and find a
Nonce that fulfills Entrance Difficulty in theirTR; if
a block created by a miner has reached Entrance
Difficulty and other miners approve this block as a
Valid Block, they will try to find a Nonce that fulfills
Acceptance Difficulty in their Try Ranges.
(iv) Getting reward: If the miner submitted adequate
number of valid Shares for the winner block, the
amount of reward would be given at the next block
height.
(v) Rearrange Try Range and start over: After every
round of the game, the invalid miners will be
globally expelled (miners who failed to send Shares
which stand for at least 50% of the power they
claimed, their Try Ranges will be cancelled). -en,
newminers are added, and the Try Ranges for all the
valid miners be rearranged. After that, a new round
of the game starts. Miners who submitted New Join
before and were not expelled do not need to register
power again to participate the new round of the
game.
2.2. Block Simplification and Bandwidth Demand.
Because New Joins and Shares are embedded to the block,
the block size is increased tremendously. We use a block
simplification algorithm Graphene [20] to simplify the block
as to lower the bandwidth demand. -e structure of
MWPoW block is given in Figure 3. Graphene is a block
simplification method which uses Bloom filter (BF) [21] and
IBLT [22]. It can encode 2000 transactions into 2.6 kbytes,
and the encoded blocks can be decoded by nodes using the
previously received transactions.
-ough the block is simplified, nodes still need to
promptly hear all the New Joins, Shares, and transactions in
the system to decode the simplified blocks. A New Join sized
102 bytes while a Share sized 36 bytes. Figure 4 shows the
amount of data needed for hearing New Joins and Shares
with the different number of valid miners in the network.
Every miner sends four Shares to the network per round of
the game, and in every round of the game, 200 new miners
are added into the network until there are 10000 miners.
Bitcoin nowadays has a steady number of around 8000
miners worldwide in the network. Let us assume MWPoW
also has this user scale, then the minimum bandwidth for a
node will be 1.12/IntervalMbytes, where Interval is the
predetermined block interval (in minutes). -e minimum
bandwidth with different block interval is shown in Figure 5.
It only requires an additional 2 kbytes/s to functionMWPoW
with the Bitcoin setting (block interval of 10 minutes).
2.3. Distributed Remuneration. According to the Shares
embedded in the block, the remuneration will be given to the
miners of the winner group directly through a Coinbase
transaction. -e amount of remuneration for miners is
calculated based on the total reward amount of the last block
height multiplied the sum of the miner’s valid Share pro-
portions to the sum of all the Shares in winner group.
Figure 6 shows an example of this, where the sum of the
difficulty of the Shares sent by the Miner A and Miner B is
212 and 49, respectively, and the sum of the difficulty of all
the valid Shares of the group is 1000. -e total reward
amount of the last block height is 100. Miner A and Miner B
receive 21.2 coins and 4.9 coins, respectively. It should be
noticed that if the difficulty of the valid Shares of a miner
excelled the difficulty it claimed in the New Join, the system
should use the difficulty in the New Join to calculate
remuneration.
2.4. Fast Confirmation. It is predefined that the miners
should mine on top of the block which, to their knowledge,
first reached the Acceptance Difficulty. However, a miner
may shift to mine on top of another block if this miner is
allowed to change branches (when the miner has not yet sent
two Shares for a specific block), and there is another block of
Acceptance Difficulty with more Support Rate.
A block is finally accepted when the following finally
acceptance criteria are satisfied:
(1) -is block is inside the highest branch of the
mainchain.
Security and Communication Networks 5
(2) -e Statement Rate of the latest block height is larger
than 50%
(3) -e calculation power that reflected by the difference
between the Support Rate of this block and the
Support Rate of the second largest block at the same
block height is larger than 25% of the Registered
Power of the latest block height.
Figure 7 shows an example of the branch choosing. In
(a), final acceptance criteria (3) is not met so that we cannot
yet determine which block is the final accepted one. In (b),
where there are succession blocks of blocks A, B, and C, the
Support Rate of blocksA, B, andC are changed. BlocksC and
D are finally accepted because the differences of difficulty
between this branch and other branches are larger than 25%
of the latest Registered Power. Block C and the branch stems
from it have Shares that altogether stand for 6110 difficulties
while the second popular block—block B and its branch
altogether have 3172 difficulties; the difference is 2938, that
is, about 41% of the Registered Power is exceeded the final
acceptance criteria.
2.5.Adjustment of theBlock Interval andBlock Size. Let Tx be
the timestamp for the time of creating block x, TTx is the
timestamp that indicates the time when the creator of block
x heard first out of the four Shares of block x − 1 from
200\8000
200\7600
200\6800
200\6400
200\6000
200\5600
200\5200
200\4800
200\4400
200\4000
200\3600
200\3200
200\2800
200\2400
200\2000
200\1600
200\1200
200\800
200\400
200\0
N
um
be
r o
f n
ew
 n
od
es
\n
od
es
 in
sid
e s
ys
te
m
0.2 0.4 0.6 0.8 1.00.0
Data required (Mbytes)
Figure 4: -e amount of data for New Join and Shares VS different miner number.
A
Share
difficulty
50
54
52
56
B
Share
difficulty
10
11
12
16
Transactions
From to
system
Amount:
100 × 212/1000 = 21.2 A
100 × 49/1000 = 4.9 B
...
Figure 6: Reward assignment.
Block
header
New
Joins
Shares Transactions
Bloom
filter
Bloom
filter
Bloom
filter
IBLT IBLT IBLT
Figure 3: Block overlook.
Ba
nd
w
id
th
 (M
by
te
s)
0.005
0.010
0.015
0.020
0.025
0.030
0.035
0.040
0.0 2.5 5.0 7.5 10.0 12.5 15.0 17.5
Block interval (minutes)
Figure 5: -e minimum bandwidth for New Join, Shares VS block
interval.
6 Security and Communication Networks
miners whose Calculation Power Claim together stand for at
least 50% of the overall registered power at the block height
x − 1; both Tx and TTx are embedded in the block header of
block x. -e block interval is defined as interval � S + M,
where S is the time for synchronization andM is the time for
mining. Real time S and M can be derived from (1) TTx −
Tx− 1 � S + 0.25∗M and (2) Tx − Tx− 1 � S + M. If a desire
ratio R � S/M is predefined, the block interval and block size
can be adjusted accordingly.
2.5.1. Block Interval Adjustment. Block interval is adjusted
as follows:
I − M
M
: R � Intervalx : Intervalx− 1, (7)
where I � Tx − Tx− 1, M � I − (TTx − Tx− 1)/0.75 and
Intervalx is the setting value of the block interval between the
block height x and the block height x + 1.
2.5.2. Block Size Adjustment. -e block size is adjusted as
follows:
R∗M
I − M
�
BSx+1
BSx
, (8)
where BSx is the block size of the block height x.
In the experiment section, we will examine how block
interval, block size, and acceptance difficulties change when
the number of nodes and the bandwidth of nodes
fluctuates.
3. Security Analysis
3.1. Restriction of Branch Choosing. If a miner has sent two
valid Shares for a block at a block height, this miner is not
allowed to change branches in this iteration. -is rule sets a
bottom line for speculators; if the rule is broken, their power
is not considered Registered Power and they are expelled
since the next round of the game.
3.2. Attack. Because the Support Rate of a block may be
reduced when a miner breaks the restriction of branch
choosing, this brings the room for the attack. Figure 8
shows an example of the attack, where the rectangles in red
stand for the attacker’s power. In (a), block Alice is finally
accepted because its Support Rate is more significant than
Bob (the second largest) for more than 25% of the Reg-
istered Power and the Statement Rate is more significant
than 50%. -e attacker has placed at least two Shares for
Alice. Otherwise, its Shares are not Countable Shares for
Alice. Because the maximum sum of difficulties of Shares
one can contribute to a block height is its Calculation
Power Claim (the difficulty is capped if one contributed
more), it takes at least 50% the attacker’s Calculation Power
Claim to make two valid Shares for Bob (otherwise the
Shares are not countable); after that, we entered situation
(b). As condition (b) violates the restriction of branch
choosing, the attacker’s power is eliminated from both
Alice and Bob and then (c) is reached, where Bob is the
finally accepted block instead of Alice.
Let us assume block Alice reached final acceptance
criteria and had a F Support Rate; at that time, block Bob
had F − D Support Rate in the network. -e attacker must
have placed at least D amount of Registered Power into
block Alice’s branch through at least two Shares submitted
at the latest block height of Alice’s branches. -en, a
similar D amount of power must be used to create two
more valid Shares for another branch which does not stem
from Alice to make the attacker’s contribution to Alice
invalid.
-e attacker must have claimed a power that is around
two times of D when joining in the game because each Share
stands for at least 25% of the power and the maximum
difficulty of the sum of the attacker’s countable Shares is its
power claim. For block Alice to reach acceptance criteria at
first, D must be equal to or larger than 25% of the overall
Registered Power (see (3) of Fast confirmation section). So,
an attack costs 2∗D power (at least 50% of the overall
Registered Power.)
Finally
accepted A
B
C
Announced
1000 D
20% SR
2000 D
40% SR
2000 D
40% SR
Power
registered:
6000
Power
showed in
Shares:
5000
Statement rate: 83% noncommittal rate: 17%
(a)
A
B
C
1018 D 11.3% SR
4731 D 41% SR
6000 D 52% SR
A
B
B
C
18 D 9%
SR
2000 D
30% SR
731 D 11%
SR
4000 D
60% SR
Finally accepted
Power
registered:
7000
Power
showed in
Shares:
6749
Statement rate: 96% noncommittal rate: 4%
(b)
Figure 7: Finally accept a block.
Security and Communication Networks 7
4. Related Work and Contributions
In 2013, Sompolinsky and Zohar [11] proposed the
GHOST protocol. GHOST handles more transactions per
second than Nakamoto blockchain because it can de-
termine the mainchain faster. Not only the earliest block
at each round of the game is accepted, other blocks, e.g.,
orphaned blocks, which are found later could also be
accepted. GHOST accelerates the mainchain de-
termination by allowing block parallelism in the network;
it prevents the computational power to scale up the
network. Some ideas of MWPoW are similar to GHOST:
Shares in MWPoW function like fork blocks in GHOST
for mainchain determination except Shares are much
smaller and generated faster. Also, every Share brings an
explicit increase or decrease of the Support Rate for every
pending block.
Eyal et al. [23] improved the transaction per second in
their blockchain protocol named Bitcoin-NG. Bitcoin-NG
brings more blocks within one round of mining game. Key
blocks and macroblocks are two different block types in
Bitcoin-NG. -e key blocks carry no transactions; they are
used for leader elections solely. In the meantime, the
macroblocks are employed to deliver transactions proposed
by the creator of the key block. -e Share structure of
MWPoW is also similar to macroblocks in Bitcoin-NG, with
no transaction attached. We do not add transactions into the
Share structure, because the macroblocks in Bitcoin-NG are
linearly linked to each other. -ey are sent by the key block
creator only so that it guarantees the transactions are not
duplicated. However, the Share structure does not link with
other, and Shares are used to determine the Support Rate
and reward distribution, which features the macroblocks
cannot provide.
Lightning blocks [24] proposed by Poon et al. uses an off-
chain micropayment channel between two parties to im-
prove the transactions per second in the Bitcoin network.
Micropayment channel allows both parties to send large
transactions in an instant between the parties after only a few
transactions been included into the blockchain. However, as
it is only an application running on top of Bitcoin, it still
underlies Nakamoto blockchain regardless of its contribu-
tion to enhance the transaction throughput. It does not solve
the core problem of the Nakamoto protocol.
Buterin et al. [25] explore another approach that aims
to ease the scalability problem. -is approach involves
sampling and challenging techniques. In their model, par-
ticipants are split into several subcommittees in the network
to distribute computation and verification cost. Random
sample verifier verifies the correctness of others’ updates and
challenges some others’ verification results. However, some
invalid updates would never be detected under this
mechanism.
Regarding block size/block interval adjustment or a clear
view of the time allocation for data synchronisation and
mining, we did not find any previous research that addresses
these issues.
Besides the contribution toward a shorter transaction
pending time and the methods of adjusting block size and
block interval, MWPoW contributes a clear security
threshold for the blockchain. Other consensus protocols
would not achieve this without registering power before the
mining game using New Join and counting the Support Rate
using Shares.
5. Experiment
-ree experiments were conducted; the first one compared
the reward distribution for nodes which participated in
Nakamoto blockchain and MWPoW.-e second one tested
the change of block interval and the block size in different
network schemes with a fixed R. -e third one tested and
compared the performance of MWPoW and GHOST re-
garding the speed of mainchain determination in the dif-
ferent network schemes.
5.1. Experimental Setup. We simulated three networks A, B,
and C of 1000, 2000, and 5000 nodes, respectively, using a
communication protocol specialised for blockchain sys-
tems [26]. We gave every connection a random delay time
ranging from 10MS to 200MS; the distribution of the
connection delay time is shown in Figure 9. During the
experiment, we assigned three bandwidth schemes of
1Mbytes/s, 5Mbytes/s, and 10Mbytes/s in average for
every network; the bandwidth situation is shown in Fig-
ure 10. -e calculation ability for every node was 5MH/S
fixed; we used the fixed setting because the differences in
calculation ability only affect the reward distribution, and it
does not change the speed of Share generation; if a miner
registered more, this miner needs to calculate more in the
same time window.
25%
Alice Bob Alice Bob Alice Bob
Figure 8: -e attack simulation.
8 Security and Communication Networks
D
ela
y 
tim
e (
m
s)
10
20
30
40
50
60
70
80
90
100
110
120
130
140
150
160
170
180
190
200
0 2 4 6 8 10 12
Percentage of connections (%)
Figure 9: Delay time distribution.
4
2
0
0 200 400 600 800 1000Ba
nd
w
id
th
 M
by
te
s (
lo
g 1
0)
Miner ID
1Mbytes
5Mbytes
10Mbytes
(a)
4
2
0
Ba
nd
w
id
th
 M
by
te
s (
lo
g 1
0)
0 250 500 750 1000 1250 1500 1750 2000
Miner ID
1Mbytes
5Mbytes
10Mbytes
(b)
Figure 10: Continued.
Security and Communication Networks 9
5.2. Reward Distribution. We ran a Nakamoto blockchain
network and an MWPoW blockchain network as a com-
parison in network B with 5Mbytes/s bandwidth in average.
-e block interval was set to be 5 minutes, the hash rate for
every node was a fixed 5MH/s, meaning every node gets the
same chance to publish a block or finding a valid Share. -e
mining reward was set to be a fixed 1000 coins per block.
Figure 11 presents the distribution of funding after the
experiment ran for 1000 iterations. -e experiment shows
most miners in Nakamoto blockchain did not receive a
3000
2000
1000
0
To
ta
l r
ew
ar
d
To
ta
l r
ew
ar
d
135
130
125
120
115
0 1000 2000 3000 4000 5000 6000 7000 8000
0 1000 2000 3000 4000 5000 6000 7000 8000
Miner ID
Reward distribution (MWPoW)
2000
1500
1000
500
0
124 125 126
Reward amount
0
1000
2000
3000
4000
5000
6000
7000
N
um
be
r o
f m
in
er
s
Reward distribution (Nakamoto)
Reward amount
0 1000 2000 3000
Figure 11: Reward experiment.
Ba
nd
w
id
th
 M
by
te
s (
lo
g 1
0)
4
2
0
0 1000 2000
Miner ID
3000 4000 5000
1Mbytes
5Mbytes
10Mbytes
(c)
Figure 10: Bandwidth distribution (a) Network A. (b) Network B. (c) Network C.
10 Security and Communication Networks
reward, only the minority of them received tremendous re-
wards while miners in MWPoW all received remunerations,
and the currency was mostly distributed among miners.
5.3. Block Confirmation Speed Test and Comparison. We
compared the performance regarding the mainchain de-
termination speed between GHOST protocol and MWPoW
in networks A, B, and C with different bandwidth schemes.
Both MWPoW and GHOSTused the same network with the
same nodes of the same connections. To make the experi-
ment fair, the block size and the block interval of MWPoW
were not adjusted, and the block size and the block interval
were 1000 transactions per block and 30 seconds, re-
spectively, for both MWPoW and GHOST. Every sub-
experiment lasted for 500 block heights and was repeated 50
times. 200 transactions were sent to the network per second.
-e result shown in Figure 12 is the average time for
accepting a block finally. As can be seen from the result,
MWPoW outperformed the GHOST protocol and the av-
erage accepting time was around (1/4) of the block interval
regardless of the experiment settings. Usually, MWPoW can
finally accept a block when that block is announced because
most miners have exchanged four views through four Shares.
-e cost of time for accepting this block is (0/4) of the block
interval at the next block height. If a block cannot be finally
accepted when announced, then which block is the final
accepted block can usually be decided at around (1/2) of the
block interval at the next block height. At that period of the
next block height, the Shares of most miners become
countable Shares and that brings a change to the Support Rate
of the preceding block.-us, on average, the accepting time is
around (1/4) of the block interval. -e power register
mechanism and the Support Rate inMWPoW accelerated the
speed of block confirmation. -is result is achieved likely
because GHOST needs to count the number of blocks
stemmed from a block to determine if this block should be
finally accepted. However, MWPoW counts the difficulty of
Shares sent for the blocks stemmed from a block. It is much
easier to generate a Share than a block.
5.4. Adjustment of Block Interval/Block Size. -e change of
block interval and block size was performed alternatively
20
10
0
C
on
fir
m
at
io
n 
tim
e
(s
ec
on
ds
)
AVG 10Mbytes AVG 5Mbytes AVG 1Mbytes
GHOST
MWPoW
(a)
20
0
C
on
fir
m
at
io
n 
tim
e
(s
ec
on
ds
)
AVG 10Mbytes AVG 5Mbytes AVG 1Mbytes
GHOST
MWPoW
(b)
20
0
C
on
fir
m
at
io
n 
tim
e
(s
ec
on
ds
)
AVG 10Mbytes AVG 5Mbytes AVG 1Mbytes
GHOST
MWPoW
(c)
Figure 12: Block confirmation speed (a) Network A. (b) Network B. (c) Network C.
Security and Communication Networks 11
with the change of difficulties. In this experiment, if the block
height mod three equals zero, the network difficulties were
adjusted; if the block height mod three equals two, the block
size was adjusted; otherwise, the block interval was adjusted.
We tried R � 1 in this experiment. A transaction sized
300 bytes was fixed, and 20 transactions were sent per second
from the random nodes in the network. -e default block
interval at the beginning was 5 seconds; the default block size
was 1000 transactions. -e experiment lasted for 500 block
heights; during the experiment, the bandwidth scheme was
shifted from 1Mbytes/s to 5Mbytes/s and 10Mbytes/s and
went back to 5Mbytes and 1Mbytes. Figure 13 shows the
result. We can see from Figure 13 that both the block interval
and block size were adjusted dynamically during the
experiment.
6. Conclusions
In this paper, we introduced a new version of Multiple
Winner Proof of Work protocol (MWPoW) with detailed
definitions of the Support Rate, branch choosing, and the
unique feature of block interval/block size adjustment. We
attempted to increase the scalability of blockchain by
shortening the pending time to accept a block finally and
strengthen the decentralisation of blockchain by increasing
the chance for miners to profit from the game. -e ex-
periment result shows that MWPoW is much faster than
GHOST in mainchain determination. Meanwhile, the block
interval and block size can be changed with the change of
network situation as like adjusting network difficulties to
make the protocol more adaptable. Also, it is much easier to
receive remuneration in MWPoW than in Nakamoto
blockchain.
Data Availability
-e data used to support the findings of this study are
available from the corresponding author upon request.
Conflicts of Interest
-e authors declare that they have no conflicts of interest.
Acknowledgments
-e authors appreciate the help from Zhan Tong Zhang
from the Ecole polytechnique fédérale de Lausanne (EPFL).
References
[1] S. Nakamoto, Bitcoin: a peer-to-peer electronic cash system,
October 2019, https://bitcoin.org/bitcoin.pdf.
[2] G. Wood, “Ethereum: a secure decentralised generalised
transaction ledger,” Ethereum Project Yellow Paper, vol. 1–32,
p. 151, 2014.
[3] L. Luu, R. Saha, I. Parameshwaran, P. Saxena, and A. Hobor,
“On power splitting games in distributed computation: the
case of bitcoin pooled mining,” in Proceedings of the 2015
IEEE 28th Computer Security Foundations Symposium,
pp. 397–411, IEEE, Verona, Italy, July 2015.
[4] A. Kiayias, A. Russell, B. David, and O. Roman, “Ouroboros: a
provably secure proof-of-stake blockchain protocol,” in
Proceedings of the 39th Annual International Cryptology
Conference, pp. 357–388, Springer, Santa Barbara, CA, USA,
August 2017.
[5] A. Judmayer, A. Zamyatin, N. Stifter, A. G. Voyiatzis, and
E. Weippl, “Merged mining: curse or cure?,” in Data Privacy
Management, Cryptocurrencies and Blockchain Technology,
pp. 316–333, Springer, Berlin, Germany, 2017.
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
1 15 29 43 57 71 85 99 11
3
12
7
14
1
15
5
16
9
18
3
19
7
21
1
22
5
23
9
25
3
26
7
28
1
29
5
30
9
32
3
33
7
35
1
36
5
37
9
39
3
40
7
42
1
43
5
44
9
46
3
47
7
49
1
Tr
an
sa
ct
io
ns
Block height
Block size
A
B
C
0
2000
4000
6000
8000
10000
12000
1 15 29 43 57 71 85 99 11
3
12
7
14
1
15
5
16
9
18
3
19
7
21
1
22
5
23
9
25
3
26
7
28
1
29
5
30
9
32
3
33
7
35
1
36
5
37
9
39
3
40
7
42
1
43
5
44
9
46
3
47
7
49
1
Block height
Bandwidth scheme
A
B
C
0
5
10
15
20
25
30
35
1 15 29 43 57 71 85 99 11
3
12
7
14
1
15
5
16
9
18
3
19
7
21
1
22
5
23
9
25
3
26
7
28
1
29
5
30
9
32
3
33
7
35
1
36
5
37
9
39
3
40
7
42
1
43
5
44
9
46
3
47
7
49
1
Se
co
nd
s
Block height
Block interval
A
B
C
0
5
10
15
20
25
30
35
40
45
50
1 15 29 43 57 71 85 99 11
3
12
7
14
1
15
5
16
9
18
3
19
7
21
1
22
5
23
9
25
3
26
7
28
1
29
5
30
9
32
3
33
7
35
1
36
5
37
9
39
3
40
7
42
1
43
5
44
9
46
3
47
7
49
1
Block height
S/M
Figure 13: Block interval/block size adjustment. R � 1
12 Security and Communication Networks
https://bitcoin.org/bitcoin.pdf
[6] C. Perez-Sola, J. A. D. Donet, and J. Herrera-Joancomart, “-e
bitcoin p2p network,” in Proceedings of the International
Conference on Financial Cryptography and Data Security,
pp. 87–102, Springer, Berlin, Germany, 2018.
[7] D. Larimer, “Delegated proof-of-stake (DPOS),” Bitshare
Whitepaper, Deventer, Netherlands, 2014, https://bitshares.
org/technology/delegated-proof-of-stake-consensus/.
[8] S. Popov,@e Tangle, vol. 131, 2016, http://tanglereport.com/
wp-content/uploads/2018/01/IOTA_Whitepaper.pdf.
[9] F. M. Benčić and I. V. Žarko, “Distributed ledger technology:
blockchain compared to directed acyclic graph,” in Pro-
ceedings of the 2018 IEEE 38th International Conference on
Distributed Computing Systems (ICDCS), pp. 1569-1570,
IEEE, Vienna, Austria, July 2018.
[10] Y. Sompolinsky, Y. Lewenberg, and A. Zohar, “Spectre: a fast
and scalable cryptocurrency protocol,” IACR Cryptology
ePrint Archive, vol. 1159, 2016.
[11] Y. Sompolinsky and A. Zohar, “Accelerating bitcoin’s trans-
action processing. fast money grows on trees, not chains,” IACR
Cryptology ePrint Archive, no. 881, 2013, https://eprint.iacr.org/
2013/881.
[12] L. Lamport, “-e part-time parliament,” ACM Transactions
on Computer Systems, vol. 16, no. 2, pp. 133–169, 1998.
[13] C. Cachin, K. Kursawe, and V. Shoup, “Random oracles in
constantinople: practical asynchronous byzantine agreement
using cryptography,” Journal of Cryptology, vol. 18, no. 3,
pp. 219–246, 2005.
[14] M. Castro and B. Liskov, “Practical byzantine fault tolerance,”
in Proceedings of the @ird USENIX Symposium on Operating
Systems Design and Implementation (OSDI), vol. 99,
pp. 173–186, New Orleans, LA, USA, February 1999.
[15] J. R. Douceur, “-e sybil attack,” in Proceedings of the In-
ternational Workshop on Peer-To-Peer Systems, pp. 251–260,
Springer, Cambridge, MA, USA, March 2002.
[16] B. Gabriel, “An asynchronous (n− 1)/3-resilient consensus
protocol,” in Proceedings of the @ird Annual ACM Sympo-
sium on Principles of Distributed Computing, pp. 154–162,
ACM, Vancouver, Canada, August 1984.
[17] R. Canetti and T. Rabin, “Fast asynchronous byzantine
agreement with optimal resilience,” in Proceedings of the
twenty-fifth annual ACM symposium on @eory of compu-
ting—STOC ’93, vol. 93, pp. 42–51, Citeseer, San Diego, CA,
USA, May 1993.
[18] V. King and J. Saia, “Breaking the O(n2) bit barrier: scalable
byzantine agreement with an adaptive adversary,” Journal of
the ACM, vol. 58, no. 4, p. 18, 2011.
[19] Y. Xu and Y. Huang, “Mwpow-multi-winner proof of work
consensus protocol: an immediate block-confirm solution and
an incentive for common devices to join blockchain,” in
Proceedings of the 2018 IEEE Intl Conf on Parallel & Distributed
Processing with Applications, Ubiquitous Computing & Com-
munications, Big Data & Cloud Computing, Social Computing
& Networking, Sustainable Computing & Communications
(ISPA/IUCC/BDCloud/SocialCom/SustainCom), pp. 964–971,
IEEE, Melbourne, Australia, December 2018.
[20] A. P. Ozisik, G. Andresen, B. George, A. Houmansadr, and
B. Levine, “Graphene: a new protocol for block propagation
using set reconciliation,” in Data Privacy Management,
Cryptocurrencies and Blockchain Technology, pp. 420–428,
Springer, Berlin, Germany, 2017.
[21] J. K. Mullin, “A second look at bloom filters,” Communica-
tions of the ACM, vol. 26, no. 8, pp. 570-571, 1983.
[22] M. T. Goodrich and M. Mitzenmacher, “Invertible bloom
lookup tables,” in Proceedings of the 2011 49th Annual
Allerton Conference on Communication, Control, and Com-
puting (Allerton), pp. 792–799, IEEE, Monticello, IL, USA,
September 2011.
[23] I. Eyal, A. E. Gencer, E. Gün Sirer, and R. Van Renesse,
“Bitcoin-NG: a scalable blockchain protocol,” in Proceedings
of the 13th USENIX Symposium on Networked Systems Design
and Implementation (NSDI ’16), pp. 45–59, Santa Clara, CA,
USA, March 2016.
[24] J. Poon and T. Dryja, @e bitcoin lightning network: scalable off-
chain instant payments, 2016, https://www.bitcoinlightning.com/
wp-content/uploads/2018/03/lightning-network-paper.pdf.
[25] B. Vitalik, C. Jeff, and W.-D. Matthew, Notes on scalable
blockchain protocols, October 2019, https://pdfs.semanticscholar.
org/ae5b/c3aaf0e02a42f4cd41916072c87db0e04ac6.pdf.
[26] Y. Xu and Y. Huang, “Contract-network protocol: an efficient
communication protocol for distributed ledger technology,” in
Proceedings of the 38th IEEE International Performance Com-
puting and Communications Conference, IEEE, London, UK,
October 2019, http://gofun.online/document/communication-
protocol.pdf.
Security and Communication Networks 13
https://bitshares.org/technology/delegated-proof-of-stake-consensus/
https://bitshares.org/technology/delegated-proof-of-stake-consensus/
http://tanglereport.com/wp-content/uploads/2018/01/IOTA_Whitepaper.pdf
http://tanglereport.com/wp-content/uploads/2018/01/IOTA_Whitepaper.pdf
https://eprint.iacr.org/2013/881
https://eprint.iacr.org/2013/881
https://www.bitcoinlightning.com/wp-content/uploads/2018/03/lightning-network-paper.pdf
https://www.bitcoinlightning.com/wp-content/uploads/2018/03/lightning-network-paper.pdf
https://pdfs.semanticscholar.org/ae5b/c3aaf0e02a42f4cd41916072c87db0e04ac6.pdf
https://pdfs.semanticscholar.org/ae5b/c3aaf0e02a42f4cd41916072c87db0e04ac6.pdf
http://gofun.online/document/communication-protocol.pdf
http://gofun.online/document/communication-protocol.pdf
International Journal of
Aerospace
Engineering
Hindawi
www.hindawi.com Volume 2018
Robotics
Journal of
Hindawi
www.hindawi.com Volume 2018
Hindawi
www.hindawi.com Volume 2018
 Active and Passive  
Electronic Components
VLSI Design
Hindawi
www.hindawi.com Volume 2018
Hindawi
www.hindawi.com Volume 2018
Shock and Vibration
Hindawi
www.hindawi.com Volume 2018
Civil Engineering
Advances in
Acoustics and Vibration
Advances in
Hindawi
www.hindawi.com Volume 2018
Hindawi
www.hindawi.com Volume 2018
Electrical and Computer 
Engineering
Journal of
Advances in
OptoElectronics
Hindawi
www.hindawi.com
Volume 2018
Hindawi Publishing Corporation 
http://www.hindawi.com Volume 2013
Hindawi
www.hindawi.com
The Scientific 
World Journal
Volume 2018
Control Science
and Engineering
Journal of
Hindawi
www.hindawi.com Volume 2018
Hindawi
www.hindawi.com
 Journal ofEngineering
Volume 2018
Sensors
Journal of
Hindawi
www.hindawi.com Volume 2018
International Journal of
Rotating
Machinery
Hindawi
www.hindawi.com Volume 2018
Modelling &
Simulation
in Engineering
Hindawi
www.hindawi.com Volume 2018
Hindawi
www.hindawi.com Volume 2018
Chemical Engineering
International Journal of  Antennas and
Propagation
International Journal of
Hindawi
www.hindawi.com Volume 2018
Hindawi
www.hindawi.com Volume 2018
Navigation and 
 Observation
International Journal of
Hindawi
www.hindawi.com Volume 2018
 Advances in 
Multimedia
Submit your manuscripts at
www.hindawi.com
https://www.hindawi.com/journals/ijae/
https://www.hindawi.com/journals/jr/
https://www.hindawi.com/journals/apec/
https://www.hindawi.com/journals/vlsi/
https://www.hindawi.com/journals/sv/
https://www.hindawi.com/journals/ace/
https://www.hindawi.com/journals/aav/
https://www.hindawi.com/journals/jece/
https://www.hindawi.com/journals/aoe/
https://www.hindawi.com/journals/tswj/
https://www.hindawi.com/journals/jcse/
https://www.hindawi.com/journals/je/
https://www.hindawi.com/journals/js/
https://www.hindawi.com/journals/ijrm/
https://www.hindawi.com/journals/mse/
https://www.hindawi.com/journals/ijce/
https://www.hindawi.com/journals/ijap/
https://www.hindawi.com/journals/ijno/
https://www.hindawi.com/journals/am/
https://www.hindawi.com/
https://www.hindawi.com/