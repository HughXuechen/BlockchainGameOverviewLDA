Perishable Digital Goods Trading Mechanism for Blockchain- Based Vehicular Network
Perishable Digital Goods Trading Mechanism for
Blockchain-based Vehicular Network
Rui Xi
School of Data and Computer Science
Sun Yat-sen University
Guangzhou, China
xirui@mail2.sysu.edu.cn
Kang Liu
School of Data and Computer Science
Sun Yat-sen University
Guangzhou, China
liuk73@mail.sysu.edu.cn
Shuo Liu
School of Data and Computer Science
Sun Yat-sen University
Guangzhou, China
liush97@mail2.sysu.edu.cn
Wuhui Chen
School of Data and Computer Science
Sun Yat-sen University
Guangzhou, China
chenwuh@mail.sysu.edu.cn
Shenghui Li
School of Data and Computer Science
Sun Yat-sen University
Guangzhou, China
lishh53@mail2.sysu.edu.cn
Abstract—Recently, Internet of Vehicles (IoV) equipped with
autopilot technology show much concern in their quality of
service (QoS), especially in how to ensure the quality of crowd-
sourcing data for QoS. It is an open issue to encourage high-
quality data to be sold as digital goods. Although existing works
manage to design incentive mechanisms in data trading for IoV,
they fail to address the trust problem. The blockchain technology
has been widely studied to establish trust among participants,
however, little is currently known about the perishability in
the data market, which leads to the failure in explaining the
price difference of digital goods. In this paper, we propose a
perishability-oriented pricing mechanism to support perishable
digital goods trading among IoVs. We also introduce consortium
blockchain that provides distributed hyper ledger to address the
trust issue in the market. By employing Stackelberg game theory,
we obtain the optimal response of selfish users and providers.
And finally, we propose a distributed algorithm to simulate our
mechanism. Our experiment results demonstrate the efficiency
of our distributed algorithm and prove the correctness and
consistency of our mechanism.
Index Terms—perishability, digital goods, internet of vehicles,
consortium blockchain, Stackelberg game
I. INTRODUCTION
Data-trading market, which strongly enlarges the quantity
and enhances the quality of data, has been developing rapidly
in recent years. High-quality data from remote IoVs will be
of benefit to the quality of service (QoS) of local ones. Such
kinds of digital products collected and sold by their holders are
called digital goods. However, in practice, digital goods holder
might refuse to provide their goods because of the enormous
costs and potential risks. Moreover, as price discrimination
fails in IoV’s digital goods trading market, high-quality digital
goods might not be appropriately priced. Therefore, it remains
The work described in this paper was supported by the National Key
Research and Development Plan(2018YFB1003800), the National Natural
Science Foundation of China (61802450), the Natural Science Foundation
of Guangdong(2018A030313005) and the Program for Guangdong Introduc-
ing Innovative and Entrepreneurial Teams (2017ZT07X355). (Corresponding
author: Wuhui Chen)
a challenge on how to design an incentive to motivate digital
goods trading and how to adapt a price discrimination strategy
to pricing digital goods.
Some works have been conducted to study incentive mech-
anisms in digital goods tradings and pricing strategies in
recent years. For example, Gao et al. [1] proposed an in-
centive mechanisms in a vehicle-based system. And Al et
al. [2] analyzed coordinating unidirectional vehicle-to-grid
(V2G) services with energy trading. Unfortunately, two critical
drawbacks remain unsolved.
First, the perishability of digital goods is omitted. Per-
ishability is a metric to evaluate the data quality with time
expired. Some data are perishable, which means they will
gradually lose their value with time being. For instance, the
road condition data recorded in the past five minutes is far
more valuable than that recorded hours ago, just like newly-
arrived fruits and overnight ones. Previous works [1], [2]
ignored perishability of digital goods, and thus led to failure
in explaining some phenomena in the data market.
Second, trust issues remain unsolved. Previous works [3],
[4] failed to ensure the security in data trading because
malicious nodes might perform a Man-in-the-middle attack
(MITM) to steal data from providers. Also, both users and
providers do not trust each other because of the conflict of
interest. For instance, fraud might occur if providers offer ex-
pired digital goods instead of valuable ones. Meanwhile, users
might refuse to pay after receiving digital goods. To sum up,
both perishability and trust issues in trading lead to an urgent
need to design an effective digital goods trading mechanism,
which takes perishability into account, in a trustless scenario.
Motivated by the issues mentioned above, in this paper, we
model a realistic digital goods trading market and design a
PERIshable Digital gOods Trading (PERIDOT) mechanism
to support decentralized transactions. To address the trust
challenge, we introduce a consortium blockchain-based trading
system with a series of roles and processes. To model the
147
2019 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable
Computing & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)
978-1-7281-4328-6/19/$31.00 ©2019 IEEE
DOI 10.1109/ISPA-BDCloud-SustainCom-SocialCom48970.2019.00031
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:14:56 UTC from IEEE Xplore.  Restrictions apply. 
market, we employ Stackelberg game where digital goods
providers play as leaders, and users play as followers. Then,
we design a utility function for users and a revenue function
for providers, then obtain their optimal response to maximize
their interest. Our design is later proved to obtain a unique
Stackelberg Equilibrium. Next, we build a decentralized algo-
rithm to simulate the whole process. Finally, some numerical
results show the effectiveness of our design. Our main contri-
butions are as follows.
1) Consortium blockchain-based trading system: We intro-
duce a consortium blockchain-based system into digi-
tal goods trading and innovatively design processes to
provide secure and auditable perishable digital goods
transactions. Through our PERIDOT mechanism, we
address security and privacy vulnerability in this market
successfully.
2) Perishability-oriented pricing mechanism: We study dig-
ital goods’ perishability, and to the best of our knowl-
edge, this is the first attempt to apply the Perishability-
oriented pricing mechanism into a vehicular network.
Via our mechanism, the price of digital goods shows
their perishability properly.
3) Users and providers Stackelberg game: To model the
digital goods trading market and to find the optimal
responses of both users and providers, we employ Stack-
elberg game theory. Our novel formulation simulates the
selfishness nature of goods market perfectly.
The rest of the paper is organized as follows. In Section
2, we briefly introduce previous works related to ours. Then,
we illustrate the framework of our blockchain-based trading
system in Section 3. In Section 4, we model the market,
calculate the best response of users and providers and reach
Stackelberg Equilibrium. We propose a distributed algorithm
of PERIDOT mechanism to solve the problem of perishable
digital goods trading in Section 5. Numerical results are shown
in Section 6, and the whole paper is concluded in Section 7.
II. RELATED WORK
Up to now, several studies have investigated the data trading
market, including the value of data, data pricing and economic
theory applications. Luong et al. [3] surveyed state-of-the-
art data pricing models of wireless sensor networks (WSNs),
which is the main components of Internet of Things (IoT).
Jiao et al. [5] studied the perishability of data that affects the
service quality and provide a quality decay function. Wang
et al. [6] used noncooperative game theory to formulate the
energy exchange market between plug-in hybrid electric ve-
hicles (PHEV), which maximizes the utility considering both
revenue and cost. Cao et al. [7] formulated a trading system
of multiple data owners, collectors, and users, and introduced
an iterative auction mechanism to coordinate the transactions
among selfish players. Liu et al. [8] introduced two-stage
Stackelberg game to solve the pricing and purchasing problem
of consumers and the agents. The main difference between
our work and Liu’s is that there is no an authorized agency
to determine the pricing strategy, which significantly preserves
the privacy of sellers. However, previous works fail to combine
the perishability of data with its trading mechanism. What is
more, the trust issues in distributed parties like IoVs are still
unsolved.
Many pieces of research employed consortium blockchain
to build trust in a trustless scenario. Shuaib et al. [9] proposed
a decentralized energy exchange system which allows for
energy exchanging between producers and consumers using
a form of electronic blockchain-based smart contracts. Kang
et al. [10] designed a localized P2P energy-trading system for
electric vehicles called PETCON by exploiting a consortium
blockchain, and solved the pricing and charging problem by
an iterative double auction mechanism. Li et al. [11] designed
a payment scheme based by credit to increase the efficiency
in blockchain-based IIoT energy-trading system. Blockchain
is also applied to computing resource and data trading to
reach a truthful bid [12], [13]. Singh et al. [14] introduced
a blockchain-based crypto Trust point (cTp) mechanism to
regulate the illegitimate vehicles behavior, and reward the
share of data. Liu et al. [15] proposed a debt-credit mechanism
to accelerate the data trading among IoVs in a blockchain-
based market. However, data value investigation, especially in
perishability, has not yet been studied.
In summary, digital goods share some natures with physical
goods, like perishability, but, to our best knowledge, no rele-
vant research analyzed perishable digital goods trading among
IoVs. This motivates us to further consider perishable digital
goods trading among IoVs in the blockchain-based system,
and thus we propose PERIDOT mechanism to solve digital
goods trading problem effectively.
III. FRAMEWORK
In this section, we introduce the blockchain-based market
framework of our PERIDOT mechanism.
A. Components of PERIDOT mechanism
The components in the system mainly consist of three parts,
i.e., IoVs, sensors, and edge servers.
IoVs: IoVs are the main component in the road, which
are supposed to find the optimal path to their destinations
according to the current traffic condition. Due to the lack
of information, their path planning might not be precise and
thus need extra information from the other IoVs or sensors
to increase the confidence. Also, IoVs that already have
data of road condition tend to sell them for profit. They
are connected to the closest edge server and participate in
consortium blockchain via the edge server.
Sensors: Sensors are kinds of fixed-position equipments,
which collect information about the road condition around
them. Enabled by 5G technology, they can transfer digital
goods to the nearby IoVs and make profit from them. Similar
to IoVs, sensors indirectly join consortium blockchain with
the help of the closest edge server.
Edge Servers: Edge servers are the servers with relatively
better computing resources established near the road, which
can communicate with both IoVs and sensors in a low latency.
148
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:14:56 UTC from IEEE Xplore.  Restrictions apply. 
Car Accident
Provider
User1 
Buy Fresh Data
User2 
Buy Rotten Data
Good PredictionBad Prediction
Autopilot 
System
W
itness
Digital Goods 
Preparation
Digital GoodsAgent
Examine Timestamp
Broadcast 
Freshness
Demand and Price 
Optimization 
Data Transfer
Transaction Audit
Transaction Audit
Proxy 
Fig. 1. Illustration of PERIDOT mechanism processes
A edge server is connected to many devices, i.e., sensors
and IoVs, at the mean time receives and audits the trans-
actions made by them. All the edge servers together build
the consortium blockchain in PERIDOT mechanism. With the
help of the consortium blockchain, all the transactions are
audited transparently in the whole market, enabling IoVs to
track possible frauds, which addresses the security problem
in traditional centralized market. Moreover, since there is no
centralized servers to inspect all the transfer, the privacy of
users can be protected.
The roles in our system contain three parts, i.e., perishable
digital goods users, providers, and the agent. Users of perish-
able digital goods are mainly those IoVs who need data for
path planning or autopilot. And Providers of perishable digital
goods consist of IoVs that have data of road condition and
sensors. An agent can tell the perishability of digital goods
according to their timestamps, which is enabled by smart
contract in the blockchain.
B. Processes of PERIDOT mechanism
The processes in our blockchain-based trading mechanism
consist of four key operations, i.e., system initialization, digital
goods preparation, demand and price optimization, and trans-
action audit. Fig. 1 illustrates the whole process, as well as two
possible choices and their outcome respectively of different
users. Firstly, a car accident is witnessed and collected by
provider. Second, two users who need the information to plan
a better path come. User 1 buys the digital goods when they
are still fresh, say, only five minutes after the accident. As
a result, it obtains a good prediction, which helps it avoid
the traffic jam. On the contrary, user 2 buys the rotten goods,
say, five hours after the accident, to save money. There is
a probability that the accident is already handled now, so it
would not affect the current path. Consequently, user 2 fails
to get a rather precise prediction about whether it should find
an alternative path or not.
Proxy
Block1 Block2 New Block
Blockchain
Send Digital Goods
Building Block
UsersProviders
Consensus 
Process
Leader Proxy
Fig. 2. IoV-Proxy-Blockchain hierarchical structure of transaction audit in
PERIDOT mechanism
System Initialization: In this process, all participants in
the system shall identify themselves by their public keys.
Participants can also select their roles according to their own
demands.
Digital Goods Preparation: Providers start collecting data
in this process. Once they enquire a collection of data, the
dataset is ready to be packed to digital goods. The freshness
of digital goods is examined by the agent before being released
to the market. After examination, perishable digital goods with
their freshness will be on sale.
Demand and Price Optimization: When users witness the
digital goods along with their unit price and freshness, they
will give their optimal demand matrix as a response. Providers
will then update their unit price vectors to maximize their
profits. This process loops until the unit price vector converges
to a stable point, which means the users and providers reach
an agreement.
Transaction Audit: Fig. 2 illustrates this process. Once
users and providers reach an agreement, the transaction
is made. All transactions is also recorded to consortium
blockchain for edge servers to audit. Edges servers collect
transactions for a period and structure them to their blocks
and consensus process is conducted. Finally, the leader edges
server in this consensus process broadcasts its block to all
the edge servers, and they add it to the blockchain. The
transactions are now audited and unchangeable.
IV. DIGITAL GOODS TRADING SCHEME
A. Provider-User Stackelberg Game
Users and providers compete at the market level. Different
from a perfect-competition market, digital goods trades remain
an imperfect competition. The providers always attempt to
profit from this seller market, which means that they grasp
149
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:14:56 UTC from IEEE Xplore.  Restrictions apply. 
the initiative in the unit price setting. Dynamic noncooperative
game theory provides a natural paradigm to model the players’
behaviors in such a case. Thus, We can employ a Stackelberg
game into this market.
B. User Optimal Response Scheme
Let xn,k be the demand of user n from provider k. We
define the utility of user n, Uuser,n as
Uuser,n = αn
∑
k∈K
ln(βn + ωkxn,k), ∀k ∈ K, (1)
where αn and βn are constants and ωk is the freshness of
goods. The natural logarithm function ln(x) is widely used in
commodity markets because it shows the reducing marginal
benefit with the increasing amount of digital goods [16], [17]
. αn is to modify users’ willingness to buy digital goods. βn is
to avoid negative value in logarithm function [18]. Meanwhile,
βn can also adjust the initial utility of users. ωk is given by
ωk = − exp (−tk), where tk is the duration of digital goods
being sold. The exponential function indicates that the value
of goods declines with time being from full value (where ωk
is 1) to nearly no value. Its decreasing tendency reflects the
nature of perishable goods.
Let yk be the unit price of digital goods, Cn(Cn ≥ 0) be the
budget of user n. Given a unit price vector y = {yk, k ∈ K},
user n will solve an optimal problem OPuser:
max
xn={xn,k∀k∈K}
Uuser,n (2)
s.t.
∑
k∈K
ykxn,k ≤ Cn (3)
xn,k ≥ 0; ∀k ∈ K. (4)
To show that the optimization problem is convex, we
calculate the Hessian matrix of objective function
f(xn) = −αn
∑
k∈K
ln(βn + ωkxn,k), ∀k ∈ K, (5)
which is
H(f) =
⎡
⎢⎢⎢⎢⎢⎣
αnω
2
1
(βn+ω1xn,1)2
0 . . . 0
0
αnω
2
2
(βn+ω2xn,2)2
. . . 0
...
...
. . .
...
0 0 . . .
αnω
2
K
(βn+ωKxn,K)2
⎤
⎥⎥⎥⎥⎥⎦ .
(6)
We can observe that all elements in the Hessian matrix are
non-negative, which means the Hessian matrix is half positive
define. This result shows that OPuser is a convex optimization
problem. Hence, its stationary solution is unique and optimal.
By introducing the augmented Lagrangian multiplier λn =
{λn,k, ∀k ∈ K}, (2) to (4) become:
Luser,n = αn
∑
k∈K
ln(βn + ωkxn,k) (7)
−λn,1
(∑
k∈K
ykxn,k − Cn
)
+
∑
k∈K
λn,k+1xn,k.
The first order optimal solution is
∂Luser,n
∂xn,k
= 0, and
Luser = {Luser,n, ∀n ∈ N}, thus we have slackness con-
dition:
λn,1
(∑
k∈K
ykxn,k − Cn
)
= 0 (8)
λn,k+1xn,k = 0, ∀k ∈ K (9)
λn,1 > 0 (10)
λn,k+1 ≥ 0, ∀k ∈ K (11)
xn,k ≥ 0, ∀k ∈ K, (12)
and
∂Luser,n
∂xn,k
= 0, which is equal to
αnωk
βn + ωkxn,k
+ λn,1yk + λn,k+1 = 0, ∀k ∈ K. (13)
To satisfy (8) to (13), we have to discuss these cases:
Case 1: xn,k > 0, ∀k ∈ K. In this case, λn,k+1 = 0, ∀k ∈ K
according to (12). And thus, (13) becomes
αnωk
βn + ωkxn,k
+ λn,1yk = 0, ∀k ∈ K. (14)
From (14), we have
xn,k =
αn
λn,1yk
− βn
ωk
, ∀n ∈ N , ∀k ∈ K. (15)
Use (15) substitute xn,k in (12), we get
λn,1
(∑
k∈K
yk
(
αn
λn,1yk
− βn
ωk
)
− Cn
)
= 0 (16)
1
λn,1
=
Cnωk + βn
∑
k∈K yk
Kωkαn
. (17)
From (17) we obtain
xn,k =
ωkCn + βn
∑
k∈K yk
Kωkyk
− βn
ωk
, ∀n ∈ N , ∀k ∈ K.
Case 2: There is an ∃i ∈ K divide K into K1 and K2, and
xn,k = 0, ∀k ∈ K1 and xn,k > 0, ∀k ∈ K2. That is to say, the
buyer chooses to buy digital goods from partial sellers (in K1),
instead of those who in K2. In this case, λn,k+1 > 0, ∀k ∈ K1
and λn,k+1 = 0, ∀k ∈ K2 according to (12). And thus, (13)
become
αn
βn
+ λn,1yk + λn,k+1 = 0, ∀k ∈ K1 (18)
αnωk
βn + ωkxn,k+1
+ λn,1yk+1 = 0, ∀k ∈ K2. (19)
The same as what we have discussed in Case 1, we have:
xn,k =
{
0 if k ∈ K1
ωkCn+βn
∑K
k=1 yk
Kωkyk
− βn
ωk
if k ∈ K2
Case 3: xn,k = 0, ∀k ∈ K. In this case, since λn,1 > 0,
only Cn = 0 can satisfy (12). In other word, user n have no
budget.
Finally, we draw a conclusion that the solution of OPuser,
which is the optimal demand of user n, is
xn,k =
ωkCn + βn
∑K
k=1 yk
Kωkyk
− βn
ωk
, ∀n ∈ N , ∀k ∈ K. (20)
150
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:14:56 UTC from IEEE Xplore.  Restrictions apply. 
C. Provider Optimal Response Scheme
Let yk denote the digital good’s unit price of provider k. Let
y−k denote the price vector of providers except k. Provider
k will be a monopoly and set an extremely high price or
unlimited amount of copy if there are no limitations. To avoid
this case, we employ two methods: transfer limitation and
market competition. Let Tk denote the max transfer of provider
k, provider k can only transfer Tk units of digital goods. We
define the revenue of provider k
Rprovider,k(yk,y−k) = yk
∑
n∈N
xn,k. (21)
According to (20), user demand xn,k is influenced by the price
of yk and y−k. All the providers play a noncooperative game
in price setting. Providers aim to maximize their revenues
Rprovider,k(yk,y−k), so we get the optimization problem of
provider, which is formulated as:
max
y={yk,∀k∈K}
Rprovider,k(yk,y−k) = yk
∑
n∈N
xn,k (22)
s.t.
∑
n∈N
xn,k ≤ ηkTk (23)
yk > 0, ∀k ∈ K, (24)
where ηk indicates the transfer bonus coefficient from other
IoVs who have the same digital goods already, which is
defined as ηk = 2
1+ωk
. Since the revenue of provider increase
with a fixed yk and an increasing
∑
n∈N xn,k , any rational
decision maker will try to reach its upper bound. As a result,
we can take (23) as an equality constraint.
∑
n∈N
xn,k =
2
1 + ωk
Tk. (25)
Then, we can prove that the optimal solution of (22) also
satisfy (25).
Let’s define Lprovider,k:
Lprovider,k = yk
∑
n∈N
xn,k − μk
(∑
n∈N
xn,k − 2
1 + ωk
Tk
)
.
(26)
, where μk is the Lagrangian multiplier.
Using xn,k in (20), we obtain
Lprovider,k =
(
ωkC +B
∑
k∈K yk
Kωk
− ykB
ωk
)
−
μk
(
ωkC +B
∑
k∈K yk
Kωkyk
− B
ωk
− 2
1 + ωk
Tk
)
, (27)
where B =
∑
n∈N βn and C =
∑
n∈N Cn. From
∂Lprovider,k
∂yk
= 0 we obtain
(K − 1)By2k − μk
⎛
⎝B
∑
g∈K,g �=k
yg + ωkC
⎞
⎠ = 0. (28)
Using (20) and (25), we get yk:
∑
n∈N
(
ωkCn + βn
∑
k∈K yk
Kωkyk
− βn
)
=
2
1 + ωk
Tk, (29)
yk =
(1 + ωk)
(
B
∑
g∈K,g �=k yg + Cωk
)
(1 + ωk)(k − 1)B + 2KωkTk
. (30)
Since all βn, Cn, Tk and K are greater than 0, we can obtain
that yk > 0, ∀k ∈ K, which meets our previous hypothesis.
From (28) and (30), we obtain
μk = (K − 1)B
(
C + B
ωk
∑
g∈K,g �=k yg
( 2
ωk+1KTk + (K − 1) B
ωk
)2
)
=
(ωk + 1)(K − 1)B
2ωkKTk + (ωk + 1)(K − 1)B
yk, (31)
which means whatever yk is set, there is an optimal μk and
optimal solution y∗k. We observe that when K = 1, μk = 0.
Therefore, if there is only one provider, there is no game. We
only focus on where K ≥ 2.
For further discussion of the response of leader, we trans-
form (30) into matrix form:
Ay = F (32)
where,
A =
⎡
⎢⎢⎢⎣
2ω1
1+ω1
T1 +D −E . . . −E
−E 2ω2
1+ω2
T2 +D . . . −E
...
...
. . .
...
−E −E . . . 2ωk
1+ωk
Tk +D
⎤
⎥⎥⎥⎦ ,
(33)
y = {y1, y2, . . . , yk}, D = K−1
K B, E = B
K , F = ωkC
K . If A
is invertible the solution of (32) is
y = A−1F . (34)
Definition 4.1: A real matrix A = {ai,j , i, j =
1, 2, . . . ,K} ∈ RK×K is said to be strictly diagonally domi-
nant if satisfies the following condition:
|ai,i| >
∑
j �=i
|ai,j |. (35)
Theorem 1: The unique solution of (32) is (34).
Proof: For each ai,i, ∀i ∈ N in A, since
ai,i−
∑
j �=i
|ai,j | = 2ωk
1 + ωk
Tk+D−(K−1)E =
2ωk
1 + ωk
Tk > 0.
(36)
According to Definition 1, A is a strictly diagonally dominant
matrix. And thus, A is non-singular and invertible.We now can
yield a unique solution of (32) is (34).
151
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:14:56 UTC from IEEE Xplore.  Restrictions apply. 
D. Stackelberg Equilibrium
The providers play the static noncooperative game with each
other to set the unit price y∗, which is at Nash Equilibrium
point and announce to users. The user n adjust its optimal
response x∗n to maximize its profit. (y∗,x∗) make up of the
Stackelberg Equilibrium of the whole system [19].
Let Γprovider,k and Γuser,n denote the strategy set of
provider k and user n respectively. The whole strategy set
of provider can be described as cartesian product of all
single provider Γprovider = Γprovider,1 × Γprovider,2 × . . . ×
Γprovider,K . Similarly, The whole strategy set of user is
Γuser = Γuser,1 × Γuser,2 × . . . × Γuser,N . The Stackelberg
Equilibrium of provider is
Rprovider,k(y
∗,x(y∗)) ≥ Rprovider,k(yk,y
∗
−k,x(yk;y
∗
−k)),
(37)
where y and x(y) denote the unit price of all providers and
users response to unit price respectively. And y∗ and x(y∗)
denote their optimal response.
Since we have proved that there is a unique optimal solution
to OPuser for a given y, we can reach a unique Stackelberg
Equilibrium if a unique Nash Equilibrium of providers exists.
Theorem 2: A unique Nash Equilibrium exists in providers
and thereby a unique Stackelberg Equilibrium exists in PERI-
DOT mechanism.
Proof: A Nash Equilibrium exists for providers if y is
a non-empty, convex and subset of Rk. Rprovider,k(y) is
continues in y and concave in yk∀k ∈ K, because the second
order derivative of Rprovider,k(y) w.r.t. yk = 0. Therefore, a
unique Nash Equilibrium exists in providers game and thereby
a unique Stackelberg Equilibrium exists in providers-users
game.
V. DISTRIBUTED ALGORITHM
In this section, we propose a distributed algorithm using
a messaging mechanism [20]. The message types used in
communications between entities of PERIDOT mechanism can
be classified as follows:
1) Information Message (IM): Participants need to share
their identities before entering the market in PERIDOT
mechanism. Shared information includes the budget
and demand willingness of users, the total number of
providers and the briefing of the digital goods.
2) Freshness Message (FM): After collecting and packing
data into digital goods, providers need to validate their
freshness with the help of the agent. Freshness informa-
tion includes the timestamp and the freshness of digital
goods.
3) Demand Message (DM): Each user sends its optimal
demand to all the providers, and this message is called
the demand message. Providers collect demand message
and calculate their revenues.
4) Price Message (PM): Each provider sends its optimal
unit price to all the players in PERIDOT mechanism.
Other providers will update their unit price, and all
Algorithm 1 Distributed Algorithm of PERIDOT mechanism
1: PHASE 1: New player join and data freshness valida-
tion
2: for all newly arrived players do
3: Broadcast its briefing as IM
4: if the player is a provider then
5: Send timestamp of digital goods to agent and agent
broadcasts FM
6: end if
7: end for
8: PHASE 2: User response
9: Collect PM and DM from all participant providers
10: for all user do
11: if receive EM from all providers then
12: return xn,t
13: else
14: Update xn,t to xn,t+1 according to PM in PHASE 3,
using (20)
15: Update utility according to PM and broadcast DM
16: end if
17: end for
18: PHASE 3: Provider response
19: Collect DM from all participant users and PM from other
participant providers
20: for all providers do
21: if |yk,t − yk,t+1| > ε then
22: Update unit price yk,t to yk,t+1 according to last PM,
using (30)
23: Update revenue according to last DM and broadcast
PM
24: else
25: Broadcast EM
26: return yk,t
27: end if
28: end for
users will update their demands according to the price
message.
5) End Message (EM): When a provider reaches its stable
optimal revenue, it will broadcast EM to inform users
that transactions have been made.
Given these five types of messages, our algorithm can be
shown as Algorithm 1. We predefine a period Δt which equals
the time used to transmit a message between the players in
PERIDOT mechanism. The algorithm runs in each time slot
until the game terminates and comprises the key actions of
three phases as follows.
In Phase 1, our PERIDOT mechanism accepts newly arrived
players. Then, to validate the freshness of digital goods, all
providers should prove their freshness via a trusted third-party
agent. In Phase 2, users collect sufficient messages to calculate
their optimal responses. After that, users can continue their
decision-making process until providers put an end. In Phase 3,
providers wait for DM from users and PM from other providers
to calculate their revenues and the next unit price vector. If a
152
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:14:56 UTC from IEEE Xplore.  Restrictions apply. 
provider meets its convergence requirement ε, it stops iteration
and makes a transaction. Otherwise, it updates the unit price
vector and revenue again.
Based on the description of distributed algorithm of PERI-
DOT mechanism above, we can map from the time slot to
the real scenario. In Phase 1, all IM broadcast and freshness
validation are parallel, costing Δt + 2Δt time. Before users
can make decisions in Phase 2, waiting costs Δt, and response
can be done immediately. We can apply the same theory to
Phase 3. In conclusion, the maximum time in the real scenario
in our distributed algorithm is 5Δt.
VI. EXPERIMENT
In this section, we examine the convergence and efficiency
of our distributed algorithm. Then, we show how players
optimize their best responses based on different budget and
transfer constraints. Finally, we try to analyze how the per-
ishability of digital goods influences other indexes.
By default, we consider six providers and two users with
parameters αn = βn = 1, ∀n ∈ N . The budgets of users are
C1 = 100, C2 = 200, and the transfers of all providers are 50.
The timestamps of perishable digital goods from providers
are t1 = 0.2, t2 = 0.4, t3 = 0.6, t4 = 0.8, t5 = 1.0, t6 =
1.2 respectively. The convergence requirement ε is 10−5. Any
modifications in parameters will be mentioned otherwise.
A. Algorithm convergence
Fig. 3 shows the performance of the algorithm. As we can
see, all indexes of users and providers reach equilibrium after
five iterations, and all metrics keep stable in the remaining
iterations. In Fig. 3 (a), providers selling different goods start
iterating from yk = 1, and converge at a threshold from 0.65
to 0.95 respectively. We can also see that user utility in Fig.
3 (b) and provider revenue in Fig. 3 (c) increase to their
highest point and eventually stabilize at iteration 5. From Fig.
3, we claim that our distributed algorithm converges to its
optimal values in a few iterations, which shows the brilliant
performance of our algorithm.
Fig. 3. The changes in the (a): unit price, (b): users utility and (c): providers
revenue with algorithm iteration.
B. Best Response in Different Constraints
Fig. 4 shows the reaction of entities in the system when
one user’s budget changes. In this case, for not losing the
universality, we add another two new users. Their budgets are
Fig. 4. (a): User demand changes when user 1’s budget increases. (b): Users
utility changes when user 1’s budget increases. (c): Unit prices change when
user 1’s budget increases.
C1 = 50, C2 = 100, C3 = 150, C4 = 200. As we can see
from Fig. 4(a) and (b), when the budget of one user increases,
both its demand and utility increase accordingly, while the
others’ decrease. It indicates that increasing fund to one user
will strengthen its competitiveness in the user side, leading
to others’ losses. According to Fig. 4(c), when the budget of
user 1 increases, all providers tend to appreciate their goods
to collect more revenue from user 1. The provider selling the
freshest goods increases its unit price faster than others. From
Fig. 4, we can draw a conclusion that adding the budget of
one user will significantly alter the action of other players–
other users will reduce their demand and thus lead to utility
decrease, while all providers will increase their unit prices for
more revenues.
User1 with C1=100 User2 with C2=200
0
10
20
30
40
50
60
70
80
U
s
e
r
d
e
m
a
n
d
(x
)
User demand from provider1
User demand from provider2
User demand from provider3
Fig. 5. Demands of users with different budget vary according to providers.
Fig. 5 shows the users’ demands from different providers
selling data with various freshness. The user demand consists
of three parts from different providers. These providers have
the same transfer, i.e., T1 = T2 = T3 = 50, but their goods
are packed at different moments, which are t1 = 0.2, t2 =
1.2, t3 = 2.2. Other parameters of users are unchanged. As
we mentioned in Section 4.B, if other IoVs have the same
digital goods as the seller does, they can help distribute the
goods by using their own transfer. These IoVs form Content
Distribution Network (CDN), increasing the transfer of the
153
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:14:56 UTC from IEEE Xplore.  Restrictions apply. 
seller. As can be seen from Fig. 5, provider 3 contributes more
goods than provider 1 does. That is because of provider 3’s
digital goods are not as fresh as provider 1’s, and thus provider
3 can enjoy more transfer enable by CDN, and sell more than
provider 1. This phenomenon occurs to both user 1 and user
2. Fig. 5 shows that although rotten digital goods might not
be appealing to users, it costs less and sells more, and finally
reaches better sales. In the following part, we can see how
CDN influences the revenues of providers.
0.2 0.4 0.6 0.8 1.0 1.2
Passed Time(t)
0.2
0.4
0.6
0.8
U
n
it
P
ri
c
e
o
f
D
ig
it
a
l
G
o
o
d
s
(y
)
tansfer=50
tansfer=100
tansfer=150
Fig. 6. Unit prices with time being
when the transfer vary.
0.2 0.4 0.6 0.8 1.0 1.2
Passed Time(t)
0
10
20
30
40
50
R
e
v
e
n
u
e
o
f
g
o
o
d
s
'
p
ro
v
id
e
rs
(r
)
Revenue with CDN
Revenue w/o CDN
Fig. 7. Providers’ revenues with time
being when the CDN vary.
Fig. 6 and 7 show how unit price and revenue change when
digital goods start rotting. In Fig. 6, we repeat experiment
three times and the transfers of providers are T0,k = 50, T1,k =
100, T2,k = 150 respectively. Other parameters are unchanged.
Users prefer fresher goods which can benefit them better
and are willing to pay more for them. Our result in Fig.
6 can support this hypothesis: unit prices do decrease with
time expired regardless of the value of Tk. And so does the
revenue without CDN, as we can see in Fig. 7. However,
the gross revenues of providers in Fig.7 increase alternatively.
Contributed to CDN, providers can have more transfer when
the number of data copies increases. And thus they sell more
and earn more even if their unit prices are lower than those
of fresher goods. From Fig. 6 and 7, we can say that our
mathematical model correctly shows the market that appeals
to fresher goods. And we surprisingly observe that, with the
help of CDN, perishable goods can still earn money in some
circumstances.
VII. CONCLUSION
In this paper, we propose a blockchain-based trading mech-
anism, PERIDOT mechanism, to solve the problem of per-
ishable digital goods trading. First, to model the market, we
propose a utility function of users and a revenue function of
providers, as well as define the action of the agent. Then, we
prove the existence and uniqueness of Stackelberg Equilib-
rium. We also propose a decentralized algorithm to simulate
the market. Finally, we carry out experiments to show the
numerical results of our algorithm. The results show that our
algorithm not only has numerical stability but also simulates
the reactions of players as it does in a real digital goods
market. Besides, our experiments show that rotten digital
goods, despite contributing less utility, outsell fresh digital
goods, which contribute more utility, because rotten ones are
cheaper.
REFERENCES
[1] G. Gao, M. Xiao, J. Wu, L. Huang, and C. Hu, “Truthful incentive
mechanism for nondeterministic crowdsensing with vehicles,” IEEE
Transactions on Mobile Computing, vol. 17, no. 12, pp. 2982–2997,
2018.
[2] A. T. Al-Awami and E. Sortomme, “Coordinating vehicle-to-grid ser-
vices with energy trading,” IEEE Transactions on smart grid, vol. 3,
no. 1, pp. 453–462, 2011.
[3] N. C. Luong, D. T. Hoang, P. Wang, D. Niyato, D. I. Kim, and
Z. Han, “Data collection and wireless communication in internet of
things (iot) using economic analysis and pricing models: A survey,”
IEEE Communications Surveys & Tutorials, vol. 18, no. 4, pp. 2546–
2590, 2016.
[4] W. Chen, B. Liu, H. Huang, S. Guo, and Z. Zheng, “When uav swarm
meets edge-cloud computing: The qos perspective,” IEEE Network,
vol. 33, no. 2, pp. 36–43, 2019.
[5] Y. Jiao, P. Wang, S. Feng, and D. Niyato, “Profit maximization mecha-
nism and data management for data analytics services,” IEEE Internet
of Things Journal, vol. 5, no. 3, pp. 2001–2014, 2018.
[6] Y. Wang, W. Saad, Z. Han, H. V. Poor, and T. Başar, “A game-theoretic
approach to energy trading in the smart grid,” IEEE Transactions on
Smart Grid, vol. 5, no. 3, pp. 1439–1450, 2014.
[7] X. Cao, Y. Chen, and K. R. Liu, “Data trading with multiple owners,
collectors, and users: An iterative auction mechanism,” IEEE Transac-
tions on Signal and Information Processing over Networks, vol. 3, no. 2,
pp. 268–281, 2017.
[8] K. Liu, X. Qiu, W. Chen, X. Chen, and Z. Zheng, “Optimal pricing
mechanism for data market in blockchain-enhanced internet of things,”
IEEE Internet of Things Journal, 2019.
[9] K. Shuaib, J. A. Abdella, F. Sallabi, and M. Abdel-Hafez, “Using
blockchains to secure distributed energy exchange,” in 2018 5th Inter-
national Conference on Control, Decision and Information Technologies
(CoDIT). IEEE, 2018, pp. 622–627.
[10] J. Kang, R. Yu, X. Huang, S. Maharjan, Y. Zhang, and E. Hossain,
“Enabling localized peer-to-peer electricity trading among plug-in hybrid
electric vehicles using consortium blockchains,” IEEE Transactions on
Industrial Informatics, vol. 13, no. 6, pp. 3154–3164, 2017.
[11] Z. Li, J. Kang, R. Yu, D. Ye, Q. Deng, and Y. Zhang, “Consortium
blockchain for secure energy trading in industrial internet of things,”
IEEE transactions on industrial informatics, vol. 14, no. 8, pp. 3690–
3700, 2017.
[12] Z. Li, Z. Yang, S. Xie, W. Chen, and K. Liu, “Credit-based payments
for fast computing resource trading in edge-assisted internet of things,”
IEEE Internet of Things Journal, 2019.
[13] Z. Li, Z. Yang, and S. Xie, “Computing resource trading for edge-cloud-
assisted internet of things,” IEEE Transactions on Industrial Informatics,
2019.
[14] M. Singh and S. Kim, “Crypto trust point (ctp) for secure data sharing
among intelligent vehicles,” in 2018 International Conference on Elec-
tronics, Information, and Communication (ICEIC). IEEE, 2018, pp.
1–4.
[15] K. Liu, W. Chen, Z. Zheng, Z. Li, and W. Liang, “A novel debt-credit
mechanism for blockchain based data-trading in internet of vehicles,”
IEEE Internet of Things Journal, 2019.
[16] F. P. Kelly, A. K. Maulloo, and D. K. Tan, “Rate control for commu-
nication networks: shadow prices, proportional fairness and stability,”
Journal of the Operational Research society, vol. 49, no. 3, pp. 237–
252, 1998.
[17] S. Maharjan, Q. Zhu, Y. Zhang, S. Gjessing, and T. Basar, “Dependable
demand response management in the smart grid: A stackelberg game
approach,” IEEE Transactions on Smart Grid, vol. 4, no. 1, pp. 120–
132, 2013.
[18] T. Basar and R. Srikant, “Revenue-maximizing pricing and capacity
expansion in a many-users regime,” in Proceedings. Twenty-First Annual
Joint Conference of the IEEE Computer and Communications Societies,
vol. 1. IEEE, 2002, pp. 294–301.
[19] T. Basar and G. J. Olsder, Dynamic noncooperative game theory. Siam,
1999, vol. 23.
[20] Z. Hong, H. Huang, S. Guo, W. Chen, and Z. Zheng, “Qos-aware
cooperative computation offloading for robot swarms in cloud robotics,”
IEEE Transactions on Vehicular Technology, 2019.
154
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:14:56 UTC from IEEE Xplore.  Restrictions apply.