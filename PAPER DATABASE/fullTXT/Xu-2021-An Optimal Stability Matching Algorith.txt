An Optimal Stability Matching Algorithm for DAG Blockchain Based on Matching Theory
Chinese Journal of Electronics
Vol.30, No.2, Mar. 2021
An Optimal Stability Matching Algorithm for
DAG Blockchain Based on Matching Theory
XIA Xu1, HUANG Jianhua1, ZHENG Hong1 and TANG Ruicong2
(1. East China University of Science and Technology, Shanghai 200237, China)
(2. Hong Kong DAEX Blockchain Limited, Hong Kong 999077, China)
Abstract — IOTA is a typical blockchain designed for
IoT applications. The Markov chain monte carlo algorithm
(MCMC) used in IOTA may lead to a large number of
unverified blocks, which increases transaction delay to a
certain extent. We propose a Stable matching algorithm
(SMA) based on matching theory to stimulate nodes to
verify blocks, thereby reducing the number of unverified
blocks and the consensus delay. The structure of our
IoT blockchain uses the Directed acyc1ic graph (DAG)
to improve the transaction processing capability. The
nodes in the network are abstracted as transaction issuers
and transaction verifiers. A verification service scheduling
system is used to assign transactions to the verifiers
and achieve the optimal matching. We designed a trust
evaluation mechanism which offers verifiers references and
awards to check transactions. The simulation results show
that SMA can significantly reduce the number of orphan
blocks and improve the transaction throughput, which
helps to improve the reliability of the IoT blockchain.
Key words — Blockchain, Consensus algorithm, Game
theory, Directed acyc1ic graph (DAG).
I. Introduction
The Internet of things (IoT) plays a very important
role in modern life. Through information sensing devices,
it connects any object to the network to realize intelligent
identification, positioning, tracking, supervision and
other functions. In recent years, services based on
IoT have grown exponentially. It is expected that IoT
will connect 30 billion devices by 2020[1]. Although
IoT has greatly facilitated people’s lives, IoT devices
still need to identify and verify data to ensure the
integrity of the transmitted data due to its spontaneity
of data transmission. However, the huge number and
resource constraints of IoT devices make it impossible
for a centralized authentication agency to guarantee the
integrity of the data in the network[2].
Blockchain has the characteristics of decentraliza-
tion, non-tamperability, traceability, etc [3]. In recent
years, researchers have begun to try to use blockchain
technology to solve the performance bottleneck of the
current IoT architecture and improve the security of IoT.
Ref.[4] proposed a blockchain-based system to protect
user privacy security in a smart home environment.
Ref.[5] proposed a new application method for introducing
blockchain into IoT, which uses smart contracts to
control IoT devices to solve the synchronization and
security under the C/S structure. Ref.[6] proposed a novel
blockchain-based cross-domain authentication scheme to
solve the obstacle to the development of services caused
by unsafe and inefficient cross-domain authentication.
Ref.[7] proposed a credit-based payment scheme and the
corresponding optimal pricing strategy to maximize the
benefits of the system and support frequent resource
transactions.
IoT Blockchain is a decentralized distributed ledger,
meaning that the data generated by IoT devices needs
to be agreed by all nodes before the data is added to
the blockchain. However, the requirements of throughput,
real-time response, and security in resource-constrained
IoT make the consensus constrained by many factors[8].
Firstly, it is difficult to achieve network synchronization
between thousands of low-bandwidth nodes in the IoT
blockchain. Secondly, in the C/S structure based IoT
blockchain, if a server is attacked by malicious nodes,
the security of the IoT devices connected to the server
cannot be guaranteed[9]. Finally, there is a contradiction
between the real-time requirements of message processing
in IoT environment and the consensus delay of traditional
blockchains.
Manuscript Received Nov. 4, 2019; Accepted June 20, 2020. This work is supported by the National Science Foundation of China
(No.61472139) and the Shanghai Science and Technology Commission (No.11511504403).
© 2021 Chinese Institute of Electronics. DOI:10.1049/cje.2021.01.010
http://crossmark.crossref.org/dialog/?doi=10.1049%2Fcje.2021.01.010&domain=pdf&date_stamp=2021-03-01
368 Chinese Journal of Electronics 2021
To address the problems mentioned above, based on
the DAG blockchain model, this paper introduces the
matching theory into the consensus algorithm to assign
transaction verifiers to transaction issuers to improve
the verification efficiency of transactions. The concept of
trust degree is introduced into the consensus algorithm
to avoid the resource dependence of traditional consensus
algorithms on IoT devices. The main contributions of this
paper are as follows:
1) A DAG blockchain optimal stable matching
algorithm based on matching theory is proposed to solve
the contradiction between the performance limitations
of IoT devices and the hardware overhead required to
maintain the distributed ledger. 2) A trust evaluation
scheme is introduced to conduct direct and indirect trust
degree on transaction issuers to ensure the correctness of
the transactions sent by issuers. 3) A consensus algorithm
based on the trust evaluation is proposed for the IoT
blockchain. The execution of the algorithm does not
depend on the computing power of the nodes, which can
meet the requirements of low-performance IoT devices
participating in the consensus.
The rest of the paper is organized as follows. The
related work is described in Section II. Section III presents
the network model. Section IV gives the consensus
algorithm. Experimental results are discussed in Section
V. Section VI presents the conclusion.
II. Related Work
1. Consensus algorithms
Consensus algorithms are the key to decentralized
blockchains. They can be divided into two categories:
proof-based algorithms and voting-based algorithms. The
most classic proof-based algorithm is Proof of work (PoW)
adopted by Bitcoin[10]. In Bitcoin, the work which a miner
must do is to solve a cryptographic puzzle. Unfortunately,
solving the puzzle is a very computing-hungry process
that manifests in very high energy consumption. Ref.[11]
proposed the Bitcoin-NG protocol to solve the problem of
low throughput of Bitcoin. However, the leader election
in Bitcoin-NG is PoW-based. Consequently, forks are
still possible and consensus finality is not ensured. The
consensus algorithms mentioned above more or less make
the computing power as the proof. In order to reduce the
energy consumption, several attempts have been made,
such as Proof of stake (PoS) and its variants. PoS in
Peercoin[12] uses each individual’s equity (tokens) and
uses a lucky factor to choose which miner has the right
to add blocks to the blockchain, thus reducing energy
consumption during mining. The creation of blocks in PoS
is done by consuming the coin age. Its problem is that even
if the nodes are not connected to the network, the coin
age increases, and it is vulnerable to coinage accumulation
attack. The other variants, such as Delegated proof of
stake (DPoS), are proposed to mitigate the monopoly
problem and make the system more secure by collecting
votes from the member of the voting committee. Both
PoW and PoS need more or less bandwidth resources
and computing power. They are not suitable for resource-
constrained IoTs.
PBFT[13] is a typical voting based consensus
algorithm which provides a solution to the Byzantine
generals problem that exists in asynchronous networks.
It reduces communication traffic among the nodes in
order to improve the throughput. As a result, PBFT
reaches practically minimal latencies allowed by the
network. After PBFT, many BFT-like algorithms that
further improve performance or robustness have been
proposed, such as DBFT[14], HoneyBadger-BFT[15] and
Tendermint[16]. In contrast to PBFT, where the client
sends a new transaction directly to all nodes, the clients
in Tendermint disseminate their transactions to the
validating nodes using a gossip protocol. Tendermint’s
most significant difference from PBFT is the continuous
rotation of the leader. However, there still exist some
problems in BFT-based protocols. For example, when an
attacker compromises some replicas inside a network and
uses them as agents of a distributed Denial of service
(DoS) attack, other replicas in the network have a similar
risk attacked by DoS. In terms of the number of nodes, its
scalability is often challenged. Therefore, the BFT-based
protocols are not suitable for IoT environment.
2. DAG-based blockchains
Directed acyclic graph (DAG)[17] is often used to
handle dynamic programming and to find the shortest
path in navigation due to its unique topology. One
key characteristic of DAGs and the data processing
flows that they model is that there can be multiple
paths in the flow. In 2015, Zander[18] proposed a DAG-
based blockchain structure that allows blocks to reference
multiple predecessors. The DAG structure allows miners
to create blocks concurrently, thus achieving high
scalability in transaction throughput. DAGCoin was
the first cryptocurrency designed by S. D. Lerner [19].
DAGCoin skips the stage of packaging block and allows
each transaction to participate in transaction validation
directly. In 2016, IOTA[20] was proposed by Bitcointalk.
It employs DAG named Tangle to store transactions
(TXs) instead of a blockchain. IOTA is a blockless
distributed ledger developed to enable micropayments in
IoT industry. It is believed to be suitable for asynchronous
networks and solve the problems such as scalability and
high TX fee in the traditional blockchain. Therefore,
nodes do not need to achieve consensus on which valid
TXs can be included in the ledger. However, IOTA does
not have consensus finality. Hence, it is not clear yet
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense
An Optimal Stability Matching Algorithm for DAG Blockchain Based on Matching Theory 369
that after how many direct or indirect approvals a TX is
safe to be confirmed. In spite of all these features, IOTA
still face other problems in its hash function “curl”[21].
By contrast, Byteball[22] adopts the concept of main
chain/tree but uses authenticated witnessing nodes to
determine the partial order of blocks at each user’s view. It
encourages the verification of multiple parent transaction
units to form a digital signature hash network with the
growth of transactions and avoid the double spend attack.
However, the transaction confirmation time of Byteball
is uncertain and there is the problem of insufficient
expansion capacity.
Compared to the chain structure blockchains, the
DAG structure has two advantages. First is its speed. Any
new transaction will have at least partial confirmations
from peers almost instantly once released into the
network, meaning no more long waits for miners to
secure a new block. Secondly, DAG outperforms the
chain structure in terms of scalability. DAG changes the
chain structure of blockchains into a mesh topology. It
can significantly improve the throughput by appending
multiple blocks in parallel.
III. Network Model
1. System model
The DAG structure is used as our blockchain model,
as shown in Fig.1. Each block in the model represents
a transaction which must verify multiple previous
transactions, and each edge represents a verification
relationship. Compared to the chain-based blockchain,
there are multiple paths that allow blocks to reference
multiple predecessors in the DAG-based blockchain.
The DAG structure allows blocks to be submitted to
the blockchain concurrently and subsequent transactions
directly verify previous historical transactions, thereby
significantly increasing the throughput of blockchain
network and reducing transaction latency.
In the proposed structure, checkpoints are set
at regular intervals to finalize transactions. In Fig.1,
the white blocks indicate normal transactions sent by
transaction issuers, each white block contains only one
transaction, the gray blocks indicate checkpoints selected
according to a fixed time length. Any route from the
transactions sent after the checkpoints to the Genesis
must pass through the checkpoints. The checkpoints
can finally confirm previous transactions and clarify the
confirmation time of a proposed transaction. However,
in IOTA, each transaction must refer to the previous
two transactions and its “TIPS” are constantly changing
backwards. It is unclear how much time direct and
indirect verification will take to confirm a transaction.
In order to motivate a verifier to verify a transaction,
a transaction issuer can set a certain amount of
transaction fee when issuing the transaction. After
verification, the verifier needs to send a transaction to
refer to the approved transaction, and the transaction
issued by the verifier can be transferred either to
itself or to others. A single verifier can verify multiple
transactions, and a single transaction can be verified by
multiple verifiers.
Fig. 1. DAG-based blockchain model
The parameters used in the proposed blockchain
model are defined are as follows:
IS(Issuer Set) : The transaction issuer set, i.e.,
IS = {IS1, IS2, · · · , ISM}. M is the total number of
IS agents in the network. In this paper, member ISi
of IS is also referred to as an IS agent which issues a
transaction after setting a transaction fee. Transaction
fee can encourage verifiers to verify the issued transaction.
V S(V erifier Set) : The transaction verifier set, i.e.,
V S = {V S1, V S2, V S3, · · · , V SN}. N is the total number
of V S agents in the network, member V Si of V S is also
referred to as a V S agent which can verify K transactions
at most. In order to obtain a transaction fee reward,
a V S agent should choose previous K transactions for
verification.
We design a set of direct and indirect trust measures
to finalize a transaction. By setting checkpoints, we
can calculate the initial credibility of the transaction,
and provide reference for subsequent direct and indirect
trust metrics for the sender of the transaction. Assuming
that there are m checkpoints, where n checkpoints can
reach transaction tj by direct or indirect reference during
the current checking period. The credibility of the IS
agent in the current checking period is defined as Ctj =
n/m. According to the method mentioned above and
the historical data of transactions in the blockchain, the
trusted or untrusted messages are distinguished by setting
the threshold THR (0 ≤ THR ≤ 1). For credibility of
transaction tj , while 0 ≤ Ctj ≤ THR, transaction tj
is called the untrusted transaction {−T}; when THR ≤
Ctj ≤ 1, transaction tj is called the credible transaction
{T}. The detailed Continuous trusted transactions
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense
370 Chinese Journal of Electronics 2021
subsequence(CSTA) generation process is as shown in
Algorithm 1.
2. Trust evaluation
According to the principles of sociology, people are
more convinced of the objects that are continuously
credible and interact with them, and are not willing to
believe those that are not credible, nor those that are
unstable. For example, people are more inclined to believe
in teams that win consecutively, rather than those that
have failed consecutively. Therefore, we design a set of
trust metrics to make direct trust metrics for transactions
issued by those continuously trusted IS agents. Due to
the subjectivity of direct trust evaluation and the lack of
interaction between V S agents and IS agents, an indirect
trust evaluation also needs to be introduced. The indirect
trust value can be based on the reputation value obtained
through interactions between V S agents and IS agents.
Based on an indirect trust evaluation, a V S agent can get
more useful information about its verification object.
Algorithm 1 CTSA algorithm
Input:the initial credibility sequence of transactions
CS = {Ct1 , Ct2 , · · · , Ctn}, and transactions sequence TS =
{t1, t2, · · · , tn}
Output:CTS:Continuous trusted transactions subsequence
While (1≤ i ≤ n) {
if (THR ≤ Cti ≤ 1) {
New vector ts;
for (j=i, j<n; j++): {
if(THR ≤ Ctj ≤ 1){
CTS.add(tj);
}else{
i=j;break;
}
}
}else{
i++;
}
CTS.output()
}
1) Direct trust
A trust function is used to measure the direct trust
of a V S agent to a given IS agent. Here the V S
agent records the trust degree of the IS agent to all
transactions issued by other V S agents. In addition, an
update function is defined to store the values of trust
degree. The direct trust in V Si is related to the credibility
of transactions issued by ISs. Let Trutn(i, s) represents
the trust degree V Si that has upon ISs based on its n
transactions in the tth checking period. The direct trust
update function is defined as follows:
DT (i, s) = Trutn(i, s)
= µ× Trucur + (1− µ)× Trutn−1(i, s)
(1)
DT (i, s) is the direct trust degree of V Si on ISs.
Trut0 = Trut−1
last, i.e., the value of trust at the start of the
tth time interval is equal to the last computed trust value
in the (t−1)th time interval and the initial value of trust is
Tru00 = 0.5. The nodes with significant resources into the
system are less likely to cheat. Similarly, we could define
a new dynamic measure of trust that is based on node
behavior, such that good actors that follow the protocol
are rewarded. The expected value is trust degree of the
node. A simple way to approximate this trust degree is
to count the number of trusted transactions issued by a
node,and then use the sigmoid function to squash it into
a probability. Here, Trucur is the value of trust degree
for ISs given by V Si in the current checking period and
its update function can be expressed as:
Trucur =
1
1 + e
−α×
(∑m−1
k=1
ϑk
m −γ
) (2)
ϑk =
{
1, if THR ≤ Ctj ≤ 1
0, otherwise
(3)
where γ represents the loss function among the m
checking periods, ϑk represents whether there exist
the trusted transactions in the kth checking period,
respectively. α is the step length which represents the
max continuous length of trusted transactions issued
by ISs which satisfies the proposed conditions (e.g. the
proposed transaction is directly or indirectly verified by
the fixed number of checkpoints). By doing so, IS agents
are encouraged to issue transactions continuously in every
checking period.
Weight µ changes based on the accumulated trust
deviation ζtntrust.
µ = τ + p× δtntrust
1 + ζtntrust (4)
where p is a user-defined constant factor for his preference
on the recent deviation or on the accumulated deviation.
When p is increased, we give more significant to the recent
trust deviation than to the accumulated trust deviation.
τ represents a threshold which is used to prevent µ from
being too saturated.
The recent trust deviation δtntrust and the accumu-
lated trust deviation ζtntrust can be obtained by
ζtntrust =| Trutn−1(i, s)− Trucur | (5)
ζtntrust = p× δtntrust + (1− p)× ζtn−1trust (6)
where ζt−1
lasttrust = ζt0trust and ζ00 trust = 0, the greater
the value of p, the more signifacance a user gives to the
recent trust deviation.
2) Indirect trust
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense
An Optimal Stability Matching Algorithm for DAG Blockchain Based on Matching Theory 371
There are different social relationships between V S
agents, i.e., friends, relatives and strangers. The set
of relationship among V S agents is defined as Rel =
{1, · · · , r, · · · , R}. vr is the trust value between two V S
agents with relationship r, where vr > 0, ∀r ∈ Rel. Let
Li,j = {li,j,1, · · · , li,j,r, · · · , li,j,R} be the relation vector
between V Si and V Sj . If li,j,1 = 1, it means that V Si
and V Sj have a relationship r, otherwise li,j,1 = 0.
For V Si, the indirect trust degree of ISs is based
on the recommendation information which V Si collects
from other V S agents. Generally, honest agents always
give true feedbacks while malicious agents give false
recommendations. Therefore, considering the weight of
the recommendation, the trust degree of V Si on V Sj
is related with the trust value and the similarity value
between two V S agents in social network, which can be
demonstrated by
Bel (i, j) =
vr × li,j,r × Sim (i, j)
max
r∈Rel
vr
(7)
where Sim(i, j) is the similarity value between V Si and
V Sj . Obviously, the closer the trust degree they measured
on the same thing, the more similar they are. In this
paper, the Pearson correlation (PCC) is used to measure
the similarity between the given two V S agents i and j
by comparing the trust degree on the transactions both
agents have measured. The similarity value between V Si
and V Sj is
Sim (i, j) =∑
s∈INTi,j
(Tru
last
(i, s)−Trui)(Tru
last
(j, s)−Truj)√ ∑
s∈INTi,j
(Tru
last
(i, s)−Trui)2
√ ∑
s∈INTi,j
(Tru
last
(j, s)−Truj)2
(8)
where Tru
last
(i, s) and Tru
last
(j, s) are the latest trust degree
of V Si and V Sj on ISs respectively. Trui and Trui
separately denote the average value of the trust degree
that V Si and V Sj have ever rated on. INTi,j is the set of
IS agents that have been verified by both V Si and V Sj .
After obtaining the trust degree of a given ISs from
V Sj and the trust degree of V Si on V Sj , the V Si should
justify whether the ISs is trustworthy or not. If the
IT (i, s) > 0.5, ISs is trustworthy, Otherwise, the ISs is
not trustworthy and then the V Si should select another
optimal candidate agent. The indirect trust degree of V Si
on ISs can be calculated by the following equation:
IT (i, s) =
∑
i,j∈V S,j ̸=i
Bel(i, j)×DT (j, s)∑
i,j∈V S,j ̸=i
Bel(i, j)
(9)
where DT (j, s) is the direct trust degree of V Sj on ISs.
The total trust degree of V Si on ISs is a weighted
combination of direct and indirect trust degree, which can
be defined as follows:
T (i, s) =
{
0.5, if N(i, s) = 0
β1 ·DT (i, s) + (1− β)1 · IT (i, s), otherwise
(10)
where N(i, s) is the interaction times between V Si and
ISs , N(i, s) = 0 means that there is no interaction
between the two agents, so the initial trust degree is 0.5.
β is the weight factor, which can be obtained by
β =
1− e−N(i,s)
1 + e−N(i,s)
(11)
Note that β ∈ (0, 1) and β increases with value of
N(i, s) which is the interaction times between V Si and
ISs. The more the interaction times, the greater the β
and then V Si is more likely to believe the direct trust it
has upon ISs. Thus, the effect of direct trust in Eq.(10)
increases, which conforms to reality.
IV. Consensus Process
1. System model
The existing game strategies for blockchains usu-
ally aim at achieving Nash equilibrium through non-
cooperative games among miners. They make miners
consume energy to compete for accounting, and the
throughput of the network cannot be improved. However,
the computing power and bandwidth resources of IoT
nodes are very limited, so the traditional non-cooperative
game is not suitable for our proposed consensus model.
Stable matching models are widely used in bilateral
environments. For example, Ref.[23] proposed a one-to-
one stable marriage matching model to find a stable
match between the male and female collections. Ref.[24]
introduced the matching theory for optimal resource
allocation of wireless networks. Ref.[25] used the matching
theory to provide a decentralized self-organizing solution
for spectrum resource allocation in 5G. In this paper, the
matching model is extended to the matching relationship
between IS agents and V S agents, and a stable matching
algorithm for IS and V S is proposed. This paper proposes
a set of node trust metrics based on historical transactions
issued by a IS agent. The matching between IS agents
and V S agents is based on the utility of both sides, which
is calculated based on the utility function derived from
the trust evaluation scheme.
The verification plan-aware problem for transaction
verification in the blockchain can be modeled as
a matching game. In order to improve the speed
of transaction verification, a transaction verification
scheduling system for IS agents and V S agents is
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense
372 Chinese Journal of Electronics 2021
proposed. In our proposed model, V S agents and IS
agents interact under the assistance of the validation
service scheduling system for verifying the transactions
issued by IS agents, as shown in Fig.2.
Fig. 2. Validation service scheduling system
IS and V S agents complete the response process
of verifying reservation requests with the assistance of
the scheduling system. Every V S agent chooses K (For
example 1 or 2 as shown in Fig.2) transactions for
verification.
2. Utility function
Assume that there are M IS agents and N V S agents
in the network, and let Ω be a N ×M allocation matrix
with element aij = {0, 1},∀i ∈ N, j ∈ M, aij = 1 means
that ISj is assigned to V Si, and aij = 0 means that
no assignment is between ISj and V Si. Meanwhile, one
transaction issued by an IS agent can only be assigned to
at most Kj V S agents, while V Si could offer verification
opportunities to a fixed number P . Thus, we have two
constrains, i.e.,
N∑
i=1
aij ≤ Kj (12)
M∑
j=1
aij ≤ P (13)
To guarantee the throughput of transactions, the
utility of verifying transactions issued by IS agents is
considered from the following aspects. Firstly, V S agents
prefer to verify the transactions issued by IS agents with
high credit. Secondly, IS agents hope that the expense
for transaction verification could be as few as possible.
Thirdly, IS agents usually hope that the transactions
they issued can be verified as soon as possible, and set
the latest start verifying time tj considering their demand.
Therefore, the utility function UI(i, j) that can be used
to measure the utility of ISj is defined as:
UI(i, j) = (xj − pxj)− C(tij) (14)
where xj is the transaction amount and p is the fixed
transaction fee for each unit price. The larger the
transaction amount, the higher the transaction fee. C(·)
function is a step function for measuring the cost due to
delay, which is shown as
C(tij) =
{
0, tij ≤ tj
C, tij > tj
(15)
If the verifying time tij is later than tj , the delay cost
is a constant C, where C can be set by the IS agents
to express their tolerance on the transaction validation
process delay. Otherwise the delay cost is zero. We assume
that IS agents are rational, which means,
aij · UI(i, j) > 0, ∀i ∈ N, j ∈M (16)
For tractability, we assume that the unit transaction
fee of each transaction issued by IS agents is the same, in
other words, the unit transaction fee is p. In fact, rational
V S agents always tend to verify the transactions with
similar transaction amount it issued before. Meanwhile,
we define UV (i, j) as the utility function of V Si that
obtains from verifying transactions issued by ISj . Then
we have
UV (i, j) =
pxj
1 + |xi − xj |
(17)
where xi and xj are the average transaction amount
issued by V Si previously and the current transaction
amount issued by ISj , respectively. In our proposed
model, the IS agents and V S agents can switch to each
other.
For higher utility, V S agents prefer highly trusted IS
agents, and they also prefer the amount of transactions
which are close to the average amount they issued before.
Hence, the utility UV (i, j) of V Si offering verification
opportunity to ISj has the following characteristic:
UV (i, j) > UV (i, j′)
for T (i, j) > T (i, j′) and |xi − xj | < |xi − xj′ |
(18)
The objective of the system is to maximize the
utilities of both IS agents and V S agents, β is a weight
parameter which adjusts the impact of IS agents and V S
agents. Thus, to maximize its utility as follows:
maxβ
∑
i∈N
∑
j∈M
aijUIi,j + (1− β)
∑
j∈M
∑
i∈N
aijUIi,j (19)
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense
An Optimal Stability Matching Algorithm for DAG Blockchain Based on Matching Theory 373
s.t.
N∑
i=1
aij ≤ Kj ,
M∑
j=1
aij ≤ P, aij = {0, 1} (20)
aijUI(i, j) > 0,∀i ∈ N, j ∈M (21)
3. Verification matching model
The matching process between IS agents and V S
agents is executed periodically. Each matching period
consists of four phases as shown in Fig.3.
Fig. 3. Timing diagram of matching period
Phase 1: The scheduling system collects transactions
with transaction fees from IS agents.
Phase 2: V S agents build their own preference lists
and broadcast them according to the utility function they
built before. The length of preference lists can be longer
than the maximum number of verifiable transactions.
Phase 3: IS agents establish and update their
preference lists according to the maximum number of
times the transactions can be verified and the matching
information they received. When each IS agent has been
matched or all V S agents can’t match more IS agents,
then move to Phase 4, otherwise return to Phase 2 to
continue the matching process until the final preference
lists of all IS agents are stable.
Phase 4: V S agents verify the transactions issued by
IS agents.
The duration of Phase 1 depends on the scheduling
system. Furthermore, the end time of Phase 2 and Phase
3 is triggered by the end condition of the matching
algorithm. At the same time, the scheduling system will
set the latest start time of Phase 4 based on the number
of verification requests received in the previous matching
period. If the verification requests received in Phase 2
or Phase 3 are not the transactions issued by IS agents
in Phase 1, the requests will be temporarily cached by
the V S agents and will respond within the next matching
period.
Now, we give the basic terminology in matching
theory and then describe the proposed algorithm.
Definition 1 Matching
A matching ψ between IS agents and V S agents is an
assignment and it must meet the following requirements
• Each transaction issued by ISj can be assigned to
at most Kj V S agents, while Kj is set by ISj .
• Only when each V S agent only verifies P
transactions it can take part in the reward distribution.
Definition 2 Preference list
Each IS agent j ∈M ranks a subset of transactions
issued by V S agents in strict descending order according
to the utility function defined in Eq.(14), then generates
its preference list PreLj .
Definition 3 Stable matching
A matching ψ is stable if and only if no ISj can be
assigned to another V Si and the utility of V Si cannot be
larger if it is assigned to the transaction issued by IS′
j
rather than ISj .
Based on the previous definition, the following is
a detailed description of the Stable matching algorithm
(SMA). The detailed matching process is as shown in
Algorithm 2. Firstly, each V S agent calculates the
utilities if it verifies the transactions issued by different
IS agents. Then, those IS agents with positive utilities
are included in the preference lists of corresponding V S
agents and are sorted in descending orders. Each IS agent
first sends matching requests to its favorite V S agents in
the preference list. After receiving proposals from all V S
agents, each IS agent checks if the number of proposals
in REQUEST exceeds the maximum verification times
of its transactions. If the verifying requests received by
ISj do not exceed the maximum verification times, it
will accept all, and take them into neutral list (NeuL).
Otherwise, ISj will choose Kj V S agents which can
verify the transaction with higher probability of success,
and reject the others. The rejected V S agents will be
cached in reject list (RejL). In the next iteration, the
V S agents which have been rejected in previous iteration
will send verifying requests to the remaining IS agents in
their preference lists. Then the requested IS agent check
again if the total number of new coming requests and
V S agents yet in its NeuL exceed the maximum number
of transactions it can verify. If not, caching both new
coming transactions and V S agents yet in NeuL in the
last iteration, otherwise, choose Kj V S agents which are
most likely to succeed. The iteration goes on until all the
IS agents are in the NeuL or IS agents which are not
suspended by any V S agents has been rejected by all V S
agents in the preference list.
V. Performance Evaluation
In this section, simulation results are presented for
performance evaluation of the proposed scheme.
We first set up the blockchain experiment envi-
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense
374 Chinese Journal of Electronics 2021
ronment based on the Docker platform and consider
the Docker containers as nodes in the blockchain. The
experiment is performed on a server with Ubuntu 18.04
LTS, Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz
and 64GB RAM, and each Docker container installing a
blockchain client application. The blockchain client appli-
cation is implemented by Python 3.7. All transactions are
created by the blockchain client application. Each node’s
processor and its CPU utilization rate are generated and
managed by the Docker platform.
Algorithm 2 SMA:Stable Matching Algorithm
Input: (xj , t
i
j , p, tj) : IS agents’ verification request;
ni: the number of available interfaces that V Si can use
to verify transactions,
PreLj = ∅: the IS agents’ Preference List,
NeuLi = ∅: the list of IS agents that V Si hasn’t rejected,
RejLj = ∅: the list of IS agents that V Si has rejected
Output: Distribution matrix τN×M
Construct utility function
for ISj ,j ∈ M − ∪N
i=1NeuLi
REQUESTi = ∅
Propose to all the V Si, i ∈ PreLj −RejLj
Update REQUESTi
if length(REQUESTi) + length(NeuLi) < ni
NeuLi = NeuLi ∪REQUESTi
else
NeuLi = Topni(NeuLi ∪REQUESTi)
Reject any other request in REQUESTi
Update RejLj
end if
if ∪N
i=1NeuLi == MorRejLj == PreLj ,∀j ∈ M −
∪N
i=1NeuLi
break
else
continue
end if
end for
return NeuLi
1. Simulation setup
We consider the scenario with M IS agents and N
V S agents, where 5 ≤ M,N ≤ 20, assuming that each
V S agent has 2 verification interfaces. The probability
that a V S agent fails to verify the transactions issued by
an IS agent is set to be 0.2, and delay cost constant C is
set to 0.5. All simulation parameters are summarized in
Table 1. The simulation experiments consider the SMA
algorithm based on global utility optimization and the
simplified version SMA algorithm (OV-SMA) that only
considers V S utility, respectively. Compared with SMA,
OV-SMA ignores the utility of IS, which can reduce the
communication load of the network and node resource
consumption. We compared SMA and OV-SMA with two
other Most credibility priority (MCP) and the Markov
chain Monte Carlo (MCMC) used in IOTA. The MCP
scheme assigns the most credible IS agents to V S agents.
However, in the OV-SMA scheme, IS agents are assigned
to V S agents purely based on the utilities of V S agents
and the utilities of IS agents are ignored.
Table 1. The Template
Parameters Values (Distribution)
M : the number of IS agents [5,20]
N : the number of V S agents [5,20]
C: the delay cost 0.5
P : the transaction fee 0.5
xj : the trading amount of the
transaction issued by ISj [1,10]
2. Simulation result
Fig. 4. Average system utility under different schemes
The experimental results of SMA, OV-SMA, MCP
and MCMC system utility are shown in Fig.4. It can be
seen that the system utility of the proposed SMA and
OV-SMA is significantly higher than MCP and MCMC.
When the number of transactions issued by IS agents is
less than 100, the average utility of SMA is 159% and
230% higher than MCP and MCMC respectively. When
IS agents issue too many transactions (more than 100),
V S agents can’t handle the transactions concurrently,
which causes many transactions in the network to be
unverified. At this time, the influence of the IS agent’s
preference on the overall utility of the system is weakened,
so the utility of OV-SMA is very close to the utility of
SMA. In fact, there are similar conclusions in the field
of Vehicle-to-Grid(V2G). For example, random matching
between vehicles and charging points is the least effective
matching method. Furthermore, it makes some charging
points used inefficiently, which leads to waste of energy
resources.
The comparison results of the success rate of block
verification in SMA and MCMC are shown in Fig.5. The
block verification success rate of SMA is about 20% higher
than that of MCMC. In the MCMC scheme, transactions
issued by IS agents are randomly assigned to V S agents,
causing the repeated verification of some blocks, resulting
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense
An Optimal Stability Matching Algorithm for DAG Blockchain Based on Matching Theory 375
in more unverified transactions. By contrast, in SMA,
transactions are assigned to the most appropriate V S
agents, so the unverified transactions are fewer. There
are fewer orphan blocks in the SMA scheme.
Fig. 5. Verification success rate under proposed SMA com-
pared to MCMC
We also compared the proposed matching algorithm
with the mature matching approach in V2G Networks.
The data of the connected V2G in Fig.5 is from
the work proposed by Zeng[26], and the experimental
results are divided into a matching algorithm based on
charging utility (V2G-utility) and a random matching
algorithm (V2G-random). V2G simulation results show
that the matching efficiency of the utility-based matching
algorithms is much higher than that of the random
matching algorithms. In a circle area with radius of 10
kilometers, 5 charging points and less than 50 cars, the
success rate of utility-based algorithm is above 90%, and
only about 56% in the random matching algorithm. This
is because the vehicle charging is limited by location,
power and other conditions, as a result, the probability of
the random matching failure is much higher than that in
blockchain. Compared with the scheduling scheme in the
V2G network, the performance of our proposed algorithm
is also good in terms of matching success rate.
Fig.6 illustrates the number of unverified transac-
tions of SMA and MCMC in each matching period,
respectively. The total number of transactions issued by
IS agents among 20 epochs mentioned above is 1253, and
the number of unverified transactions in MCMC is 249
which is almost five times greater than the unverified
transactions in the proposed SMA (51). It shows that
the number of unverified transactions of SMA is much
less than that of MCMC. The experiment proves the
effectiveness of SMA and reduces the number of unverified
transactions in the network.
To illustrate the objective influence of adding direct
and indirect trust evaluation to the measurement of
node credibility, we conducted a trust measurement
experiment on IS agents which issue continuous credible
transactions based on direct and indirect trust evaluation
and without direct and indirect evaluation. Assuming that
there is an IS agent that sends transactions in each epoch,
and these transactions are all assigned to specific V S
agents.
Fig. 6. Number of unverified transactions under proposed
SMA compared to MCMC
Fig.7 compares the initial trust degree of IS agents
in SMA and MCMC schemes that are not based on direct
and indirect trust evaluation. It is clear that the average
trust value derived from the SMA scheme is up to 12.1%
over the MCMC scheme and remains at a credibility
of 0.52. However, if transactions issued by a particular
IS agent always can be verified by V S agents, we can
conclude that the transactions issued by the IS agent is
trustable and the credibility is not just only 0.52. So, our
proposal includes the direct and indirect trust evaluation,
the modified trust evaluation is shown in Fig.8
Fig. 7. Original trust evaluation under proposed SMA com-
pared to MCMC
In the first seven epochs, the credibility of IS agents
in SMA increases exponentially. This is because the
transactions issued by IS agents are a continuous credible
sequence. And the proposed trust evaluation scheme has
a greater weight in continuous credible transactions. In
MCMC, the transactions issued by IS agents are not a
continuous credible sequence and the credibility is rarely
more than 50%.
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense
376 Chinese Journal of Electronics 2021
Fig. 8. Direct and indirect trust evaluation under proposed
SMA compared to MCMC
We conducted consensus delay and throughput
experiments under different numbers of V S agents and
IS agents. Fig.9 shows the trend of consensus delay with
5, 10 and 20 V S agents. The experimental results show
that regardless of the number of V S agents, the consensus
delay of SMA and MCMC increases linearly with the
number of IS agents. The consensus delay of SMA can
remain the same as MCMC and the number of orphan
blocks is reduced. Notably, the PoW calculation adopted
by IOTA in the process of transaction delivery is not
included in the performance evaluation experiment, which
may lead to a higher consensus delay.
Fig. 9. Time delay in consensus
When the number of IS agents (such as 20) is not
too large, the throughput of SMA is almost the same
as that of MCMC, and increases as the number of V S
agents increases. However, when there are too many IS
agents (greater than 40), the large amount of matching
information may lead to the tremendous network delay.
In Fig.10, when the number of IS agents and V S agents
comes to 80 and 20 respectively, the throughput of the
network is lower than the counterpart when there are 60
IS agents and 20 V S agents. The throughput of SMA
and MCMC is higher than PoW, despite the difficulty is
small enough in the experiment.
Fig. 10. Consensus throughput under different number of IS
agents
VI. Conclusions
In this paper, an optimal stability matching algorith-
m has been proposed to improve the throughput of the
consensus algorithm and reduce resource consumption.
DAG is used as the blockchain structure to improve
the transaction processing capability. In the verification
process, the matching theory is introduced to divide the
roles of nodes in the network into transaction issuers
(IS agents) and transaction verifiers (V S agents). The
Stable matching algorithm (SMA) based on matching
theory is proposed to motivate V S agents to verify
transactions issued by IS agents through transaction fees,
and reduce the probability of repeated verified blocks. In
addition, in order to provide the proof for the verification
of transactions, a direct and indirect trust evaluation
mechanism is offered for transactions issuers to encourage
V S agents to participate in consensus process. The more
credible the IS agents are, the higher success rate of
transaction verification will be. Compared with MCMC,
the proposed SMA algorithm can significantly reduce the
number of orphan blocks in the network and improve
the overall utility of the system at the same or higher
throughput.
References
[1] D. Lund, C. MacGillivray, V. Turner, et al., “Worldwide
and regional internet of things (IoT) 2014-2020 forecast:
A virtuous circle of proven value and demand”, http-
s://www.business.att.com/, 2014-5-1.
[2] Z. Zheng, S. Xie and H.N. Dai, “Blockchain challenges and
opportunities: A survey”, International Journal of Web and
Grid Services, Vol.14, No.4, pp.352–375, 2018.
[3] I.C. Lin and T.C. Liao, “A survey of blockchain security issues
and challenges”, International Journal of Network Security,
Vol.19, No.5, pp.653–659, 2017.
[4] A. Dorri, S.S. Kanhere and R. Jurdak, “LSB: A lightweight
scalable blockchain for IoT security and anonymity”. Journal
of Parallel and Distributed Computing, Vol.134, pp.180–197,
2019.
[5] S. Huh, S. Cho and S. Kim, “Managing IoT devices
using blockchain platform”, In: Proceedings of the IEEE
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense
An Optimal Stability Matching Algorithm for DAG Blockchain Based on Matching Theory 377
19th International Conference on Advanced Communication
Technology (ICACT), Bongpyeong, Korea, pp.464–467, 2017.
[6] X.T. Ma, W.P. Ma and X.X. Liu, “A cross domain
authentication scheme based on blockchain technology”, Acta
Electronica Sinica, Vol.46, No.11, pp.2571–2579, 2018.
[7] J. Sun and G. Xiong, “Credit payment for radio resources
transactions based on consortium blockchain in SCMA
mMTC”, Acta Electronica Sinica, Vol.47, No.8, pp.1677–1684,
2019. (in Chinese)
[8] I. Makhdoom, M. Abolhasan, H. Abbas, et al., “Blockchain’s
adoption in IoT: The challenges, and a way forward”, Journal
of Network and Computer Applications, Vol.125, pp.251–279,
2019.
[9] K. Karlsson, W. Jiang, S. Wicker, et al., “Vegvisir: A
partition-tolerant blockchain for the internet-of-things”, 2018
IEEE 38th International Conference on Distributed Comput-
ing Systems (ICDCS), Vienna, Austria, pp.1150–1158, 2018.
[10] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash
system”, Self-published Paper, Vol.1, No.1, 2008.
[11] I. Eyal, A.E. Gencer, E.G. Sirer, et al., “Bitcoin-ng: A scalable
blockchain protocol”, 13th symposium on Networked Systems
Design and Implementation (NSDI’16), Santa Clara, CA,
USA, pp.45–59, 2016.
[12] S. King and S. Nadal, “Ppcoin: Peer-to-peer crypto-currency
with proof-of-stake”, Self-published Paper, Vol.1, No.1, 2012.
[13] M. Castro, “A correctness proof for a practical byzantine-
fault-tolerant replication algorithm”, Ph.D.Thesis, Mas-
sachusetts Institute of Technology, Cambridge, MA, USA,
1999.
[14] Z.W. Zhang, “A byzantine fault-tolerant algorithm for
blockchains”, http://docs.neo.org/zh-cn/basic/consensus/whi
tepaper.html, 2019-8-15.
[15] A. Miller, Y. Xia, K. Croman, et al., “The honey badger
of BFT protocols”, Proceedings of the 2016 ACM SIGSAC
Conference on Computer and Communications Security,
Vienna, Austria, pp.31–42, 2016.
[16] E. Buchman, “Tendermint: Byzantine fault tolerance in the
age of blockchains”, https://tendermint.com/static/docs/tend
ermint.pdf, 2019-8-1.
[17] J.L. Gross, J. Yellen and P. Zhang, Handbook of Graph
Theory, CRC Press, Boca Raton, USA, pp.180–195, 2013.
[18] M. Zander, T. Waite, D. Harz, et al., “DAGsim: Simulation of
DAG-based distributed ledger protocols”, Measurement and
Modeling of Computer Systems, Vol.46, No.3, pp.118–121,
2019.
[19] S. D. Lerner, “DagCoin: A cryptocurrency without
blocks”, White Paper, DagCoin-v4, https://dagcoin.org/wp-
content/uploads/2019/07/Dagcoin_White_Paper.pdf, 2018-
05-14.
[20] S. Popov, “The tangle”, https://www.iota.org/foundation/re
search-papers, 2019-8-1.
[21] E. Heilman, N. Narula, T. Dryja, et al., “Cryptanalysis of
Curl-P and Other Attacks on the IOTA Cryptocurrency”,
https://eprint.iacr.org/2019/344.pdf, 2019-8-31.
[22] A. Churyumov, “Byteball: A decentralized system for storage
and transfer of value”, https://byteball.org/Byteball.pdf, 2019-
8-31.
[23] D. Gale and L.S. Shapley, “College admissions and the
stability of marriage”, The American Mathematical Monthly,
Vol.69, No.1, pp.9–15, 1962.
[24] Z. Zhang, T. Zeng, X. Yu, et al., “Social-aware D2D pairing
for cooperative video transmission using matching theory”,
Mobile Networks & Applications, Vol.23, No.3, pp.639–649,
2018.
[25] A. Zappone, L. Sanguinetti, G. Bacci, et al., “Energy-
efficient power control: A look at 5G wireless technologies”,
IEEE Transactions on Signal Processing, Vol.64, No.7,
pp.1668–1683, 2015.
[26] M. Zeng, S. Leng and Y. Zhang, “Power charging and
discharging scheduling for V2G networks in the smart grid”,
2013 IEEE International Conference on Communications
Workshops (ICC), Budapest, Hungary, pp. 1052-1056, 2013.
XIA Xu was born in Jiangsu,
China. He is working on his master degree
with the School of Information Science and
Engineering of East China University of
Science and Technology, Shanghai, China.
His research interests are in the general
area of distributed system and blockchain.
(Email: skj865@outlook.com)
HUANG Jianhua (correspond-
ing author) was born in Guizhou, China.
He had received the B.S., M.S., and Ph.D.
degrees from East China University of
Science and Technology. He has served as
Associate Professor of computer science
and engineering at East China University
of Science and Technology since 1998.
His research interests include computer
networks, IoTs, blockchains, and data mining. He is a member
of blockchain branch of Chinese Institute of Electronics. (Email:
jhhuang@ecust.edu.cn)
HONG Zheng received her
Ph.D. degree in computer software and
theory from Chinese Academy of Science,
China in 2003. She joined East China
University of Science and Technology,
China in 2003, where she is currently an
Associate Professor in the Department of
the Computer Science and Engineering.
Her research interests include pervasive
computing, system modelling and analysis, blockchains.
(Email: zhenghong@ecust.edu.cn)
TANG Ruicong received the
M.E. degree in software engineering from
Zhejiang University. His research interests
include fintech and blockchain technology,
focusing on supply chain finance, sharding
and cross-chain tech-nology, distributed
network. He has held several blockchain
patents.
(Email: ruicongtang@zju.edu.cn)
 20755597, 2021, 2, D
ow
nloaded from
 https://ietresearch.onlinelibrary.w
iley.com
/doi/10.1049/cje.2021.01.010 by C
ity U
niversity O
f H
ong K
ong, W
iley O
nline L
ibrary on [15/04/2023]. See the T
erm
s and C
onditions (https://onlinelibrary.w
iley.com
/term
s-and-conditions) on W
iley O
nline L
ibrary for rules of use; O
A
 articles are governed by the applicable C
reative C
om
m
ons L
icense