Decentralized Resource Allocation for Video Transcoding and Delivery in Blockchain-Based System With Mobile Edge Computing
IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 11, NOVEMBER 2019 11169
Decentralized Resource Allocation for Video
Transcoding and Delivery in Blockchain-Based
System With Mobile Edge Computing
Yiming Liu , F. Richard Yu , Fellow, IEEE, Xi Li , Hong Ji , Senior Member, IEEE,
and Victor C. M. Leung , Fellow, IEEE
Abstract—The blockchain-based video systems are designed to
build a decentralized and flexible video ecosystem by enabling a
direct interaction among users, video providers (VPs), and service
providers. In blockchain-based video systems, the heterogeneous
qualities and formats of the video streams usually require massive
computational resources to transcode them into different versions
and formats to meet distinct requirements of users. However, cur-
rent blockchains cannot handle massive and heterogeneous video
streaming due to limited computing capacity and long transaction
times. To deal with this issue, in this paper, leveraging mobile
edge computing (MEC) technology, we propose a blockchain-based
MEC architecture, where small base stations (SBSs) allocate their
computation as well as communication resources for providing
video streaming in a distributed and secure manner. Moreover, to
improve the operation efficiency, we use a series of smart contracts
to enable a self-organized video transcoding and delivery service
without a centralized controller. Then, users, SBSs, and VP could
adjust their strategies according to the transactional information
on blockchain. Moreover, we formulate the video transcoding and
delivery problem as a three-stage Stackelberg game. We analyze
the sub-game equilibrium in each stage and the interplays of the
three-stage game. Last, we propose an iterative algorithm to solve
the problem. Simulation results show that the proposed approach
could obtain the good performance in terms of average time to
finality (TTF), average access delay, and network cost.
Index Terms—Mobile edge computing, blockchain, smart con-
tracts, video transcoding, resource allocation.
I. INTRODUCTION
THE ubiquitous penetration of video streaming services sig-
nificantly fuels a dramatical growth of mobile data traffic
in current wireless networks. According to the Cisco report,
Manuscript received January 26, 2019; revised July 15, 2019; accepted August
13, 2019. Date of publication August 26, 2019; date of current version November
12, 2019. This work was supported by the National Natural Science Foundation
of China under Grants 61771070 and 61671088. The review of this paper was
coordinated by Dr. Y. Guo. (Corresponding author: Hong Ji.)
Y. Liu, X. Li, and H. Ji are with the Key Laboratory of Universal Wire-
less Communications, Ministry of Education, Beijing University of Posts and
Telecommunications, Beijing 100876, China (e-mail: liuyiming@bupt.edu.cn;
lixi@bupt.edu.cn; jihong@bupt.edu.cn).
F. R. Yu is with the Department of Systems and Computer Engineering,
Carleton University, Ottawa, ON K1S 5B6, Canada (e-mail: Richard.Yu@
carleton.ca).
V. C. M. Leung is with Computer Science and Software Engineering, Shen-
zhen University, Shenzhen 518060, China, and also with the University of British
Columbia, Vancouver, BC V6T 1Z4, Canada (e-mail: vleung@ieee.org).
Digital Object Identifier 10.1109/TVT.2019.2937351
mobile video traffic will occupy 79% of the global mobile data
traffic by 2022[1]. With the increasing of the demands for video
services, video streaming platforms like Netflix and YouTube
have become popular over the past decade. However, these video
streaming platforms suffer from a lot of disadvantages, such as
low profit for video providers, high monthly charge and low
privacy for users, etc. In addition, due to the heterogeneous
devices and dynamic network conditions, the video steams have
to be converted into different bitrate versions to satisfy distinct
requirements of users. These multiple copies of video files with
different bitrates are stored on the central servers, which bring
huge costs of video storages and bandwidth.
Recently, blockchain has been proposed as a promising de-
centralized solution and has been applied in various distributed
scenarios [2]–[4]. The blockchain essentially is a distributed
public ledger, which records transactions in a public or private
peer-to-peer (P2P) network. Leveraging blockchain technology,
several startups (e.g., flixxo, Livepeer, VideoCoin, etc.) are able
to build decentralized P2P networks with flexible monetization
mechanisms for providing video streaming services. In this
new era of blockchain-based video streaming, video providers
(VPs), users, and service providers can perform video trading
without the intervention of any third party [5]. Moreover, the
video sharing processes could be self-organized by utilizing
smart contracts, which are autonomous programs and deployed
to achieve self-executing and self-enforceable transactions [6].
However, due to the limited computing capabilities, current
blockchain-based video systems cannot enable video transcod-
ing, which transforms a video from one version to another
version on the fly to release the huge burden of the storage and
bandwidth.
On the other hand, mobile edge computing (MEC), which
brings the computing capabilities to the edges of the network, is
considered as a promising technology to support video streaming
services to the users [7], [8]. In general, small base stations
(SBSs) equipped with MEC servers provide low-latency services
to users and release the bandwidth and the storage costs[9]. The
authors in [10] propose an MEC-based architecture to enable
the MEC server to convert the bitrate version of the video based
on the network condition and user requirements. In [11], the
authors propose a video bitrate adaptation algorithm considering
the varying wireless channel conditions. The integration of
blockchain and MEC may bring substantial benefits and be an
0018-9545 © 2019 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-8824-4007
https://orcid.org/0000-0003-1006-7594
https://orcid.org/0000-0003-0466-1933
https://orcid.org/0000-0002-1640-2894
https://orcid.org/0000-0003-3529-2640
mailto:liuyiming@bupt.edu.cn
mailto:lixi@bupt.edu.cn
mailto:jihong@bupt.edu.cn
mailto:Richard.Yu@carleton.ca
mailto:vleung@ieee.org
11170 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 11, NOVEMBER 2019
inspiring thought for this interesting area. A lot of works have
been done on the MEC and blockchain to give a full play of
their advantages. Next subsection presents the related works on
blockchain, MEC, and game theory-based solutions.
A. Related Works
As pioneer works, the authors in [12], [13] introduce edge
computing for mobile blockchain and propose economic com-
puting resource managements based on Stackelberg game
model. To deal with the mining problems, the authors in [14]
propose an auction-based edge computing resource allocation
mechanism, where mobile users (miners) are able to offload the
mining works to an edge computing service provider (ECSP).
To maximize the revenue of the ECSP, the authors in [15]
propose a deep learning (DL) resource allocation scheme in
mobile blockchain networks. However, these works adopt proof
of work (PoW) protocol for achieving consensus in blockchain
network, where block mining and blocks synchronization among
all participants result in high cost and long delay, and thus makes
them unsuitable for delay-sensitive and energy-limited video
streaming.
To address this issue, the authors in [16] investigate the
consensus propagation problem in Proof of Stake (PoS)-based
consortium blockchain networks. They utilize game theory to
model the interaction among the blockchain user and min-
ers. The authors in [17] propose an enhanced Decentral-
ized Proof of Stake (DPoS) consensus scheme with two-stage
soft security solution, i.e., miner selection and block verifi-
cation, for secure vehicle data sharing in blockchain enabled
Internet of Vehicles (IoV). Utilizing consortium blockchain
and smart contract technologies, the authors in [18] pro-
pose a secure data sharing system for efficient data storage
and sharing without authorization in vehicular computing and
networks.
Game theory is an efficient and flexible tool that studies the
interaction and cooperation process among various nodes and
parties in networks. In edge caching networks, the authors in
[19] investigate an interplay among wireless network operator,
the sponsored content service providers, and mobile users under
a hierarchical three-stage Stackelberg game framework. The ap-
plications of Stackelberg game are also effectively investigated
for resource allocation in mobile cloud computing systems [20],
virtual resource management in wireless relaying networks [21],
computing resource allocation in fog networks [22], etc. In game
theory literature of blockchain networks, the authors in [23]
model the mining process as a cooperative game among miners.
In the mining process, miners form a coalition to accumulate
their computational power and have steady reward. In MEC-
enabled mobile blockchain networks, the authors in [13], [16]
model the mining process as Stackelberg game to maximize the
revenue of the ECSP and the utility of the blockchain. Although,
a lot of seminal works have modeled the resource allocation and
blockchain-based mining process as Stackelberg games, these
two areas have been addressed separately. In our paper, we take
the resource allocation and blockchain-based consensus process
into consideration and model them as a Stackelberg game which
should be well investigated to optimize the utilities of resource
and consensus process.
Currently, MEC offers a feasible way for video transcoding
to support adaptive video streaming services to the users. We
have investigated several issues regarding video transcoding and
delivery by leveraging MEC and other technologies. Leveraging
the wireless virtualization technique, a content caching and
computing framework is proposed in [7] to improve the video
service in information-centric heterogeneous networks. Con-
sidering the MEC, caching, and soft-defined networks (SDN),
a joint adaptive video rate, computing resource, and traffic
engineering problem is investigated in [9]. In [24], we pro-
pose a hybrid computing offloading approach in fog networks,
where users have multiple and independent tasks that can be
offloaded at fog nodes or at a remote cloud cooperatively. In
[25], leveraging MEC technology, we investigate the video
transcoding and delivery problem in ultra dense networks and
propose a joint SBS selection, task scheduling, and resource
allocation scheme for supporting video streaming services. The
integration of blockchain and MEC for video transcoding and
delivery may bring significant benefits and become an inspir-
ing thought for this interesting area. A blockchain-based MEC
framework is proposed in [26] to provide a flexible and effective
video streaming service by adaptively adjusting block size and
selecting different offloading models for video streaming. In
[27], we also leverage MEC technology and investigate the
resource allocation for video transcoding and delivery problem
in blockchain-based networks. However, the consensus process,
latency of block generation, and incentive mechanisms, which
are important parts of blockchain-based systems, are not con-
sidered jointly.
B. Main Contributions
In this paper, we investigate the video transcoding and de-
livery problem in blockchain-based MEC networks. The major
contributions of this paper are presented as follows:
� We propose a blockchain-based MEC network architecture
to handle the large-scale video requests from distinct user
devices in a decentralized and secure manner. In the pro-
posed architecture, without any centralized controller, the
blockchain maintains publicly auditable video transaction
records among VP, SBSs, and users.
� To improve the operation efficiency and resource utiliza-
tion, we propose a video transcoding and delivery ap-
proach, which envisions a set of smart contracts to build
a self-organized video trading market. In the proposed ap-
proach, VP, SBSs, and users are enforced by smart contract
terms and adjust their strategies based on the transactional
information recorded on blockchain.
� To address the interactions among VP, SBSs, and users
dynamically, we formulate the optimization problem, in-
cluding resource allocation, video trading, and consensus
process, as a three-stage Stackelberg game. Then, using
a backward induction method, we discuss the sub-game
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
LIU et al.: DECENTRALIZED RESOURCE ALLOCATION FOR VIDEO TRANSCODING AND DELIVERY IN BLOCKCHAIN-BASED SYSTEM 11171
equilibrium for each stage and the interactions of the three
stages. Finally, we propose an iterative algorithm to derive
a feasible solution.
� The simulation results are discussed and analyzed to eval-
uate the effectiveness of the proposed video transcoding
and delivery approach regarding average time to finality
(TTF), average access delay, and network cost in wireless
networks.
The remainder of our work is organized as follows. Section II
discusses the motivation of the integration of blockchain and
MEC for video streaming, and presents the proposed blockchain-
based MEC network architecture as well as the video transcoding
and delivery approach. Section III introduces the system model,
and the problem formulation in details. In Section IV, the
analysis of three-stage Stackelberg game is presented and an
iterative algorithm is proposed. Section V discusses the simula-
tion results. Finally, we summarize this paper in Section VI.
II. BLOCKCHAIN-BASED MEC NETWORK ARCHITECTURE
In this section, we first discuss the motivation of the integra-
tion of blockchain and MEC for video steaming services. Then
we present the blockchain-based MEC network architecture and
the video transcoding and delivery approach.
A. Motivation of the Integration of Blockchain and MEC for
Video Streaming
To give a clear motivation of the integrated blockchain and
MEC for video streaming, we discuss the advantages and chal-
lenges of the integration of blockchain and MEC for video
transcoding, respectively.
1) The Advantages of Integration of Blockchain and MEC for
Video Streaming: The same decentralization character of both
the blockchain and MEC built on the computation, communi-
cations, as well as their different complementaries makes their
combination become natural. On one hand, blockchains protect
the accuracy, consistency, and validity of the data and video
files in a transparent way. With the blockchain technique, each
participant manages its own keys, and transactional data are
encrypted and stored on blocks, which is feasible to achieve
privacy and security without any third party controls. Smart
contracts facilitate the video trading and the use of resources on
demand for the requested service. The blockchains and smart
contracts have practical effectiveness in video trading markets
across the different infrastructures and operators under insecure
network conditions. On the other hand, MEC servers provide
the storage and computation capacity for the video transcoding
and the consensus process in blockchain. The integration of
blockchain and MEC for video streaming aims at supporting
secure, decentralized, and incentive video services to fulfill the
application requirement.
2) The Challenges of Integration of Blockchain and MEC
for Video Streaming: Although the integrated blockchains and
MEC can enjoy the advantages of both them, there are several
challenges to be addressed to provide video streaming services.
� Architecture Design: Because of these heterogeneous and
disparate environments, it is difficult to deal with the issues
of security management, service management, and data
sharing in a centralized control system. The blockchain
enables the data sharing in a decentralized and secure
way under a distributed merely architecture. Thus, it is
essential to design an architectural network that integrates
blockchain and MEC techniques effectively to perform
network management.
� Resource Management: Since each video file is split into
a set of segments, and users may request each segment at
different bitrate versions, the resource allocation for video
transcoding is a crucial issue. The blockchain technique
enables the resources allocation on demand by utilizing the
smart contracts. Then, the design of smart contracts needs
to be addressed to perform resource allocation strategies for
video trading in an incentivized, automatic, and distributed
manner.
� Quality-of-Service Requirements: With the rapid develop-
ment of wireless technologies, the massive demand for low-
latency and high-definition (HD) video streaming services
poses severe challenges on the current wireless networks,
especially in large-scale and dynamic network environ-
ments. The video trading processes among the multiple
participants should be well designed.
� Scalability and Adaptability: Scalability is an essential
issue in designing a distributed blockchain-based MEC
architecture to manage the growing number of devices and
the massive amount of data. On the other hand, resource
allocation strategies should be dynamically adjusted ac-
cording to the current network conditions and the distinct
requirements of the users.
B. Blockchain-Based MEC Network Architecture
We consider a virtual P2P blockchain network as the backbone
of the decentralized video sharing network [5]. Every participant
(e.g., a VP, an SBS or a user) in the network maps itself as a node
in the overlay blockchain network. The core components of the
network architecture are as follows.
1) User: The users include various types of end devices, such
as smartphones, tablets, wearable devices, and so on. The users
send video requests to SBSs via wireless access links. Then,
after paying to VPs and SBSs through the blockchains, they can
enjoy video streaming services smoothly.
2) Video Provider: The VPs, which include individuals and
companies, upload a set of their videos into networks to earn
money from users that request their videos. At the same time,
they have to pay to SBSs for utilizing caching and computing
resources. With edge caching and MEC technologies, VPs can
put some videos proactively to SBSs in proximity to users by
paying SBSs through the blockchain for occupying storage and
computing resources.
3) Small-Cell Base Station: These SBSs equipped with MEC
servers work as service providers and provide their computing
capability and resources in service of transcoding and distri-
bution of video. They constitute wireless gateways to establish
user sessions and transmit all of the requested video streams.
Additionally, they will be incentivized via fees paid by the VPs
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
11172 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 11, NOVEMBER 2019
and users to transcode videos into all the necessary formats and
deliver video to users. The SBSs can also analyze the video
popularity based on the transaction data on the blockchain and
proactively cache videos of the VPs.
C. Proposed Video Transcoding and Delivery Approach
This subsection present the proposed approach that involves
several smart contracts for supporting the self-organizing and
correct execution of the video transcoding and delivery.
1) System Initialization: The VP, SBSs, and users in the system
map themselves as nodes in the blockchain network using a pair
of asymmetric keys (public/privacy) and a certificate, denoting
as PKi, SKi and Certi, respectively. Using the hash-code of
the public key, each node can be identified in the blockchain-
based video system with a unique addressH(PKi), whereH(∼
) denotes a collision-resistant, irreversible hash function. In the
initial stage, node i uploads its addresses, downloads the last data
about its transactions, and checks the integrity of its transactions.
2) Bidding and Selling Video Files: As shown in Fig. 2, during
a video trading process, users first requests several video files
with specific preferences including the number of videos, the
quality levels of videos, and expected serving time to SBSs.
Then, a video brokering contract (VBC) that indicates required
videos and some user preferences is created and published.
The VPs are informed of the published VBC and create video
licensing contracts (VLCs). Each VLC specifies the video price,
the maximum price to SBSs for transcoding and delivery, and a
reference to the VBC. Once the VLC arrives in the blockchain,
SBSs would publish video delivery contracts (VDCs), which
specify the resource prices for delivering video to the user and
the reference to the VLC. Lastly, the original VBC selects the
cheapest one among all the related VDCs to perform the video
transcoding and delivery and terminates all other contracts. Here,
we use a three-stage Stackelberg game to model video bidding,
negotiation, and transactions among VPs, SBSs, and users. More
details are discussed in Sections IV and V.
3) Paying and Earning for Video Files: In the process of video
trading, users pay for the video transaction through an address of
a VP and pay for the delivery transaction through an address of an
SBS, respectively. VP needs also pay for the video transcoding
transaction through addresses of SBSs. Then the payees (VPs
or SBSs) generate transaction records, and the payers (VPs or
users) verify and digitally sign the transaction and upload them
to the blockchain.
4) Carrying out Consensus Process: Regarding the consensus
process, each user publishes proof-of-view, and the SBS releases
a proof-of-service to the blockchain. The VP also publishes a
cryptographic proof that makes the SBS process and deliver the
video. If a fraudulent node is detected, the penalty mechanisms
would be triggered, the corresponding invalid transaction is
cancelled, and the payers (e.g., VP and users) refund their
payments. When the blocks which include their transactions
are verified and uploaded into blockchain, the VPs and SBSs
get their video fee and service fee, respectively. Considering
the computation-intensive of PoW protocol, we introduce a PoS
consensus mechanism in this paper. Without loss of generality,
Fig. 1. Blockchain-based MEC network.
Fig. 2. Blockchain-based process for video delivery.
the block producer (SBS) of a new block is chosen depending
on the amount of its ‘stake’ and the age of the ‘stake’. If
the blocks are successfully added into blockchain, the chosen
SBS will get reward.1 On the contrary, the SBS has to lose its
stakes and rights to participate in the consensus process in the
future if it validates a fraudulent transaction or block. In this
way, considering the vast staked tokens, the SBSs are generally
incentivized to generate blocks correctively.
III. SYSTEM MODEL AND PROBLEM FORMULATION
In this section, we present the system model and formulate
the video transcoding and delivery problem as a three-stage
Stackelberg game.
A. System Model
We consider a video transmission scenario in wireless down-
link systems. As shown in Fig, 1, M SBSs that have limited
caching and computing capacities are deployed to provide ser-
vices to the users and VPs. We consider that one VP provides
video files toN users served by SBSs. All video files f ∈ F are
split into l fixed-length segments, which have multiple bitrate
versions. Then, we use a rate βn, where 0 < βn � 1, to scale
down the original video and denote the different quality levels
of video required by user n. For simplicity, each user can only
choose one quality level of one video segment. We consider that
1SBSs can also act as validators which are responsible for new block validation
before a new block is finalized. If the new block cannot be validated by most of
validators (2/3), it cannot be finalized or append to the blockchain.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
LIU et al.: DECENTRALIZED RESOURCE ALLOCATION FOR VIDEO TRANSCODING AND DELIVERY IN BLOCKCHAIN-BASED SYSTEM 11173
TABLE I
COMPARATIVE STUDY OF OUR WORK WITH EXISTING WORKS ON BLOCKCHAIN AND MEC
the channel keep unchanged during the transmission of a packet,
and perfect instantaneous Channel State Information (CSI) is
available.
In the blockchain-based video systems, the SBSs with MEC
servers are considered as the consensus nodes equipped with
roughly synchronized clocks to perform the consensus process
in the blockchain network. All transaction data of video is
stored, broadcasted, and verified among consensus nodes in a
chain of “blocks”. The block records amounts of transactions
and is linked to the previous block, forming an ordered list
of blocks, called “blockchain”. Every block is generated in a
slotted manner with a fixed time interval. We consider that
these M SBSs generate blocks with block size SB (MB) and
block interval T (seconds). The users and VP act as light nodes
and only send/receive requests for videos due to the limited
computing capabilities. Every SBS has the maximum computing
resource, denoted as Fmax,m (Mbps) and allocates some portion
of the computing resource for video transcoding to VP denoted
as fm (MHz) and power resource to user n, denoted as pmn (W).
The price of resource, including computing resource and power
resource, is charged by each SBS and denoted as zm. Table II
lists the main parameters in the system model.
B. Content Request Processing Model
Users are usually willing to obtain a high bitrate of video
streaming for better watching experience when wireless chan-
nels are capable of transmission. While the users have to get
a lower bitrate level of video to avoid playback stalling if
the wireless channels experience severe interference or fading.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
11174 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 11, NOVEMBER 2019
TABLE II
LIST OF KEY NOTATIONS
Here, we mainly investigate the impact of the transcoding and
distribution of video streaming service and leave the cache
strategies for future work. Assume that the SBSs have proac-
tively cached some popular videos and have adequate computing
resources for transcoding [33]. We consider that every SBS
caches all bitrate versions for a few top popular video segments
and only the highest version for less popular video segments
[29]. Suppose that the n-th user requires quality level βn of
video segment fl, where Bfl (bits) denotes the total bitrate of
the l-th segment of the video file f and the Tn,thr denotes the
maximum access delay required by user n.
C. Communication Model
Suppose that user n requests a set of video files and obtains
these videos by accessing to SBS m via wireless access links.
To avoid the interference among users, we consider the nearby
interfering SBSs uses different spectrum resource which is or-
thogonally assigned to each user within the same SBSs [34].
Let |hmn|2 denote the wireless channel gain between user n and
SBS m and wmn denote the allocated bandwidth of SBS m to
user n. The available transmission rate of user n that accesses
to the m-th SBS is written as
Rmn = wmn log2
(
1 +
pmn|hmn|2
δ2
)
, (1)
where δ2 represents the power spectrum density of the additive
white Gaussian noise (AWGN).
D. Consensus Model
Without loss of generality, the election of SBS for block
generation is determined by the SBSs’ stakes, which are mea-
sured by the transcoding and delivery reward in the latest epoch.
Every epoch is composed of T time slots and has a fixed time
interval. In the PoS-based consensus protocol, at each time slot,
an uncompromisable random leader-election process is adopted
to designate a unique SBS for block generation. Followed by
[35], at time slot t, we assume that the stakes held by the
SBSs are static and denoted by S(t) = [s1(t), ..., sM (t)]. The
block producer election process is made up of a distribution D
and a deterministic function F (·) with a random seed ρ← D,
F (S, ρ, t) outputs a unique SBS index m(1 � m � M) for
block generation with probability
Pm(t) =
Sm(t)∑M
i=1 Si(t)
. (2)
The random variable m← F (S, ρ, t) is independent of t.
We adopt a standard Follow-the-Satoshi (FtS) algorithm,
which resembles the process of biased coin-tossing and ran-
domly designates a leader’s address, to facilitate the PoS-based
election process [35]. Through indexing a sub-set of tokens
controlled by the consensus nodes and tracking the owner’s
address of a random token index, the election of SBS for block
generation can be accomplished. The randomness of token se-
lection is guaranteed by the seeding function ρ← D, which is
implemented using the hashcode of the precedent block head.
E. Latency of Block Generation
To evaluate the latency of the blockchain generation, we
consider TTF, which measures how long it takes to receive a rea-
sonable guarantee that the transaction recorded in blockchain is
irreversible and finalized [36]. In PoS-based consensus process,
the transaction processing consists of two phases, i.e., generate
a block and reach a consensus on the generated block among
the validators. As such, the TTF for the transactions contains
the block generation time (i.e., block interval) and the block
validation time. For an SBS m, we derive the latency of block
generation as follows:
Lm(fm) = TI +
Taskm
Fmax,mfm
+ ξSB |M−1|, (3)
where TI is the block interval,Taskm is the occupied computing
resource for validating the block for SBS m. Similar to that in
[37], the time for the block broadcasting and comparison among
validators is a function of the block size SB , network scale (i.e.,
the number of validators |M−1|) and average validation speed
of each validators, which is denoted as ξSB |M−1|. Here, ξ is
a pre-defined parameter of generated block broadcasting and
validation, which can be obtained from statistics of previous
block validation processes.
F. Problem Formulation
The video transcoding and delivery problem is formulated
as a three-stage Stackelberg game, as illustrated in Fig. 3. In
three-stage Stackelberg game, the upstage is the leader and the
downstage acts as the follower. The leader selects the strategy
first and the follower reacts subsequently. In Stage I, an SBS
m acts as the leader and determines the resource price zm.
In Stage II, the VP, as the follower of Stage I, decides how
many computing resources and which SBS to select as service
providers based on the resource price. Then, the VP acts as the
leader of Stage II and determines the video price to users. In
Stage III, a user n, as the follower of Stage II, selects which
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
LIU et al.: DECENTRALIZED RESOURCE ALLOCATION FOR VIDEO TRANSCODING AND DELIVERY IN BLOCKCHAIN-BASED SYSTEM 11175
Fig. 3. Three-stage Stackelberg game model.
quality level of videos to purchase from VP and how much power
resource to purchase from SBSs.
1) Resource Allocation Model for SBSs: The revenues of
SBSs are made up with two parts, including the resource revenue
and the block generation and validation reward. Every SBS
performs the resource allocation non-cooperatively and gains
as many revenues as possible.
To incentivize SBSs to stay active for providing services, we
calculate the SBS’s stake by its service reward (transcoding
and delivery reward) received in the latest epoch. Thus, the
probability for electing SBS m as the block producer in the next
epoch is determined by the ratio between its service reward and
the total service reward of the other SBSs in the current epoch,
which is denoted as
Pm =
(zm − γm)(ζfamfm + ζp
∑N
n=1 pmn)∑M
i=1,i�=m(zi − γi)(ζfaifi + ζp
∑N
n=1 pin)
, (4)
where γm represents the resource cost of SBS m (e.g., the
computing cost and the communication cost), am ∈ {0, 1} rep-
resents whether VP chooses SBS m to deliver its video or not.
If VP chooses SBS m, am = 1; otherwise, am = 0.
Let λg denote the block generation reward and λv denote the
block validation reward in an epoch. The utility function of SBS
m is formulated as
Um
SBS(zm) = (zm − γm)
(
ζfamfm + ζp
N∑
n=1
pmn
)
+ (λg − Cg)Pm + (λv − Cv)
× (1− Pm)− χLm(fm),
(5)
where ζf and ζp are weighted factors to adjust the balance
between the computing resource factor and the power resource
factor, Cg and Cv represent the cost of block generation and
validation, respectively, and χ is a latency coefficient which
represents the impact of latency of block generation. The first
term is the reward of video transcoding and delivery, the second
term represents the reward of block generation, the third term
represents the reward for validating blocks, and the last term
represents the cost function of latency.
In order to maximize the revenue, all SBSs need to determine
an optimal resource price to the VP and users by solving the
problem as follows,
max
zm�γm
Um
SBS
(
zm
)
. (6)
2) Video Price Model for VP: VP’s profit is determined by
the number of videos and the quality levels of videos required by
users as well as a number of computing resource consumptions.
Let qnf ∈ {0, 1} represent whether user n chooses the video
file f or not. If user n chooses video file f , qnf = 1; otherwise,
qnf = 0. The utility function of VP is defined as
UV P (fm, y)
=
M∑
m=1
am min
{
fm,
N∑
n=1
βn
∑F
f=1
∑L
l=1 qnfBfl
Tn,thr
}
− αf
M∑
m=1
zmamfm + αv(y − φ)
N∑
n=1
F∑
f=1
L∑
l=1
βnqnfBfl,
(7)
whereαf andαv denote weighted factors which are greater than
zero to adjust the balance between the resource cost and video
revenue. φ denotes the video cost of VP, such as caching cost
and backhaul cost. It is related to the number of delivered videos
in networks. The first term indicates that users are guaranteed to
obtain their video streaming service under tolerable delay. We
assume that we do not know the computing capability of SBS m
and the quality level of video segments requested from the users
served by SBS m. If the computing capability of SBS is smaller
than the required bitrate of transcoding video files, we need to
select the larger capability to meet the users’ requirements, and
vice versa.
To maximize the revenue, VP should determine an optimal
content price and the required computing resources by solving
the following problem
max
fm�0,y�φ
UV P (fm, y). (8)
3) Content Demand Model for Users: Different users under
different wireless conditions require different quality levels of
videos. In general, users are willing to obtain as larger bitrate
as possible for good streaming quality. Taking the transmission
rate and quality level of video joint into consideration, we define
the utility function of user n as follows,
Un
user(pmn, βn)
= min
{
Rmn,
βn
∑F
f=1
∑L
l=1 qnfBfl
Tn,thr
}
− μvyβn
F∑
f=1
L∑
l=1
qnfBfl − μpzmpmn, (9)
where μp and μv denote weighted factors which are greater
than zero to represent the tradeoff between the power cost and
video cost. The first term indicates that the balance between
transmission rate and proper quality levels of videos should be
well addressed. We assume that we do not know the transmission
capacity of SBS and the quality level of video required by users.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
11176 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 11, NOVEMBER 2019
If the transmission capacity of SBS is smaller than the quality
level of the required video, the SBS needs to allocate more power
to improve the transmission rate, and vice versa.
The user n determines the quality level of videos and the
required power resource by solving the following problem,
max
pmn�0,βn�0
Un
user(pmn, βn). (10)
IV. ANALYSIS OF THE THREE-STATE STACKELBERG GAME
This section presents the analysis of the three-stage Stackel-
berg game and introduces a backward induction method to obtain
the solution. Then we analyze the interplays between different
stages and propose an iterative algorithm to solve the problem.
A. Stage III: User Level Game Analysis
To gain a better video streaming service, all users would
select the appropriate quality level βn and power pmn based
on the resource price zm and the video price y. Next we take
user n as an example to find a feasible solution in Stage I.
The utility function of user n is defined in two cases: (1)
Rmn � βn
∑F
f=1
∑L
l=1 qnfBfl
Tn,thr
; (2) Rmn >
βn
∑F
f=1
∑L
l=1 qnfBfl
Tn,thr
.
The utility function for the first case can be written as
Un
user(pmn, βn) = wmn log2
(
1 +
pmn|hmn|2
δ2
)
− μvyβn
F∑
f=1
L∑
l=1
qnfBfl − μpzmpmn.
(11)
To get feasible solution, the problem is decoupled into two
sub-problems. We firstly keep βn fixed and optimize p∗mn to
derive the optimal β∗n. According to the definition (11), when
1− μvyTn,thr > 0, the n-th user’s utility function is a concave
function of pmn, since
∂2Un
user
∂p2
mn
= −wmn|hmn|4(1− μvyTn,thr)
ln 2(pmn|hmn|2 + δ2)2
< 0. (12)
Thus, we can derive the optimal power allocation strategy
p∗mn as
p∗mn =
[
wmn(1− μvyTn,thr)
ln 2μpzm
− δ2
|hmn|2
]+
. (13)
Since the utility function of βn is monotonic decreasing,
βn would take the minimized value to maximize the utility as
follows,
β∗n =
wmnTn,thr∑F
f=1
∑L
l=1 qnfBfl
log2
(
1 +
p∗mn|hmn|2
δ2
)
=
[
wmnTn,thr∑F
f=1
∑L
l=1 qnfBfl
log2
(
wmn|hmn|2(1− μvyTn,thr)
ln 2μpzmδ2
)]+
.
(14)
When 1− μvyfTn,thr < 0, the utility function is a convex
function of pmn and the minimum of the function is achieved as
p∗mn =
[
wmn(1− μvyTn,thr)
ln 2μpzm
− δ2
|hmn|2
]+
. (15)
Hence, when pmn = 0, we can get an optimal strategy of
of βn. The utility function of βn is a monotonic decreas-
ing function: Un
user(pmn, βn) = −μvyβn
∑F
f=1
∑L
l=1 qnfBfl. It
would achieve the maximized value when β∗n = 0. However,
when β∗n = 0, it makes no sense in the practical scenarios. Since
a user sends a video requirement and receives the service from
an SBS, its transmission rate and quality level of video should
be above zero.
The utility function of βn for the second case is derived as
Un
user(pmn, βn) =
βn
∑F
f=1
∑L
l=1 qnfBfl
Tn,thr
− μvyβn
F∑
f=1
L∑
l=1
qnfBfl
− μpzmpmn =
(
1
Tn,thr
− μvy
)
× βn
F∑
f=1
L∑
l=1
qflBfl − μpzmpmn. (16)
When (1− μvyTn,thr) > 0, Un
user(βn) is a mono-
tonic increasing function. We can derive β∗n =
[
wmnTn,thr
∑F
f=1
∑L
l=1 qnfBfl
log2(1 + p∗mn|hmn|2
δ2 )]+ to achieve the
maximized value of the utility function.
When (1− μvyTn,thr) < 0, Un
user(βn) is a monotonic de-
creasing function. Although β∗n = 0 makes the utility function
get the maximized value, it is meaningless in the practical
networks due to the same reason.
B. Stage II: VP Level Game Analysis
To maximize its utility function, the VP first acts as a follower
to pay for the computing resources according to the SBSs’
resource price zm. Next, the VP acts as a leader to determine a
video price y to the users. Similarly, we decouple the problem to
get the feasible solution in Stage II. For maximizing the utility
function UV P , we first fix the video price y to find the optimal
fm, and then we find the optimal video price y based on the
requested computing resources fm.
In the VP level, it will choose a number of SBSs with the
lowest resource price z∗m one by one to buy computing resource.
The VP’s utility function is also derived in two cases: (1) fm �
∑N
n=1
βn
∑F
f=1
∑L
l=1 qnfBfl
Tn,thr
; (2) fm >
∑N
n=1
βn
∑F
f=1
∑L
l=1 qnfBfl
Tn,thr
.
For the first case, due to limited computing resources, the users
have to suffer a bad experience. Although this situation should
be avoided, we still consider this case and derive the following
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
LIU et al.: DECENTRALIZED RESOURCE ALLOCATION FOR VIDEO TRANSCODING AND DELIVERY IN BLOCKCHAIN-BASED SYSTEM 11177
utility function,
UV P (fm, y) =
M∑
m=1
amfm(1− αfzm)
+ αv(y − φ)
N∑
n=1
F∑
f=1
L∑
l=1
βnqnfBfl.
(17)
When 1− αfzm < 0, the utility function is monotonic de-
creasing of fm and achieves maximum value when f ∗m = 0. It
only happens when the selected scale rate of video is cached
exactly at SBS m and delivered to the user directly.
When 1− αfzm > 0, the utility function is monotonic in-
creasing of fm and gets the maximum value when fm selects
the maximum value as
f ∗m =
N∑
n=1
[
wmn log2
(
wmn|hmn|2(1− μvyTn,thr)
ln 2μpzmδ2
)]+
.
(18)
The utility function for the second case is derived as,
UV P (fm, y) =
M∑
m=1
N∑
n=1
am
βn
∑F
f=1
∑L
l=1 qnfBfl
Tn,thr
−
αf
M∑
m=1
zmamfm + αv(y − φ)
N∑
n=1
F∑
f=1
L∑
l=1
βnqflBfl.
(19)
We can find that the utility function is monotonic decreasing
of fm due to the send term −αf
∑M
m=1 zmam < 0. Thus, the
utility function gets the maximum value when fm selects the
minimum value as
f ∗m =
N∑
n=1
[
wmn log2
(
wmn|hmn|2(1− μvyTn,thr)
ln 2μpzmδ2
)]+
.
(20)
Next, we should calculate the feasible video price y for VP.
Note that different users served by different SBSs have the
different preferences for the same video. Then, the video prices
would be different for different users. We first define an indicator
function as
Vn =
{
1 y <
wmn|hmn|2−ln 2μpzmδ2
wmn|hmn|2μvTn,thr
, ∀n
0 otherwise.
(21)
Then UV P is rewritten as formula (22) which is shown at the
bottom of this page.
Although the problem in Stage II cannot be solved directly
since UV P is a piece-wise function of y, we can transform UV P
into a continuously differentiable function with a given value of
Vn. Then we introduce Dn as
Dn =
wmn|hmn|2 − ln 2μpzmδ2
wmn|hmn|2μvTn,thr
, ∀n (23)
We sort all Dn in ascending order as D1 � D2 � · · · � DN ,
and get N intervals as [0, D1), (D2, D3), . . . , (DN−1, DN ).
Then we derive ∂2UV P
∂y2 as follows,
∂2UV P
∂y2
= −
{
M∑
m=1
N∑
n=1
wmnμvT
2
n,thr
[
2αv
ln 2(1− μvyTn,thr)
+
μv(am(1− αfzm) + αv(y − φ)Tn,thr)
ln 2(1− μvyTn,thr)2
]}
< 0.
(24)
UV P is concave except some D non-differentiable points by
piecewise differentiating of it in each time interval. Therefore,
the non-cooperative video price game is a concave game and
exits at least one Nash equilibrium (NE) based on formula (22).
We derive ∂UV P
∂y which is shown as formula (25) at the bottom
of this page. From formula (24), ∂UV P
∂yf
is a strictly monotonic
decreasing function of y.
When y → φ, we can obtain that limy→φ
∂UV P
∂y > 0. When
y →∞, we can obtain that limy→∞ ∂UV P
∂y = −∞ < 0. The
utility function of VP is a concave function except for several
non-differentiable points D1, D2, . . . , DN . There exists at least
one NE in the non-cooperative video price game. Therefore, uti-
lizing some typical algorithms such as gradient-based algorithm
and binary search algorithm, the optimal video price y can be
obtained.
C. Stage I: SBSs Level Game Analysis
In Stage I, to analyze the competition relationships among
SBSs, we introduce the Bertrand game which is an effective
model to analyze competition among multiple sellers and their
consumers [38]. We assume that each SBS is independent
and selfish to gain its revenue as much as possible. All the
SBSs are willing to determine their resource prices as the
same to maximize their revenues. The revenue of SBS m de-
pends not only on the resource price zm and the resource cost
γm but also on the resource prices z−m determined by other
SBSs.
If the SBSs set their resource price non-cooperatively, it may
result in a monopoly situation. The SBS occupies the entire video
trading market if the SBS sets the lowest resource price. Hence,
UV P =
M∑
m=1
N∑
n=1
{
wmn
[
am(1− αfzm) + αvVn(y − φ)Tn,thr
]
log2
(
wmn|hmn|2Vn(1− μvyTn,thr)
ln 2μpzmδ2
)}
(22)
∂UV P
∂y
=
M∑
m=1
N∑
n=1
wmnTn,thr
{
αv log2
(
wmn|hmn|2(1− μvyTn,thr)
ln 2μpzmδ2
)
− μv[am(1− αfzm) + αv(y − φ)Tn,thr]
ln 2(1− μvyTn,thr)
}
(25)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
11178 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 11, NOVEMBER 2019
every SBS tries to decrease the resource price until it cannot
obtain any revenue. According to the Bertrand game model, the
set of the game players isM = {1, . . . ,m, . . . ,M}, the action
set is zm, and the payoff function of the SBS is Um
SBS . The
resource cost set of all the SBSs can be sorted in an ascending
order γ1 < γ2 < · · · < γM .
Definition 1. (Nash-equilibrium): A resource price z∗ =
(z∗1 , . . . , z
∗
m, . . . , z∗M , ) is in an NE if neither SBS can increase
its utility Um
SBS by unilaterally changing the price.
Proposition 1: The NE of the game is derived as z∗ =
{z∗1 , γ2, γ3, . . . , γM}, where z∗1 represents the resource price
determined by the first SBS at the NE. The z∗1 can be derived as
z∗1 = argmaxγ1�z1<γ2 U1
SBS(z1), when the SBS occupies the
entire video trading market as shown in formula (26), shown at
the bottom of this page.
Proof: U1
SBS(z1) is the first SBS’s utility function of z1.
For simplicity, we take two SBSs (e.g., SBS1 and SBS 2)
into consideration for analyzing the competition process among
SBSs. Let γ1 and γ2 denote the resource costs of SBS 1 and
SBS 2, respectively. We assume that γ1 < γ2. According to the
Bertrand game model, both SBSs would decrease their prices
to occupy the entire video trading market until they cannot get
any revenue. For maximizing the profit, SBS 1 would select the
highest resource price which is lower than the resource cost of
SBS 2. Then all the VP and users would pay for the resource
from the SBS 1 which occupies all the video trading market.
Therefore, SBS 1 would determine its resource price in the range
of [γ1, γ2) to maximize its own profit. �
Next we introduce the indicator functions for VP and users
n ∈ {1, 2, . . . . , N} as below,
IV P =
{
1 z1 <
∑N
n=1
w1n|h1n|2(1−μvyTn,thr)
ln 2μpδ2
0 otherwise.
(27)
Inuser =
{
1 z1 <
w1n|h1n|2(1−μvyTn,thr)
ln 2μpδ2
0 otherwise.
(28)
Thus by substituting (27) and (28) into (26), the utility func-
tion of SBS 1 becomes a piecewise function of z1. While the
problem in Stage III cannot be solved directly because of these
indicator functions IV P and Inuser.
Without loss of generality, we can derive a differentiable
continue function for given IV P and Inuser by introducing the
following functions
FV P =
N∑
n=1
w1n|h1n|2(1− μvyTn,thr)
ln 2μpδ2
, (29)
Fn
user =
w1n|h1n|2(1− μvyTn,thr)
ln 2μpδ2
. (30)
We sort all F 1
user, F
2
user, . . . , F
n
user, and FV P in an ascend-
ing order F 1
user � F 2
user �, . . . ,� Fn
user � FV P and get N
intervals, [0, F 1
user), (F
2
user, F
3
user), . . . , (F
n
user, FV P ). Let �1
denote 1 +
λg−λv−Cg+Cv
∑M
i=1,i�=m(zi−γi)(ζfaif
∗
i+ζp
∑N
n=1 p
∗
in)
and ϕ1 denote
{Fmax,1 −∑N
n=1[w1n log2(
w1n |h1n |2(1−μvyTn,thr)
ln 2μpz1δ
2 )+]}. By piece-wise
differentiating of the utility function, we assume that 0 < z1 <
F 1
user, the second derivative of U1
SBS(z1) is shown as follows,
∂U2
SBS
∂z2
= −χTask1w1n
ln 2
× ϕ2
m + 2z1ϕ1 + w1n
z2
1 ln 2ϕ4
1
−�1
×
{
N∑
n=1
w1n
ln 2z2
1
[
(z1 + γ1)ζfa1 + ζp
2γ1(1− μvyTn,thr)
μpz1
]}
< 0.
(31)
Thus, ∂U1
SBS
∂z1
is a monotonic decreasing function of z1 since
∂2U1
SBS
∂z2
1
< 0. ∂U1
SBS
∂z1
is derived as formula (32), shown at the
bottom of this page. Similarly, when z1 → γ1, we can obtain that
limz1→γ1
∂U1
SBS
∂z1
> 0; when z1 → F 1
user, there are two cases as
: limz1→F 1
user
∂U1
SBS
∂z1
� 0 and limz1→F 1
user
∂U1
SBS
∂z1
< 0.
U1
SBS(z1) = �1(z1 − γ1)
(
ζfa1
N∑
n=1
[
w1n log2
(
w1n|h1n|2(1− μvyTn,thr)
ln 2μpz1δ2
)+]
+ ζp
N∑
n=1
[
w1n(1− μvyTn,thr)
ln 2μpz1
− δ2
|h1n|2
]+)
+ λv − Cv − χ
⎧⎪⎪⎪⎨
⎪⎪⎪⎩
TI +
Task1
Fmax,1 −
∑N
n=1
[
w1n log2
(
w1n|h1n|2(1−μvyTn,thr)
ln 2μpz1δ2
)+] + ξSB |M−1|
⎫⎪⎪⎪⎬
⎪⎪⎪⎭
(26)
∂U1
SBS
∂z1
= �1 ×
{(
ζfa1
N∑
n=1
[
w1n log2
(
w1n|h1n|2(1− μvyTn,thr)
ln 2μpz1δ2
)+]
+ ζp
N∑
n=1
[
w1n(1− μvyTn,thr)
ln 2μpz1
− δ2
|h1n|2
]+)
− (z1 − γ1)
[
ζfa1
N∑
n=1
w1n
z1 ln 2
+ ζp
N∑
n=1
w1n
1− μvyTn,thr
ln 2μpz2
1
]}
+
χTask1w1n
z1 ln 2ϕ2
m
(32)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
LIU et al.: DECENTRALIZED RESOURCE ALLOCATION FOR VIDEO TRANSCODING AND DELIVERY IN BLOCKCHAIN-BASED SYSTEM 11179
Algorithm 1: Resource Allocation Iteration Algorithm.
1: Initialization:
a) Each SBS collects CSI and requests of all users in its
coverage;
b) Initialize the maximum number of iterations Γ and
set iteration number τ = 0;
c) Initialize a default resource price z for each SBS.
2: while τ < Γ do
3: The VP sets the video price y to their users and the
amount of computing resources according to zm;
4: Every user chooses the quality level of required
videos βn and determines the amount of power
resource pmn;
5: SBSs update their prices:
zm(τ) = Gm(z−m(τ − 1));
6: if ‖z(τ)− z(τ − 1)‖/‖z(τ − 1)‖ � ε then
7: Output the resource allocation z;
8: Break.
9: end if
10: τ = τ + 1;
11: end while
The utility functionU 1
SBS(z1) is strictly monotonic increasing
within the initial interval [0, F1) when limz1→F 1
user
∂U1
SBS
∂z1
� 0.
While the utility function U 1
SBS(z1) firstly increases with
z1 and goes down after reaching the optimal point when
limz1→F 1
user
∂U1
SBS
∂z1
< 0. Therefore, the utility function U 1
SBS
is a concave function at the first interval and the other inter-
vals. Therefore, for z1 < FV P , the utility function is a con-
cave function except the most N non-differentiable points at
F1, F2, . . . , Fn. Similarly, the problem in Stage III can be solved
to obtain the optimal z1 using several typical algorithms such as
binary search algorithm and gradient-based algorithm.
Based on the analysis above, we adopt a backward induc-
tion method to achieve the NE of the three-stage Stackelberg
game. The resource allocation iteration algorithm is presented as
Algorithm 1 to obtain feasible strategies. In Algorithm 1, we
adopt the best response function Gm(z−m(τ − 1)) of SBS zm
at the iteration τ to maximize its revenue with the given other
SBSs’ strategies z−m.
D. Interplays and Stackelberg Equilibrium
This subsection discusses the existence and the uniqueness of
the Stackelberg equilibrium. In the duopoly case, the convexity
of the follower’s reaction function plays an important role in the
uniqueness of the Stackelberg equilibrium.
Proposition 2: The unique NE exists in the proposed three-
stage Stackelberg game.
Proof: In the three-stage Stackelberg game, there exists at
least one NE in each stage, including the resource price strategies
z∗m determined by the SBSs, the computing resource f ∗m and the
video price y∗ offered by the VP, and the power allocation strat-
egy p∗mn required by users. When Algorithm 1 converges, the VP
cannot change the price unilaterally for improving its revenue.
The convergence property of the resource allocation iteration
algorithm has been proved [39]. Specifically, when the initial
price value y∗ is fixed, the results in the subsequent iterations
are fixed. For example, at the τ -th iteration, the resource price
set by the SBS is fixed. Then, at the (τ + 1)-th iteration, the
amount of computing resource is fixed and the search direction
of the algorithm from the current iteration to the next iteration
is unique [39], [40]. Thus, the resource price set by the SBS at
the (τ + 1)-th iteration is also fixed. Thus, the game converges
to a unique payoff. Therefore, the three-stage Stackelberg Nash
equilibrium is unique. �
E. Analysis of Feasibility and Optimality
In the proposed approach, users, SBSs, and VP are enforced
by smart contract terms and adjust their strategies according to
the transactional information stored on blockchain. To address
the interactions among these participants, we model the opti-
mization problem, including problems (6), (8), and (10) as a
hierarchical three-stage Stackelberg game. To investigate the
Stackelberg equilibrium, we use backward induction to seek
a perfect equilibrium for each sub-game by determining the
strategies of all the players. In Stage III, the users are not coupled
with each other, and thus we can analyze an optimal fraction of
content demand of each user in the sub-game independently. The
best response of the user can be obtained by directly solving
Problem (6). In Stage II, to maximize its utility function, the
VP first acts as a follower to pay for the computing resources
according to the SBSs’ resource price zm. Next, the VP acts
as a leader to determine a video price y to the users. The best
response of the VPs can be obtained by solving Problems (6).
Note that Problem (6) must be solved first since the VPs derive
their individual best responses based on those of users. Similarly,
Problems (8) need to be solved before solving Problem (10),
since the best response of the SBS, depends on those of the VP
and users.
In Algorithm 1, the SBSs need to set the resource price zm
in each iteration. In addition, the VP determines the video price
y to users and how many computing resources purchased from
the SBSs according to the resource price. The users select the
quality level of video and decide the amount of power resource.
The algorithm will stop when the prices converge. Therefore,
Algorithm 1 will converge to the Stackelberg equilibrium. The
reason is that the optimal video price is the best reaction function
of the optimal resource allocation policy. Therefore, the resource
allocation policy will achieve their optimums when the prices
converge. This will also be verified in the simulation results.
V. SIMULATION RESULTS AND DISCUSSIONS
In this section, we analyze and discuss the effectiveness of the
proposed blockchain-based MEC approach for video transcod-
ing and delivery via Monte Carlo simulation. The number of
available videos is 1000. The video popularity follows a Zipf
distribution with exponent 0.8 [29]. Each video f has the same
length of 600 seconds. We consider that the quality level of
videos in the range of 200 kbps (QVGA quality) and 2 Mbps
(HD quality). The channel gain models presented in 3GPP
standardization are adopted here [41]. The other main simulation
parameters are presented in Table III.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
11180 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 11, NOVEMBER 2019
TABLE III
THE SIMULATION PARAMETERS
Fig. 4. Resource allocation for VP and users with various resource prices.
A. The Influence of Different Parameters on Proposed Video
Transcoding Approach
In this subsection, we discuss the influence of the various
resource prices offered by SBSs on the number of resources
purchased by VP and users. As shown in Fig. 4, with the
increasing of resource price zm, users and VP have to reduce
their required power and computing resources, respectively. To
explain, the resource price is too high to afford for the users and
VP, both of them will reduce their required transmission power
and computing resource until stop transcoding and delivering
any video.
As shown in Fig. 5, the user would decrease its video cost by
adjusting the quality level of required videos βn with increasing
of video price y. We can find that the lower resource price
determined by the SBSs, the higher quality level of videos can
be obtained by users. On the other hand, with the increasing of
video price, the user purchases less power from SBSs as shown
in Fig. 6. To explain, the users would select a lower quality level
of required videos and obtain a smaller bitrate size of required
videos with the higher video price. Then, the user purchases less
power to make the transmission rate match with the required
quality level of videos.
Fig. 5. Quality level of video for user with various video prices.
Fig. 6. Allocated power for user with various video prices offered by VP.
Fig. 7. Utility of user versus power allocation of user.
Figs. 7–9 show that the utility functions of the user, VP, and
SBS versus power resource, video and resource price, respec-
tively. Fig. 7 shows that all the curves go up to a peak and then
go down with the increase of allocated power. The reason is that
the gain of the transmission rate cannot compensate for the rise
in the resource and video cost. Moreover, the higher the video
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
LIU et al.: DECENTRALIZED RESOURCE ALLOCATION FOR VIDEO TRANSCODING AND DELIVERY IN BLOCKCHAIN-BASED SYSTEM 11181
Fig. 8. Utility of user versus video price of VP.
Fig. 9. Utility of user versus resource price of SBS.
price is, the lower utility of user will be. Fig. 8 shows that all
the curves gradually go up to a peak and then go down with the
increase of video price. Although the VP can gain high revenue
with higher video price, the users may choose a low quality of
video contents to save money and the VP may get lower revenue.
As shown in Fig. 9, it shows that all the curves gradually go up
to a peak and then go down with the increase of resource price.
Similarly, with the increasing resource price, the users and the
VPs may reduce their requirements of resource, and then the
revenue of SBS has to decrease gradually.
Figs. 10–11 show that the average TTF versus maximum
computation capacity and the number of SBSs, respectively.
With the increasing computation capacity of SBS, the average
TTF decreases gradually as shown in Fig. 10. The reason behind
is obvious that SBSs can generate or validate blocks much faster
with stronger computation capabilities. Another observation is
that the average TTF becomes higher with the increasing number
of SBSs. As the number of validators (SBSs) increases, it is
obvious that the block validation process takes more time to
definitively validate a block, which is why average TTF is
increased. Similar observations can be made from Fig. 11: the
Fig. 10. Average TTF versus computation capacity.
Fig. 11. Average TTF versus the number of SBSs.
average TTF increases gradually with the increasing number of
SBSs.
B. The Effectiveness of Proposed Video Transcoding Approach
We select three typical schemes for comparison as follows:
1) the no-caching scheme, where SBSs without caching deliver
video file from the video provider, as labelled as “No caching”; 2)
the no-transcoding scheme, where SBSs cache some video files
but cannot transcode these videos into multiple bitrate versions
on the fly, as labelled as “No transcoding”; 3) the no-blockchain
scheme, where the video files of VP cannot be delivered directly
to the users via SBSs with MEC servers. These contents have to
be uploaded to central servers which manage the video contents
in a centralized manner. For the fairness of comparison, each
scheme adopts the same simulation parameters as Table II .
1) The QoS Performance of Users: We evaluate the user’
QoS regarding the average access delay which includes the
transmission delay, transcoding delay, and backhaul delay [25].
We consider that the users can enjoy the videos after paying
for the video services to the blockchain regardless of the block
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
11182 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 11, NOVEMBER 2019
Fig. 12. Average access delay versus cache capacity.
Fig. 13. Average access delay versus computation capability.
appending to the blockchain. If the transaction is fraudulent, cor-
responding penalty mechanisms would punish the fraud nodes
(users, VPs, and SBSs) and records the information on the
blockchain. Thus, the transaction delay is ignored in this paper.
Fig. 12 illustrates the average access delay with the various cache
capacities of SBSs. Except for “No caching” scheme, the average
access delays of the other schemes decrease with the increase
of cache capacities of SBSs. By transcoding and delivering
the videos at SBSs in a distributed and parallel manner, the
proposed approach achieves better performance. On the other
hand, as shown in Fig. 13, it shows that the average access
delay decreases with the increment of computing resources of
SBSs by using transcoding methods. Since the required videos
are cached at the SBSs exactly or forwarding to the remote
VP, the “No transcoding” scheme keeps unchanged with the
various computing resources. The “No caching” scheme which
delivers videos from remote VP also keeps unchanged. Lastly,
without leveraging blockchain technology, VPs have to upload
their videos to the central server which processes the video
requirements of users in a centralized manner. In this way, “No
blockchain” scheme suffers longer delay compared with the
blockchain-based video sharing solution.
Fig. 14. Total network cost versus the frequency band.
Fig. 15. Total network cost versus the number of user.
2) The Performance of Total Network Cost: The total network
cost plays an important role in optimizing network performance
and improving resource utilization [42]. To evaluate the perfor-
mance of network cost, we adopt network cost modelling in [26],
which considers energy consumption for video transmission
and transcoding as well as blocks generation and validation.
As shown in Fig. 14, it can be seen that the total network
cost of our proposed approach is lower than other schemes.
We can also see that all the curves decrease gradually with the
increasing of the frequency band. The reason is that the spectrum
allocation strategy has a significant influence on optimizing
the transmission rate of users. The adequate spectrum resource
may reduce the transmission delay as well as the network cost
significantly. From Fig. 15, we can find that the total network
cost increases with the increment of the number of users. The
total network cost of the “No caching” scheme is the highest
compared with other schemes. The reason is that, on one hand,
by applying caching, the SBS can transmit directly without
fetching from remote VP via backhaul links. Hence, duplicate
video transmissions are reduced, and fewer backhaul resources
are needed to provide. Therefore, the total network costs of
the other schemes are lower than the “No caching” scheme.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
LIU et al.: DECENTRALIZED RESOURCE ALLOCATION FOR VIDEO TRANSCODING AND DELIVERY IN BLOCKCHAIN-BASED SYSTEM 11183
Fig. 16. Convergence of the three-stage Stackelberg game.
Fig. 17. Convergence of the three-stage Stackelberg game.
On the other hand, by leveraging MEC technology, the SBSs
can transcode the original video into different quality levels of
videos effectively. As such, the duplicated video transmission is
further reduced and less backhaul resource is needed, and then,
lower network cost will be. Lastly, by leveraging blockchain
technology, the proposed approach has the lowest network cost
since the VPs can share their video to users directly rather than
uploading the video files to centre servers in wireless networks.
C. Convergence of the Proposed Game Approach
This subsection analyzes the convergence of the Stackelberg
game. For ease of illustration, we take a simple scenario with one
SBS and two users into account. As shown in Figs. 16 and 17, we
can find that the resource prices of SBSs and the computing and
power resources demands of the VP and users converge quickly.
Also, it can be seen that the higher resource prices are, the lower
resource demands will be.
VI. CONCLUSION AND FUTURE WORK
In this paper, we investigated the video transcoding and deliv-
ery problem in blockchain-based MEC networks. We proposed
a blockchain-based MEC network architecture, where SBSs
utilized their computation as well as communication resources
for providing video streaming in a distributed and secure manner.
Then we envisioned several small smart contracts to build a
self-organized video trading market, where all participants (i.e.
VPs, SBSs, and users) were enforced by smart contract terms.
Furthermore, we formulated the video transcoding and delivery
problem as a three-stage Stackelberg game. The sub-game equi-
librium for each stage and the interplays of the three-stage game
were analyzed and an iterative algorithm were proposed to solve
the problem. Simulation results show that the proposed approach
gains better performance compared with other existing schemes.
In future work, we will investigate the security issues regarding
the malicious consensus nodes in blockchain to enhance the
security by taking some reputation and contracts theory into
consideration. Moreover, we will discuss the blockchain-based
video streaming services in vehicular networks.
REFERENCES
[1] C. V. N. Index, “Global mobile data traffic forecast update, 2017–2022,”
White paper, Feb. 2019.
[2] K. Kotobi and S. G. Bilen, “Secure blockchains for dynamic spectrum
access: A decentralized database in moving cognitive radio networks
enhances security and user access,” IEEE Veh. Technol. Mag., vol. 13,
no. 1, pp. 32–39, Mar. 2018.
[3] O. Novo, “Blockchain meets IoT: An architecture for scalable access
management in IoT,” IEEE Internet Things J., vol. 5, no. 2, pp. 1184–1195,
Apr. 2018.
[4] Z. Yang, K. Zheng, K. Yang, and V. C. M. Leung, “A blockchain-based
reputation system for data credibility assessment in vehicular networks,” in
Proc. IEEE 28th Annu. Int. Symp. Pers., Indoor, Mobile Radio Commun.,
Oct. 2017, pp. 1–5.
[5] W. Wang, D. Niyato, P. Wang, and A. Leshem, “Decentralized caching for
content delivery based on blockchain: A game theoretic perspective,” in
Proc. IEEE Int. Conf. Commun., May 2018, pp. 1–6.
[6] N. Herbaut and N. Negru, “A model for collaborative blockchain-based
video delivery relying on advanced network services chains,” IEEE Com-
mun. Mag., vol. 55, no. 9, pp. 70–76, Sep. 2017.
[7] Y. Zhou, F. R. Yu, J. Chen, and Y. Kuo, “Resource allocation for
information-centric virtualized heterogeneous networks with in-network
caching and mobile edge computing,” IEEE Trans. Veh. Technol., vol. 66
no. 12, pp. 11339–11351, Dec. 2017.
[8] Z. Tan, F. R. Yu, X. Li, H. Ji, and V. C. M. Leung, “Virtual resource
allocation for heterogeneous services in full duplex-enabled SCNs with
mobile edge computing and caching,” IEEE Trans. Veh. Technol., vol. 67,
no. 2, pp. 1794–1808, Feb. 2018.
[9] C. Liang, Y. He, F. R. Yu, and N. Zhao, “Video rate adaptation and
traffic engineering in mobile edge computing and caching-enabled wireless
networks,” in Proc. IEEE 86th Veh. Technol. Conf., Sep. 2017, pp. 1–5.
[10] Y. Li, P. A. Frangoudis, Y. Hadjadj-Aoul, and P. Bertin, “A mobile edge
computing-based architecture for improved adaptive HTTP video deliv-
ery,” in Proc. IEEE Conf. Standard Commun. Netw., Oct. 2016, pp. 1–6.
[11] H. A. Pedersen and S. Dey, “Enhancing mobile video capacity and quality
using rate adaptation, ran caching and processing,” IEEE/ACM Trans.
Netw., vol. 24, no. 2, pp. 996–1010, Apr. 2016.
[12] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When mobile
blockchain meets edge computing,” IEEE Commun. Mag., vol. 56, no. 8,
pp. 33–39, Aug. 2018.
[13] Z. Xiong, S. Feng, D. Niyato, P. Wang, and Z. Han, “Optimal pricing-based
edge computing resource management in mobile blockchain,” in Proc.
IEEE Int. Conf. Commun., 2018, pp. 1–6.
[14] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, “Social welfare maximization
auction in edge computing resource allocation for mobile blockchain,” in
Proc. IEEE Int. Conf. Commun., 2018, pp. 1–6.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
11184 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 11, NOVEMBER 2019
[15] N. C. Luong, Z. Xiong, P. Wang, and D. Niyato, “Optimal auction for
edge computing resource management in mobile blockchain networks: A
deep learning approach,” in Proc. IEEE Int. Conf. Commun., May 2018,
pp. 1–6.
[16] J. Kang, Z. Xiong, D. Niyato, P. Wang, D. Ye, and D. I. Kim, “Incentivizing
consensus propagation in proof-of-stake based consortium blockchain
networks,” IEEE Wireless Commun. Lett., vol. 8, no. 1, pp. 157–160,
Feb. 2019.
[17] J. Kang, Z. Xiong, D. Niyato, D. Ye, D. I. Kim, and J. Zhao, “Toward
secure blockchain-enabled Internet of Vehicles: Optimizing consensus
management using reputation and contract theory,” IEEE Trans. Veh.
Technol., vol. 68, no. 3, pp. 2906–2920, Mar. 2019.
[18] J. Kang et al., “Blockchain for secure and efficient data sharing in vehicular
edge computing and networks,” IEEE Internet Things J, vol. 6, no. 3,
pp. 4660–4670, Jun. 2019.
[19] Z. Xiong, S. Feng, D. Niyato, P. Wang, A. Leshem, and Z. Han, “Joint
sponsored and edge caching content service market: A game-theoretic
approach,” IEEE Trans. Wireless Commun., vol. 18, no. 2, pp. 1166–1181,
Feb. 2019.
[20] Z. Yin, F. R. Yu, S. Bu, and Z. Han, “Joint cloud and wireless networks
operations in mobile cloud computing environments with telecom operator
cloud,” IEEE Trans. Wireless Commun., vol. 14, no. 7, pp. 4020–4033,
Jul. 2015.
[21] G. Liu, F. R. Yu, H. Ji, and V. C. M. Leung, “Virtual resource management
in green cellular networks with shared full-duplex relaying and wire-
less virtualization: A game-based approach,” IEEE Trans. Veh. Technol.,
vol. 65, no. 9, pp. 7529–7542, Sep. 2016.
[22] H. Zhang, Y. Xiao, S. Bu, D. Niyato, F. R. Yu, and Z. Han, “Computing
resource allocation in three-tier IoT fog networks: A joint optimization
approach combining Stackelberg game and matching,” IEEE Internet
Things J, vol. 4, no. 5, pp. 1204–1215, Oct. 2017.
[23] Y. Lewenberg, Y. Bachrach, Y. Sompolinsky, A. Zohar, and J. S. Rosen-
schein, “Bitcoin mining pools: A cooperative game theoretic analysis,” in
Proc. Int. Conf. Auton. Agents Multiagent Syst., 2015, pp. 919–927.
[24] Y. Liu, F. R. Yu, X. Li, H. Ji, and V. C. M. Leung, “Distributed resource
allocation and computation offloading in fog and cloud networks with non-
orthogonal multiple access,” IEEE Trans. Veh. Technol., vol. 67, no. 12,
pp. 12 137–12 151, Dec. 2018.
[25] Y. Liu, F. R. Yu, X. Li, H. Ji, H. Zhang, and V. C. M. Leung, “Joint
access and resource management for delay-sensitive transcoding in ultra-
densenetworks with mobile edge computing,” in Proc. IEEE Int. Conf.
Commun., 2018, pp. 1–6.
[26] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Distributed
resource allocation in blockchain-based video streaming systems with
mobile edge computing,” IEEE Trans. Wireless Commun., vol. 18, no. 1,
pp. 695–708, Jan. 2019.
[27] Y. Liu, F. R. Yu, X. Li, H. Ji, H. Zhang, and V. C. M. Leung, “Resource allo-
cation for video transcoding and delivery based on mobile edge computing
and blockchain,” in Proc. IEEE Global Commun. Conf., 2018, pp. 1–6.
[28] A. Zelensky, V. Voronin, E. Semenishchev, I. Svirin, and A. Alepko, “Video
content verification using blockchain technology,” in Proc. IEEE Conf.
Smart Cloud, Sep. 2018, pp. 208–212.
[29] Y. Jin, Y. Wen, and C. Westphal, “Optimal transcoding and caching for
adaptive streaming in media cloud: an analytical approach,” IEEE Trans.
Circuits Syst. Video Technol., vol. 25, no. 12, pp. 1914–1925, Dec. 2015.
[30] Z. Wang, L. Sun, C. Wu, W. Zhu, and S. Yang, “Joint online transcoding
and geo-distributed delivery for dynamic adaptive streaming,” in Proc.
IEEE INFOCOM, Toronto, Canada, Apr. 2014, pp. 91–99.
[31] A. Ashraf, F. Jokhio, T. Deneke, S. Lafond, I. Porres, and J. Lilius, “Stream-
based admission control and scheduling for video transcoding in cloud
computing,” in Proc. 13th IEEE/ACM Int. Symp. Cluster, Cloud, Grid
Comput., Delft, The Netherlands, May 2013, pp. 482–489.
[32] A. Ashraf, “Cost-efficient virtual machine provisioning for multi-tier web
applications and video transcoding,” in Proc. 13th IEEE/ACM Int. Symp.
Cluster, Cloud, Grid Comput., Delft, The Netherlands, May 2013, pp. 66–
69.
[33] J. Xie, R. Xie, T. Huang, J. Liu, F. R. Yu, and Y. Liu, “Caching resource
sharing in radio access networks: A game theoretic approach,” Frontiers
Inf. Technol. Electron. Eng., vol. 17, no. 12, pp. 1253–1265, 2016.
[34] Y. L. Lee, J. Loo, T. C. Chuah, and A. A. El-Saleh, “Fair resource allocation
with interference mitigation and resource reuse for LTE/LTE-A Femtocell
networks,” IEEE Trans. Veh. Technol., vol. 65, no. 10, pp. 8203–8217,
Oct. 2016.
[35] A. Kiayias, A. Russell, B. David, and R. Oliynykov, “Ouroboros: A
provably secure proof-of-stake blockchain protocol,” in Proc. Annu. Int.
Cryptol. Conf., 2017, pp. 357–388.
[36] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Performance
optimization for blockchain-enabled industrial Internet of Things (IIoT)
systems: A deep reinforcement learning approach,” IEEE Trans. Ind.
Inform., vol. 15, no. 6, pp. 3559–3570, Jun. 2019.
[37] X. Liu, W. Wang, D. Niyato, N. Zhao, and P. Wang, “Evolutionary game for
mining pool selection in blockchain networks,” IEEE Wireless Commun.
Lett., vol. 7, no. 5, pp. 760–763, Oct. 2018.
[38] B. Wang, Y. Wu, and K. R. Liu, “Game theory for cognitive radio networks:
An overview,” Comput. Netw., vol. 54, no. 14, pp. 2537–2561, 2010.
[39] H. Zhang, Y. Xiao, S. Bu, R. Yu, D. Niyato, and Z. Han, “Distributed re-
source allocation for data center networks: A hierarchical game approach,”
IEEE Trans. Cloud Comput., p. 1, Apr. 2018.
[40] H. Zhang, Y. Xiao, L. X. Cai, D. Niyato, L. Song, and Z. Han, “A multi-
leader multi-follower Stackelberg game for resource management in LTE
unlicensed,” IEEE Trans. Wireless Commun., vol. 16, no. 1, pp. 348–361,
Jan. 2017.
[41] L. ETSI, “Evolved universal terrestrial radio access (E-UTRA); Physical
channels and modulation,” ETSI TS, vol. 136, no. 211, p. V9, 2011.
[42] Y. Liu, X. Li, F. R. Yu, H. Ji, H. Zhang, and V. C. M. Leung, “Grouping and
cooperating among access points in user-centric ultra-dense networks with
non-orthogonal multiple access,” IEEE J. Sel. Areas Commun., vol. 35,
no. 10, pp. 2295–2311, Oct. 2017.
Yiming Liu received the B.E. degree in communica-
tion engineering from Shanghai University, Shanghai,
China, in 2014. Since 2014, she has been working to-
ward the Ph.D. degree with the School of Information
and Communication Engineering, Beijing University
of Posts and Telecommunications. She is also with
the University of British Columbia as a Visiting Ph.D
Student since September 2017. Her current research
interests include ultradense networks, nonorthogo-
nal multiple access, resource management, mobile
edge computing, blockchain, and distributed ledger
technology.
F. Richard Yu (S’00–M’04–SM’08–F’18) received
the Ph.D. degree in electrical engineering from the
University of British Columbia (UBC), Vancouver,
BC, Canada, in 2003. From 2002 to 2006, he was with
Ericsson (Lund, Sweden) and a start-up in California,
USA. He joined Carleton University in 2007, where
he is currently a Professor. He received the IEEE
Outstanding Service Award in 2016, IEEE Outstand-
ing Leadership Award in 2013, Carleton Research
Achievement Award in 2012, the Ontario Early Re-
searcher Award (formerly Premiers Research Excel-
lence Award) in 2011, the Excellent Contribution Award at IEEE/IFIP TrustCom
2010, the Leadership Opportunity Fund Award from Canada Foundation of
Innovation in 2009 and the best paper awards at IEEE ICNC 2018, VTC 2017
Spring, ICC 2014, Globecom 2012, IEEE/IFIP TrustCom 2009, and Interna-
tional Conference on Networking 2005. His research interests include wireless
cyber-physical systems, connected/autonomous vehicles, security, distributed
ledger technology, and deep learning. He serves on the editorial boards of
several journals, including Co-Editor-in-Chief for Ad Hoc and Sensor Wireless
Networks, Lead Series Editor for IEEE TRANSACTIONS ON VEHICULAR TECH-
NOLOGY, IEEE TRANSACTIONS ON GREEN COMMUNICATIONS AND NETWORK-
ING, and IEEE COMMUNICATIONS SURVEYS AND TUTORIALS. He has served as
the Technical Program Committee (TPC) Co-Chair of numerous conferences.
He is a registered Professional Engineer in the province of Ontario, Canada,
Fellow of the Institution of Engineering and Technology. He is a Distinguished
Lecturer, the Vice President (Membership), and an elected member of the Board
of Governors of the IEEE Vehicular Technology Society.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
LIU et al.: DECENTRALIZED RESOURCE ALLOCATION FOR VIDEO TRANSCODING AND DELIVERY IN BLOCKCHAIN-BASED SYSTEM 11185
Xi Li received the B.E. and Ph.D. degrees in com-
munication and information system from the Bei-
jing University of Posts and Telecommunications
(BUPT), Beijing, China, in 2005 and 2010, respec-
tively. In 2017 and 2018, she was a Visiting Scholar
with The University of British Columbia, Vancouver,
BC, Canada. She is currently an Associate Professor
with the School of Information and Communication
Engineering of BUPT. She has published more than
100 papers in international journals and conferences.
Her current research interests include resource man-
agement and intelligent networking in next-generation networks, the Internet of
Things, and cloud computing. She has also served as a TPC Member of IEEE
WCNC 2012/2014/ 2015/2016/2019, PIMRC 2012/2017/2018/2019, GLOBE-
COM 2015/2017/2018, ICC 2015/2016/2017/2018/2019, Infocom 2018, and
CloudCom 2013/2014/2015, the Chair of Special Track on cognitive testbed in
CHINACOM 2011, the Workshop Chair of IEEE GreenCom 2019, and a Peer
Reviewer of many academic journals. She is serving on the Editorial Boards of
the Wiley International Journal of Communication Systems.
Hong Ji (SM’09) received the B.S. degree in com-
munications engineering and the M.S. and Ph.D. de-
grees in information and communications engineer-
ing from the Beijing University of Posts and Telecom-
munications (BUPT), Beijing, China, in 1989, 1992,
and 2002, respectively. In 2006, she was a Visiting
Scholar with The University of British Columbia,
Vancouver, BC, Canada. She is currently a Profes-
sor with BUPT. She has authored more than 300
journal/conference papers. Several of her papers had
been selected for Best paper. Her research inter-
ests include wireless networks and mobile systems, including cloud com-
puting, machine learning, intelligent networks, green communications, ra-
dio access, ICT applications, system architectures, management algorithms,
and performance evaluations. She has guest-edited International Journal of
Communication Systems, (Wiley) Special Issue on Mobile Internet: Con-
tent, Security and Terminal. She has served as the Co-Chair for China-
com’11, and a member of the Technical Program Committee of WCNC’
19/15/14/12, Globecom’17/16/15/14/13/12/11/10, ISCIT’17, CITS’16/15/12,
WCSP’15, ICC’13/12/11, ICCC’13/12, PIMRC’12/11, IEEE VTC’12S, and
Mobi-World’11. She is serving on the editorial boards of the IEEE TRANSACTION
ON GREEN COMMUNICATIONS AND NETWORKING, Wiley International Journal
of Communication Systems.
Victor C. M. Leung (S’75–M’89–SM’97–F’03) is
a Distinguished Professor of computer science and
software engineering, Shenzhen University, Shen-
zhen, China, and a Professor Emeritus at the Uni-
versity of British Columbia (UBC), Vancouver, BC,
Canada. Before he retired from UBC at the end of
2018, he was a Professor of electrical and computer
engineering and the holder of the TELUS Mobility
Research Chair there. His research is in the broad
areas of wireless networks and mobile systems. He
has coauthored more than 1200 journal/conference
papers and book chapters. He is serving on the editorial boards of the
IEEE TRANSACTIONS ON GREEN COMMUNICATIONS AND NETWORKING, IEEE
TRANSACTIONS ON CLOUD COMPUTING, IEEE ACCESS, IEEE NETWORK, and
several other journals. He received the IEEE Vancouver Section Centen-
nial Award, 2011 UBC Killam Research Prize, 2017 Canadian Award for
Telecommunications Research, and 2018 IEEE TCGCC Distinguished Tech-
nical Achievement Recognition Award. He has coauthored papers that won
the 2017 IEEE ComSoc Fred W. Ellersick Prize, 2017 IEEE Systems Journal
Best Paper Award, 2018 IEEE CSIM Best Journal Paper Award, and 2019
IEEE TCGCC Best Journal Paper Award. He is a Fellow of the Royal Society
of Canada, Canadian Academy of Engineering, and Engineering Institute of
Canada. He is named in the current Clarivate Analytics list of “Highly Cited
Researchers.”
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:17:16 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice