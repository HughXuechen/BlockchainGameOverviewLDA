Delay-Limited Computation Offloading for MEC-Assisted Mobile Blockchain Networks
IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. 69, NO. 12, DECEMBER 2021 8569
Delay-Limited Computation Offloading for
MEC-Assisted Mobile Blockchain Networks
Yiping Zuo , Shi Jin , Senior Member, IEEE, Shengli Zhang , Senior Member, IEEE,
Yu Han , Member, IEEE, and Kai-Kit Wong , Fellow, IEEE
Abstract— The proof-of-work (PoW) mining process requires
a large amount of intensive computing, which leads to some
plights such as heavy equipment and fixed access nodes in
traditional blockchain networks. A novel mobile blockchain
network with the help of a mobile edge computing (MEC)
server is presented, where all mobile users participate in the
PoW mining process. The traditional Bitcoin network adjusts the
target difficulty value to ensure a stable block time. However,
for MEC-assisted mobile blockchain networks, the adjusted
difficulty value needs to be broadcast to all mobile users, which
results in expensive communication costs. To maintain a stable
block time of mobile blockchain networks, we formulate the
delay-limited computation offloading strategy of the PoW-based
mining task as a non-cooperative game that maximizes an indi-
vidual revenue in the MEC-assisted mobile blockchain network.
Specifically, the non-cooperative game problem can be divided
into multiple sub-game optimization problems to obtain final
solutions for all users. We analyze the sub-game optimization
problem and prove the existence of Nash equilibrium (NE) of
the non-cooperative game. Moreover, we design an alternating
iterative algorithm based on the continuous relaxation and greedy
rounding (CRGR) to achieve the NE of this game. Given the
sub-optimal delay-limited computation offloading results, we also
derive the optimal transmit power for an individual user within
the maximum mining delay range. From the analytical results,
we can see that the proposed CRGR-based alternating iterative
algorithm can efficiently attain the sub-optimal delay-limited
computation offloading strategies of all mobile users in the
polynomial time. The individual transmit power increases accord-
ingly with the delay-limited computation offloading strategies
of all users. Numerical results demonstrate that the proposed
Manuscript received January 25, 2021; revised June 30, 2021 and August 19,
2021; accepted September 11, 2021. Date of publication September 16, 2021;
date of current version December 16, 2021. The work was supported in
part by the National Natural Science Foundation of China under Grants
61921004 and 61941104. The research is partially supported by research
grants from the Chinese NSF project (61771315). The associate editor
coordinating the review of this article and approving it for publication was
J. Liu. (Corresponding author: Shi Jin.)
Yiping Zuo and Shi Jin are with the National Mobile Communications
Research Laboratory, Southeast University, Nanjing 210096, China (e-mail:
zuoyiping@seu.edu.cn; jinshi@seu.edu.cn).
Shengli Zhang is with the College of Information Engineering, Shenzhen
University, Shenzhen 518060, China (e-mail: zsl@szu.edu.cn).
Yu Han was with the National Mobile Communications Research Labo-
ratory, Southeast University, Nanjing 210096, China. She is now with the
Information Systems Technology and Design Pillar, Singapore University
of Technology and Design, Singapore 487372 (e-mail: hanyu@seu.edu.cn;
yu_han@sutd.edu.sg).
Kai-Kit Wong is with the Department of Electronic and Electrical Engineer-
ing, University College London, London WC1E 6BT, U.K. (e-mail: kai-kit.
wong@ucl.ac.uk).
Color versions of one or more figures in this article are available at
https://doi.org/10.1109/TCOMM.2021.3113390.
Digital Object Identifier 10.1109/TCOMM.2021.3113390
CRGR-based alternating iterative algorithm has fast convergence
and good stability.
Index Terms— Blockchain, mobile edge computing, computa-
tion offloading, mining delay, non-cooperative game.
I. INTRODUCTION
ESSENTIALLY, blockchain is a distributed database [1],
where transactions are connected by blocks without the
need of any third-party intermediary institutions to justify
transactional legitimacy. In recent years, researchers expect to
introduce blockchain technology [2], [3] into 6G to ensure the
privacy and security of users, and reduce the cost of resource
allocation and communication services. Especially, plenty of
works have been studied on the combination of blockchain
and wireless communication technologies [4], for example,
the Internet of things (IoT) [5], the spectrum allocation [6],
and the interference management [7].
The existing centralized network, which exists the high
maintenance cost of the data center and many other bottle-
necks, cannot adapt to the demands of joining everything to
Internet of Things (IoT). In the future, IoT will require a
decentralized network architecture, and blockchain technology
is one of the important core technologies to promote and real-
ize it. However, the introduction of the computation-intensive
proof-of-work (PoW)-based blockchain brings about the prob-
lem of limited computing and storage resources, as well
as the problem of excessively high communication service
costs in the mobile communication system. To solve these
problems, mobile blockchain networks deployed with many
IoT/mobile devices have been proposed in [8], so that various
mobile devices, such as mobile phones, iPads, and laptops,
can participate in the blockchain mining process. This pro-
posal of all devices joining mobile blockchain networks for
validating transactional legitimacy without any third-party
intermediaries can accelerate the transaction data processing
and ensure data privacy. In the mobile blockchain network,
mobile devices have low computations, storage, energy, and
communication resources, while the mining task of public
blockchains is computation-intensive. The resource-limited
mobile device is the bottleneck problem of the development of
mobile blockchain networks. To tackle this problem, mobile
edge computing (MEC) is proposed, which is a comput-
ing model that provides computing capabilities for wireless
access networks by deploying cloud computing servers at
0090-6778 © 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0003-4642-5824
https://orcid.org/0000-0003-0271-6021
https://orcid.org/0000-0002-7937-5870
https://orcid.org/0000-0002-3791-6050
https://orcid.org/0000-0001-7521-0078
8570 IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. 69, NO. 12, DECEMBER 2021
the network edge [9], [10]. The core idea of MEC is to
migrate storage and computation capabilities from the cloud
to the edge of the network. Consequently, mobile users’
computing tasks can be processed directly on their devices
or offloaded to nearby service nodes (such as BS and AP)
over the wireless channel. MEC can solve the bottleneck
problem in the mobile blockchain network and provide storage
and computation services for all mobile devices. Motivated
by this, MEC-assisted mobile blockchain networks have been
recognized as a promising approach to alleviate the resource
limitation of mobile users.
Many studies have been conducted on the assistance of the
MEC servers to complete the computation-intensive mining
tasks of mobile users. [11] formulated the price-based compu-
tation resource allocation that offloads proof-of-work (PoW)1
mining tasks to cloud/fog providers as a two-stage Stackel-
berg game model, jointly maximizing revenues of cloud/fog
providers and utilities of each mobile user. In [12], to effec-
tively manage computation resources, the authors proposed
an auction-based market model to solve the social welfare
optimization problem and design two auction mechanisms in
the constant-demand and multi-demand schemes for all mobile
users. The work in [13] considered a novel MEC-enabled
wireless blockchain framework, where PoW mining tasks are
offloaded to nearby APs or a group of device-to-device users
and the transactional content of the block can be cached in the
MEC server. Resource-constrained mobile users cannot sup-
port the computation-intensive PoW mining process; hence the
reputation-based consensus mechanism was presented to take
place of PoW in [14]. The MEC-assisted mobile blockchain
was also applied to caching of unmanned aerial vehicles for
ultra-reliable communication, and a novel neural-blockchain
network was proposed in [15]. Especially, the optimal resource
allocation designs in [16] were obtained to minimize the delay
of data transmission and computation in the MEC-assisted
mobile blockchain network, where the authenticity of users’
priorities for healthcare applications is guaranteed. Some other
works also considered deep reinforcement learning [17], [18]
and federated learning [19], [20] in the mobile MEC-assisted
blockchain networks to improve system performances.
Most of these previous works treated the PoW-based min-
ing tasks as a general computing demand and ignored the
special characteristics of the PoW mining task of public
blockchains. Specifically, mobile users running PoW mining
tasks compete with each other and the expected revenue of
each user is directly proportional to the selected number of
nonces. Nonce hash computing of PoW mining tasks is a
memoryless searching process, and the searching probability is
only related to the difficulty value, regardless of the size of this
searching space. Meanwhile, the total mining delay of PoW
mining tasks can be quantitatively analyzed by the number
of nonces. Furthermore, the traditional blockchain network
adjusts the target difficulty value to satisfy the requirement of
stable block time [21], [22]. For mobile blockchain networks,
the adjusted difficulty value needs to be widely advertised to
1More details about the PoW consensus protocol of the Bitcoin system can
be found in [1].
every mobile device, which results in high communication
costs. To the best of authors’ knowledge, few works focus
on the problem mentioned above. In this paper, we design a
new MEC-assisted mobile blockchain network and consider
the mining delay characteristic to avoid frequently adjusting
the target difficulty value. This work can be applied to a variety
of communication services, such as device access, content
sharing between devices, and traceable resource management.
Numerical results demonstrate the effectiveness of the pro-
posed alternating iterative algorithm. Our main contributions
to this paper are listed as follows.
• We propose a new MEC-assisted mobile blockchain sys-
tem and derive the individual delay and revenue of mining
a new block for three computation offloading schemes,
which are local computation scheme, full computation
offloading scheme, and hybrid computation offloading
scheme. The analysis result indicates that there is a
trade-off problem between the individual delay and rev-
enue in three computation offloading schemes.
• The computation resource management strategy of an
individual user is formulated as a non-cooperative game
with maximizing the individual revenue and consider-
ing the mining delay constraint. Then, we analyze the
sub-game optimization problem and prove the existence
of the Nash equilibrium (NE) of this game. In addition,
we propose the alternating iterative algorithm based on
continuous relaxation and greedy rounding (CRGR) to
obtain sub-optimal delay-limited computation offloading
strategies for all users and also derive the optimal indi-
vidual transmit power within the maximum mining delay
range.
• We provide numerical results to validate the convergence
performance of the proposed CRGR-based alternating
iterative algorithm. Then, we compare the average nonce
length, revenue, and delay of the proposed algorithm
with those of two baselines. We further demonstrate the
effects of different system parameters on the computa-
tion resource and transmit power allocation strategies in
mobile blockchain networks. Numerical results validate
the feasibility of the proposed systems for computational
offloading and resource management.
The remainder of this paper is organized as follows.
Section II represents the MEC-assisted mobile blockchain
system model and derives the individual delay and revenue of
mining a new block in three computation offloading schemes.
In Section III, we discuss a trade-off problem between the
individual delay and revenue and formulate the delay-limited
computation offloading strategies as a non-cooperative game in
the MEC-assisted mobile blockchain networks. In Section IV,
we prove the existence of NE of the non-cooperative game,
propose a CRGR-based alternating iterative algorithm to
obtain NE of this game. In Section V, given the delay-limited
computation offloading results, we derive the optimal individ-
ual transmit power. Numerical experiments are presented in
Section VI to confirm the analytical results. Finally, we con-
clude the main results of the work in Section VII.
The main notations used in this paper are summarized in
TABLE I.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
ZUO et al.: DELAY-LIMITED COMPUTATION OFFLOADING FOR MEC-ASSISTED MOBILE BLOCKCHAIN NETWORKS 8571
TABLE I
SUMMARY OF MAIN NOTATIONS
Fig. 1. Computation offloading for MEC-assisted mobile blockchain
networks.
II. SYSTEM MODEL
In this section, we first describe the system model of
MEC-assisted mobile blockchain. Then, we present the indi-
vidual delay and revenue of mining a new block in three
computation offloading schemes [23].
A. MEC-Assisted Mobile Blockchain Network
In this paper, we consider a MEC-aided mobile blockchain
framework, where the computation-intensive PoW min-
ing tasks of mobile users are offloaded to the MEC
server. As shown in Fig. 1, we assume that there are one MEC
server2 and N mobile users running blockchain applications
denoted by N = {1, 2, . . . , N} in the network. For many
practical scenarios in a small area, only a single MEC server
is needed. The mobile blockchain network with just a single
MEC server has many practical scenarios in a small area, such
as home application scenarios, small business application sce-
narios, campus application scenarios, and hospital application
scenarios. We have an assumption that all users are static
in a block time. The MEC server has powerful computing
and storage capacity. While the local computing capability of
2For the sake of simplicity, we only consider a single MEC server. Accord-
ing to different mobility patterns [24] for users, our current work can be
extended to general multiple MEC servers in the future [25], [26].
each mobile user is relatively small. In Fig. 1, the mobile
user n offloads its own computation-intensive PoW mining
tasks of public blockchains and transmits the block header
content to the MEC server. For simplicity, let H (·) denote
the hash function, and X denotes the candidate block header
information except for nonce. Nonce is an abbreviation of
the number once. In cryptography, the nonce is an arbitrary
or non-repetitive random value that is used once. Given an
adjustable difficulty parameter h, the hash value V of the block
header, which concatenates X and the nonce, is smaller than
a target difficulty value V (h):
V = H (X ||nonce) ≤ V (h) , (1)
and we have
V (h) = 2L−h =
2L
D (h)
, (2)
where L denotes the fixed length of bits, determining
the searching space of the hash function, i.e., nonce ∈�
0, 2L − 1
�
. D(h) = 2h is the blockchain’s difficulty value
[27], which represents the mining difficulty for a given L.
The difficulty value D(h) is inversely proportional to the
target value V (h). The more 0 in front of the 256-bit long
target value, the smaller the target value will be, but the
corresponding difficulty value will become larger. Nonce hash
computing is a memoryless searching process, and the search-
ing probability is only related to the difficulty value D(h),
regardless of the size of this searching space. For a given
difficulty value D(h), each nonce hash computing is i.i.d
Bernoulli trial with a successful probability:
PD =
1
D (h)
= 2−h. (3)
The successful probability for each nonce hash computing
is reciprocal with the difficulty value. If the obtained hash
value of the block header is smaller than the predefined target
difficulty value, the PoW mining is successful. Otherwise,
the nonce is incremented by 1, and the above PoW mining
process is repeated until the correct nonce is found.
Due to different transaction contents of the block header for
different users, each user selects nonces for hash computing
independently. Even though each user may choose the same
nonce, the corresponding hash is different. For mobile users,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
8572 IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. 69, NO. 12, DECEMBER 2021
the computation-intensive PoW mining demands of public
blockchains are extremely high (if the SHA-256 hash function
is used, then nonce ∈ �0, 232
�
), and given the cost of renting
MEC’s services and the mining delay, the final user’s revenue
can be reduced to even negative. Thus, we assume that each
user only selects several nonces to do hash computing instead
of traversing the entire nonce space. Here, we consider a
nonce ordering mechanism in the untrusted MEC PoW scheme
[21] to guarantee a fairer computation resource allocation
result for all mobile users. Each user transmits its own block
header content and the selected nonce sequence to the MEC
server. Then, the block header content is stored in the MEC
server and N nonce sequences of all mobile users are mapped
into a merged sequence. After preprocessing, the MEC server
provides nonce hash computing services for the long merged
nonce sequence.
The MEC-aided mobile blockchain system in this paper
has only one MEC server, where the fork and orphaning
probabilities between MEC servers will not be considered.
We denote the block size vector by s = (s1, . . . , sN ), which is
the number of transactions packaged into the block. The first
user successfully mines a block and achieves agreement in
the whole network can get a reward. The reward is composed
of a fixed bonus B for mining a new block, and a flexible
transaction fee determined by the block size sn of the col-
lected transactions for user n and the transaction fee rate r.
Therefore, the n-th mobile user’s expected reward regardless
of cost can be expressed by
Fn = (B + rsn) Mn
MN , ∀n ∈ N , (4)
the total number of nonces for all mobile users is given by
MN =
�
n∈N
Mn, (5)
where Mn is the selected nonce number/length of user n.
Then, we have the total reward for all users as FN =�N
n=1 Fn. However, (4) does not reflect the effect of
blockchain’s target difficulty on the PoW mining process. Even
though the MEC server provides all selected nonces with
hash computing services, all mobile users may fail to mine
a new block. Then, the n-th user’s expected reward without
considering cost is discounted by PD as follows
Fn= (B + rsn) 2−h Mn
MN
, ∀n ∈ N . (6)
B. Local Computation Scheme
In the following scheme, mobile user n only performs hash
computing of the PoW mining tasks locally. We assume that
the CPU frequency of user n is fn (cycles/s). The number
of nonces selected by user n is Mn and the corresponding
CPU cycles required for hash computing are α1Mn (cycles),
where α1 is a fixed constant representing the number of CPU
cycles required for once nonce hash computing. Consequently,
the total mining delay of performing hash computing locally
for user n is
T L
total,n =
α1Mn
fn
, ∀n ∈ N . (7)
The revenue of only performing hash computing locally for
user n is given by
FL
n =(B + rsn) 2−h Mn
MN
, ∀n ∈ N , (8)
where FL
n is equal to the n-th user’s expected reward regard-
less of cost Fn. This is because we don’t need to consider
any service fees for running hash computing locally. Here,
we assume that the cost of local execution is negligible.
C. Full Computation Offloading Scheme
In this full computation offloading scheme, mobile user n
offloads the full computation-intensive PoW mining tasks to
the MEC server. Firstly, we consider the time of transmitting
the block header content and nonces selected by user n to the
MEC server. According to the Shannon theorem, we obtain
the transmit rate of user n as
Rn = W log2
�
1 +
pnhn
N0
�
, ∀n ∈ N , (9)
where W is the wireless bandwidth, pn represents the transmit
power of user n, hn denotes the channel gain of user n, and
N0 is the noise power. The data size of the block header except
nonce is denoted as S and the data size of a nonce is denoted
as a. As a result, the transmission time required to transfer the
block header content and selected nonces to the MEC server
for user n is given by
T E
t,n =
S + aMn
W log2
�
1 + pnhn
N0
	 , ∀n ∈ N . (10)
Secondly, we assume that the CPU frequency of the
MEC server is fE (cycles/s). The CPU cycles required for
Kullback-Leibler divergence between two N -element vectors
are α2 N , where α2 is a fixed constant, and the CPU cycles
for nonce ordering by the nonce ordering mechanism in our
previous work [21] are α2N
2MN . Hence, we consider the
ordering time of all nonces on the MEC server for user n as
T E
o,n =
α2N
2MN
fE
, ∀n ∈ N . (11)
Finally, we consider the execution time required to offload
tasks to the MEC server for hash computing services for user
n, which is calculated as
T E
e,n =
α1Mn
fE
, ∀n ∈ N . (12)
The total mining delay of offloading tasks to the MEC server
for user n, including the transmission time of the block header
data, the ordering time of nonces, and the execution time of
hash computing, is given by
T E
total,n = T E
t,n + T E
o,n + T E
e,n
=
S + aMn
W log2
�
1 + pnhn
N0
	 +
α2N
2MN
fE
+
α1Mn
fE
, ∀n ∈ N . (13)
Note that in the downlink, the MEC server only needs to
publish the PoW mining results to all mobile users; therefore,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
ZUO et al.: DELAY-LIMITED COMPUTATION OFFLOADING FOR MEC-ASSISTED MOBILE BLOCKCHAIN NETWORKS 8573
the delay is small and can be ignored. Then, the revenue of
offloading all PoW mining tasks to the MEC server for user
n is
FE
n = (B + rsn) 2−h Mn
MN
− cMn, ∀n ∈ N , (14)
where c is the unit price for once hash computing service and
cMn is the computation service cost paid by user n to the
MEC server.
D. Hybrid Computation Offloading Scheme
In the following hybrid scheme, mobile user n performs a
proportion of hash computing tasks locally and offloads the
others to the MEC server. The mining delay in this scheme
is defined as the maximum one of the two computation parts,
which is expressed as
T H
total,n
= max
T
H/L
total,n, T
H/E
total,n
�
= max
⎧⎨
⎩
α1 (1 − βn)Mn
fn
,
S + aβnMn
W log2
�
1 + pnhn
N0
	
+
α2N
2 (βnMn +
�
β−nM−n)
fE
+
α1βnMn
fE
⎫⎬
⎭ ,
∀n ∈ N , (15)
where T H
total,n is the total mining delay for user n in the
hybrid computation offloading scheme. T
H/L
total,n denotes the
n-th user’s mining delay required to compute the hash of
(1 − βn) Mn nonces locally in the hybrid scheme. T
H/E
total,n
represents the n-th user’s mining delay of offloading βnMn
nonces to the MEC server in the hybrid scheme. βn is the
proportion of Pow-based mining tasks offloaded to the MEC
server from user n. β−n and M−n are the other users’
offloading ratio and the selected nonce length, respectively.�
β−nM−n is the sum of the nonce length, which is offloaded
to the MEC server for all users except user n. Then, the rev-
enue of partially doing hash computing locally and partially
offloading to the MEC server for user n is given by
FH
n = (B + rsn) 2−h Mn
MN
− cβnMn, ∀n ∈ N . (16)
III. NON-COOPERATIVE GAME FORMULATION
In this section, we first discuss a trade-off problem between
the individual delay and revenue in the proposed MEC-assisted
mobile blockchain networks. Then, we formulate computa-
tion resource allocation strategies as a non-cooperative game.
Specially, we represent a sub-game optimization problem to
jointly optimize the nonce length selection and the offloading
ratio to the MEC server with the objective of maximizing the
revenue for each user under the constraint of the mining delay.
Note that we only analyze the system performance under the
hybrid computation offloading scheme, because the other two
computation offloading schemes are special cases of the hybrid
scheme.
First of all, we analyze the properties of the delay and
revenue of an individual user in three computation offloading
schemes, as shown in the following Remark 1 and Remark 2,
respectively.
Remark 1 (Properties of delay): Observing the mining
delay in three computation offloading schemes described
as (7), (13), and (15), we can get the following insights.
• From (7), we can see that T L
total,n increases with Mn
and decreases with fn. That is, with the larger number of
nonces and smaller CPU frequency of user n, the mining
delay of user n will be longer in the local computation
scheme.
• If all mining tasks are offloaded to the MEC server,
we easily see that T E
total,n ascends not only with Mn
but also with
�
M−n, and descends with fE and pn.
Namely, other users’ strategies also impact the mining
delay of user n in the full computation offloading scheme.
Notably, different from T L
total,n in (7), T E
total,n in (13)
also considers the transmit delay between user n and the
MEC server and the nonce ordering delay.
• If user n and the MEC server complete PoW mining
tasks together, from (15), we see that T
H/L
total,n decreases
and T
H/E
total,n increases with the increment of βn, which
means that the mining delay in the hybrid computation
offloading scheme does not change linearly with βn.
Remark 2 (Properties of Revenue): From the revenue of
an individual user in three computation offloading schemes
described as (8), (14), and (16), we easily see that revenues
in three schemes, i.e., FL
n , FE
n , and FH
n , are all concave
functions of Mn, which implies that we can take the optimal
nonce selection strategies of user n to achieve the maximum
individual revenue. In addition, the revenue of user n decreases
with the increase of βn.
From Fig. 2 in Section VI, we can conclude that more
individual revenue results in the increased delay. Therefore,
there is a trade-off problem between the individual delay and
revenue. Within the specified mining delay range, how to solve
the computation resource allocation problem is the focus of the
discussion and analysis below. Notably, the individual delay
in the full computation offloading is not always lower than the
local computation scheme [28], [29], especially when channel
conditions are weak. For ease of analysis, we assume that the
channel conditions are good in this paper, and the bad channel
conditions will be studied in future work.
The interaction among mobile users can be modeled as a
non-cooperative game for the computation resource allocation
of each mobile user in MEC-aided mobile blockchain net-
works. Mobile user n competes with other users to maximize
its revenue by choosing the individual computation offloading
demand An, which includes the nonce length selection Mn and
the offloading ratio to the MEC server βn. The non-cooperative
game G =
�
N, (An)n∈N , (un)n∈N
�
is described as follows:
Players: Each user is one player and there are N mobile
users selecting the nonce length and the offloading ratio;
Strategies: The computation resource allocation An =
{Mn, βn} is the strategy of user n; A = (A1, A2, · · · , AN )
is the computation resource allocation profile for all mobile
users;
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
8574 IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. 69, NO. 12, DECEMBER 2021
Fig. 2. Individual delay and revenue versus the number of nonces. N = 2, M2 = 1000, β1 = 0.8, β2 = 1, s1 = s2 = 1000, f1 = f2 = 0.5GHz and
p1 = p2 = 0.1W .
Utility function: The utility function un in the follow-
ing (17) is denoted as the individual revenue (16) of user n.
Given the fee charged by the MEC server for once nonce
hash computing c and other users’ computation resource
allocation strategies, the expected utility un is given as
un (An, A−n) = un
�
Mn, M−n, βn, β−n
�
, (17)
where A−n = {A1, · · · , An−1, An+1, · · · , AN}, M−n =
{M1, · · · , Mn−1, Mn+1, · · · , MN}, and β−n = {β1, · · · ,
βn−1, βn+1, · · · , βN} are denoted as the computation resource
allocation strategy profile, the nonce length selection strategy
profile, and the offloading ratio strategy profile for all mobile
users except user n, respectively. By substituting (16) into (17),
the expected utility un is rewritten as follows
un (An, A−n) = (B + rsn) 2−h Mn
Mn +
�
M−n
− cβnMn,
∀n ∈ N . (18)
From (18), we can see that the greater the mining difficulty
value, the smaller the expected reward, and the corresponding
individual revenue will decrease.
The proposed non-cooperative game problem will be
divided into N sub-game optimization problems to obtain final
solutions for all users. Given a maximum mining delay T̄ ,
we formulate the sub-game optimization problem to jointly
optimize the nonce length selection and the offloading ratio to
the MEC server with the objective of maximizing the revenue
of user n for n ∈ N . This sub-game optimization problem of
user n can be expressed as follows
P1 : max
Mn,βn
un=(B + rsn) 2−h Mn
Mn +
�
M−n
− cβnMn
s.t. C1 : Mn ≥ 0
C2 : 0 ≤ βn ≤ 1
C3 : (B + rsn) 2−h Mn
N�
n=1
Mn
− cβnMn ≥ 0
C4 : max
⎧⎨
⎩
α1 (1 − βn)Mn
fn
,
S + aβnMn
W log2
�
1 + pnhn
N0
	
+
α2N
2 (βnMn+
�
β−nM−n)
fE
+
α1βnMn
fE
⎫⎬
⎭ ≤ T̄ ,
(19)
where constraint C1 guarantees the non-negativity of
the nonce length for user n. Constraint C2 sets the range
of the offloading ratio to the MEC server. Constraint C3
ensures the non-negativity of the individual revenue for user n.
In order to meet the delay requirement, constraint C4 makes
sure that the mining delay for hash computing cannot exceed
the maximum mining delay limit T̄ . Here, the sub-game
optimization problem can be formulated as P1 under certain
mining delay constraints, which maximizes the individual
revenue function and aims to find the optimal computing
resource allocation strategy of user n for n ∈ N . The MEC
server provides hash computing services for mobile users and
the MEC server will receive a fixed and stable revenue. The
mobile users who run PoW mining tasks receive statistical
random revenue. This kind of revenue is an expected value
and is risky. The MEC server usually chooses fixed revenue
rather than random revenue. Therefore, the proposed problem
P1 is reasonable.
IV. DELAY-LIMITED COMPUTATION OFFLOADING
In this section, we first simplify the sub-game optimiza-
tion problem P1 by using the continuous relaxation and
the variable substitution. Then, we prove the existence of
NE in the non-cooperative game. Furthermore, we propose
a CRGR-based alternating iterative algorithm to achieve the
optimal nonce length selection and the offloading ratio for all
users.
A. NE Analysis for Computation Resource Allocation
For simplicity, we define the feasible solution set of P1
as J (J �= 0). We consider NE as the solution for this
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
ZUO et al.: DELAY-LIMITED COMPUTATION OFFLOADING FOR MEC-ASSISTED MOBILE BLOCKCHAIN NETWORKS 8575
non-cooperative game model G =
�
N, (An)n∈N , (un)n∈N
�
.
The definition of the NE is given by Definition 1.
Definition 1: Let M∗ and β∗ denote the optimal nonce
length selection and the offloading ratio vectors to the MEC
server of all mobile users, respectively. Then, a strategy profile
A∗ = (M∗, β∗) is an NE if the following condition
un
�
M∗
n, M∗
−n, β∗
n, β∗
−n
� ≥ un
�
Mn, M∗
−n, βn, β∗
−n
�
,
∀ (Mn, βn) ∈ J , ∀n ∈ N , (20)
is satisfied, where M∗
−n and β∗
−n are the best response nonce
length selection and the offloading ratio vectors to the MEC
server for all mobile users except user n.
From the above NE definition, we can see that NE has
self-stability property. When other players’ strategies are
given, no player has the incentive to modify its own strategy.
This property is critical to the non-cooperative computation
resource allocation problem, since each mobile user is selfish
to mine new blocks based on their own interests. Observing
P1, we can find that the n-th user’s computation resource
allocation strategy {Mn, βn} is associated with other users’
strategies
�
M−n, β−n
�
. As such, we first investigate the
sub-game optimization problem P1, and then iteratively solve
the sub-game problem to obtain the NE of the entire game G.
For the sub-game optimization problem P1, it is difficult to
tackle due to the following two aspects:
• Since Mn has the non-negative integer constraint and
βn is a continuous variable, the problem P1 becomes
a mixed integer programming problem.
• The inequality function of constraint C4 is a non-smooth
and non-convex function with regards to variables
(Mn, βn). Therefore, the feasible set of P1 is not convex.
In brief, P1 is a mixed discrete and non-convex optimization
problem, which is also well known as an NP-hard problem.
To tackle this problem, we can make the following transfor-
mation and relaxation:
1) Continuous Relaxation of Target Variable
We first continuously relax the target variable Mn and
find the optimal solution for this continuous variable.
Then, we can get the optimal nonce length strategy of
user n by rounding this continuous solution to an integer.
2) Constraint Relaxation
In order to solve the non-smoothness of the inequality
function of constraint C4, we relax constraint C4 to make
the inequality function smooth. Constraint C4 can be
relaxed to the following two inequality constraints⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
C4�−1 :
α1 (1 − βn)Mn
fn
≤ T̄ , ∀n ∈ N ,
C4�−2 :
S + aβnMn
W log2
�
1 + pnhn
N0
	
+
α2N
2 (βnMn +
�
β−nM−n)
fE
+
α1βnMn
fE
≤ T̄ , ∀n ∈ N .
(21)
The reason is that the maximum delay function is less
than or equal to the maximum mining delay threshold
T̄ , which is equivalent to each value in the maximum
function (i.e., T
H/L
total,n and T
H/E
total,n) being less than or
equal to this threshold. Then, the original sub-game
optimization problem of user n for n ∈ N can be
transformed into
P2 : max
Mn,βn
un=(B + rsn) 2−h Mn
Mn +
�
M−n
− cβnMn
s.t. C1 − C3
C4�−1 :
α1 (1 − βn)Mn
fn
≤ T̄
C4�−2 :
S + aβnMn
W log2
�
1 + pnhn
N0
	
+
α2N
2 (βnMn +
�
β−nM−n)
fE
+
α1βnMn
fE
≤ T̄ . (22)
3) Variable Substitution
After the relaxation of the target variable Mn and con-
straint C4, the objective function of the optimization
problem P2 is a concave function. Then, constraints
of C1 − C3 and C4�−2 are convex sets with respect
to all target variables Mn and βn. However, constraint
C4�−1 is a concave set to the optimization variables
Mn and βn, so the transformed problem P2 is still a
non-convex problem, which is a difference of convex
programming problems. Here, we introduce an auxiliary
variable Zn = 1 − βn, which is the proportion of the
computation-intensive PoW mining tasks on the mobile
user n locally. Then, we reformulate constraint C4�−1 as
follows
C4��−1 :
α1ZnMn
fn
≤ T̄ , ∀n ∈ N . (23)
Combining the above target variable relaxation, constraint
relaxation, and the auxiliary variable Zn, the original
sub-game optimization problem of user n for n ∈ N
can be equivalent to
P3 : max
Mn,βn,Zn
un= (B + rsn) 2−h Mn
Mn +
�
M−n
−cβnMn
s.t. C1 − C3
C4��−1 :
α1ZnMn
fn
≤ T̄
C4�−2 :
S + aβnMn
W log2
�
1 + pnhn
N0
	
+
α2N
2 (βnMn +
�
β−nM−n)
fE
+
α1βnMn
fE
≤ T̄
C5 : Zn + βn = 1, (24)
where constraint C5 guarantees that the sum of the
proportion of the n-th user’s PoW mining tasks offloaded
to the MEC server and user n is 1. The original sub-game
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
8576 IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. 69, NO. 12, DECEMBER 2021
optimization problem P1 is ultimately equivalent to the
optimization problem P3.
Next, we will analyze the existence of NE in the proposed
non-cooperative game G =
�
N, (An)n∈N , (un)n∈N
�
, which
is described by the following theorem.
Theorem 1: The non-cooperative game G = {N, (An)n∈N ,
(un)n∈N } has at least one pure-strategy NE, i.e., the proba-
bility of the existence of NE is 1.
Proof: After the above target variable relaxation, the con-
straint relaxation, and the variable substitution, constraint
C5 is a closed set, constraint C3 is a convex set, and all
other constraints are linear with variables Mn, βn, and Zn.
Obviously, the utility function un (Mn, βn) is a continuous
function in convex sets of constraints C1−C5. Then, we take
the second-order derivatives of (24) with respect to Mn and βn
to obtain the Hessian matrix, which can be written as follows
Hn =
⎡
⎢⎢⎣
∂u2
n
∂M2
n
∂u2
n
∂Mnβn
∂u2
n
∂βnMn
∂u2
n
∂β2
n
⎤
⎥⎥⎦
=
⎡
⎣ (B + rsn) 2−h −2
�
M−n
(Mn +
�
M−n)3
−c
−c 0
⎤
⎦ � 0,
∀n ∈ N . (25)
Therefore, the objective function un is a concave function
with respect to variables Mn and βn, and problem P3 is
a convex optimization problem. Accordingly, the NE exists
(see [30]-Theorem 3.2) in the non-cooperative game G =�
N, (An)n∈N , (un)n∈N
�
. The proof is completed.
At this time, the sub-game optimization problem P3 is
a convex optimization problem of all optimization variables
Mn, βn, and Zn. Traditional optimization methods, such as
the interior point method and the standard gradient projection
method, can be used to find the n-th user’s sub-optimal
solution of P3. Based on Theorem 1, we propose an effective
algorithm, which achieves sub-optimal computing resource
allocation strategies for all mobile users as shown in the
following subsection.
B. Delay-Limited Computation Resource
Allocation Algorithm
In this subsection, we design an alternating iterative algo-
rithm to achieve the optimal numerical solutions of the
delay-limited computation resource allocation strategies for
all mobile users in the MEC-assisted mobile blockchain
networks. In the proposed alternating iterative algorithm,
a greedy rounding method is applied. Specifically, for each
sub-game optimization problem P3, the optimal solution
{M+
n , β+
n , Z+
n } is rounded down greedily to the integer solu-
tion
M∗
n,d, β
∗
n,d, Z
∗
n,d
�
and rounded up to another integer
solution
�
M∗
n,u, β∗
n,u, Z∗
n,u
�
. Then, we compare the revenues
of these two rounded integer solutions and take the one with
the larger revenue as the optimal integer solution. For the
detailed process, the proposed CRGR-based alternating iter-
ative algorithm to obtain NE of the proposed non-cooperative
game G is summarized in Algorithm 1.
Algorithm 1 CRGR-Based Alternating Iterative Algorithm of
the Non-Cooperative Game G
1: Input: the data (N, α1, α2, fE ,S , a,W, N0).
2: Initialization: Set (fn, hn) for all users, and initialize n = 1,
M−1, and β−1.
3: repeat
4: Fix other users’ nonce lengths and offloading ratios to the
MEC server M−n = (M1, M2, · · · , Mn−1, Mn+1, · · · , MN )
and β−n = (β1, β2, · · · , βn−1, βn+1, · · · , βN ), and then solve
sub-game optimization problem P3 using the interior point
method to obtain the optimal solution
�
M+
n , β+
n , Z+
n
�
.
5: Let M∗
n,d =
�
M+
n
�
, β∗
n,d =
�β+
n M+
n �
�M+
n � , and Z∗
n,d = 1− β∗
n,d.
6: Let M∗
n,u =
�
M+
n
�
, β∗
n,u =
�β+
n M+
n �
�M+
n � , and Z∗
n,u = 1− β∗
n,u.
7: if un
�
M∗
n,d, β∗
n,d, Z∗
n,d
� ≥ un
�
M∗
n,u, β∗
n,u, Z∗
n,u
�
then
8: The optimal solution is {M∗
n, β∗
n, Z∗
n} =�
M∗
n,d, β∗
n,d, Z∗
n,d
�
9: else
10: The optimal solution is {M∗
n, β∗
n, Z∗
n} =�
M∗
n,u, β∗
n,u, Z∗
n,u
�
11: end if
12: n← n + 1
13: Update other users’ sets M−n =(M1, M2, . . . ,M
∗
n−1,
Mn+1, . . . ,MN ) and β−n =
(β1, β2, · · · , β∗
n−1, βn+1, · · · , βN ), then go to line 3.
14: until the sub-optimal vectors M ∗ = {M∗
1 , M∗
2 , . . . , M∗
N}, β∗ =
(β∗
1 , β∗
2 , · · · , β∗
N ), and Z∗ = (Z∗
1 , Z∗
2 , · · · , Z∗
N ) are obtained.
The proposed algorithm is based on alternating iterations,
and its core idea is to achieve the optimal delay-limited
computation offloading strategy of an individual user in a
distributed method when other users’ computation resource
allocation strategies remain fixed. Since the NE of the
non-cooperative game G exists, each user can reach a rela-
tively stable state, and the proposed CRGR-based alternating
iterative algorithm is convergent. The computing pressure of
Algorithm 1 is primarily engrossed in steps 3 and 12, and the
other parts are only some basic algorithm operations. At step 3,
we need to calculate the optimal solution {M+
n , β+
n , Z+
n }
of user n for n ∈ N . Specifically, the computational com-
plexity of one iteration using the interior point method is
O �max
�
K3
1 , K2
1K2
��
[31], where K1 = 3 and K2 = 7
are the numbers of the optimization variable and constraint
of the sub-game optimization problem P3, respectively. As a
result, we can easily attain the computational complexity of
the entire Algorithm 1 as O �IIIO max
�
K3
1 , K2
1K2
��
, where
II represents the number of iterations required for the conver-
gence of the interior point method in the inner loop, which is
usually small, such as II ≤ 100. IO indicates the number of
iterations of the outer loop. Note that outer loop iterations are
sufficient to achieve a good convergence performance, which
will be proved in Section VI. The proposed alternating iterative
algorithm in Algorithm 1 can acquire the NE point of the
non-cooperative game G in the polynomial time.
V. TRANSMIT POWER ALLOCATION
In this section, we derive the optimal transmit power alloca-
tion for each user, which is based on the optimal delay-limited
computation resource allocation strategies.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
ZUO et al.: DELAY-LIMITED COMPUTATION OFFLOADING FOR MEC-ASSISTED MOBILE BLOCKCHAIN NETWORKS 8577
By using Algorithm 1, the proposed non-cooperative game
G =
�
N, (An)n∈N , (un)n∈N
�
can obtain NE, that is,
the delay-limited computation resource allocation of each user
can finally reach a stable state. We have guaranteed the maxi-
mum revenue of an individual user within a certain mining
delay range. Next, we consider how to save the transmit
power of each mobile user. In order to obtain the optimal
transmit power of an individual user, we give the following
theorem.
Theorem 2: Given the optimal delay-limited computing
resource allocation {M∗, β∗}, we can get the optimal transmit
power allocation for user n as
p∗n =
N0
hn
⎛
⎜⎜⎜⎝2
S+aβ∗
nM∗
n
W
�
��T̄−
α2N2(β∗
nM∗
n+
�
β∗−n
M∗−n)
fE
− α1β∗
nM∗
n
fE
�
��
− 1
⎞
⎟⎟⎟⎠ ,
(26)
where β∗
−n and M∗
−n are the optimal others’ offloading ratio
and selected nonce length, respectively.
�
β∗
−nM∗
−n is the
sum of the optimal nonce lengths, which are offloaded to the
MEC server for all mobile users except user n.
Proof: The NE of the non-cooperative game G is obtained
through the proposed CRGR-based alternating iterative algo-
rithm. Given the optimal delay-limited computing resource
allocation {M∗, β∗}, the mining delay of the MEC server
meets the maximum delay requirement, which means the
following inequality holds
S + aβ∗
nM∗
n
W log2
�
1 + pnhn
N0
	 +
α2N
2
�
β∗
nM∗
n +
�
β∗
−nM∗
−n
�
fE
+
α1β
∗
nM∗
n
fE
≤ T̄ , ∀n ∈ N . (27)
After some simple operations on (27), we can easily obtain
the transmit power of user n as
pn ≥ N0
hn
⎛
⎜⎜⎜⎝2
S+aβ∗
nM∗
n
W
�
��T̄−
α2N2(β∗
nM∗
n+
�
β∗−n
M∗−n)
fE
− α1β∗
nM∗
n
fE
�
��
− 1
⎞
⎟⎟⎟⎠ .
(28)
In order to save the transmit power as much as possible,
we can obtain the optimal or minimum individual transmit
power as shown in (26). This completes the proof.
Note that the result in (26) can achieve a closed-form
expression of the optimal transmit power of the individual
mobile user, when the delay-limited computation offloading
strategies for all mobile users are given. Based on Theorem 2,
we investigate the relationship between the optimal individual
transmit power and its own optimal computation resource
allocation strategy in the following proposition.
Proposition 1: The optimal individual transmit power p∗n
increases monotonically with M∗
n and β∗
n.
Proof: Firstly, we analyze the relationship between p∗n and
M∗
n and we take the first-order derivative of (26) with respect
to Mn as follows
∂p∗n
∂M∗
n
=
N0 ln 2
�
aβ∗
nφ+(S + aβ∗
nM∗
n)
�
α2N2β∗
n
fE
+ α1β∗
n
fE
		
hnWφ2
· 2
S+aβ∗
nM∗
n
Wφ , ∀n ∈ N , (29)
where
φ = T̄ − α2N
2
�
β∗
nM∗
n +
�
β∗
−nM∗
−n
�
fE
− α1β
∗
nM∗
n
fE
. (30)
Meanwhile, the optimal computation resource allocation for
user n satisfies the constraint C4� − 2 in problem P3, that is,
the following inequality holds
T̄ − α2N
2
�
β∗
nM∗
n +
�
β∗
−nM∗
−n
�
fE
− α1β
∗
nM∗
n
fE
≥ S + aβ∗
nM∗
n
W log2
�
1 + pnhn
N0
	 ≥ 0, ∀n ∈ N . (31)
As such, we proved ∂p∗
n
∂M∗
n
> 0, which means that p∗n
increases monotonically with M∗
n. Similarly, we can get
∂p∗
n
∂β∗
n
> 0, which also proves p∗n increases monotonically with
β∗
n. The proof of Proposition 1 is now completed.
According to Proposition 1, the optimal individual transmit
power of user n needs to be enhanced when its own optimal
computation resource allocation A∗
n = {M∗
n, β∗
n} raises. That
is, the larger number of selected nonces and offloading ratio
of user n to the MEC server, the more individual transmit
power should be consumed. Next, we examine the relationship
between the optimal individual transmit power and other users’
computation resource allocation strategies in the following
proposition.
Proposition 2: The optimal individual transmit power p∗n
also increases monotonically with
�
β∗
−nM∗
−n.
Proof: From the closed-form expression (26), we can study
the relationship between p∗n and
�
β∗−nM∗−n and take the
first-order derivative of (26) with respect to
�
β∗
−nM∗
−n as
follows
∂p∗n
∂
��
β∗−nM∗−n
� =
N0 ln 2 (S + aβ∗
nM∗
n) α2N
2
hnfEWφ2
· 2S+aβ∗
nM∗
n
Wφ , ∀n ∈ N . (32)
According to the proof of Proposition 1, we can easily
get φ ≥ 0. On that account, we proved ∂p∗
n
∂(� β∗
−nM∗
−n) >
0, which indicates that p∗n also increases monotonically
with
�
β∗
−nM∗
−n. The proof of Proposition 2 is finished
completely.
Here,
�
β∗
−nM∗
−n is the sum of the optimal nonce lengths
offloaded to the MEC server for all users except for user n.
From Proposition 2, we note that the n-th user’s optimal
transmit power also elevates when other users’ total number of
nonces offloaded to the MEC server raises. The main reason
for this phenomenon is that the increment of other users’
offloading tasks to the MEC server may stimulate more com-
putation offloading of user n to the MEC server. Combined
with Proposition 1, we conclude that the individual transmit
power of user n will extend accordingly with the optimal
computation resource allocation strategies for all mobile users.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
8578 IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. 69, NO. 12, DECEMBER 2021
TABLE II
SIMULATION PARAMETERS
VI. NUMERICAL RESULTS
In the numerical results, we first show the individual delay
and revenue versus the number of nonces. Then, we verify the
convergence of the proposed CRGR-based alternating iterative
algorithm and compare the average nonce length, revenue, and
delay of the proposed algorithm with those of two baseline
schemes. We further present the impact of different parameters
on the system performance of the proposed MEC-assisted
mobile blockchain networks. Most importantly, we evaluate
the delay-limited computation resource management and the
optimal individual transmit power in the proposed mobile
blockchain networks with the need of the MEC server. The
main simulation parameters are listed in TABLE II.
A. Individual Delay and Revenue
Fig. 2 plots the individual delay and revenue of user 1 versus
the number of nonces. The settings of other parameters are
consistent with Table II. Here, we only choose two mobile
users in the MEC-assisted mobile blockchain network. Given
the computation resource allocation of user 2, we compare
the delay and revenue of user 1 with the number of nonces in
three computation offloading schemes. From Fig. 2(a), we can
see that the individual delay extends with the number of
nonces. Besides, the individual delay in the local computation
scheme is two to three orders of magnitude greater than that of
the full computation offloading scheme. The individual delay
in the hybrid computation offloading scheme is between the
other two schemes. As shown in Fig. 2(b), the individual
revenue is a concave function of the number of nonces, and
the revenue of the local scheme is higher than that of the
other two computation offloading schemes. From these two
figures, we can conclude that more individual revenue results
in the increased delay. Therefore, there is a trade-off problem
between the individual delay and revenue.
B. Convergence of Proposed Alternating Iterative Algorithm
First of all, we present the convergence performance
of the proposed CRGR-based alternating iterative algorithm
described in Algorithm 1. For ease of illustration, we consider
a simple example with 10 users in this MEC-assisted mobile
blockchain network. Without loss of generality, we take user 1,
user 2, and user 3 as examples to verify the convergence
performance. CPU frequencies of all users and the MEC
server are set as f1 = · · · = f10 = 0.5 GHz and fE =
100 GHz, respectively. All users’ original transmit power is
0.1W and the block sizes of all users are s1 = s4 = · · · =
s10 = 1000, s2 = 2000, and s3 = 3000. We set initial
vectors M−1= [2000, 2000, · · · , 2000]1×(N−1) and β−1 =
[0.8, 0.8 · · ·0.8]1×(N−1).
In Fig. 3, we plot the individual nonce length, the offload-
ing ratio to the MEC server, and the revenue versus the
number of iterations to depict the convergence of the outer
loop of Algorithm 1 in Fig. 3(a), Fig. 3(b), and Fig. 3(c),
respectively. Note that the inner loop of Algorithm 1 always
converges, and the interior-point method used for the inner
loop usually requires only a few iterations to converge, such as
within 100 iterations [34]. According to Fig. 3, we can observe
that the individual nonce length, the offloading ratio to the
MEC server, and the revenue of Algorithm 1 are all unstable
in the first 6 iterations for all users. As shown in Fig. 3,
when the iteration number is larger than 6, the proposed
CRGR-based alternating iterative algorithm reaches a stable
state. We can also observe that when the computing resource
allocation strategies including nonce lengths and offloading
ratios of all users tend to stabilize in Fig. 3(a) and Fig. 3(b),
the individual revenue of all users will converge in Fig. 3(c).
This is because the individual revenue is greatly affected by
the computing resource allocation strategies in the proposed
MEC-assisted mobile blockchain networks. Hence, we can see
that Algorithm 1 has a significantly fast convergence rate and
the number of iterations never exceeds 6 when N = 10. This
result also shows that the proposed Algorithm 1 can achieve
the NE of the non-cooperative game G in the polynomial time.
C. Comparison of Proposed Algorithm and Baselines
In this subsection, we compare our proposed Algorithm 1
with the two baseline schemes [10], [35] in terms of average
nonce length, average revenue, and average delay for each
user. Specifically, the mining tasks of users in Baseline 1 are
only executed locally. Baseline 2 executes all mining tasks of
users at the MEC server.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
ZUO et al.: DELAY-LIMITED COMPUTATION OFFLOADING FOR MEC-ASSISTED MOBILE BLOCKCHAIN NETWORKS 8579
Fig. 3. Convergence performance of the proposed CRGR-based alternating iterative algorithm. CPU frequencies of all users and the MEC server are
f1 = · · · = f10 = 0.5 GHz and fE = 100 GHz. The block sizes of all users are s1 = s4 = · · · = s10 = 1000, s1 = 2000, and s3 = 3000, respectively.
(a) The individual nonce length versus the number of iterations. (b) The offloading ratio to the MEC server versus the number of iterations. (c) The individual
revenue versus the number of iterations.
Fig. 4. Comparison of Algorithm 1 with Baseline 1 and Baseline 2. CPU frequencies of all users and the MEC server are f1 = f2 = . . . = fN = 0.5 GHz
and fE = 100 GHz. The block sizes of all users are s1 = s2 = . . . = sN = 2000. (a) The average nonce length versus the number of users. (b) The
average revenue for each user versus the number of users. (c) The average delay for each user versus the number of users.
Fig. 4 illustrates the comparison of Algorithm 1 with
Baseline 1 and Baseline 2 in terms of average nonce length,
average revenue, and average delay for each user. From
Fig. 4(a), we can see that the average nonce length of
Algorithm 1 is higher than the two baselines, so the mining
success probability of users using Algorithm 1 will increase.
Fig. 4(a) shows that the average revenue of Baseline 1 is the
highest, because there is no need to pay the hash computing
service fee to the MEC server. Moreover, the average revenue
of Algorithm 1 is higher than that of Baseline 2. As shown
in Fig. 4(a), the average delay of Baseline 1 is the highest,
which is close to or equal to the threshold of the maximum
mining delay. In addition, the average delay of Baseline 2 is
lower than that of Algorithm 1. Combined with Fig. 4(a) and
Fig. 4(a), although the average revenue of Baseline 1 is the
largest, the average delay is also the highest and the local com-
puting resources of users are also limited. Baseline 2 has the
lowest average delay, but the average revenue is also the low-
est. Considering various aspects of the mining success proba-
bility, the average revenue, and the average delay, the proposed
Algorithm 1 has advantages compared with the two baselines
in terms of utilizing computational resources effectively. The
numerical results also show that under a certain delay limit,
as the number of users increases, the expected revenue of each
user will become smaller and smaller.
D. Impacts of Different Parameters
In this subsection, we chiefly examine the effects of several
parameters, including the number of mobile users, the CPU
frequency of an individual user, the CPU frequency of the
MEC server, and the block size on the delay-limited com-
putation offloading and individual transmit power resource
allocation strategies.
1) Impacts of the Number of Users & CPU Frequency
of the MEC Server: Fig. 5 discusses the effects of the
number of users and CPU frequency of the MEC server on
the average nonce length, the offloading ratio to the MEC
server, the revenue, and the mining delay of the MEC server
in Fig. 5(a), Fig. 5(a), Fig. 5(a), and Fig. 5(a), respectively.
Here, we assume that CPU frequencies and the block size
of all users are 0.5 GHz and 2000. We take the CPU
frequency of the MEC server as 50 GHz, 100 GHz, and
150 GHz, respectively. Observing Fig. 5, we find that the
average computation resource allocation (i.e. the nonce length
and the offloading ratio), the revenue, and the mining delay
of the MEC server all decrease with the increment of N .
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
8580 IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. 69, NO. 12, DECEMBER 2021
Fig. 5. The effect of the number of users and CPU frequency of the MEC server. CPU frequencies and the block sizes of all users are f1 = f2 = . . . =
fN = 0.5 GHz and s1 = s2 = . . . = sN = 2000. CPU frequency of the MEC server takes 50 GHz, 100 GHz, and 150 GHz, respectively. (a) The average
nonce length versus the number of users. (b) The average offloading ratio to the MEC server versus the number of users. (c) The average revenue versus the
number of users. (d) The average run time for the MEC server versus the number of users.
Meanwhile, the average revenue of all users approaches stabil-
ity with the continuous growth of N . The reason is that with
more users in the MEC-aided mobile blockchain networks,
the mining competition between users becomes more fierce,
and the corresponding allocated computation resources reduce.
The mining computation task assigned to the MEC server
decreases and the delay cuts down accordingly.
Fig. 5(a) shows that the decrease of the average revenue is
getting slower, when the number of users is larger. Fig. 5(a)
indicates an obvious result that the mining delay of the MEC
server decreases with the increment of fE . We can also
observe from Fig. 5(a) that the decline of the mining delay
is slowing down with the increase of fE . For example, when
N = 2, the mining delay drops from 106.16s at fE = 50 GHz
to 53.08s at fE = 100 GHz. We can easily get that the
mining delay is going to drop by 53.08s when fE increases
from 50 GHz to 100 GHz. According to Fig. 5(a), the mining
delay changes from 53.08s at fE = 100 GHz to 35.39s at
fE = 150 GHz. Then, we can obtain that the mining delay is
going to decrease by 17.69s when fE increases from 100 GHz
to 150 GHz. From Fig. 5(a)-5(a), we can observe that the
computation resource allocation and the revenue strategies are
independent of the CPU frequency of the MEC server. The
phenomenon is relevant to the proposed MEC-assisted mobile
blockchain system model, and we consider only one MEC
server, which has no competition with other MEC servers.
Thus, the variance of fE does not result in the change of
the computation resource allocation and the revenue of the
proposed MEC-assisted mobile blockchain networks.
2) Impact of CPU Frequency of an Individual User: Fig. 6
shows the effects of the CPU frequency of an individual
user on the computation resource management, the revenue,
and the transmit power for each user, where the number of
users is set to be N = 3, CPU frequency of the MEC
server is 100 GHz, and the block size of all users is
s1 = s2 = s3 = 2000. As shown in Fig. 6(a), the nonce
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
ZUO et al.: DELAY-LIMITED COMPUTATION OFFLOADING FOR MEC-ASSISTED MOBILE BLOCKCHAIN NETWORKS 8581
Fig. 6. The effect of CPU frequency of an individual user. Case 1: CPU frequencies of all three users and the MEC server are f1 = f2 = f3 = 0.5 GHz
and fE = 100 GHz, respectively. The block size of all three users is s1 = s2 = s3 = 2000; Case 2: CPU frequencies of the MEC server and the block size
are fE = 100 GHz and s1 = s2 = s3 = 2000. CPU frequencies of three users are f1 = 0.2 GHz, f2 = 0.5 GHz, and f3 = 0.8 GHz, respectively. (a) The
individual nonce length in Case 1 and Case 2. (b) The individual offloading ratio to the MEC server in Case 1 and Case 2. (c) The individual revenue in
Case 1 and Case 2. (d) The individual transmit power in Case 1 and Case 2.
lengths in Case 1 and Case 2 are the same for all three
users, which means that the nonce length selection strategy
is independent of the CPU frequency of an individual user.
However, under the same conditions, the nonce length strategy
of users 1 and user 3 is slightly less than that of user 2. This
shows that the proposed algorithm cannot provide a completely
fair computation resource allocation, which may be impacted
by the order of users running Algorithm 1. Because users
in the proposed MEC-assisted mobile blockchain networks
are in a non-cooperative competitive relationship with each
other. When the first or last user enters this system to offload
computing requests to the MEC server, other users may
know their private information, such as orders and offloading
requests. Therefore, users in the middle order have relatively
less privacy during the computation offloading process, which
leads to a greater nonce length selection strategy for these
users.
The offloading ratio to the MEC server declines when
the user’s CPU frequency enhances in Fig. 6(a). Within the
maximum mining delay range, in order to save the cost
charged by the MEC server for nonce hash computing services
of PoW mining tasks, users choose more mining tasks to cal-
culate locally when the user’s local computing power becomes
stronger. From Fig. 6(a), we can see that the individual revenue
raises as the individual user’s CPU frequency increases. For
example, the individual revenue of user 1 drops from 2.88 $
to 2.70 $ when the CPU frequency of user 1 decreases from
0.5 GHz to 0.2 GHz. On the contrary, the individual revenue
of user 3 rises from 2.90 $ to 3.08 $ when the CPU frequency
of user 3 increases from 0.5 GHz to 0.8 GHz. Combining
Fig. 6(a) and 6(a), the greater CPU frequency of an individual
user, the smaller offloading ratio to the MEC server, the lower
fee paid to the MEC server, and the corresponding individual
revenue becomes larger. From Fig. 6(a), the individual transmit
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
8582 IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. 69, NO. 12, DECEMBER 2021
Fig. 7. The effect of the block size of an individual user. Case 1: CPU frequencies of all three users and the MEC server are f1 = f2 = f3 = 0.5 GHz
and fE = 100 GHz, respectively. The block size of all three users is s1 = s2 = s3 = 2000; Case 3: CPU frequencies of all three users and the MEC server
are f1 = f2 = f3 = 0.5 GHz and fE = 100 GHz, respectively. The block sizes of three users are s1 = 1000, s2 = 2000, and s3 = 3000, respectively.
(a) The individual nonce length in Case 1 and Case 3. (b) The individual offloading ratio to the MEC server in Case 1 and Case 3. (c) The individual revenue
in Case 1 and Case 3. (d) The individual transmit power in Case 1 and Case 3.
power declines when the CPU frequency of an individual
user increases. Combined with Fig. 6(a), the fewer PoW
mining tasks need to be offloaded to the MEC server and the
corresponding transmit power becomes smaller.
3) Impact of Block Size: Fig. 7 plots the effect of block size
on the computation resource allocation, the revenue and the
transmit power for each user in Fig. 7(a), Fig. 7(a), Fig. 7(a),
and Fig. 7(a), respectively. We assume that the number of users
is N = 3, CPU frequency of the MEC server and all users
are fE = 100 GHz and f1 = f2 = f3 = 0.5 GHz. As shown
in Fig. 7, we can see that the nonce length, the offloading
ratio, the individual revenue, and the transmit power all grow
with the enlargement of the block size. This is because as
the block size becomes larger, the transaction fee charged for
successfully mining a new block increases, which inspires
users to mine a new block and makes them choose more
nonces in order to win the mining competition. As shown
in Fig. 7(a), for example, the nonce length of user 1 drops
from 5188 to 4266 when its block size decreases from 2000 to
1000. Oppositely, the nonce length of user 3 increases from
5232 to 6037 with the increasing block size of user 3 from
2000 to 3000. Within a certain mining delay range, when the
PoW mining task has become larger in Fig. 7(a), the offloading
proportion to the MEC server grows in Fig. 7(a), and the
corresponding transmit power will also raise in Fig. 7(a). The
individual revenue increases in Fig. 7(a) with the augmentation
of the block size. The reason is that when the block size
becomes larger, the increasing transaction fee is greater than
the expense paid to the MEC server for hash computing
services.
VII. CONCLUSION
In this paper, we considered a novel MEC-assisted mobile
blockchain network, where plenty of PoW mining tasks can
be offloaded to the MEC server. In this network, we formu-
lated the individual computation resource distribution strategy
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
ZUO et al.: DELAY-LIMITED COMPUTATION OFFLOADING FOR MEC-ASSISTED MOBILE BLOCKCHAIN NETWORKS 8583
as a non-cooperative game. The existence of NE was also
proved in the non-cooperative game. To obtain the optimal
delay-limited computation resource allocation strategies for all
users, we designed a CRGR-based alternating iterative algo-
rithm. We also derived the closed-form expression of the opti-
mal transmit power for an individual user within the maximum
mining delay range. We can efficiently achieve sub-optimal
delay-limited computation offloading strategies for all users by
using the proposed algorithm. The individual transmit power
extends accordingly with the optimal computation resource
allocation strategies of all users. Numerical results indicate that
the proposed iterative algorithm has a fast convergence rate.
Compared with the two baselines, the proposed algorithm can
effectively utilize computing resources. Different parameters,
such as the number of users, the CPU frequency, and the
block size, have great influences on the system performance
of the delay-limited mobile blockchain networks. The analysis
and optimization results provide valuable design insights for
the practical delay-limited mobile blockchain systems. In our
further work, we will use the cluster cooperation technique
[26] to further study the impact of mobile blockchain networks
assisted by multiple MEC servers on computation offload-
ing and block storage. The proposed MEC-assisted mobile
blockchain network can also be extended to many important
scenarios, such as UAV [36] and vehicle [37], [38] networks.
REFERENCES
[1] S. Nakamoto, Bitcoin: A Peer-to-Peer Electronic Cash System.
May 2008. [Online]. Available: https://bitcoin.org/bitcoin.pdf
[2] M. B. Mollah et al., “Blockchain for the internet of vehicles towards
intelligent transportation systems: A survey,” IEEE Internet Things J.,
vol. 8, no. 6, pp. 4157–4185, Mar. 2021.
[3] N. Ul Hassan, C. Yuen, and D. Niyato, “Blockchain technolo-
gies for smart energy systems: Fundamentals, challenges, and solu-
tions,” IEEE Ind. Electron. Mag., vol. 13, no. 4, pp. 106–118,
Dec. 2019.
[4] D. C. Nguyen, P. N. Pathirana, M. Ding, and A. Seneviratne,
“Blockchain for 5G and beyond networks: A state of the art survey,”
J. Netw. Comput. Appl., vol. 166, Sep. 2020, Art. no. 102693.
[5] P. Danzi, A. E. Kalor, C. Stefanovic, and P. Popovski, “Delay and
communication tradeoffs for blockchain systems with lightweight IoT
clients,” IEEE Internet Things J., vol. 6, no. 2, pp. 2354–2365,
Apr. 2019.
[6] S. Bayhan, A. Zubow, P. Gawlowicz, and A. Wolisz, “Smart contracts
for spectrum sensing as a service,” IEEE Trans. Cogn. Commun. Netw.,
vol. 5, no. 3, pp. 648–660, Sep. 2019.
[7] A. E. Gamal and H. E. Gamal, “A single coin monetary mechanism
for distributed cooperative interference management,” IEEE Wireless
Commun. Lett., vol. 8, no. 3, pp. 757–760, Jun. 2019.
[8] J. Feng, F. R. Yu, Q. Pei, J. Du, and L. Zhu, “Joint optimization of radio
and computational resources allocation in blockchain-enabled mobile
edge computing systems,” IEEE Trans. Wireless Commun., vol. 19, no. 6,
pp. 4321–4334, Jun. 2020.
[9] P. Mach and Z. Becvar, “Mobile edge computing: A survey on architec-
ture and computation offloading,” IIEEE Commun. Surveys Tuts., vol. 19,
no. 3, pp. 1628–1656, 3rd Quart., 2017.
[10] W. Wen, Y. Cui, F. Zheng, S. Jin, and Y. Jiang, “Enhancing performance
of random caching in large-scale heterogeneous wireless networks with
random discontinuous transmission,” IEEE Trans. Commun., vol. 66,
no. 12, pp. 6287–6303, Dec. 2018.
[11] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for blockchain
networks,” IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600,
Jun. 2019.
[12] Y. Jiao, P. Wang, D. Niyato, and K. Suankaewmanee, “Auction
mechanisms in cloud/fog computing resource allocation for public
blockchain networks,” IEEE Trans. Parallel Distrib. Syst., vol. 30, no. 9,
pp. 1975–1989, Sep. 2019.
[13] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Computation
offloading and content caching in wireless blockchain networks with
mobile edge computing,” IEEE Trans. Veh. Technol., vol. 67, no. 11,
pp. 11008–11021, Nov. 2018.
[14] G. Qiao, S. Leng, H. Chai, A. Asadi, and Y. Zhang, “Blockchain
empowered resource trading in mobile edge computing and networks,”
in Proc. IEEE Int. Conf. Commun. (ICC), Shanghai, China, May 2019,
pp. 1–6.
[15] V. Sharma, I. You, D. N. K. Jayakody, D. G. Reina, and K.-K.-R. Choo,
“Neural-blockchain-based ultrareliable caching for edge-enabled UAV
networks,” IEEE Trans. Ind. Informat., vol. 15, no. 10, pp. 5723–5736,
Oct. 2019.
[16] D. Lin, S. Hu, Y. Gao, and Y. Tang, “Optimizing MEC networks for
healthcare applications in 5G communications with the authenticity of
users’ priorities,” IEEE Access, vol. 7, pp. 88592–88600, Jun. 2019.
[17] D. C. Nguyen, P. N. Pathirana, M. Ding, and A. Seneviratne, “Secure
computation offloading in blockchain based IoT networks with deep
reinforcement learning,” 2019, arXiv:1908.07466. [Online]. Available:
http://arxiv.org/abs/1908.07466
[18] D. C. Nguyen, P. N. Pathirana, M. Ding, and A. Seneviratne, “Privacy-
preserved task offloading in mobile blockchain with deep reinforce-
ment learning,” IEEE Trans. Netw. Service Manage., vol. 17, no. 4,
pp. 2536–2549, Dec. 2020.
[19] Y. Zhao et al., “Privacy-preserving blockchain-based federated learning
for IoT devices,” IEEE Internet Things J., vol. 8, no. 3, pp. 1817–1829,
Feb. 2021.
[20] S. R. Pokhrel and J. Choi, “Federated learning with blockchain for
autonomous vehicles: Analysis and design challenges,” IEEE Trans.
Commun., vol. 68, no. 8, pp. 4734–4746, Aug. 2020.
[21] Y. Zuo, S. Jin, and S. Zhang, “Computation offloading in untrusted
MEC-aided mobile blockchain IoT systems,” IEEE Trans. Wireless Com-
mun., early access, Jun. 30, 2021, doi: 10.1109/TWC.2021.3091861.
[22] Y. Zuo, S. Zhang, Y. Han, and S. Jin, “Computation resource allo-
cation in mobile blockchain-enabled edge computing networks,” in
Proc. IEEE/CIC Int. Conf. Commun. China (ICCC), Chongqing, China,
Aug. 2020, pp. 617–622.
[23] Z. Zhao et al., “A novel framework of three-hierarchical offloading
optimization for MEC in industrial IoT networks,” IEEE Trans. Ind.
Informat., vol. 16, no. 8, pp. 5424–5434, Aug. 2020.
[24] S. A. Hoseinitabatabei, A. Mohamed, M. Hassanpour, and R. Tafazolli,
“The power of mobility prediction in reducing idle-state signaling in
cellular systems: A revisit to 4G mobility management,” IEEE Trans.
Wireless Commun., vol. 19, no. 5, pp. 3346–3360, May 2020.
[25] Y. Zuo, S. Jin, S. Zhang, and Y. Zhang, “Blockchain storage and
computation offloading for cooperative mobile-edge computing,” IEEE
Internet Things J., vol. 8, no. 11, pp. 9084–9098, Jun. 2021.
[26] E. Katranaras, M. A. Imran, M. Dianati, and R. Tafazolli, “Green inter-
cluster interference management in uplink of multi-cell processing sys-
tems,” IEEE Trans. Wireless Commun., vol. 13, no. 12, pp. 6580–6592,
Dec. 2014.
[27] W. Wang et al., “A survey on consensus mechanisms and mining
strategy management in blockchain networks,” IEEE Access, vol. 7,
pp. 22328–22370, Jan. 2019.
[28] Q. Pham, T. LeAnh, N. H. Tran, B. J. Park, and C. S. Hong, “Decen-
tralized computation offloading and resource allocation for mobile-
edge computing: A matching game approach,” IEEE Access, vol. 6,
pp. 75868–75885, Nov. 2018.
[29] T. X. Tran and D. Pompili, “Joint task offloading and resource allocation
for multi-server mobile-edge computing networks,” IEEE Trans. Veh.
Technol., vol. 68, no. 1, pp. 856–868, Jan. 2019.
[30] Z. Han, D. Niyato, W. Saad, T. Başar, and A. Hjørungnes, Game
Theory in Wireless and Communication Networks: Theory, Models, and
Applications. Cambridge, U.K.: Cambridge Univ. Press, 2012.
[31] W. Wen, Y. Fu, T. Q. S. Quek, F.-C. Zheng, and S. Jin, “Joint
uplink/downlink sub-channel, bit and time allocation for multi-access
edge computing,” IEEE Commun. Lett., vol. 23, no. 10, pp. 1811–1815,
Oct. 2019.
[32] W. Wen, Y. Cui, T. Q. S. Quek, F.-C. Zheng, and S. Jin, “Joint optimal
software caching, computation offloading and communications resource
allocation for mobile edge computing,” IEEE Trans. Veh. Technol.,
vol. 69, no. 7, pp. 7879–7894, Jul. 2020.
[33] C. You, Y. Zeng, R. Zhang, and K. Huang, “Asynchronous mobile-edge
computation offloading: Energy-efficient resource management,” IEEE
Trans. Wireless Commun., vol. 17, no. 11, pp. 7590–7605, Nov. 2018.
[34] S. Boyd and L. Vandenberghe, Convex Optimization. Cambridge, U.K.:
Cambridge Univ. Press, 2004.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TWC.2021.3091861
8584 IEEE TRANSACTIONS ON COMMUNICATIONS, VOL. 69, NO. 12, DECEMBER 2021
[35] Y. Liu, F. R. Yu, X. Li, H. Ji, and V. C. M. Leung, “Decentralized
resource allocation for video transcoding and delivery in blockchain-
based system with mobile edge computing,” IEEE Trans. Veh. Technol.,
vol. 68, no. 11, pp. 11169–11185, Nov. 2019.
[36] H. Guo and J. Liu, “UAV-enhanced intelligent offloading for Internet
of Things at the edge,” IEEE Trans. Ind. Informat., vol. 16, no. 4,
pp. 2737–2746, Apr. 2020.
[37] H. Guo, J. Liu, J. Ren, and Y. Zhang, “Intelligent task offloading in
vehicular edge computing networks,” IEEE Wireless Commun., vol. 27,
no. 4, pp. 126–132, Aug. 2020.
[38] J. Liu, H. Guo, J. Xiong, N. Kato, J. Zhang, and Y. Zhang, “Smart
and resilient EV charging in SDN-enhanced vehicular edge computing
networks,” IEEE J. Sel. Areas Commun., vol. 38, no. 1, pp. 217–228,
Jan. 2020.
Yiping Zuo received the B.S. degree in electronic
information science and technology from Huaiyin
Normal University, Huaian, China, in 2015, and
the M.S. degree in communication and informa-
tion systems from Nanjing University of Posts and
Telecommunications, Nanjing, China, in 2018. She
is currently pursuing the Ph.D. degree in informa-
tion and communications engineering with Southeast
University, Nanjing. Her current research interests
include blockchain, mobile edge computing, and
next generation cellular networks.
Shi Jin (Senior Member, IEEE) received the B.S.
degree in communications engineering from Guilin
University of Electronic Technology, Guilin, China,
in 1996, the M.S. degree from Nanjing University
of Posts and Telecommunications, Nanjing, China,
in 2003, and the Ph.D. degree in information
and communications engineering from Southeast
University, Nanjing, in 2007. From June 2007 to
October 2009, he was a Research Fellow with
University College London, Adastral Park Research
Campus, London, U.K. He is currently with the Fac-
ulty of the National Mobile Communications Research Laboratory, Southeast
University. His research interests include space time wireless communications,
random matrix theory, and information theory. He and his coauthors have been
awarded the 2011 IEEE Communications Society Stephen O. Rice Prize Paper
Award in the field of communication theory and the 2010 Young Author Best
Paper Award by the IEEE Signal Processing Society. He served as an Asso-
ciate Editor for IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS,
IEEE COMMUNICATIONS LETTERS, and IET Communications.
Shengli Zhang (Senior Member, IEEE) received
the B.Eng. degree in electronic engineering and
the M.Eng. degree in communication and infor-
mation engineering from the University of Science
and Technology of China (USTC), Hefei, China,
in 2002 and 2005, respectively, and the Ph.D. degree
from the Department of Information Engineering,
The Chinese University of Hong Kong (CUHK),
in 2008. After that, he joined the Communica-
tion Engineering Department, Shenzhen University,
where he is currently a Full Professor. From
March 2014 to March 2015, he was a Visiting Associate Professor at
Stanford University. He is the pioneer of physical-layer network coding
(PNC). He has published over 20 IEEE top journal articles and ACM top
conference papers, including IEEE JOURNAL ON SELECTED AREAS IN COM-
MUNICATIONS, IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS,
IEEE TRANSACTIONS ON MOBILE COMPUTING, IEEE TRANSACTIONS
ON COMMUNICATIONS, and ACM MobiCom. His research interests include
blockchain, physical-layer network coding, and wireless networks. He served
as a TPC member for several IEEE conferences. He served as an Editor
for IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, IEEE WIRELESS
COMMUNICATIONS LETTERS, and IET Communications.
Yu Han (Member, IEEE) received the B.S. degree in
communications engineering from Hangzhou Dianzi
University, Hangzhou, China, in 2012, and the
M.S. and Ph.D. degrees in information and com-
munications engineering from Southeast University,
Nanjing, China, in 2015 and 2020, respectively. She
is currently a Post-Doctoral Fellow with Singapore
University of Technology and Design, Singapore.
Her research interests include massive MIMO and
reconfigurable intelligent surface.
Kai-Kit Wong (Fellow, IEEE) received the B.Eng.,
M.Phil., and Ph.D. degrees in electrical and elec-
tronic engineering from The Hong Kong University
of Science and Technology, Hong Kong, in 1996,
1998, and 2001, respectively. After graduation,
he took up an academic and research positions at
The University of Hong Kong, Lucent Technologies,
Bell-Labs, Holmdel, the Smart Antennas Research
Group of Stanford University, and the University of
Hull, U.K. He is currently the Chair in wireless com-
munications with the Department of Electronic and
Electrical Engineering, University College London, U.K. His current research
centers around 5G and beyond mobile communications. He was a co-recipient
of the 2013 IEEE Signal Processing Letters Best Paper Award, the 2000 IEEE
VTS Japan Chapter Award at IEEE Vehicular Technology Conference, Japan,
in 2000, and a few other international best paper awards. He is a fellow of
IET. He is on the editorial board of several international journals. He has
been the Editor-in-Chief of IEEE WIRELESS COMMUNICATIONS LETTERS
since 2020.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:36:28 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Black & White)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Tags
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 524288
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments true
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /AdobeArabic-Bold
    /AdobeArabic-BoldItalic
    /AdobeArabic-Italic
    /AdobeArabic-Regular
    /AdobeHebrew-Bold
    /AdobeHebrew-BoldItalic
    /AdobeHebrew-Italic
    /AdobeHebrew-Regular
    /AdobeHeitiStd-Regular
    /AdobeMingStd-Light
    /AdobeMyungjoStd-Medium
    /AdobePiStd
    /AdobeSansMM
    /AdobeSerifMM
    /AdobeSongStd-Light
    /AdobeThai-Bold
    /AdobeThai-BoldItalic
    /AdobeThai-Italic
    /AdobeThai-Regular
    /ArborText
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /BellGothicStd-Black
    /BellGothicStd-Bold
    /BellGothicStd-Light
    /ComicSansMS
    /ComicSansMS-Bold
    /Courier
    /Courier-Bold
    /Courier-BoldOblique
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /Courier-Oblique
    /CourierStd
    /CourierStd-Bold
    /CourierStd-BoldOblique
    /CourierStd-Oblique
    /EstrangeloEdessa
    /EuroSig
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Helvetica
    /Helvetica-Bold
    /Helvetica-BoldOblique
    /Helvetica-Oblique
    /Impact
    /KozGoPr6N-Medium
    /KozGoProVI-Medium
    /KozMinPr6N-Regular
    /KozMinProVI-Regular
    /Latha
    /LetterGothicStd
    /LetterGothicStd-Bold
    /LetterGothicStd-BoldSlanted
    /LetterGothicStd-Slanted
    /LucidaConsole
    /LucidaSans-Typewriter
    /LucidaSans-TypewriterBold
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MinionPro-Bold
    /MinionPro-BoldIt
    /MinionPro-It
    /MinionPro-Regular
    /MinionPro-Semibold
    /MinionPro-SemiboldIt
    /MVBoli
    /MyriadPro-Black
    /MyriadPro-BlackIt
    /MyriadPro-Bold
    /MyriadPro-BoldIt
    /MyriadPro-It
    /MyriadPro-Light
    /MyriadPro-LightIt
    /MyriadPro-Regular
    /MyriadPro-Semibold
    /MyriadPro-SemiboldIt
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /Symbol
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Webdings
    /Wingdings-Regular
    /ZapfDingbats
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 600
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 600
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 300
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 900
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.33333
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /Unknown
  /CreateJDFFile false
  /Description <<
    /ENU ()
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice