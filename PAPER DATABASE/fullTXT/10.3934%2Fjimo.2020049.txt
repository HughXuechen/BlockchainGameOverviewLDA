JOURNAL OF INDUSTRIAL AND doi:10.3934/jimo.2020049
MANAGEMENT OPTIMIZATION
Volume 17, Number 4, July 2021 pp. 1845–1861
A STOCHASTIC MODEL AND SOCIAL OPTIMIZATION OF A
BLOCKCHAIN SYSTEM BASED ON A GENERAL LIMITED
BATCH SERVICE QUEUE
Wenjuan Zhao and Shunfu Jin∗
School of Information Science and Engineering, Yanshan University
Qinhuangdao 066004, China
Wuyi Yue
Department of Intelligence and Informatics, Konan University
Kobe 658-8501, Japan
(Communicated by Shoji Kasahara)
Abstract. Blockchain is well known as a database technology supporting digi-
tal currencies such as Bitcoin, Ether and Ripple. For the purpose of maximizing
the overall revenue of the blockchain system, we propose a pricing policy to
impose on transactions. Regarding the mining process as a vacation, and the
block-verification process as a service, we establish a type of non-exhaustive
queueing model with a limited batch service and a possible zero-transaction
service. By selecting the beginning instant of a block-verification process as a
Markov point and using the method of a generating function, we obtain the
stationary probability distribution for the number of transactions in the system
at the Markov points and analyze the elapsed time for the mining cycle. Based
on the model analysis results, we derive the average latency of transactions
and demonstrate how the average latency of transactions changes in relation
to the arrival rate of transactions. With a reward-cost structure, we construct
an individual benefit function and a social benefit function. By improving the
Grasshopper Optimization Algorithm (GOA), we search for the Nash equilib-
rium and the socially optimal arrival rates of transactions. Numerical results
show that the Nash equilibrium arrival rate of transactions is always higher
than the socially optimal arrival rate of transactions for a given mining param-
eter and a specific block capacity. For this, we propose a pricing policy that
forces the transactions to accept the socially optimal arrival rate and maxi-
mize the overall revenue of the blockchain system, including all transactions
and miners.
1. Introduction. Blockchain is a decentralized distributed ledger that does not
allow deletion of data [15]. Compared with traditional accounting techniques,
blockchain has many obvious advantages, such as irreversibility, anonymity and au-
tonomy [10]. Since the terminology of blockchain was first presented by Nakamoto
in [8], blockchain has enjoyed sustained development. In recent years, considerable
efforts have been devoted to the study of the blockchain system.
2020 Mathematics Subject Classification. Primary: 60K15, 60K25; Secondary: 68M14.
Key words and phrases. Blockchain, limited batch service, Markov chain, Nash equilibrium,
social optimization, intelligent optimization algorithm, pricing policy.
∗ Corresponding author: Shunfu Jin.
1845
http://dx.doi.org/10.3934/jimo.2020049
1846 WENJUAN ZHAO, SHUNFU JIN AND WUYI YUE
One of the central topics in the field of the blockchain system research is appli-
cation technology. In [17], Zhao et al. proposed a lightweight backup and efficient
recovery scheme for keys of health blockchain in body sensor networks (BSNs). The
main advantage of the proposed scheme is its ability to secure private physiological
data on the health blockchain. In [9], Novo presented a new architecture that is a
generic, transparent and has a manageable access control system for the Internet
of Things (IoT) based on blockchain technology. The architecture addressed the
scalability problem of managing access to numerous constrained IoT devices and
compelled the constrained networks to simultaneously connect to the blockchain
network using specific nodes. In [13], with the help of the blockchain technol-
ogy, Muhamed et al. proposed a global higher education credit platform, named
EduCTX. The establishment of this platform was the first step toward a higher
education system with transparency and technical advancement. However, one im-
portant issue that has been overlooked by the afore-mentioned research is how to
evaluate and improve the performance of the blockchain system.
From the view point of performance evaluation, some works have been carried
out on the blockchain system based on queueing theory. In [4, 5], Kasahara et al.
established a single-server queue with a batch service and a priority mechanism
based on the Bitcoin system. By using the method of a supplementary variable,
they derived the average transaction-confirmation time. With numerical exper-
iment results, they quantitatively evaluated the effects of the block size on the
transaction-confirmation time. However, in the above-mentioned research on the
blockchain system, neither the process for solving the puzzle-like problem, nor the
implementation of the coinbase was taken into account.
In [6], Li et al. built a Markovian batch-service queueing system with two differ-
ent service stages and derived the stationary probability vector of the system. They
obtained formulas for the average number of transactions in the queue, the average
number of transactions in a block, and the average confirmation time of transac-
tions. Unfortunately, the coinbase transaction was also omitted in this model, and
the model analysis was short on generality due to the assumption of an exponentially
distributed service time.
It is noteworthy that in [14], Vlasiou investigated the Lindley-type equation by
considering a system consisting of one server and two service points. According
to the relation between the waiting times of successive customers, she derived a
closed-form expression for the steady-state limiting distribution of the waiting time
with sufficient assumptions. Lindley-type equation provides a potentially promising
method to be applied to the model analysis of non-exhaustive queues and perfor-
mance evaluation of the blockchain system.
It is a meaningful challenge to establish a system model that is more accordant
with a practical blockchain system. Compared with our previous work [18], there
is a substantial and appropriate extension in this paper. In our previous work, we
investigate the average number of transactions and the average latency of trans-
actions in the blockchain system. In this paper, based on the working flow of a
mining cycle, we show how to model the blockchain system and how to evaluate
the system performance. In addition, we present the formulation of a pricing policy
with a reasonable remittance fee to socially optimize the blockchain system, as well
as provide numerical results to verify the correctness of the modeling approach and
the rationality of the pricing policy.
The main contributions of this paper are as follows.
A STOCHASTIC MODEL AND SOCIAL OPTIMIZATION OF A... 1847
(1) Regarding the mining process as a vacation and the block-verification process
as a service, we establish a type of non-exhaustive queueing model with a
limited batch service and a possible zero-transaction service. By relaxing the
assumption of exponential distribution for service time, our proposed model
is more general in practice.
(2) By selecting the beginning instant of a block-verification process as a Markov
point and calculating the elapsed time for a mining cycle, we analyze the
proposed model. Compared with the regeneration cycle method widely used
in analyzing a non-exhaustive service vacation model, the analysis method
employed in this paper is more concise and efficient.
(3) With the enhanced GOA algorithm, we give the Nash equilibrium and the so-
cially optimal arrival rates of transactions, and then we present an appropriate
remittance fee charged to transactions for maximizing the overall revenue of
the blockchain system. This is the first work on the Nash equilibrium of
transactions in the blockchain system based on queueing theory.
The rest of this paper is organized as follows. In Section 2, based on the mining
cycle in the blockchain system, we establish a type of non-exhaustive queueing model
with a limited batch service and a possible zero-transaction service. In Section 3,
we carry out an analysis of the system model and derive the average latency of
transactions. In Section 4, with numerical results, we present a pricing policy
forcing the transactions to accept the socially optimal arrival rate. In Section 5, we
summarize the conclusions.
2. Blockchain system and mathematical model. In this section, we discuss
the mining cycle in the blockchain system. Accordingly, we establish a type of
non-exhaustive queueing model with a limited batch service and a possible zero-
transaction service.
2.1. Mining cycle in the blockchain system. Transactions, nodes and blocks
are the basic components of a blockchain system. A blockchain system originates
from the generation of a Genesis Block. The volunteer nodes, which temporally
store authenticated transactions in a Transaction Memory Pool (Tx Mem Pool), are
called miners. Miners compete for the right to add a new block to the blockchain
by solving a puzzle-like problem. This competition process is called the mining
process. Obviously, the time taken to complete the mining process increases with
the level of difficulty of the puzzle-like problem. To measure the time duration of
a mining process, we introduce a mining parameter. The mechanism of Proof of
Work (PoW) is adopted to realize the determination of competition results. Finding
the solution to the puzzle-like problem means the generation of a new block. The
first miner that finds the solution to the puzzle-like problem is called the winning
miner, whereas the other miners are called non-winning miners. If a newly gener-
ated block is empty, the empty block is directly connected to the blockchain without
verification. Otherwise, the winning miner broadcasts the newly generated block to
all the non-winning miners. Non-winning miners receiving the broadcast message
verify the newly generated block and feedback validation results to the winning
miner. Once the validation succeeds, the newly generated block will be connected
to the blockchain. And then the blockchain system synchronizes the blockchain and
updates all Tx Mem Pools. For a block with transactions, the block-verification pro-
cess includes the validation process and the connection process. The winning miner
receives rewards with the coinbase, a special transaction structured by the nodes
1848 WENJUAN ZHAO, SHUNFU JIN AND WUYI YUE
to reward the winning miner for the contribution, and the remittance fee charged
to transactions in the newly generated block. For an empty block, the connection
process is just the block-verification process and the winning miner receives only
one reward with the coinbase.
A mining process and the subsequent block-verification process combine to con-
stitute a mining cycle. The operation of a mining cycle is collectively performed by
multiple nodes distributed in different places to avoid the possibility of a winning
miner being controlled or bribed. All the nodes in the blockchain are equal, and any
of the nodes can be selected as a winning miner. All the nodes in the blockchain are
independent with each other and keep a complete blockchain to ensure the security
of data. The working flow of a mining cycle [2, 7] is illustrated in Fig. 1.
Generate the Genesis Block
Solve a puzzle-like problem
The problem is solved?
Generate a new block
The new
 block is empty?
Broadcast and validate
 the new block
The new
 block is successfully 
validated?
Connect the new block 
to blockchain 
Synchronize the blockchain
Update all Tx Mem Pools 
No
No
No
Yes
Yes
Yes
Figure 1. The working flow of a mining cycle.
Based on the working flow of a mining cycle illustrated in Fig. 1, we note that
the average latency of transactions is dependent of a variety of factors, such as the
block capacity, the mining parameter, the arrival rate of transactions, and so on. In
this paper, the latency of a transaction refers to the time duration from the instant
when a transaction arrives at Tx Mem Pools to the instant that this transaction
is connected to the blockchain. In order to quantitatively evaluate the response
performance of a blockchain system, we need to establish a mathematical model to
more realistically capture the stochastic behaviors of the transactions.
2.2. Mathematical model. Note that the size of a block is limited and the block
can not be confirmed during the mining process in a blockchain system. A non-
exhaustive queue [5] is naturally suitable to capture the working flow of a mining
A STOCHASTIC MODEL AND SOCIAL OPTIMIZATION OF A... 1849
cycle. We also note that the block-verification process includes the validation pro-
cess and the connection process. The validation process consists of the validation
process of transactions and the validation process of the basic block. When the
number of transactions in the newly generated block gets bigger, the validation
process of transactions will last longer.
In this paper, we limit our research to the blockchian system with light trans-
action traffic, and neglect the influence for the number of transactions on the time
duration of the block-verification process. Considering that transactions in the
newly generated block are simultaneously validated and a newly generated block is
possibly empty, we establish a type of non-exhaustive queueing model with a lim-
ited batch service and a possible zero-transaction service. In this queueing model,
the mining process is regarded as a vacation, and the block-verification process is
regarded as a service.
In this queueing model, once a newly generated block is connected to the
blockchain, i.e. a block-verification period ends, a mining process will start, no
matter whether or not there are transactions waiting in the system. Moreover,
when a puzzle-like problem is solved, i.e. a mining process ends, if the newly gener-
ated block is empty, a zero-transaction will start; otherwise, a normal service period
will start.
A winning miner will be selected from all the potential miners distributed over
the whole blockchain system. Therefore, the consensus algorithm based selection
process makes it difficult for a minority of nodes to control the whole system. In
order to capture the features of decentralization and distribution in the blockchain
system, we build a queueing system model to regard the whole blockchain system
as a server pool. In each mining cycle, one of the miners will be promoted to be a
wining miner who will act as a server in this queueing model.
We assume that the transaction arrivals follow a Poisson process with the pa-
rameter λ (λ > 0).
We assume that the time duration V for a mining process is an independent and
identically distributed (i.i.d) random variable and follows a general distribution
with a distribution function V (t). The Laplace-Stieltjes Transform (LST) V ∗(s),
the mean value E[V ] and the second moment E[V 2] of the time duration V for a
mining process are given as follows:
V ∗(s) =
∫ ∞
0
e−st dV (t), E[V ] =
1
θ
=
∫ ∞
0
tdV (t), E[V 2] =
∫ ∞
0
t2 dV (t)
where θ is the mining parameter.
We assume that the time duration S for a block-verification process is i.i.d ran-
dom variable and follows a general distribution with a distribution function S(t).
The LST S∗(s), the mean value E[S] and the second moment E[S2] of the time
duration S for a block-verification process are given as follows:
S∗(s) =
∫ ∞
0
e−st dS(t), E[S] =
1
µ
=
∫ ∞
0
tdS(t), E[S2] =
∫ ∞
0
t2 dS(t)
where µ is the block-verification rate.
Let b be the block capacity. We can intuitively explain the stability condition
of the system as follows: the expected number of transactions arriving during a
mining cycle must be smaller than b. That is,
λ(E[S] + E[V ]) < b.
1850 WENJUAN ZHAO, SHUNFU JIN AND WUYI YUE
3. Model analysis. In this section, we first employ the method of using an em-
bedded Markov chain to calculate the probability generating function Q(z) for the
number of transactions in the system at the Markov points, and then we derive the
average latency of transactions by analyzing the elapsed time for a mining cycle.
3.1. The probability generating function Q(z). For a queueing system with
general service, the numbers of transactions at instants t, t ≥ 0 do not have the
Markov property. We employ the method of the embedded Markov chain to analyze
the queueing model.
The operation of the queueing model with general limited batch service is illus-
trated in Fig. 2.
 1
0
n
F


 1
=0
n
Q
  n
Q b
   n n
F Q
 1n
Q b


 1n
F b


SV V S V S
C C C
Figure 2. Operation of the queueing model with general limited
batch service.
In this figure, V represents the time duration of a mining process, S represents
the time duration of a block-verification process, C represents the time duration of
a mining cycle, F (n) represents the number of transactions getting service during
the nth block-verification process, and Q(n) represents the number of transactions
in the system at the beginning instant of the nth block-verification process.
We note that the numbers of transactions in the system at beginning instants
of the block-verification processes constitute a Markov chain
{
Q(n), n > 1
}
. These
instants are called the embedded Markov points. The transition probability of this
Markov chain is given as follows:
pjk = P
{
Q(n+1) = k | Q(n) = j
}
=

∫ ∞
0
(λt)
k
k!
e−λt dS ∗ V (t), j < b∫ ∞
0
(λt)
k−j+b
(k − j + b)!
e−λt dS ∗ V (t), b ≤ j < b+ k
0, j ≥ b+ k
(1)
where S ∗ V (t) is the distribution function for the convolution of S with V .
Let qk be the probability for the number of transactions at the Markov points
being equal to k in the steady state, i.e.,
qk = lim
n→∞
P
{
Q(n) = k
}
, k ≥ 0.
A STOCHASTIC MODEL AND SOCIAL OPTIMIZATION OF A... 1851
It follows that
qk =
b−1∑
j=0
qj
∫ ∞
0
(λt)
k
k!
e−λt dS ∗ V (t)
+
k+b∑
j=b
qj
∫ ∞
0
(λt)
k−j+b
(k − j + b)!
e−λt dS ∗ V (t), k ≥ 0.
(2)
The probability generating function Q(z) for the number of transactions at the
regeneration point in the steady state is given as follows:
Q(z) =
∞∑
k=0
zk
b−1∑
j=0
qj
∫ ∞
0
(λt)
k
k!
e−λt dS ∗ V (t)
+
∞∑
k=0
zk
k+b∑
j=b
qj
∫ ∞
0
(λt)
k−j+b
(k − j + b)!
e−λt dS ∗ V (t).
(3)
Note that the time duration V of a mining process depends on the difficulty level of
the puzzle-like problem, whereas the time duration S of a block-verification process
is relevant to the validation process and the connection process of the newly gener-
ated block. Therefore, we assume that the time duration V of a mining process is
independent of the time duration S of a block-verification process. Based on this
assumption, Eq. (3) can be simplified as follows:
Q(z) =
1
zb
S∗(λ(1− z))V ∗(λ(1− z))
b−1∑
j=0
qjz
b +Q(z)−Qb(z)
 (4)
where
Qb(z) =
b−1∑
k=0
qkz
k.
Simplifying Eq. (4), we get
Q(z) =
S∗(λ(1− z))V ∗(λ(1− z))(Qb(1)zb −Qb(z))
zb − S∗(λ(1− z))V ∗(λ(1− z))
. (5)
To determine Q(z), we need to compute the coefficients {q0, q1, . . . , qb−1} of
Qb(z).
In the denominator on the right-hand side (r.h.s.) of Eq. (5), we introduce
notations as follows:
f(z) = zb, g(z) = −S∗(λ(1− z))V ∗(λ(1− z)).
Using Rouche’s theorem [3] and Lagrange’s theorem [1], it can be proved that
|f(z)| > |g(z)| on the circle |z| = 1 + ε for ε > 0, and that f(z) and f(z) + g(z)
have the same number of zeros inside |z| = 1 + ε. Therefore, the denominator on
the r.h.s. of Eq. (5) has b roots inside |z| = 1 + ε. One of these roots is z = 1, and
the other b− 1 roots are given as follows:
zr =
∞∑
n=1
e
2πrn
b i
n!
dn−1
dzn−1
(S∗(λ(1− z))V ∗(λ(1− z)))n/b
∣∣
z=0
, r = 1, 2, . . . , b− 1 (6)
where i =
√
−1.
1852 WENJUAN ZHAO, SHUNFU JIN AND WUYI YUE
Since Q(z) is analytic in |z| ≤ 1, the numerator on the r.h.s. of Eq. (5) must
also be zero at z = zr for r = 1, 2, . . . , b− 1. Therefore, we have b− 1 equations as
b−1∑
k=1
qkz
b
r −
b−1∑
k=1
qkz
k
r = 0, r = 1, 2, . . . , b− 1. (7)
Letting z → 1 and using L’Hopital rule in Eq. (5), we get
1 =
bQb(1)−Q′b(1)
b− λE[S]− λE[V ]
(8)
where Q
′
b(1) is the first derivative of Qb(z) at z = 1.
Rearranging Eq. (8) yields
b−1∑
k=1
(b− k)qk = b− λE[S]− λE[V ]. (9)
Based on Eqs. (7) and (9), we numerically compute the coefficients
{q0, q1, . . . , qb−1} of Qb(z). Furthermore, we obtain the probability generating func-
tion Q(z) for the number of transactions at the Markov points in the steady state.
3.2. Average latency E[T ] of transactions. A mining process and the subse-
quent block-verification process combine to constitute a mining cycle. Let C be the
time duration of a mining cycle. Based on the assumption that the time duration
V of a mining process and the time duration S of a block-verification process are
independent of each other, the LST C∗(s) and the mean value E[C] for the time
duration C of a mining cycle are given as follows:
C∗(s) = S∗(s)V ∗(s), E[C] = E[S] + E[V ].
The probability generating function AC(z) for the number of transactions arriv-
ing during a mining cycle is given as follows:
AC(z) = S∗(λ(1− z))V ∗(λ(1− z)). (10)
Let D be the elapsed time for a mining cycle. Referencing [11], the probability
density function h(t) for the elapsed time D of a mining cycle is given as follows:
h(t) =
1
E[C]
(1− C(t))
where C(t) is the distribution function for the time duration C of a mining cycle.
The probability generating function AD(z) for the number of transactions arriv-
ing during the elapsed time D of a mining cycle is given as follows:
AD(z) =
∞∑
i=0
zi
∫ ∞
0
(λt)i
i!
e−λth(t)dt
=
1− C∗(λ(1− z))
λ(1− z)E[C]
.
(11)
The probability generating function Ls(z) for the number of transactions to be
verified at the beginning instant of a mining cycle is given as follows:
Ls(z) =
Q(z)
V ∗(λ(1− z))
=
S∗(λ(1− z))(Qb(1)zb −Qb(z))
zb − C∗(λ(1− z))
.
(12)
A STOCHASTIC MODEL AND SOCIAL OPTIMIZATION OF A... 1853
We note that the number of transactions at any moment within a mining cycle
is the sum of the number of transactions at the beginning instant of a mining cycle
and the number of transactions arriving during the elapsed time of the same mining
cycle. The probability generating function L(z) for the number of transactions at
any moment is obtained as follows:
L(z) = Ls(z)AD(z). (13)
Substituting Eqs. (11) and (12) into Eq. (13) gives
L(z) =
S∗(λ(1− z))(Qb(1)zb −Qb(z))
zb − C∗(λ(1− z))
× 1− C∗(λ(1− z))
λ(1− z)E[C]
. (14)
Taking the derivative of z, letting z → 1 and using L’Hopital rule in Eq. (14), the
average number E[L] of transactions in the blockchain system is given as follows:
E[L] = λE[S] +
λE[C2]
2E[C]
+
b(b− 1)(Qb(1)− 1)−Q′′b (1) + λ2E[C2]
2(b− λE[C])
(15)
where Q
′′
b (1) is the second derivative of Qb(z) at z = 1 and E[C2] is the second
moment of the time duration C for a mining cycle.
Following Little’s law [16], the average latency E[T ] of a transaction is then given
as follows:
E[T ] = E[S] +
E[C2]
2E[C]
− b(b− 1)(1−Qb(1)) +Q
′′
b (1)
2λ(b− λE[C])
+
λE[C2]
2(b− λE[C])
. (16)
4. Remittance fee charged to transactions. In this section, we firstly inves-
tigate the Nash equilibrium and the socially optimal arrival rates of transactions.
Then, we present a pricing policy that forces the transactions to accept the socially
optimal arrival rate and maximizes the overall revenue of the blockchain system.
4.1. Nash equilibrium arrival rate of transactions. In this paper, we inves-
tigate the Nash equilibrium arrival rate from the view point of transactions. Let
R be the reward of a transaction from a completed service, and β be the cost to
a transaction for staying in the system. In order to guarantee that the blockchain
system is stable, we formulate the maximal value λmax for the arrival rate λ of
transactions as follows:
λmax =
b
E[S] + E[V ]
. (17)
We define the individual net benefit function UI of a transaction as follows:
UI(λ) = R− βE[T ] (18)
where E[T ] is the average latency of transactions given in Eq. (16).
In our model, a vacation period is certainly followed by a service period. We
note that at most b transactions can be served during one service period, and
all these transactions are processed simultaneously. When the arrival rate λ of
transactions increases, the average latency of transactions will increase. Based on
Eq. (18), we say that the individual benefit UI(λ) of a transaction is a decreasing
function about the arrival rate λ of transactions. Provided the net benefit UI(λ) is
positive, the arrival rate λ of transactions will be as high as possible. If there is at
least one solution for the inequality UI ≥ 0 within the closed interval [0, λmax], the
maximal value of the solutions is the Nash equilibrium arrival rate λe of transactions.
1854 WENJUAN ZHAO, SHUNFU JIN AND WUYI YUE
Otherwise, the Nash equilibrium arrival rate of transactions is λe = 0. We discuss
the Nash equilibrium arrival rate as follows:
(1) UI(λmax) ≥ 0 indicates that all the transactions join the blockchain system to
get service, and the net benefit will be non-negative. Therefore, λe = λmax is
the Nash equilibrium arrival rate, and no other Nash equilibrium arrival rate
exists.
(2) UI(0) ≤ 0 indicates that no other transactions join the blockchain system, and
the net benefit of a transaction that joins the blockchain system is negative.
Therefore, λe = 0 is the Nash equilibrium arrival rate, and no other Nash
equilibrium arrival rate exists.
(3) UI(0) > 0 & UI(λmax) < 0 indicates that there is a unique Nash equilibrium
arrival rate 0 < λe < λmax, where the Nash equilibrium arrival rate λe can
be obtained by solving UI(λe) = 0.
From the analysis in Section 3, we note that it is difficult to present the average
latency E[T ] of a transaction in a closed form. Hence, it is difficult to give the Nash
equilibrium arrival rate λe of transactions in a closed form.
Referencing [6], we assume that the time duration S for a block-verification
process follows an exponential distribution with a block-verification rate µ and the
time duration V for a mining process follows an exponential distribution with a
mining parameter θ. With the assumption, Eq. (16) can be modified as follows:
E[T ] =
1
µ
+
µ2 + µθ + θ2
µθ(µ+ θ)
+
2λ2(µ2 + µθ + θ2)− µ2θ2(b(b− 1)(1−Qb(1)) +Q
′′
b (1))
2λµθ(µθb− λµ− λθ)
.
(19)
By setting the block-verification rate µ = 2, the mining parameter θ = 0.5, 1.0, 1.5,
the reward R = 15, the cost β = 1.5 and the block capacity b = 40, 80 as an
example, we carry out experiments to show the change trend for the individual
benefit UI of a transaction in relation to the arrival rate λ of transactions in Fig. 3.
In Fig. 3, we find that with the parameters set above, all the individual benefits
UI show decreasing trends as the arrival rate λ of transactions increases. We also
find that all the individual benefits UI go through UI = 0, i.e., there are always
values of λe subject to UI = 0.
4.2. Socially optimal arrival rate of transactions. When designing a
blockchain system, we should consider the Nash equilibrium arrival rate as well
as the socially optimal arrival rate for transactions. By aggregating the individual
benefits of all transactions and the coinbase reward ψ of the winning miner, we
define the social benefit function US for a blockchain system as follows:
US(λ) = λ(R− βE[T ]) +
ψ
E[C]
. (20)
By maximizing the social benefit, the socially optimal arrival rate λ∗ of transac-
tions is given as follows:
λ∗ = arg max
λ∈[0,λmax]
US(λ). (21)
Using the same parameters as in Fig. 3 and setting the coinbase reward ψ = 3,
we show how the social net benefit US(λ) changes with respect to the arrival rate
λ of transactions in Fig. 4.
A STOCHASTIC MODEL AND SOCIAL OPTIMIZATION OF A... 1855
0 5 10 15 20 25 30 35
Arrival rate  of transactions
-5
0
5
10
15
In
di
vi
du
al
 b
en
ef
it 
U
I
 = 1.5
 = 0.5
 = 1.0
(a) b = 40
0 10 20 30 40 50 60 70
Arrival rate  of transactions
-5
0
5
10
15
In
di
vi
du
al
 b
en
ef
it 
U
I
 = 0.5
 = 1.0
 = 1.5
(b) b = 80
Figure 3. Change trend of the individual benefit UI(λ) of a transaction.
In Fig. 4, we find that as the arrival rate λ of transactions increases, the social
benefit US(λ) of transactions shows an upper convex trend. With this trend, there
is always a socially optimal arrival rate λ∗ of transactions and a maximal social
benefit US(λ∗).
In this system model, the mathematical expressions for the Nash equilibrium
arrival rate λe and the socially optimal arrival rate λ∗ of transactions are difficult
to give in closed-forms. Moreover, the strict monotonicity of the social benefit is
difficult to discuss and the strict differentiability of the social benefit is difficult to
prove. The social optimization problem of a blockchain system involves complicated
nonlinear equations and nonlinear optimization problems. In this case, when solving
the optimization problem involved in the blockchain system, intelligent optimization
algorithms are more efficient than conventional optimization methods, such as the
1856 WENJUAN ZHAO, SHUNFU JIN AND WUYI YUE
0 5 10 15 20 25 30 35
Arrival rate  of transactions
-200
-100
0
100
200
300
400
So
ci
al
 b
en
ef
it 
U
S
 = 0.5
 = 1.0
 = 1.5
(a) b = 40
0 10 20 30 40 50 60 70
Arrival rate  of transactions
-400
-200
0
200
400
600
800
So
ci
al
 b
en
ef
it 
U
S
 = 0.5
 = 1.0
 = 1.5
(b) b = 80
Figure 4. Change trend of social benefit US(λ) of transactions.
steepest descent method or Newton’s method. We therefore present a GOA based
intelligent searching algorithm to obtain the Nash equilibrium arrival rate λe and
the socially optimal arrival rate λ∗.
Grasshopper Optimization Algorithm (GOA) was proposed based on the be-
haviour of grasshopper swarms in nature by Shahrzad Saremi et al. [12]. GOA sim-
ulates the repulsion and attraction that is obliged between grasshoppers to explore
the search space and exploit promising regions for solving optimization problems.
In GOA, the population of grasshoppers are firstly initialized. And then, the fitness
of each grasshopper is calculated and the best grasshopper (agent) is evaluated.
However, the drawbacks of GOA are slow convergence speed and poor search
accuracy. For this, we propose an enhanced GOA by employing a chaos function
A STOCHASTIC MODEL AND SOCIAL OPTIMIZATION OF A... 1857
to initialize the population of grasshoppers, and we replace linear adaptation with
cosine adaptation to update the decreasing coefficient.
The working flow of the enhanced GOA proposed in this paper is given in Fig. 5.
Initialize the maximum decreasing coefficient cmax, the 
minimum decreasing coefficient cmin, the maximum
 iterations Max_iter  and the lower search boundary lb 
Update the decreasing coefficient c with cosine adaptation
 Normalize the distances between grasshoppers
 Update the current agent T  
Is the current
  agent T  within the range of 
[lb,ub]?
Is the current
  agent T  better than the
 best agent T？
  T = T  
iter = iter + 1
Calculate the objective 
function U(T) 
Y
N
If iter < Max_iter?
Return T and the 
objective function U(T) 
Calculate the objective function U 
based on Eqs. (17) and (18)
iter = 1, ub =   max 
Initialize the population of grasshoppers 
Xi (i =1, 2, ..., n) by using the chaos function
Select the best agent T 
Y
Y
N
N
Figure 5. The working flow of the enhanced GOA.
4.3. Pricing policy. By using the same parameters as in Fig. 4, and setting
the number n = 50 of grasshoppers, the maximum iterations Max iter = 100,
the maximum decreasing coefficient cmax = 1, the minimum decreasing coefficient
cmin = 0.00004, and the lower search boundary lb = 0.0001, we carry out exper-
iments. The upper search boundary is equal to the maximal arrival rate λmax of
transactions. The value of maximal arrival rate λmax of transactions is obtained by
Eq. (17). The numerical results of the Nash equilibrium arrival rate λe of trans-
actions and the socially optimal arrival rate λ∗ of transactions with different block
capacity b and different mining parameter θ are demonstrated in Fig. 6.
From Fig. 6, we observe that the Nash equilibrium arrival rate λe of transactions
is always higher than the socially optimal arrival rate λ∗ of transactions. Namely,
more transactions choose to join the blockchain system under the Nash equilibrium
1858 WENJUAN ZHAO, SHUNFU JIN AND WUYI YUE
0.0 0.5 1.0 1.5 2.0
Mining parameter 3
0
5
10
15
20
25
30
35
40
N
as
h 
eq
ui
lib
ri
um
 a
nd
 s
oc
ia
lly
 o
pt
im
al
 a
rr
iv
al
 r
at
es
 o
f 
tr
an
sa
ct
io
ns
6
e
6
*
(a) b = 40
0 0.5 1.0 1.5 2.0
Mining parameter 3
0
10
20
30
40
50
60
70
80
N
as
h 
eq
ui
lib
ri
um
 a
nd
 s
oc
ia
lly
 o
pt
im
al
 a
rr
iv
al
 r
at
es
 o
f 
tr
an
sa
ct
io
ns
6
e
6
*
(b) b = 80
Figure 6. Nash equilibrium and socially optimal arrival rates of transactions.
arrival rate, but this will deteriorate the social benefit. In order to oblige transac-
tions to adopt the socially optimal arrival rate, we charge an appropriate remittance
fee f to transactions who join the blockchain system.
A STOCHASTIC MODEL AND SOCIAL OPTIMIZATION OF A... 1859
With the remittance fee f charged to transactions, the individual benefit function
UfI (λ) of transactions is modified as follows:
UfI (λ) = R− f − CE[T ]. (22)
Accordingly, the social benefit UfS (λ) of transactions is given as follows:
UfS (λ) = λ(R− f − βE[T ]) + λf +
ψ
E[C]
= λ(R− βE[T ]) +
ψ
E[C]
.
(23)
We note that UfS (λ) is equal to US(λ). That is to say, the remittance fee f
charged to transactions has no effect on the social benefit. This is because that the
remittance fee is just transferred from transactions to miners.
By substituting the socially optimal arrival rate λ∗ of transactions into Eq. (22)
and letting UfI (λ) = 0, we calculate the remittance fee f charged to transactions as
follows:
f = R− CE[T ]
∣∣
λ=λ∗
. (24)
By setting the block-verification rate µ = 2, the reward R = 15, the cost β = 1.5
and the coinbase reward ψ = 3 as an example, we present numerical results for the
remittance fee with different block capacity b and different mining parameter θ in
Table 1.
Table 1. Numerical results for the remittance fee.
Mining parameter Block capacity Socially optimal Maximum social Remittance
(θ) (b) arrival rate (λ∗) benefit (US(λ∗)) fee (f)
0.5 40 11.0493 101.0826 9.0397
0.5 80 22.0986 202.2892 9.0996
1.0 40 20.9083 225.1180 10.6713
1.0 80 41.8166 450.5689 10.7271
1.5 40 28.0302 318.0631 11.2554
1.5 80 56.2193 636.5389 11.2767
From Table 1, we note that for the same block capacity b, as the mining parameter
θ increases, the mining process time is shorter, so a block is generated earlier. As
a result, transactions in the block will be confirmed earlier, the average latency of
transactions will be decreased, and the latency cost of transactions will be reduced.
This ensures more transactions join the blockchain system, meaning the remittance
fee charged to transactions should be set higher.
We also note that for the same mining parameter θ, as the block capacity b in-
creases, transactions in the Transaction Memory Pool are put into a block earlier and
are confirmed earlier. Therefore, the average latency of transactions will decrease,
and the latency cost of transactions will be reduced. This means more transactions
join the blockchain system, and the remittance fee charged to transactions should
be set higher.
1860 WENJUAN ZHAO, SHUNFU JIN AND WUYI YUE
5. Conclusions. In this paper, we presented a modeling approach to capture the
blockchain system and investigated the Nash equilibrium of transactions in the
blockchain system. Based on the working flow of a blockchain system, we established
a type of non-exhaustive queueing model with a limited batch service and a possible
zero-transaction service. By employing the methods of an embedded Markov chain
and a generating function, we obtained the stationary probability distribution for
the number of transactions in the system at the Markov points. Furthermore, we de-
rived the average latency of transactions by analyzing the elapsed time for a mining
cycle. And then, from the perspective of economics, we constructed an individual
benefit function and a social benefit function to investigate the Nash equilibrium
and the socially optimal strategies of transactions in the blockchain system. Finally,
we presented a method for motivating transactions to accept the socially optimal
arrival rate by charging an appropriate remittance fee to transactions.
In our future research, we will consider the influence for the number of transac-
tions on the time duration of a block-verification process in blockchain system, and
investigate a type of non-exhaustive queueing model with a limited batch service
by employing Lindley-type equation.
Acknowledgments. This work was supported in part by National Natural Science
Foundation (Nos. 61872311 and 61973261) and Natural Science Foundation of Hebei
Province (No. F2017203141), China, and was supported in part by MEXT, Japan.
REFERENCES
[1] M. Aguiar and A. Lauve, Lagrange’s theorem for Hopf monoids in species, Canadian Journal
of Mathematics, 65 (2013), 241–265.
[2] A. Antonopoulos and O. Media, Mastering Bitcoin: Unlocking Digital Crypto-Currencies,
O’Reilly Media, 2014.
[3] R. Howell and E. Schrohe, Unpacking Rouché’s Theorem, PRIMUS: Problems, Resources,
and Issues in Mathematics Undergraduate Studies, 27 (2017), 801–813.
[4] S. Kasahara and J. Kawahara, Effect on transaction-confirmation process, J. Ind. Manag.
Optim., 15 (2019), 365–386.
[5] Y. Kawase and S. Kasahara, Transaction-confirmation time for bitcoin: A queueing analytical
approach to blockchain mechanism, 12th International Conference of Queueing Theory and
Network Applications, LNCS , (2017), 75–88.
[6] Q. Li, J. Ma and Y. Chang, Blockchain queueing theory, (2018). Available from: https:
//arxiv.org/abs/1808.01795.
[7] R. Memon, J. Li and J. Ahmed, Simulation model for blockchain systems using queuing
theory, Electronics, 8 (2019), 234–252.
[8] S. Nakamoto, Bitcoin: A peer-to-peer electronic cash system, (2008). Available from: https:
//www.coindesk.com/bitcoin-peer-to-peer-electronic-cash-system.
[9] O. Novo, Blockchain meets IoT: An architecture for scalable access management in IoT, IEEE
Internet of Things Journal , 5 (2018), 1184–1195.
[10] W. Qian, Q. Shao, Y. Zhu, C. Jin and A. Zhou, Research problems and methods in blockchain
and trusted data management, Journal of Software, 29 (2018), 150–159.
[11] S. Ross, Stochastic Processes, Second edition, Wiley Series in Probability and Statistics:
Probability and Statistics, John Wiley & Sons, Inc., New York, 1996.
[12] S. Saremi, S. Mirjalili and A. Lewis, Grasshopper optimisation algorithm: Theory and appli-
cation, Advances in Engineering Software, 105 (2017), 30–47.
[13] M. Turkanović, M. Holbl, K. Kosic, M. Hericko and A. Kamisalic, Eductx: A blockchain-based
higher education credit platform, IEEE Access, 6 (2018), 5112–5127.
[14] M. Vlasiou, A non-increasing Lindley-type equation, Queueing Systems, 56 (2007), 41–52.
[15] L. Wang, X. Shen, J. Li, J. Shao and Y. Yang, Cryptographic primitives in blockchains,
Journal of Network and Computer Applications, 127 (2019), 43–58.
[16] R. Wolff and Y. Yao, Little’s law when the average waiting time is infinite, Queueing Systems,
76 (2014), 267–281.
http://www.ams.org/mathscinet-getitem?mr=MR3028563&return=pdf
http://dx.doi.org/10.4153/CJM-2011-098-9
http://dx.doi.org/10.1080/10511970.2016.1235646
http://www.ams.org/mathscinet-getitem?mr=MR3918253&return=pdf
http://dx.doi.org/10.1007/978-3-319-68520-5_5
http://dx.doi.org/10.1007/978-3-319-68520-5_5
https://arxiv.org/abs/1808.01795
https://arxiv.org/abs/1808.01795
http://dx.doi.org/10.3390/electronics8020234
http://dx.doi.org/10.3390/electronics8020234
https://www.coindesk.com/bitcoin-peer-to-peer-electronic-cash-system
https://www.coindesk.com/bitcoin-peer-to-peer-electronic-cash-system
http://dx.doi.org/10.1109/JIOT.2018.2812239
http://www.ams.org/mathscinet-getitem?mr=MR1373653&return=pdf
http://dx.doi.org/10.1016/j.advengsoft.2017.01.004
http://dx.doi.org/10.1016/j.advengsoft.2017.01.004
http://www.ams.org/mathscinet-getitem?mr=MR2334913&return=pdf
http://dx.doi.org/10.1007/s11134-007-9029-6
http://dx.doi.org/10.1016/j.jnca.2018.11.003
http://www.ams.org/mathscinet-getitem?mr=MR3163557&return=pdf
http://dx.doi.org/10.1007/s11134-013-9364-8
A STOCHASTIC MODEL AND SOCIAL OPTIMIZATION OF A... 1861
[17] H. Zhao, P. Bai, Y. Peng and R. Xu, Efficient key management scheme for health blockchain,
CAAI Transactions on Intelligence Technology, 3 (2018), 114–118.
[18] W. Zhao, S. Jin and W. Yue, Analysis of the average confirmation time of transactions
in a blockchain system, 14th International Conference of Queueing Theory and Network
Applications, LNCS , (2019), 379–388.
Received May 2019; revised October 2019.
E-mail address: zwj8569@163.com
E-mail address: jsf@ysu.edu.cn
E-mail address: yue@konan-u.ac.jp
http://dx.doi.org/10.1049/trit.2018.0014
http://dx.doi.org/10.1007/978-3-030-27181-7_23
http://dx.doi.org/10.1007/978-3-030-27181-7_23
mailto:zwj8569@163.com
mailto:jsf@ysu.edu.cn
mailto:yue@konan-u.ac.jp
	1. Introduction
	2. Blockchain system and mathematical model
	2.1. Mining cycle in the blockchain system
	2.2. Mathematical model
	3. Model analysis
	3.1. The probability generating function Q(z)
	3.2. Average latency E[T] of transactions
	4. Remittance fee charged to transactions
	4.1. Nash equilibrium arrival rate of transactions
	4.2. Socially optimal arrival rate of transactions
	4.3. Pricing policy
	5. Conclusions
	Acknowledgments
	REFERENCES