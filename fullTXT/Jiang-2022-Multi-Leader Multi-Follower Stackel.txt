Multi-Leader Multi-Follower Stackelberg Game in Mobile Blockchain Mining
Multi-Leader Multi-Follower Stackelberg Game
in Mobile Blockchain Mining
Suhan Jiang , Student Member, IEEE, Xinyi Li , Student Member, IEEE, and Jie Wu , Fellow, IEEE
Abstract—The development of Blockchain-based mobile applications are impeded due to the resource limitations of mobile devices.
Computation offloading can be a viable solution. In this paper, we consider a two-layer computation offloading paradigm including an
edge computing service provider (ESP) and a cloud computing service provider (CSP). We formulate a multi-leader multi-follower
Stackelberg game to address the computing resource management problem in such a network, by jointly maximizing the profits of each
service provider (SP) and the payoffs of individual miners. We study two practical scenarios: a fixed-miner-number scenario for
permissioned blockchains and a dynamic-miner-number scenario for permissionless blockchains. For the fixed-miner-number
scenario, we discuss two different edge operation modes, i.e., the ESP is connected (to the CSP) or standalone, which form different
miner subgames based on whether each miner’s strategy set is mutually dependent. The existence and uniqueness of Stackelberg
equilibrium (SE) in both modes are analyzed, according to which algorithms are proposed to achieve the corresponding SE(s). For the
dynamic-miner-number scenario, we focus on the impact of population uncertainty and find that the uncertainty inflates the
aggressiveness in the ESP resource purchasing. Numerical evaluations are presented to verify the proposed models.
Index Terms—Cloud computing, edge computing, game theory, load sharing, mobile blockchain mining, reinforcement learning
Ç
1 INTRODUCTION
CURRENTLY blockchain technology has been widely
adopted, ranging from cryptocurrency, financial serv-
ices, Internet of Things (IoT) to public and social services.
As a distributed ledger, blockchain records data in the form
of linked blocks secured by cryptography. Consensus proto-
col is the core of blockchain, since it regulates the mainte-
nance for such an append-only public ledger in a
distributed fashion. Currently, most blockchain applications
are on top of a proof-of-work (PoW) protocol. In a PoW-
based blockchain network, miners collect blocks of data,
verify their integrity, and append them to the blockchain. In
order to add a block to the blockchain, miners are required
to solve a computationally challenging PoW puzzle. The
security and reliability are thus ensured by this mechanism
which requires numerous trials and errors for a valid solu-
tion. The blockchain grows with the repetitive block-
appending processes, each of which is considered as one
mining round; meanwhile, the owner of the on-chain block
receives monetary rewards as the mining incentive.
The new trend on blockchain technology is using block-
chain in mobile app development. However, the energy
consumption and the computing power required to per-
form PoW computation are prohibitively high for mobile
devices, thus hindering the practical usage of blockchain in
mobile environments. Offloading PoW computation to the
external machines has been proven effective in overcoming
the aforementioned limitations and promoting mobile
blockchain applications. Specifically, both an edge comput-
ing service provider (ESP) and a cloud computing service pro-
vider (CSP) can provide computing resources for mobile
devices. While a CSP can guarantee a good isolation among
multiple computation offloading requests (i.e., there is no
competition for cloud computing resources) with a relatively
cheap price, significant network delays hamper the perfor-
mance of cloud computing. Due to the delay-sensitive nature
of mining, an ESP is considered as an efficient proximity
alternative with the capability of providing low-latency ser-
vice. However, mobile miners may have to compete against
each other for the limited and expensive edge computing
resources.
In this paper, we present a hierarchical computation off-
loading paradigm consisting of two service providers (SPs),
i.e., a nearby ESP and a remote CSP, and a set of miners in a
mobile blockchain mining network. As depicted in Fig. 1,
each miner is willing to offload its PoW computation to
either of these two SPs or both of them. Once the ESP is
overloaded with requests, it responds differently according
to its operation mode. Specifically, two edge computing
operation modes, i.e., the ESP connected to the CSP (Fig. 2a)
and standalone (Fig. 2b), have been implemented in practice.
Consequently, for an edge computing request which fails to
be satisfied by the ESP, it will be sent to the backup CSP in
the connected mode (characterized by the dotted line in
Fig. 2a), or will be rejected in the standalone mode charac-
terized by the dash line in Fig. 2b). In the standalone mode,
miners can resend those requests rejected by the ESP to the
CSP. However, the communication delay will be consider-
ably longer than that in the connected mode where the ESP
executes automatic transfers. In the standalone mode, min-
ers’ requests are mutually affected and should be dedicated
to avoid overloading the ESP.
� The authors are with the Department of Computer and Information Scien-
ces, Temple University, Philadelphia, PA 19122 USA.
E-mail: {Suhan.Jiang, Xinyi.Li, jiewu}@temple.edu.
Manuscript received 2 Feb. 2020; revised 27 Oct. 2020; accepted 30 Oct. 2020.
Date of publication 4 Nov. 2020; date of current version 5 May 2022.
(Corresponding author: Suhan Jiang.)
Digital Object Identifier no. 10.1109/TMC.2020.3035990
2058 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 21, NO. 6, JUNE 2022
1536-1233 © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See ht _tps://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-9978-3759
https://orcid.org/0000-0002-9978-3759
https://orcid.org/0000-0002-9978-3759
https://orcid.org/0000-0002-9978-3759
https://orcid.org/0000-0002-9978-3759
https://orcid.org/0000-0002-4059-4531
https://orcid.org/0000-0002-4059-4531
https://orcid.org/0000-0002-4059-4531
https://orcid.org/0000-0002-4059-4531
https://orcid.org/0000-0002-4059-4531
https://orcid.org/0000-0002-3472-1717
https://orcid.org/0000-0002-3472-1717
https://orcid.org/0000-0002-3472-1717
https://orcid.org/0000-0002-3472-1717
https://orcid.org/0000-0002-3472-1717
mailto:Suhan.Jiang@temple.edu
mailto:Xinyi.Li@temple.edu
mailto:jiewu@temple.edu
We exploit game theory to analyze the complex interac-
tions among SPs and mobile miners. To solve the price-
based resource management problem, we leverage a multi-
leader multi-follower Stackelberg game, which includes
two subgames for the SPs (as leaders) and the miners (as fol-
lowers), respectively. In the SP subgame, each SP has a priv-
ilege to set unit prices on its computing resources by
anticipating the miners’ responses. In the miner subgame,
the miners decide their requests according to the observed
unit prices. Moreover, we investigate how edge operation
modes will affect the miner subgame. In the connected
mode, the miner subgame is formulated as a classical Nash
equilibrium problem (NEP). However, the miner subgame
becomes a generalized Nash equilibrium problem (GNEP)
in the standalone mode. GNEPs differ from NEPs in that,
while in an NEP only the players’ objective functions
depend on the other players’ strategies, in a GNEP both the
objective functions and the strategy sets depend on the
other players’ strategies. In the standalone mode, due to
the limited computing units at the ESP side, whether a min-
er’s edge computing request can be satisfied is affected by
other miners’ requests.
All previous studies assume that theminer number is fixed
as a common knowledge in the proposed games. In practice,
for permissionless blockchains where miners can randomly
join or leave, the miner number may change. Thus, we also
discuss the impact of population uncertainty on the miners’
strategies by modeling the miner number as a random vari-
able. Themajor contributions of this paper are as follows:
� We propose a Stackelberg game to solve a price-
based computing resource management problem in
a mobile blockchain mining network with two SPs.
� We study the proposed Stackelberg game in two
practical edge operation modes, thereby formulating
two different miner subgames: an NEP in the con-
nected mode and a GNEP in the standalone mode.
� We analyze the existence and uniqueness of Stackel-
berg equilibrium (SE) for both edge operation
modes, based on which algorithms are proposed to
obtain SE solutions.
� We consider a special case of homogeneous miners
and derive explicit-form expressions of the most prof-
itable price strategies for each SP and the optimal
resource requests for individual miners in each mode.
� We study the impacts of population uncertainty,
which incurs more resource requests at the ESP side.
� We extend our single-CSP single-ESP leader model
to a single-CSP multiple-ESP model, which is more
in line with the reality.
� We conduct testbed experiments to verify the practi-
cality of our proposed model and perform numerical
evaluation in a reinforcement learning framework to
validate our analysis. The achieved equilibria are
consistent with our theoretical results.
2 MOTIVATION
The core of this paper is to solve a resource pricing and alloca-
tion problem in a mobile blockchain mining network. This
paper guidesminers on how to decide their mining power, i.e.,
how many resources to purchase from SPs, given the mining
rewards, the service delay, and the resource prices. This deci-
sion is essential for miners as they participate the mining com-
petitions for revenues. Our solution can help them optimize
their profits in the long run. Besides, ourmodel also helps com-
panies that offer miners cloud/edge mining services to cor-
rectly set prices and allocate resources for more benefits. Our
model can lead to awin-win result forminers and providers.
The reason why we separate cloud computing and edge
computing is based on the different qualities and prices pro-
vided by theCSP and the ESP. These two factors affectminers’
utilities. As we mentioned in the original manuscript, the
communication delay between miners and SPs has a negative
effect in their winning probabilities. Obviously, the ESP with
shorter delays benefits a miner in his winning probability.
However, the ESP’s higher resource price increases the min-
er’s cost, as well. Although the CSP incurs longer delays. it
guarantees cheap and sufficient resources. Thus, each SP has
its own advantage and disadvantage. Thus, taking the hetero-
geneity of SPs into consideration helps aminermore precisely
predict his utility and thus result in a better decision. It should
better reflect the real-world applications. In reality, if wewant
to apply blockchain techniques in the IoT field, miners using
mobile devices need to turn to cloud computing and/or edge
computing for help. Then, they have to consider the different
service qualities and prices provided by the CSP and the ESP.
3 SYSTEM MODEL AND GAME FORMULATION
3.1 A Mobile Blockchain Mining Network
This paper focuses on a mobile blockchain mining network.
Corresponding notations are listed in Table 1. We consider
Fig. 1. Mobile blockchain mining network: a multi-leader multi-follower
Stackelberg game among SPs and miners.
Fig. 2. Different operation modes of the ESP.
JIANG ET AL.: MULTI-LEADER MULTI-FOLLOWER STACKELBERG GAME IN MOBILE BLOCKCHAIN MINING 2059
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
N end users, which we also call miners, and two service
providers. Fig. 1 depicts an overview of this network. The
SP side consists of a nearby ESP and a remote CSP that
make profits by contributing their computing power sold
by unit. One unit from the ESP is functionally equivalent to
one from the CSP. In the proposed network, message trans-
mission time is viewed as communication delay. For sim-
plicity, we assume communication delay between the ESP
and miners is negligible as 0, while communication delay
between the CSP and the ESP/miners is the same as Davg.
Besides, the ESP is assumed to have limited computing
capability, while the CSP owns unlimited computing power.
The end-user side is a network with N miners using dif-
ferent mobile devices. We differentiate them in terms of
available budget which gives an upper bound on the
amount of computing units they can afford. Thus, different
types of miners have different requests on computing
power. We employ a utility function to describe each min-
er’s expected payoff, i.e., the difference between its expected
income and expected cost. The SPs and the miners have
bidirectional communications for exchanging price and
request information. Miners receive prices from the SPs and
transmit their requests to them.
We consider two practical edge operation modes, i.e., con-
nected to the CSP or standalone, differing inwhether or not the
ESP would share loads with the CSP if it is computationally
overloaded. Based on these two modes, we characterize the
limited computing capability of the ESP in two different ways.
In connectedmode, the ESP’s computing limitation is captured
by an expected transfer rate, i.e.,ð1�hÞ. That is, A request to the
ESPmay automatically be transferred to the CSP with a proba-
bility of ð1�hÞ in expectation. As an empirical value, ð1�hÞ is
common knowledge in the game. Instead, if operating in stand-
alone mode without load sharing, the ESP is limited withEmax
computing units and hence rejects requests once overloaded.
3.2 SP-Miner Interaction: A Stackelberg Game
We focus on interactions between the SPs and the miners.
Each miner’s income depends all miners’ strategies and its
cost varies according to the prices set by each SP. In fact,
each SP decides its unit price by considering miners’
requests as well as the rival SP’s price. Game theory pro-
vides a natural paradigm to model the interactions between
the SPs and the miners in this network. Each SP sets the unit
price and announces it to the miners. The miners respond to
the price by requesting an optimal amount of computing
units to the SPs. Since the SPs act first and then the miners
make their decision based on the prices, the two events are
sequential. Thus, we model the interactions between the
SPs and the miners using a Stackelberg game. In our pro-
posed game, the SPs are the leaders and the consumers are
the followers. It is a multi-leader multi-follower Stackelberg
game, two stages of which can be described as follows.
In the first stage, the competition between the ESP and
the CSP forms a non-cooperative leader subgame, where
each SP optimizes its unit price (Pe/Pc) by predicting the
miners’ reactions as well as considering the other SP’s price
strategy. In the second stage, each miner, i.e., mi, responds
to the current prices, by sending request(s) to the target SP
(s), considering its budget Bi and requests of other miners’.
Since requests are generated for individual utility maximi-
zation, a non-cooperative follower subgame is also formed.
3.2.1 Miner Side Utility
Let ei and ci be mi’s requests on the ESP and the CSP,
respectively. Given the mining reward R, we define mi’s
optimization problem below.
Problem 1 (MINER SUBGAME: OPMINER).
maximize Ui ¼ R �Wi � ðPe � ei þ Pc � ciÞ; (1a)
subject to Pe � ei þ Pc � ci � Bi; ei � 0; ci � 0;
(1b)
where Wi represents mi’s expected winning probability,
an accurate definition and detailed explanations of which
will be given in Section 4. Each miner mi aims to maximize
its utility and constraint (1b) ensures that mi is within its
budget.
3.2.2 SP Side Utility
The objective of each SP is to optimize its profit by deter-
mining the corresponding unit price. The optimization
problem (including OPESP and OPCSP) at SP side is thus
defined as in Eqs. (2a) and (2b) for the ESP and the CSP,
respectively.
Problem 2 (SP SUBGAME: OP SP).
maximize Ve ¼ ðPe � CeÞ � E where E ¼
XN
i¼1 ei
(2a)
maximize Vc ¼ ðPc � CcÞ � C where C ¼
XN
i¼1 ci:
(2b)
3.2.3 Stackelberg Game
OP SP and OPMINER together form the proposed Stackelberg
game. To achieve equilibrium in this game, where neither
TABLE 1
Summary of Notations
Symbol Description
Pe/Pc unit price set by the ESP/the CSP
Ce/Cc unit cost of the ESP/the CSP
Ve/Vc utility of the ESP/the CSP
1� h ESP’s expected transfer rate in the connected
mode
Emax total computing capacity of the standalone ESP
Dc average delay the CSP
N total number of miners
mi the ith miner
Ui/Wi/Bi mi’s utility/winning probability/budget
ei/ci number of ESP/CSP units requested bymi
ri mi’s request vector to the SPs, in the form of
½ei; ci�
rr stacked request vectors of all miners
rr�i stacked request vectors of all miners excluding
mi’s
R blockchain mining reward
b discount rate caused by delay
2060 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 21, NO. 6, JUNE 2022
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
the leaders (SPs) nor the followers (miners) have incentives
to deviate, we need to find its subgame perfect Nash equi-
libria (NE) in both the leader stage and the follower stage,
by applying backward induction. Formally, the SE point(s)
is defined as follows.
Definition 1. Let ½EE�; CC�� and ½P �e ; P �c � denote the optimal
resource request vector of all miners and the optimal computing
unit price vector of SPs, respectively. Let ½e�i ; c�i �Ni¼1 ¼ ½EE�; CC��,
then the point (EE�; CC�; P �e ; P
�
c ) is the Stackelberg equilibrium if
the following conditions hold:
VeðP �e ; EE�Þ � VeðPe; EE
�Þ; 8Pe; (3a)
VcðP �c ; CC�Þ � VcðPc; CC
�Þ; 8Pc; (3b)
Uiðe�i ; c�i ; P �e ; P �c Þ � Uiðei; ci; P �e ; P �c Þ; 8i: (3c)
4 A MINER’S WINNING PROBABILITY
4.1 Parameter Analysis
As the core part of each miner mi’s utility, Wi is deter-
mined by multiple parameters. To win mining rewards,
mi has to be the first to solve its PoW puzzle and propagate
its block to reach consensus. The chance for mi to find a
PoW solution is positively correlated to its relative com-
puting power, which is the ratio of mi’s computing power
out of all computing power in the network. There is a
delay for a mined block to be known by the entire network.
During the delay period, another conflicting block may be
found and propagates in the network as well. An earlier-
mined block can be nullified since its conflicting block
may reach consensus faster. Generally, delays may cause
the occurrence of conflicting blocks, and then lower the
probability of a mined block being accepted by the block-
chain. Obviously, Wi is discounted by delays. The relation
between the probability of block collision and the delay
has been studied in Bitcoin [1], a classic PoW-based block-
chain application. Fig. 3a provides its block collision prob-
ability density function (PDF) with respect to the
communication delay, which is subject to an exponential
distribution. Thereby, the discount rate, i.e., the block colli-
sion cumulative distribution function (CDF), is almost lin-
ear to the communication delay, as shown in Fig. 3b. In
this paper, we assume that the proposed network follows
the same pattern of collision PDF and CDF as in Bitcoin.
For simplicity, we ignore the block propagation time
among all miners. Thus, the delay is from the communica-
tion time between a miner and an SP. We denote mi’s win-
ning probability will be affected by the a delay discount
function, denoting b. Given the closeness of the ESP, we
only consider the miner communication delay to the CSP,
denoting Dc that incurs a discount rate of b (short for
bðDcÞ).
4.2 Expression of Individual Winning Probability
In this part, we will derive an expression of Wi under
the assumption that each miner mi’s request, denoted by
a vector ri ¼ ½ei; ci�, is fully satisfied at the SP side. Let
rr , r1; r2; . . . ; rNf g and rr�i represent the request profile of
all miners and all other miners except mi, respectively.
We denote E in Eq. (2a) and C in Eq. (2b) as the total
number of computing units requested on the ESP and
the CSP, respectively. S¼EþC therefore represents the
total requested computing units in the network. The win-
ning probability, in the form of Wi ¼We
i þWc
i , consists
of two parts, We
i and Wc
i , jointly contributed by the ESP
and the CSP, where We
i and Wc
i are functions of ri and
rr�i given below:
We
i ðri; rr�iÞ ¼ ei=S þ ei
X
j6¼i bcj=ES; (4)
Wc
i ðri; rr�iÞ ¼ ci=S � ci
X
j 6¼i bej=ES: (5)
We begin with the analysis onWc
i .
� Wc
i : ci=S represents the expected chance that mi
mines a cloud-solved block b. Now we discuss the proba-
bility that b is discarded before it reaches consensus.
With a chance of b, a conflicting block b0 would be found
during the propagation time Dc. A cloud-solved b0 has
the same propagation time Dc and thus cannot beat b.
However, b will be discarded if b0 is found in the edge
and hence reaches consensus immediately. Wc
i in Eq. (5)
characterizes the fact that, the probability of a successful
cloud mining is discounted by the chance that the mined
block is discarded due to any conflicting edge-solved
block. Here, ej=E approximates the rate that b0 is mined
in the edge by another miner mk. We don’t consider the
situation, where b0 is an edge-solved block for mi itself,
as a discount factor, since mi still wins.
� We
i : mi’s winning probability of edge mining is the
addition of (i) the chance that mi is the first to successfully
mine a block using its edge computing power, expressed as
ei=S and (ii) a summed chance that mi’s edge-solved block
surpasses a cloud-solved block mined by any other miner
mk. The expression is shown in Eq. (4).
We verify the validity of Wi as a probability mass
function.
Theorem 1. Wi¼We
i þWc
i is a valid probability mass function
to express the winning probability of individual miners in a
mobile blockchain mining network.
Proof. We present the full verification process by checking
that
PN
i¼1 Wi ¼ 1 holds
Fig. 3. Communication delay can cause temporary blockchain splits.
JIANG ET AL.: MULTI-LEADER MULTI-FOLLOWER STACKELBERG GAME IN MOBILE BLOCKCHAIN MINING 2061
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
XN
i¼1 Wi ¼
XN
i¼1ðW
e
i þWc
i Þ
¼
XN
i¼1 ei=Sþci=S½ �
þ b
XN
i¼1 eiðC�ciÞ=ES þ ciðE�eiÞ=ES½ �
¼ 1þb
XN
i¼1ðeiC�ciEÞ=ES ¼ 1:
tu
Thus, we are now ready to conclude that, the winning
probability we use is valid, hence our model as well.
4.3 User Requests and SP Responses
All above analysis is based on the assumption that mi’s
request ri is responded to by the ESP and the CSP as what it
expects, i.e., if ri is fully satisfied by the ESP and the CSP as
its original form ½ei; ci�, the individual winning probability
on this condition is denoted byWh
i and shown in Eq. (6)
Wh
i ¼ ðei þ ciÞ=S þ bðeiC � ciEÞ=ES: (6)
However, this assumption cannot always hold when we
take the ESP’s capability into consideration. It is possible
that overall requests from the miner side are beyond the
ESP’s computing capability. We refine the individual win-
ning probability based on whether ei can be satisfied by the
ESP. Now we discuss how ri will be responded to if ei is
beyond the ESP’s capability, in connected mode and in
standalone mode, respectively. We denote the correspond-
ing winning probability byW 1�h
i .
4.3.1 Failure in Connected Mode
In this case, ei would be transferred from the ESP to the
CSP, and therefore, ri is degraded as ½0; ei þ ci�. The total
computing power in the network stays unchanged as S,
while E � ei and C þ ei represent the actual resource alloca-
tion by the ESP and the CSP, respectively. Eq. (7) gives the
winning probability
W 1�h
i ¼ ð1� bÞðei þ ciÞ=S: (7)
4.3.2 Failure in Standalone Mode
Since ei would be rejected by the ESP, ri is degraded as ½0; ci�.
Thus, the total computing power of edge computing and that
in the network are reduced to E � ei and S � ei, respectively.
Eq. (8) gives the correspondingwinning probability
W 1�h
i ¼ ð1� bÞci=ðS � eiÞ: (8)
5 FIXED MINER NUMBER SCENARIO
In the fixed miner number scenario, we assume that the net-
work contains a fixed set of miners. That is, the number of
miners is modeled as a constant, i.e., N , n. We consider
two edge computing operation modes: connected and
standalone. We apply backward induction to analyze the
subgame perfect NE in each stage for both modes. In the
connected mode, the uniqueness of the SE is validated by
identifying the best response strategies of the miners. In the
standalone mode, the existence of the SE is proved by capi-
talizing on the variational inequality theory. Then, we get
the closed-form price and resource allocation solutions to a
special homogeneous-miner case for both modes. Besides,
we compare the profits at the SP side and the miner side in
these two modes.
5.1 Connected Mode
In this mode, the ESP’s limited computing capability is char-
acterized by the ESP’s expected transfer rate ð1� hÞ.
5.1.1 Miner Subgame Equilibrium
Consequently, mi should consider two possible results: (i)
with a probability of h, its request on the ESP is satisfied; (ii)
with a probability of ð1� hÞ, its request on the ESP is auto-
matically transferred to the CSP with a degraded service.
Thus,Wi can reflect these two results by applying the law of
total expectation as below:
Wi ¼ h �Wh
i þ ð1� hÞ �W 1�h
i
¼ h � ðei þ ciÞ=S þ b � ðeiC � ciEÞ=ES½ �
þ ð1� hÞ � ð1� bÞðei þ ciÞ=S
¼ ð1� bÞðei þ ciÞ=S þ bhei=E;
(9)
then the OPMINER problem can be concreted as below.
Problem 1a (MINER SUBGAME: NEPMINER).
maximize Ui ¼ R �Wi � Pe � ei þ Pc � cið Þ; (10a)
subject to Pe � ei þ Pc � ci � Bi; ei � 0; ci � 0;
(10b)
whereWi ¼ ð1� bÞðei þ ciÞ=S þ bhei=E.
Thus, the existence and uniqueness of an NE of this
miner subgame is given by the following theorem.
Theorem 2. A unique Nash equilibrium exists in NEPMINER.
Proof. Denote the equivalent variational inequality (VI)
problem VIðK;FÞ 	 NEP ðX ; UÞ, where
F :¼ ðriUiÞni¼1; X ¼ ð½ei; ci�Þni¼1; U ¼ ðUiÞni¼1;
K :¼ K1 
K2 
 � � � 
 Kn;
Ki :¼ fðei; ciÞjPe � ei þ Pc � ci � Bi; ei � 0; ci � 0g:
(11)
Obviously, (i) Ki is closed and convex, 8i and (ii) Ui is
continuously differentiable and convex w.r.t. ½ei; ci�, 8i,
then the VI problem has a non-empty solution set. The
existence of NE thus follows the sufficient conditions.
Further details and the proof of its uniqueness can be
found in Section 5.1.2. tu
As a rational player, each miner optimizes its utility by
solving the NEPMINER problem as follows. Using Lagrange’s
multipliers �1, �2, and �3 for the constraints in Eq. (1e), the
optimization problem is thus converted to the form
Li ¼ R � ½ð1� bÞðei þ ciÞ=S þ bhei=E� � ðPe � ei þ Pc � ciÞ
� �1ðPe � ei þ Pc � ci �BiÞ þ �2ei þ �3ci;
(12)
2062 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 21, NO. 6, JUNE 2022
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
and the complementary slackness conditions are
�1ðPe � ei þ Pc � ci �BiÞ ¼ 0;
�2ei ¼ 0; �3ci ¼ 0; �1 > 0; �2; �3; ei; ci � 0:
(13)
By the first-order optimality condition rLi ¼ 0, it immedi-
ately follows that �2 ¼ �3 ¼ 0. Thus
ei¼
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
hbE�iR
ð1þ �1ÞðPe � PcÞ
s
�E�i;
ci¼
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
Rð1�bÞðE�iþC�iÞ
ð1þ�1ÞPc
s
�
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
hbE�iR
ð1þ�1ÞðPe�PcÞ
s
�C�i;
Bi ¼ Peei þ Pcci; where E�i¼
X
j 6¼i ej; C�i¼
X
j6¼i cj:
(14)
Solving Eq. (14) yields that
1þ �1 ¼ ðPe�PcÞs1
ffiffiffiffiffiffiffiffi
E�i
p þPcs2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
E�iþC�i
p
BiþPcC�iþPeE�i
� �2
; (15)
where: s2
1 ¼ hbR=ðPe � PcÞ and s2
2 ¼ ð1� bÞR=Pc. Hence
substituting Eq. (15) back into Eq. (14) gives the explicit
form of the solution to the NEPMINER problem, i.e., each
miner’s best response strategy. This naturally gives a dis-
tributed iterative algorithm, allowing each miner to itera-
tively update its strategy, given the strategies of other
miners. When this unique subgame NE is ensured, the algo-
rithm’s convergence is also guaranteed. The uniqueness of
NE in NEPMINER is guaranteed given that F defined in
Eq. (17) is strictly monotone.
5.1.2 Proof of Theorem 2
Given the well-formed formulas defined in Problem 1a, we
provide full explanations and details for Theorem 2.
First we recap the problem as follows:
Problem 1a (MINER SUB-GAME: NEPMINER).
maximize Ui ¼ R �Wi � Pe � ei þ Pc � cið Þ; (16a)
subject to Pe � ei þ Pc � ci � Bi; ei � 0; ci � 0; (16b)
whereWi ¼ ð1� bÞðei þ ciÞ=S þ bhei=E.
W.T.S.: A unique Nash equilibrium exists in NEPminer.
Proof. First we show the existence of NE.
Claim 1: There is at least one NE for Problem 10.
We leverage variational inequality (VI) theory by
reformulating the NEP, i.e., NE(s) exist if the equivalent
VI problem has a nonempty solution set. Denote VIðK;
FÞ 	 NEP ðX ; UÞ, where
F :¼ ðriUiÞni¼1; X ¼ ð½ei; ci�Þni¼1; U ¼ ðUiÞni¼1;
K :¼ K1 
K2 
 � � � 
 Kn;
Ki :¼ fðei; ciÞjPe � ei þ Pc � ci � Bi; ei � 0; ci � 0g:
(17)
Since Ki is closed and bounded, 8i, then the compactness
of K immediately follows. The convexity of K is trivial by
the linearity. Then it suffices to show that Ui is conti-
nously differentiable and convex w.r.t. ½ei; ci� 2 Ki; 8i.
DenoteHi for the Hessian matrix of Ui as below:
H :¼ Ui
ee Ui
ec
Ui
ce Ui
cc
� �
; (18)
where
Ui
ee ¼
@2Ui
@e2i
; Ui
ec ¼
@2Ui
@ei@ci
; Ui
ce ¼
@2Ui
@ci@ei
; Ui
cc ¼
@2Ui
@c2i
:
We provide the explicit-form expressions of the Hes-
sian elements as follows:
Ui
ee ¼� ðRð1� bÞ=S2 þ bh=E2Þ � ðRð1� bÞ=S2 þ bh=E2Þ
þ ðRð1� bÞ=S þ 2bh=E � PeÞ � ðbh=E3 �Rð1� bÞ=S3Þ;
Ui
ec ¼Rð1� bÞ=S � ðRð1� bÞ=S2 þ bh=E2Þ
þ 2ðRð1� bÞ=S þ bh=E � PeÞRð1� bÞ=S3
� ðRð1� bÞ=S2 � 2Rð1� bÞ=S3 � ciÞ;
Ui
ce ¼ð�Rð1� bÞ=S2 �Rð1� bÞ=S3 � eiÞ
þ ð�Rð1� bÞ=S3 þ 2Rð1� bÞ=S3 � ciÞ;
Ui
cc ¼2Rð1� bÞ=S3 � ei � 2ðRð1� bÞ=S2 �Rð1� bÞ=S3 � ciÞ:
Since detðHÞ ¼ Ui
ee � Ui
cc � Ui
ec � Ui
ce > 0, 8½ei; ci� 2 Ki,
and the positive definiteness holds for any i. Therefore
VIðK;FÞ is equivalent with NEP ðX ; UÞ and has a non-
empty solution set, we thus prove that Claim 1 is legiti-
mate. Then we finish the proof for the uniqueness of NE.
Claim 2: There is at most one NE for Problem 10.
To show the uniqueness of the NE point, we first
introduce the matrices J low, defined as
½J low�ij :¼ inf
x2K
jr2
iiUij; if i ¼ j;
� 1
2 ðjr2
ijUij þ jr2
jiUjjÞ; else:
�
(21)
We prove the uniqueness of NE solution by showing
that J low is a strictly copositive matrix. We first give the
explicit-form expression ofr2
iiUi andr2
ijUi as follows:
r2
iiUi ¼ Ui
ee þ Ui
cc (22a)
¼R½�8ð1�bÞðS�ei�ciÞ=S3��2bðE�eiÞ=E3;
r2
ijUi ¼r2
jiUj
¼Rð1� bÞ½1� 2ðS � ei � ciÞ�=S2 þ hbð2ei � EÞ=E3:
(22b)
W.L.O.G. we show that the second-order J low is
strictly copositive, the uniqueness of the solution to gen-
eralized cases can be simply proved using induction, due
to the repetitive pattern of the objective function Ui.
Thus, J low can be written into the form
J low ¼ a11 a12
a12 a22
� �
; (23)
a11 ¼ inf
ðe1;c1Þ2K
jr2
11U1j; a22 ¼ inf
ðe2;c2Þ2K
jr2
22U2j; (24)
JIANG ET AL.: MULTI-LEADER MULTI-FOLLOWER STACKELBERG GAME IN MOBILE BLOCKCHAIN MINING 2063
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
a12 ¼ � 1
2
� �
inf
ðe2;c2Þ2K
ðe1;c1Þ2K
ðjr2
12U1j þ jr2
21U2jÞ: (25)
Then it suffices to show that a11; a22 � 0 and a12 þffiffiffiffiffiffiffiffiffiffiffiffiffi
a11a22
p
> 0, where the non-negativity of the first two
terms are trivial
a12 þ ffiffiffiffiffiffiffiffiffiffiffiffiffi
a11a22
p ¼ inf
ðe2;c2Þ2K
ðe1;c1Þ2K
Rð1� bÞ½1� 2ðS � ei � ciÞ�=S2
þ hbð2ei �EÞ=E3
� 8ð1� bÞ
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiY
i¼1;2
ðS � ei � ciÞ
s
=S3 > 0:
Then J low is strictly copositive as shown above. Since we
have shown that F is continuously differentiable with the
derivatives bounded on K (as the derivatives are all lin-
ear on the compact solution space K), F is strictly mono-
tone. Therefore NEP has at most one solution.
We conclude our proof since the uniqueness of NE
immediately follows combining Claim 1 and Claim 2. tu
5.1.3 SP Subgame Equilibrium
With the knowledge of the miners’ strategies, each SP
makes its decision by solving the NEPSP defined below.
Problem 2a (SP SUBGAME: NEP SP).
maximize Ve ¼ ðPe � CeÞ � E where E ¼
Xn
i¼1 ei;
(26a)
maximize Vc ¼ ðPc � CcÞ � C where C ¼
Xn
i¼1 ci:
(26b)
5.1.4 Stackelberg Equilibrium in Connected Mode
We take advantage of a distributed algorithm called Asyn-
chronous Best-response, as is shown in Algorithm 1, to find
the unique NE point in OPSP defined in Problem 2. The sol-
ution’s uniqueness further guarantees the global conver-
gence and SE is achieved, given that NE is found in the
leader stage.
5.2 Homogeneous Miners With Identical Budgets
The solutions to the NEPMINER are infeasible to express in a
symbolic manner. Fortunately, we are able to get the closed-
form computation offloading solutions for the NEPMINER in a
special case. We consider a homogeneous-miner case where
eachminer is homogeneouswith an identical budgetB. We are
interested in finding an NE where miners decide on a mixed
request, buying computing units from both the ESP and the
CSP. Thus, constraint (16b) is modified as ei > 0, ci > 0. The
corresponding miner side optimization problem can be rewrit-
ten as theNEPHOMOMINER problem in the following.
Problem 1b (MINER SUBGAME: NEPHOMOMINER).
maximize Ui ¼ R �Wi � Pe � ei þ Pc � cið Þ; (27a)
subject to Pe � ei þ Pc � ci � B; ei > 0; ci > 0;
(27b)
whereWi ¼ ðei þ ciÞ=S þ b � ðeiC � ciEÞ=ðESÞ:
We will provide the explicit-form expression or the pric-
ing strategy for the homogeneous-miner case defined above
in Problem (8).
Theorem 3. The unique Nash equilibrium for miner mi in the
NEPhomominer problem is given below:
e�i ¼ Bbh
ð1�bþhbÞðPe�PcÞ ;
c�i ¼ B ð1�bÞðPe�PcÞ�Pcbh½ �
Pcð1�bþhbÞðPe�PcÞ ;
(
(28)
provided that the prices set by the ESP and the CSP satisfy
Pc < 1�b
1�bþhbPe.
Proof. According to (13), we have E2 ¼ s2
1
P
j6¼i ej=ð1þ �1Þ
and S2 ¼ s2
2
P
j 6¼i ðej þ cjÞ=ð1þ �1Þ for each miner mi,
which will yield E2=S2 ¼ s2
1ðE � eiÞ=½s2
2ðS � ei � ciÞ�.
Then, we calculate the summation of this expression for
all the miners: E=S ¼ s2
1=s
2
2 ¼ ½hb=ð1� bÞ� � Pc=ðPe � PcÞ:
In order to get a mixed strategy, E=S > 1 must hold, i.e.,
Eq. (37) holds. Since all miners are homogeneous, their
best response strategies are identical as well, i.e., E ¼ nei
and S ¼ nðei þ ciÞ. By substituting these two equations
into Eq. (15), we obtain the NE for minermi in Eq. (28). tu
Algorithm 1. Asynchronous Best-Response Algorithm
Output: j; j 2 e; cf g
Input: Initialize k as 1 and randomly pick a feasible P
ð0Þ
j
1: for iteration k do
2: Receive the miners’ request vectors r k�1ð Þ
3: Predict the strategy of the other SP
4: Decide P
ðkÞ
j ¼ P
ðk�1Þ
j þD
@Vj Pj;P
k�1ð Þ
�j ;r k�1ð Þ
� 	
@Pj
5: if P
ðkÞ
j ¼P
ðk�1Þ
j then Stop
6: else send P
ðkÞ
j to miners and set k kþ 1
Corollary 1. If the budget B is sufficiently large, the explicit
solution to the NEPhomominer problem is shown in Eq. (40)
e�i ¼ bhRðN�1Þ
N2ðPe�PcÞ ;
c�i ¼ RðN�1Þ ð1�bÞPe�Pc½ �
N2PcðPe�PcÞ :
8<
: (29)
Now, we start to analyze the SP optimization problem,
which can be rewritten as follows.
Problem 2b (SP SUBGAME: NEP SPHOMOMINER
).
maximize Ve¼ðPe�CeÞ�e�i ; Vc¼ðPc�CcÞ�c�i ; (30a)
subject to Pc <
1� b
1� ð1� hÞbPe; (30b)
where e�i¼ Bbh
ð1�bþhbÞðPe�PcÞ , c
�
i¼B ð1�bÞðPe�PcÞ�Pcbh½ �
Pcð1�bþhbÞðPe�PcÞ :
Theorem 4. The unique Nash equilibrium for the SPs in the
NEPSPHOMOMINER
problem is given below:
2064 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 21, NO. 6, JUNE 2022
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
P �e ¼ �p;
P �c ¼ Cc�pð1�bÞ��p
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
Cchbð�p�CcÞð1�bÞ
p
½1�bð1�hÞ�Cc�bhPe ;
(
(31)
where �p is the solution to @Ve=@Pe ¼ 0.
Proof. We start with the optimal P �c by analyzing the con-
vexity of Vc. We calculate the first derivative of Vc and
find that it is a concave function. Thus, the CSP’s optimal
price value is the solution to @Vc=@Pc ¼ 0 where Pc <
Peð1� bÞ=½1� ð1� hÞb� and P �c is shown in Eq. (31), as is
a function dependent on Pe set by the ESP. Given the
response strategy of the CSP, the ESP can optimize his
payoff by maximizing the re-written Ve as below:
Ve ¼ NBbh
ð1� bþ hbÞðPe � P �c Þ
� ðPe � CeÞ: (32)
We calculate the second derivative of Ve and find that
@2Ve=@P
2
e � 0 holds for any valid Pe value. Thus, the ESP
has his dominant strategy P �e ¼ �p. In this situation, NE is
achieved in the leader stage. We analyze P �e and P �c and
find that they only depend on their own operating costs
Ce, Cc, and the network delay penalty factor b. tu
5.3 Standalone Mode
In standalone mode, the ESP only has a total of Emax com-
puting units, where Emax is a common knowledge in this
game. It has to reject some requests when overloaded. Thus,
the aggregate requests from all miners should be no more
than Emax to avoid being rejected.
Algorithm 2. Price Bargaining
Input: Choose any feasible starting point Pe; Pc
1: for each miner i do
2: Receive Pe, Pc
3: Predict the optimal requests of other miners
4: Decide its computing request ½ei; ci�T
5: Send ei to the ESP and send ci to the CSP
6: for each operator j, j 2 e; cf g do
7: Receive the optimal requests of miners
8: Store the current prices P
0
j and P
0
�j,
9: Increase decrease the price with a step D
10: if VjðP 0j ; P
0
�jÞ � VjðP 0jþD; P
0
�jÞ and
11: Vj P
0
j�D; P
0
�j
� 	
� Vj P
0
jþD; P
0
�j
� 	
12: then Pj ¼ P
0
j þ D
13: else if Vj P
0
j ; P
0
�j
� 	
� Vj P
0
j�D; P
0
�j
� 	
and
14: Vj P
0
jþD; P
0
�j
� 	
� Vj P
0
j � D; P
0
�j
� 	
15: then Pj ¼ P
0
j � D
16: else Pj ¼ P
0
j
17: Send Pj to miners
5.3.1 Subgame Equilibrium
In standalone mode, given other miners’ requests rr�i, mi
should ensure that ei can be satisfied by the ESP. Mathemati-
cally, this can be written as E ¼Pn
k¼1 ek � Emax. Under this
constraint, its winning probability is expressed in Eq. (33)
Wi ¼ ðei þ ciÞ=S þ bðeiC � ciEÞ=ES: (33)
Now, we reformulate the OPMINER problem in the below.
Problem 1c (MINER SUBGAME: GNEPMINER).
maximize Ui ¼ R �Wi � Pe � ei þ Pc � cið Þ; (34a)
subject to E � Emax; (34b)
Pe � ei þ Pc � ci � Bi; ei; ci � 0; (34c)
whereWi ¼ ðei þ ciÞ=S þ b � ðeiC � ciEÞ=ES.
Constraint (34b) ensures thatmi’s request to the ESP can be
satisfied. Since all miners’ requests are mutually dependent,
the GNEPMINER problem is a Generalized Nash Equilibrium
Problem (GNEP). In GNEPMINER, the dependence of each min-
er’s strategy set on the other miners’ strategies is represented
by the (linear) constraint (34b), which includes each miners’
request ei to the ESP. More specifically, since the miners all
share a jointly convex shared constraint (JCSC), this subgame is
known as a jointly convex game.GNEPMINER can be considered
as a special case ofNEPMINER, whereh ¼ 1 and ð1� hÞ ¼ 0 due
to the given constraint (34b).
5.3.2 Existence of Stackelberg Equilibria
Similar with the proof for NEPMINER NE in Theorem 2, the
existence of GNEPMINER NE is easily followed by capital-
izing on the variational inequality theory.
Theorem 5. Given a price set Pe; Pcf g from the SP side, there
exists at least one Nash equilibrium for the non-cooperative
subgame at miner side in standalone mode.
In general, a GNEP could have infinite solutions. Namely,
there are multiple NEs in the follower stage, and thus there is
no efficient algorithm to obtain the global optimal pricing and
computation offloading strategy for the proposed Stackelberg
game. Here, we provide a distributed algorithm which first
computes a unique variational solution to the GNEPMINER
problem and then finds the corresponding solution to the SP
SUBGAME: GNEPSP problem (defined later) based on the com-
puted miner Nash equilibrium. Note, there is no guarantee
that the SE produced byAlgorithm 2 is a global optima.
Problem 2c (SP SUBGAME: GNEP SP).
maximize Ve¼ðPe�CeÞ�E; Vc¼ðPc�CcÞ�C;
(35a)
subject to E ¼ Emax: (35b)
5.3.3 Homogeneous Miners With Sufficient Budgets
In standalone mode, solutions to the GNEPMINER are infeasible
to express in a symbolic manner. Fortunately, we are able to get
the closed-form computation offloading solutions for the
GNEPMINER in a special case. We consider a homogeneous-
miner case where eachminer is homogeneous with an identical
budget B. We assume B is quite large so that each miner’s cost
under optimal request is affordable. Under this assumption, the
constraint (34c) on budget GNEPMINER can be removed.We are
interested in finding aNash equilibriumwhereminers decide a
mixed request, buying computing units from the ESP and the
JIANG ET AL.: MULTI-LEADER MULTI-FOLLOWER STACKELBERG GAME IN MOBILE BLOCKCHAIN MINING 2065
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
CSP. Thus, constraint (34c) is modified as xi > 0; yi > 0.
The corresponding miner side optimization problem can be
rewritten as theGNEPHOMOMINER problem in the following.
Problem 1d (MINER SUB-GAME: GNEPHOMOMINER).
maximize Ui ¼ R �Wi � Pe � xi þ Pc � yið Þ (36a)
where Wi ¼ xi þ yi
S
þ b � xiC � yiE
SE
subject to E � Emax
(36b)
xi > 0; yi > 0: (36c)
To achieve such an equilibrium in the follower level, the
prices set by the ESP and the CSP matters. Then, the Eq. (37)
gives the relation between Pe and Pc under which all miners
will yield mixed requests
Pc < ð1� bÞPe
Pc < Pe � bRðN�1Þ
NEmax
�
: (37)
Given Pe and Pc satisfying the Eq. (37), we compute the
explicit expression of a miner’s request in Nash equilibrium,
as is shown in Eq. (38)
x ¼ bRðN�1Þ
N2ðPe�PcÞ
y ¼ RðN�1Þ ð1�bÞPe�Pc½ �
N2PcðPe�PcÞ
8<
: where Nx � Emax: (38)
There is a special case where all computing units of the ESP
are sold out, i.e., n � x ¼ Emax, by setting dedicate Pe if the
following holds:
Pe � bRðN�1Þ
EmaxN
< Pc < RðN�1Þð1�bÞ
NEmax
Pe < RðN�1Þ
NEmax
:
(
(39)
Then the corresponding equilibrium request of each homo-
geneous miner is captured by Eq. (40)
x ¼ Emax
N
y ¼ RðN�1Þð1�bÞ
N2Pc
� Emax
N
(
: (40)
Given the NE point at miner side, utilities of the ESP and
the CSP can be rewritten as follows:
Ve ¼ RðN � 1Þb
N
� Pe � Ce
Pe � Pc
(41)
Vc ¼ RðN � 1Þb
N
� Pc � Cc
Pc
� Peð1� bÞ � Pc
ðPe � PcÞ : (42)
Thus, the optimization problems for the ESP and the CSP
are in the below.
Problem 2d (SP SUBGAME: GNEPSPHOMOMINER
).
maximize Ve¼ðPe�CeÞ�E; Vc¼ðPc�CcÞ�C; (43a)
subject to E ¼ Emax: (43b)
The Nash equilibrium in the leader level can be captured
by the following equation:
Pe ¼ bRðN�1Þh
N2 ðPe�PcÞhþPeð1�hÞ½ �
Pc ¼ CcPeð1�bÞ�Pe
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
CcbðPe�CcÞð1�bÞ
p
Cc�bPe
8<
: : (44)
5.4 Comparison of Two Modes
We sum up the main results by comparing these two modes
in a homogeneous-miner case. The explicit expressions of all
miners’ requests in equilibrium are summarized in Table 2,
where g ¼ ðN�1ÞRN . As can be explicitly seen in Table 2, the
amount of all miners’ requests is identical in these two
modes, given the same pricing of the CSP. Thus, the total
requested computing units is only related to Pc. That is, pric-
ing of the CSP decides the upper bound of the P2P network
computing power. Since h � 1, the ESP would sell more
units in standalone mode than in connected mode. Thus,
connected mode maximizes the profits of the CSP and also
lowers the cost at miner side, while standalone mode maxi-
mizes the ESP. The numerical results provided in Section 7
also show that the ESP’s equilibrium prices in the standalone
mode is higher compared to those in the connected mode.
Thus, we conclude that the ESP in the standalonemode gains
more profits.
6 DYNAMIC MINER NUMBER SCENARIO
Obviously, in the above analysis, we assume the miner
number N is common knowledge in the proposed games.
In practice, this scenario is applicable to permissioned
blockchains, where miners are pre-selected by a central
authority or consortium. However, most blockchains are
permissionless, in which anyone can participate in or retreat
from the mining process, so the previous scenario may not
be suitable. For such situations, we consider a more general
scenario by introducing population uncertainty. Games
with population uncertainty relax the assumption that the
exact number of players is common knowledge. Thus, we
model the miner number, N , as a random variable. In par-
ticular, N follows a Gaussian distribution with mean m and
variance s2. We have N � Nðm; s2Þ where N ¼ k with
probability P ðkÞ ¼ FðkÞ �Fðk� 1Þ. Fig. 4 gives a toy exam-
ple where the number of miner can be fit to a Gaussian dis-
tribution with m ¼ 10 and s2 ¼ 4.
In this scenario, we only consider standalone mode and
derive the miner utility function Ui as below:
Uiðm; s2Þ ¼ 0:5 � Uh
i þ 0:5 � U1�h
i
Uh
i ¼ Pe � ei þ Pc � ci �R �Wh
i
U1�h
i ¼ Pe � ei þ Pc � ci �R �W 1�h
i
Wh
i ¼
Xu
k¼l P ðkÞ ðeiþciÞ=SkþbðeiCk�ciEkÞ=ðSkEkÞ½ �
W 1�h
i ¼ ð1�bÞðeiþciÞ=Sm
Sk ¼ EkþCk;Ek ¼
Xk
j¼1 ej;
Cn ¼
Xk
j¼1 cj; 8k 2 ½l; u�:
(45)
2066 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 21, NO. 6, JUNE 2022
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
Thus, the OPMINER problem in this scenario can be refor-
mulated as in Eq. (46).
Problem 1e (MINER SUBGAME: OPDYNAMICMINER).
maximize Uiðm; s2Þ (46a)
subject to Pe � ei þ Pc � ci � Bi; ei � 0; ci � 0:
(46b)
Problem 2e (SP SUBGAME: OPSP).
maximize Ve¼ðPe�CeÞ�E; Vc¼ðPc�CcÞ�C: (47)
The objective function presented in Eq. (46) is so complex
that it is infeasible to express its equilibrium expression in a
symbolic manner. Therefore, we use numerical analysis to
find equilibria in the network. As numerical results will later
show in Section 7, we find that with an identical Pe, the uncer-
tainty incurred by the dynamic population renders miners
more aggressive to buy computing units from the ESP, even
beyond its capability Emax. Besides, given the same price Pc
from the CSP, we find, in expectation, the total computing
units requested by the network are identical with that
requested by a networkwith exactlymminers.
7 SIMULATION
In this section, we first conduct testbed experiments to verify
the practicality of our proposedwinning probability function.
Then, numerical examples are provided to examine howmin-
ers figure out their optimal requests based on the prices of the
SPs and how the SPs optimize their unit prices based on their
available power and the miners’ budgets. We assume the
blockchain mining rewardR is fixed as 5000. And we assume
that, in connected mode, the ESP’s expected transfer rate 1�
h ¼ 0:1 is a common knowledge amongminers, and in stand-
alone mode, the ESP’s resource capacity Emax ¼ 800 is also
known by all miners. The communication delay Dc between
the CSP andminers implicitly implies the value of blockchain
fork rate b, as b is linear withDc. Whenwemention the prices
set by the SPs, no matter whether they are optimized or not,
Pe > Ce andPc > Cc always hold.
7.1 Practicality of Winning Probability Function
The most important part is to validate whether our pro-
posed winning probability function is in line with the reality
since it is the basis of our paper. To confirm its practicality,
we show the show successful PoW-based blockchain mining
using our own devices to serving as the CSP and the ESP.
We assume there are 5 miners in total and Table 3 shows
their mining power (the values of x and y just reflect the
ratio rather than the exact assigned computing power). The
detailed simulation is described as below. We implement a
Bitcoin mining algorithm in python. We start 10 processes
running this algorithm in parallel. Each miner is bound
with two processes and the computing power are allocated
to each process according to Table 3. To model the CSP, we
set a waiting time so that the communication for the value
broadcast among all processes will be delayed in 10 seconds
if a qualified value is found by a certain CSP process. We
run the simulation for 720 times (roughly as Bitcoin mining
in 5 days) and show how many times a miner wins in
Table 3. We calculate each miner’s actual winning probabil-
ity. For each winning probability, we apply it into Eqs. (4)
and (5) and get a value of b. The calculated values of b are
quite close to 0.07.
Based on the data provided in the above, we can con-
clude it is feasible for miners using our proposed function
to estimate his winning probability for computing offload-
ing. On this basis, we further conduct experiments to con-
firm our theoretical analysis.
7.2 Miner Subgame Equilibrium
Our experiments evaluate how the corresponding miner sub-
game Nash equilibrium is influenced if the parameter values
change. We start with a small mobile blockchain mining net-
workwith only 5minerswith budgetsBi; 8i 2 ½1; 5�.
7.2.1 Influences From SP Side
We first consider the different prices at SP side. Assuming a
homogeneous-miner case in the connected mode, where
Bi ¼ 200; 8i 2 ½1; 5� holds, Fig. 5 obviously reflects that, if
the CSP’s price Pc unilaterally increases, miners tend to buy
more units from the ESP, leading to more revenue at the
ESP side. Similarly, from Fig. 5, we can also conclude that
the blockchain fork rate b caused by the CSP’s communica-
tion delay also has a negative effect on the number of total
units sold by the CSP as well as his total revenue. However,
from Fig. 6c, we find the total revenue at the SP side remains
Fig. 4. A toy example for population dynamics of moblie miners.
TABLE 2
Optimal Requests of Homogeneous Miners With Sufficiently
Large Budgets Where g ¼ ðN � 1ÞR=N
Mode E� C� S�
Connected gb
Pe�Pc h g
ð1�bÞPe�Pc
PcðPe�PcÞ þ
bð1�hÞ
Pe�Pc
h i
gð1�bÞ
Pc
Standalone gb
Pe�Pc g
ð1�bÞPe�Pc
PcðPe�PcÞ
gð1�bÞ
Pc
TABLE 3
Miner Power, Actual Winning Times, and the
Corresponding Winning Probability
Miner x y Times of Winning Probability
m1 5 10 116 16.1%
m2 12 5 141 19.6%
m3 9 9 143 19.9%
m4 1 20 158 21.9%
m5 18 1 162 22.5%
JIANG ET AL.: MULTI-LEADER MULTI-FOLLOWER STACKELBERG GAME IN MOBILE BLOCKCHAIN MINING 2067
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
almost unchanged no matter how prices and communica-
tion delay change. In the same miner configuration, we ana-
lyze the impact of edge operation modes. If the ESP
operates in the standalone mode, we see its computing
capability is positively related to miners’ requests, which
can be easily followed in Fig. 7. From this figure, we can
conclude that, miners are discouraged from buying units
from an ESP working in the connected mode. We see a cross
in the Fig. 7. This explains the CSP’s optimal prices under
different communication delays. The longer the communi-
cation delay, the lower the optimal price.
7.2.2 Influences at Miner Side
Miners also mutually affect each other in this mining net-
work. Fig. 8 shows the changes on all the miners’ utilities
when their budget of Bi varies from 20 to 200. mi’s requests
to the ESP and the CSP keep increasing and its utility fol-
lows a similar trend. However, we can see that m1’s total
requests to both SPs are similar even with different commu-
nication delays at the CSP side.
7.3 SP Subgame
We also study how communication delay and edge opera-
tion modes as well as the SP’s operating costs affect their
equilibrium prices. Fig. 9 depicts the equilibrium prices of
the SPs. The ESP’s prices increase linearly as its unit operat-
ing cost increases. In both modes, the ESP charges a higher
price, because it has less power available and its communi-
cation delay is 0 in the proposed network. However, its
advantage will be shaded if the communication delay at the
CSP side decreases. Besides, the ESP’s computation limita-
tion also poses an upper bound on its profits. We also dis-
cover that the standalone mode allows the ESP a higher
price while it decreases the CSP’s price and its profits.
According to numerous experiments, we find that the
total amounts of sold-out computing units are always
approximately equal, if we allow a sufficiently large budget
and a fixed number of miners. Besides, we can see that the
SP-side welfare is bounded by the total miner budgets in
the beginning. However, as the budgets increase to a certain
degree, the total welfare of these two SPs are positively
related to the mining reward.
7.4 Population Uncertainty
In Section 6, we consider the miner number as a variable sub-
ject to a specific Gaussian distribution. To capture the dynam-
ics of the miner number, we use a reinforcement learning (RL)
framework to allowminers to learn the population uncertainty
and hence improve their strategies.We conduct our simulation
within a small mining network of 5 homogeneous miners. We
define a time period T as adding 50 blocks. During T , prices
from these two SPs are fixed and the miner number changes
subject to Nðm; s2Þ. The reason why we choose T ¼ 50 in our
all experiments is thatminers’ strategies converge after at most
50 blocks added even in such an unstable-population mining
network. Once the miners’ behavior converges, both the ESP
and the CSP update their pricing strategies adaptively. These
two steps repeat until a fixed point for both sides is reached.
We also apply such a process to a fixed number scenariowhere
N ¼ m.
In Fig. 10, all unfilled points are the results produced by
the RL framework, while all lines are computed using our
proposed model. The results of our model are anastomotic
with the learned strategies. In Fig. 10a, we conclude that the
uncertainty caused by the miner number renders each
Fig. 5. Homogeneous miners with identical budgets and Pe ¼ 5.
Fig. 6. Homogeneous miners with identical budgets and Pe ¼ 5.
Fig. 7. Connected versus Standalone.
2068 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 21, NO. 6, JUNE 2022
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
miner to buy more units from the ESP, making the total
requests sometimes can exceed the ESP’s capability. Besides,
we also find the variance also affects a miner’s request to
the ESP, i.e., a larger variance leads to a more ESP-prone
miner, according to Fig. 10b, where Nð5; 0:25Þ represents a
normal distribution of which the mean is 5 and the variance
is 0.25.
8 EXTENDED LEADER STAGE WITH SINGLE CSP
AND MULTIPLE ESPS
Our previous discussion focuses on a simplified leader set-
ting with a single ESP. In reality, instead of being under con-
trol in a certain place, edge resources should be deployed
dispersedly and pervasively in order to provide mobile
users with low-latency services. In this section, we extend
our base model by considering multiple ESPs indepen-
dently deploying their own edge computing data centers.
There are M ESPs in total and each is denoted as ESPp.
Each ESPp has its own resource capacity Ek
max and unit
price Pp
e . We assume that each miner mi has a preferred
ESPp to which mi always sends requests. When ESPp is
overloaded, it may have two choices. If there exists some
ESPq that has idle resources and is willing to help ESPp by
offering an assisting price, denoting Pqp
e , which is lower
than Pp
e , then ESPp can sendmi’s request to ESPq by paying
ESPq P
qp
e for each unit, so thatmi still enjoys zero-delay ser-
vice while ESPp also earns money with the unit profit of
Pp
e � Pqp
e . Otherwise, ESPp will transfer mi’s request to the
CSP in the connected mode, or reject mi’s request in the
standalone mode. (It is possible that ESPp may turn to sev-
eral ESPs for help.) In this case, edge computing resources
can be fully utilized and miners have high chance to access
to high-speed services.
We can consider that ESPs pool their resources together
to jointly serve N miners. Thus, those M ESPs forms a coa-
lition. To keep the coalition stable, the assisting price
between any mutual-assisting pair is quite important.
Instead of calculating Pp
e � Pqp
e for each mutual-assisting
pair ESPq and ESPp, we apply cooperative game theory to
distribute total revenues among all ESPs. On the premise
that the ESP set is not partitioned, the Shapley value is
popularly used as a fair distribution of the grand coali-
tion’s worth to individual ESPs.
9 RELATED WORK
9.1 Mobile Blockchain Applications
There exist two different categories of research in the field of
blockchain applications in wireless networks. The first cate-
gory focuses on blockchain protocols [4], [5], [6], [7], [8], [9],
[10] to eliminate overhead while maintaining most of block-
chain’s security and privacy. These research works are ben-
eficial for secure and decentralized data communication in
wireless networks. Instead of designing and implementing
light-weight blockchain-based protocols, the second cate-
gory [11], [12], [13], [14], [15], [16], [17] investigates pricing
and resource management schemes for supporting block-
chain applications in a mobile environment. The focus here
is on the mining under the PoW consensus [1], which results
in the competition among miners to receive a mining
reward. Due to limited computing resources of their mobile
terminals, miners offload the PoW computations to local
edge servers [11], [12]. In this paper, we also study the prob-
lem of pricing and computation offloading in mobile block-
chain mining under the PoW consensus. However, we
consider a more complicated assumption in which miners
can perform a two-layer computation offloading to either/
both of the ESP and the CSP.
9.2 Cloud Computing and Edge Computing
Cloud computing is becoming the platform of choice for a
number of applications due to the advantages of high comput-
ing power, low service cost, high scalability, accessibility, and
availability. Meanwhile, the success of the Internet of Things
and rich cloud services have helped create the need for edge
computing, in which data processing occurs in part at the
Fig. 8.mi’s budget B1 varies from 20 to 200, with 5 miners in total.
Fig. 9. The CSP’s unit cost is 0.5, while the ESP’s unit cost changes. Fig. 10. Miner number: fixed versus dynamic.
JIANG ET AL.: MULTI-LEADER MULTI-FOLLOWER STACKELBERG GAME IN MOBILE BLOCKCHAIN MINING 2069
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
network edge, rather than completely in the cloud. Edge com-
puting could address concerns such as latency, mobile
devices’ limited battery life, bandwidth costs, security, and
privacy. Computation offloading happens in both CC [18],
[19] and EC [20], [21], which concerns what/when/how to
offload users’ workload from their devices to the edge servers
or the cloud. One common use case on the EC exploitation is
for IoT purposes [22], [23], [24].
9.3 Stackelberg Game in Offloading Mechanism
Stackelberg Game is a widely-used model in the field of
offloading mechanisms. A large body of existing literature
[25], [26], [27], [28], [29], [30], [31], [32] focuses on mini-
mizing offloading users’ computation overhead in terms
of energy and latency. To this end, researchers have
developed distributed decision making methodologies. In
the field of mobile blockchain mining offloading [11],
[12], [33], there are few works and most of them are in
the single-leader scenario where mobile miners only off-
load their computation to an SP, e.g., fog. In our paper,
we consider a multi-leader multi-follower Stackelberg
game to jointly maximize the profit of the SPs and the
individual utilities of mobile miners. We assume a
resource-limited edge layer working in either stand-alone
or connected operation mode with the cloud layer. In this
paper, we study the miner subgame as an N-player Nash
game. In reality, the number of miners is large, and
modeling interactions between SPs and individual miners
is difficult. Meanwhile, the miner set is also not fixed in
the real-world, indicating that the value of N as well as
the mining power in the entire network changes over
time. To efficiently find the optimal prices for SPs, we can
apply the mean field game theory and reduce a large
number of miners to a single mean-field miner. We con-
sider this extension as one of our future works.
9.4 Reinforcement Learning in Incomplete
Information Game
Although analysis in game theory always assumes the
observable strategies of other players [33,34], in reality, it is
more realistic that a player’s action is the private informa-
tion which is unobservable or partially observable by
others. Meanwhile, each player’s utility function combined
with constraints also cannot be fully observed by others.
Given this incomplete information setting, analyzing and
finding the equilibrium in a game becomes more difficult.
Reinforcement learning [35-40] is a technique that allows a
player to learn behavior through trial-and-error interactions
with other players. During the learning process, a player
builds his own belief on the actions of other players’ and
refines his strategies simultaneously. In our proposed game,
leaders (the CSP and the ESP) can estimate the total budgets
of all miners, and followers (miners) can probe other min-
ers’ strategies as well as the ESP’s capacity through the
learning properties of their interactions. In addition to
applying game-theoretical analysis on the proposed game,
we also develop a reinforcement learning framework in our
evaluation, allowing all players to select their best response
strategies and update their beliefs about unobservable
actions of others through repeated interactions with each
other in a stochastic environment. This framework confirms
our proposed model.
10 CONCLUSION
In this paper, we have proposed a Stackelberg game
between the SPs for optimal price strategies and among the
mobile miners for optimal computation offloading requests.
Two practical edge computing operation modes are investi-
gated, i.e., the ESP is connected to the CSP or standalone.
First, we characterize the miner number as a constant in
both modes. We discuss the existence and the uniqueness of
Stackelberg equilibrium in the proposed games and provide
algorithms to achieve SE point(s). Our analysis indicates
that the connected mode discourages miners from buying
computing resources from the ESP. Then, we study the
impact of a dynamic miner number. Interestingly, we find
that uncertainty incurred by the dynamic population ren-
ders miners more aggressive to buy computing resources
from the ESP. Numerical experiments based on a reinforce-
ment learning framework have been conducted to further
confirm our analysis.
ACKNOWLEDGMENTS
This work was supported in part by the US National Science
Foundation Grants CNS 1824440, CNS 1828363, CNS
1757533, CNS 1629746, CNS 1651947, and CNS 1564128.
REFERENCES
[1] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,”
2008.
[2] C. Decker and R. Wattenhofer, “Information propagation in the
Bitcoin network,” in Proc. IEEE 13th Int. Conf. Peer-to-Peer Comput.,
2013, pp. 1–10.
[3] J. G€obel, H. P. Keeler, A. E. Krzesinski, and P. G. Taylor, “Bitcoin
blockchain dynamics: The selfish-mine strategy in the presence of
propagation delay,” Perform. Eval., vol. 104, pp. 23–41, 2016.
[4] A. Dorri, S. S. Kanhere, R. Jurdak, and P. Gauravaram,
“Blockchain for IoT security and privacy: The case study of a
smart home,” in Proc. IEEE Int. Conf. Pervasive Comput. Commun.
Workshops, 2017, pp. 618–623.
[5] M. A. Khan and K. Salah, “IoT security: Review, blockchain solu-
tions, and open challenges,” Future Gener. Comput. Syst., vol. 82,
pp. 395–411, 2018.
[6] D. B. Rawat and A. Alshaikhi, “Leveraging distributed block-
chain-based scheme for wireless network virtualization with secu-
rity and QoS constraints,” in Proc. Int. Conf. Comput. Netw.
Commun., 2018, pp. 332–336.
[7] Y. Zhang, S. Kasahara, Y. Shen, X. Jiang, and J. Wan, “Smart con-
tract-based access control for the Internet of Things,” IEEE Internet
Things J., vol. 6, no. 2, pp. 1594–1605, Apr. 2019.
[8] H. Yang, Y. Liang, J. Yuan, Q. Yao, A. Yu, and J. Zhang,
“Distributed blockchain-based trusted multi-domain collabora-
tion for mobile edge computing in 5G and beyond,” IEEE Trans.
Ind. Informat., vol. 16, no. 11, pp. 7094–7104, Nov. 2020.
[9] H. Yang, J. Yuan, H. Yao, Q. Yao, A. Yu, and J. Zhang,
“Blockchain-based hierarchical trust networking for JointCloud,”
IEEE Internet Things J., vol. 7, no. 3, pp. 1667–1677, Mar. 2020.
[10] G. Wang, Z. Shi, M. Nixon, and S. Han, “ChainSplitter:
Towards blockchain-based industrial IoT architecture for sup-
porting hierarchical storage,” in Proc. IEEE Int. Conf. Block-
chain, 2019, pp. 166–175.
[11] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Joint
computation offloading and content caching for wireless block-
chain networks,” in Proc. IEEE Conf. Comput. Commun. Workshops,
2018, pp. 517–522.
[12] Z. Xiong, S. Feng,D. Niyato, P.Wang, andZ.Han, “Optimal pricing-
based edge computing resourcemanagement inmobile blockchain,”
in Proc. IEEE Int. Conf. Commun., 2018, pp. 1–6.
2070 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 21, NO. 6, JUNE 2022
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
[13] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for
blockchain networks,” IEEE Internet Things J., vol. 6, no. 3,
pp. 4585–4600, Jun. 2019.
[14] Z. Xiong, J. Kang, D. Niyato, P.Wang, and H. V. Poor, “Cloud/edge
computing service management in blockchain networks: Multi-
leader multi-follower game-based ADMM for pricing,” IEEE Trans.
Services Comput., vol. 13, no. 2, pp. 356–367,Mar./Apr. 2020.
[15] N. C. Luong, Z. Xiong, P. Wang, and D. Niyato, “Optimal auction
for edge computing resource management in mobile blockchain
networks: A deep learning approach,” in Proc. IEEE Int. Conf.
Commun., 2018, pp. 1–6.
[16] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, “Social welfare maximi-
zation auction in edge computing resource allocation for mobile
blockchain,” in Proc. IEEE Int. Conf. Commun., 2018, pp. 1–6.
[17] M. Yoo and Y. Won, “A study on the transparent price tracing sys-
tem in supply chain management based on blockchain,” Sustain-
ability, vol. 10, no. 11, 2018, Art. no. 4037.
[18] N. Fernando, S. W. Loke, and W. Rahayu, “Mobile cloud com-
puting: A survey,” Future Gener. Comput. Syst., vol. 29, no. 1,
pp. 84–106, 2013.
[19] R. Buyya, C. S. Yeo, S. Venugopal, J. Broberg, and I. Brandic,
“Cloud computing and emerging it platforms: Vision, hype, and
reality for delivering computing as the 5th utility,” Future Gener.
Comput. Syst., vol. 25, no. 6, pp. 599–616, 2009.
[20] Y. Mao, C. You, J. Zhang, K. Huang, and K. B. Letaief, “Mobile
edge computing: Survey and research outlook,” 2017, arXiv:
1701.01090.
[21] W. Shi, J. Cao, Q. Zhang, Y. Li, and L. Xu, “Edge computing:
Vision and challenges,” IEEE Internet Things J., vol. 3, no. 5,
pp. 637–646, Oct. 2016.
[22] O. Salman, I. Elhajj, A. Kayssi, and A. Chehab, “Edge computing
enabling the Internet of Things,” in Proc. IEEE 2nd World Forum
Internet Things, 2015, pp. 603–608.
[23] S. Abdelwahab, B. Hamdaoui, M. Guizani, and T. Znati,
“Replisom: Disciplined tiny memory replication for massive IoT
devices in LTE edge cloud,” IEEE Internet Things J., vol. 3, no. 3,
pp. 327–338, Jun. 2016.
[24] X. Sun and N. Ansari, “EdgeIoT: Mobile edge computing for the
Internet of Things,” IEEE Commun. Mag., vol. 54, no. 12, pp. 22–29,
Dec. 2016.
[25] L. Xiao, C. Xie, T. Chen, H. Dai, and H. V. Poor, “A mobile
offloading game against smart attacks,” IEEE Access, vol. 4,
pp. 2281–2291, 2016.
[26] Y. Liu, C. Xu, Y. Zhan, Z. Liu, J. Guan, and H. Zhang,
“Incentive mechanism for computation offloading using edge
computing: A Stackelberg game approach,” Comput. Netw.,
vol. 129, pp. 399–409, 2017.
[27] X. Wang, X. Chen, W. Wu, N. An, and L. Wang, “Cooperative
application execution in mobile cloud computing: A stackelberg
game approach,” IEEE Commun. Lett., vol. 20, no. 5, pp. 946–949,
May 2016.
[28] L. Song, D. Niyato, Z. Han, and E. Hossain, “Game-theoretic
resource allocation methods for device-to-device communication,”
IEEE Wireless Commun., vol. 21, no. 3, pp. 136–144, Jun. 2014.
[29] H. Zhang, Y. Xiao, S. Bu, D. Niyato, R. Yu, and Z. Han, “Fog com-
puting in multi-tier data center networks: A hierarchical game
approach,” in Proc. IEEE Int. Conf. Commun., 2016, pp. 1–6.
[30] T. M. Ho, N. H. Tran, C. T. Do, S. A. Kazmi, T. LeAnh, and
C. S. Hong, “Data offloading in heterogeneous cellular networks:
Stackelberg game based approach,” in Proc. Asia-Pacific Netw.
Operations Manage. Symp., 2015, pp. 168–173.
[31] Y. Sun, H. Shao, X. Liu, J. Zhang, J. Qiu, and Y. Xu, “Traffic off-
loading in two-tier multi-mode small cell networks over unli-
censed bands: A hierarchical learning framework,” KSII Trans.
Internet Inf. Syst., vol. 9, no. 11, pp. 4291–4310, 2015.
[32] X. Zhang, L. Guo, M. Li, and Y. Fang, “Social-enabled data off-
loading via mobile participation-A game-theoretical approach,”
in Proc. IEEE Global Commun. Conf., 2016, pp. 1–6.
[33] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When
mobile blockchain meets edge computing,” IEEE Commun. Mag.,
vol. 56, no. 8, pp. 33–39, Aug. 2018.
Suhan Jiang (StudentMember, IEEE) received the
BS degree in computer science and engineering
from the University of Electronic Science and Tech-
nology of China, Chengdu, China, in 2016. She is
currently working toward the PhD degree from the
Department of Computer and InformationSciences,
Temple University, Philadelphia, Pennsylvania.
Her current research interests include cloud com-
puting and distributing systems, including block-
chain techniques.
Xinyi Li (Student Member, IEEE) received the
BS degree in mathematics and economics from
Nankai University, Tianjin, China, in 2010, the
MS degree in mathematical finance from the Uni-
versity of North Carolina, Chapel Hill, North Caro-
lina, in 2012, and the MS degree in mathematics
from Temple University, Philadelphia, Pennsylva-
nia, in 2015. She is currently working toward the
PhD degree from the Department of Computer
and Information Sciences, Temple University,
Philadelphia, Pennsylvania. Her current research
interests include computer vision and robotics.
Jie Wu (Fellow, IEEE) is currently the director of
the Center for Networked Computing and Laura
H. Carnell professor with Temple University. He
also serves as the director of International Affairs
at College of Science and Technology. His cur-
rent research interests include mobile computing
and wireless networks, routing protocols, cloud
and green computing, network trust and security,
and social network applications. He regularly
publishes in scholarly journals, conference pro-
ceedings, and books. He serves on several edito-
rial boards, including the IEEE Transactions on Mobile Computing, the
IEEE Transactions on Service Computing, the Journal of Parallel and
Distributed Computing, and the Journal of Computer Science and
Technology.
" For more information on this or any other computing topic,
please visit our Digital Library at www.computer.org/csdl.
JIANG ET AL.: MULTI-LEADER MULTI-FOLLOWER STACKELBERG GAME IN MOBILE BLOCKCHAIN MINING 2071
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:42:25 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 150
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice