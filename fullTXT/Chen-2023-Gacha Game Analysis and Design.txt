Gacha Game Analysis and Design
6
Gacha Game Analysis and Design
CANHUI CHEN, Tsinghua University, China
ZHIXUAN FANG, Tsinghua University, China and Shanghai Qi Zhi Institute, China
Gacha game is a special opaque selling approach, where the seller is selling gacha pulls to the buyer. Each
gacha pull provides a certain probability for the buyer to win the gacha game reward. The gacha game has
been enthusiastically embraced in numerous online video games and has a wide range of potential applications.
In this work, we model the complex interaction between the seller and the buyer as a Stackelberg game, where
the sequential decision of the buyer is modeled as a Markov Decision Process (MDP). We define the whale
property in the context of gacha games. Then, we show that this is the necessary condition to achieve optimal
revenue. Moreover, we provide the revenue-optimal gacha game design and show that it is equivalent to the
single-item single-bidder Myerson auction. We further explore two popular multi-item gacha games, namely,
the sequential multi-item gacha game and the banner-based multi-item gacha game. We also discuss the
subsidies in the gacha game and demonstrate how subsidies may encourage the buyer to engage in grinding
behavior. Finally, we provide a case study on blockchain systems as gacha games.
CCS Concepts: ‚Ä¢ Applied computing ‚Üí Marketing; E-commerce infrastructure; ‚Ä¢ General and refer-
ence ‚Üí Design.
Additional Key Words and Phrases: gacha game; e-commerce; probabilistic selling.
ACM Reference Format:
Canhui Chen and Zhixuan Fang. 2023. Gacha Game Analysis and Design. Proc. ACM Meas. Anal. Comput. Syst.
7, 1, Article 6 (March 2023), 45 pages. https://doi.org/10.1145/3579438
1 INTRODUCTION
Gacha game [1] is a special opaque selling strategy, where the seller is selling gacha pulls to the
buyer. Each gacha pull provides a certain probability for the buyer to win the gacha game, similar
to a lottery ticket. Once the buyer wins the gacha game, he will receive the gacha game reward,
e.g., a valuable item. Different from the straightforward lottery ticket, the probability to win the
gacha game in each gacha pull can be varied.
One of the most popular applications of the gacha game is the video games. The gacha mechanic
has been widely used in video games since the 2010s [42]. Most of these games are free-to-play
(F2P) mobile games like ‚ÄúGenshin Impact‚Äù, wherein the gacha mechanic is designed to incentivize
players‚Äô in-game buying activities. Besides, the gacha game also has a wide range of applications in
the realistic world, such as car plate lottery and probabilistic selling in e-commerce [30, 39, 46].
With the popularity of the gacha games, many interesting mechanisms have emerged, such as
the varying-probability mechanism, reset-after-winning mechanism, and banner-based design,
etc. With the widespread use of these interesting mechanisms, the underlying properties and the
revenue guarantee remain mostly unclear.
Corresponding author: Zhixuan Fang (zfang@mail.tsinghua.edu.cn).
Authors‚Äô addresses: Canhui Chen, Tsinghua University, Beijing, China, 100084, chen-ch21@mails.tsinghua.edu.cn; Zhixuan
Fang, Tsinghua University, Beijing, China, 100084 and Shanghai Qi Zhi Institute, Shanghai, China, 200232, zfang@mail.
tsinghua.edu.cn.
This work is licensed under a Creative Commons Attribution International 4.0 License.
¬© 2023 Copyright held by the owner/author(s).
2476-1249/2023/3-ART6
https://doi.org/10.1145/3579438
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
https://doi.org/10.1145/3579438
https://creativecommons.org/licenses/by/4.0/
https://creativecommons.org/licenses/by/4.0/
https://doi.org/10.1145/3579438
http://crossmark.crossref.org/dialog/?doi=10.1145%2F3579438&domain=pdf&date_stamp=2023-03-02
6:2 Canhui Chen and Zhixuan Fang
In this paper, we model the complex interaction between the seller and the buyer in the gacha
game as a two-stage Stackelberg game, where the seller first designs the gacha game configuration
including the price of each gacha pull and the winning probability in each round, and the buyer will
then decide whether to buy the gacha pull from the seller. The buyer will engage in a consecutive
interaction with the seller, andmay buy a large number of gacha pulls sequentially. Such a sequential
decision of the buyer can be modeled by a Markov Decision Process (MDP).
Next, we introduce a special kind of gacha game, gacha games with the whale property. For
a whale property gacha game, the optimal policy for a rational buyer in that game is to either
continue pulling the gacha until he wins or never pull the gacha. That is, the best response of
a rational buyer is similar to ‚Äútake-it-or-leave-it‚Äù. On the contrary, the buyer in the non-whale
property gacha game may pull the gacha game several times and then quit midway. One of our
major findings is that the whale property is necessary for the seller‚Äôs revenue maximization. We
further show the equivalence of the gacha game and the single-item single-bidder Myerson auction
[33] and figure out the optimal game configuration that can achieve the maximum seller‚Äôs revenue.
We also investigate the gacha game where multiple items are sold. The multi-item gacha game
includes multiple phases and each phase contains exactly one item. The buyer plays a gacha game
in each phase. If the buyer wins the gacha game in the ùëò-th phase, he will get the reward of that
phase and then enter the next phase. One unique feature of the multi-item gacha game is that each
phase could start at different states (or, winning probabilities), depending on how many times the
buyer has pulled to get to the current phase. Such a history-dependent feature complicates the
system design, and seems to degenerate the seller‚Äôs revenue. A common practice is to introduce
some ‚Äúreset‚Äù mechanisms to let the buyer restart the pulling process at some point, e.g., reset the
winning probability to the case as if the first pull after the buyer wins. Interestingly, with the two
typical multi-item gacha game designs we analyzed, namely, the sequential gacha game and the
banner-based gacha game, we will show that the idea of putting buyers back from the beginning has
different impacts on different gacha games. The sequential gacha game captures the scenario where
the buyer will pull the gacha game many times, which is common in many online video games.
The reset-after-winning mechanism in the sequential gacha game will reset the buyer‚Äôs state when
the buyer wins the gacha game, as opposed to the succeed-after-winning mechanism. The popular
F2P gacha game ‚ÄúGenshin Impact‚Äù adopts the reset-after-winning mechanism, while ‚ÄúTower of
Fantasy‚Äù adopts the succeed-after-winning mechanism. We show that the succeed-after-winning
mechanism can achieve a higher seller‚Äôs revenue compared to the reset-after-winning mechanism,
while the reset-after-winning mechanism can achieve asymptotic optimality when there are infinite
items. Besides, compared with the traditional bundle selling, which is also asymptotical optimal,
the sequential gacha game can achieve a higher seller‚Äôs revenue when considering buyer‚Äôs budget
constraint. The banner-based gacha game allows the buyer to opt-out the current phase, and will
end a phase either the buyer wins the gacha game in the current phase or chooses to opt-out. This
models the practical scenario where the items can only be acquired during a predetermined event
time period, which is known as ‚Äúbanner‚Äù. Each banner contains a specific item and works like a
single-item gacha game. After a period of time, the next banner is released and replaces the current
one. In the banner-based gacha game, the succeed-after-opt-out mechanism will carry the buyer‚Äôs
state from the current banner to the next banner, while the reset-after-opt-out mechanism will
reset the buyer‚Äôs state at the beginning of the next banner when the buyer chooses to opt-out.
Then, we show that the following three selling mechanisms are equivalent in optimal revenue: (i)
the reset-after-opt-out mechanism, (ii) the succeed-after-opt-out mechanism, and (iii) the separate
selling with several independent single-item gacha games. Moreover, we find that the succeed-after-
opt-out mechanism can achieve a higher seller‚Äôs revenue when the buyers are budget-constrained.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:3
This explains why the succeed-after-opt-out mechanism in the banner-based gacha game is popular
in online video games.
Besides, we investigate the subsidies in the gacha game, where the seller will provide free
gacha pulls to the buyer as subsidies. This is a common practice in many online video games [42].
Particularly, players in online video games can obtain some free gacha pulls by finishing some
commissions, which motivates the players to play the game. Different from the previous research
on subsidies in the market, where subsidy serves as a price discount [13], subsidies in the gacha
game directly provide free gacha pulls to the buyers. With free gacha pulls, the buyers may get
the reward of the gacha game for free without buying any gacha pulls from the seller, which may
harm the seller‚Äôs revenue. This property makes the subsidies in the gacha game more challenging.
We show that subsidies in the varying-probability gacha game help the seller to further steer the
buyer‚Äôs behavior, and thus improve the seller‚Äôs revenue. But we also show that the subsidies would
harm the seller‚Äôs revenue in the fixed-probability single-item gacha game and may lead to the
buyer‚Äôs grinding behavior in the banner-based multi-item gacha game.
Finally, we show that there is a wide range of applications of the gacha game, and the analysis
and design of the gacha game can provide practical insights for these scenarios. Specifically, we
provide a case study of the gacha game on the blockchain system. We model the blockchain system
as a gacha game, where the buyers are the miners or validators, the seller is the system designer
who wants to achieve the maximum security of the blockchain. The analysis of the gacha game
can be applied to the blockchain system, and provide practical insights for the blockchain design.
Next, we provide a summary of our contributions and findings as follows:
(1) We propose the mathematical and systematical modeling framework for the gacha game,
where the sequential decision of the buyer is modeled as a Markov Decision Process (MDP).
Besides, we are the first to theoretically investigate the special characteristics and mecha-
nisms of the gacha games including the whale property, the multi-item gacha game design
and subsidies in the gacha game. The theoretical results of our proposed model are highly
consistent with the empirical results of the previous sociological and psychological research.
(2) We introduce the definition of whale property in the gacha game and show the revenue
optimality of the whale property. Besides, we show the equivalence of an arbitrary gacha game
and the corresponding single-item single-bidder Myerson auction with explicit allocation
rule and payment rule. We further provide the optimal gacha game configuration that can
achieve the maximum seller‚Äôs revenue.
(3) We explore two popular multi-item gacha game designs, namely, the sequential multi-item
gacha game and the banner-based multi-item gacha game. We further discuss the reset-after-
winning and succeed-after-winning mechanisms in the sequential gacha game, as well as
the reset-after-opt-out and the succeed-after-opt-out mechanisms in the banner-based gacha
game. Compared with the traditional multi-item selling methods, including bundle selling
and separate selling, the multi-item gacha game design can achieve a higher seller‚Äôs revenue
when considering buyer‚Äôs budget constraint.
(4) We study the subsidies in the gacha game, where the seller may provide free gacha pulls
to the buyer. We show that when the buyer‚Äôs valuation is too low, subsidies in the varying-
probability gacha game can motivate the buyer to pull the gacha game and thus improve the
seller‚Äôs revenue. However, subsidies in the banner-based multi-item gacha game may lead to
the buyer‚Äôs grinding behavior, which may harm the seller‚Äôs revenue.
(5) We discuss potential applications of the gacha game, and are the first to model the blockchain
system as a gacha game, and provide practical insights for the blockchain design from the
gacha game perspective.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:4 Canhui Chen and Zhixuan Fang
This paper is organized as follows. Section 2 presents a review of the related work. In Section 3,
we provide an overview of the modeling framework in gacha games. In Section 4, we investigate
the revenue optimal single-item gacha game. In Section 5, we explore the multi-item gacha game. In
Section 6, we discuss the subsidies and the buyer‚Äôs grinding behavior in the gacha game. In Section
7, we provide a case study of the gacha game on blockchain systems. In Section 8, we conclude the
paper with the final remark. Due to space limitations, the detailed calculation of the examples and
the proofs of the theoretical results are provided in appendix.
2 LITERATURE REVIEW
Our work draws inspiration from and is related to several areas across social analysis, operation
management, computer science, and economics.
Most of the previous research on the gacha game is from the sociological and psychological
perspectives. These previous works empirically analyze the gacha game mainly from statistics,
psychology, and society. Different from the previous work, we are the first to propose amathematical
and systematical modeling framework for the gacha game. In [24, 27, 29], the authors compare the
gacha game to gambling. [35] proposes a psychoanalytical approach to analyze the gacha game.
Besides, [44] claims that the gacha system is addictive and problematic. In our work, we introduce
the whale property and explain why some buyers may continue pulling the gacha until they win
the game. [9, 31] find that in the financing of gacha games, a large part of the game‚Äôs revenue
originates from a very small proportion of players who spend a large amount of money, essentially
subsidizing the game for other players who may spend less money. This finding is consistent with
the theoretical results of the optimality of the whale property gacha game. For the banner-based
gacha game, [41] shows that the maximum cost of limited-time gacha was higher although the
average probability of obtaining the rarest items was increased. Correspondingly, we show the
banner-based gacha game with the succeed-after-opt-out mechanism is friendly to the buyers
and can achieve a higher seller‚Äôs revenue when the buyers are budget-constrained. Besides, [42]
discusses the revenue-generating mechanism in gacha game, where players may be given free or
discounted gacha pulls, but have to pay to get more. We model this mechanism as subsidies in
gacha game and discuss its effect. In many F2P gacha games, the player may accumulate the free
gacha pulls through grinding [31, 45]. We theoretically model the buyer‚Äôs grinding behavior caused
by subsidies.
In the operation management literature, our work connects with the dual streams of papers on
opaque selling [4, 14, 19, 20]. Gacha games are an example of opaque selling where the buyers
can only buy the gacha pull and each gacha pull provides a certain probability for the buyers to
win the gacha reward. Recent works [7, 8, 12] have focused on selling with lottery to manage
imbalanced customer demand or induce opportunities for price discrimination. Our gacha game
framework diverges from the standard lottery selling in a number of key ways. First, the probability
to win the gacha game in each gacha pull is varying during the buyer‚Äôs gacha pulling process. The
simple lottery selling is one of the special cases of the gacha game, i,e., the fixed-probability gacha
game. Second, we model the complex interactions between the gacha seller and the buyer, where
the sequential decision of the buyer is modeled as a Markov Decision Process (MDP), as opposed
to prior work which has focused on the one-shot behavior of the buyers. Third, we investigate
several interesting characteristics and mechanisms in gacha games, such as whale property, varying-
probability mechanism, reset-after-winning mechanism, multi-item gacha game design, etc, which
to the best of our knowledge, is the first work to provide theoretical analysis for these mechanisms.
Our work also resembles and references the work on loot box [11]. Loot box is a consumable item
with a random allocation of several items, whose contents are not revealed until after purchase. The
authors in [11] focus on two types of loot boxes, namely, the traditional box and the unique box,
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:5
which are classified based on whether the loot box contains duplicate items. Distinguished from
the previous work on loot box, we consider several interesting characteristics and mechanisms in
gacha games, which are typical and fundamental mechanisms in the gacha games, but may not be
applied to the classical loot box in [11].
Besides, our work distinguishes from [15]. The author in [15] investigates the optimal pricing
problem in gacha game, where the consumers behave according to prospect theory and present
preference for gambling. Whereas the consumers in our work are risk-neutral. Besides, we also
investigate several common mechanisms and phenomena in the gacha game, which to the best of
our knowledge, have not been mathematically studied yet.
Moreover, our work contributes to the emerging literature on operation management in video
games. In [21] , the authors investigate the problem of maximizing players‚Äô engagement in online
video games. [40] studies the incentivized actions in freemium games. [23] compares the transparent
selling strategy and the opaque selling strategy in the free-to-play games. [49] proposes a dynamic
model of the player‚Äôs level-progression decision in online gaming. [17] considers the problem of
designing video games so that players with different resources play diverse strategies. [48] studies
the effect of random reward mechanisms in video games on player experience. Our work is the
first to provide a systematic analysis for the gacha game.
Besides, our work can be widely applied to many scenarios beyond the video game, such as
license plate lottery and probabilistic selling [30, 39, 46]. Specifically, we provide a detailed case
study for the application of the gacha game on the blockchain system. To the best of our knowledge,
this is the first gacha game model for the blockchain system. Some of the existing works model the
Proof-of-Stake (PoS) blockchain as a lottery. [22] models the PoS protocol as a lottery and provides
a fairness analysis for blockchain incentives. [6] investigates the anonymous lottery in the PoS
setting. [28] designs a block producing algorithm based on PoS named Proof-of-Lottery to achieve
high scalability. Compared to the existing work, we first model the blockchain system as the gacha
game, and adopt the mechanisms in gacha game to analyze the existing protocols.
3 GACHA GAME MODEL OVERVIEW
We consider a revenue-maximizing seller selling a specific item using the gacha game framework.
A buyer‚Äôs valuation for the reward of the gacha game is described by the non-negative variable
ùëÖ, where ùëÖ is drawn from a distribution ùêπ . The mean and variance of ùêπ are denoted by ` and ùúé2
,
respectively. We assume that the seller knows the distribution ùêπ . This is a common assumption
when we need to maximize the seller‚Äôs revenue [18, 33]. Besides, it is also practical in some scenarios
such as video games [10] and online platforms [16]. In the gacha game, the seller will first design the
gacha game configuration, including the probability of winning the gacha game in the ùëñ-th gacha
pull ùëùùëñ and the price of each gacha pull ùëê . The buyer will then choose whether to buy the gacha
pull after knowing the gacha game configuration, which can be modeled as a Markov Decision
Process (MDP). The interaction between the buyer and the seller can be modeled as a two-stage
Stackelberg game.
3.1 Buyer Stage
The buyer will decide whether to buy the gacha pull based on the game configuration and his
personal valuation ùëÖ of the item in the gacha game. The buyer‚Äôs utility is defined as the valuation
of the item in the gacha game minus the cost for buying the gacha pulls. The buyer behavior can
be modeled as a Markov Decision Process (MDP) represented as a 4-tuple (S,A,Pùëé,Rùëé), which
is shown in Figure 1. S = {ùëÜ1, ùëÜ2, ùëÜ3, ¬∑ ¬∑ ¬∑ } is a set of states, which can be either finite or infinite.
ùëÜùëñ ‚àà S denotes the state that the buyer has pulled ùëñ ‚àí 1 gacha pulls but does not win the desired
item, that is, the buyer is currently at the ùëñ-th round of the gacha game. Specially, ùëÜ‚àó ‚àà S denotes
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:6 Canhui Chen and Zhixuan Fang
 !  "pull
(1  !"),  #
win
quit
pull
(1  !"), #
pull
(1 !"#$),  %
&" &"'$
pull
(1  !"),  # ...
(1 !"#$),  %
pull
Fig. 1. Markov Decision Process in Gacha Game
the absorbing terminal state that the buyer wins the gacha game. ùëÜùëû ‚àà S denotes the terminal state
that the buyer quits the gacha game. Note that we consider each gacha pull as a round in the gacha
game. A is the action space of the MDP. There are only two actions in each state of this MDP,
namely, ùëéùëù and ùëéùëû . The action ùëéùëù means that the buyer will buy a gacha pull, and the action ùëéùëû
means that the buyer quits the gacha game. ùëÉùëé (ùëÜ, ùëÜ ‚Ä≤) = Pr(ùëÜùë°+1 = ùëÜ
‚Ä≤ |ùëÜùë° = ùëÜ, ùëéùë° = ùëé) is the transition
probability that action ùëé in state ùëÜ at time ùë° will lead to state ùëÜ ‚Ä≤ at time ùë° + 1. Specifically, we have
ùëÉùëéùëù (ùëÜùëñ , ùëÜùëñ+1) = 1 ‚àí ùëùùëñ ; ùëÉùëéùëù (ùëÜùëñ , ùëÜ‚àó) = ùëùùëñ ; ùëÉùëéùëû (ùëÜùëñ , ùëÜùëû) = 1.
ùëÖùëé (ùëÜ, ùëÜ ‚Ä≤) is the expected immediate reward received after transitioning from state ùëÜ to state ùëÜ ‚Ä≤.
Specifically, we have
ùëÖùëéùëù (ùëÜùëñ , ùëÜùëñ+1) = ‚àíùëê; ùëÖùëéùëù (ùëÜùëñ , ùëÜ‚àó) = ùëÖ ‚àí ùëê; ùëÖùëéùëû (ùëÜùëñ , ùëÜùëû) = 0.
The buyer is utility-maximizing and will pick up the optimal policy ùúã‚àó
to maximize his utility. The
buyer behavior is indeed a sequential decision, and the buyer only needs to decide when to stop
pulling the gacha game. Therefore, the set of the available policies in thisMDP is {ùúã0, ùúã1, ùúã2, ¬∑ ¬∑ ¬∑ , ùúã‚àû}.
Here ùúãùëò denotes the policy that the buyer will pull the gacha until he wins the gacha game midway
or he has reached the state ùëÜùëò+1 and then stops pulling. Specially, ùúã‚àû denotes the policy that the
buyer will always pull the gacha until he wins the gacha game, and ùúã0 denotes the policy that the
buyer will never pull the gacha. The value of MDP of the policy ùúãùëò at state ùëÜùëñ is
ùëâùúãùëò (ùëÜùëñ ) =
Ô£±Ô£¥Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£¥Ô£≥
0, ùëò < ùëñ,
ùëùùëòùëÖ ‚àí ùëê, ùëò = ùëñ,
ùëùùëñùëÖ ‚àí ùëê + (1 ‚àí ùëùùëñ )ùõæùëâùúãùëò (ùëÜùëñ+1), ùëò > ùëñ,
where ùõæ is the discount factor satisfying 0 ‚â§ ùõæ ‚â§ 1 in MDP. In our gacha game model, we assume
that ùõæ = 1, which is reasonable because ùëâùúãùëò (ùëÜùëñ ) is bounded, and practically, a gacha game can be
considered as a short-term procedure, where the discount effect is not significant. Then the value
of MDP of the policy ùúãùëò at state ùëÜùëñ is formulated in the following lemma.
Lemma 3.1. The value of MDP of the policy ùúãùëò at state ùëÜùëñ is
ùëâùúãùëò (ùëÜùëñ ) =
(
1 ‚àí
ùëò‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
ùëÖ ‚àí
(
ùëùùëñ +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
(ùëö ‚àí ùëñ + 1)ùëùùëö
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó ) + (ùëò ‚àí ùëñ + 1)
ùëò‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
ùëê.
The buyer in the gacha game is rational. Initially, the buyer is at state ùëÜ1, and will pull the gacha
game if and only if ‚àÉùëò > 0,ùëâùúãùëò (ùëÜ1) ‚â• 0. The optimal policy for the buyer at state ùëÜùëñ is investigated
in the following lemma.
Lemma 3.2. The policy ùúãùëò at state ùëÜùëñ is optimal if and only if the following conditions are satisfied:
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:7
(1) ùëâùúãùëò (ùëÜ ùëó ) ‚â• 0, ‚àÄùëó ‚àà [ùëñ, ùëò].
(2) ùëâùúãùëô (ùëÜùëò+1) ‚â§ 0, ‚àÄùëô ‚àà [ùëò + 1,‚àû).
Lemma 3.2 implies that the optimal policy in the gacha game is deterministic. Specifically, if ùúãùëò
is the optimal policy at state ùëÜùëñ , then ùúãùëò is also the optimal policy for ùëÜ ùëó , ‚àÄùëó ‚àà [ùëñ, ùëò]. Specially, the
optimal for the buyer at the initial state ùëÜ1 is ùúãùëò , where ùëò = arg maxùëô ùëâùúãùëô (ùëÜ1). And this policy would
not be changed during the gacha pulling process.
3.2 Seller Stage
We assume that the seller is a monopolist and wants to maximize his revenue. The seller will first
design the gacha game configuration including the probability of winning the gacha game in the
ùëñ-th gacha pull ùëùùëñ and the price of each a gacha pull ùëê . The revenue of the seller comes from selling
the gacha pulls to the buyers. For a buyer with policy ùúãùëò , the expected number of gacha pulls that
he will buy is ùê∏ (ùúãùëò ), which is formulated in the following lemma. Then the expected revenue of the
seller obtaining from selling the gacha pulls to this buyer is ùëê ¬∑ ùê∏ (ùúãùëò ). Note that the buyer‚Äôs policy
ùúãùëò is highly dependent on the game configuration. Therefore, to maximize the seller‚Äôs revenue, the
seller should carefully design the game configuration.
Lemma 3.3. For the buyer who adopts policy ùúãùëò and is currently at state ùëÜùëñ , the expected number of
gacha pulls that the buyer will buy is
ùê∏ (ùúãùëò , ùëÜùëñ ) =
{
0, ùëò < ùëñ,
ùëùùëñ +
‚àëùëò
ùëó=ùëñ+1
( ùëó ‚àí ùëñ + 1)ùëù ùëó
‚àèùëó‚àí1
ùëô=ùëñ
(1 ‚àí ùëùùëô ) + (ùëò ‚àí ùëñ + 1)‚àèùëò
ùëó=ùëñ (1 ‚àí ùëù ùëó ), ùëò ‚â• ùëñ .
Briefly, when there is no further confusion, we denote the expected number of gacha pulls that a
buyer with policy ùúãùëò will buy at initial state ùëÜ1 as ùê∏ (ùúãùëò ) = ùê∏ (ùúãùëò , ùëÜ1). Besides, the expected number
of gacha pulls needed to win the gacha game is denoted as ùê∏ (ùúã‚àû) = ùê∏ (ùúã‚àû, ùëÜ1).
3.3 Typical Gacha Game
We divide the gacha games into two categories as follows:
Fixed-Probability Gacha Game: A fixed-probability gacha game is a gacha game where the
probability of winning the gacha game remains the same during the buyer‚Äôs gacha pull process,
i.e., ùëùùëñ ‚â° ùëù , where ùëù is a fixed probability. Specially, the lottery is indeed a fixed-probability gacha
game, where the ticket in the lottery corresponds to the gacha pull in the gacha game.
Varying-Probability Gacha Game: A varying-probability gacha game is a gacha game where
the probability of winning the gacha game in each gacha pull may be different, i.e., we allow that
‚àÉùëñ ‚â† ùëó, ùëùùëñ ‚â† ùëù ùëó . The fixed-probability gacha game is just a special case of the varying-probability
gacha game. Specially, the winning guarantee mechanism in the varying-probability gacha game,
i.e., ‚àÉùëÅ, s.t. ùëÉùëÅ = 1, is called ‚Äúpity system‚Äù [50], which is widely adopted to prevent the aggravating
situation where the buyer buys numerous gacha pulls but receives nothing.
4 REVENUE OPTIMAL SINGLE-ITEM GACHA GAME
In this section, we first introduce the definition of ‚ÄúWhale Property‚Äù, and then show that the whale
property gacha game can achieve the maximum seller‚Äôs revenue, while the non-whale property
gacha game performs worse. We also show the equivalence of the gacha game and the single-item
single-bidder Myerson auction and further figure out the optimal gacha game configuration that
can achieve the maximum seller‚Äôs revenue. Besides, when the buyer has budget constraints, the
gacha game can achieve a higher seller‚Äôs revenue compared to the ‚Äútake-it-or-leave-it‚Äù strategy.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:8 Canhui Chen and Zhixuan Fang
4.1 Whale Property
In many online video games with gacha mechanisms, once the buyer pulls one gacha pull, he is
likely to continue pulling gacha until he wins the gacha game [44]. In this paper, we define this
addictive property as ‚Äúwhale property‚Äù for the rational buyer, where the definition comes from the
fact that the high-spending players are often colloquially referred to as ‚Äúwhales‚Äù [47]. For the gacha
game with the whale property, the optimal policy for a rational buyer is to either never pull the
gacha game, i.e., adopt the policy ùúã0, or continue pulling the gacha game until he wins the gacha
game, i.e., adopt the policy ùúã‚àû. The whale property is mathematically defined as follows.
Definition 4.1. (Whale Property) A gacha game G has the whale property if and only if for any
buyer with any non-negative valuation in the gacha game, his optimal policy is either ùúã0 or ùúã‚àû,
that is, the following condition always holds:(
‚àÉùëò,ùëâùúãùëò (ùëÜ1) ‚â• 0
)
‚áí
(
‚àÄùëñ,ùëâùúã‚àû (ùëÜùëñ ) ‚â• 0
)
,
i.e., if it is profitable for the buyer to pull the gacha game initially, he will continue pulling the
gacha game until he wins, otherwise, he will never pull.
For the gacha game with the whale property, the optimal policy for the buyer will be either ùúã0
or ùúã‚àû, i.e., (‚Äútake-it-or-leave-it‚Äù), which is shown in the following lemma.
Lemma 4.2. The optimal policy ùúã‚àó for the buyer in the gacha game with the whale property is
ùúã‚àó =
{
ùúã‚àû, When ùëâùúã‚àû (ùëÜ1) ‚â• 0 ‚áî ùëÖ ‚â• ùê∏ (ùúã‚àû) ¬∑ ùëê,
ùúã0, When ùëâùúã‚àû (ùëÜ1) < 0 ‚áî ùëÖ < ùê∏ (ùúã‚àû) ¬∑ ùëê.
Lemma 4.2 implies that the buyer‚Äôs behavior in the whale property gacha game is only related to
the expected number of gacha pulls to win the gacha game ùê∏ (ùúã‚àû) and the price for each gacha pull
ùëê , which can help to simplify the analysis of the whale property gacha game. In the whale property
gacha game, if the buyer‚Äôs valuation is high enough (i.e., ùëÖ ‚â• ùê∏ (ùúã‚àû) ¬∑ ùëê), he will continue pulling
the gacha game until he gets the desired item. Otherwise, he will never pull the gacha game.
In some gacha games, to attract the buyers to buy the gacha pull, the seller will monotonically
increase the probability of winning the gacha in each gacha pull. The following lemma shows that
these gacha games with increasing probability have the whale property.
Lemma 4.3. If the probability of winning the gacha game is monotonically increasing for each gacha
pull, i.e., ùëùùëñ ‚â§ ùëùùëñ+1,‚àÄùëñ , the gacha game has the whale property.
Lemma 4.3 implies that the fixed-probability gacha game and the varying-probability gacha game
with non-decreasing probability have the whale property. In fact, the whale property is present in
a lot of gacha games in the real world, which keeps players addicted to them [47].
For the non-whale property gacha game, the expected value in the gacha game at the initial
states is high, which can attract the buyer to join in the game. And the buyer may stop pulling
the gacha midway when his expected value at that state is negative. Some video games apply the
novice bonus such as a high probability to win the gacha game at the beginning, or discounted
price to attract new players. This novice bonus reflects the non-whale property of the gacha game.
4.2 Optimality of the Whale Property Gacha Game
In this section, we will prove the optimality of the whale property gacha game, that is, the optimal
gacha game that can achieve the maximum seller‚Äôs revenue must be a whale property gacha game.
Figuring out the optimal design of the gacha game is difficult due to its complexity, especially in
designing the probability of each gacha pull. Fortunately, in Lemma 4.2, we have shown that in
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:9
the whale property gacha game, the buyer‚Äôs behavior is only related to the expected number of
gacha pulls needed to win the gacha game with policy ùúã‚àû, which can help us substantially simplify
the analysis of the gacha game. Therefore, for each whale property gacha game, we can represent
it by a fixed-probability gacha game with the same expected number of gacha pulls to win. And
we denote the winning probability of this equivalent fixed-probability gacha game as ‚Äúequivalent
probability‚Äù, which is defined as follows.
Definition 4.4. (Equivalent Probability) The equivalent probability of a whale property gacha
game is defined as the ùëù = 1/ùê∏ (ùúã‚àû), where ùê∏ (ùúã‚àû) is the expected number of gacha pulls needed to
winning the gacha game with policy ùúã‚àû.
With the definition of the equivalent probability, the value in MDP at the initial state ùëÜ1 for a
buyer with valuation ùëÖ and policy ùúã‚àû can be simplified as ùëâùúã‚àû (ùëÜ1) = ùëÖ ‚àí ùëê/ùëù. This implies that for
the whale property gacha game, the buyer will pull the gacha game if and only if the equivalent
probability of the game is large compared with his valuation, i.e., ùëù ‚â• ùëê/ùëÖ.
To figure out the optimal gacha game configuration, we first consider the scenario where the
buyer‚Äôs valuation follows a discrete distribution as follows:
ùëÉ (ùëÖ = ùëÖùëñ ) = ùõΩùëñ , ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ,
and
‚àëùëÄ
ùëñ=1
ùõΩùëñ = 1. Without loss of generality, we assume that ùëÖ1 > ùëÖ2 > ¬∑ ¬∑ ¬∑ > ùëÖùëÄ . We will first show
the optimality of the whale property gacha game with the discrete user valuation distribution and
then extend to the continuous user valuation distribution. Thus, we can prove the optimality of the
whale property gacha game with any user distribution.
Firstly, we have that the optimal whale property gacha game design with the discrete buyer‚Äôs
valuation distribution is shown as follows:
Lemma 4.5. When the buyer‚Äôs valuation follows the discrete distribution ùëÉ (ùëÖ = ùëÖùëñ ) = ùõΩùëñ , ùëñ =
1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ , the whale property gacha game with equivalent probability ùëù = ùëùùëñ‚àó can achieve the
maximum seller‚Äôs revenue ùëê
ùëùùëñ‚àó
‚àëùëÄ
ùëó=ùëñ‚àó ùõΩ ùëó , where
ùëñ‚àó = arg max
ùëñ‚àà{1,2,¬∑ ¬∑ ¬∑ ,ùëÄ }
ùëê
ùëùùëñ
ùëÄ‚àëÔ∏Å
ùëó=ùëñ
ùõΩ ùëó , and ùëùùëñ =
ùëê
ùëÖùëñ
(ùëê ‚â§ ùëÖùëñ ).
To investigate the general gacha game (with or without the whale property), we introduce the
definition of whale property subgame.
Definition 4.6. (Whale Property Subgame) We define the gacha subgame G(ùëñ, ùëò), (ùëñ ‚â§ ùëò) as
the slice of the gacha game starting from buyer‚Äôs state ùëÜùëñ ending at buyer‚Äôs state ùëÜùëò . Then a gacha
subgame G(ùëñ, ùëò) has the whale property if and only if for any buyer in the gacha game, his optimal
policy in this gacha subgame is either ùúãùëñ‚àí1 or ùúãùëò , that is, the following condition always holds:(
‚àÉùëô ‚àà [ùëñ, ùëò],ùëâùúãùëô (ùëÜùëñ ) ‚â• 0
)
‚áí
(
‚àÄùëó ‚àà [ùëñ, ùëò],ùëâùúãùëò (ùëÜ ùëó ) ‚â• 0
)
,
i.e., if it is profitable for the buyer to pull the gacha subgame at state ùëÜùëñ , he will continue pulling
the gacha subgame until he wins or reaches the state ùëÜùëò+1, otherwise, he will never pull.
Tackling the non-whale property gacha game is difficult, because the optimal policy of the
buyer is complicated and the buyer may quit midway. Luckily, we find that each gacha game can
be divided into several whale property subgames. Specially, the gacha pull in each round can be
considered as a whale property subgame, i.e., whether or not to pull the current round. Therefore,
we can investigate the non-whale property gacha game through its whale property subgames.
As shown in Figure 2, a gacha game G that can be divided into ùêø consecutive whale property
subgames, namely, G(ùëéùëñ‚àí1 + 1, ùëéùëñ ), ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùêø, where ùëé0 = 0 and ùëéùêø = ‚àû. Since the subgame
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:10 Canhui Chen and Zhixuan Fang
 !  "#
 $%
 "%
 $&
 "&
Subgame 1 Subgame 2 Subgame 3
 !  "  #
Fig. 2. The non-whale property gacha game can be divided into 3 whale property subgames, where each
subgame can be represented by a fixed-probability gacha game with the corresponding equivalent probability.
G(ùëéùëñ‚àí1 + 1, ùëéùëñ ) has the whale property, we can represent the subgame by a fixed-probability gacha
game with the equivalent probabilities ùëùùëñ . Besides, the subgame whale property guarantees that if
the buyer pulls the gacha game at the state ùëÜùëéùëñ‚àí1+1, he will continue pulling until he wins the gacha
game or reaches the state ùëÜùëéùëñ+1. Then, to figure out the optimal design for the general gacha game,
we can turn to investigating its whale property subgames.
Lemma 4.7. Suppose that the buyer‚Äôs valuation follows the discrete distribution ùëÉ (ùëÖ = ùëÖùëñ ) = ùõΩùëñ , ùëñ =
1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ . Consider a gacha game G‚àó that can be divided ùêø(ùêø ‚â§ ùëÄ) whale property subgames, and
the ùëñ-th whale property subgame contains ùëõùëñ rounds of gacha pulls, i.e., ùëõùëñ = ùëéùëñ ‚àí ùëéùëñ‚àí1, ùëõùëñ ‚â• 0, where
ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ . Specially, the length of ùëñ-th subgame being ùëõùëñ = 0 implies that the ùëñ-th whale property
subgame is dummy. The equivalent probability of the ùëñ-th subgame is ùëùùëñ = ùëê/ùëÖùëñ (ùëê ‚â§ ùëÖùëñ ) and the
lengths of these whale property subgames n = (ùëõ1, ùëõ2, ¬∑ ¬∑ ¬∑ , ùëõùëÄ ) are
arg max
n
ùëê ¬∑
ùëÄ‚àëÔ∏Å
ùëò=1
ùõΩùëòùëÑùëò (n), ùëõùëñ ‚â• 0,‚àÄùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ,
where ùëÑùëò (n) is the expected number of gacha pulls bought by the buyer with valuation ùëÖùëò in the
gacha game with the lengths of the whale property subgames n, which is formulated as follows:
ùëÑùëò (n) =
Ô£±Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£≥
1‚àí(1‚àíÔøΩÃÉÔøΩ1 )ùëõ1
ÔøΩÃÉÔøΩ1
, ùëò = 1,(‚àëùëò
ùëñ=1
(‚àèùëñ‚àí1
ùëó=1
(1 ‚àí ùëù ùëó )ùëõ ùëó
)
1‚àí(1‚àíÔøΩÃÉÔøΩùëñ )ùëõùëñ
ÔøΩÃÉÔøΩùëñ
)
, ùëò > 1.
Then the gacha game G‚àó is optimal and can achieve the maximum seller‚Äôs revenue.
According to Lemma 4.7, we can find out the optimal design of the gacha game by turning it
into an optimization problem. And the solution of the optimization problem implies that the gacha
game G‚àó
has the whale property. Suppose that there exists a gacha game G‚Ä≤
with ùêø(ùêø > 1) whale
property subgames which does not have the whale property but is also optimal and can achieve
the maximum seller‚Äôs revenue. We will show that the seller‚Äôs revenue in G‚àó
in Lemma 4.7 is greater
than that in G‚Ä≤
, which will lead to the contradiction and thus prove the optimality of the whale
property gacha game. And the main result is shown in the following theorem, which still holds
when the buyer‚Äôs valuation follows the arbitrary distribution.
Theorem 4.8. The optimal gacha game that can achieve maximum seller‚Äôs revenue must be a whale
property gacha game, that is, the maximum seller‚Äôs revenue of the non-whale property gacha game is
strictly less than that of the whale property gacha game.
Compared to the whale property gacha game, the non-whale property gacha game can encourage
the buyers who have low valuation and would not conduct any gacha pull in the optimal whale
property gacha game to pull the gacha instead of leaving directly. Thus the non-whale property
helps to expand the number of participants in the gacha game. Although the non-whale property
offers advantages in terms of more participants, the buyers who will pull in the optimal whale
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:11
property gacha game spend less money on gacha pulling, leading to a lower seller‚Äôs revenue. Indeed,
many gacha games have whale property. A recent research [26] shows that the high-spending
players in the gacha game essentially subsidize the game for other players who may spend smaller
amounts of money, or even spend no money at all, which is consistent with the theoretical result
of the whale property gacha game.
4.3 Equivalence of Gacha Game and Single-item Single-bidder Auction
In this section, we show the equivalence of the gacha game and the single-item single-bidder
auction [33] and further figure out the optimal gacha game design that can achieve the maximum
seller‚Äôs revenue. Such an equivalence reveals the corresponding revenue structure between gacha
game and auction.
Let‚Äôs recall the single-item single-bidder auction [33], where there is a bidder with his personal
valuation ùëÖ on the item in the auction and a revenue-maximum auctioneer. In the auction mecha-
nism, the auctioneer will first design an allocation rule ùë• (ùëè) ‚àà [0, 1] and the payment rule ùë¶ (ùëè) ‚àà R,
and then a rational bidder will propose his bid ùëè ‚àà R. When the bidder proposes a bid ùëè ‚àà R, he
needs to pay ùë¶ (ùëè) and can get the item in the auction with probability ùë• (ùëè). Thus, the utility of the
bidder with bid ùëè is ùë¢ (ùëè) = ùëÖ ¬∑ ùë• (ùëè) ‚àí ùë¶ (ùëè). The following theorem shows the equivalence of the
gacha game and the single-item single-bidder Myerson auction with a stochastic allocation rule.
Theorem 4.9. Consider a gacha game G, which can be divided into ùêø consecutive whale property
subgames, namely, G(ùëéùëñ‚àí1 + 1, ùëéùëñ ), ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùêø, where ùëé0 = 0 and ùëéùêø = ‚àû. The gacha game
G is equivalent to the single-item single-bidder Myerson auction with the allocation rule ùë• (ùëè) =
ùëÉsucc (ùúãopt(ùëè ) ) and the payment ruleùë¶ (ùëè) = ùê∏ (ùúãopt(ùëè ) ) ¬∑ùëê , where ùëè is the bidding value in auction, which
is equivalent to the bidder‚Äôs valuation ùëÖ due to the dominant-strategy incentive-compatible (DSIC)
property, ùúãopt(ùëÖ) denotes the optimal gacha pulling policy for a buyer with valuation ùëÖ at initial state
ùëÜ1, which is formulated as
opt(ùëÖ) =
Ô£±Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≥
ùëé0 = 0, ùëÖ ‚â§ ùê∏ (ùúãùëé
1
) ¬∑ùëê
ùëÉsucc (ùúãùëé
1
) ,
ùëéùëñ ,
(ùê∏ (ùúãùëéùëñ )‚àíùê∏ (ùúãùëéùëñ‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ )‚àíùëÉsucc (ùúãùëéùëñ‚àí1
) < ùëÖ ‚â§ (ùê∏ (ùúãùëéùëñ+1
)‚àíùê∏ (ùúãùëéùëñ )) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ+1
)‚àíùëÉsucc (ùúãùëéùëñ )
,
ùëéùêø = ‚àû, ùëÖ >
(ùê∏ (ùúã‚àû )‚àíùê∏ (ùúãùëéùêø‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúã‚àû )‚àíùëÉsucc (ùúãùëéùêø‚àí1
),
ùëÉsucc (ùúãùëò ) = 1 ‚àí ‚àèùëò
ùëó=1
(1 ‚àí ùëù ùëó ) denotes the probability of winning the gacha game with policy ùúãùëò , and
ùê∏ (ùúãùëò ) denotes the expected number of gacha pulls with policy ùúãùëò , which is formulated in Lemma 3.3.
The auctioneer and the bidder in the auction correspond to the seller and the buyer in the gacha
game, respectively. According to Myerson‚Äôs Lemma [33], the auction mechanism in Theorem 4.9
is dominant-strategy incentive-compatible (DSIC), and can guarantee that the bidder will report
truthfully, i.e., ùëè ‚â° ùëÖ. The buyer with his personal valuation ùëÖ will pull the gacha game with
his optimal policy ùúãopt(ùëÖ) , which can provide the buyer with the probability ùëÉsucc (ùúãopt(ùëÖ) ) to win
the gacha game at the expected cost of ùê∏ (ùúãopt(ùëÖ) ) ¬∑ ùëê . Correspondingly, the truthful bidder with
valuation ùëÖ will propose a bid ùëè = ùëÖ, and get the item with the probability ùë• (ùëè) and payment ùë¶ (ùëè).
The winning probability and the expected cost in the gacha game correspond to the allocation rule
and the payment rule in the auction, respectively.
With the bidder/buyer‚Äôs valuation drawn from distribution ùêπ , according to [33], the optimal alloca-
tion rule and the payment rule in the single-item single-bidder Myerson auction that can achieve the
maximum revenue are ùë• (ùëè) =
{
0, ùëè ‚â§ ùëü ‚àó,
1, ùëè > ùëü ‚àó,
ùë¶ (ùëè) =
{
0, ùëè ‚â§ ùëü ‚àó,
ùëü , ùëè > ùëü ‚àó,
where ùëü ‚àó = arg maxùëü ùëü ¬∑ (1‚àíùêπ (ùëü ))
is the reserved price set by the auctioneer/seller. This optimal auction mechanism corresponds to
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:12 Canhui Chen and Zhixuan Fang
the gacha game with ùêø = 1 whale property subgame in Theorem 4.9. This implies the optimality
of the whale property gacha game, which is consistent with Theorem 4.8. And the optimal gacha
game design is shown in the following theorem.
Theorem 4.10. The optimal gacha game that can achieve the maximum seller‚Äôs revenue should
have whale property and satisfy the following condition:
ùê∏ (ùúã‚àû) ¬∑ ùëê = ùëü ‚àó = arg max
ùëü
ùëü ¬∑ (1 ‚àí ùêπ (ùëü )),
where ùëê is the cost of each gacha pull, ùê∏ (ùúã‚àû) is the expected number of gacha pulls to win the gacha
game with policy ùúã‚àû, ùëü ‚àó is the optimal reserved price in the single-item single-bidder Myerson auction.
Theorem 4.10 implies that the maximum seller‚Äôs revenue in the gacha game is equivalent to
that in the single-item single-bidder Myerson auction. The optimality of the whale property gacha
game revealed in Theorem 4.8 and Theorem 4.10 is consistent with the optimality of the ‚Äútake-it-
or-leave-it‚Äù (non-haggling) strategy on one good [37]. This finding provides a practical insight for
the gacha game design and explains the popularity of whale property design in many gacha games.
Besides, we will show that with budget constraints, the gacha game can achieve a higher seller‚Äôs
revenue than the ‚Äútake-it-or-leave-it‚Äù selling strategy.
For the ‚Äútake-it-or-leave-it‚Äù strategy, a buyer will buy the item only when the price of the item
does not exceed his valuation and his budget. While in the gacha game, the buyer with a high
valuation will continue purchasing the gacha pulls until he either wins the gacha game or exhausts
his budget. Therefore, selling in the gacha game is quite robust to random fluctuations in buyers‚Äô
budgets. Specifically, for a buyer with budget ùêµ, he can buy at most ‚åä ùêµ
ùëê
‚åã gacha pulls, where ùëê is the
price for each gacha pull. Thus, the buyer‚Äôs policy can only be ùúãùëñ , ùëñ = 0, 1, ¬∑ ¬∑ ¬∑ , ‚åä ùêµ
ùëê
‚åã. Then a buyer
with budget ùêµ will pull the gacha game if and only if ‚àÉ0 < ùëò ‚â§ ùêµ
ùëê
, ùëâùúãùëò (ùëÜ1) ‚â• 0.
Proposition 1. With budget constraints, the whale property gacha game can achieve a higher
seller‚Äôs revenue than the ‚Äútake-it-or-leave-it‚Äù strategy.
The following example demonstrates the advantage of the gacha game when facing budget-
constrained buyers. The detailed calculation of the following example is shown in Appendix E
Example 1. There is a buyerwho has the valuation of 100 and his budgetùêµ follows the distribution
that ùëÉ (ùêµ = 50) = 0.5, ùëÉ (ùêµ = 100) = 0.5. The maximum seller‚Äôs revenue achieved by the ‚Äútake-it-or-
leave-it‚Äù strategy is 50, whereas the fixed-probability gacha game with the probability being 0.01
and the price for each gacha pull being 1, can achieve the seller‚Äôs revenue of 51.448. This is because
the buyer in the gacha game will continue buying the gacha pulls until he either wins the game or
exhausts his budget, while in the ‚Äútake-it-or-leave-it‚Äù selling, only the buyer with a larger budget
than the selling price will buy the item. Therefore, the gacha game can help the seller to achieve a
higher revenue from the buyers with small budgets.
5 MULTI-ITEM GACHA GAME
In this section, we mainly focus on the whale property gacha game due to its optimality and
popularity, and explore the multi-item gacha game, which includes multiple phases and each phase
contains exactly one item. The buyer can play the gacha game in each phase. Once the buyer wins
the gacha game, he can get the corresponding item and reward in that phase. We mainly focus on
two popular and common types of the multi-item gacha games, namely, the sequential multi-item
gacha game and the banner-based multi-item gacha game, which are classified based on how their
phase ends. The sequential multi-item gacha game will end a phase and enter the next phase only
when the buyer wins the gacha game once. The banner-based multi-item gacha game allows buyer‚Äôs
opt-out, and will end a phase and enter the next phase when the buyer wins the gacha game once
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:13
or chooses to opt-out. The flexibility of the opt-out provision makes the banner-based gacha game
distinguished from the sequential gacha game.
5.1 Sequential Multi-Item Gacha Game
Sequential multi-item gacha game is widely adopted in many online video games, which can
encourage the players to pull and win the gacha game more than once. In this section, we consider
a multi-item sequential gacha game with ùêæ items (ùêæ phases), where the buyer‚Äôs valuation for the
ùëò-th item in the ùëò-th phase is ùëÖùëò (ùëò ‚â§ ùêæ). When the buyer wins the gacha game in the ùëò-th phase,
he will obtain the corresponding reward ùëÖùëò and enter the next phase, i.e., (ùëò + 1)-th phase (ùëò < ùêæ )
or the game ends (ùëò = ùêæ). That is, the buyer will sequentially get the reward ùëÖ1, ùëÖ2, ¬∑ ¬∑ ¬∑ , ùëÖùëò if he
has won the gacha game ùëò times (ùëò ‚â§ ùêæ ).
In this section, we mainly focus on the reset-after-winning mechanism and the succeed-after-
winning mechanism in the sequential multi-item gacha game. For the sequential gacha game with
the reset-after-winning mechanism, the buyer‚Äôs state in the gacha game will be reset whenever the
buyer wins the gacha game and enters the next phase. Specifically, if a buyer wins the gacha game
at state ùëÜùëò , the reset-after-winning mechanism will reset the buyer‚Äôs state, i.e., the buyer will be at
state ùëÜ1 in the next phase. As an opposite mechanism, the succeed-after-winning mechanism will
not reset the buyer‚Äôs state. Specifically, if a buyer wins the gacha game at state ùëÜùëò , he will be at
state ùëÜùëò+1 in the next phase.
We now investigate the buyer‚Äôs behavior in the whale property sequential multi-item gacha
game with the reset-after-winning mechanism, which is shown in the following proposition.
Proposition 2. For the whale property sequential multi-item gacha game with the reset-after-
winning mechanism, the buyer will continue pulling the gacha until he has won ùëò‚àó times, where
ùëò‚àó = arg max
ùëò=0,1,2,¬∑ ¬∑ ¬∑ ,ùêæ
{(
ùëò‚àëÔ∏Å
ùëó=1
ùëÖ ùëó
)
‚àí ùëòùê∏ (ùúã‚àû) ¬∑ ùëê
}
. (1)
Specially, ùëò‚àó = 0 implies that the buyer will never pull the gacha game. Here ùê∏ (ùúã‚àû) denotes the
expected number of gacha pulls needed to win the gacha game once, which is formulated in Lemma
3.3, and ùëê denotes the price of each gacha pull.
We next investigate the buyer‚Äôs behavior in the whale property sequential gacha game with
the succeed-after-winning mechanism. Compared to the gacha game with the reset-after-winning
mechanism, the buyer‚Äôs behavior in the gacha game with the succeed-after-winning mechanism is
more complicated. This is due to the fact that the expected cost for every win in the gacha game
varies and is greatly dependent on the buyer‚Äôs current state. As a result, throughout the gacha
pulling process, the buyer will make a dynamic choice, as illustrated by the following proposition.
Proposition 3. For the whale property sequential multi-item gacha game with the succeed-after-
winning mechanism, the buyer that has won the gacha game ùëò times (ùëò = 0, 1, ¬∑ ¬∑ ¬∑ , ùêæ ‚àí 1), will pull
the gacha at state ùëÜùëñ if and only if
max
ùë°=1,2,¬∑ ¬∑ ¬∑ ,ùêæ‚àíùëò
Ô£±Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£≥¬©¬≠¬´
ùëò+ùë°‚àëÔ∏Å
ùëó=ùëò+1
ùëÖ ùëó
¬™¬Æ¬¨ ‚àí ùêª (ùë°, ùëñ) ¬∑ ùëê
Ô£ºÔ£¥Ô£¥Ô£ΩÔ£¥Ô£¥Ô£æ ‚â• 0,
where ùêª (ùë°, ùëñ) denotes the expected number of gacha pulls needed to win the gacha game ùë° more times
when the buyer is at state ùëÜùëñ , which can be recursively calculated as follows:
ùêª (ùë°, ùëñ) =
{‚àë‚àû
ùëó=ùëñ ùëù ùëó
‚àèùëó‚àí1
ùë°=ùëñ
(1 ‚àí ùëùùë° ) ¬∑ ( ùëó ‚àí ùëñ + 1), ùë° = 1,‚àë‚àû
ùëó=ùëñ ùëù ùëó
‚àèùëó‚àí1
ùë°=ùëñ
(1 ‚àí ùëùùë° ) ¬∑ ( ùëó ‚àí ùëñ + 1 + ùêª (ùë° ‚àí 1, ùëó + 1)), ùë° > 1,
(2)
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:14 Canhui Chen and Zhixuan Fang
where ùëùùëñ is the probability to win the gacha game at state ùëÜùëñ .
Intuitively, in the gacha game with non-decreasing probability, resetting the buyer‚Äôs state when-
ever the buyer wins the gacha game can help the seller to achieve a higher revenue because the
buyers need to take more gacha pulls to win the game again. While the succeed-after-winning
mechanism seems to benefit the buyer but harm the seller‚Äôs revenue because the buyer can take
fewer gacha pulls to win the gacha game after he has won the gacha game. Indeed, many online
gacha games with non-decreasing probability and pity system such as ‚ÄúGenshin Impact‚Äù adopt the
reset-after-winning mechanism. However, we present the following counterintuitive result.
Insight 1. The succeed-after-winning mechanism can achieve a higher seller‚Äôs revenue compared
to the reset-after-winning mechanism in the sequential multi-item gacha game.
Here we show an example to support the counterintuitive finding above.
Example 2. Suppose that there are two items in the sequential gacha game, i.e., ùêæ = 2. The
buyer‚Äôs valuations for these two items are independently and identically distributed (i.i.d.), and
follow the uniform distribution [0, 1]. By separately selling these two items at the same price, the
maximum seller‚Äôs revenue is 0.5. With the reset-after-winning mechanism, the maximum seller‚Äôs
revenue that the sequential gacha game can achieve is 0.516. While for the sequential gacha game
with the succeed-after-winning mechanism and pity system where ùëÅ = 100, ùëùùëñ = 0.172,‚àÄùëñ < ùëÅ and
ùëÉùëÅ = 1 and the price of the gacha pull ùëê = 0.01, the seller‚Äôs revenue is 0.5218.
Reasoning. With the reset-after-winning mechanism, the expected cost for each win of the
gacha game remains the same. While with the succeed-after-winning mechanism, the expected
cost for each win of the gacha game varies. The varying cost makes it possible to achieve a higher
seller‚Äôs revenue. In Example 2, the expected cost for winning the second item is lower than the
expected cost for winning the first item due to the pity system. The lower cost of the second item
attracts the buyer to pull the gacha game, which makes it possible to increase the seller‚Äôs revenue.
We next investigate a special asymptotic scenario, where there are infinite number of items, and
the buyer‚Äôs valuation of each item is i.i.d. random variable with mean ` and variance ùúé2
.
Theorem 5.1. For the sequential multi-item gacha game with infinite items, and the buyer‚Äôs
valuation of each item follows the identical and independent distribution with mean ` and variance
ùúé2, the whale property sequential multi-item gacha game with the reset-after-winning mechanism can
achieve the asymptotic optimality on seller‚Äôs revenue, i.e.,
lim
ùêæ‚Üí‚àû
ùëê ¬∑ E(# of gacha pulls purchases)
ùêæ
= `,
where ùëê ¬∑E(# of gacha pulls purchases)
ùêæ
denotes the normalized seller‚Äôs revenue, ùëê is the price of each gacha
pull and ùêæ is the number of items in the gacha game.
Theorem 5.1 shows that the reset-after-winning mechanism is asymptotically revenue-optimal,
which implies that the reset-after-winning mechanism in the sequential multi-item gacha game
can achieve a satisfactory seller‚Äôs revenue. This explains the popularity and widespread use of the
reset-after-winning mechanism in the gacha game. Besides, compared to the bundle selling [5],
which has been shown to be asymptotically revenue-optimal, the gacha game is friendlier to the
buyers that prefer smaller purchases or have a smaller budget, and can achieve a higher seller‚Äôs
revenue when considering buyer‚Äôs budget. This is because the bundle strategy requires the buyer
either to purchase all of the items or none of them, whereas the gacha game even allows the buyer
to buy just one gacha pull.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:15
5.2 Banner-based Multi-Item Gacha Game
In this section, we explore another multi-item gacha game named banner-based multi-item gacha
game. Due to the asymptotic optimality and popularity of the reset-after-winning mechanism, we
assume that the banner-based gacha game discussed in this paper adopts the reset-after-winning
mechanism and the buyer‚Äôs state will be reset whenever he wins.
The only difference between banner-based and previous sequential gacha game is that banner-
based gacha game allows the buyer‚Äôs opt-out in some banners (phases). Therefore, the buyer can
choose to pull in some of the banners without the consecutive requirement. The banner-based
multi-item gacha game is also widely adopted in many online video games such as ‚ÄúGenshin Impact‚Äù.
In these banner-based gacha games, specific items can only be acquired during a specific period of
time. This event time period is referred to as a ‚Äúbanner‚Äù and each banner refers to a phase in the
multi-item gacha game. Each banner contains a specific item and can be considered as a single-item
gacha game. After a period of time, the next banner will replace the current one. Compared to
other probabilistic selling mechanisms, such as loot box, the banner-based gacha game is more
suitable for adding new items. Besides, empirical results [41] show that this limited-time gacha
can contribute to the seller‚Äôs revenue growth. This explains why banner-based gacha game design
gains increasing popularity in a variety of online video games.
Here, we consider a banner-based gacha game with ùêæ banners, where the buyer‚Äôs valuation of
the item in the ùëò-th banner is denoted as ùëÖùëò . We focus on the reset-after-opt-out mechanism and
the succeed-after-opt-out mechanism in the banner-based gacha game. With the reset-after-opt-out
mechanism, the buyer‚Äôs state will be reset at the beginning of the next banner when the buyer
chooses to opt-out. Specifically, for a buyer that has pulled ùëñ gacha pulls and is currently at state
ùëÜùëñ+1, if he stops pulling in the current banner and chooses to opt-out for the next banner, he will be
at state ùëÜ1 in the next banner. As an opposite mechanism, the succeed-after-opt-out mechanism
will carry the buyer‚Äôs state from one banner to another, that is, for a buyer that is currently at state
ùëÜùëñ+1, if he stops pulling in the current banners and chooses to opt-out for the next banner, he will
be at state ùëÜùëñ+1 in the next banner.
We next investigate the relation among the reset-after-opt-out mechanism and the succeed-
after-opt-out mechanism in the banner-based gacha game, and the separate selling with several
independent single-item gacha games. We can find that the banner-based gacha game with the reset-
after-opt-out mechanism is equivalent to the separate selling with several independent single-item
gacha games, because the buyer‚Äôs utility and behavior in one banner will not affect those in another
banner. However, in the banner-based gacha game with the succeed-after-opt-out mechanism, the
buyer may adopt more sophisticated gacha pulling strategies to maximize his utility. For instance,
the buyer may consider pulling some gacha pulls in one banner and then stop, carrying his state to
the next banner. The following theorem shows the equivalence of the banner-based gacha gamewith
the reset-after-opt-out mechanism, the banner-based gacha game with the succeed-after-opt-out
mechanism, and the separate selling with several independent single-item gacha games.
Theorem 5.2. The banner-based gacha game with the reset-after-opt-out mechanism, the banner-
based gacha game with the succeed-after-opt-out mechanism, and the separate selling with several
independent single-item gacha games are equivalent, i.e., the behaviors of the rational buyers and the
seller‚Äôs revenues in these gacha games are the same.
Theorem 5.2 shows the interesting results that the banner-based gacha game works like the
several independent gacha games. We can find that the succeed-after-opt-out mechanism in the
banner-based multi-item gacha game is friendly to the buyers since the buyers can quit midway in
the current banner and remain their states to the banner that they want to pull. In the gacha game
with non-decreasing probability, this inherited state can help the buyers to win the gacha game
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:16 Canhui Chen and Zhixuan Fang
with fewer gacha pulls. Besides, when considering buyer‚Äôs time-varying budget constraint, the
succeed-after-opt-out mechanism in the banner-based gacha game can help the seller to achieve a
higher revenue. Here we show an example to support this claim.
Example 3. Consider that buyer is budget-constrained and get some periodical income ùêº = 50 in
the time frame of each banner, such as monthly salary. There are two banners in this game and the
buyer‚Äôs valuation of the reward in these banners are ùëÖ1 = 100, ùëÖ2 = 50. The price for each gacha
pull is ùëê = 1. Consider the banner-based gacha game where ùëÅ = 100, ùëùùëñ = 0.01,‚àÄùëñ < ùëÅ and ùëùùëÅ = 1.
‚Ä¢ With the reset-after-opt-out mechanism, the buyer will pull in the first banner and will never
pull in the second banner. In this case, the seller‚Äôs expected revenue is 39.499.
‚Ä¢ With the succeed-after-opt-out mechanism, the buyer will first pull in the first banner. If the
buyer exhausts his budget but fails to win in the first banner, the buyer‚Äôs state will be inherited
to the second banner, which will lower the cost to win in the second banner. Therefore, the
buyer will pull in the second banner. In this case, the seller‚Äôs expected revenue is 63.397.
Theorem 5.2 and the discussion above demonstrate the efficiency of the succeed-after-opt-out
mechanism in banner-based multi-item gacha game, and provide a theoretical justification for its
widespread use in the online video games.
6 SUBSIDIES AND GRINDING BEHAVIOR IN GACHA GAME
In this section, we investigate the subsidies in the gacha game, where the seller will provide free
gacha pulls to the buyer as subsidies. This is a common practice in many online video games
[42]. Specially, players in online video games can obtain some free gacha pulls by finishing some
commissions, which motivates the players to play the game. The additional subsidies allow the
seller to further steer buyer‚Äôs behavior, especially for the scenarios where the game configuration
is not frequently changed.
Note that subsidies in the gacha game are different from the traditional subsidization where the
subsidy serves as a price discount [13]. With free gacha pulls, the buyers may get the reward of
the gacha game for free without buying any gacha pulls from the seller. This property makes the
subsidies in the gacha game more complicated and may result in buyer‚Äôs grinding behavior.
6.1 Subsidies in Single-Item Gacha Game
We first explore the subsidies in the single-item gacha game, which can demonstrate how the
subsidies affect both the buyer‚Äôs behavior and the seller‚Äôs revenue.
Suppose that buyer is subsidized withùëö free gacha pulls at the beginning of the gacha game. If
the buyer does not win the gacha game withinùëö gacha pulls, he needs to buy the gacha pulls from
the seller to continue pulling the gacha game, from which the seller can obtain revenue by selling
the gacha pulls.
6.1.1 Subsidies in the Fixed-Probability Gacha Game. We consider the subsidies in the fixed-
probability gacha game and show that subsidies degrade the seller‚Äôs revenue. This is because
subsidies in the fixed-probability gacha game can not motivate the buyer to buy more gacha pulls.
Theorem 6.1. The subsidies in fixed-probability gacha game always degrade the seller‚Äôs revenue
compared to the gacha game without any subsidies.
6.1.2 Subsidies in Varying-Probability Gacha Game with the Whale Property. We now consider the
subsidies in the varying-probability gacha game with the whale property. The following theorem
shows the buyer‚Äôs behavior and seller‚Äôs revenue with subsidies in the varying-probability gacha
game with the whale property.
Theorem 6.2. For a whale property gacha game, where the winning probability at state ùëÜùëñ is ùëùùëñ
and the cost for each gacha pull is ùëê , ifùëö free gacha pulls are subsidized in this gacha game, only the
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:17
buyer with valuation greater than ùúëùë† (ùëö) =
(‚àë‚àû
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
‚àèùëñ‚àí1
ùëó=ùëö (1 ‚àí ùëù ùëó )
)
¬∑ ùëê will buy the gacha
pulls when they run out all the free gacha pulls, and the seller‚Äôs revenue withùëö free gacha pulls is
ùëàùë† (ùëö) =
( ‚àû‚àëÔ∏Å
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
ùëñ‚àí1‚àè
ùëó=1
(1 ‚àí ùëù ùëó )
)
¬∑ ùëê ¬∑
(
1 ‚àí ùêπ
(( ‚àû‚àëÔ∏Å
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
ùëñ‚àí1‚àè
ùëó=ùëö+1
(1 ‚àí ùëù ùëó )
)
¬∑ ùëê
))
.
When arg maxùëàùë† (ùëö) > 0, subsidies can improve the seller‚Äôs revenue.
Consider a whale property gacha game with increasing probability, ùúëùë† (ùëö) in Theorem 6.2 is
monotonically decreasing with the number of free gacha pullsùëö. This implies that when the buyer‚Äôs
valuation is too low, subsidies can motivate the buyers to buy the gacha pulls, and thus improve the
seller‚Äôs revenue. Besides, compared to subsidies in the fixed-probability gacha game in Theorem 6.1,
subsidies in the varying-probability gacha game make the sellers more controllable on the buyer‚Äôs
behavior, and can help to improve the seller‚Äôs revenue. This is one of the factors contributing to
the current widespread use of the varying-probability mechanism in the gacha games [50].
6.2 Subsidies and Grinding Behavior in Banner-based Multi-Item Gacha Game
In this section, we study the subsidies in the banner-based multi-item gacha game, where the
subsidized free gacha pulls are available through all banners. Following the assumption in Section
5.2, we assume that the banner-based gacha game adopts the reset-after-winning mechanism and
the buyer‚Äôs state will be reset whenever he wins. We show that these subsidies will lead to the
buyer‚Äôs grinding behavior, that is, the buyer may accumulate the subsidized free gacha pulls, which
is shown in the following theorem.
Theorem 6.3. Consider a banner-based multi-item gacha game where there are ùêæ banners, and the
buyer‚Äôs valuations on the items in these banners are ùëÖ1, ùëÖ2, . . . , ùëÖùêæ . Suppose the buyer is currently at
the ùëñ-th banner withùëö free gacha pulls subsidized by the seller. There are three possible scenarios:
‚Ä¢ If ùëÖùëñ ‚â• ùê∏ (ùúã‚àû) ¬∑ ùëê , the buyer will use his free gacha pulls to pull the gacha game in this banner,
and if he uses out all the free gacha pulls, he will buy the gacha pulls until he wins in this banner.
‚Ä¢ If ùëÖùëñ < ùê∏ (ùúã‚àû) ¬∑ ùëê , and there exists a banner ùëó (ùëñ < ùëó ‚â§ ùêæ), such that ùëÖ ùëó ‚â• ùê∏ (ùúã‚àû) ¬∑ ùëê , then the
buyer would not buy any gacha pull before the ùëó-th banner. In the ùëó-th banner, he will first try
to use all free gacha pulls, and then start to buy gacha pulls, until he finally wins the game.
‚Ä¢ If ùëÖ ùëó < ùê∏ (ùúã‚àû) ¬∑ ùëê,‚àÄùëó ‚àà [ùëñ, ùêæ], let ùëò‚àó = arg maxùëò‚àà[ùëñ,ùêæ ] ùëÖùëò , then the buyer would not buy any
gacha pull before the ùëò‚àó-th banner, and will use the free gacha pulls to pull in the ùëò‚àó-th banner
until he wins. If ùëÖùëò‚àó < ùê∏ (ùúã‚àû, ùëÜùëö+1) ¬∑ ùëê , when the buyer uses out all the free gacha pulls in the
ùëò‚àó-th banner, he will stop pulling the gacha. Otherwise, ùëÖùëò‚àó ‚â• ùê∏ (ùúã‚àû, ùëÜùëö+1) ¬∑ ùëê , the buyer will
buy the gacha pulls and pull in the ùëò‚àó-th banner until he wins.
Here ùê∏ (ùúã‚àû) denotes the expected number of gacha pulls needed to win the gacha game, and ùê∏ (ùúã‚àû, ùëÜùëö+1)
denotes the expected number of gacha pulls needed to win the gacha game when the buyer is at state
ùëÜùëö+1, which are formulated in Lemma 3.3.
Theorem 6.3 shows that in banner-based multi-item gacha games, subsidizing the buyer with
free gacha pulls may not encourage the buyer to buy more gacha pulls. Instead, the buyer may
accumulate the subsidized free gacha pulls and only buy some gacha pulls on some most valuable
banners. This grinding behavior indeed harms the seller‚Äôs revenue. Here we illustrate the buyer‚Äôs
grinding behavior in the following example.
Example 4. Consider a banner-based game with 2 banners. The buyer‚Äôs valuations of the items
in these 2 banners are ùëÖ1 = 50 and ùëÖ2 = 100. Each banner is a gacha game where ùëÅ = 100,
ùëùùëñ = 0.01,‚àÄùëñ < ùëÅ and ùëùùëÅ = 1. According to Theorem 5.2, without any subsidies, the buyer will only
pull in the second banner, which will lead to the expected seller‚Äôs revenue of 63.397. If the seller
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:18 Canhui Chen and Zhixuan Fang
subsidizes the buyer as it does in the single-item gacha game, according to Theorem 6.2, the seller
should give the buyer 32 free gacha pulls in the first banner and no free gacha pull in the second
banner, assuming that these subsidies will encourage the buyer to pull in the first banner. However,
Theorem 6.3 shows that a rational buyer will accumulate these subsidies and only buy the gacha
pull in the second banner, resulting in the lower expected seller‚Äôs revenue of 35.895. In this case,
the subsidies lead to the buyer‚Äôs grinding behavior and harm the seller‚Äôs revenue.
Grinding behavior is prevalent in many free-to-play video games [45], which brings challenges
for game subsidy design. To mitigate the negative impact of the grinding behavior on the seller‚Äôs
revenue, the seller should carefully design the order of the banner in the multi-item gacha game.
As shown in the example above, swapping those two banners can mitigate the grinding problem.
Besides, the seller can keep the incoming banner as a secret. Without knowing the details of the
incoming banners, the buyer can not make a future plan, which can also mitigate the grinding
problem. This is also a common tactic for video game firms. Figuring out the optimal game design
with the subsidy scheme in the banner-based multi-item gacha game can be future work.
7 CASE STUDY: BLOCKCHAIN MINING AS A GACHA GAME
There are a wide range of potential applications of the gacha games in business management and
social life, such as license plate lottery and probabilistic selling [30, 39, 46]. In this section, as a
case study, we illustrate the interesting linkage between the gacha game model and the blockchain
mining mechanisms. With such a correspondence established, the results derived in gacha game
model (and possibly, results from a large body of literature in auction theory, as we have shown a
simple relationship between gacha game and auction) could shed lights on the design of blockchain
systems.
Blockchain is a distributed ledger with a sequence of blocks, which contain the transaction records
[32]. The blocks in the blockchain are stochastically generated by the miners or the validators
based on the consensus algorithms. The miners/validators should invest their computing power or
stake their coins to win the right of generating a block with a certain probability. Once a block is
generated, the corresponding miner/validator can obtain the block reward, which motivates the
miners/validators to maintain the system consensus. Here, we investigate the blockchain systems
with the two most common consensus algorithms: Proof-of-Work (PoW) [34] and Proof-of-Stake
(PoS) [38] in detail and show that the blockchain system can be modeled as the gacha game, which
is shown in Table 1. The miners in PoW blockchain or the validators in the PoS blockchain can be
modeled as the buyers in the gacha game. And the blockchain system designer is modeled as the
seller in the gacha game, who aims to maximize security assurance measured by the amount of the
invested computing power in the PoW blockchain or invested coins in the PoS blockchain.
Gacha Game
Blockchain
PoW Blockchain PoS Blockchain
buyer miner validator
seller system designer
gacha reward block reward
gacha pull hash operation with nonce hash operation with time
winning probability probability that hash value hits the target
price of each gacha pull computing cost for hash operation staking cost at time
seller‚Äôs revenue
system‚Äôs security guarantee
invested computing power invested coins
optimal configuration mining difficulty adjustment
gacha game type fixed-probability gacha game gacha games in Table 2
Table 1. Blockchain as a gacha game
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:19
7.1 Proof-of-Work Blockchain as a Gacha Game
We first show that the blockchain system with Proof-of-Work (PoW) can be modeled as a fixed-
probability gacha game. In the PoW blockchain, to generate a new block, a miner needs to find a
nonce such that the hash value is less than ùê∑ , where ùê∑ is the pre-determined mining difficulty. The
PoW blockchain can be modeled as a gacha game, where the miners act as the gacha game buyers;
each hash operation is modeled as one gacha pull; the computing cost for each hash operation
can be considered as the price of one gacha pull; when the miner finds a nonce such that the hash
value is less than ùê∑ , the miner can generate a new block and obtain the block reward ùëÖ, which
is equivalent to the case that the buyer wins the gacha game; and the probability of creating a
valid block of each hash operation is ùëù = ùê∑/2
ùëÄ
, whereùëÄ is the number of bits for the hash value,
and this probability ùëù corresponds to the winning probability in the gacha game. If the blockchain
designer wants to maximize the security guarantee in the blockchain system, where the security
guarantee in the PoW blockchain can be measured by the amount of invested computing power, he
needs to figure out the optimal design as shown in Theorem 4.10. Since the block reward and the
cost of one hash operation change over time, the blockchain designer needs to adjust the probability
ùëù to achieve optimality. Generally, ùëù is adjusted by the mining configuration ùê∑ , which is exactly
the mining difficulty adjustment in most of the PoW blockchains.
7.2 Proof-of-Stake Blockchain as a Gacha Game
Gacha Game coins as stake
coin age as stake
linear coin age Reddcoin (PoSV)
gacha game type
fixed-probability
gacha game
gacha game with
increasing probability
non-whale property
gacha game
whale property ! ! #
reset-after-winning mechanism
in sequential gacha game
#
coin age resets to 0 when
the validator finds a new block
succeed-after-opt-out mechanism
in banner-based gacha game
#
coin age does not reset to 0
when others find a new block
Table 2. PoS blockchain as a gacha game
In the PoS protocol, the validators of the blockchains create a valid block if a candidate block
satisfies the condition that Hash(time, ...) < ùê∑ ¬∑ stake where time represents the timestamp when
the candidate block is generate, ùê∑ is the pre-determined mining difficulty and stake is the value of
stakes possessed. The exact definition of stake varies from implementation to implementation.
The PoS blockchain can be modeled as a gacha game, where the validators act as the gacha game
buyers; each hash operation at each time is modeled as one gacha pull; the staking cost per unit
can be considered as the price of one gacha pull ùëê; when the hash value of the candidate block is
less then ùê∑ ¬∑ stake at a certain time, the validator can generate a new block and obtain the block
reward ùëÖ, which is equivalent to the case that the buyer wins the gacha game; and the probability
of creating a valid block is ùëù = (ùê∑ ¬∑ stake)/2
ùëÄ
, whereùëÄ is the number of bits for the hash value,
and this probability ùëù can be modeled as the probability of winning the gacha game. The system
designer of the PoS blockchain acts as the seller in the gacha game and wants to maximize the
security guarantee, which can be measured by the amount of invested tokens in the PoS blockchain.
We further illustrate such correspondence by the following typical PoS blockchains.
7.2.1 PoS Blockchains with Tokens as Stake. For the PoS blockchains that define the stake as the
number of tokens, such as Blackcoin [43], the probability that a validator creates a block at each
time is the same. These PoS blockchains can be modeled as the fixed-probability gacha games.
7.2.2 PoS Blockchains with ‚ÄúCoin Age‚Äù as Stake. Some blockchains such as Peercoin [25] define a
validator‚Äôs state as ‚Äúcoin age‚Äù, which is the product of the number of tokens and the amount of time
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:20 Canhui Chen and Zhixuan Fang
that a single validator has held them. Therefore, the probability that a validator creates a valid block
is increasing monotonically. Specifically, the probability of winning the gacha (creating a valid
block) at the ùëñ-th gacha pull (hash operation at time ùëñ) is ùëùùëñ = min
{
ùê∑ ¬∑#ùë°ùëúùëòùëíùëõùë† ¬∑ùëñ
2
ùëÄ , 1
}
, where #ùë°ùëúùëòùëíùëõùë†
denotes the number of tokens owned by the validator. We can model these PoS blockchains with
‚Äúcoin age‚Äù as stake as the gacha games with increasing probability, where the coin age works like
the pity counter in the pity system [50]. The increasing probability in the blockchain can resolve
the problem that some unlucky validators may not produce blocks in a long time and reduce the
variance of validators‚Äô income.
7.2.3 Multi-item Gacha Game in PoS Blockchain. The generation process of each block can be
modeled as a single-item gacha game, and the whole block chain generation process can be modeled
as a multi-item gacha game. In most of the PoS blockchains with ‚Äúcoin age‚Äù, the coin age of
the validator will be accumulated until he successfully generates a new block. This is similar to
the succeed-after-opt-out mechanism in the banner-based gacha game in Section 5.2, where the
behavior that the buyer chooses to opt-out in the banner-based gacha game corresponds to the
scenario that other validators find a new block in the PoS blockchain, and the buyer‚Äôs state will
be carried to the next banner. Besides, once the validator generates a new block, his accumulated
coin age will be reset to 0, which is similar to the reset-after-winning mechanism in the sequential
gacha game in Section 5.1.
7.2.4 PoS Blockchain as a non-Whale Property Gacha Game. Reddcoin is a special PoS blockchain,
whose consensus protocol is Proof of Stake Velocity (PoSV) [36], a variation of the traditional PoS.
According to the source code of Reddcoin (line 66-85 in file ‚Äúreddcoin/src/kernal.cpp‚Äù) [3], the coin
age weight in Reddcoin is calculated as follows:
weight =
{
‚àí0.00408163 ‚àó time
3 + 0.05714286 ‚àó time
2 + time, time ‚â§ 7days,
8.4 ‚àó log(time) ‚àí 7.94564525, otherwise.
(3)
Figure 3 (a) shows the accumulated weight of the coin age in Reddcoin, which is calculated based
on equation (3). We can find that with the non-linear accumulation of coin age, the coin age
in Reddcoin is accumulated at a higher rate than in traditional PoS initially, and the marginal
accumulation decreases over time. Figure 3 (b) shows the expected reward per day in Reddcoin and
traditional PoS. By modeling the Reddcoin as a gacha game, with each day staking as a gacha pull,
the expected reward per day in Reddcoin is consistent with ùëùùëñùëÖ in the gacha game model. Note
that in the traditional PoS with coin age, the normalized expected reward per day is 1 [2], which
can be considered as the cost ùëê = 1 in the gacha game model. With the expected reward per day
ùëùùëñùëÖ and the cost ùëê , we can apply the gacha game model to analyze the Reddcoin system. According
to Lemma 3.1 and Lemma 3.2, the optimal policy for the validator in Reddcoin (the buyer in the
gacha game) is ùúã13, which implies that Reddcoin is a non-whale property gacha game. Figure 3
(c) shows the value ùëâùúã13
(ùëÜùëñ ) in MDP of the gacha game model of Reddcoin. The rational validator
should stake to the system initially, and then update his staking after 14 days. This theoretical
analysis is highly consistent with the staking phenomenon in Reddcoin, where staking regularly
for 2 weeks (14 days) can achieve the highest validator‚Äôs revenue [2]. Recall that the non-whale
property gacha game can not achieve the highest seller‚Äôs revenue but can encourage more people
to join the game. This is also the core idea of Reddcoin. Reddcoin encourages users to use the coins
instead of staking them, which can promote a better coin economy by increasing the participation
of coin holders [36].
8 CONCLUSION
In this work, we propose a mathematical model for the gacha game, where the sequential decision
of the buyer is modeled as a Markov Decision Process (MDP). We introduce the definition of whale
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:21
0 5 10 15 20 25 30
time (days)
0
5
10
15
20
25
30
a
c
c
u
m
u
la
te
d
 w
e
ig
h
t
PoSV in Reddcoin
Traditional PoS
(a) Accumulated weight of the coin age
in Reddcoin and traditional PoS
0 5 10 15 20 25 30
time (days)
0.6
0.7
0.8
0.9
1
1.1
1.2
e
x
p
e
c
te
d
 r
e
w
a
rd
 p
e
r 
d
a
y
PoSV in Reddcoin
Traditional PoS
(b) Expected reward per day in Redd-
coin and traditional PoS
0 2 4 6 8 10 12 14
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
(c) Valueùëâùúã13
(ùëÜùëñ ) in MDP of the gacha
game model of Reddcoin
Fig. 3. Gacha game model of Reddcoin
property and further show the optimality of the whale property gacha game and the equivalence
of the gacha game and the single-item single-bidder Myerson auction. We also provide an optimal
gacha game configuration that can achieve the maximum seller‚Äôs revenue. Besides, we further
explore the multi-item gacha games, including the sequential multi-item gacha game and the
banner-based multi-item gacha game. Moreover, we discuss the subsidies in the gacha game and
model the buyer‚Äôs grinding behavior with subsidies. Finally, we offer a case study of the gacha
game on the blockchain system.
REFERENCES
[1] 2022. Gacha game: From Wikipedia, the free encyclopedia. https://en.wikipedia.org/wiki/Gacha_game
[2] 2022. Reddcoin Wiki: Proof of Stake Velocity (PoSV). https://wiki.reddcoin.com/Proof_of_Stake_Velocity_(PoSV)
[3] 2022. Source code of reddcoin on Github. https://github.com/reddcoin-project/reddcoin/blob/master/src/kernel.cpp
[4] Moshe Babaioff, Nicole Immorlica, Brendan Lucier, and S Matthew Weinberg. 2020. A simple and approximately
optimal mechanism for an additive buyer. Journal of the ACM (JACM) 67, 4 (2020), 1‚Äì40.
[5] Yannis Bakos and Erik Brynjolfsson. 1999. Bundling information goods: Pricing, profits, and efficiency. Management
science 45, 12 (1999), 1613‚Äì1630.
[6] Foteini Baldimtsi, Varun Madathil, Alessandra Scafuro, and Linfeng Zhou. 2020. Anonymous lottery in the proof-of-
stake setting. In 2020 IEEE 33rd Computer Security Foundations Symposium (CSF). IEEE, 318‚Äì333.
[7] Aleksander Berentsen, Gabriele Camera, and Christopher Waller. 2004. The distribution of money and prices in an
equilibrium with lotteries. Economic Theory 24, 4 (2004), 887‚Äì906.
[8] Patrick Briest, Shuchi Chawla, Robert Kleinberg, and S Matthew Weinberg. 2015. Pricing lotteries. Journal of Economic
Theory 156 (2015), 144‚Äì174.
[9] Brian C Britt and Rebecca K Britt. 2021. From waifus to whales: The evolution of discourse in a mobile game-based
competitive community of practice. Mobile Media & Communication 9, 1 (2021), 3‚Äì29.
[10] Frank D Buono, Mark D Griffiths, Matthew E Sprong, Daniel P Lloyd, Ryan M Sullivan, and Thomas D Upton. 2017.
Measures of behavioral function predict duration of video game play: Utilization of the Video Game Functional
Assessment‚ÄìRevised. Journal of Behavioral Addictions 6, 4 (2017), 572‚Äì578.
[11] NingyuanChen, AdamNElmachtoub,Michael LHamilton, andXiao Lei. 2020. Loot box pricing and design.Management
Science (2020).
[12] Shaddin Dughmi, Alon Eden, Michal Feldman, Amos Fiat, and Stefano Leonardi. 2016. Lottery pricing equilibria. In
Proceedings of the 2016 ACM Conference on Economics and Computation. 401‚Äì418.
[13] Zhixuan Fang, Longbo Huang, and Adam Wierman. 2019. Prices and subsidies in the sharing economy. Performance
Evaluation 136 (2019), 102037.
[14] Scott Fay and Jinhong Xie. 2008. Probabilistic goods: A creative way of selling products and services. Marketing Science
27, 4 (2008), 674‚Äì690.
[15] Tan Gan. 2021. Gacha Game: Selling a Unit Good to a Prospect Theory Consumer. Available at SSRN 3790798 (2021).
[16] Haiqian Gu, Jie Wang, Ziwen Wang, Bojin Zhuang, and Fei Su. 2018. Modeling of user portrait through social media.
In 2018 IEEE international conference on multimedia and expo (ICME). IEEE, 1‚Äì6.
[17] Oussama Hanguir, Will Ma, and Christopher Thomas Ryan. 2021. Optimizing for strategy diversity in the design of
video games. arXiv preprint arXiv:2106.11538 (2021).
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
https://en.wikipedia.org/wiki/Gacha_game
https://wiki.reddcoin.com/Proof_of_Stake_Velocity_(PoSV)
https://github.com/reddcoin-project/reddcoin/blob/master/src/kernel.cpp
6:22 Canhui Chen and Zhixuan Fang
[18] Sergiu Hart and Noam Nisan. 2017. Approximate revenue maximization with multiple items. Journal of Economic
Theory 172 (2017), 313‚Äì347.
[19] Tingliang Huang and Zhe Yin. 2021. Dynamic probabilistic selling when customers have boundedly rational expecta-
tions. Manufacturing & Service Operations Management 23, 6 (2021), 1597‚Äì1615.
[20] Tingliang Huang and Yimin Yu. 2014. Sell probabilistic goods? A behavioral explanation for opaque selling. Marketing
Science 33, 5 (2014), 743‚Äì759.
[21] Yan Huang, Stefanus Jasin, and Puneet Manchanda. 2019. ‚ÄúLevel Up‚Äù: Leveraging skill and engagement to maximize
player game-play in online video games. Information Systems Research 30, 3 (2019), 927‚Äì947.
[22] Yuming Huang, Jing Tang, Qianhao Cong, Andrew Lim, and Jianliang Xu. 2021. Do the Rich Get Richer? Fairness
Analysis for Blockchain Incentives. In Proceedings of the 2021 International Conference on Management of Data. 790‚Äì803.
[23] Yifan Jiao, Christopher S Tang, and Jingqi Wang. 2021. Selling virtual items in free-to-play games: Transparent selling
vs. opaque selling. Service Science 13, 2 (2021), 53‚Äì76.
[24] MARK R Johnson and T Brock. 2019. How are video games and gambling converging. Gambling Research Exchange
Ontario 20 (2019).
[25] Sunny King and Scott Nadal. 2012. Ppcoin: Peer-to-peer crypto-currency with proof-of-stake. self-published paper,
August 19, 1 (2012).
[26] Marco Koeder, Ema Tanaka, and Philip Sugai. 2017. Mobile Game Price Discrimination effect on users of Freemium
services‚ÄìAn initial outline of Game of Chance elements in Japanese F2P mobile games. (2017).
[27] Marco Josef Koeder and Ema Tanaka. 2017. Game of chance elements in free-to-play mobile games. A freemium
business model monetization tool in need of self-regulation? (2017).
[28] Sung-bin Lee, DongYeop Hwang, Jonghyun Kim, and Ki-Hyung Kim. 2020. Proof-of-Lottery: Design for Block
Producing Algorithm Based on PoS for Scalability. In 2020 International Conference on Information Networking (ICOIN).
IEEE, 666‚Äì669.
[29] Kevin Liu. 2019. A global analysis into loot boxes: Is it virtually gambling. Washington International Law Journal 28
(2019), 763.
[30] John Loomis. 1982. Use of travel cost models for evaluating lottery rationed recreation: application to big game hunting.
Journal of Leisure Research 14, 2 (1982), 117‚Äì124.
[31] Will Luton. 2013. Free-to-play: Making money from games you give away. New Riders.
[32] Ahmed Afif Monrat, Olov Schel√©n, and Karl Andersson. 2019. A survey of blockchain from the perspectives of
applications, challenges, and opportunities. IEEE Access 7 (2019), 117134‚Äì117151.
[33] Roger B Myerson. 1981. Optimal auction design. Mathematics of operations research 6, 1 (1981), 58‚Äì73.
[34] Satoshi Nakamoto. 2008. Bitcoin: A peer-to-peer electronic cash system. Decentralized Business Review (2008), 21260.
[35] Rio Akbar Pramanta. 2019. Psychoanalytical Approach to Transnational Money Laundering Utilizing Japanese Mobile
Online Games with Gacha System: A Forecasting Study. Journal of International Relations 5, 4 (2019), 646‚Äì652.
[36] Larry Ren. 2014. Proof of stake velocity: Building the social currency of the digital age. Self-published white paper
(2014).
[37] John Riley and Richard Zeckhauser. 1983. Optimal selling strategies: When to haggle, when to hold firm. The Quarterly
Journal of Economics 98, 2 (1983), 267‚Äì289.
[38] Fahad Saleh. 2021. Blockchain without waste: Proof-of-stake. The Review of financial studies 34, 3 (2021), 1156‚Äì1190.
[39] David Scrogin, Robert P Berrens, and Alok K Bohara. 2000. Policy changes and the demand for lottery-rationed big
game hunting licenses. Journal of Agricultural and Resource Economics (2000), 501‚Äì519.
[40] Lifei Sheng, Christopher Thomas Ryan, Mahesh Nagarajan, Yuan Cheng, and Chunyang Tong. 2022. Incentivized
actions in freemium games. Manufacturing & Service Operations Management 24, 1 (2022), 275‚Äì284.
[41] Akiko Shibuya, Mizuha Teramoto, and Akiyo Shoun. 2015. Systematic analysis of in-game purchases and social
features of mobile social games in Japan. In DiGRA Conference.
[42] Dr Serkan Toto. 2021. Gacha: Explaining Japan‚Äôs TopMoney-Making Social GameMechanism. https://www.serkantoto.
com/2012/02/21/gacha-social-games/
[43] Pavel Vasin. 2014. Blackcoin‚Äôs proof-of-stake protocol v2. URL: https://blackcoin. co/blackcoin-pos-protocol-v2-whitepaper.
pdf 71 (2014).
[44] Orlando Woods. 2022. The affective embeddings of gacha games: Aesthetic assemblages and the mediated expression
of the self. New Media & Society (2022), 14614448211067756.
[45] Orlando Woods. 2022. The Economy of Time, the Rationalisation of Resources: Discipline, Desire and Deferred Value
in the Playing of Gacha Games. Games and Culture (2022), 15554120221077728.
[46] Jun Yang, Antung Liu, Ping Qin, and Joshua Linn. 2016. The effect of owning a car on travel behavior: Evidence from
the Beijing license plate lottery. Resources for the Future Discussion Paper (2016), 16‚Äì18.
[47] Wanshan Yang, Gemeng Yang, Ting Huang, Lijun Chen, and Youjian Eugene Liu. 2018. Whales, dolphins, or minnows?
towards the player clustering in free online games based on purchasing behavior via data mining technique. In 2018
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
https://www.serkantoto.com/2012/02/21/gacha-social-games/
https://www.serkantoto.com/2012/02/21/gacha-social-games/
Gacha Game Analysis and Design 6:23
IEEE International Conference on Big Data (Big Data). IEEE, 4101‚Äì4108.
[48] Michael Yin and Robert Xiao. 2022. The Reward for Luck: Understanding the Effect of Random Reward Mechanisms in
Video Games on Player Experience. In CHI Conference on Human Factors in Computing Systems. 1‚Äì14.
[49] Yi Zhao, Sha Yang, Matthew Shum, and Shantanu Dutta. 2022. A Dynamic Model of Player Level-Progression Decisions
in Online Gaming. Management Science (2022).
[50] Amelia Zollner. 2021. Genshin Impact Pity System: What is Pity and How Does it Work? https://www.
rockpapershotgun.com/genshin-impact-pity-system
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
https://www.rockpapershotgun.com/genshin-impact-pity-system
https://www.rockpapershotgun.com/genshin-impact-pity-system
6:24 Canhui Chen and Zhixuan Fang
A PROOFS IN SECTION 3
Lemma 3.1 The value of MDP of the policy ùúãùëò at state ùëÜùëñ is
ùëâùúãùëò (ùëÜùëñ ) =
(
ùëùùëñ +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
ùëùùëö
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
ùëÖ ‚àí
(
1 +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
ùëê, ‚àÄùëñ ‚â§ ùëò
=
(
1 ‚àí
ùëò‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
ùëÖ ‚àí
(
ùëùùëñ +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
(ùëö ‚àí ùëñ + 1)ùëùùëö
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó ) + (ùëò ‚àí ùëñ + 1)
ùëò‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
ùëê
Proof. According to the MDP, we have
ùëâùúãùëò (ùëÜùëò ) = ùëùùëòùëÖ ‚àí ùëê,
and
ùëâùúãùëò (ùëÜùëñ ) = ùëùùëñùëÖ ‚àí ùëê + (1 ‚àí ùëùùëñ )ùëâùúãùëò (ùëÜùëñ+1), ùëñ < ùëò,
Recursively, we have
ùëâùúãùëò (ùëÜùëò‚àíùëñ ) = ùëùùëò‚àíùëñùëÖ ‚àí ùëê +
ùëñ‚àí1‚àëÔ∏Å
ùëö=0
(ùëùùëò‚àíùëöùëÖ ‚àí ùëê)
ùëò‚àíùëö‚àí1‚àè
ùëó=ùëò‚àíùëñ
(1 ‚àí ùëù ùëó ).
Therefore we have
ùëâùúãùëò (ùëÜùëñ ) = ùëùùëñùëÖ ‚àí ùëê +
ùëò‚àíùëñ‚àí1‚àëÔ∏Å
ùëö=0
(ùëùùëò‚àíùëöùëÖ ‚àí ùëê)
ùëò‚àíùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
= ùëùùëñùëÖ ‚àí ùëê +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
(ùëùùëöùëÖ ‚àí ùëê)
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
=
(
ùëùùëñ +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
ùëùùëö
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
ùëÖ ‚àí
(
1 +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
ùëê, ‚àÄùëñ ‚â§ ùëò.
To prove the lemma, we only need to prove the following two mathematical claims:
Claim 1:
(
ùëùùëñ +
‚àëùëò
ùëö=ùëñ+1
ùëùùëö
‚àèùëö‚àí1
ùëó=ùëñ (1 ‚àí ùëù ùëó )
)
=
(
1 ‚àí ‚àèùëò
ùëó=ùëñ (1 ‚àí ùëù ùëó )
)
.
Proof 1: For convenience, we denote that ùëùùëñ = 1 ‚àí ùëùùëñ . Then we have(
ùëùùëñ +
ùëò‚àëÔ∏Å
ùëö=ùëó+1
ùëùùëö
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
+ (1 ‚àí ùëùùëò )
ùëò‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
=ùëùùëñ + ùëùùëñ+1ùëùùëñ + ùëùùëñ+2ùëùùëñ ¬Øùëùùëñ+1 + ¬∑ ¬∑ ¬∑ + ùëùùëòùëùùëñ ¬Øùëùùëñ+1 ¬∑ ¬∑ ¬∑ ¬Øùëùùëò‚àí1 + ùëùùëòùëùùëñ ¬Øùëùùëñ+1 ¬∑ ¬∑ ¬∑ ¬Øùëùùëò‚àí1
=ùëùùëñ + ùëùùëñ+1ùëùùëñ + ùëùùëñ+2ùëùùëñ ¬Øùëùùëñ+1 + ¬∑ ¬∑ ¬∑ + ùëùùëñ ¬Øùëùùëñ+1 ¬∑ ¬∑ ¬∑ ¬Øùëùùëò‚àí1
=ùëùùëñ + ùëùùëñ (ùëùùëñ+1 + ¬Øùëùùëñ+1 (ùëùùëñ+2 + ¬Øùëùùëñ+2 (¬∑ ¬∑ ¬∑ + ¬Øùëùùëò‚àí2 (ùëùùëò‚àí1 + ¬Øùëùùëò‚àí1))))
=ùëùùëñ + ùëùùëñ (ùëùùëñ+1 + ¬Øùëùùëñ+1 (ùëùùëñ+2 + ¬Øùëùùëñ+2 (¬∑ ¬∑ ¬∑ + (ùëùùëò‚àí1 + ¬Øùëùùëò‚àí1))))
=ùëùùëñ + ùëùùëñ = 1
(4)
Then Claim 1 can be prove by moving
‚àèùëò
ùëó=ùëñ (1 ‚àí ùëù ùëó ) to the right side of the equation (4).
Claim 2:(
1 +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
=
(
ùëùùëñ +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
(ùëö ‚àí ùëñ + 1)ùëùùëö
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó ) + (ùëò ‚àí ùëñ + 1)
ùëò‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
)
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:25
Proof 2: We first prove that
ùëùùëñ +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
((ùëö ‚àí ùëñ + 1)ùëùùëö ‚àí 1)
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó ) + (ùëò ‚àí ùëñ + 1)
ùëò‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó ) = 1
The proof goes as follows.
ùëùùëñ +
ùëò‚àëÔ∏Å
ùëö=ùëñ+1
((ùëö ‚àí ùëñ + 1)ùëùùëö ‚àí 1)
ùëö‚àí1‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó )
=ùëùùëñ + (2ùëùùëñ+1 ‚àí 1)ùëùùëñ + (3ùëùùëñ+2 ‚àí 1)ùëùùëñ ¬Øùëùùëñ+1 + ¬∑ ¬∑ ¬∑ + ((ùëò ‚àí ùëñ)ùëùùëò‚àí1 ‚àí 1) ùëùùëñ ¬Øùëùùëñ+1 ¬∑ ¬∑ ¬∑ ¬Øùëùùëò‚àí2
+ ((ùëò ‚àí ùëñ + 1)ùëùùëò ‚àí 1)ùëùùëòùëùùëò ¬∑ ¬∑ ¬∑ ¬Øùëùùëò‚àí1 + (ùëò ‚àí ùëñ + 1)ùëùùëòùëùùëò ¬∑ ¬∑ ¬∑ ¬Øùëùùëò‚àí1
=ùëùùëñ + (2ùëùùëñ+1 ‚àí 1)ùëùùëñ + (3ùëùùëñ+2 ‚àí 1)ùëùùëñ ¬Øùëùùëñ+1 + ¬∑ ¬∑ ¬∑ + ((ùëò ‚àí ùëñ)ùëùùëò‚àí1 ‚àí 1) ùëùùëñ ¬Øùëùùëñ+1 ¬∑ ¬∑ ¬∑ ¬Øùëùùëò‚àí2 + (ùëò ‚àí ùëñ)ùëùùëòùëùùëò ¬∑ ¬∑ ¬∑ ¬Øùëùùëò‚àí1
=ùëùùëñ + ùëùùëñ ((2ùëùùëñ+1 ‚àí 1) + ¬Øùëùùëñ+1 ((3ùëùùëñ+2 ‚àí 1) + ùëù3 (¬∑ ¬∑ ¬∑ ¬Øùëùùëò‚àí2 ((ùëò ‚àí ùëñ)ùëùùëò‚àí1 + (ùëò ‚àí ùëñ) ¬Øùëùùëò‚àí1))))
=ùëùùëñ + ùëùùëñ ((2ùëùùëñ+1 ‚àí 1) + ¬Øùëùùëñ+1 ((3ùëùùëñ+2 ‚àí 1) + ¬Øùëùùëñ+2 (¬∑ ¬∑ ¬∑ (ùëò ‚àí 2)ùëùùëò‚àí2 ‚àí 1 + ¬Øùëùùëò‚àí2 (ùëò ‚àí 2))))
=ùëùùëñ + ùëùùëñ ((2ùëùùëñ+1 ‚àí 1) + 2 ¬Øùëùùëñ+1)
=ùëùùëñ + ùëùùëñ = 1
(5)
By adding
‚àëùëò
ùëö=ùëñ+1
‚àèùëö‚àí1
ùëó=ùëñ (1‚àí ùëù ùëó ) to both sides of the equation (5), Claim 2 can be proved. The proof
is thus completed. ‚ñ°
Lemma 3.2 The policy ùúãùëò at state ùëÜùëñ is optimal if and only if the following conditions are satisfied:
(1) ùëâùúãùëò (ùëÜ ùëó ) ‚â• 0, ‚àÄùëó ‚àà [ùëñ, ùëò].
(2) ùëâùúãùëô (ùëÜùëò+1) ‚â§ 0, ‚àÄùëô ‚àà [ùëò + 1,‚àû).
Proof. We first show that if Condition (1) and (2) are satisfied, the policy ùúãùëò is the optimal policy.
Here we adopt the backward induction (value iteration) to obtain the optimal policy. As mentioned
in Section 3.1, there are two possible actions at each state, namely, ùëéùëù and ùëéùëû . The action ùëéùëù means
that the buyer will pull the gacha game, and the action ùëéùëû means that the buyer will quit. According
to Condition (2), we have that
max
ùëô‚àà[ùëò+1,‚àû)
ùëâùúãùëô (ùëÜùëò+1) ‚â§ 0.
Therefore, we have
ùëâ (ùëÜùëò+1) = max
ùëé‚àà{ùëéùëù ,ùëéùëû }
(‚àëÔ∏Å
ùëÜ ‚Ä≤
ùëÉùëé (ùëÜùëò+1, ùëÜ
‚Ä≤) (ùëÖùëé (ùëÜùëò+1, ùëÜ
‚Ä≤) +ùëâ (ùëÜ ‚Ä≤))
)
= max
(
0, max
ùëô‚àà[ùëò+1,‚àû)
ùëâùúãùëô (ùëÜùëò+1)
)
= 0.
Thus, the optimal action at state ùëÜùëò+1 is
ùúã (ùëÜùëò+1) = arg maxùëé‚àà{ùëéùëù ,ùëéùëû }
(‚àëÔ∏Å
ùëÜ ‚Ä≤
ùëÉùëé (ùëÜùëò+1, ùëÜ
‚Ä≤) (ùëÖùëé (ùëÜùëò+1, ùëÜ
‚Ä≤) +ùëâ (ùëÜ ‚Ä≤))
)
= ùëéùëû .
According to Condition (1), we have that
max
ùëô‚àà[ ùëó,ùëò ]
ùëâùúãùëô (ùëÜ ùëó ) ‚â• ùëâùúãùëò (ùëÜ ùëó ) ‚â• 0, ‚àÄùëó ‚àà [ùëñ, ùëò] .
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:26 Canhui Chen and Zhixuan Fang
Therefore, we have
ùëâ (ùëÜ ùëó ) = max
ùëé‚àà{ùëéùëù ,ùëéùëû }
(‚àëÔ∏Å
ùëÜ ‚Ä≤
ùëÉùëé (ùëÜ ùëó , ùëÜ ‚Ä≤) (ùëÖùëé (ùëÜ ùëó , ùëÜ ‚Ä≤) +ùëâ (ùëÜ ‚Ä≤)
)
= max
(
0, max
ùëô‚àà[ ùëó,‚àû)
ùëâùúãùëô (ùëÜ ùëó )
)
= max
(
0,max
(
max
ùëô‚àà[ ùëó,ùëò ]
ùëâùúãùëô (ùëÜ ùëó ), max
ùëô‚àà[ùëò+1,‚àû)
ùëâùúãùëô (ùëÜ ùëó )
))
‚â• max
ùëô‚àà[ ùëó,ùëò ]
ùëâùúãùëô (ùëÜ ùëó ) ‚â• 0, ‚àÄùëó ‚àà [ùëñ, ùëò] .
Thus, the optimal action at state ùëÜ ùëó , ‚àÄùëó ‚àà [ùëñ, ùëò] is
ùúã (ùëÜ ùëó ) = arg maxùëé‚àà{ùëéùëù ,ùëéùëû }
(‚àëÔ∏Å
ùëÜ ‚Ä≤
ùëÉùëé (ùëÜ, ùëÜ ‚Ä≤) (ùëÖùëé (ùëÜ, ùëÜ ‚Ä≤) +ùëâ (ùëÜ ‚Ä≤))
)
= ùëéùëù .
Therefore, we have that
ùúã (ùëÜ ùëó ) = ùëéùëù , ‚àÄùëó ‚àà [ùëñ, ùëò], and ùúã (ùëÜùëò+1) = ùëéùëû,
which means that the buyer should continue pulling the gacha game until he wins or reaches state
ùëÜùëò+1. Thus, when Condition (1) and (2) are satisfied, the optimal policy for the buyer at state ùëÜùëñ is
ùúãùëò .
We next show that if the policy ùúãùëò at state ùëÜùëñ is optimal, then Condition (1) and (2) are satisfied.
Assume that Condition (1) does not hold, i.e., ‚àÉ ùëó ‚àà [ùëñ, ùëò], s.t.,ùëâùúãùëò (ùëÜ ùëó ) < 0. Suppose that ‚àÉùë° ‚àà
[ùëñ + 1, ùëó], s.t. ùëâùúã ùëó‚àí1
(ùëÜùë° ) > ùëâùúãùëò (ùëÜùë° ), then we have
ùëâùúã ùëó‚àí1
(ùëÜùë°‚àí1) ‚àíùëâùúãùëò (ùëÜùë°‚àí1)
=
(
(ùëùùë°ùëÖ ‚àí ùëê) + (1 ‚àí ùëùùë°‚àí1)ùëâùúã ùëó‚àí1
(ùëÜùë° )
)
‚àí
(
(ùëùùë°ùëÖ ‚àí ùëê) + (1 ‚àí ùëùùë°‚àí1)ùëâùúãùëò (ùëÜùë° )
)
=(1 ‚àí ùëùùë°‚àí1)
(
ùëâùúã ùëó‚àí1
(ùëÜùë° ) ‚àíùëâùúãùëò (ùëÜùë° )
)
> 0,
which means
ùëâùúã ùëó‚àí1
(ùëÜùë° ) > ùëâùúãùëò (ùëÜùë° ) ‚áí ùëâùúã ùëó‚àí1
(ùëÜùë°‚àí1) > ùëâùúãùëò (ùëÜùë°‚àí1), ùë° ‚àà [ùëñ + 1, ùëó] .
As we know that ùëâùúã ùëó‚àí1
(ùëÜ ùëó ) = 0, and thus ùëâùúã ùëó‚àí1
(ùëÜ ùëó ) > ùëâùúãùëò (ùëÜ ùëó ). By mathematical induction, we have
that
ùëâùúã ùëó‚àí1
(ùëÜùë° ) > ùëâùúãùëò (ùëÜùë° ), ‚àÄùë° ‚àà [ùëñ, ùëó] .
Specially, we have ùëâùúã ùëó‚àí1
(ùëÜ1) > ùëâùúãùëò (ùëÜ1), which implies that the policy ùúã ùëó‚àí1
is better than the policy
ùúãùëò , which leads to contradiction.
Assume that Condition (2) does not hold, i.e., ‚àÉÀÜùëô ‚àà [ùëò + 1,‚àû), s.t.,ùëâùúã ÀÜùëô
(ùëÜùëò ) > 0. Suppose that
‚àÉùë° ‚àà [ùëñ + 1, ùëò + 1], s.t. ùëâùúã ÀÜùëô
(ùëÜùë° ) > ùëâùúãùëò (ùëÜùë° ), then we have
ùëâùúã ÀÜùëô
(ùëÜùë°‚àí1) ‚àíùëâùúãùëò (ùëÜùë°‚àí1)
=
(
(ùëùùë°ùëÖ ‚àí ùëê) + (1 ‚àí ùëùùë°‚àí1)ùëâùúã ÀÜùëô
(ùëÜùë° )
)
‚àí
(
(ùëùùë°ùëÖ ‚àí ùëê) + (1 ‚àí ùëùùë°‚àí1)ùëâùúãùëò (ùëÜùë° )
)
=(1 ‚àí ùëùùë°‚àí1)
(
ùëâùúã ÀÜùëô
(ùëÜùë° ) ‚àíùëâùúãùëò (ùëÜùë° )
)
> 0,
which means
ùëâùúã ÀÜùëô
(ùëÜùë° ) > ùëâùúãùëò (ùëÜùë° ) ‚áí ùëâùúã ÀÜùëô
(ùëÜùë°‚àí1) > ùëâùúãùëò (ùëÜùë°‚àí1), ùë° ‚àà [ùëñ + 1, ùëò + 1] .
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:27
As we know that ùëâùúãùëò (ùëÜùëò+1) = 0, and thus ùëâùúã ÀÜùëô
(ùëÜùëò+1) > ùëâùúãùëò (ùëÜùëò+1). By mathematical induction, we
have that
ùëâùúã ÀÜùëô
(ùëÜùë° ) > ùëâùúãùëò (ùëÜùë° ), ‚àÄùë° ‚àà [ùëñ, ùëò + 1] .
Specially, we have ùëâùúã ÀÜùëô
(ùëÜ1) > ùëâùúãùëò (ùëÜ1), which implies that the policy ùúãÀÜùëô
is better than the policy ùúãùëò ,
which leads to contradiction. This proof is thus completed. ‚ñ°
Lemma 3.3 For the buyer who adopts policy ùúãùëò and is currently at state ùëÜùëñ , the expected number of
gacha pulls that the buyer will buy is
ùê∏ (ùúãùëò , ùëÜùëñ ) =
{
0, ùëò < ùëñ,
ùëùùëñ +
‚àëùëò
ùëó=ùëñ+1
( ùëó ‚àí ùëñ + 1)ùëù ùëó
‚àèùëó‚àí1
ùëô=ùëñ
(1 ‚àí ùëùùëô ) + (ùëò ‚àí ùëñ + 1)‚àèùëò
ùëó=ùëñ (1 ‚àí ùëù ùëó ), ùëò ‚â• ùëñ .
Proof. The probability of winning the gacha game at state ùëÜ ùëó ( ùëó ‚â• ùëñ) is
ùëû( ùëó) =
{
ùëùùëñ , ùëó = ùëñ,
ùëù ùëó
‚àèùëó‚àí1
ùëô=ùëñ
(1 ‚àí ùëùùëô ), ùëó > ùëñ .
Therefore, the expected number of gacha pulls needed to win the gacha game for a buyer with
policy ùúãùëò at state ùëÜùëñ is
ùê∏ (ùúãùëò , ùëÜùëñ ) = (ùëò ‚àí ùëñ + 1)
ùëò‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó ) +
ùëò‚àëÔ∏Å
ùëó=ùëñ
ùëû( ùëó) ¬∑ ( ùëó ‚àí ùëñ + 1)
= ùëùùëñ +
ùëò‚àëÔ∏Å
ùëó=ùëñ+1
( ùëó ‚àí ùëñ + 1)ùëù ùëó
ùëó‚àí1‚àè
ùëô=ùëñ
(1 ‚àí ùëùùëô ) + (ùëò ‚àí ùëñ + 1)
ùëò‚àè
ùëó=ùëñ
(1 ‚àí ùëù ùëó ), ‚àÄùëò ‚â• ùëñ .
When ùëò < ùëñ , the buyer will never buy any gacha pull. Therefore, the expected number of gacha
pulls that the buyer will buy is 0. The proof is thus completed. ‚ñ°
B PROOFS IN SECTION 4
Lemma 4.2 The optimal policy ùúã‚àó for the buyer in the gacha game with the whale property is
ùúã‚àó =
{
ùúã‚àû, When ùëâùúã‚àû (ùëÜ1) ‚â• 0 ‚áî ùëÖ ‚â• ùê∏ (ùúã‚àû)ùëê,
ùúã0, When ùëâùúã‚àû (ùëÜ1) < 0 ‚áî ùëÖ < ùê∏ (ùúã‚àû)ùëê.
Proof. According to Lemma 3.1, the value in MDP at the initial state ùëÜ1 for a buyer with valuation
ùëÖ and policy ùúãùëò is
ùëâùúã‚àû (ùëÜ1) = ùëÖ ‚àí
(
ùëù1 +
‚àû‚àëÔ∏Å
ùëö=2
ùëöùëùùëö
ùëö‚àí1‚àè
ùëñ=1
(1 ‚àí ùëùùëñ )
)
ùëê. (6)
Besides, according to Lemma 3.3, we have that
ùê∏ (ùúã‚àû) =
(
ùëù1 +
‚àû‚àëÔ∏Å
ùëö=2
ùëöùëùùëö
ùëö‚àí1‚àè
ùëñ=1
(1 ‚àí ùëùùëñ )
)
.
Therefore, Equation (6) can be rewritten as
ùëâùúã‚àû (ùëÜ1) = ùëÖ ‚àí ùê∏ (ùúã‚àû)ùëê.
Thus, the optimal policy ùúã‚àó
in the gacha game with the whale property is straightforward, which
is listed as follows: {
When ùëâùúã‚àû (ùëÜ1) ‚â• 0 ‚áî ùëÖ ‚â• ùê∏ (ùúã‚àû)ùëê, ùúã‚àó = ùúã‚àû,
When ùëâùúã‚àû (ùëÜ1) < 0 ‚áî ùëÖ < ùê∏ (ùúã‚àû)ùëê, ùúã‚àó = ùúã0.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:28 Canhui Chen and Zhixuan Fang
The proof is thus completed. ‚ñ°
Lemma 4.3 If the probability of winning the gacha game is monotonically increasing for each gacha
pull, i.e., ùëùùëñ ‚â§ ùëùùëñ+1,‚àÄùëñ , the gacha game has the whale property.
Proof. We can prove this lemma by contradiction. If the gacha game is not whale, there exists a
buyer with valuation ùëÖ whose optimal policy is ùúãùëò , ùëò ‚â† 0 such thatùëâùúãùëò (ùëÜ ùëó ) > ùëâùúãùëñ (ùëÜ ùëó ),‚àÄùëñ > ùëò, ùëó ‚â§ ùëò ,
which means that the buyer will stop pulling the gacha after ùëò rounds. Then the value at state ùëÜùëò in
the MDP is
ùëâùúãùëò (ùëÜùëò ) = ùëùùëòùëÖ ‚àí ùëê.
which should greater or equal to zero, otherwise the buyer should stop earlier and ùúãùëò will not be
the optimal policy. Since ùëùùëò+1 ‚â• ùëùùëò , we have that
ùëâùúãùëñ (ùëÜùëò+1) = ùëùùëò+1ùëÖ ‚àí ùëê + (1 ‚àí ùëùùëò+1)ùëâùúãùëñ (ùëÜùëò+2) ‚â• ùëùùëò+1ùëÖ ‚àí ùëê ‚â• ùëâùúãùëò (ùëÜùëò ), ùëñ > ùëò,
which leads to contradiction. Therefore, if ùëùùëñ ‚â§ ùëùùëñ+1,‚àÄùëñ , the gacha game has the whale property.
The proof is thus completed. ‚ñ°
Lemma 4.5 When the buyer‚Äôs valuation follows the discrete distribution ùëÉ (ùëÖ = ùëÖùëñ ) = ùõΩùëñ , ùëñ =
1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ , the whale property gacha game with equivalent probability ùëù = ùëùùëñ‚àó can achieve the
maximum seller‚Äôs revenue ùëê
ùëùùëñ‚àó
‚àëùëÄ
ùëó=ùëñ‚àó ùõΩ ùëó , where
ùëñ‚àó = arg max
ùëñ‚àà{1,2,¬∑ ¬∑ ¬∑ ,ùëÄ }
ùëê
ùëùùëñ
ùëÄ‚àëÔ∏Å
ùëó=ùëñ
ùõΩ ùëó , and ùëùùëñ =
ùëê
ùëÖùëñ
‚â§ 1.
Proof. The whale property of the gacha game implies that the buyer will either continue pulling
the gacha or just leave it. Suppose that in a whale property gacha game, the buyer with valuation
greater than ùëÖùëñ will pull the gacha and those with smaller valuation will just leave. Then we
know that the equivalent probability should be
ùëê
ùëÖùëñ
‚â§ ùëù < ùëê
ùëÖùëñ‚àí1
. Besides, fixing the price of each
gacha pull ùëê , the smaller ùëù implies a large ùê∏ (ùúã‚àû) and possibly a higher revenue. Therefore, in
that scenario, the optimal equivalent probability is ùëù = ùëùùëñ = ùëê
ùëÖùëñ
, and can achieve the revenue
ùëê
ùëùùëñ
‚àëùëÄ
ùëó=ùëñ ùõΩ ùëó . By enumerating ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ , we can find the optimal configuration. The proof is
thus completed. ‚ñ°
Lemma 4.7 When the buyer‚Äôs valuation follows the discrete distribution ùëÉ (ùëÖ = ùëÖùëñ ) = ùõΩùëñ , ùëñ =
1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ . Consider a gacha game G‚àó that can be divided ùêø(ùêø ‚â§ ùëÄ) whale property subgames, and
the ùëñ-th whale property subgame contains ùëõùëñ rounds of gacha pulls, i.e., ùëõùëñ = ùëéùëñ ‚àí ùëéùëñ‚àí1, ùëõùëñ ‚â• 0, where
ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ . Specially, the length of ùëñ-th subgame being ùëõùëñ = 0 implies that the ùëñ-th whale property
subgame is dummy. The equivalent probability of the ùëñ-th subgame is ùëùùëñ = ùëê/ùëÖùëñ (ùëê ‚â§ ùëÖùëñ ) and the
lengths of these whale property subgame n = (ùëõ1, ùëõ2, ¬∑ ¬∑ ¬∑ , ùëõùëÄ ) are
arg max
n
ùëê ¬∑
ùëÄ‚àëÔ∏Å
ùëò=1
ùõΩùëòùëÑùëò (n), ùëõùëñ ‚â• 0,‚àÄùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ.
where ùëÑùëò (n) is the expected number of gacha pulls bought by the buyer with valuation ùëÖùëò in the
gacha game with the lengths of the whale property subgames n, which is formulated as follows:
ùëÑùëò (n) =
Ô£±Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£≥
1‚àí(1‚àíÔøΩÃÉÔøΩ1 )ùëõ1
ÔøΩÃÉÔøΩ1
, ùëò = 1,(‚àëùëò
ùëñ=1
(‚àèùëñ‚àí1
ùëó=1
(1 ‚àí ùëù ùëó )ùëõ ùëó
)
1‚àí(1‚àíÔøΩÃÉÔøΩùëñ )ùëõùëñ
ÔøΩÃÉÔøΩùëñ
)
, ùëò > 1.
Then the gacha game G‚àó is optimal and can achieve the maximum seller‚Äôs revenue.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:29
Proof. If the optimal gacha game is the whale property gacha game with equivalent probability
ùëùùëò , then it corresponds to the scenario where ùëõùëñ = 0,‚àÄùëñ ‚â† ùëò . So we only need to consider the
non-whale property gacha game. Without the whale property, we assume that the buyer with
valuation ùëÖùëò will continue pulling the gachas and stop at state ùëÜ‚àëùëò
ùëñ=1
ùëõùëñ
. Then we know that the
subgame G(‚àëùëò‚àí1
ùëñ=1
ùëõùëñ ,
‚àëùëò
ùëñ=1
ùëõùëñ ) has the whale property because none of the buyers will stop at the
midway between state ùëÜ‚àëùëò‚àí1
ùëñ=1
ùëõùëñ
and state ùëÜ‚àëùëò
ùëñ=1
ùëõùëñ
. Since the buyer with valuation greater or equal
to ùëÖùëò will pull in the subgame G(‚àëùëò‚àí1
ùëñ=1
ùëõùëñ ,
‚àëùëò
ùëñ=1
ùëõùëñ ), we know that the equivalent probability of
the subgame G(‚àëùëò‚àí1
ùëñ=1
ùëõùëñ ,
‚àëùëò
ùëñ=1
ùëõùëñ ) should be at least ùëê/ùëÖùëò . To achieve the maximum revenue, the
equivalent probability of the subgame G(‚àëùëò‚àí1
ùëñ=1
ùëõùëñ ,
‚àëùëò
ùëñ=1
ùëõùëñ ) should be ùëê/ùëÖùëò . By enumerating all the
possible combinations of ùëõùëñ , ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùëÄ , we can find the optimal design for the general gacha
game.
We next will show that the expected number of gacha pulls bought by the buyer with valuation
ùëÖùëò in the gacha game with configuration n = (ùëõ1, ùëõ2, ¬∑ ¬∑ ¬∑ , ùëõùëÄ ) is
ùëÑùëò (n) =
Ô£±Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£≥
1‚àí(1‚àíÔøΩÃÉÔøΩ1 )ùëõ1
ÔøΩÃÉÔøΩ1
, ùëò = 1,(‚àëùëò
ùëñ=1
(‚àèùëñ‚àí1
ùëó=1
(1 ‚àí ùëù ùëó )ùëõ ùëó
)
1‚àí(1‚àíÔøΩÃÉÔøΩùëñ )ùëõùëñ
ÔøΩÃÉÔøΩùëñ
)
, ùëò > 1.
When ùëò = 1, we have that
ùëÑ1 =
ùëõ1‚àëÔ∏Å
ùëñ=1
ùëù1 (1 ‚àí ùëù1)ùëñ‚àí1 ¬∑ ùëñ + (1 ‚àí ùëù1)ùëõ1 ¬∑ ùëõ1 =
1 ‚àí (1 ‚àí ùëù1)ùëõ1
ùëù1
.
To prove the lemma above, we only need to prove that
ùëÑùëò+1 ‚àíùëÑùëò =
(
ùëò‚àè
ùëñ=1
(1 ‚àí ùëùùëò )ùëõùëò
)
1 ‚àí (1 ‚àí ùëùùëò+1)ùëõùëò+1
ùëùùëò+1
.
We know that ‚àÄùëò > 1, we have
ùëÑùëò =
¬©¬≠¬≠¬´
ùëõ1‚àëÔ∏Å
ùëñ=1
ùëù1 (1 ‚àí ùëù1)ùëñ‚àí1 ¬∑ ùëñ +
ùëò‚àëÔ∏Å
ùëñ=2
‚àëùëñ
ùë°=1
ùëõùë°‚àëÔ∏Å
ùëó=1+‚àëùëñ‚àí1
ùë°=1
ùëõùë°
(
ùëñ‚àí1‚àè
ùë†=1
(1 ‚àí ùëùùë† )ùëõùë†
)
¬∑ ùëùùëñ (1 ‚àí ùëùùëñ ) ùëó‚àí
‚àëùëñ‚àí1
ùë°=1
ùëõùë° ¬∑ ùëñ
¬™¬Æ¬Æ¬¨+
(
ùëò‚àè
ùëñ=1
(1 ‚àí ùëùùëñ )ùëõùëñ
)
¬∑
(
ùëò‚àëÔ∏Å
ùëñ=1
ùëõùëñ
)
.
Then we have that
ùëÑùëò+1
‚àí ùëÑùëò
=
‚àëùëò+1
ùë°=1
ùëõùë°‚àëÔ∏Å
ùëó=1+‚àëùëò
ùë°=1
ùëõùë°
(
ùëò‚àè
ùë†=1
(1 ‚àí ÔøΩÃÉÔøΩùë† )ùëõùë†
)
¬∑ ÔøΩÃÉÔøΩùëò+1
(1 ‚àí ÔøΩÃÉÔøΩùëò+1
) ùëó‚àí
‚àëùëò
ùë°=1
ùëõùë° ¬∑ ùëñ +
(
ùëò+1‚àè
ùëñ=1
(1 ‚àí ÔøΩÃÉÔøΩùëñ )ùëõùëñ
)
¬∑
(
ùëò+1‚àëÔ∏Å
ùëñ=1
ùëõùëñ
)
‚àí
(
ùëò‚àè
ùëñ=1
(1 ‚àí ÔøΩÃÉÔøΩùëñ )ùëõùëñ
)
¬∑
(
ùëò‚àëÔ∏Å
ùëñ=1
ùëõùëñ
)
=
(
ùëò‚àè
ùëñ=1
(1 ‚àí ÔøΩÃÉÔøΩùëò )ùëõùëò
) (
ùëõùëò+1‚àëÔ∏Å
ùëñ=1
ÔøΩÃÉÔøΩùëò+1
(1 ‚àí ÔøΩÃÉÔøΩùëò+1
)ùëñ‚àí1 ¬∑
(
ùëñ +
ùëò‚àëÔ∏Å
ùëó=1
ùëõùëò
))
+
(
ùëò+1‚àè
ùëñ=1
(1 ‚àí ÔøΩÃÉÔøΩùëñ )ùëõùëñ
)
¬∑
(
ùëò+1‚àëÔ∏Å
ùëñ=1
ùëõùëñ
)
‚àí
(
ùëò‚àè
ùëñ=1
(1 ‚àí ÔøΩÃÉÔøΩùëñ )ùëõùëñ
)
¬∑
(
ùëò‚àëÔ∏Å
ùëñ=1
ùëõùëñ
)
=
(
ùëò‚àè
ùëñ=1
(1 ‚àí ÔøΩÃÉÔøΩùëò )ùëõùëò
) (
ùëõùëò+1‚àëÔ∏Å
ùëñ=1
ÔøΩÃÉÔøΩùëò+1
(1 ‚àí ÔøΩÃÉÔøΩùëò+1
)ùëñ‚àí1 ¬∑ ùëñ + (1 ‚àí ÔøΩÃÉÔøΩùëò+1
)ùëõùëò+1ùëõùëò+1
+
ùëò‚àëÔ∏Å
ùëó=1
ùëõùëò
(
(1 ‚àí ÔøΩÃÉÔøΩùëò+1
)ùëõùëò+1 +
ùëõùëò+1‚àëÔ∏Å
ùëñ=1
ÔøΩÃÉÔøΩùëò+1
(1 ‚àí ÔøΩÃÉÔøΩùëò+1
)ùëñ‚àí1
)
‚àí
ùëò‚àëÔ∏Å
ùëó=1
ùëõùëò
)
=
(
ùëò‚àè
ùëñ=1
(1 ‚àí ÔøΩÃÉÔøΩùëò )ùëõùëò
) (
ùëõùëò+1‚àëÔ∏Å
ùëñ=1
ÔøΩÃÉÔøΩùëò+1
(1 ‚àí ÔøΩÃÉÔøΩùëò+1
)ùëñ‚àí1 ¬∑ ùëñ + (1 ‚àí ÔøΩÃÉÔøΩùëò+1
)ùëõùëò+1ùëõùëò+1
)
=
(
ùëò‚àè
ùëñ=1
(1 ‚àí ÔøΩÃÉÔøΩùëò )ùëõùëò
)
1 ‚àí (1 ‚àí ÔøΩÃÉÔøΩùëò+1
)ùëõùëò+1
ÔøΩÃÉÔøΩùëò+1
The proof is thus completed. ‚ñ°
Theorem 1 The maximum seller‚Äôs revenue of the non-whale property gacha game is less than that of
the whale property gacha game.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:30 Canhui Chen and Zhixuan Fang
Proof. According to Lemma 4.7, we have that
ùëê ¬∑ùëÑùëò (n) =
ùëò‚àëÔ∏Å
ùëñ=1
ùê¥ùëñ ,
where
ùê¥ùëò =
{
(1 ‚àí ùõº1)ùëÖ1, ùëò = 1,(‚àèùëò‚àí1
ùëñ=1
ùõºùëñ
)
(1 ‚àí ùõºùëò )ùëÖùëò , ùëò > 1,
ùõºùëò = (1 ‚àí ùëùùëò )ùëõùëò ‚àà [0, 1] .
According to Proposition 4.7, the optimal configuration to achieve the maximum seller‚Äôs revenue
can be found by solving the following optimization problem.
max ùëì (ùõº1, ùõº2, ¬∑ ¬∑ ¬∑ , ùõºùêæ ) = (1 ‚àí ùõº1)ùëÖ1 +
ùêæ‚àëÔ∏Å
ùëò=2
(
1 ‚àí
ùëò‚àí1‚àëÔ∏Å
ùëó=1
ùõΩ ùëó
) (
ùëò‚àí1‚àè
ùëñ=1
ùõºùëñ
)
(1 ‚àí ùõºùëò )ùëÖùëò , ùõºùëñ ‚àà [0, 1],‚àÄùëñ (7)
Let ùõº‚àó
1
, ¬∑ ¬∑ ¬∑ , ùõº‚àó
ùêæ
= arg max ùëì (ùõº1, ùõº2, ¬∑ ¬∑ ¬∑ , ùõºùêæ ) and ùëò‚àó = min{ùëñ |ùõº‚àóùëñ = 0}. If ùõº‚àóùëñ = 1,‚àÄ1 ‚â§ ùëñ < ùëò‚àó, the
optimal game configuration is a whale property gacha game, which is consistent with Proposition
4.5. Otherwise, if ‚àÉ1 ‚â§ ùëñ < ùëò‚àó, ùë† .ùë° ., 0 < ùõº‚àóùëñ < 1, the non-whale property gacha game can achieve the
maximum revenue. However, if we calculate the partial derivative of the function ùëì (ùõº1, ùõº2, ¬∑ ¬∑ ¬∑ , ùõºùêæ ),
we have
ùúïùëì
ùúïùõºùëñ
= ùëêùëñ , where ùëêùëñ is a constant, which implies that to achieve the maximum, ùõºùëñ should be
either 0 or 1. Therefore, only the whale property gacha game can achieve the maximum revenue.
We now have proved the optimality of the whale property gacha game when the buyer‚Äôs valuation
follows a discrete distribution. We further show that the results of the optimality of the whale
property gacha game can be extended to the scenario where the buyers‚Äô valuation follows the
general distribution ùêπ (continuous/discrete distribution and even the mixed continuous and discrete
distribution), where ùêπ (¬∑) is the cumulative distribution function.
Suppose that a gacha game with ùêæ whale property subgames can achieve the maximum seller‚Äôs
revenue when the buyer‚Äôs valuation follows the distribution ùêπ . Denote ùëÖùëñ as the minimum valuation
of the buyers who will pull in the ùëñ-th whale property subgame. Then ùõΩùëñ = ùêπ (ùëÖùëñ+1) ‚àí ùêπ (ùëÖùëñ ) denotes
the proportion of buyers who will pull the ùëñ-th whale property subgame but will not pull the
(ùëñ + 1)-th subgame. Specially, ùõΩùêæ = ùêπ (ùëÖùêæ+1) ‚àí ùêπ (ùëÖùêæ ) = 1 ‚àí ùêπ (ùëÖùêæ ) denotes the proportion of buyers
who will pull all of the ùêæ subgames. ùõΩ0 = ùêπ (ùëÖ1) ‚àí ùêπ (ùëÖ0) = ùêπ (ùëÖ1) denotes the proportion of buyers
who will never pull the gacha game. Then we have that
‚àëùêæ
ùëñ=0
ùõΩùëñ = 1. According to Lemma 4.7, we
know that the equivalent probability of the ùëñ-th subgame is ùëùùëñ = ùëê/ùëÖùëñ , ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùêæ . Combining
with Lemma 4.7, we can find the optimal gacha game design that can achieve the maximum seller‚Äôs
revenue by converting into an optimization problem shown in Equation (7). Similar to the proof
above, we can show that only the whale property gacha game can achieve the maximum revenue
even when the buyer‚Äôs valuation follows a general distribution. The proof is thus completed. ‚ñ°
Lemma B.1. Define opt(ùëÖ) ‚àà {0, 1, 2, ¬∑ ¬∑ ¬∑ } as a function of the buyer‚Äôs valuation ùëÖ, where the optimal
gacha pulling policy for a buyer with valuation ùëÖ at the initial state ùëÜ1 is ùúãopt(ùëÖ) . Then the function
opt(ùëÖ) is nondecreasing on ùëÖ.
Proof. Consider there are two buyers with their valuations ùëÖ1, ùëÖ2, we want to prove that if
ùëÖ1 ‚â§ ùëÖ2, then we have opt(ùëÖ1) ‚â§ opt(ùëÖ2). The proof goes as follows.
For convenience, we denoteùëâùúãùëò (ùëÜùëñ , ùëÖ) as the value of MDP of the policy ùúãùëò at state ùëÜùëñ for a buyer
with valuation ùëÖ, which is consistent with the definition in Lemma 3.1. According to Lemma 3.1,
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:31
we know that ùëâùúãùëò (ùëÜùëñ , ùëÖ) is monotonically increasing on ùëÖ, which implies that
ùëâùúãùëò (ùëÜùëñ , ùëÖ1) ‚â§ ùëâùúãùëò (ùëÜùëñ , ùëÖ2), ‚àÄùëò, ùëñ . (8)
According to Lemma 3.2, since the optimal policy for the buyer with valuation ùëÖ1 at the initial state
ùëÜ1 is ùúãopt(ùëÖ1 ) , we have that
ùëâùúã
opt(ùëÖ
1
) (ùëÜ ùëó , ùëÖ1) ‚â• 0, ‚àÄùëó ‚àà [1, opt(ùëÖ1)] . (9)
Combining inequality of (8) and (9), we have that
ùëâùúã
opt(ùëÖ
1
) (ùëÜ ùëó , ùëÖ2) ‚â• ùëâùúã
opt(ùëÖ
1
) (ùëÜ ùëó , ùëÖ1) ‚â• 0, ‚àÄùëó ‚àà [1, opt(ùëÖ1)],
which implies that opt(ùëÖ2) ‚â• opt(ùëÖ1), otherwise, it leads to contradiction to the condition (1) in
Lemma 3.2. The proof is thus completed. ‚ñ°
Theorem 4.9 Consider a gacha game G, which can be divided into ùêø consecutive whale property
subgames, namely, G(ùëéùëñ‚àí1 + 1, ùëéùëñ ), ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùêø, where ùëé0 = 0 and ùëéùêø = ‚àû. The gacha game
G is equivalent to the single-item single-bidder Myerson auction with the allocation rule ùë• (ùëè) =
ùëÉsucc (ùúãopt(ùëè ) ) and the payment rule ùë¶ (ùëè) = ùê∏ (ùúãopt(ùëè ) ) ¬∑ ùëê , where ùëè is the bidding value, ùúãopt(ùëÖ) denotes
the optimal gacha pulling policy for a buyer with valuation ùëÖ at initial state ùëÜ1, which is formulated as
opt(ùëÖ) =
Ô£±Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≥
ùëé0 = 0, ùëÖ ‚â§ ùê∏ (ùúãùëé
1
) ¬∑ùëê
ùëÉsucc (ùúãùëé
1
) ,
ùëéùëñ ,
(ùê∏ (ùúãùëéùëñ )‚àíùê∏ (ùúãùëéùëñ‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ )‚àíùëÉsucc (ùúãùëéùëñ‚àí1
) < ùëÖ ‚â§ (ùê∏ (ùúãùëéùëñ+1
)‚àíùê∏ (ùúãùëéùëñ )) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ+1
)‚àíùëÉsucc (ùúãùëéùëñ )
,
ùëéùêø = ‚àû, ùëÖ >
(ùê∏ (ùúã‚àû )‚àíùê∏ (ùúãùëéùêø‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúã‚àû )‚àíùëÉsucc (ùúãùëéùêø‚àí1
),
ùëÉsucc (ùúãùëò ) = 1 ‚àí ‚àèùëò
ùëó=1
(1 ‚àí ùëù ùëó ) denotes the probability of winning the gacha game with policy ùúãùëò , and
ùê∏ (ùúãùëò ) denotes the expected number of gacha pulls with policy ùúãùëò , which is formulated in Lemma 3.3.
Proof. According to the definition of the whale property subgame in Definition 4.6, the optimal
policy for a buyer with his personal valuationùëÖ ‚àà R+ at the initial state ùëÜ1 could be ùúãùëéùëñ , ùëñ = 0, 1, ¬∑ ¬∑ ¬∑ , ùêø.
Define opt(ùëÖ) ‚àà {0, 1, 2, ¬∑ ¬∑ ¬∑ } is a function of the buyer‚Äôs valuation ùëÖ, and ùúãopt(ùëÖ) denotes the optimal
gacha pulling policy for a buyer with valuation ùëÖ at the initial state ùëÜ1. According to Lemma B.1,
the function opt(ùëÖ) is monotone. Therefore, if the buyer‚Äôs optimal policy is ùúãùëéùëñ , his valuation ùëÖ
should satisfy the following conditions:Ô£±Ô£¥Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£¥Ô£≥
ùëâùúãùëéùëñ (ùëÜ1, ùëÖ) ‚â§ ùëâùúãùëéùëñ+1
(ùëÜ1, ùëÖ), ùëñ = 0,
ùëâùúãùëéùëñ‚àí1
(ùëÜ1, ùëÖ) < ùëâùúãùëéùëñ (ùëÜ1, ùëÖ) ‚â§ ùëâùúãùëéùëñ+1
(ùëÜ1, ùëÖ), ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùêø ‚àí 1,
ùëâùúãùëéùëñ (ùëÜ1, ùëÖ) > ùëâùúãùëéùëñ‚àí1
(ùëÜ1, ùëÖ), ùëñ = ùêø.
(10)
For convenience, we denote the probability of winning the gacha game with policy ùúãùëò as ùëÉsucc (ùúãùëò ),
which is calculated as follows:
ùëÉsucc (ùúãùëò ) = 1 ‚àí
ùëò‚àè
ùëó=1
(1 ‚àí ùëù ùëó ).
Then combining Lemma 3.1 and Lemma 3.3, the value of MDP for the buyer with valuation ùëÖ and
policy ùúãùëò at initial state ùëÜ1 can be simplified as
ùëâùúãùëò (ùëÜ1, ùëÖ) =
(
1 ‚àí
ùëò‚àè
ùëó=1
(1 ‚àí ùëù ùëó )
)
ùëÖ ‚àí
(
ùëù1 +
ùëò‚àëÔ∏Å
ùëö=2
ùëöùëùùëö
ùëö‚àí1‚àè
ùëñ=1
(1 ‚àí ùëùùëñ ) + ùëò
ùëò‚àè
ùëñ=1
(1 ‚àí ùëùùëñ )
)
ùëê
= ùëÉsucc (ùúãùëò )ùëÖ ‚àí ùê∏ (ùúãùëò ) ¬∑ ùëê,
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:32 Canhui Chen and Zhixuan Fang
where ùê∏ (ùúãùëò ) denotes the expected number of gacha pulls with policy ùúãùëò . Thus, the value of MDP
for the buyer with valuation ùëÖ and policy ùúãùëéùëñ at initial state ùëÜ1 is
ùëâùúãùëéùëñ (ùëÜ1, ùëÖ) = ùëÉsucc (ùúãùëéùëñ )ùëÖ ‚àí ùê∏ (ùúãùëéùëñ ) ¬∑ ùëê
Then by solving the inequality (10), the optimal policy ùúãopt(ùëÖ) for the buyer with valuation ùëÖ at
initial state ùëÜ1 is
opt(ùëÖ) =
Ô£±Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≥
ùëé0 = 0, ùëÖ ‚â§ ùê∏ (ùúãùëé
1
) ¬∑ùëê
ùëÉsucc (ùúãùëé
1
) ,
ùëéùëñ ,
(ùê∏ (ùúãùëéùëñ )‚àíùê∏ (ùúãùëéùëñ‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ )‚àíùëÉsucc (ùúãùëéùëñ‚àí1
) < ùëÖ ‚â§ (ùê∏ (ùúãùëéùëñ+1
)‚àíùê∏ (ùúãùëéùëñ )) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ+1
)‚àíùëÉsucc (ùúãùëéùëñ )
,
ùëéùêø = ‚àû, ùëÖ >
(ùê∏ (ùúã‚àû )‚àíùê∏ (ùúãùëéùêø‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúã‚àû )‚àíùëÉsucc (ùúãùëéùêø‚àí1
)
(11)
Then the value of the buyer with valuation ùëÖ and his optimal policy ùúãopt(ùëÖ) at initial state ùëÜ1 is
ùëâùúã
opt(ùëÖ) (ùëÜ1, ùëÖ) = ùëÉsucc (ùúãopt(ùëÖ) ) ¬∑ ùëÖ ‚àí ùê∏ (ùúãopt(ùëÖ) ) ¬∑ ùëê (12)
We now design a single-item single-bidder Myerson auction and then show its equivalence to
the gacha game. We first design the allocation rule with bidding value ùëè as follows:
ùë• (ùëè) =
Ô£±Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≥
ùëÉsucc (ùúãùëé0
) = 0, ùëè ‚â§ ùê∏ (ùúãùëé
1
) ¬∑ùëê
ùëÉsucc (ùúãùëé
1
) ,
ùëÉsucc (ùúãùëéùëñ ) ‚àà (0, 1), (ùê∏ (ùúãùëéùëñ )‚àíùê∏ (ùúãùëéùëñ‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ )‚àíùëÉsucc (ùúãùëéùëñ‚àí1
) < ùëè ‚â§ (ùê∏ (ùúãùëéùëñ+1
)‚àíùê∏ (ùúãùëéùëñ )) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ+1
)‚àíùëÉsucc (ùúãùëéùëñ )
,
ùëÉsucc (ùúãùëéùêø ) = 1, ùëè >
(ùê∏ (ùúã‚àû )‚àíùê∏ (ùúãùëéùêø‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúã‚àû )‚àíùëÉsucc (ùúãùëéùêø‚àí1
)
(13)
Since ùëéùëñ‚àí1 < ùëéùëñ , ùëñ = 1, 2, ¬∑ ¬∑ ¬∑ , ùêø and ùëÉsucc (ùúãùëò ) is monotonically increasing on ùëò , we know that the
allocation rule ùë• (ùëè) is also monotone. According to Myerson‚Äôs Lemma, we know that the allocation
rule ùë• (ùëè) is also implementable, and there exists a unique payment ruleùë¶ (ùëè) such that the sealed-bid
auction mechanism (ùë•,ùë¶) is dominant-strategy incentive-compatible (DSIC). The payment rule
ùë¶ (ùëè) is calculated as follows:
ùë¶ (ùëè) =
‚à´ ùëè
0
ùëß
ùëë
ùëëùëß
ùë• (ùëß)ùëëùëß
= ùëè ¬∑ ùë• (ùëè) ‚àí
‚à´ ùëè
0
ùë• (ùëß)ùëëùëß
=
Ô£±Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≥
0, ùëè ‚â§ ùê∏ (ùúãùëé
1
) ¬∑ùëê
ùëÉsucc (ùúãùëé
1
) ,‚àëùëñ
ùëó=1
(
ùëÉsucc (ùúãùëéùëñ ) ¬∑
(ùê∏ (ùúãùëéùëñ )‚àíùê∏ (ùúãùëéùëñ‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ )‚àíùëÉsucc (ùúãùëéùëñ‚àí1
)
)
,
(ùê∏ (ùúãùëéùëñ )‚àíùê∏ (ùúãùëéùëñ‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ )‚àíùëÉsucc (ùúãùëéùëñ‚àí1
) < ùëè ‚â§ (ùê∏ (ùúãùëéùëñ+1
)‚àíùê∏ (ùúãùëéùëñ )) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ+1
)‚àíùëÉsucc (ùúãùëéùëñ )
,‚àëùêø
ùëó=1
(
ùëÉsucc (ùúãùëéùëñ ) ¬∑
(ùê∏ (ùúãùëéùëñ )‚àíùê∏ (ùúãùëéùëñ‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ )‚àíùëÉsucc (ùúãùëéùëñ‚àí1
)
)
, ùëè >
(ùê∏ (ùúã‚àû )‚àíùê∏ (ùúãùëéùêø‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúã‚àû )‚àíùëÉsucc (ùúãùëéùêø‚àí1
)
=
Ô£±Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£¥Ô£¥Ô£¥Ô£≥
ùê∏ (ùúãùëé0
) ¬∑ ùëê = 0, ùëè ‚â§ ùê∏ (ùúãùëé
1
) ¬∑ùëê
ùëÉsucc (ùúãùëé
1
) ,
ùê∏ (ùúãùëéùëñ ) ¬∑ ùëê,
(ùê∏ (ùúãùëéùëñ )‚àíùê∏ (ùúãùëéùëñ‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ )‚àíùëÉsucc (ùúãùëéùëñ‚àí1
) < ùëè ‚â§ (ùê∏ (ùúãùëéùëñ+1
)‚àíùê∏ (ùúãùëéùëñ )) ¬∑ùëê
ùëÉsucc (ùúãùëéùëñ+1
)‚àíùëÉsucc (ùúãùëéùëñ )
,
ùê∏ (ùúãùëéùêø ) ¬∑ ùëê, ùëè >
(ùê∏ (ùúã‚àû )‚àíùê∏ (ùúãùëéùêø‚àí1
)) ¬∑ùëê
ùëÉsucc (ùúã‚àû )‚àíùëÉsucc (ùúãùëéùêø‚àí1
)
(14)
With the payment rule ùë¶ (ùëè), the mechanism is DSIC and thus truthful. Therefore, the bidding
value ùëè is exactly the buyer‚Äôs personal valuation ùëÖ. Comparing equation (11) and (13), we can find
that ùë• (ùëè) = ùëÉsucc (ùúãopt(ùëè ) ). Comparing equation (11) and (14), we can find that ùë¶ (ùëè) = ùê∏ (ùúãopt(ùëè ) ) ¬∑ ùëê .
Following the quasilinear utility model of the bidder in Myerson auction, the bidder‚Äôs utility is
ùë¢ (ùëÖ) = ùëÖ ¬∑ ùë• (ùëÖ) ‚àí ùë¶ (ùëÖ)
= ùëÉsucc (ùúãopt(ùëÖ) ) ¬∑ ùëÖ ‚àí ùê∏ (ùúãopt(ùëÖ) ) ¬∑ ùëê
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:33
which is exactly the MDP value of the buyer with valuation ùëÖ and his optimal policy ùúãopt(ùëÖ) at
initial state ùëÜ1 in equation (12). Therefore, the gacha game is equivalent to the Myerson auction
with the stochastic allocation rule ùë• (ùëè) and the payment rule ùë¶ (ùëè). The proof is thus completed. ‚ñ°
Theorem 4.10 The optimal gacha game that can achieve the maximum seller‚Äôs revenue should have
whale property and satisfy the following condition:
ùê∏ (ùúã‚àû) ¬∑ ùëê = ùëü ‚àó = arg max
ùëü
ùëü ¬∑ (1 ‚àí ùêπ (ùëü )),
where ùëê is the cost of each gacha pull, ùê∏ (ùúã‚àû) is the expected number of gacha pulls to win the gacha
game with policy ùúã‚àû, ùëü ‚àó is the optimal reserved price in the single-item single-bidder Myerson auction.
Proof. According to Theorem 4.8 and Theorem 4.9, we know that only the whale property
gacha game can achieve the maximum seller‚Äôs revenue. To prove the theorem above, we only need
to prove that in the gacha game with the whale property, for a buyer with valuation ùëÖ, where ùëÖ
follows the distribution ùêπ , when ùëÖ ‚â• ùëêùê∏ (ùúã‚àû), we have ùëâùúã‚àû (ùëÜ1) ‚â• 0. This implies that when the
valuation is greater than or equal to ùëêùê∏ (ùúã‚àû), the optimal policy for the buyer is ùúã‚àû, that is, the
buyer will continue pulling the gacha until he wins the gacha game.
According to Lemma 3.1, the value at the initial state ùëÜ1 in the MDP is
ùëâùúã‚àû (ùëÜ1) = ùëÖ ‚àí
(
ùëù1 +
‚àû‚àëÔ∏Å
ùëö=2
ùëöùëùùëö
ùëö‚àí1‚àè
ùëñ=1
(1 ‚àí ùëùùëñ )
)
ùëê.
Therefore, the optimal policy for the buyer is ùúã‚àû when
ùëâùúã‚àû (ùëÜ1) ‚â• 0 ‚áî ùëÖ ‚â•
(
ùëù1 +
‚àû‚àëÔ∏Å
ùëö=2
ùëöùëùùëö
ùëö‚àí1‚àè
ùëñ=1
(1 ‚àí ùëùùëñ )
)
ùëê = ùê∏ (ùúã‚àû) .
According to the analysis above, we know that when ùëÖ ‚â• ùëêùê∏ (ùúã‚àû), we have ùëâùúã‚àû ‚â• 0. Therefore, to
maximum the revenue, the seller needs to carefully design the game configuration such that
arg max
ùëê,ùúã
ùëêùê∏ (ùúã‚àû) ¬∑ (1 ‚àí ùêπ (ùëêùê∏ (ùúã‚àû))) .
Therefore, when
ùëêùê∏ (ùúã‚àû) = ùëü ‚àó = arg max
ùëü
ùëü ¬∑ (1 ‚àí ùêπ (ùëü )),
the gacha game with the whale property can achieve the maximum revenue and ùëü ‚àó is exactly the
optimal mechanism design for the single-item single-bidder Myerson auction. The proof is thus
completed. ‚ñ°
Proposition 1 With budget constraints, the whale property gacha game can achieve a higher seller‚Äôs
revenue than the ‚Äútake-it-or-leave-it‚Äù strategy.
Proof. We first show that the maximum seller‚Äôs revenue in the whale property gacha game is
at least greater than or equal to that in the ‚Äútake-it-or-leave-it‚Äù strategy. Assume that the optimal
price that can achieve the maximum seller‚Äôs revenue in the ‚Äútake-it-or-leave-it‚Äù strategy is ùëü ‚àó.
Then construct the gacha game G with the price of the gacha pull ùëê , where ùëü ‚àó/ùëê is an integer,
and the probability that ùëùùëñ = 0,‚àÄùëñ < ùëü ‚àó/ùëê and ùëùùëü ‚àó/ùëê = 1, the gacha game G can achieve the same
seller‚Äôs revenue in the ‚Äútake-it-or-leave-it‚Äù strategy is ùëü ‚àó. Combing Example 1, we can find that
with budget constraints, the whale property gacha game can achieve a higher seller‚Äôs revenue than
the ‚Äútake-it-or-leave-it‚Äù strategy.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:34 Canhui Chen and Zhixuan Fang
Suppose that each buyer‚Äôs budget is a realization of the random variable ùêµ with distribution
ùêπùêµ . Let the joint probability density function of the budget ùêµ and the valuation ùëÖ be ùëì (ùëÖ, ùêµ). The
revenue of the ‚Äútake-it-or-leave-it‚Äù selling strategy with price ùëü is
ùëàTILI (ùëü ) = ùëü ¬∑
‚à´ ‚àû
ùëü
‚à´ ‚àû
ùëü
ùëì (ùëÖ, ùêµ)ùëëùëÖùëëùêµ.
Here we consider a simple fixed-probability gacha game with winning probability ùëù and the price
of gacha pull ùëê . In the gacha game, the buyers will purchase the gacha pull until they win the gacha
game or until they run out of their budget. Suppose that the equivalent price for winning the gacha
game is ùëü , then the seller‚Äôs revenue is
ùëàGacha (ùëù, ùëê) =
‚à´ ‚àû
0
ùê∏ (ùúã‚åä ùêµ
ùëê
‚åã) ¬∑ ùëê
‚à´ ‚àû
ùëê
ùëù
ùëì (ùëÖ, ùêµ)ùëëùëÖùëëùêµ
=
‚à´ ‚àû
0
1 ‚àí (1 ‚àí ùëù) ‚åä ùêµùëê ‚åã
ùëù
¬∑ ùëê
‚à´ ‚àû
ùëê
ùëù
ùëì (ùëÖ, ùêµ)ùëëùëÖùëëùêµ
Due to robustness to the random fluctuations in buyer‚Äôs budge, the gacha game with the whale
property is possible to achieve a higher seller‚Äôs revenuewhen the buyers are budget-constrained. ‚ñ°
C PROOFS IN SECTION 5
Proposition 2 For the whale property sequential multi-item gacha game with the reset-after-winning
mechanism, the buyer will continue pulling the gacha game until he has won ùëò‚àó times, where
ùëò‚àó = arg max
ùëò=0,1,2,¬∑ ¬∑ ¬∑ ,ùêæ
{(
ùëò‚àëÔ∏Å
ùëó=1
ùëÖ ùëó
)
‚àí ùëòùê∏ (ùúã‚àû) ¬∑ ùëê
}
. (15)
Specially, ùëò‚àó = 0 implies that the buyer will never pull the gacha game. Here ùê∏ (ùúã‚àû) denotes the
expected number of gacha pulls needed to win the gacha game once, which is formulated in Lemma
3.3, and ùëê denotes the price of each gacha pull.
Proof. The whale property guarantees that the buyer would not pull the gacha and stop midway
without winning the gacha game. Therefore, the buyer will only stop when he has won the gacha
game with 0, 1, 2, ¬∑ ¬∑ ¬∑ , ùêæ times. To figure out the optimal policy that maximizes his utility, the buyer
needs to decide when to stop, which can be considered as an optimal stopping problem. Besides,
the reset-after-winning mechanism guarantees that the expected cost for each win of the gacha
game remains the same, i.e., ùê∏ (ùúã‚àû) ¬∑ ùëê . If the buyer wants to stop when he has won the gacha game
with ùëò times, his expected profit will be
{(‚àëùëò
ùëó=1
ùëÖ ùëó
)
‚àí ùëòùê∏ (ùúã‚àû) ¬∑ ùëê
}
. The buyer will figure out the
optimal ùëò‚àó to maximize his profit, which is listed in (15).
Besides, we will show that the optimal ùëò‚àó always holds during the buyer‚Äôs gacha pulling process.
Initially, the buyer never wins the gacha game before, then he will figure out the optimal ùëò‚àó to
maximize his profit, which is listed in (15). During the buyer‚Äôs gacha pulling process, suppose that
the buyer has won the gacha game ùë° times (ùë° < ùëò‚àó). Then the buyer will continue pulling the gacha
game until he has won moreùëö‚àó (ùë°) times, where
ùëö‚àó (ùë°) = arg max
ùëö=0,1,2,¬∑ ¬∑ ¬∑ ,ùêæ‚àíùë°
{(
ùë°+ùëö‚àëÔ∏Å
ùëó=ùë°+1
ùëÖ ùëó
)
‚àíùëöùê∏ (ùúã‚àû) ¬∑ ùëê
}
.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:35
We will show that ùëò‚àó ‚â° ùë° +ùëö‚àó (ùë°). We will prove it by contradiction. Suppose that ùë° +ùëö‚àó (ùë°) ‚â† ùëò‚àó.
Then we have
ùëò ‚Ä≤ =
(
ùë°‚àëÔ∏Å
ùëó=1
ùëÖ ùëó
)
‚àí ùë°ùê∏ (ùúã‚àû) ¬∑ ùëê + arg max
ùëò=ùë°+1,ùë°+2,¬∑ ¬∑ ¬∑ ,ùêæ
{(
ùëò‚àëÔ∏Å
ùëó=ùë°+1
ùëÖ ùëó
)
‚àí ùëòùê∏ (ùúã‚àû) ¬∑ ùëê
}
=
(
ùë°‚àëÔ∏Å
ùëó=1
ùëÖ ùëó
)
‚àí ùë°ùê∏ (ùúã‚àû) ¬∑ ùëê + arg max
ùëö=0,1,2,¬∑ ¬∑ ¬∑ ,ùêæ‚àíùë°
{(
ùë°+ùëö‚àëÔ∏Å
ùëó=ùë°+1
ùëÖ ùëó
)
‚àíùëöùê∏ (ùúã‚àû) ¬∑ ùëê
}
= ùë° +ùëö‚àó (ùë°)
Since the buyer has won the gacha game ùë° times (ùë° < ùëò‚àó), we know ùëò‚àó = ùëò ‚Ä≤, which leads to
contradiction. Therefore, during the mining process, the buyer will continue pulling the gacha
game until he has won ùëò‚àó times. The proof is thus completed. ‚ñ°
Proposition 3 For the whale property sequential multi-item gacha game with the succeed-after-
winning mechanism, the buyer that has won the gacha game ùëò times (ùëò = 0, 1, ¬∑ ¬∑ ¬∑ , ùêæ ‚àí 1), will pull
the gacha at state ùëÜùëñ if and only if
max
ùë°=1,2,¬∑ ¬∑ ¬∑ ,ùêæ‚àíùëò
Ô£±Ô£¥Ô£¥Ô£≤Ô£¥Ô£¥Ô£≥¬©¬≠¬´
ùëò+ùë°‚àëÔ∏Å
ùëó=ùëò+1
ùëÖ ùëó
¬™¬Æ¬¨ ‚àí ùêª (ùë°, ùëñ) ¬∑ ùëê
Ô£ºÔ£¥Ô£¥Ô£ΩÔ£¥Ô£¥Ô£æ ‚â• 0,
where ùêª (ùë°, ùëñ) denotes the expected number of gacha pulls needed to win the gacha game ùë° more times
when the buyer is at state ùëÜùëñ , which can be recursively calculated as follows:
ùêª (ùë°, ùëñ) =
{‚àë‚àû
ùëó=ùëñ ùëù ùëó
‚àèùëó‚àí1
ùë°=ùëñ
(1 ‚àí ùëùùë° ) ¬∑ ( ùëó ‚àí ùëñ + 1), ùë° = 1,‚àë‚àû
ùëó=ùëñ ùëù ùëó
‚àèùëó‚àí1
ùë°=ùëñ
(1 ‚àí ùëùùë° ) ¬∑ ( ùëó ‚àí ùëñ + 1 + ùêª (ùë° ‚àí 1, ùëó + 1)), ùë° > 1.
where ùëùùëñ is the probability to win the gacha game at state ùëÜùëñ .
Proof. The whale property guarantees that the buyer would not pull the gacha and stop midway
without winning the gacha game. Therefore, the buyer will only stop when he has won the gacha
game with 0, 1, 2, ¬∑ ¬∑ ¬∑ , ùêæ times. To figure out the optimal policy to maximize his utility, the buyer
needs to decide when to stop, which is an optimal stopping problem. If the buyer stops pulling the
gacha anymore, he will get 0 profit at state ùëÜùëñ . On the other hand, if the buyer wants ùë°, 1 ‚â§ ùë° ‚â§ ùêæ ‚àíùëò
more wins, his profit will be
(‚àëùëò+ùë°
ùëó=ùëò+1
ùëÖ ùëó
)
‚àíùêª (ùë°, ùëñ) ¬∑ ùëê , where ùêª (ùë°, ùëñ) denotes the expected number of
gacha pulls needed to win the gacha game ùë° times when the buyer is at state ùëÜùëñ . Since the buyer is
currently at state ùëÜùëñ , the probability that the buyer wins the gacha game at state ùëÜ ùëó , ùëó = ùëñ, ùëñ +1, ¬∑ ¬∑ ¬∑ , ùëÅ
is (ùëù ùëó
‚àèùëó‚àí1
ùë°=ùëñ
(1 ‚àí ùëùùë° )). Once the buyer wins the gacha at state ùëÜ ùëó , the buyer will enter the next state
ùëÜ ùëó+1. Besides, the buyer only needs ùë° ‚àí 1 more wins if he has won at state ùëÜ ùëó . Therefore, we have
(2). The proof is thus completed. ‚ñ°
Theorem 5.1 For the sequential multi-item gacha game with infinite items, and the buyer‚Äôs
valuation of each item follows the identical and independent distribution with mean ` and variance
ùúé2, the whale property sequential multi-item gacha game with the reset-after-winning mechanism can
achieve the asymptotic optimality on seller‚Äôs revenue, i.e.,
lim
ùêæ‚Üí‚àû
ùëê ¬∑ E(# of gacha pulls purchases)
ùêæ
= `,
where ùëê ¬∑E(# of gacha pulls purchases)
ùêæ
denotes the normalized seller‚Äôs revenue, ùëê is the price of each gacha
pull and ùêæ is the number of items in the gacha game.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:36 Canhui Chen and Zhixuan Fang
Proof. sketch: Assume that the buyer has won the gacha game ùëò times. When ùêæ is large, while
ùëò is relatively small, then the low of large numbers implies that
1
ùêæ‚àíùëò
(‚àëùêæ
ùëó=ùëò+1
ùëÖ ùëó
)
‚âà `. Therefore, if
the price of this gacha game is ùê∏ ¬∑ ùëê = ` ‚àí ùúñ , where ùúñ can be arbitrarily small, the buyer will pull the
gacha game until he wins again according to Proposition 2. Recursively, the buyer will continue
pulling the gacha until he has won ùêæ ‚àíùëá times and the expected valuation for the remaining gacha
game
1
ùêæ‚àíùëá
(‚àëùêæ
ùëó=ùëá ùëÖ ùëó
)
is smaller than ` ‚àí ùúñ . Since ùêæ is large, while ùëá is relatively small, ùëá /ùêæ ‚Üí 0.
Therefore, the buyer will pull the gacha almost all times with price for each time being ` ‚àí ùúñ , which
implies the asymptotic optimality on seller‚Äôs revenue.
detail: Let ùë£ ùëó denote the user‚Äôs valuation for winning the gacha game at ùëó-th time, ùë•ùëò =
1
ùëò
‚àëùêæ
ùëó=ùêæ‚àíùëò+1
ùë£ ùëó denote the normalized expected valuation for bundling the reward of the gacha
game winning at ùëó = ùêæ ‚àí ùëò, ùêæ ‚àí ùëò + 1, ¬∑ ¬∑ ¬∑ , ùêæ time. Let `ùëò = E(ùë•ùëò ) and ùúéùëò = E
(
|ùë•ùëò ‚àí `ùëò |2
)
. Let
limùëò‚Üí‚àû `ùëò = ` and limùëò‚Üí‚àû ùúéùëò = ùúé . Denote by ùëù‚àó
ùëò
, ùëû‚àó
ùëò
the optimal price (ùê∏ ¬∑ ùëê) for the gacha game
and the corresponding quantity (0 ‚â§ ùëû‚àó
ùëô
‚â§ 1), and let ùúã‚àó
ùëò
be the resulting profits ùúã‚àó
ùëò
= ùëù‚àó
ùëò
ùëû‚àó
ùëò
. Let
limùëò‚Üí‚àû ùëù
‚àó
ùëò
= ùëÉ and limùëò‚Üí‚àû ùëû
‚àó
ùëò
= ùëÑ . We will show that ùëÉ = ` and ùëÑ = 1.
If ùëÉ > `, there exists some ùúñ > 0 such that for all large enough ùëò , ùëù‚àó
ùëò
> ` + ùúñ . By the weak law of
large numbers, we know that Pr ( |ùë•ùëò ‚àí ` | < ùúñ) ‚â• 1 ‚àí ùõø , where ùëõ ‚â• ùõø2
ùúñ2ùõø
or ùõø ‚â§ ùúé2
ùúñ2ùëõ
. Thus, if ùëÉ > `,
{ùëû‚àó
ùëò
} ‚Üí 0, and since {ùëù‚àó
ùëò
} is bounded, we have {ùúã‚àó
ùëò
} ‚Üí 0, which contradicts the optimality of ùëù‚àó
ùëò
and ùëû‚àó
ùëò
.
If ùëÉ < `, there exists some ùúñ > 0 such that for all large enough ùëò , ùëù‚àó
ùëò
< `‚àíùúñ . Let ùëùùëò = ùëÉ + ùúñ
2
, and ùëû
the corresponding quantity. Theweak law of large numbers implies that limùëò‚Üí‚àû ùëû
‚àó
ùëò
= limùëò‚Üí‚àû ùëûùëò = 1
and limùëò‚Üí‚àû (ùëû‚àó
ùëò
‚àí ùëûùëò ) = 0. Since for large enough ùëò , ùëùùëò ‚àí ùëù‚àó
ùëò
‚â• ùúñ
2
, it follows that ùëùùëòùëûùëò > ùëù‚àó
ùëò
ùëû‚àó
ùëò
,
which again contradicts the optimality of ùëù‚àó
ùëò
and ùëû‚àó
ùëò
. Thus, limùëò‚Üí‚àû ùëù
‚àó
ùëò
= `. Then we can show
ùëÉ = ` and ùëÑ = 1, which implies the asymptotic optimality on seller‚Äôs revenue. The proof is thus
completed. ‚ñ°
Theorem 5.2 The banner-based gacha game with the reset-after-opt-out mechanism, the banner-
based gacha game with the succeed-after-opt-out mechanism, and the separate selling with several
independent single-item gacha games are equivalent, i.e., the behaviors of the rational buyers and the
seller‚Äôs revenues in these gacha game are the same.
Proof. We first show that the multi-item gacha game with two banners with values of ùëÖ1 and
ùëÖ2 is equivalent to the single-item gacha games as G(ùëÖ1) and G(ùëÖ2). And the theorem above can
be obtained by induction.
It is easy to prove that when ùëÖ1 ‚â• ùëÖ2, it is equivalent to the single-item gacha games as G(ùëÖ1)
and G(ùëÖ2). The reason goes as follows. On the one hand, if the player will pull in both G(ùëÖ1) and
G(ùëÖ2), he will also pull the gacha in both banners. On the other hand, if the player will only pull in
G(ùëÖ1) and will not pull in G(ùëÖ2), the player will pull the first banner and will not stop pulling the
gacha in the first banner and wait for the second banner since ùëÖ1 ‚â• ùëÖ2. Therefore, when ùëÖ1 ‚â• ùëÖ2
(Scenario 1), it is equivalent to the single-item gacha games as G(ùëÖ1) and G(ùëÖ2).
We next consider the scenario where ùëÖ1 < ùëÖ2, and show that it is equivalent to the single-item
gacha games as G(ùëÖ1) and G(ùëÖ2). We consider the three cases:
‚Ä¢ Case 1: The player will not pull either G(ùëÖ1) or G(ùëÖ2).
‚Ä¢ Case 2: The player will pull both G(ùëÖ1) and G(ùëÖ2).
‚Ä¢ Case 3: The player will only pull G(ùëÖ2) but will not pull in G(ùëÖ1).
It is obvious that in Case 1 the player will not pull in the multi-items gacha game in any banners,
because pulling gacha in any banner will leave him with negative utility. Thus, in this case, it is
equivalent to the single-item gacha games as G(ùëÖ1) and G(ùëÖ2).
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:37
We next investigate the Case 2, and further show that it is not profitable for the player to stop
pulling the gacha in the first banner and wait for the second banner. Thus, we can prove that in this
case, it is equivalent to the single-item gacha games as G(ùëÖ1) and G(ùëÖ2). The proof goes as follows.
We are going to prove by contradiction. Suppose that the player that has pulled ùëõ ‚àí 1 gacha
pulls will stop pulling the gacha in the first banner and wait for the second banner. The player‚Äôs
utility that he will pull in the ùëõ-th round, but will end in the (ùëõ + 1)-th round in G(ùëÖ1) is analyzed
as follows. The probability that the player wins the gacha game G(ùëÖ1) in the (ùëõ)-round is ùëùùëõ . Once
he wins G(ùëÖ1), he will wait and enter the game G(ùëÖ2) with his state being ùëÜ1. On the other hand, if
he does not win the game G(ùëÖ1) in the ùëõ-th round, he will wait and enter the game G(ùëÖ2) with his
state being ùëÜùëõ . Then we have
ùëâùúã‚àû (ùëÜùëõ, ùëÖ2) > ùëâùúã‚àû (ùëÜùëõ, ùëÖ1) +ùëâùúã‚àû (ùëÜ1, ùëÖ2)
‚áíùëÖ2 ‚àí ùê∏ùëõùëê > ùëÖ1 ‚àí ùê∏ùëõùëê + ùëÖ2 ‚àí ùê∏ùëê
‚áíùëÖ1 ‚àí ùê∏ùëê < 0
(16)
where ùê∏ denotes the expected number of gacha pulls needed to win the gacha game at state ùëÜ1
and ùê∏ùëõ = 1 +‚àë‚àû
ùëö=ùëõ+1
‚àèùëö‚àí1
ùëó=ùëõ (1 ‚àí ùëù ùëó ) denotes the expected number of gacha pulls needed to win the
gacha game at state ùëÜùëõ . ùëÖ1 ‚àí ùê∏ùëê = ùë£ùëé1
(ùëÖ, 1) < 0 implies that the player will not pull the gacha game
G(ùëÖ1), which leads to contradiction. Therefore, the player will not stop pulling the gacha in the
first banner. Obviously, after winning the gacha game in the first banner, the gacha game in the
second banner is equivalent to the independent single-item gacha game G(ùëÖ2). Therefore, in this
case, it is equivalent to the single-item gacha games as G(ùëÖ1) and G(ùëÖ2).
We next investigate the Case 3, and further show that it is not profitable for the player to pull a
small number of gacha pulls in the first banner and wait for the second banner. Similarly, we will
show that if the player stops pulling the gacha game in the first banner in any round, he would
never pull the gacha in the first banner. Suppose that the player that has pulled ùëõ ‚àí 1 gacha pulls
will stop pulling the gacha in the first banner and wait for the second banner. Then we have
ùëùùëõ (ùëÖ1 +ùëâùúã‚àû (ùëÜ1, ùëÖ2)) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖ2) > ùëâùúã‚àû (ùëÜùëõ, ùëÖ2)
‚áíùëùùëõ (ùëÖ1 + ùëÖ2 ‚àí ùê∏ùëê) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖ2) > ùëùùëõùëÖ2 ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâ (ùëÜùëõ+1, ùëÖ2)
‚áíùëÖ1 ‚àí ùê∏ùëê > 0
where ùê∏ denotes the expected number of gacha pulls needed to win the gacha game. ùëÖ1 ‚àí ùê∏ùëê =
ùëâùúã‚àû (ùëÜ1, ùëÖ1) > 0 implies that the player will pull the gacha gameG(ùëÖ1), which leads to contradiction.
Therefore, the player will never pull the gacha in the first banner, and then the gacha game in the
second banner is equivalent to the independent single-item gacha game G(ùëÖ2). Therefore, in this
case, it is equivalent to the single-item gacha games as G(ùëÖ1) and G(ùëÖ2).
To sum up, we can claim that the multi-item gacha game with two banners with values of ùëÖ1
and ùëÖ2 is equivalent to the single-item gacha games as G(ùëÖ1) and G(ùëÖ2). And the theorem above
can be obtained by induction. The proof is thus completed. ‚ñ°
D PROOFS IN SECTION 6
Theorem 6.1 The subsidies in fixed-probability gacha game always degrade the seller‚Äôs revenue
compared to the gacha game without any subsidies.
Proof. In the fixed-probability gacha game withùëö free gacha pulls, the buyers always pull the
subsidizedùëö free gacha pulls first. If the buyers do not win the gacha game withinùëö gacha pulls,
the buyers with high valuation, i.e., ùëÖ ‚â• ùëê/ùëù will buy the gacha pull from the seller to continue
pulling the gacha game, and those with low valuation, i.e., ùëÖ < ùëê/ùëù will stop and leave the gacha
game. Therefore, the optimal policy for the buyer is either ùúãùëö or ùúã‚àû. For the buyer with high
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:38 Canhui Chen and Zhixuan Fang
valuation ùëÖ ‚â• ùëê/ùëù , the probability that the buyer wins the gacha game withinùëö gacha pulls is
(1 ‚àí (1 ‚àí ùëù)ùëö), and the expected number of free gacha pulls spent in the gacha game is
ùê∏ùë† (ùúã‚àû,ùëö) =
ùëö‚àëÔ∏Å
ùëõ=1
ùëõùëù (1 ‚àí ùëù)ùëõ‚àí1 =
1 ‚àí (1 ‚àí ùëù)ùëö
ùëù
‚àíùëö(1 ‚àí ùëù)ùëö .
The probability that the buyer spends all the free gacha pulls and needs to buy the gacha pull is
(1 ‚àí ùëù)ùëö , and the expected number of the bought gacha pulls in the gacha game is
ùê∏ùëè (ùúã‚àû,ùëö) =
‚àû‚àëÔ∏Å
ùëõ=ùëö+1
(ùëõ ‚àíùëö)ùëù (1 ‚àí ùëù)ùëõ‚àí1
=
‚àû‚àëÔ∏Å
ùëõ=ùëö+1
ùëõùëù (1 ‚àí ùëù)ùëõ‚àí1 ‚àíùëö
‚àû‚àëÔ∏Å
ùëõ=ùëö+1
ùëù (1 ‚àí ùëù)ùëõ‚àí1
=
(1 ‚àí ùëù)ùëö
ùëù
+ùëö(1 ‚àí ùëù)ùëö ‚àíùëö(1 ‚àí ùëù)ùëö =
(1 ‚àí ùëù)ùëö
ùëù
.
The seller can only obtain revenue from the buyers‚Äô bought gacha pulls. Therefore, the seller‚Äôs
revenue with subsidies in fixed-probability gacha game is
ùëàùë† (ùëê, ùëù,ùëö) = ùê∏ùëè (ùúã‚àû,ùëö)ùëê ¬∑
(
1 ‚àí ùêπ ( ùëê
ùëù
)
)
=
(1 ‚àí ùëù)ùëö
ùëù
¬∑ ùëê ¬∑
(
1 ‚àí ùêπ ( ùëê
ùëù
)
)
<
ùëê
ùëù
(
1 ‚àí ùêπ ( ùëê
ùëù
)
)
,
where the
ùëê
ùëù
(
1 ‚àí ùêπ ( ùëê
ùëù
)
)
. The proof is thus completed. ‚ñ°
Theorem 6.2 For a whale property gacha game, where the winning probability at state ùëÜùëñ is ùëùùëñ and
the cost for each gacha pull is ùëê , ifùëö free gacha pulls are subsidized in this gacha game, only the
buyers with valuations greater than ùúëùë† (ùëö) =
(‚àë‚àû
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
‚àèùëñ‚àí1
ùëó=ùëö (1 ‚àí ùëù ùëó )
)
¬∑ ùëê will buy the gacha
pull when they run out all the free gacha pulls, and the seller‚Äôs revenue withùëö free gacha pulls is
ùëàùë† (ùëö) =
( ‚àû‚àëÔ∏Å
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
ùëñ‚àí1‚àè
ùëó=1
(1 ‚àí ùëù ùëó )
)
¬∑ ùëê ¬∑
(
1 ‚àí ùêπ
(( ‚àû‚àëÔ∏Å
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
ùëñ‚àí1‚àè
ùëó=ùëö+1
(1 ‚àí ùëù ùëó )
)
¬∑ ùëê
))
.
When arg maxùëàùë† (ùëö) > 0, subsidies can improve the seller‚Äôs revenue.
Proof. The expected number of free gacha pulls spent in the gacha game for buyers is
ùê∏ùë† (ùúãùëö,ùëö) =
ùëö‚àëÔ∏Å
ùëñ=1
ùëñùëùùëñ
ùëñ‚àí1‚àè
ùëó=1
(1 ‚àí ùëù ùëó ).
If the buyers do not win the gacha game withinùëö free gacha pulls, the buyer will be at state ùëÜùëö+1.
The whale property guarantees that the optimal policy for the buyer is either ùúã‚àû and ùúãùëö . The value
for the buyer with valuation ùëÖ at state ùëÜùëö+1 is
ùëâùúã‚àû (ùëÜùëö+1) =
(
ùëùùëö+1 +
‚àû‚àëÔ∏Å
ùëó=ùëö+2
ùëù ùëó
ùëó‚àí1‚àè
ùë°=ùëö+1
(1 ‚àí ùëùùë° )
)
ùëÖ ‚àí
(
1 +
‚àû‚àëÔ∏Å
ùëó=ùëö+2
ùëó‚àí1‚àè
ùë°=ùëö+1
(1 ‚àí ùëùùë° )
)
ùëê
= ùëÖ ‚àí
( ‚àû‚àëÔ∏Å
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
ùëñ‚àí1‚àè
ùëó=ùëö+1
(1 ‚àí ùëù ùëó )
)
¬∑ ùëê.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:39
Therefore, only the buyers with high valuation, i.e., ùëÖ ‚â• ùúëùë† (ùëö) =
(‚àë‚àû
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
‚àèùëñ‚àí1
ùëó=ùëö (1 ‚àí ùëù ùëó )
)
¬∑
ùëê will buy and continue pulling the gacha game. Besides, the expected number of bought gacha
pulls in the gacha game is
ùê∏ùëè (ùúã‚àû,ùëö) =
( ‚àû‚àëÔ∏Å
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
ùëñ‚àí1‚àè
ùëó=1
(1 ‚àí ùëù ùëó )
)
.
Therefore, the seller‚Äôs revenue with subsidies in the whale property gacha game is
ùëàùë† (ùëö) = ùê∏ùëè (ùúã‚àû,ùëö)ùëê ¬∑
(
1 ‚àí ùêπ
(( ‚àû‚àëÔ∏Å
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
ùëñ‚àí1‚àè
ùëó=ùëö+1
(1 ‚àí ùëù ùëó )
)
¬∑ ùëê
))
=
( ‚àû‚àëÔ∏Å
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
ùëñ‚àí1‚àè
ùëó=1
(1 ‚àí ùëù ùëó )
)
¬∑ ùëê ¬∑
(
1 ‚àí ùêπ
(( ‚àû‚àëÔ∏Å
ùëñ=ùëö+1
(ùëñ ‚àíùëö)ùëùùëñ
ùëñ‚àí1‚àè
ùëó=ùëö+1
(1 ‚àí ùëù ùëó )
)
¬∑ ùëê
))
.
The proof is thus completed. ‚ñ°
Theorem 6.3 Consider a banner-based multi-item gacha game where there are ùêæ banners, and the
buyer‚Äôs valuations on the ùêæ items in these banners are ùëÖ1, ùëÖ2, . . . , ùëÖùêæ . Suppose the buyer is currently at
the ùëñ-th banner withùëö accumulated free gacha pulls subsidized by the seller. There are three possible
scenarios:
‚Ä¢ If ùëÖùëñ ‚â• ùê∏ (ùúã‚àû) ¬∑ ùëê , the buyer will use his free gacha pulls to pull the gacha game in this banner,
and if he uses out all the free gacha pulls, he will buy the gacha pull and pull it until he wins in
this banner.
‚Ä¢ If ùëÖùëñ < ùê∏ (ùúã‚àû) ¬∑ ùëê , and there exists a banner ùëó (ùëñ < ùëó ‚â§ ùêæ), such that ùëÖ ùëó ‚â• ùê∏ (ùúã‚àû) ¬∑ ùëê , then the
buyer would not buy any gacha pull and pull it before the ùëó-th banner. The buyer will use the
free gacha pulls to pull in the ùëó-th banner until he wins. After exhausting all the free gacha pulls,
he will buy the gacha pulls and use them to pull in the gacha game until he wins.
‚Ä¢ If ùëÖ ùëó < ùê∏ (ùúã‚àû) ¬∑ ùëê,‚àÄùëó ‚àà [ùëñ, ùêæ], let ùëò‚àó = arg maxùëò‚àà[ùëñ,ùêæ ] ùëÖùëò , then the buyer would not buy any
gacha pull and pull it before the ùëò‚àó-th banner, and uses the free gacha pulls to pull in the ùëò‚àó-th
banner until he wins. If ùëÖùëò‚àó < ùê∏ (ùúã‚àû, ùëÜùëö+1) ¬∑ ùëê , when the buyer uses out all the free gacha pulls
in the ùëò‚àó-th banner, he will stop pulling the gacha. Otherwise, ùëÖùëò‚àó ‚â• ùê∏ (ùúã‚àû, ùëÜùëö+1) ¬∑ ùëê , when the
buyer uses out all the free gacha pulls in the ùëò‚àó-th banner, he will buy the gacha pull and pull it
until he wins in this banner.
Here ùê∏ (ùúã‚àû) denotes the expected number of gacha pulls needed to win the gacha game, and ùê∏ (ùúã‚àû, ùëÜùëö+1)
denotes the expected number of gacha pulls needed to win the gacha game when the buyer is at state
ùëÜùëö+1, which is formulated in Lemma 3.3.
Proof. For the first case where ùëÖùëñ ‚â• ùê∏ (ùúã‚àû) ¬∑ ùëê , the buyer will pull the gacha even without the
subsidies. So the buyer will use his free gacha pulls to pull the gacha game in this banner, and if he
uses out all the free gacha pulls, he will buy the gacha pull and pull it until he gets the desired item
in this banner.
For the second case where ùëÖùëñ < ùê∏ (ùúã‚àû) ¬∑ ùëê , and there exists a banner ùëó (ùëñ < ùëó ‚â§ ùêæ), such that
ùëÖ ùëó ‚â• ùê∏ (ùúã‚àû) ¬∑ ùëê , we will first prove that the buyer will not pull the gacha in the ùëõ-th round in the
ùëó ‚àí 1-th banner when ùëõ > ùëö, which implies that the buyer will not buy the gacha pull in the ùëó ‚àí 1-th
banner. Then we will prove that by mathematical introduction, the buyer will not buy any gacha
pull before the ùëó-th banner.
We have that ùëÖ ùëó‚àí1 < ùê∏ (ùúã‚àû) ¬∑ ùëê , therefore we have
ùëÖ ùëó‚àí1 ‚àí ùëê + ùëÖ ùëó ‚àí ùê∏ (ùúã‚àû) ¬∑ ùëê < ùëÖ ùëó ‚àí ùëê,
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:40 Canhui Chen and Zhixuan Fang
which implies that in the ùëó ‚àí 1-th banner, the buyer will not buy the gacha in ùëÅ -th round. Then we
are going to show that if the buyer will not buy the gacha in the (ùëõ + 1)-th round, he will also not
buy the gacha in ùëõ-th round (ùëõ > ùëö). Equivalently, we need to prove the following inequality:
ùëùùëõ (ùëÖ ùëó‚àí1 +ùëâùúã‚àû (ùëÜ1, ùëÖ ùëó )) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖ ùëó ) < ùëâùúã‚àû (ùëÜùëõ, ùëÖ ùëó )
‚áíùëùùëõ (ùëÖ ùëó‚àí1 +ùëâùúã‚àû (ùëÜ1, ùëÖ ùëó )) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖ ùëó ) < ùëùùëõùëÖ ùëó ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖ ùëó )
‚áíùëùùëõ (ùëÖ ùëó‚àí1 + ùëÖ ùëó ‚àí ùê∏ (ùúã‚àû)ùëê) < ùëùùëõùëÖ ùëó
‚áíùëÖ ùëó‚àí1 ‚àí ùê∏ (ùúã‚àû)ùëê < 0
By mathematical induction, we can prove that the buyer will not buy the gacha in the (ùëõ)-th round
‚àÄùëõ > ùëö. Then in the ùëó ‚àí 2-th banner, similarly we have
ùëùùëõ (ùëÖ ùëó‚àí2 +ùëâùúã‚àû (ùëÜ1, ùëÖ ùëó )) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖ ùëó ) < ùëâùúã‚àû (ùëÜùëõ, ùëÖ ùëó )
‚áíùëùùëõ (ùëÖ ùëó‚àí2 +ùëâùúã‚àû (ùëÜ1, ùëÖ ùëó )) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖ ùëó ) < ùëùùëõùëÖ ùëó ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖ ùëó )
‚áíùëùùëõ (ùëÖ ùëó‚àí2 + ùëÖ ùëó ‚àí ùê∏ (ùúã‚àû)ùëê) < ùëùùëõùëÖ ùëó
‚áíùëÖ ùëó‚àí2 ‚àí ùê∏ (ùúã‚àû)ùëê < 0
Recursively, we can prove that the buyer would not buy any gacha pull and pull it before the ùëó-th
banner.
For the third case where ùëÖ ùëó < ùê∏ (ùúã‚àû) ¬∑ ùëê,‚àÄùëó ‚àà [ùëñ, ùêæ], if ùëÖùëò‚àó < ùê∏ (ùúã‚àû, ùëÜùëö+1) ¬∑ ùëê , buy any gacha
pull will leave the buyer‚Äôs surplus being negative, thus the buyer will never buy any gacha pull. If
ùëÖùëò‚àó > ùê∏ (ùúã‚àû, ùëÜùëö+1) ¬∑ ùëê , we will first prove that the buyer will not pull the gacha in the ùëõ-th round in
the ùëò‚àó ‚àí 1-th banner when ùëõ > ùëö, which implies that the buyer will not buy the gacha pull in the
ùëò‚àó ‚àí 1-th banner. Then we will prove that by mathematical introduction, the buyer will not buy
any gacha pull before the ùëò‚àó-th banner. We have that ùëÖùëò‚àó‚àí1 < ùëÖùëò‚àó , therefore we have
ùëÖùëò‚àó‚àí1 ‚àí ùëê < ùëÖùëò‚àó ‚àí ùëê,
which implies that in the ùëò‚àó ‚àí 1-th banner, the buyer will not buy the gacha in ùëÅ -th round. Then
we are going to show that if the buyer will not buy the gacha in the (ùëõ + 1)-th round, he will also
not buy the gacha in ùëõ-th round (ùëõ > ùëö). Equivalently, we need to prove the following inequality:
ùëùùëõ (ùëÖùëò‚àó‚àí1) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖùëò‚àó ) < ùëâùúã‚àû (ùëÜùëõ, ùëÖùëò‚àó )
‚áíùëùùëõ (ùëÖùëò‚àó‚àí1) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖùëò‚àó ) < ùëùùëõùëÖùëò‚àó ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖùëò‚àó )
‚áíùëÖùëò‚àó‚àí1 < ùëÖùëò‚àó
By mathematical induction, we can prove that the buyer will not buy the gacha in the (ùëõ)-th round
‚àÄùëõ > ùëö. Then in the ùëò‚àó ‚àí 2-th banner, similarly we have
ùëùùëõ (ùëÖùëò‚àó‚àí2) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖùëò‚àó ) < ùëâùúã‚àû (ùëÜùëõ, ùëÖùëò‚àó )
‚áíùëùùëõ (ùëÖùëò‚àó‚àí2) ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖùëò‚àó ) < ùëùùëõùëÖùëò‚àó ‚àí ùëê + (1 ‚àí ùëùùëõ)ùëâùúã‚àû (ùëÜùëõ+1, ùëÖùëò‚àó )
‚áíùëÖùëò‚àó‚àí2 < ùëÖùëò‚àó
Recursively, we can prove that the buyer would not buy any gacha pull and pull it before the ùëó-th
banner. The proof is thus completed. ‚ñ°
E DETAILED CALCULATIONS OF THE EXAMPLES
Example 1. There is a buyer who has the valuation of 100 and his budget ùêµ follows the distribution
that ùëÉ (ùêµ = 50) = 0.5, ùëÉ (ùêµ = 100) = 0.5. The maximum seller‚Äôs revenue achieved by the ‚Äútake-it-or-
leave-it‚Äù strategy is 50, whereas the fixed-probability gacha game with the probability being 0.01
and the price for each gacha pull being 1, can achieve the seller‚Äôs revenue of 51.448.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:41
Proof. The optimal ‚Äútake-it-or-leave-it‚Äù strategy is either to set the price to be 50, where the
buyer will buy the item and the seller‚Äôs revenue is 50, or to set the price to be 100, where only when
the buyer has the budget of 100 would buy the item and the seller‚Äôs revenue is also 100 ‚àó 0.5 = 50.
For the fixed-probability gacha game with the probability being 0.01 and the price for each gacha
pull being 1, the analysis goes as follows. Firstly, we will show that the buyer would pull the gacha
game until he wins or his budget is exhausted. This is because pulling the gacha game provides a
non-negative profit for the buyer, i.e. ùëùùëÖ‚àíùëê ‚â• 0. Then we know that when the buyer has the budget
of 50, his optimal policy is ùúã50. According to Lemma 3.3, the expected number of gacha pulls the
buyer buys is ùê∏ (ùúã50, ùëÜ1) = 39.499. Similarly, when the buyer has the budget of 50, his optimal policy
is ùúã100, and the expected number of gacha pulls the buyer buys is ùê∏ (ùúã100, ùëÜ1) = 63.397. Therefore,
the expected number of gacha pulls that the seller sells is 0.5 ‚àó ùê∏ (ùúã50, ùëÜ1) + 0.5 ‚àó ùê∏ (ùúã100, ùëÜ1) = 51.448.
With the price of each gacha pull being 1, the expected seller‚Äôs revenue is 51.448, which is greater
than that of the ‚Äútake-it-or-leave-it‚Äù strategy. This demonstrates the efficiency of the gacha game
when facing budget-constrained buyers. ‚ñ°
Example 2. Suppose that there are two items in the sequential gacha game, i.e., ùêæ = 2. The
buyer‚Äôs valuations for these two items are independently and identically distributed (i.i.d.), and
follow the uniform distribution [0, 1]. By separately selling these two items at the same price, the
maximum seller‚Äôs revenue is 0.5. With the reset-after-winning mechanism, the maximum seller‚Äôs
revenue that the sequential gacha game can achieve is 0.516. While for the sequential gacha game
with the succeed-after-winning mechanism and pity system where ùëÅ = 100, ùëùùëñ = 0.172,‚àÄùëñ < ùëÅ and
ùëÉùëÅ = 1 and the price of the gacha pull ùëê = 0.01, the seller‚Äôs revenue is 0.5218.
Proof. We first investigate the maximum seller‚Äôs revenue achieved by separately selling these
two items at the same price. Since the buyer‚Äôs valuations on these two items are independently and
identically distributed from the same distribution, we can turn to investigate the optimal pricing
problem for one item. According to the single-item single-bidder Myerson auction, the seller‚Äôs
revenue with the reserved price ùëü is
Revenue(ùëü ) = ùëü ¬∑ (1 ‚àí ùëü ).
Thus, the optimal price is 0.5, and the maximum seller‚Äôs revenue on one item is 0.25. Therefore, the
maximum seller‚Äôs revenue achieved by separately selling these two items is (0.25 ‚àó 2 = 0.5), with
the price of each item being 0.5.
We will next derive the optimal gacha game design with the reset-after-winning mechanism in
the sequential gacha game. For convenience, we denote the buyer‚Äôs valuation on the first item as
ùëÖ1 and the buyer‚Äôs valuation on the second item as ùëÖ2. Firstly, we consider the case where we sell
these two items sequentially with the price of the first item being ùë• and the price of the second
item being ùë¶ (ùë• ‚â§ 1, ùë¶ ‚â§ 1). Then there are the following possible scenarios:
(1) When ùëÖ1 ‚â• ùë• and ùëÖ2 ‚â• ùë¶, the buyer will buy the first item and the second item. In this case,
the seller can obtain a revenue of ùë• + ùë¶.
(2) When ùëÖ1 ‚â• ùë• but ùëÖ2 < ùë¶, the buyer will buy the first item and quit without buying the second
item. In this case, the seller can obtain a revenue of ùë• .
(3) When ùëÖ1 < ùë• but ùëÖ1 + ùëÖ2 ‚â• ùë• + ùë¶, the buyer will buy the first item and the second item. In
this case, the seller can obtain a revenue of ùë• + ùë¶.
(4) Otherwise, the buyer will buy nothing, and the seller can obtain zero revenue.
Since ùëÖ1 and ùëÖ2 are independently and identically distributed from the uniform distribution
[0, 1], we can calculate the probability of each scenario. Figure 4 demonstrates the distribution area
of each scenario. Because scenario (d) does not affect the seller‚Äôs revenue, we only focus on the
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:42 Canhui Chen and Zhixuan Fang
(a) Distribution area of scenario (a) and (b)
+ = +
(b) Distribution area of scenario (c)
Fig. 4. Distribution area of each scenario
probability of scenario (a), (b), (c), which is listed as follows:
Pr((ùëé)) = (1 ‚àí ùë•) ¬∑ (1 ‚àí ùë¶),
Pr((ùëè)) = (1 ‚àí ùë•) ¬∑ ùë¶,
Pr((ùëê)) =
{
(1 ‚àí ùë• ‚àí ùë¶ + 1 ‚àí ùë¶) ‚àó ùë•/2, ùë• + ùë¶ ‚â§ 1,
(1 ‚àí ùë¶)2/2, otherwise.
Therefore, the seller‚Äôs expected revenue with price ùë•,ùë¶ is
Revenue(ùë•,ùë¶) = Pr((ùëé)) ¬∑ (ùë• + ùë¶) + Pr((ùëè)) ¬∑ ùë• + Pr((ùëê)) ¬∑ (ùë• + ùë¶)
= (1 ‚àí ùë•) (ùë• + ùë¶ (1 ‚àí ùë¶)) +
{
(2 ‚àí ùë• ‚àí 2ùë¶)ùë•/2 ¬∑ (ùë• + ùë¶), ùë• + ùë¶ ‚â§ 1,
((1 ‚àí ùë¶)2)/2 ¬∑ (ùë• + ùë¶), otherwise.
According to Theorem 4.10, we can consider the equivalent price of an item in the sequential
gacha game with reset-after-winning mechanism as ùê∏ (ùúã‚àû) ¬∑ùëê , where ùê∏ (ùúã‚àû) is the expected number
of gacha pulls needed to win the game and ùëê is the price of each gacha pull. In the sequential gacha
game with the reset-after-winning mechanism, the equivalent prices of these two items are the
same, i.e., ùë• ‚â° ùë¶ ‚â° ùê∏ (ùúã‚àû) ¬∑ ùëê . Therefore, to figure out the optimal design for the sequential gacha
game with the reset-after-winning mechanism, we need to derive the maximum of the following
function:
ùëì (ùë•) = Revenue(ùë•,ùë¶ = ùë•) = Pr((ùëé)) ¬∑ (ùë• + ùë¶) + Pr((ùëè)) ¬∑ ùë• + Pr((ùëê)) ¬∑ (ùë• + ùë¶), ùë• ‚àà [0, 1] .
Then we have
ùë•‚àó = arg max ùëì (ùë•) = 0.43425853,
max ùëì (ùë•) = ùëì (ùë•‚àó) = 0.5161512329820706.
Therefore, in the sequential gacha game with reset-after-winning mechanism, the maximum seller‚Äôs
revenue is 0.516.
We now investigate the sequential gacha game with a hard pity system and the succeed-after-
winning mechanism. For convenience, we consider a hard pity gacha game where ùëÅ = 100, ùëùùëÅ = 1
and ùëùùëñ ‚â° ùëù,‚àÄùëñ < ùëÅ and the price of the gacha pull ùëê = 0.01. With the succeed-after-winning
mechanism, if the buyer wins the gacha game firstly at ùëÜùëÅ , he will be at the next state ùëÜùëÅ+1.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:43
Mathematically, ‚àÄùëñ > ùëÅ, ùëùùëñ = ùëùùëñ mod ùëÅ . To figure out the optimal design for this gacha game, we
need to derive a proper probability ùëù such that the seller can achieve the maximum revenue.
According to Lemma 3.3, the expected number of gacha pulls needed to win the above hard pity
gacha game when buyer is at state ùëÜùëñ is
ùê∏ (ùúã‚àû, ùëÜùëñ ) =
1 ‚àí (1 ‚àí ùëù)ùëÅ‚àíùëñ+1
ùëù
.
Therefore, the expected number of gacha pulls needed to win the gacha game once is
ùê∏1 = ùê∏ (ùúã‚àû, ùëÜ1) =
1 ‚àí (1 ‚àí ùëù)ùëÅ
ùëù
.
According to Proposition 3, the expected number of gacha pulls needed to win the gacha game
twice is
ùê∏2 = ùêª (2, 1) = (1 ‚àí ùëù)ùëÅ‚àí1
(
ùëÅ + 1 ‚àí (1 ‚àí ùëù)ùëÅ
ùëù
)
+
ùëÅ‚àí1‚àëÔ∏Å
ùëñ=1
ùëù (1 ‚àí ùëù)ùëñ‚àí1
(
ùëñ + 1 ‚àí (1 ‚àí ùëù)ùëÅ‚àíùëñ
ùëù
)
.
In the gacha game with succeed-after-winning mechanism, there are the possible scenarios:
(1) When ùëÖ1 ‚â• ùë• = ùê∏1 ¬∑ ùëê , the buyer will first pull the gacha game until he wins. Assume that the
buyer wins the gacha game for the first time at state ùëÜùëñ . if ùëÖ2 ‚â• ùë¶ = ùêª (1, ùëñ + 1) ¬∑ ùëê , the buyer
will continue pulling the gacha game until he wins again. In this case, the seller can obtain a
revenue of (ùë• + ùë¶) = (ùê∏1 + ùêª (1, ùëñ + 1)) ¬∑ ùëê .
(2) When ùëÖ1 ‚â• ùë• = ùê∏1 ¬∑ ùëê , the buyer will first pull the gacha game until he wins. Assume that the
buyer wins the gacha game for the first time at state ùëÜùëñ . If ùëÖ2 < ùë¶ = ùêª (1, ùëñ + 1) ¬∑ ùëê , the buyer
will quit. In this case, the seller can obtain a revenue of ùë• = ùê∏1 ¬∑ ùëê .
(3) When ùëÖ1 ‚â• ùë• = ùê∏1 ¬∑ ùëê and ùëÖ1 + ùëÖ2 ‚â• ùê∏2 ¬∑ ùëê , the buyer will continue pulling the gacha game
until he wins twice. In this case, the seller can obtain an expected revenue of ùê∏2 ¬∑ ùëê .
(4) Otherwise, the buyer will never pull the gacha game, and the seller can obtain zero revenue.
Here ùêª (ùë°, ùëñ) denotes the expected number of gacha pulls needed to win the gacha game ùë° more
times when the buyer is at state ùëÜùëñ , which is formulated in Proposition 3. Here we have
ùêª (1, ùëñ + 1) =
{
1‚àí(1‚àíùëù )ùëÅ
ùëù
, ùëñ = ùëÅ,
1‚àí(1‚àíùëù )ùëÅ ‚àíùëñ
ùëù
, otherwise.
Similar to the previous analysis, the seller‚Äôs expected revenue is
Revenue(ùëù) = (1 ‚àí ùê∏1ùëê) ¬∑ ùëê
(
ùëÅ‚àëÔ∏Å
ùëñ=1
ùëùùëñ modùëÅ (1 ‚àí ùëù)ùëñ‚àí1 (ùëñ + (1 ‚àí ùêª (1, ùëñ + 1) ¬∑ ùëê) ¬∑ ùêª (1, ùëñ + 1))
)
+
{
(2 + ùê∏1ùëê ‚àí 2ùê∏2ùëê) ¬∑ (ùê∏1ùëê)/2 ¬∑ ùê∏2ùëê, ùê∏2 ¬∑ ùëê ‚â§ 1,
(1 ‚àí ùê∏2ùëê + ùê∏1ùëê)2/2 ¬∑ ùê∏2ùëê, otherwise.
Using the ‚ÄúSLSQP‚Äù method in Python, we can obtain the maximum seller‚Äôs revenue as follows:
ùëù‚àó = arg maxRevenue(ùëù) = 0.01722628,
maxRevenue(ùëù) = Revenue(ùëù‚àó) = 0.5218329662856214.
Thus, for the sequential gacha game with the succeed-after-winning mechanism where ùëÅ =
100, ùëùùëñ = 0.172,‚àÄùëñ < ùëÅ and ùëÉùëÅ = 1, and the price of the gacha pull ùëê = 0.01, the seller‚Äôs revenue is
0.5218. ‚ñ°
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
6:44 Canhui Chen and Zhixuan Fang
Example 3. Consider that buyer is budget-constrained and get some periodical income ùêº = 50 in
the time frame of each banner, such as monthly salary. There are two banners in this game and the
buyer‚Äôs valuation of the reward in these banners are ùëÖ1 = 100, ùëÖ2 = 50. The price for each gacha
pull is ùëê = 1. Consider the banner-based gacha game where ùëÅ = 100, ùëùùëñ = 0.01,‚àÄùëñ < ùëÅ and ùëùùëÅ = 1.
‚Ä¢ With the reset-after-opt-out mechanism, the buyer will pull in the first banner and will never
pull in the second banner. In this case, the seller‚Äôs expected revenue is 39.499.
‚Ä¢ With the succeed-after-opt-out mechanism, the buyer will first pull in the first banner. If the
buyer exhausts his budget but fails to win in the first banner, the buyer‚Äôs state will be inherited
to the second banner, which will lower the cost to win in the second banner. Therefore, the
buyer will pull in the second banner. In this case, the seller‚Äôs expected revenue is 63.397.
Proof. In the first banner, the buyer has a budget of 50. According to Lemma 3.1, we have that
ùëâùúã50
(ùëÜ1) = 0 ‚â• 0. According to Lemma 4.3, the gacha game has the whale property. Therefore,
the optimal policy for the buyer in the first banner is ùúã50. Based on Lemma 3.3, we know that the
expected number of gacha pulls the buyer spends on the first banner is ùê∏ (ùúã50, ùëÜ1) = 39.499.
With the reset-after-opt-out mechanism, the buyer‚Äôs state will be reset to ùëÜ1 in the second banner.
In the second banner, according to Lemma 3.1, we have that ùëâùúã50
(ùëÜ1) = ‚àí19.750 < 0. The whale
property of the gacha game implies that the optimal policy for the buyer in the second banner is
ùúã0. Therefore, with the reset-after-opt-out mechanism, the seller‚Äôs expected revenue is 39.499.
With the succeed-after-opt-out mechanism, there are two possible scenario:
(1) If the buyer wins the gacha game in the first banner within 50 gacha pulls, the buyer‚Äôs state
in the second banner will be ùëÜ1. Similarly, the buyer would not pull in the second banner.
(2) If the buyer does not win the gacha game in the first banner within 50 gacha pulls, the
buyer‚Äôs state in the second banner will be ùëÜ51. And in the second banner, the buyer will
has another budget of 50. In the second banner, according to Lemma 3.1, we have that
ùëâùúã100
(ùëÜ51) = 10.501 > 0. Therefore, the optimal policy for the buyer in the second banner is
ùúã100, i.e., continue pulling until he wins.
Considering these two possible scenario, the expected seller‚Äôs revenue in the banner-based gacha
game with the succeed-after-opt-out mechanism is
Revenue = ùê∏ (ùúã50, ùëÜ1) + (1 ‚àí ùëù)50 ¬∑ ùê∏ (ùúã100, ùëÜ51) = 63.397.
Thus, when the buyer has budget constraint, the succeed-after-opt-out mechanism can help to
achieve a higher seller‚Äôs revenue. ‚ñ°
Example 4. Consider a banner-based multi-item gacha game with 2 banners. The buyer‚Äôs
valuations of the item in these 2 banners are ùëÖ1 = 50 and ùëÖ2 = 100. Each banner is a gacha game
where ùëÅ = 100, ùëùùëñ = 0.01,‚àÄùëñ < ùëÅ and ùëùùëÅ = 1. According to Theorem 5.2, without any subsidies,
the buyer will only pull in the second banner, which will lead to the expected seller‚Äôs revenue being
63.397. If the seller subsidizes the buyer as it does in the single-item gacha game, according to
Theorem 6.2, the seller should give the buyer 32 free gacha pulls in the first banner and no free
gacha pull in the second banner, assuming that these subsidies will encourage the buyer to pull in
the first banner. However, Theorem 6.3 shows that a rational buyer will accumulate these subsidies
and only buy the gacha pull in the second banner, resulting in the lower expected seller‚Äôs revenue
being 35.895. In this case, the subsidies lead to the buyer‚Äôs grinding behavior and harm the seller‚Äôs
revenue.
Proof. According to Lemma 4.3, the gacha game has the whale property. In the first banner,
according to Lemma 3.1, we have that ùëâùúã‚àû (ùëÜ1) = ‚àí19.750 < 0. Without any subsidies, the whale
property of the gacha game implies that the optimal policy for the buyer in the first banner is ùúã0.
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
Gacha Game Analysis and Design 6:45
And in the second banner, we have thatùëâùúã‚àû (ùëÜ1) = 36.603 > 0. Therefore, the optimal policy for the
buyer in the second banner is ùúã‚àû. The expected number of gacha pulls the buyer will spends on
the second banner is ùê∏ (ùúã‚àû, ùëÜ1) = 63.397. Therefore, without any subsidies, the expected seller‚Äôs
revenue is 63.397.
If the seller subsidizes the buyer as it does in the single-item gacha game, according to Theorem
6.2, the seller should give the buyerùëö‚àó = ‚åàarg maxùëàùë† (ùëö)‚åâ = 32 free gacha pulls in the first banner
and no free gacha pull in the second banner. However, according to Theorem 6.3, sinceùëÖ1 < ùê∏ (ùúã‚àû) ¬∑ùëê
and ùëÖ2 ‚â• ùê∏ (ùúã‚àû) ¬∑ ùëê , the buyer will accumulate these subsidies and only buy the gacha pull in
the second banner. According to Theorem 6.2, the expected seller‚Äôs revenue is ùëàùë† (32) = 35.895.
Therefore, in this case, the subsidies lead to the buyer‚Äôs grinding behavior and harm the seller‚Äôs
revenue. ‚ñ°
F RECOMMENDATIONS ON GACHA GAME MECHANISMS
In summary, we have the following recommendations for the seller:
‚Ä¢ A whale property gacha game is always a good choice unless the seller wants to expand the
number of participants in the gacha game instead of pursuing revenue maximization.
‚Ä¢ When selling a single item, the varying-probability gacha game with whale property and
the optimal design in Theorem 4.10 is recommended. The optimal design helps the seller to
achieve the maximum revenue, and the varying probability makes subsidy a useful tool for
the seller to increase his revenue when the buyer‚Äôs valuation is too low.
‚Ä¢ When selling multiple items in the sequential gacha game, the reset-after-winning mechanism
is recommended due to its simplicity, widespread use, and asymptotic optimality.
‚Ä¢ When selling multiple items in the banner-based gacha game, the seller is recommended to
adopt the succeed-after-opt-out mechanism, which is friendly to the buyer and can help the
seller to achieve a higher revenue when the buyer is budget-constrained.
Received August 2022; revised October 2022; accepted January 2023
Proc. ACM Meas. Anal. Comput. Syst., Vol. 7, No. 1, Article 6. Publication date: March 2023.
	Abstract
	1 Introduction
	2 Literature Review
	3 Gacha Game Model Overview
	3.1 Buyer Stage
	3.2 Seller Stage
	3.3 Typical Gacha Game
	4 Revenue Optimal Single-Item Gacha Game
	4.1 Whale Property
	4.2 Optimality of the Whale Property Gacha Game
	4.3 Equivalence of Gacha Game and Single-item Single-bidder Auction
	5 Multi-Item Gacha Game
	5.1 Sequential Multi-Item Gacha Game
	5.2 Banner-based Multi-Item Gacha Game
	6 Subsidies and Grinding Behavior in Gacha Game
	6.1 Subsidies in Single-Item Gacha Game
	6.2 Subsidies and Grinding Behavior in Banner-based Multi-Item Gacha Game
	7 Case Study: Blockchain Mining as a Gacha Game
	7.1 Proof-of-Work Blockchain as a Gacha Game
	7.2 Proof-of-Stake Blockchain as a Gacha Game
	8 Conclusion
	References
	A Proofs in Section 3
	B Proofs in Section 4
	C Proofs in Section 5
	D Proofs in Section 6
	E Detailed Calculations of the Examples
	F Recommendations on Gacha Game Mechanisms