Incentive Mechanism Design for Blockchain Enabled Distributed Content Caching
Incentive Mechanism Design for Blockchain
Enabled Distributed Content Caching
Jia Guo∗†, Wei Wang∗†, Zuguang Li∗†, Shan Sun∗†
∗College of Electronic and Information Engineering, Nanjing University of Aeronautics and Astronautics, China
†Key Laboratory of Dynamic Cognitive System of Electromagnetic Spectrum Space, Nanjing, China 211106
Email: {guojia; wei wang; zuguang li; sunshan}@nuaa.edu.cn
Abstract—By fully utilizing the caching space of nearby smart
users, mobile user caching is a promising solution for efficient
content delivery service. However, how to motivate mobile users
to share their spare caching space and protect the privacy
information during caching sharing is a challenging issue. In this
paper, we consider a blockchain enabled mobile user caching on
the basis of blockchain network, thus the security and privacy
issues can be well addressed, and the contributions of each
mobile user can be recorded in the blockchain. Specifically, the
interactions between the content service provider and the mobile
users are modelled as a Stackelberg game, and the equilibrium
is analyzed. Simulation results demonstrate the effectiveness of
the proposed scheme and it is shown that the optimal strategies
of content service provider and caching users can be established
with different cache cost and caching requirement.
I. INTRODUCTION
With the development and commercialization of 5G, wire-
less data services are growing explosively, among which over
75% are video or multimedia content1. To better support the
hot wireless content delivery services, edge caching where
popular contents are cached in edge nodes that close to the
end users is a promising solution. With edge caching, some
contents can be pre-stored during off-peak hours, and thus the
traffic burden of the core network can be reduced in peak
hours. In addition, the transmission delay can be significantly
reduced without fetching from the server. Therefore, edge
caching has attracted extensive research interests over the past
years [1]–[3].
A distributed proactive edge caching mechanism was pro-
posed in [3] to optimize the cost of content retrieval and
improve the experience of mobile users. In [4], combined
with the request mode and user behavior habits, a geographic
cooperative caching strategy for mobile video transmission
was designed. Zhang et al. [5] investigated the cooperative
edge cache scheme with optimal delay in large-scale user
centric mobile networks, based on the information of network
topology, traffic distribution, channel quality, and file popular-
ity. Even though edge caching is effective for content-centric
services, it is not cost effective due to the diversified user
interests. Fortunately, with the emerging caching capability of
end users, it is possible to distribute the content caching task
1Cisco’s Visual Networking Index forecast (VNI)
https://www.cisco.com/c/en/us/solutions/collateral/executive-
perspectives/annual-internet-report/white-paper-c11-741490.pdf
to surrounding users without building edge caching servers
[6]–[8]. But note that users are usually selfish and unwilling
to contribute the caching space without proper reward. Thus,
how to encourage end users to share their caching space as
much as possible becomes a critical problem. Zou et al. [9]
proposed a joint video pricing and cache placement strategy
to maximize the profit of the video provider and the mobile
network operator. In [10], an optimal auction mechanism was
proposed to optimize the allocation of cache resources from
the perspective of service providers.
However, the distributed content caching also faces many
challenges, such as how to promote the interaction between
the content service provider (CSP) and caching users (CUs)
in the trustless environment, how to protect the privacy in-
formation of CUs, etc. As a new paradigm of data storage
and information sharing, blockchain is a good candidate for
enabling distributed caching, where the caching request and
transactions can be recorded in the block without tamper-
proof and thus the revenues of the caching contributors can
be guaranteed [7], [11], [12]. In [7], a blockchain based edge
cache service framework for cache resource and digital content
sharing is designed with blockchain-based credentials and
double-auction mechanism. To deal with the trust management
problem in edge caching, a blockchain-based trustworthy edge
caching scheme was proposed in [11], where the caching
transactions between the edge nodes and mobile users was
recorded with blockchain without modification, and a trust
management mechanism was designed for mobile users.
Based on above research, in this paper, we propose an in-
centive mechanism for blockchain-enabled distributed content
caching. The CSP and CUs are formulated as a Stackleberg
game to optimize the caching reward and the optimal caching
size of each CU. The contributions of this paper are summa-
rized as follows:
• We propose a blockchain enabled distributed caching
framework, where the CSP releases the caching require-
ments and rewards, and CUs on the blockchain response
to the caching task accordingly. The caching transactions
are recorded on the blockchain with tamper-proof and
traceability, and the privacy of the CU can be protected.
• A Stackleberg game is formulated to obtain the optimal
caching reward and the caching size of each CU. The
game is analyzed in detail and optimal strategy is derived.
• Simulation results are given to evaluate the performance
978-1-6654-4331-9/21/$31.00 ©2021 IEEE
20
21
 IE
EE
 In
te
rn
at
io
na
l P
er
fo
rm
an
ce
, C
om
pu
tin
g,
 a
nd
 C
om
m
un
ic
at
io
ns
 C
on
fe
re
nc
e 
(I
PC
C
C
) |
 9
78
-1
-6
65
4-
43
31
-9
/2
1/
$3
1.
00
 ©
20
21
 IE
EE
 | 
D
O
I: 
10
.1
10
9/
IP
C
C
C
51
48
3.
20
21
.9
67
93
66
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:55:38 UTC from IEEE Xplore.  Restrictions apply. 
CU
CU
CU
CU
CU
CSP
Blockchain
network
Fig. 1. The blockchain enabled distributed caching model.
of the proposed framework, it is shown that the optimal
strategies of content service provider and caching users
can be established with different caching cost and caching
requirement.
The remainder of this paper is organized as follows. The
system model and problem formulation are described in Sec-
tion II. In Section III, we analyze the Stackelberg game and
derive the optimal strategy for CSP and CUs. Simulation
results are presented in Section IV, and conclusions are given
Section V.
II. SYSTEM MODEL AND PROBLEM FORMULATION
We consider a distributed content caching scenario, where
a content service provider (CSP) aims to provide content
subscription services for registrated users. To save the storage
space and the maintenance cost, the CSP will incentive sur-
rounding mobile users with caching capability to participate
in the caching services, i.e., the traditional centralized caching
can be distributed among caching users (CUs), to fully reap
the benefits of distributed caching.
To protect the revenue of the participating caching users and
prevent possible privacy information leakage, we consider a
public blockchain enabled caching scenario. As shown in Fig.
1, the CSP and M CUs participate in the caching services
based on the blockchain system. The CSP first publishes
caching tasks and corresponding rewards by completing them
on the blockchain network, then CUs on the blockchain receive
the task and decide whether to join the caching task, based on
the given reward and their own cost.
Suppose that the intended caching requirement of the CSP
is Q, with R being the corresponding caching reward. Denote
the CUs set as M = {m1,m2, . . . ,mM}, with M being the
cardinality ofM, then the utility function of CSP can be given
by
UCSP = α
∑M
i=1
log2 (1 + βµi)−R, (1)
where µi is the caching space provided by CU mi, α, β > 0,
are constant values.
For CUs, they share the total rewards given by CSP based
on their caching contribution. The more caching contents that
CU contributes for CSP, the higher rewards will be given.
We use pi to represent the proportion of caching that CU mi
contributes, which is given by
pi =
µi∑M
j=1 µj
. (2)
Then the utility of mi can be defined as:
Ui = piR− λiµi, (3)
where λi is the unit caching cost of mi.
Because the CSP and CUs are smart and selfish, they will
dynamically adjust their strategies to maximize their profits.
Therefore, game theory is a suitable tool to analyze this
problem. We can model the interaction between the CSP and
the CUs as a two-stage Stackleberg game and analyze the
optimal strategy of both sides.
Based on the Stackleberg game model, a leader and some
followers compete with each other to maximize their re-
spective profits. In this paper, we formulate the CSP as the
leader and the CUs as the followers. In the upper stage, the
CSP sets the reward to encourages CUs to share as much
cache space as possible. The leader (i.e., CSP) needs to find
the best reward R to maximize its profit with a minimum
caching size constraint Q. In the lower stage, each follower
(i.e., CU) decides the optimal amount of caching space µi
they contribute by analysing the reward and its cost. The
optimization problems can be formulated as follows.
Given the reward R and other CUs’ caching strategies
µ−i = {µ1, µ2, · · · , µi−1, µi+1, · · · , µM}, the CU mi decides
its own cache strategy µi to maximize its own profit. This sub-
problem can be formulated as follows:
Problem 1. Caching user’s sub-game
max
µi
Ui
(
µi | µ−i, R
)
s.t. µi ≥ 0.
(4)
For the upper stage of the game, the CSP dynamically ad-
justs the reward R to maximize its benefits with guaranteed
caching requirements Q. This sub-problem can be formulated
as follows:
Problem 2. Content service provider’s sub-game
max
R
UCSP (R,µ)
s.t.
∑M
i=1 µi ≥ Q.
(5)
The object of the game is to find a Stackelberg Equilibrium
(SE) point(s) from which neither the leader (CSP) nor the
followers (CUs) can bilaterally change their strategies to
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:55:38 UTC from IEEE Xplore.  Restrictions apply. 
increase its utility without affecting the opponents. For the
proposed Stackelberg game, the SE can be defined as follows.
Definition 1 (Stackelberg Equilibrium). Let R∗ be a solution
for the CSP’s sub-problem and µ∗ be a solution for the CU’s
sub-problem, where µ∗ = {µ∗
1, µ
∗
2, · · · , µ∗
M}. Then (µ∗, R∗)
is a SE for the proposed Stackelberg game if it satisfies the
following two conditions:
UCSP (R
∗,µ∗) ≥ UCSP (R,µ∗),∀R ≥ 0, (6)
and
Ui(µi
∗|µ∗
−i, R
∗) ≥ Ui(µi|µ∗
−i, R
∗),∀µi. (7)
III. GAME ANALYSIS
In this section, we analyze the existence and the uniqueness
of the Stackelberg equilibrium of the proposed Stackelberg
game. First, we analyze the lower stage of the game to find
the Nash equilibrium of the CU’s sub-problem. On the basis,
we analyze how to maximize the utility of CSP in the upper
stage.
A. Analysis of CU’s sub-game
Given a caching target Q and the corresponding reward
R, each CU will adaptively determine their caching space to
maximize their own profits. We first prove the existence of the
Nash equilibrium in the CU’s sub-problem.
Theorem 1. The Nash equilibrium exists in the CU’s sub-
problem.
Proof. From (3), we can know that µi ≤ R/λi to ensure the
utility function Ui larger than zero. So µi is continuous in
[0, R/λi], which is a nonempty, convex, and compact subset
of the Euclidean space. The first and second derivatives of the
utility function are given as follows:
∂Ui
∂µi
= R
∑M
j=1 µj − µi(∑M
j=1 µj
)2 − λi, (8)
∂2Ui
∂µ2
i
= −2R
∑M
j=1 µj − µi(∑M
j=1 µj
)3 ≤ 0. (9)
Therefore, the utility function Ui is a concave function, thus
there exists a Nash equilibrium in the CU’s sub-problem. ■
With Theorem 1, we can obtain that for a reward R and
other CUs’ strategies µ−i the optimal caching strategy of mi
can be calculated by setting the first derivative in (8) as zero,
i.e.,
µi
∗ =
√
R
∑M
j=1 µj − µi
λi
−
∑M
j ̸=i
µj . (10)
As µi ≥ 0, the best strategy for mi is given by
µ∗
i =

0, if R∑M
j ̸=i µj
≤ λi,√
R
M∑
j=1
µj−µi
λi
−
M∑
j ̸=i
µj , otherwise.
(11)
Corollary 1. Given the optimal caching strategies µ∗ =
{µ∗
1, µ
∗
2, · · · , µ∗
M}, for any two CUs mi and mj , with their
caching strategy µ∗
i and µ∗
j , if λi ≤ λj , then µ∗
i ≥ µ∗
j .
Proof. This can be proved with contradiction. Suppose that for
the two CUs mi and mj , λi ≤ λj , µ∗
j > µ∗
i ⩾ 0 . As µ∗
j ≥ 0,
according to (8) and (11), we can know ∂Uj
∂µj
(
µ∗
j
|µ∗
−j
)
= 0.
Similarly, if µ∗
i > 0, we have ∂Ui
∂µi
(
µ∗
i
|µ∗
−i
)
= 0. If µ∗
i =
0, according to (11), we have R∑M
j ̸=i µj
⩽ λi, substituting to
(8),we have
∂Ui
∂µi
(
µ∗
i |µ∗
−i
)
= R
∑M
j=1 µj − µi(∑M
j=1 µj
)2 − λi
≤ R
∑M
j=1 µj − µi(∑M
j=1 µj
)2 − R∑M
j ̸=i µj
= R
∑M
j ̸=i µj(∑M
j=1 µj
)2 −R
∑M
j ̸=i µj(∑M
j ̸=i µj
)2
< 0.
(12)
Therefore, if µ∗
i ⩾ 0, we have ∂Ui
∂µi
(
µ∗
i
|µ∗
−i
)
≤ 0.
As λi ⩽ λj and µ∗
j > µ∗
i ≥ 0, we have
∂Uj
∂µj
(
µ∗
j |µ∗
−j
)
= R
∑M
k=1 µk − µ∗
j(∑M
k=1 µk
)2 − λj
< R
∑M
k=1 µk − µ∗
i(∑M
k=1 µk
)2 − λi
=
∂Ui
∂µi
(
µ∗
i |µ∗
−i
)
≤ 0.
(13)
which is contradictory to ∂Uj
∂µj
(
µ∗
j
|µ∗
−j
)
= 0. Therefore, the
corollary holds. ■
Based on Corollary 1, we rank all CUs with their caching
cost in ascending order, i.e., λ1 ⩽ λ2 ⩽ · · · ⩽ λM , then we
have µ1 ⩾ µ2 ⩾ · · · ⩾ µM .
We assume that the optimal caching policy for the first S
CUs is non-zero, i.e., µS > 0, µS+1 = 0. Denote MS as the
effective CU set with S being the cardinality ofMS . Summing
up with (8) for i = 1, 2, ..., S, we have
R(S − 1)∑S
j=1 µj
−
∑S
i=1
λi = 0. (14)
Then, we can obtain∑S
j=1
µj =
R (S − 1)∑S
i=1 λi
. (15)
Substituting (15) into (8), we have
µi =
R (S − 1)∑S
j=1 λj
(
1− (S − 1)λi∑S
j=1 λj
)
. (16)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:55:38 UTC from IEEE Xplore.  Restrictions apply. 
Algorithm 1: Nash equilibrium calculation algorithm
for CUs.
1: Reorder CUs in ascending order of λi, i.e.,
λ1 ⩽ λ2 ⩽ · · · ⩽ λM .
2: MS = {m1,m2}, S = 2
3: while S < M and λS+1 <
∑S
i=1 λi
S−1 do
4: MS ←MS ∪ {mS+1};
5: S ← S + 1;
6: end while
7: for i = 1; i ⩽ M ; i++ do
8: if mi ∈MS then
9: µ∗
i
= R(S−1)∑S
j=1 λj
(
1− (S−1)λi∑S
j=1 λj
)
;
10: else
11: µ∗
i
= 0;
12: end if
13: end for
14: return µ∗ = {µ1
∗, µ2
∗, · · · , µM
∗} .
As µS > 0, and S ⩾ 2, we have 1 − (S−1)λS∑S
j=1 λj
> 0, i.e.,
λS <
∑S−1
j=1 λj
S−2 .
Based on the above analysis, we design an algorithm to find
the Nash equilibrium point of the CU’s sub-problem, which is
given in Algorithm 1.
Next we prove that the strategy proposed by Algorithm 1
is a Nash equilibrium point of CU’s sub-problem, and then
prove the uniqueness of this equilibrium point.
Theorem 2. The strategy obtained with Algorithm 1 is a Nash
equilibrium point of CU’s sub-problem.
Proof. For the CUs in MS , their optimal strategy is obtained
by solving the first-order derivative of Ui(·) to zero, and this
result is the best strategy. In order to prove the theorem, we
only need to prove that the optimal policy of CUs not in MS
is 0, i.e., µ∗
j = 0,∀mj ∈ M\MS . Base on Algorithm 1, we
have
λj ⩾
∑
mi∈MS
λi
|MS | − 1
,∀mj ∈M\MS . (17)
From (15), we can obtain
∑
mi∈MS
λi =
R (|MS | − 1)/
∑
mi∈MS
µi, substituting it into (17),
we have
λj ⩾
R∑
mi∈MS
µi
,∀mj ∈M\MS . (18)
Since mj /∈ MS , we have
∑
mi∈MS
µi =
∑
mi∈M\{mj} µi.
Thus we can obtain
λj ⩾
R∑
mi∈M\{mj} µi
,∀mj ∈M\MS . (19)
According to (11), we know that the strategy for any CU mj ∈
M\MS is 0. This proves the theorem. ■
Theorem 3. CU’s sub-problem has a unique Nash equilibrium
point.
Proof. For the CUs inM\MS , their optimal strategy is µi =
0 in a Nash equilibrium. Therefore, the all CUs’ sub-problem
can be seen as a game among the CUs in MS , we only need
to prove that a unique Nash equilibrium point exists in the
sub-game of CUs in MS .
For the CUs in MS , µi > 0. The utility function of CUs
is a concave function for any CU in MS , according to (9)
, their optimal strategy is obtained by solving the first-order
derivative of Ui(·) to zero. As shown in (14)-(16), we can
obtain the unique solution by solving the first-order derivative
of Ui(·) to zero for each edge device in MS . Thus we can
know that a unique Nash equilibrium point exists in the sub-
game of CUs in MS , therefore Theorem 3 holds. ■
B. Analysis of the CSP’s sub-game
Based on above analysis, there is always a Nash equilibrium
point for CUs for any value of the reward given by the
CSP. When the reward R is given, the CSP will have a
corresponding utility, so we can set an optimal R to maximize
its utility.
According to Problem 2, we can know that only
when the total caching space is larger than Q, i.e.,∑M
i=1 µi ⩾Q, can the CUs obtain rewards. From (15), we
have
∑S
i=1 µi = R(S − 1)
∑S
i=1 /λi. Meanwhile, we know,
for mi ∈ M\MS , the best strategy is 0, i.e., µi = 0, thus
we can obtain
∑M
i=1 µi =
∑S
i=1 µi. Therefore, R(S−1)∑S
i=1 λi
⩾ Q,
that is R ⩾ Q·
∑S
i=1 λi
(S−1) .
Then Problem 2 can be express as
max
R≥φ
α
∑S
i=1
log2 (1 + βµi)−R. (20)
where φ =
Q·
∑S
i=1 λi
(S−1) , S ⩾ 2.
Substituting (16) into (20), we can obtain
UCSP = α
S∑
i=1
log2 (1 + βµ∗
i )−R
= α
S∑
i=1
log2 (1 + βχiR)−R.
(21)
where R ⩾ Q·
∑S
i=1 λi
(S−1) , S ⩾ 2, and
χi =
(S − 1)∑S
i=1 λi
(1− (S − 1)λi∑S
i=1 λi
). (22)
From (16) and algorithm 1, we can know χi > 0 .
Theorem 4. The proposed Stackelberg game has a unique
Stackelberg equilibrium (µ∗, R∗) , where µ∗ and R∗ are
optimal strategies for CUs and CSP.
Proof. The first and second derivatives of the utility function
UCSP (·) are given by
∂UCSP
∂R
=
S∑
i=1
αβχi
(1 + βχiR) ln 2
− 1, (23)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:55:38 UTC from IEEE Xplore.  Restrictions apply. 
0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2
variance 
2
 
0
10
20
30
40
50
60
70
80
90
100
110
Fig. 2. Impact of σ2 on |M|.
∂2UCSP
∂R2
= −
S∑
i=1
α(βχi)
2
(1 + βχiR)
2
ln 2
< 0. (24)
Therefore, the utility function UCSP (·) is concave with R,
which means that there exists a unique R∗ to maximize the
utility. Combined with Theorem 3, Theorem 4 can be proved.
■
When R = 0, we have UCSP = 0, and the utility function
is a concave function, which first increases and then decreases.
Then, the optimal reward can be given by
R∗ =
 0, if φ ⩾ ξ,
max (φ,R′) , otherwise.
(25)
where φ =
Q·
∑S
i=1 λi
(S−1) , ξ and R′ are the solutions of the utility
function and the first derivative, respectively, i.e., UCSP (ξ) =
0, ξ ̸= 0, ∂UCSP /∂R(R′) = 0.
IV. SIMULATION RESULTS AND DISCUSSIONS
In this section, we conduct extensive simulations to evaluate
the performance of the proposed incentive mechanism. We
assume that there are M = 100 users with caching capability
around the CSP who may share their cache space. The caching
cost of different CUs are uniformly distributed with a mean of
10 and variance σ2. For the CSP, the minimum caching size
Q is set to 100, α and β are set to be 10, unless otherwise
specified.
Each CU estimates their own revenue by analyzing other
CUs’ caching space , their own caching cost and the caching
requirement Q. The impact of unit caching cost on the number
of effective CUs is evaluated in Fig. 2. We can observe from
Fig. 2 that with the increase of the variance of caching cost,
the total number of CUs participating in caching task gradually
decreases. This is straightforward, since as the cost variance
increases, more CUs cannot meet the conditions. When the
cost variance is 0.054, nearly half of the CUs no longer shares
their caches.
0 5 10 15 20 25 30 35 40
The unit cache cost 
i
0
500
1000
1500
2000
2500
3000
3500
4000
R
*
0
100
200
300
400
500
600
700
T
o
ta
l 
c
a
c
h
e
 s
p
a
c
e
Stage 1.1
Stage 1.2
Stage 2
Stage 3
Fig. 3. Impact of λi on the caching strategies.
The effect of the unit caching cost λi on the caching
strategies is show in Fig. 3. We can observe that when the
total cache space provided by the CUs is larger than Q, the
caching space contributed by the CUs decreases with λi. In
stage1.1, the utility of the CSP improves as R∗. This is because
when the caching cost increases, the CSP needs to improve
R∗ to encourage more CUs to share caching space. Due to
the increase of λi, the caching space shared by CUs decreases
greatly. Therefore, even R∗ increases slightly, the average
utility of the CU is also decreasing. In stage 1.2, with the
increase of λi, R∗ remains unchanged, the total caching space
decreases, and the utilities of the CSP and CUs decrease. This
is because the number of users has reached the maximum, so
the CSP will no longer increase its reward R∗. For the CSP,
the increase of λi leads to the decrease of caching space and
the utility of the CSP; For the CU, due to the increase of
λi, the total caching space and the average utility decrease.
For stage 2 that the total caching space provided by CUs is
equal to Q, we can observe that R∗ increases continuously
with the caching cost. The utility of the CSP decreases and
the average utility of the CUs increases. This is because the
CSP needs to increase the reward R∗ to remain the caching
requirement Q. Whereas, in stage 3, the caching cost is too
high that the minimum caching constraint cannot be satisfied,
thus the reward reduces to zero, so the utilities of the CSP and
CUs are.
Similarly, the impact of caching requirement Q on the
strategies and the utilities are evaluated in Figs. 5 and 6,
respectively. In stage 1, when the target value of Q is relatively
small, the CSP can complete tasks easily, the reward R∗
remains unchanged. In stage 2, the CSP will continuously
increase R∗ to encourage more CUs to complete the cache
target Q. The total caching space keep increasing, resulting in
a decrease of the CSP’s utility and increase of CU’s utility.
When the caching requirement Q is relatively too large in stage
3, the utility of the CSP become zero, and thus the reward
reduces to zero, and all the CUs will not participate in the
process.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:55:38 UTC from IEEE Xplore.  Restrictions apply. 
0 5 10 15 20 25 30 35 40
The unit cache cost 
i
0
2
4
6
8
10
12
14
U
ti
lit
y
 o
f 
th
e
 C
S
P
105
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
A
v
e
ra
g
e
 u
ti
lit
y
 o
f 
th
e
 C
U
s
Stage 1.1
Stage 1.2
Stage 3
Stage 2
Fig. 4. Impact of λi on the utilities.
0 100 200 300 400 500 600
Q
0
1000
2000
3000
4000
5000
6000
R
*
0
100
200
300
400
500
600
700
800
900
1000
T
o
ta
l 
c
a
c
h
e
 s
p
a
c
e
Stage 1
Stage 2
Stage 3
Fig. 5. Impact of the caching target Q on the strategies.
0 100 200 300 400 500 600
Q
0
2
4
6
8
10
12
14
16
U
ti
lit
y
 o
f 
th
e
 C
S
P
105
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
A
v
e
ra
g
e
 u
ti
lit
y
 o
f 
th
e
 C
U
s
Stage 1
Stage 2
Stage 3
Fig. 6. Impact of the caching target Q on the utilities.
V. CONCLUSIONS
In this paper, we have developed a blockchain enabled
mobile user caching framework that motivates nearby users to
contribute their caching space to reduce the cost of traditional
caching scheme. The participation and contributions that each
caching users made is recorded on the blockchain, with
guaranteed security and privacy. On this basis, we have also
developed the game theoretical framework for the incentive
mechanism design. Simulations have shown the effectiveness
of the proposed scheme. In the future, we will blockchain
consensus and smart contract enabled caching transactions.
ACKNOWLEDGMENT
This work was supported in part by the National Key R&D
Program of China under Grant 2020YFB1005900, the National
Natural Science Foundation of China No. 62001220, the
Natural Science Foundation of Jiangsu Province BK20200440,
the Fundamental Research Funds for the Central Universities
No.1004-YAH20016, No.NT2020009.
REFERENCES
[1] W. Sun, S. Li, and Y. Zhang, “Edge caching in blockchain empowered
6G,” China Commun., vol. 18, no. 1, pp. 1–17, 2021.
[2] W. Wu, N. Zhang, N. Cheng, Y. Tang, K. Aldubaikhy, and X. Shen,
“Beef up mmwave dense cellular networks with D2D-assisted cooper-
ative edge caching,” IEEE Trans. Veh. Tech., vol. 68, no. 4, pp. 3890–
3904, 2019.
[3] S. Khanal, K. Thar, and E.-N. Huh, “Dcol: Distributed collaborative
learning for proactive content caching at edge networks,” IEEE Access,
vol. 9, pp. 73 495–73 505, 2021.
[4] G. Ma, Z. Wang, M. Zhang, J. Ye, M. Chen, and W. Zhu, “Understanding
performance of edge content caching for mobile video streaming,” IEEE
J. Sel. Areas Commun., vol. 35, no. 5, pp. 1076–1089, 2017.
[5] S. Zhang, P. He, K. Suto, P. Yang, L. Zhao, and X. Shen, “Cooperative
edge caching in user-centric clustered mobile networks,” IEEE Trans.
Mobile Comput., vol. 17, no. 8, pp. 1791–1805, 2017.
[6] W. Wang, N. Cheng, Y. Liu, H. Zhou, X. Lin, and X. Shen, “Content
delivery analysis in cellular networks with aerial caching and mmwave
backhaul,” IEEE Trans. Veh. Tech., vol. 70, no. 5, pp. 4809–4822, May
2021.
[7] J. Liu, S. Guo, Y. Shi, L. Feng, and C. Wang, “Decentralized caching
framework toward edge network based on blockchain,” IEEE Internet
Things J., vol. 7, no. 9, pp. 9158–9174, 2020.
[8] W. Sun, J. Liu, Y. Yue, and Y. Jiang, “Social-aware incentive mecha-
nisms for D2D resource sharing in IIoT,” IEEE Trans. Ind. Informat.,
vol. 16, no. 8, pp. 5517–5526, 2019.
[9] J. Zou, C. Li, C. Zhai, H. Xiong, and E. Steinbach, “Joint pricing and
cache placement for video caching: A game theoretic approach,” IEEE
J. Sel. Areas Commun., vol. 37, no. 7, pp. 1566–1583, 2019.
[10] X. Cao, J. Zhang, and H. V. Poor, “An optimal auction mechanism for
mobile edge caching,” in 2018 IEEE 38th International Conference on
Distributed Computing Systems (ICDCS). IEEE, 2018, pp. 388–399.
[11] R. Zhang, F. R. Yu, J. Liu, R. Xie, and T. Huang, “Blockchain-
incentivized D2D and mobile edge caching: A deep reinforcement
learning approach,” IEEE Netw., vol. 34, no. 4, pp. 150–157, 2020.
[12] Q. Xu, Z. Su, and Q. Yang, “Blockchain-based trustworthy edge caching
scheme for mobile cyber-physical system,” IEEE Internet Things J.,
vol. 7, no. 2, pp. 1098–1110, 2019.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:55:38 UTC from IEEE Xplore.  Restrictions apply.