Stackelberg Game Based Resource Pricing and Scheduling in Edge-Assisted Blockchain Networks
Stackelberg Game Based Resource Pricing and
Scheduling in Edge-Assisted Blockchain Networks
Sijie Huang†, He Huang†∗, Guoju Gao†∗, Yu-E Sun‡, Yang Du†, and Jie Wu§
†School of Computer Science and Technology, Soochow University, China
‡School of Rail Transportation, Soochow University, China
§Department of Computer and Information Sciences, Temple University, USA
∗Correspondence to: huangh@suda.edu.cn, gjgao@suda.edu.cn
Abstract—Currently, the blockchain, as a key enabling tech-
nology of digital currency, has attracted lots of attention from
both industry and academia. The blockchain mining process
requires high computing power to solve a Proof-of-Work (PoW)
puzzle, which is hard to implement on users’ mobile devices.
So these miners may leverage the resources of the edge/cloud
service providers (ESPs/CSP) to calculate the PoW puzzle. The
existing edge-assisted blockchain networks simply assumed that
all ESPs have a uniform propagation delay, which is not realistic.
In this paper, we consider a more practical scene where ESPs
with distributed geographic locations have diverse propagation
delays when supporting the computation of the PoW puzzle.
Additionally, the blockchain mining process generally involves
the complicated competition and game among these ESPs and
miners. Each ESP focuses on how to determine his resource
price and to select the requests from the miners, so that he can
maximize his utility. According to the set resource price, each
miner concentrates on scheduling his resource requests for each
ESP to maximize his individual utility which depends on ESPs’
resource price and propagation delays. We model such a resource
pricing and scheduling problem as a multi-leader multi-follower
Stackelberg game and aim at finding the joint maximization of
the utilities of each ESP and each individual miner. We prove the
existence and uniqueness of the Stackelberg equilibrium (SE) and
meanwhile propose an algorithm to achieve the corresponding
SE. Finally, extensive simulations are conducted to verify the
significant performance of the proposed solution.
Index Terms—Blockchain, edge computing, game theory, re-
source pricing, resource scheduling, propagation delay.
I. INTRODUCTION
In the past few years, Bitcoin has been widely used ow-
ing to its decentralized particularity. As one popular digital
cryptocurrency, Bitcoin can be used across countries without
worrying about being frozen by any financial institutions [1],
and also can record and store all digital transactions in a
decentralized append-only public ledger called “blockchain”.
Blockchain technology is applied in the Bitcoin field to record
transactions and prevent tampering. Specifically, the data of
digital transaction was packaged in the form of the linked
blocks, in which each block is encrypted by using the Hash
technique to ensure its security.
Due to the decentralized idea in the Bitcoin networks, it
needs someone to collect the transaction records that occurred
in the past period of time, package them into a block, and
then link this block to the end of the existing blockchain.
This is the most significant process of the blockchain network,
which is called the blockchain mining process. In the mining
Fig. 1. Edge-Assisted Blockchain Mining Networks.
process, miners are first required to solve a computationally
challenging Proof-of-Work (PoW) puzzle. Then, each miner
propagates his mined block to all blockchain network users
to make this block be verified as soon as possible. This is
because only when a block is verified by the majority of
miners in this network, it can be considered to be added to
the end of the blockchain successfully. In other words, the
consensus protocol of blockchain can be realized. In fact,
only the miner who successfully links a block to the exiting
blockchain can gain a certain amount of Bitcoin in return as
the mining incentive.
The blockchain based on PoW is a critical technology,
which is considered as a technological innovation in the peer-
to-peer network [2]. The security and reliability are thus
ensured by this mechanism which requires numerous trial for
a valid solution [3]. However, the blockchain based on PoW
needs a mass of computation and storage resources. This is
hard to be satisfied with a miner’s terminal devices. Thanks
to the development of edge/cloud computing technique, the
miners can take on lease some on-demand resources from the
edge/cloud service providers (ESPs/CSP) [4], so that they can
efficiently complete the mining process. This is so-called edge-
assisted blockchain mining networks, as shown in Fig.1.
The mining process in the edge-assisted blockchain net-
works is described as a speed game. First, miners send their
computing requests to ESPs and purchasing some computation
and storage resources on ESPs to calculate the PoW puzzle.
Then, if any ESP calculated the PoW puzzle, he needs to
propagate the block to all of the other ESPs in this edge-
289
2021 IEEE 18th International Conference on Mobile Ad Hoc and Smart Systems (MASS)
978-1-6654-4935-9/21/$31.00 ©2021 IEEE 
DOI 10.1109/MASS52906.2021.00045
20
21
 IE
EE
 1
8t
h 
In
te
rn
at
io
na
l C
on
fe
re
nc
e 
on
 M
ob
ile
 A
d 
H
oc
 a
nd
 S
m
ar
t S
ys
te
m
s (
M
A
SS
) |
 9
78
-1
-6
65
4-
49
35
-9
/2
1/
$3
1.
00
 ©
20
21
 IE
EE
 | 
D
O
I: 
10
.1
10
9/
M
A
SS
52
90
6.
20
21
.0
00
45
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:57:37 UTC from IEEE Xplore.  Restrictions apply. 
assisted blockchain network as soon as possible, so that he can
make this block become the first one to realize the consensus
principle. The miner who packages the block on this ESP
and successfully takes the lead in reaching consensus principle
is considered as the winner of the mining process. Agreeing
on an identical blockchain by all nodes is also called “block
convergence”. Here, a new block will be validated earlier by
other nodes if it can be spread to the whole blockchain network
faster [5]. The block convergence of blockchain may be
disrupted by the increased network latency (i.e., propagation
delay). In other words, even if two nodes solve the PoW
problem at the same time, the block packaged by one node
may be discarded because the propagation time is longer than
that of the other block.
The existing edge-assisted blockchain networks simply as-
sumed that all ESPs have a uniform propagation delay, which
is not practical in the real world. In this paper, we consider
a price-based resource management mechanism with propa-
gation delay in edge-assisted blockchain networks, in which
ESPs have different propagation delays due to the different
geographic locations in the edge computing networks. Further,
we propose a multi-leader multi-follower Stackelberg game
model between the computing service providers and miners.
The contributions of this paper are summarized as follows:
• We consider a three-layer edge-assisted blockchain min-
ing network model, i.e., miners, ESPs and CSP. Each
miner studies how to maximize his individual utility
which depends on the resource price and the propaga-
tion delay of each ESP, while all ESPs focus on the
computing resource pricing and scheduling to maximize
their utility. We are the first to consider the impact on
block convergence of different propagation delays due
to the distributed geographic locations. Actually, ESPs’
propagation delays will greatly affect the probability of
blockchain mining success.
• To solve the competition and game among the ESPs and
miners, we propose a special multi-leader multi-follower
two-stage Stackelberg game model, in which the ESPs
and miners are seen as the leaders and followers, respec-
tively. The proposed model takes the ESPs’ propagation
delays and the impact of CSP into consideration when
calculating the miners’ utility.
• We derive the explicit-form expressions of the most ben-
eficial price strategies for each ESP and at the same time
the optimal resource requests for each individual miner.
Furthermore, we analyze the existence and uniqueness
of the Stackelberg equilibrium (SE), based on which we
propose a corresponding algorithm to obtain the SE.
• Extensive simulations are conducted to verify the signif-
icant performance of the proposed solution.
II. SYSTEM MODEL AND PROBLEM FORMULATION
A. Edge-Assisted Blockchain Mining Networks
In this paper, we consider the public blockchain mining
networks based on PoW consensus protocol. In the blockchain
mining networks, there are many ordinary network users,
called miners, trying to complete the transaction package,
called block, to purse some rewards. More specifically, the
success of a miner appending the block to the end of the
current blockchain contains two steps. 1) The miner needs to
solve the PoW puzzle to ensure the security and validity, which
is called mining procedure. 2) The miner must broadcast his
results to the other network users in the blockchain network,
which is called broadcasting procedure, so that the consensus
principle can be realized. During the mining procedure, the
PoW puzzle that the miners try to solve highly depends on
the computation resources of the miners’ terminal devices.
In other words, the miners with more computation resources
will have a larger probability of solving this PoW puzzle.
However, the computation resources of a miner’s terminal
device are generally limited. The miners can take on lease
some on-demand resources from ESPs, such that they can
efficiently complete the mining process. Note that the ESPs
are geographically distributed at network edge, so the network
users can access the ESPs via the wireless local area networks.
While these ESPs connect to the remote CSP through a core
network, as shown in Fig. 1. In general, an ESP has a limited
computation resource capability while the CSP is assumed
to have unconstrained computation resources. For an ESP,
when the total resources requested from the miners exceed
his capacity, he will upload part of his requests to the CSP.
We consider there are n ESPs in the edge-assisted
blockchain network, denoted as N = {1, · · · , j, · · · , n}, and
there are m miners in the blockchain system, denoted as
M = {1, · · · , i, · · · ,m}. To complete the PoW puzzle, the
miners will purchase computing service from ESPs or CSP.
When the ESPs or CSP who calculates out the PoW puzzle,
he will try to broadcast its result to all miners as soon as
possible. In such a way, the corresponding miner who rents the
computation resources may become the first one to realize the
consensual block ahead of other competitors. In the blockchain
networks, only the first miner who reaches the consensual
block principle can obtain the reward. Note that in addition to
the time of calculating out the PoW puzzle, the propagation
delay of spreading the results to other miners is also an
important factor. In the system model, we assume that the n
ESPs are sorted in descending order of the propagation delay.
Also, the propagation delay of the CSP is obviously greater
than that of any ESP due to the remotest location.
The ESPs first set their unit price of selling their computing
resources, and then the miners determine their request for each
ESP according to the set price. Here, for each miner i, we
use Xi = (x1
i , x
2
i , · · · , xn
i ) to denote the request for these n
ESPs, and use Bi to denote his budget. We suppose that each
ESP in the edge-assisted blockchain mining networks has the
same unit computing power but different from that of CSP.
In fact, the probability of solving the PoW problem is related
to computing power. In other words, the effective computing
power of one ESP is proportional to the computation resources
that the corresponding miner rents. As a result, the probability
of miner i calculating the PoW problem on ESP j, denoted as
αj
i , indicates the percentage of the resources he rents on ESP
290
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:57:37 UTC from IEEE Xplore.  Restrictions apply. 
TABLE I
DESCRIPTION OF COMMONLY-USED NOTATIONS.
Variable Description
M, N The sets of miners and ESPs, respectively.
i, j The indexes for miners and ESPs.
xj
i The service demand of miner i for ESP j.
Xi The service demand of miner i for all ESP.
Kj The maximum capacity of ESP j.
Bi The budget of miner i.
tj / pj The propagation delay / unit price of ESP j.
τ j
i Miner i’ demand for ESP j is accepted or not.
c / h The unit cost for providing service on ESP / the
unit cost for uploading the request to CSP.
Eall Total request accepted by all ESPs from all miners.
Call Total request uploaded to CSP from all ESP.
W j
i The probability of miner i winning on ESP j.
Wi The probability of miner i
R Reward of blockchain mining successfully.
Ui / Vj The utility of miner i / ESP j
j to the total computation resources in ESPs, that is:
αj
i =
xj
i∑
i∈M
∑
j∈N τ ji x
j
i
. (1)
Here, τ ji = 1 means the request of miner i for ESP j is
accepted by ESP j; on the contrary, τ ji =0 denotes this demand
is uploaded to the CSP by ESP j. We use Eall to represent
the total request accepted by all ESPs in this edge-assisted
blockchain network, i.e., Eall=
∑
i∈M
∑
j∈N τ ji x
j
i . Similarly,
we use Call to express the total request uploaded to the CSP
by all ESPs due to their limited computing resource capacity,
i.e., Call=
∑
i∈M
∑
j∈N
(
1− τ ji
)
xj
i .
As introduced above, the process of a miner winning the
reward consists of two procedures, i.e., the mining proce-
dure and broadcasting procedure. The winning probability of
broadcasting procedure is affected by the propagation delay.
In fact, the long propagation delay may diminish the chances
of winning if an ESP propagates a block slowly to other
miners in the broadcasting procedure. In other words, it is
possible that the miner that first calculates the PoW puzzle and
packages a block, may fail to get reward because someone else
takes the lead in broadcasting the packaged block successfully
and realizes the consensus protocol. This is because this
block is likely to be discarded because of long propagation
delay, which is called orphaning [6]. Following the existing
work [7], we consider that the block mining time follows
the Poisson distribution, and the orphaning probability on the
propagation delay tj caused by ESP j, denoted as Porphan (tj),
is approximated as:
Porphan (tj) = 1− e−λtj , (2)
in which the parameter λ denotes the inter-arrival rate of
the Poisson distribution. Thus, the successful probability of
mining game for miner i on ESP j is expressed as follows:
W j
i = αj
i (1− Porphan (tj)) =
τ ji x
j
i
Eall
e−λtj , (3)
where W j
i denotes the probability that ESP j is the first one
who solves the PoW problem (i.e., packages a block) and
broadcasts this block successfully, that is, making it be the
first consensual block. Note that an edge computing request
may be sent to the remote CSP by the corresponding ESP due
to his limited resource capacity. In such a case, the winning
probability for the CSP is represented as follows:
W j
i
′
=
(1− τ ji )x
j
i
Call
e−λt̄. (4)
Here, due to the different unit computing power between
ESPs and CSP, the probability of solving the PoW problem
is relative to the overall computing power of all miners on
the CSP rather than that on ESPs. t̄ is the propagation delay
of the CSP, which is bigger than tj for j ∈ N . Hence, the
winning probability of miner i on all service providers can be
summarized as:
Wi =
∑
j∈N
(
τ ji x
j
i
Eall
e−λtj +
(1− τ ji )x
j
i
Call
e−λt̄
)
. (5)
B. Two-Stage Stackelberg Game
We model the interactions between computing service
providers and miners as a multi-leader multi-follower Stack-
elberg game with complete information. The ESPs, i.e., the
leaders, act first by setting the unit price for their computation
resources. The miners, i.e., the followers, then determine their
optimal computing service request based on the prices and
propagation delays of ESPs. Actually, in the first stage, the
competition in ESPs forms as a non-cooperative subgame,
where each ESP sets his unit price by considering miners’
requests as well as other ESPs’ prices. In the second stage,
each miner, e.g., i, determines and sends his requested com-
puting resources for all ESPs by taking the unit price and his
budget Bi into consideration.
1) Miner Side Utility in Stage II: Assume that the unit
prices of the computation resources are given by ESPs, each
miner, e.g., i, decides his services demands under the budget
constraint to maximize his utility, where the utility is defined
as the expected reward minus the corresponding cost. The
expected reward is computed by R ·Wi, in which R means
the reward of successfully appending a block to the end of
the existing blockchain, and Wi denotes the probability of
the miner i winning the reward. On the other hand, the total
cost of miner i is determined by the prices of ESPs, denoted
as {p1, · · · , pj , · · · , pn}, and this miner’s service requests,
i.e., Xi = (x1
i , x
2
i , · · · , xn
i ). Based on this, we formulate the
optimization problem of the miner i as follows:
maximize Ui = R ·Wi −
∑
j∈N pj · xj
i
subject to
∑
j∈N pj · xj
i ≤ Bi
Eq. (1) – Eq. (5)
(6)
2) ESP Side Utility in Stage I: The profits of ESPs comes
from the payments of miners. When a miner’s request is
accepted by an ESP, the miner must pay the ESP for his
computing resource services. The utility of each ESP means
that the received payment minus the corresponding cost. On
the other hand, when a miner’s request is uploaded to the
291
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:57:37 UTC from IEEE Xplore.  Restrictions apply. 
CSP through one ESP, this ESP’s utility equals to the miner’s
payment minus the cost that this ESP provides for the CSP.
We consider that the scale of the cloud platform is much larger
than that of the edge platforms, so each edge platform’s strat-
egy will not cause an apparent impact on the cloud platform’s
revenue. As a result, the CSP will always keep a fixed unit
price of the computing resources and there is no willingness to
change his pricing mechanism. The utility of each ESP, e.g.,
j, is defined as Vj = (pj − c) ·Ej + (pj − h) ·Cj , where c is
the unit electricity cost for providing service on the ESPs and
h is the ESP’s payment for renting unit computing resources
from CSP. Ej denotes the total computation resources that
the ESP j provides for the miners while Cj means the total
computation resources that ESP j rents from the CSP, that is,
Ej =
∑
i∈M τ ji x
j
i and Cj =
∑
i∈M(1− τ ji )x
j
i . According to
this, each ESP’s optimization goal is presented as follows:
maximize Vj = (pj − c) · Ej + (pj − h) · Cj
subject to
∑
i∈M τ ji x
j
i ≤ Kj
(7)
where Kj is the maximum computation resource capacity of
ESP j. Here, when the sum of requests from all miners on ESP
j exceeds his capacity constraints, he has to upload part of the
received requests to the CSP. However, the long propagation
delay may decrease the winning probability for the applied
miners, which will in turn reduce the miners’ requests. Thus,
it is quite challenging for each ESP to set a suitable unit price
for the computing resources so that he can maximize his utility.
We aim at finding the Stackelberg equilibrium where the
payoff of ESPs and miners can be maximized simultaneously.
We first define the Stackelberg equilibrium point as follows.
Definition 1 Let x∗ and p∗ denote the optimal service de-
mand vector of all the miners and optimal unit price vector of
edge computing service, respectively. Then, the point (x∗,p∗)
is the Stackelberg equilibrium if the following two conditions
are satisfied:
Vj
(
p∗j ,p
∗
−j ,x
∗) ≥ Vj
(
p
′
j ,p
∗
−j ,x
∗
)
(8)
Ui
(
x∗i ,x
∗
−i,p
∗) ≥ Ui
(
x
′
i,x
∗
−i,p
∗
)
(9)
Here, p∗−j is the optimal pricing strategy of all ESPs except
ESP j, and x∗−iis the best response service demand vector for
all miners except miner i. In the next section, we will analyze
the game equilibrium in the above model.
III. STACKELBERG GAME EQUILIBRIUM ANALYSIS
In this section, we analyze the optimal service demand of
miners as well as the profit maximization of ESPs under the
Stackelberg game with a complete information model.
A. Stage II: Miners’ Participation Equilibrium
Based on the definition of Stackelberg game equilibrium,
as the pricing strategies of all ESPs are given, each miner
determines his service demands for each ESP as the best
response. We first introduce the definition of the best response.
Definition 2 A request vector x∗i �
(
x1∗
i , x2∗
i . . . , xn∗
i
)
is the
optimal response service demand vector of the miner subgame
if Ui
(
x∗i ,x
∗
−i,p
∗) ≥ Ui
(
x
′
i,x
∗
−i,p
∗
)
.
Here, we make an assumption about the following values.
Assumption 1
Δt <
lnm
λ
, where Δt = max {tj − tk} ∀i, k ∈ n (10)
Theorem 1 Under Assumption 1, the existence and unique-
ness of miner participation equilibrium, i.e., the Nash equilib-
rium of Stage II in this Stackelberg game, can be guaranteed.
Proof: The strategy space of each miner is a non-empty,
compact subset of the Euclidean space. From Eq. (6), Ui
is apparently continuous with the variable xi, which is the
combination of request for each ESP, i.e., xj
i . We take the first
order and second order derivatives of Eq. (6) with respect to
xj
i as follows:
∂Ui
∂xj
i
= R · ∂Wi
∂xj
i
− pj ,
∂2Ui
∂
(
xj
i
)2 = R · ∂2Wi
∂
(
xj
i
)2 . (11)
Based on Eq. (5), we can take the second derivative of
Wi as Eq. (14), Eq. (15) and Eq. (16). It’s obvious that
2(1−τj
i )
2
(Call)
3 e−λt̄
[∑n
k=1
(
1−τki
)
xk
i −Call
]≤ 0, we just need to
prove, ∑n
k=1
τki x
k
i e
−λ(tk−tj) − Eall ≤ 0. (17)
Eq. (17) can be transformed as∑n
k=1
(
τki x
k
i e
−λ(tj−tk) −
∑m
i=1
τki x
k
i
)
. (18)
We take the expectation of Eq. (18) as follows:∑n
k=1
(
τki x
k
i e
−λΔt −mτki x
k
i
)
. (19)
Based on Assumption 1, we have the following result, i.e.,∑n
k=1
(
τki x
k
i e
−λΔt −mτki x
k
i
)
< 0, then Eq.(15) < 0 can
be guaranteed. In fact, Assumption 1 is easy to be satisfied
because λ is between 0 and 1 and much less than 1. Thus, the
miner participation sub-game is a concave game which always
admits the Nash equilibrium.
By setting the first-order derivative of the miner’s utility to
0, we have follows:
If τ ji =1,
pj
R
=
−1
(Eall)2
(
n∑
k=1
τ ji x
j
ie
−λtk−Ealle
−λtj
)
, (20)
xj
i =
√√√√√
⎛
⎝e−λtj · E−xj
i
all −
∑
k �=j
τ ji x
j
ie
−λtk
⎞
⎠ · R
pj
−E
−xj
i
all ; (21)
if τ ji = 0,
pj
R = e−λt̄
(Call)
2
(
Call −
∑n
k=1
(
1− τki
)
xk
i
)
, (22)
xj
i =
√
e−λt̄ · R
pj
· C−i
all − C
−xj
i
all , (23)
292
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:57:37 UTC from IEEE Xplore.  Restrictions apply. 
∂Wi
∂
(
xj
i
) = − τ ji
(Eall)
2 ·
n∑
k=1
τki x
k
i e
−λtk +
τ ji
Eall
e−λtj −
(
1− τ ji
)
(Call)
2 ·
n∑
k=1
(
1− τki
)
xk
i e
−λt̄ +
(
1− τ ji
)
Call
e−λt̄. (14)
∂2Wi
∂
(
xj
i
)2 =
2
(
τ ji
)2
(Eall)
3 ·
n∑
k=1
τki x
k
i e
−λtk −
2
(
τ ji
)2
(Eall)
2 e−λtj +
2
(
1− τ ji
)2
(Call)
3 e−λt̄ ·
n∑
k=1
(
1− τki
)
xk
i −
2
(
1− τ ji
)2
(Call)
2 e−λt̄ (15)
=
2
(
τ ji
)2
(Eall)
3 e−λtj
[
n∑
k=1
τki x
k
i e
−λ(tk−tj) − Eall
]
+
2
(
1− τ ji
)2
(Call)
3 e−λt̄
[
n∑
k=1
(
1− τki
)
xk
i − Call
]
. (16)
where E
−xj
i
all =Eall−xj
i and C
−xj
i
all =Call−xj
i . If the demands
of all miners for ESP j is less than Kj , ESP j will accept the
xj
i in order to maximize its utility, i.e., τ ji = 1. Therefore,
for a rational and selfish miner, it will predict the strategies of
other opponents. If xj
i+
∑
k �=i x
j
k≤Kj , miner i will determines
its demand for ESP j as Eq. (21). Then, we obtain the best
response of miner i as Eq. (25). Since the model in this
paper is relatively complex and involves multi-dimensional
parameters, we cannot obtain the best response results which
do not involve other users’ strategy parameters for the time
being. In future work, we will explore the best response results
without others’ strategies. However, the obtained intermediate
result about the miners’ best strategy will not affect the proof
of the Nash equilibrium in stage I. �
B. Stage I: Optimal Pricing Mechanism
Based on the Nash equilibrium of the computing service
demand in the ESPs’ subgame in Stage II, the leader of
the Stackelberg game, i.e., the ESP, can optimize its pricing
strategy in Stage I to maximize its profit defined in Eq. (7).
Theorem 2 Nash equilibrium of ESPs’ subgame problem
exists under the condition of pj < 3c and pj < 3h.
Proof: By taking the first order and second order derivatives
of Eq. (7), we have Eq. (26) and Eq. (27).
Specifically, when ESP j accepts the demand xj
i , i.e.,
τ ji = 1, for easy of illustration, we denote A as√(
e−λtk·E−x
j
i
all −∑k �=j τ
j
i x
j
ie
−λtk
)
·R, which is nothing to
do with pj , so we can obtain that:
xj
i
∗
=
A√
pj
− E
−xj
i
all ; (28)
Similarly, we denote B as
√
e−λt̄ ·R · C−i
all in the case
where ESPs upload demand xj
i to the CSP, i.e., τ ji = 0:
xj
i
∗
=
B√
pj
− C
−xj
i
all ; (29)
By substituting Eq. (28) and Eq. (29) into Eq. (27), we can
gain Eq. (30) .
Therefore, we can conclude that when the condition pj <
3c and pj < 3h are satisfied, the negativity of
∂2Vj
∂(pj)
2 can
Algorithm 1 Asynchronous Best Response
Input: Any feasible price P = {p1, p2, . . . , pn}, miners’
demands X={X1, X2, . . . , Xm}, and the threshold ε
1: for iteration k do
2: storing last iteration P (k−1);
3: for each miner i do
4: receiving the pricing strategy P = {p1, p2, . . . , pn};
5: predicting the optimal requests of other miners;
6: calculating xj(k)
i =xj(k−1)
i +Δ
∂Ui
(
X
(k−1)
−i ,X
(k−1)
i ,P
)
∂xj
i
;
7: deciding his request x
(k)
i = {x1
i , x
2
i , . . . , x
n
i };
8: for each ESP j do
9: update the price with a step δ;
10: predicting miners’ optimal requests x∗ for each ESP;
11: if the new price brings more profit then
12: p
(k)
j ← p
(k)
j + δ;
13: if ‖P (k) − P (k−1)‖ < ε then
14: return P (k) and x∗;
15: else
16: k ← k + 1;
be guaranteed. In other words, ESP side subgame problem is
convex with respect to pj under this condition. The solution’s
uniqueness further guarantees the global convergence and SE
is achieved given that the Nash equilibrium is found in the
leader stage. Hence, the theorem holds. �
We take advantage of a classic distributed algorithm called
Asynchronous Best Response to find the Nash equilibrium
point in ESPs’ subgame, where ESP is engaged in a gradient
ascent process to maximize its utility. We use the gradient
addition method to adjust the price strategies of ESPs and the
miners’ demands policy in each round. These operations are
conducted in each round of iteration until the difference of the
Frobenius norms of the price strategy in previous round and
that in this round is less than a given threshold. The point now
is the Nash equilibrium point that we are looking for. Finally,
Algorithm 1 terminates and outputs the results.
IV. PERFORMANCE EVALUATION
We first simulate the multi-leader multi-follower Stackel-
berg game between miners and ESPs and further verify the
practicality of our proposed utility function of miners. Then,
numerical examples to certificates the system model we proved
293
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:57:37 UTC from IEEE Xplore.  Restrictions apply. 
xj
i
∗
=
⎧⎪⎪⎨
⎪⎪⎩
√(
e−λtk·E−x
j
i
all −∑k �=j τ
j
i x
j
ie
−λtk
)
· R
pj
− E
−xj
i
all , if xj
i +
∑
k �=i x
j
k ≤ Bj√
e−λt̄ · R
pj
· C−i
all − C
−xj
i
all , otherwise
(25)
∂Vj
∂pj
= Ej + (pj − c)
∑
i∈M τ ji
∂xj
i
∂pj
+ Cj + (pj − h)
∑
i∈M
(
1− τ ji
) ∂xj
i
∂pj
. (26)
∂2Vj
∂ (pj)
2 =
∑
i∈M
τ ji
∂xj
i
∂pj
+ (pj − c) ·
∑
i∈M
τ ji
∂2xj
i
∂ (pj)
2 +
∑
i∈M
(
1− τ ji
) ∂xj
i
∂pj
+ (pj − h) ·
∑
i∈M
(
1− τ ji
) ∂2xj
i
∂ (pj)
2 . (27)
∂2Vj
∂ (pj)
2 =
∑
i∈M
(
τ ji
[
(pj − c) · 3A4 − A
2 · pj
(pj)
5/2
]
+
(
1− τ ji
)[ (pj − h) · 3B4 − B
2 · pj
(pj)
5/2
])
(30)
is reasonable. We assume that the parameter of propagation
delay λ is fixed as 1
600 , as introduced in the work [8]. In
addition, when mentioning the prices set by the ESPs, no
matter whether they are optimized or not, pj > c, pj > h
and t̄ >> tj always hold.
A. Influence at ESP side
We address the comparison of how capacity affect utility
of ESP in different numbers of miners or different numbers
of ESPs cases. As illustrated in Fig. 2, we observe that the
profit of an ESP rises with the increase of its own capacity.
This is because more capacity allows the ESP to accept more
requests and reduces the amount of the computing tasks that
are uploaded to the CSP. Here, the cost for uploading requests
to the CSP is bigger than that of running the tasks on ESP
locally. Thus, more tasks implemented on ESP enhances the
profit of ESP. We also see that the utility of ESP increases as
the number of miners increases but drops with the number of
ESPs conversely. This is due to the fact that a greater number
of miners will cause more computing service demands and the
competition will be more intense in the case including more
miners. In such settings, the miners are willing to request more
computing resources to upgrade their winning probability.
However, with the fixed number of miners, the budget of
miners is limited, which means the total requests are limited
under their budget constraint. Thus, more ESPs share the
limited benefits, resulting in a decrease in the average profit of
each ESP. Fig. 3 shows the ESPs’ utility rises when the average
budget of miners Bi varies from 60 to 120. This is because the
miners have more money to purchase the computing service,
which further increases the utility of ESPs.
B. Influence at Miner Side
We also study the miners’ utility with the change of miners’
budgets and ESPs’ capacity. Fig. 4 indicates that, when the
budgets of other miners are fixed as a certain value, the
increase of one miner’s budget will result the higher utility
of this miner. Obviously, increasing a miner’s budget can
enable him to purchase more computing resources and increase
the probability of solving the PoW problem, which further
enhances his profits. We find that as the number of ESPs
is fixed, the miner’s utility decreases with the increase of
number of miners. This is because a more competitive game
among more miners will lead to the lower probability of
each competitor, and then decrease the utility of each miner.
Fig. 4 demonstrates that if the number of ESPs increases, each
miner will get more profits. The reason is that more ESPs
bring higher total capacity which will allow more demands
to be accepted by ESPs, resulting in the higher probability of
winning the game due to the shorter propagation delay of ESPs
than CSPs. Nevertheless, when the certain miner’s budget is set
as 90, changing the number of ESPs from 4 to 5 has no effect
on the growth of miner’s benefit. This is due to the fact that,
when the miner’s budget is under a certain amount, simply
increasing the number of ESPs has no help for a miner to
purchase more computing service owing to the limited budget.
As a result, the utility of one miner holds constantly until the
budget grows up to a higher value.
Fig. 5 shows the impact of ESPs’ capacity on miners’
utility. The average of miners’ utility increases as the average
capacity of ESPs increases at first. While the average capacity
of ESPs reaches a certain value, the changes in miners’
utility tends to be flat. Miners specify their own demand
strategy based on their own budget and the prediction of other
competitors’ anticipation. More capacity of ESPs facilitate the
acceptance of miners’ requests. Therefore, within a limited
budget, increasing ESPs’ capacity will bring a certain benefit
growth. However, due to the limited budget of miners, they
cannot pay for too much computing services, so the continuous
growth of ESPs’ capacity brings no benefit in their utility when
their requests have reached the upper limit of their budgets.
C. System Performance Evaluation
We then evaluate the system performance for miners and
providers under the proposed algorithm, as illustrated in Fig. 6,
Fig. 7, and Fig. 8. We evaluate the utility of miners and ESPs
as well as the computing service demanded by miners with
the changes of the reward parameters. With the increase of the
reward, all values of total demanded computing service, ESPs’
utility and miners’ utility grow up obviously. Moreover, we can
find that the propagation delay shows a positive correlation
294
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:57:37 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 2. ESP’ Utility vs. Capacity. Fig. 3. ESP’ Utility vs. Miners’ Budget.
Fig. 4. Miners’ Utility vs. Budget. Fig. 5. Miners’ Utility vs. ESP’ Capacity.
Fig. 6. Total Demands vs. Reward. Fig. 7. ESP’ Utility vs. Reward. Fig. 8. Miners’ Utility vs. Reward.
trend with the computing service demands and utility of ESPs
in Fig. 7 and Fig. 8. This can be explained in the Eq. (5),
i.e., the probability of a miner winning the mining game Wi
consists of two part. One factor is the probability of the block
he packages becoming the first consensus, which is negatively
related to the propagation delay. The increase of the average
propagation delay causes the decrease of Wi. Thus, the miner
has to demand more computing service to compete for others.
This will in turn increase the profits of the ESPs. However,
demanding for more computing service makes the miners pay
more, which will reduce the utility. This is why the utility of
miners decreases with the increase of ESPs’ propagation delay.
Fig. 9 illustrates the relation between the precision threshold
ε versus the number of iteration rounds for convergence when
the numbers of miners vary. From Fig. 9, we see that the
iteration rounds are exponentially related to the threshold ε,
and with the increase of the number of miners, the iteration
rounds for convergence grow up as well.
V. RELATED WORK
A. Mining Game in Blockchain Network
Game theory is widely used to solve many network prob-
lems like [9–12]. A large number of studies have been
developed in mining schemes management for blockchain
networks [13, 14]. In [15], the authors designed a nonco-
operative game among the miners. The miner’s strategy is
to choose the number of transactions to be included in a
block, where solving the PoW puzzle for mining is modeled
as a Poisson process. Then, [16] modeled the mining process
as a sequential game where the miners compete for mining
reward sequentially among them. Similarly, the authors in
[17] formulated the stochastic game for modeling the mining
process, where miners decide on which blocks to extend and
whether to propagate the mined block.
B. Cloud/Edge Computing Based Blockchain
Cloud providers offer virtually unlimited computation and
storage resources on demand, allowing for the elasticity and
scalability of applications deployed. While the mobile edge
computing, which is emerging as an effective way to mitigate
the problem of long latency and the current network architec-
ture, has attracted more attention. For example, [18] proposed
a multi-leader multi-follower Stackelberg game to formulate
the two-tier offloading problem. With the development of
cloud computing and edge computing, miners prefer offloading
the PoW computations to local edge service due to the limited
computing resource on their mobile terminals [19–22]. In
[23], the authors considered a blockchain-based mining game
model with an ESP and a CSP in two situations, i.e., the ESP
295
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:57:37 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 9. Total Iteration Rounds vs. Threshold.
is connected (to the CSP) or standalone and then analyzed
the Stackelberg equilibrium in these model. While in real
scenarios, it is common for multiple ESPs to compete for
pricing and sell resources which is not considered in this work.
All previous studies did not take into account the different
propagation delays due to the geographic locations of ESPs
which led to the different probability of miners winning.
Therefore, this motivates us to take a step further to reconsider
the resource management in mobile environment.
VI. CONCLUSION
In this paper, we investigate the resource pricing and
scheduling problem in the edge-assisted blockchain mining
networks by using the multi-leader multi-follower Stackelberg
game theory. In particular, we first propose the edge computing
model where ESPs has different propagation delays according
to his geographical location. Then, we analyze the utility of
both miners and ESPs in such a model, and further discuss the
existence and the uniqueness of Stackelberg Equilibrium (SE).
Furthermore, we propose an algorithm to achieve the SE and
conduct extensive simulations to validate the convergence as
well as evaluate the network performance. In the future work,
we will further explore the the best response results without
others’ strategies and also consider the CSP’s utility in the
Stackelberg model. Moreover, the propagation delay caused
by the size of the block as well as the geographic location
factors will be comprehensively considered in the next work.
ACKNOWLEDGMENTS
The work of Sijie Huang, He Huang, Guoju Gao, Yang
Du, and Yu-E Sun was supported by the National Natural
Science Foundation of China (NSFC) under Grant 61873177,
62072322, and U20A20182. The work of Jie Wu was sup-
ported by NSF Grants CNS 1824440, CNS 1828363, CNS
1757533, CNS 1629746, CNS 1651947, and CNS 1564128.
REFERENCES
[1] “Crypto-currency market capitalizations,” https:
//coinmarketcap.com 2017.
[2] X. Han, Y. Yuan, and F. Wang, “A fair blockchain based on
proof of credit,” IEEE Transactions on Computational Social
Systems, vol. 6, no. 5, pp. 922–931, 2019.
[3] N. Bozic, G. Pujolle, and S. Secci, “A tutorial on blockchain
and applications to secure network control-planes,” in 3rd Smart
Cloud Networks Systems, 2016.
[4] G. Gao, M. Xiao, J. Wu, H. Huang, S. Wang, and G. Chen,
“Auction-based vm allocation for deadline-sensitive tasks in
distributed edge cloud,” IEEE Transactions on Services Com-
puting, pp. 1–1, 2019.
[5] L. Wan, D. Eyers, and H. Zhang, “Evaluating the impact of
network latency on the safety of blockchain transactions,” in
IEEE International Conference on Blockchain, 2019.
[6] Z. Xiong, J. Kang, D. Niyato, P. Wang, and H. V. Poor,
“Cloud/edge computing service management in blockchain
networks: Multi-leader multi-follower game-based admm for
pricing,” IEEE Transactions on Services Computing, vol. 13,
no. 2, pp. 356–367, 2020.
[7] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When
mobile blockchain meets edge computing,” IEEE Communica-
tions Magazine, vol. 56, no. 8, pp. 33–39, 2018.
[8] H. Nicolas, “The bitcoin mining game,” Ssrn Electronic Journal,
2014.
[9] H. Huang, Y.-e. Sun, K. Xing, H. Xu, X. Xu, and L. Huang,
“Truthful multi-unit double auction for spectrum allocation in
wireless communications,” in WASA. Springer, 2012.
[10] G. Gao, M. Xiao, J. Wu, L. Huang, and C. Hu, “Truthful
incentive mechanism for nondeterministic crowdsensing with
vehicles,” IEEE Transactions on Mobile Computing, vol. 17,
no. 12, pp. 2982–2997, 2018.
[11] J. Myung, Y. Chen, K. J. R. Liu, and J. Kang, “Non-cooperative
feedback control game for secondary transmitter in cognitive
radio network,” IEEE Signal Processing Letters, vol. 20, no. 6,
pp. 571–574, 2013.
[12] X. Kang and Y. Wu, “Incentive mechanism design for hetero-
geneous peer-to-peer networks: A stackelberg game approach,”
IEEE Transactions on Mobile Computing, vol. 14, no. 5, pp.
1018–1030, 2015.
[13] P. De Giovanni, “Blockchain and smart contracts in supply chain
management: A game theoretic model,” International Journal
of Production Economics, vol. 228, p. 107855, 2020.
[14] E. Altman, D. Menasché, A. Reiffers-Masson, M. Datar,
S. Dhamal, C. Touati, and R. El-Azouzi, “Blockchain compe-
tition between miners: a game theoretic perspective,” Frontiers
in Blockchain, vol. 2, p. 26, 2020.
[15] N. Houy, “The bitcoin mining game,” Available at SSRN
2407834, 2014.
[16] J. Beccuti and C. Jaag, “The bitcoin mining game: On the
optimality of honesty in proof-of-work consensus mechanism,”
Swiss Economics Working Paper 0060, 2017.
[17] A. Kiayias, E. Koutsoupias, M. Kyropoulou, and Y. Tselekounis,
“Blockchain mining games,” in ACM Conference on Economics
and Computation, 2016.
[18] J. Liu, L. Li, F. Yang, X. Liu, X. Li, X. Tang, and Z. Han,
“Minimization of offloading delay for two-tier uav with mobile
edge computing,” in Wiley. WCMC, 2019.
[19] D. C. Nguyen, P. N. Pathirana, M. Ding, and A. Seneviratne,
“Privacy-preserved task offloading in mobile blockchain with
deep reinforcement learning,” IEEE Transactions on Network
and Service Management, vol. 17, no. 4, pp. 2536–2549, 2020.
[20] S. Guo, Y. Dai, S. Guo, X. Qiu, and F. Qi, “Blockchain meets
edge computing: Stackelberg game and double auction based
task offloading for mobile blockchain,” IEEE Transactions on
Vehicular Technology, vol. 69, no. 5, pp. 5549–5561, 2020.
[21] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song,
“Joint computation offloading and content caching for wireless
blockchain networks,” in IEEE INFOCOM Workshops, 2018.
[22] M. Xiao, J. Wu, H. Huang, L. Huang, and C. Hu, “Deadline-
sensitive user recruitment for probabilistically collaborative
mobile crowdsensing,” in IEEE ICDCS, 2016.
[23] S. Jiang, X. Li, and J. Wu, “Multi-leader multi-follower stack-
elberg game in mobile blockchain mining,” IEEE Transactions
on Mobile Computing, pp. 1–1, 2020.
296
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:57:37 UTC from IEEE Xplore.  Restrictions apply.