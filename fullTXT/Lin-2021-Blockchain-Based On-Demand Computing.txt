Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Blockchain-Based On-Demand Computing
Resource Trading in IoV-Assisted Smart City
XI LIN , (Student Member, IEEE), JUN WU , (Member, IEEE), SHAHID MUMTAZ , (Senior Member, IEEE),
SAHIL GARG , (Member, IEEE), JIANHUA LI, (Member, IEEE), AND MOHSEN GUIZANI , (Fellow, IEEE)
Xi Lin, Jun Wu, and Jianhua Li are with the School of Cyber Security, Shanghai Jiao Tong University, 12474Shanghai 200240, China, and also
with Shanghai Key Laboratory of Integrated Administration Technologies for Information Security, Shanghai 200240, China
Shahid Mumtaz is with the Group of Mobile System, Instituto de Telecomunicaça~oes (IT), 1049-001, Lisbon Portugal
Sahil Garg is with the Electrical Engineering Department, �Ecole de technologie sup�erieure, Universit�e du Qu�ebec, 14845Montr�eal QCH3C 1K3, Canada
Mohsen Guizani is with the Computer Science and Engineering, Qatar University, 61780Doha 2713, Qatar
CORRESPONDING AUTHOR: J. WU (junwuhn@sjtu.edu.cn)
ABSTRACT In a smart city, Mobile Edge Computing (MEC) are generally deployed in static fashion in
base stations (BSs). While moving vehicles with advanced on-board equipment can be regarded as dynamic
computing resource transporters ignoring geographical limitations. Thus Internet of Vehicle (IoV) could
assist the smart city to achieve flexible computing resource demand response (DR) via paid sharing the idle
vehicle computing resources. Motivated by this, we propose a Peer-to-Peer (P2P) computing resource trading
system to balance computing resource spatio-temporal dynamic demands in IoV-assisted smart city. On one
hand, to guarantee transaction security and privacy-preserving in our system, we employ a consortium block-
chain approach and demonstrate the process of secure computing resource trading without involving a cen-
tralized trusted third-party. On the other hand, to encourage individual smart vehicles to participate in our
system, we construct a two-stage Stackelberg game jointly optimizing the utilities of buyers and sellers. And
we also derive the optimal computing pricing and trading amount strategies in this proposed game. Finally,
security analysis shows the security performance of our system and numerical simulations show that our strat-
egies can encourage the collaboration between the buyer and smart vehicles.
INDEX TERMS Consortium blockchain, Internet of Vehicles, mobile edge computing, smart city
I. INTRODUCTION
Recently, Mobile User Equipment (MUE) is earning more and
more popularity, and Mobile Applications (MAs), such as
augment/virtual reality, online gaming, and image/video edit-
ing are emerged and caught wide attention [1], [2]. But limited
computing capacity and constrained battery power at MUE
could not fulfill the requirements of resource-hungry MAs
[3]. In a smart city, Mobile Edge Computing (MEC) acts as a
new paradigm to supply computing resources for local users.
With the help of MEC systems, mobile users could break the
limitations of MUE and improve users’ experience.
However, traditional MEC systems integrated into Radio
Access Network (RAN) are deployed statically in base stations
(gNodeB or IoT gateway) by the network operators [4], [5].
Thus, the number of MEC nodes is limited due to additional
deployment and maintenance costs. Besides, once deployed,
MEC servers can hardly be redeployed with high inefficiency.
Moreover, we claim that this traditional statical model is also
contradicted to the spatial and temporal computing demands
of mobile users. For instance, users would work at Central
Business District (CBD) during the day (high demands), while
returning home for resting at the residential district in the even-
ing (high demands). Thus, at a specific time and place, the
deployed statical MEC node will experience an overfull num-
ber of computing demands far beyond its service capacity,
which directly reduces users’Quality of Service (QoS) for nec-
essary service queueing time [6]. A straightforward solution is
activating more servers for each MEC node to accommodate
users’ demands. While it will bring a huge financial burden to
service providers. Besides, the computing demands are not
constant over time for a certain region. This means the over-
provisioned computing resources will be wasted during off-
peak periods [7]. The other solution resorts to resource sched-
uling between multiple MECs [8], [9] or between cloud and
edge [10]. But it would be harmful to mobile users’ QoS with
the adding service time by corresponding backhaul link and
Received 12 September 2019; revised 8 January 2020; accepted 31 January 2020.
Date of publication 6 February 2020; date of current version 16 September 2021.
Digital Object Identifier 10.1109/TETC.2020.2971831
VOLUME 9, NO. 3, JULY-SEPT. 2021
2168-6750 © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE
permission. See ht_tps://www.ieee.org/publications/rights/index.html for more information. 1373
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-5303-1191
https://orcid.org/0000-0001-5303-1191
https://orcid.org/0000-0001-5303-1191
https://orcid.org/0000-0001-5303-1191
https://orcid.org/0000-0001-5303-1191
https://orcid.org/0000-0003-2483-6980
https://orcid.org/0000-0003-2483-6980
https://orcid.org/0000-0003-2483-6980
https://orcid.org/0000-0003-2483-6980
https://orcid.org/0000-0003-2483-6980
https://orcid.org/0000-0001-6364-6149
https://orcid.org/0000-0001-6364-6149
https://orcid.org/0000-0001-6364-6149
https://orcid.org/0000-0001-6364-6149
https://orcid.org/0000-0001-6364-6149
https://orcid.org/0000-0003-0229-608X
https://orcid.org/0000-0003-0229-608X
https://orcid.org/0000-0003-0229-608X
https://orcid.org/0000-0003-0229-608X
https://orcid.org/0000-0003-0229-608X
https://orcid.org/0000-0002-8972-8094
https://orcid.org/0000-0002-8972-8094
https://orcid.org/0000-0002-8972-8094
https://orcid.org/0000-0002-8972-8094
https://orcid.org/0000-0002-8972-8094
core network. Therefore, in MEC-enabled smart city, it is yet a
significant issue to explore an effective computing resource
provision scheme to meet users’ QoS not in the pattern of pure
economic expenses [6].
As the Gartner informed, a quarter billion vehicles with
advanced on-board devices will appear by 2020 [11]. And the
abundant on-board resources in vehicles are idle and wasted,
such as cache, communication, and computing under ordinary
circumstances [12]. Meanwhile, in 5G-enabled V2X (Vehi-
cle-to-Everything), smart vehicles can communicate with
MEC systems and mobile users with superior performance,
such as delay, reliability, and mobility. Specifically, in 5G,
the peak data rate for low and high mobility is about 10 Gb/s
and 1 Gb/s, respectively. And the transmission latency for
moving vehicles is shorter than around 1 ms [8]. Thus, those
smart vehicles could be conceived as complement resources
beyond the MEC service capacity without reducing users’
QoS. In addition, the moving resources will not cause over-
provisioning, for a highly positive correlation between vehicle
movements and user social behaviors. That is, in many social
hotspots, the parking or moving vehicles nearby are intuitively
proportional to the number of mobile users. For example, on
the weekend, a large number of mobile users will go to a mod-
ern shopping mall for shopping or leisure, causing congestion
of MEC services nearby [7]. While it also brings lots of
vehicles in the parking lot. Therefore, vehicles can trade their
idle computing resources in a Peer-to-Peer (P2P) manner to
meet dynamic computing demands in IoV-assisted smart city.
However, smart vehicles with surplus computing resources
may be reluctant to participate in our trading process, due to
their selfishness and distrust. They not only need the optimal
trading strategies out of their benefits as incentives, but also
need to ensure security and privacy in the trading process.
Recently, blockchain, as a decentralized P2P trading system,
causes great attention from all walks of life. Blockchain was
first proposed by Satoshi in a famous P2P e-cash system
Bitcoin [13], which has good properties, such as tamper-
resistance and transparency. In general, blockchain technol-
ogy could provide a secure and privacy-preserving trading
platform for the P2P trading market, which could also encour-
age nodes to participate in the trading process. Therefore, we
utilize the consortium blockchain technology to establish a
secure P2P computing resource trading system in IoV-assisted
smart city without involving a centralized trusted third-party.
The main contributions of this paper are summarized as
follows:
� First, we propose a novel P2P computing resource trad-
ing system to achieve dynamic computing resource
demand response (DR) in IoV-assisted smart city.
� Second, we exploit a consortium blockchain approach to
guarantee transaction security and privacy-preserving
for the P2P computing resource trading system in a
decentralized manner.
� Third, to stimulate selfish vehicles to participate in our
system, we construct a two-stage Stackelberg game,
jointly optimizing the profits of buyers and sellers.
Besides, a gradient-based search algorithm is proposed
to acquire the optimal strategies.
� Finally, we conduct security analysis and numerical
simulation. The results show the security performance
of our system and our strategies could stimulate
vehicles to trade computing resources.
The rest of this paper is organized as follows. Section II
gives an overview of the related work. Section III describes
core elements and computing resource trading process in our
system. Section IV introduces the Stackelberg game con-
struction in our system. Section V shows the security analy-
sis and numerical simulation, and Section VI presents the
conclusion and future work.
II. RELATEDWORKS
A. VEHICLE CLOUD/FOG COMPUTING IN SMART CITY
In [15], Olariu et al. proposed the concept of Vehicular Cloud
Computing (VCC), which is to gather the under-utilized on-
board computing resources. Zhang et al. employed the VCC as
a cloud service provider to expand the available resources for
task requests from smartphones in [16]. And the author in [17],
[18] proposed a new architecture called Vehicular Fog Com-
puting (VFC), employing vehicles’ computing and communi-
cation resources as the infrastructures in the smart city. So, by
employing the idle computing resources in vehicles nearby,
MEC can extend their computing capacity with smaller costs.
Motivated by this, in [7], The authors designed a Fog Vehicular
Computing (FVC) concept to augment the computing and stor-
age capacity of edge/fog computing. And an IoV-assisted com-
puting framework named vFogwas proposed in [19] for delay-
sensitive tasks in the smart city. However, security issues and
comprehensive pricing and computing resource allocation
strategies have not been well resolved in the previous works.
B. MOBILE EDGE COMPUTING IN SMART CITY
Mobile (or Multi-access) Edge Computing was first proposed
by European Telecommunications Standards Institute (ETSI)
[20]. Many previous works concentrated on optimization
algorithms for task offloading in MEC system, to optimize
energy consumption or service latency [21], [22]. Recently,
artificial intelligence has been introduced in MEC system to
realize edge intelligence. In [23], a deep Q-network (DQN)
based data offloading policy was proposed for mobile users.
In order to balance the workload among MECs in smart
city, one method called Virtual Machine (VM) migration is
adapted to achieve effective computing resource demand
response management (DRM). Gkatzikis and Koutsopoulos
[24], and Mishra et al. [25] used VM migration to move VMs
between MEC and improved the efficiency of MEC usage,
avoiding the waste of ideal computing resources. In [26], the
author proposed a task migration scheme in MEC system
based on deep Q-network, which could learn from the previ-
ous experiences. However, Jia et al. [27] offered a different
point on VM migration, that is migrations often need users to
deliver tasks to MEC not nearby, so they might be detrimental
1374 VOLUME 9, NO. 3, JULY-SEPT. 2021
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
to users’ QoS adding the time of migrations themselves and
corresponding backhaul link.
C. BLOCKCHAIN TECHNOLOGY
Recently, blockchain technology is widely utilized in P2P sys-
tems, such as vehicular ad-hoc network (VANET) and Inter-
net of Things (IoT). A blockchain-based privacy-preserving
payment scheme for Vehicle-to-Grid (V2G) is designed in
[28], [29] to realize secure energy trading. In [30], the authors
proposed an efficient and privacy-preserving carpooling sys-
tem using blockchain and vehicular fog computing. For data
sharing aspects, data security sharing and storage in vehicular
networks and IoT are also proposed in [31]. Besides, the
authors also employed a consortium blockchain to establish a
P2P market model for secure knowledge trading [32]. Com-
bined blockchain and edge computing, some works focus on
computing resource allocation for blockchain mining process.
In [33], an economic approach for edge computing resource
management for blockchain technology is proposed. Besides,
the authors also designed a social welfare maximization auc-
tion mechanism in edge computing enabled blockchain tech-
nology in [34]. However, most of the previous works ignored
the utilization of blockchain technology to implement secure
P2P computing resource trading management in IoV-assisted
smart city.
III. P2P COMPUTING RESOURCE TRADING SYSTEM
A. IOV-ASSISTED COMPUTING RESOURCE
DEMAND RESPONSE
As shown in Figure 1, in 5G Heterogeneous Network (Het-
Net) enabled smart city, we assume each region has a Macro-
Cell base station and several Small-Cell base stations, which
are responsible for intra-cell communication resource orches-
tration. And MEC servers will be statically deployed in each
Macro-Cell base station to provide cloud-like computing
services in vicinity constrained. Thus, resource-constraint
mobile users in each region could request reliable and low-
latency computing services from the localized MEC node via
5G HetNet. However, during the peak hours in each region,
the localized MEC node will be overwhelmed by the sharp
increase of incoming computing demands, a group of smart
vehicles moving or parking within the area of the local 5G
mobile network could be employed to reduce the overload
pressure of MEC node through computing resources trading.
They could share their resources with mobile users in the
local area for a period of time to perform task offloading and
processing.
In order to compensate for the limited resources during rush
hours, traditional MEC systems usually resort to the coordina-
tion of MECs or the synergy between cloud and MEC. How-
ever, it will require further offloading tasks to the cloud or
other idle MEC, which essentially goes against the meaning
of MEC performing local computing tasks. Thus, it will bring
a large transmission delay, which inevitably reduces the users’
QoS. In IoV-assisted smart city, the regions are connected by
moving vehicles with idle computing resources, as shown in
Figure 1. Meanwhile, as human-driven computing resources,
the spatio-temporal distribution of vehicle computing resour-
ces is highly correlated with population distribution (i.e., com-
puting demand distribution) in the smart city [17]. Therefore,
the computing resource demand response dynamics of all the
regions could be coupled with the mobility of the smart
vehicles, which could achieve the flexible computing resource
demand response. Motivated by the above statement, to bal-
ance computing demands for each MEC via smart vehicles,
we propose a localized computing resource trading manage-
ment system, which provides incentives to release the idle
computing resources in vehicles out of their own benefits.
B. ELEMENTS OF OUR TRADING SYSTEM
In our localized P2P computing resource trading system,
smart vehicles can share their idle computing resources with
corresponding returns, named computing coins. It is consid-
ered as a new cryptographic currency similar to BTC and
Ether in the famous Bitcoin system [13] and Ethereum sys-
tem [14], respectively. As shown in Figure 2, our trading sys-
tem consists of three major elements: trusted authority, smart
vehicles(traders) and MEC nodes.
� Trusted authority (TA): Trusted authority is responsible
for initializing our trading system. TA can generate dig-
ital certificates (Certi) and manage encryption keys
(PKi=SKi) for all the trading system participants. Simi-
lar to the Bitcoin system, the pseudonym public key
(PIDi) will also be used as the wallet address to store
the digital asset of each node (i.e., computing coin).
Once registered with the TA, TA will first assess
whether participants’ computing resources meet the
basic standards. After that, the participants could be
regarded as legitimate system members. Noted that,
this role just implements the parameter initialization,
which does not conflict with the decentralized charac-
teristic of blockchain.
� Smart vehicles: Smart vehicles in the system could play
different roles according to their computing resource
states and mobility profiles: computing resource seller,
FIGURE 1. IoV-assisted computing resource demand response.
VOLUME 9, NO. 3, JULY-SEPT. 2021 1375
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
computing resource buyer or idle node. Any local smart
vehicle could paidly share their computing resources as a
seller if it has adequate idle computing resources. It
would accept and handle the offloading tasks from buyers
utilizing the sold computing resources. Apart from
resource-constrained mobile users/devices, computing-
restricted vehicles can also become computing resource
buyers. Therefore, as shown in Figure 2, the P2P comput-
ing resource tradingmode could beVehicle-to-Pedestrian
(V2P), Vehicle-to-Device (V2D) or Vehicle-to-Vehicle
(V2V). Idle nodes will neither sell nor buy computing
resources in our trading system.
� MEC nodes: Apart from providing computing resources
for edge computing services, MEC nodes are also con-
sidered as managers of the local P2P trading system.
They could store and manage the mobility profiles and
computing resource state of smart vehicles in own areas,
the uploading computing resource transaction records
from both computing resource sellers and buyers. Mean-
while, they are also pre-selected high power nodes of the
consortium blockchain, which are responsible for main-
taining the entire consortium blockchain. Specifically,
MEC nodes act as blockchain miners and achieve the
consensus process of transaction data in each region.
Moreover, as the coordinator of the mobile network in
each region, the MEC sometimes will also act as a relay
point for task processing. That is, when the computing
resource trading parties cannot establish direct short-
distance communication (V2V, V2D or V2P) within the
local area, the computing tasks or computing results can
be sent to the MEC and then forwarded to the specified
trading objects.
As shown in Figure 2, the detail trading process is described
as follows: Computing resource traders (mobile devices and
smart vehicles) first obtain the digital certificates and encryp-
tion keys from the TA. And then they choose trading roles
based on their resource status and computing resource
demands. Participants (mobile devices and smart vehicles)
with idle resources become sellers in the market to balance
local computing resource demands. Specifically, the sellers
will provide their idle computing resources to implement
computing tasks offloading from the buyers. The specific
resource allocation and pricing strategies could refer to
Section IV. Authorized traders can send resource status to the
local MEC transaction server. TheMEC server needs to verify
their legal certificates to realize permissioned access to the
trading market. The local MEC server broadcasts legitimate
sellers’ information to the buyers, matching the supply and
demand side of the computing resource. And the buyer is
required to pay the seller corresponding rewards from their
wallets, i.e., computing coins. In specific, the buyer and the
seller will initiate a new transaction and upload the transaction
record to the local MEC server for audit. The MEC servers of
each domain collect local transaction records in a period of
time, packaging them into blocks, and build a cross-domain
consortium blockchain to validate and audit transaction data.
The detailed consortium blockchain consensus process is
shown in Section III-C. In addition, both buyers and sellers
can download the latest transaction data blocks from the local
MEC server to verify the legality of the transaction.
C. CONSORTIUM BLOCKCHAIN FOR OUR
TRADING SYSTEM
As dynamic computing resources travelling around the whole
city, the same smart vehicles will perform computing
resource trading when it is passing through different regions.
Meanwhile, the same mobile devices, as the demand side of
computing resources, will also roam throughout the whole
city. That is, in our system, P2P computing resource trading
will happen anywhere and anytime in the smart city. There-
fore, it is significant to achieve consistent unification of the
transaction data across geographic regions and time domains
in a secure and privacy-preserving way.
Blockchain technologies could realize the P2P secure and
trusted trading due to their tamper-proof and distributed con-
sensus features, which are applicable for our trading system.
Thus, we employ blockchain technologies for our system. In
specific, blockchain is mainly divided into two types: public
FIGURE 2. P2P computing resource trading management system in smart city.
1376 VOLUME 9, NO. 3, JULY-SEPT. 2021
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
chain and permissioned chain (i.e., consortium chain). For
the public chain, each node could freely join and exit the
blockchain network, and has the right to read and write the
on-chain data, such as Bitcoin and Ethereum. Besides, there
is no centralized server node in the public chain network
and it also requires achieving consensus process among all
the participating nodes. While the permissioned chain (con-
sortium chain) only requires licensed nodes to participate
in the blockchain system. And consortium chain will form
a consensus protocol among pre-selected high-capacity
nodes, such as EOS and Hyperledger. In our system, we
will employ the consortium blockchain technology for
computing resource trading. The motivations behind it are
summarized as follows:
� Authorized access: Consortium blockchain provides a
controllable access mechanism. Only authorized partic-
ipants with sufficient computing resources can partici-
pate in our computing resource market, avoiding some
low-quality computing resource sellers.
� Efficient and high throughput: Only pre-selected nodes
will implement the consensus process of the consortium
blockchain, which makes the consensus process more
efficient. It brings efficient and high throughput transac-
tions for our trading system.
� Resources limitation: Mobile devices and vehicles
(resources traders) are unwilling to waste additional
computing resources for mining (i.e., Proof-of-Work)
in public chain. Thus the consortium blockchain is
more feasible in our system.
� Semi-trusted MEC nodes: In IoV-assisted smart city,
MEC nodes are distributedly deployed and managed as
trusted infrastructure, while they are still vulnerable to
malfunctions, abnormalities and intrusions. Thus MEC
nodes show the semi-trusted features in the smart city.
Compared with mobile devices and vehicles, the MEC
nodes have more superior resources (computing, com-
munication and storage), which have the ability to
implement the consortium blockchain.
1) STRUCTURE OF OUR BLOCKCHAIN
The structure of our blockchain consists of some blocks
arranged in order, where each block contains the transaction
records (TXs) and transaction data. The TXs are generated
by participants in our system and are required to broadcast to
all the other nodes to ensure consistent unification. Each
block is connected to the prior one with a special hash digital
digest of the prior block, which guarantees data integrity and
tamper-resistance. In specific, each block involves a block
header and a block body.
The block header contains three sets of metadata data: (1)
Hash value of the prior block; (2) Target hash value, time-
stamp, nonce (solution of the hash puzzle); (3) The Merkle
root hash value of all transaction records in the block body.
The TXs are stored in the block body in the form of the Mer-
kel tree structure. It is a hash binary tree structure to ensure
efficient retrieval and TXs tamper-proof.
2) PROOF-OF-WORK (POW) CONSENSUS PROTOCOL
Multiple nodes will form a distributed network through asyn-
chronous communication to ensure a consistent consensus in
blockchain. Thus the consensus protocol plays the most impor-
tant role in the blockchain system. Proof-of-Work (PoW) is a
common consensus protocol employed in public chains, such
as Bitcoin and Ethereum systems. This protocol requires partic-
ipating nodes to solve the customized hash puzzle, which will
consume participants’ computing resources according to
Eq. (1). And the winner has the right to publish the latest block.
At the same time, the winning node (miner) will obtain the
return (i.e., the cryptographic currency) contained in the block
HashðID; timestamp; hashðpre blockÞ; nonceÞ
� targetPoW ¼ 2NPoW � 1:
(1)
All the miners have the same target, thus the miners could
only pay more computing resources to find the answer to the
hash puzzle. According to Eq. (2), the probability of solving
the hash puzzle is proportional to the ratio of the consumed
computing resources to the entire network computing power
pi PoWðfi PoW ;F�i PoWÞ ¼ fi PoWP
j fj PoW
> 0
X
j
pj PoW ¼ 1:
(2)
The PoW protocol has better security performance such as
Sybil-Resist. However, it faces a lot of resource consumption
(energy and computation) and low throughput in the P2P
trading system.
3) PBFT CONSENSUS PROTOCOL
Practical Byzantine Fault Tolerance (PBFT) consensus proto-
col reduces the complexity of the Byzantine Fault Tolerance
(BFT) protocol from exponential level to the polynomial level
oðN2Þ, which is widely used in the permissioned chain (or
consortium chain), such as EOS andHyperledger.
Compared with the PoW protocol, PBFT can achieve higher
transaction throughput at the expense of some security perfor-
mance. For instance, PBFT is hard to resist Sybil attack during
the voting and election process, which will be solved well by
the PoW protocol. The consensus process based on PBFT pro-
tocol is shown in Figure 3, which includes 5 steps. Besides, it
is worth noting that the PBFT protocol requires less than 1/3
malicious nodes in the P2P trading system according to [35].
4) POW-PBFT CONSENSUS PROTOCOL
IN OUR SYSTEM
A single consensus protocol is difficult to meet both security
performance and system throughput. So in our trading system,
we adopt a hybrid consensus protocol that combines the tradi-
tional PoW protocol with the PBFT protocol. Specifically, in
our system, we determine the node identity based on the
Proof-of-Work, which avoids the creation of multiple faulty
identities (Sybil attack) by a malicious node. And the greater
VOLUME 9, NO. 3, JULY-SEPT. 2021 1377
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
the workload of the nodes, the more rewards will be obtained
(similar to the Bitcoin). In general, we use the PoW protocol to
ensure incentives and node elections. We then use the higher
throughput consensus protocol PBFT for multi-party audit and
verification. In PBFT protocol, we could also prevent block-
chain forks, which will happen in traditional PoW protocol.
Thus, PBFT makes the block generating speed only depends
on the network transmission performance. In our system, net-
work performance could be guaranteed via the high-speed
high-bandwidth wired backhaul links between MEC nodes.
Thus, the hybrid PoW-PBFT protocol could improve the trad-
ing performance on the premise of trading security. The PoW-
PBFT based consensus algorithm in our computing resource
trading management system is shown in Algorithm 1.
Algorithm 1. PoW-PBFT based consensus algorithm in our
computing resource trading management system
1: Initialization: MEC�: the leader of PBFT required to be
verified; Followers: other MEC nodes; M: the number of
PBFT consensus nodes; VR: the verification reply from
other followers
2: Block: MECs collect and digitally sign the TXs in each
area, and then put them into a block
3: PoW: MECs find hash puzzle solution (Eqs. (1) and (2)),
the winner is selected asMEC� of PBFT
4: MEC�: Sends the TXs block and corresponding solution
to other followers
5: Followers: Verifies the hash solution, TXs and digital
certificate ofMEC� and reply the results (VR)
6: MEC�: Collects all the VR from followers
7: If: more than M�1
3 þ 1 ¼ Mþ2
3 followers have the consistent
result
8: then
9: return the VR
10: else
11: return null
12: end if
13: MEC�: Sends VR to followers for block storage and gain
the block reward
IV. STACKELBERG GAME CONSTRUCTION
FOR OPTIMAL TRADING STRATEGIES
Individual smart vehicles may be reluctant to participate in
our trading system because of security threats and rational
economic incentives. Therefore, apart from bringing the
blockchain technology to guarantee trading security, we should
also develop an optimal computing resource trading strategy
considering the utilities of both parties. In the conventional
MEC system, the computing resource buyer, such as a mobile
device, could only access one or no more than two BSs. Unlike
that, in IoV-assisted smart city, a mobile device could be sur-
rounded by multiple smart vehicles (potential computing
resource sellers). That is, one-buyer and multi-sellers resource
trading and task allocation are more in line with our system.
The trading process between the buyer and sellers could be
well simulated by a hierarchical game model, such as Stackel-
berg game, which is widely employed in the smart city. In [36],
the authors analyzed the performance of a game-based bidirec-
tional electricity market in the smart home. Besides, a four-
stage Stackelberg game with max-min fairness was also pro-
posed for energy trading in electric vehicles enabled smart city
[37]. However, comparedwith energy-related trading, the com-
puting resource trading game model in the smart city is still
vague. Therefore, motivated by previous works, we model a
one-leader and multi-followers two-stage Stackelberg game
for the interaction between the computing resource buyer and
sellers, which is shown in Figure 4.
We suppose that some vehicles might be employed by a
computing resource buyer, i.e., V ¼ f1; 2; 3; . . . ;Ng. And we
also define the State of Computing (SoC) of each computing
resource seller (vehicle) vi as SoCi ¼ f�fi; ri; ri; cig ð8i 2 VÞ,
which includes some parameters. a) �fi shows the maximal com-
puting capacity of vi; b) ri shows the computing resource
demand for vi for own use (i.e., diverse in-car applications); c)
ri shows the unit reward of computing resource for vi for their
own use; d) ci shows the unit cost of computing resource of vi.
It should be noticed that ri is larger than vi, which is more in
accordance with real life. And at stage 1, computing resource
requester (buyer) sets the discriminatory pricing RR ¼ ðR1;R2;
R3; . . . ;RNÞ for renting unit vehicles’ computing resource to
process computing tasks in unit time, and at stage 2 smart
vehicles (sellers) decide the computing resource trading
amount ff ¼ ðf1; f2; f3; . . . ; fNÞ ð0 � fi � �fiÞ to the computing
resource requester (buyer). Themain symbols and explanations
are shown in Table 1.
A. UTILITY OPTIMIZATION PROBLEM FORMULATION
The utility of computing resource requester (buyer) is defined
as the computing cost without purchasing computing resource
FIGURE 3. The process of PBFT consensus protocol.
FIGURE 4. Two-stage Stackelberg game model in game step.
1378 VOLUME 9, NO. 3, JULY-SEPT. 2021
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
minus the cost after purchasing with the purchasing pricing for
each seller. And we employ e �f ðxÞ to present the buyer dimin-
ishing return of cost (i.e., marginal income). That is, the utility
function of computing resource requester is expressed as
U ¼ ake
�k
P
�f i �
 
ake
�k
P
ð�f i�fiÞ þ
X
Rifi
!
: (3)
Where ak and �k are the two fixed coefficient of operation
utility that is distinct from each computing resource requester
j. And ak; �k > 0.
For each computing resource seller, we suppose that they
would give priority to utilizing computing resources for their
own use, which is more in line with the real world. That is,
smart vehicles need to find a trade-off between the utilization
of their own use and the benefit of external trading under the
condition of external economic incentives. Thus, similar to
[8], we define sellers satisfaction function "ð:Þ with the loga-
rithm utility function that is widely employed in network
economics. Thus the satisfaction function of vi is described
as follow:
"ð~fiÞ ¼ "ð�fi � fiÞ ¼ g i lnð�fi � fi � ri þ 1Þ: (4)
Where g i > 0 is the different satisfaction coefficient between
smart vehicles. The higher g i of the smart vehicle means that
it is more concerned about local resource utilization. Where
~fi ¼ �fi � fi shows the remaining computing resources, when
the remains is lower than ri, satisfaction function "ð�fi � fiÞ <
0. While the remains is higher than ri, "ð�fi � fiÞ > 0. While
the remains is equal to ri, "ð�fi � fiÞ ¼ 0. Thus the benefit of
smart vehicles after selling computing resources is denoted
as follow:
PiðfiÞ ¼ ðri � ciÞð~fi þ "ð~fiÞÞ þ ðRi � ciÞfi: (5)
The utility function of sellers should be the benefit after selling
PiðfiÞ minus the benefit before selling Piðf0Þ , so the utility of
vi is given as
Ui ¼ ðri � ciÞ
 
g i ln
~fi � ri þ 1
�f i � ri þ 1
� fi
!
þ ðRi � ciÞfi:
(6)
Our purpose is to achieve maximal utilities of both the buyer
and sellers in our proposed game. By taking the negation, i.e.,
U0 ¼ �U, U0
i ¼ �Ui we can transform the max problems
into the min problems that is more applicable in optimization
theory. So, the utility optimization problems (P1 and P2) at
stage 1 and stage 2, respectively, could be shown as follows:
min
R
U0ðRÞ ¼ ake
�k
P
ð~f iÞ þ
X
Rifi � ake
�k
P
�f i
s:t: Ri
0 � Ri � Ri
00 ðRi 2 RÞ
(7)
min
fi
U0
iðfiÞ ¼ � ðri � ciÞ
 
g i ln
~fi � ri þ 1
�f i � ri þ 1
� fi
!
� ðRi � ciÞfi
s:t: 0 � fi � �f i ðfi 2 f Þ
(8)
B. BACKWARD INDUCTION METHOD FOR THE
GAME EQUILIBRIUM
We utilize the backward induction method to handle our two-
stage Stackelberg game. So, at first, we need to analyze the
non-cooperative subgame among smart vehicles at stage 2.
And we define computing resource trading strategy ff ¼
ðf1; f2; f3; . . . ; fNÞ ð0 � fi � �fiÞ a Nash Equilibrium (NE) if
Uiðf �i ;F�
�iðf �i ÞÞ � Uiðfi;F�
�iðfiÞÞ, that is Ui
0ðf �i ;F�
�iðf �i ÞÞ �
Ui
0ðfi;F�
�iðfiÞÞ, where F�
�iðfiÞ shows the optimal strategies of
other sellers except for vi when the trading strategy of vi is fi.
Theorem 1. There exists a unique Nash Equilibrium strat-
egy ff � ¼ ðf �1 ; f �2 ; . . . ; f �NÞ among the non-cooperative smart
vehicles (sellers).
Proof. In accordance with Eqs. (4), Eq. (6) and Eq. (8),
Ui
0ðfiÞ is a continuous function. Thus, we derive the first-
order and secondary-order derivatives of Ui
0ðfiÞ w.r.t. fi that
are described as
@Ui
0
@fi
¼ ðri � ciÞ
 
1þ g i
�f i � fi � ri þ 1
!
� Ri þ ci (9)
@2Ui
0
@fi
2 ¼ g iðri � ciÞ
ð�f i � fi � ri þ 1Þ2
> 0: (10)
tu
Therefore, according to Eqs. (9) and (10), we could prove
the uniqueness of strategy ff ¼ ðf1; f2; f3; . . . ; fNÞ in the sub-
game. In other words, a unique NE strategy among the smart
vehicles (sellers) will be achieved. Let @Ui
0=@fi ¼ 0, then we
could obtain the optimal strategy via the Eq. (9)
f �i ¼
0 Ri < Ri
0
�f i � ri þ 1þ giðri�ciÞ
ri�Ri
Ri
0 � Ri � Ri
00
�f i Ri
00 < Ri
8<
: (11)
TABLE 1. Main terms referred in our system.
Symbol Explanations
targetPoW The hash puzzle target in the PoW protocol for miners
pi PoW The probability of finding a hash puzzle
M The number of consensus nodes in the PBFT protocol
SOCi The state of computing for smart vehicles (sellers)
�fi The maximal computing capacity of smart vehicles
ri The computing resource demand for smart vehicles
(sellers) for their own use
ri The unit reward of computing resource for smart
vehicles (sellers) for their own use
Ri The discriminatory pricing set by the computing
resource requester (buyer)
fi The computing resource trading amount decided by
smart vehicles (sellers)
U The utility of the computing resource requester (buyer)
Pi The benefit of each smart vehicle (seller)
Ui The utility of each smart vehicle (seller)
VOLUME 9, NO. 3, JULY-SEPT. 2021 1379
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
@f �i ðRiÞ
@Ri
¼ g iðri � ciÞ
ðri � RiÞ2
> 0 (12)
Ri
0 ¼ giðri�ciÞ
�f i�riþ1
þ ri f �i ¼ 0
Ri
00 ¼ giðri�ciÞ
�riþ1 þ ri f �i ¼ �f
(
: (13)
According to Eq. (12), Ri increases with f �i . And f �i is limited
to ½0;�f � , so the corresponding response strategy is presented
in a segmented form in Eq. (11). When Ri � Ri
0; f �i ¼ 0, this
makes no sense in the subgame resulting from no computing
resource trading. While Ri
00 � Ri; f �i ¼ �fi, the more pricing
should be paid by the buyer without improving the comput-
ing resource amount. Thus, these two situations can not
acquire maximal economic utility. To sum up, the best pric-
ing strategy Ri
� is situated between Ri
0 and Ri
00.
Lemma 1. For the best pricing strategy Ri
�, there should
exist the inequation: R�
i � Ri
0 � ri ð8i 2 VÞ
Proof. We could obtain the value of Ri
0 by Eq. (13).
@f �i
@Ri
> 0 according to Eq. (12), thus f �i varies monotonously
with Ri. Let f �i ¼ 0, Ri
0 ¼ giðri�ciÞ
�f i�riþ1
þ ri � ri. So we can prove
the inequation in the Lemma 1. tu
Theorem 2. There exists a unique Stackelberg Equilibrium
among the buyer and sellers in our Stackelberg game.
Proof. Substituting Eq. (11) into Eq. (7), we could get
U0ðRR; f �ðRRÞÞ is a function w.r.t. fR1;R2;R3; . . . ;RNg. We
could get its Hessian matrix H via Eqs. (15) and (16). To sim-
plify writing, we employ A to be on behalf of �kake
�k
P
ð�f i�f �i Þ .
Moreover, in accordance with Eqs. (11) and (12), we could
divide H into H1 and H2: H ¼ H1 þ H2. The extension of H,
H1, and H2 are shown as follows:
@U0
@Ri
¼ f �i � g iðri � ciÞ A� Ri
ðRi � riÞ2
½Ri
0;Ri
00� (14)
@2U0
@Ri@Rj
¼ �kg ig jAðri � ciÞðrj � cjÞ
ðRi � riÞ2ðRj � rjÞ2
(15)
@2U0
@Ri
2 ¼ �kg
2
i Aðri � ciÞ2
ðRi � riÞ4
þ 2g iðri � ciÞðA� riÞ
ðRi � riÞðRi � riÞ2
(16)
H ¼
@2U0
@R1@R1
@2U0
@R1@R2
� � � @2U0
@R1@RN
@2U0
@R2@R1
@2U0
@R2@R2
� � � @2U0
@R2@RN
..
. ..
. . .
. ..
.
@2U0
@RN@R1
@2U0
@RN@R2
� � � @2U0
@RN@RN
0
BBBBB@
1
CCCCCA:
tu
Lemma 2. H1 is a positive definite matrix in our game.
Proof. We just need to prove A� ri ¼ �kake
�k
P
ð�f i�f �i Þ�
ri � 0, then we could prove H1 is a positive definite matrix.
In accordance with Eq. (14), let @U0=@Ri ¼ 0, we could get
optimal strategy R�
i as follows:
A� R�
i ¼
f �i ðR�
i � riÞ2
g iðri � ciÞ � 0: (17)
While R�
i � ri in accordance with Lemma 1, thus we
could prove that A� ri � A� R�
i � 0. Thus H1 could be
proved as a positive definite matrix. As for H2, it is a real
symmetric matrix, thus it should be a positive definite
matrix, according to theorems in [38]. In addition, we
could prove H is a strict positive definite matrix in accor-
dance with Lemma 2, which shows the optimal strategy
RR� ¼ ðR�
1;R
�
2; . . . ;R
�
NÞ is unique. Moreover, it indicates
that function U0ðRR; f �ðRRÞÞ is a convex function, and the
problem (7) is a convex optimization problem. Mean-
while, Theorem 2 is also proved. tu
C. GRADIENT-BASED SEARCHING ALGORITHM
FOR EQUILIBRIUM
We could utilize the low complexity gradient based search-
ing algorithm to find the unique Nash Equilibrium and Stack-
elberg Equilibrium in our proposed Stackelberg game for the
unique ff � ¼ ðf �1 ; f �2 ; . . . ; f �NÞ and RR� ¼ ðR�
1;R
�
2; . . . ;R
�
NÞ. The
gradient-based iterative searching algorithm is shown as the
following Algorithm 2.
V. SECURITY ANALYSIS AND PERFORMANCE
EVALUATION
In this section, we will analyse the security performance of our
blockchain-based computing resource trading system and
H1 ¼
2giðr1�c1ÞðA�r1Þ
ðR1�r1ÞðR1�r1Þ2
0 � � � 0
0 2giðr2�c2ÞðA�r2Þ
ðR2�r2ÞðR2�r2Þ2
� � � 0
..
. ..
. . .
. ..
.
0 0 � � � 2giðrN�cN ÞðA�rN Þ
ðRN�rN ÞðRN�rN Þ2
0
BBBBBB@
1
CCCCCCA
H2 ¼
�kg1g1Aðr1�c1Þðr1�c1Þ
ðR1�r1Þ2ðR1�r1Þ2
�kg1g2Aðr1�c1Þðr2�c2Þ
ðR1�r1Þ2ðR2�r2Þ2
� � � �kg1gNAðr1�c1ÞðrN�cN Þ
ðR1�r1Þ2ðRN�rN Þ2
�kg2g1Aðr2�c2Þðr1�c1Þ
ðR2�r2Þ2ðR1�r1Þ2
�kg2g2Aðr2�c2Þðr2�c2Þ
ðR2�r2Þ2ðR2�r2Þ2
� � � �kg2gNAðr2�c2ÞðrN�cN Þ
ðR2�r2Þ2ðRN�rN Þ2
..
. ..
. . .
. ..
.
�kgNg1AðrN�cN Þðr1�c1Þ
ðRN�rN Þ2ðR1�r1Þ2
�kgNg2AðrN�cN Þðr2�c2Þ
ðRN�rN Þ2ðR2�r2Þ2
� � � �kgNgNAðrN�cN ÞðrN�cN Þ
ðRN�rN Þ2ðRN�rN Þ2
0
BBBBBB@
1
CCCCCCA
:
1380 VOLUME 9, NO. 3, JULY-SEPT. 2021
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
conduct numerical analysis to evaluate the incentive effects of
our proposed price-based two-stage Stackelberg game.
Algorithm 2. Gradient-based iterative searching algorithm to
find NE and SE
1: Input: ak , �k, and SOCi ¼ f�fi; ri; ri; cig, 8i 2 V
2: Output: ff �, RR�, U, UU ¼ ðU1;U2; . . . ;UNÞ
3: Initialization: Threshold �, step size u, n ¼ 0;
4: for Each computing resource seller vi ði 2 VÞ do
5: Calculate Ri
0 and Ri
00 based on Ri
0 ¼ giðri�ciÞ
�f i�riþ1
þ ri,
and Ri
00 ¼ giðri�ciÞ
�riþ1 þ ri;
6: end for
7: Select initial input RRn ¼ ðRn
1;R
n
2; . . . ;R
n
NÞ;
8: Repeat
9: for Each computing resource seller vi ði 2 VÞ do
10: If Ri
0 � Rn
i � Ri
00 then
11: Rn
i ¼ Rn
i , calculate fi
n according to Eq. (11):
f ni ¼ �fi � ri þ 1þ giðri�ciÞ
ri�Ri
.
12: else if Rn
i > Ri
00 then
13: Rn
i ¼ Ri
00, fin ¼ �fi
14: else if Rn
i < Ri
0 then
15: Rn
i ¼ Ri
0, fin ¼ 0
16: end for
17: The buyer updates pricing strategy by gradient-based
searching algorithm: RRnþ1 ¼ RRn � urU0ðRRn; ff �ðRRnÞÞ.
WhererU0ðRRn; ff �ðRRnÞÞ is the gradient based on
Eqs. (11) and (14);
18: n :¼ nþ 1;
19: Until
f nþ1�f nk k1
f nk k1 � �; RR� ¼ RRnþ1 ¼ RRn is acquired;
20: Calculate ff �, U, and UU ¼ ðU1;U2; . . . ;UNÞ according to
Eqs. (3) and (6);
A. SECURITY ANALYSIS OF OUR TRADING SYSTEM
For traders in our system, security performance is a funda-
mental element for trading system availability. Besides, a
secure and privacy-preserving trading system can also moti-
vate individual users to participate in. The security perfor-
mance of our trading system is achieved by the consortium
blockchain technology. And the main security features are
shown as follows.
1) ANONYMITY-BASED PRIVACY-PRESERVING
Similar to the conventional Bitcoin system, we also employ
the anonymous public key as the wallet address in our trad-
ing system. On the one hand, it is difficult to find the true
identity of smart vehicles or mobile users from the anony-
mous wallet addresses. On the other hand, each trader could
also register multiple anonymous wallet addresses to further
protect their identities and trading privacy.
2) TRADING PROCESS DECENTRALIZATION
Centralized trading systems are facing severe security threats,
such as a single-point attack. As a decentralized trading system,
our trading system utilizes consortium blockchain technology
to avoid introducing a global trusted third-party. At the same
time, all the trading nodes could conduct secure computing
resource trading locally without sending the trading request
and confirmation information to a centralized infrastructure,
such as a public cloud platform, which greatly improves the
trading efficiency of our system.
3) SYBIL-RESISTANCE CONSENSUS
In the pure PBFT protocol, the proportion of the number of
nodes is very important, and the attacker can fake the identity
to participate in the PBFT consensus process (election and
voting), i.e., the Sybil attack. We use the PoW protocol com-
monly used in the public blockchain to select the leader
node. The faster node that discovers the hash puzzle solution
is selected as the leader node of the PBFT protocol. So the
fake nodes with forged identities also need to deal with the
hash puzzle to prove the adequate workload, thus resisting
the Sybil attack. Meanwhile, in our system, the computing
power of the MEC nodes themselves makes the implement
of PoW protocol become possible.
4) TXS UNFORGEABLE AND TAMPER-PROOF
In our system, we employ the consortium blockchain technol-
ogy, so the transaction data is maintained by all the MEC
nodes in the smart city. According to the PBFT consensus pro-
tocol, as long as the total number of malicious nodes is less
than M=3, the system will maintain the normal operation. We
assume that there exists an attacker who would like to attack
our trading system and tamper with the trading data. That is,
this attacker is required to compromise at least 1/3 of the MEC
nodes. The robustness of our trading system increases with the
consensusMEC nodes. In the next 5GHetNet, the deployment
of MEC-enabled base stations will become further densified.
Therefore, we believe that the cost of compromising more
than 1/3 of MEC nodes in the smart city is too high to afford.
So our proposed system can realize TXs unforgeable and
tamper-proof.
B. PERFORMANCE EVALUATION
In the performance evaluation of our proposed Stackelberg
game, we suppose that there will exist 8 smart vehicles
employed by a buyer in our system, which also could be
extended. The maximal computing resource of each smart
vehicle vi is normalized to 1, while the computing resource
demand is distinct from each other, r ¼ ð0:1; 0:2; . . . ; 0:8Þ.
And ak is the fixed coefficient of operation utility set to (30,
35) to show the difference between the buyers. The parame-
ter �k is a fixed constant set to 0.05.
1) QUALITATIVE ANALYSIS OF OUR SCHEME
We give the qualitative analysis of our scheme in the
Figure 5. Specifically, in Figure 5(a), we investigate the util-
ity of the buyer w.r.t. different cost ci and reward ri. ci varies
from 0.1 to 0.9 to show the distinct computing costs. While
the reward ri should be larger than ci, which is more realistic
VOLUME 9, NO. 3, JULY-SEPT. 2021 1381
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
in real life. And ri is set to (1.1, 1.2, 1.3). While Figure 5(b)
studies the total utilities of all the 8 vehicles. Additionally,
Figure 5(c) presents the computing resource trading amount
of each vehicle in this case.
As shown in Figure 5(c), with a given the fixed computing
cost ci, if the reward ri is larger, computing resource trading
amount for each vehicle will decrease. It shows that vehicles
(sellers) are unwilling to trade computing resources to the
buyer in this case, for they could obtain greater benefits for their
own use rather than trading to others, which is consistent with
real life. And also the utility of the buyer is also decreasing for
less computing resource trading amount as shown in Figure 5
(a). However, those vehicles will trade more computing resour-
ces to the buyer with the increasing cost ci and fixed reward ri,
as illustrated in Figure 5(c). This means with the same reward
ri by own use, vehicles with larger cost ci are prone to trading
more computing resources to obtain more utilities from the
buyer via the given pricing RR� ¼ ðR�
1;R
�
2; . . . ;R
�
NÞ. The total
utilities of those vehicles will increase as presented in Figure 5
(b). Meanwhile, the utility of the buyer is also increasing as
shown in Figure 5(a) resulting from more resources trading
from those vehicles. In other words, all the participants would
benefit from our computing resource trading process. There-
fore, our proposed scheme could encourage the cooperation
between the buyer and sellers to reach a win-win situation,
which could be regarded as a strong incentive mechanism. In
Figure 5(c), we could also show the influence of computing
demands ri. The computing resource demands for the first
vehicle is 0.1, the second is 0.2, and so on. We find that smart
vehicles with higher computing demands ri for own use (such
as, the eighth vehicle) trade less computing resources under the
same ri and ci. That is, in order to meet their own computing
demands, more computing resources would be remained by
own use.
We also present the impact of different parameters (ak, g i)
in Figure 5(d). For the buyer, the larger ak means higher oper-
ation cost on itself, it is necessary to reduce the operation cost
by purchasing computing resources from others. Both the
buyer and sellers will benefit from the win-win trading pro-
cess. Thus, it will improve the utilities of both parties in the
FIGURE 5. Qualitative analysis in our proposed Stackelberg game.
1382 VOLUME 9, NO. 3, JULY-SEPT. 2021
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
trading system as shown in Figure 5(d). For sellers, a higher g i
means that they are more concerned about the satisfaction of
their own resource use, which results in less computing
resource trading amount. Both the buyer and sellers could not
obtain more profits from the trading system. So, the utilities of
both sides of the trading system will relatively reduce as
shown in Figure 5(d).
2) COMPARATIVE ANALYSIS OF OUR SCHEME
Apart from the qualitative analysis for our scheme, in order
to demonstrate the superiority of our optimized scheme, we
also compare it with several other schemes, similar to [21].
In this case, ðak; g iÞ ¼ ð30; 1Þ, while for each vehicle, ci and
ri is randomly selected from (0, 1). And ri is randomly
selected from [1, 2), which is higher than ci.
To show the proposed optimized pricing strategy RR� ¼
ðR�
1;R
�
2; . . . ;R
�
NÞ, we compare it with random pricing scheme
(RPS) and uniform pricing scheme (UPS), respectively. In
RPS, we randomly select the discriminatory pricing strategy
in ½R0
i;R
00
i �, while we set uniform price ðR ¼ 2:0; 2:5Þ in UPS.
And we obtain ff � according to Eq. (11). As shown in
Figure 6, the utility of the buyer in our scheme is higher than
the RPS and UPS schemes. This is because our scheme is the
optimal strategy between ½R0
i;R
00
i �, so the performance is better
than RPS. Compared to the RPS scheme, the UPS is closer to
our scheme when R ¼ 2:0. When R becomes larger ðR ¼ 2:5Þ,
the performance of UPS scheme becomes worse. This is
because a larger R will exceed the upper bound of some
vehicles R00
i , which causes a saturated trading amount. In other
words, larger pricing will be paid for computing resource trad-
ing by the buyer, while the trading amount is still limited to
seller’s largest computing resource �fi. Thus, in this case, UPS
scheme cannot motivate more computing resource trading
amount but bring higher economic costs for the buyer.
And in order to indicate the optimized trading amount
strategy ff � ¼ ðf �1 ; f �2 ; . . . ; f �NÞ, we compare it with random
amount scheme (RAS) and uniform amount scheme (UAS),
respectively. We employ the optimized pricing strategy RR� ¼
ðR�
1;R
�
2; . . . ;R
�
NÞ in RAS and UAS scheme. The trading
amount scheme is chosen in ½0; 1� randomly in RAS scheme.
And the UAS scheme sets the uniform trading amount as
ð0:4; 0:7Þ. As shown in Figure 7, neither RAS nor UAS can
exceed the performance of our proposed scheme. That is, our
computing resource trading amount scheme ff � ¼ ðf �1 ; f �2 ; . . . ;
f �NÞ could optimize the trading utilities of smart vehicles com-
pared with RAS and UAS scheme. Therefore, our trading
amount scheme could also motivate smart vehicles to partici-
pate in the P2P trading system.Moreover, as shown in Figures 6
and 7, with the increasing number of vehicles, the utilities of
the buyer and sellers also increase. This is because more
vehicles will make a contribution to computing resource trad-
ing. It also presents that our proposed scheme has good scal-
ability for more participating vehicles.
VI. CONCLUSION AND FUTURE WORK
In this paper, we have proposed an on-demand computing
resource trading management system in IoV-assisted smart
city. Besides, we employ consortium blockchain technology
in our trading system, which can guarantee transaction secu-
rity and privacy-preserving in a decentralized way. Then we
also construct a two-stage Stackelberg game to stimulate the
computing resource trading process among the buyer and sell-
ers. In addition, we have proved the existence and uniqueness
equilibrium of our game by backward induction method.
Finally, we give security analysis and conduct numerical sim-
ulations to analyze the performance of our system. In future
work, we will concentrate on the specific task allocation strat-
egy in our system to achieve long-term stability in the spatio-
temporal dynamic environment.
ACKNOWLEDGMENTS
This work was supported by the National Natural Science
Foundation of China Under Grant 61972255.
FIGURE 6. The utility of buyer in different schemes. FIGURE 7. The utilities of vehicles in different schemes.
VOLUME 9, NO. 3, JULY-SEPT. 2021 1383
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
REFERENCES
[1] T. Soyata, R. Muraleedharan, C. Funai, M. Kwon, and W. Heinzelman,
“Cloud-vision: Real-time face recognition using a mobile-cloudlet-cloud
acceleration architecture,” in Proc. IEEE Symp. Comput. Commun., 2012,
pp. 000059–000066.
[2] Y. Yang, Y. Xu, Y. Sun, Y. Dong, F. Wu, and Y. T. Zhuang, “Mining fraud-
sters and fraudulent strategies in large-scale mobile social networks,” IEEE
Trans. Knowl. Data Eng., to be published, doi: 10.1109/TKDE.2019.2924431
[3] P. Mach and Z. Becvar, “Mobile edge computing: A survey on architecture
and computation offloading,” IEEE Commun. Surveys Tuts., vol. 19, no. 3,
pp. 1628–1656, Third Quarter 2017.
[4] P. Bellavista, S. Chessa, L. Foschini, L. Gioia, and M. Girolami, “Human-
enabled edge computing: Exploiting the crowd as a dynamic extension of
mobile edge computing,” IEEE Commun. Mag., vol. 56, no. 1, pp. 145–155,
Jan. 2018.
[5] N. Abbas, Y. Zhang, A. Taherkordi, and T. Skeie, “Mobile edge computing:
A survey,” IEEE Internet Things J., vol. 5, no. 1, pp. 450–465, Feb. 2018.
[6] T. G. Rodrigues, K. Suto, H. Nishiyama, N. Kato, and K. Temma, “Cloud-
lets activation scheme for scalable mobile edge computing with transmis-
sion power control and virtual machine migration,” IEEE Trans. Comput.,
vol. 67, no. 9, pp. 1287–1300, Sep. 1, 2018.
[7] M. Sookhak et al., “Fog vehicular computing: Augmentation of fog comput-
ing using vehicular cloud computing,” IEEE Veh. Technol. Mag., vol. 12,
no. 3, pp. 55–64, Sep. 2017.
[8] R. Yu, J. Ding, X. Huang, M. Zhou, S. Gjessing, and Y. Zhang, “Optimal
resource sharing in 5G-enabled vehicular networks: Amatrix game approach,”
IEEE Trans. Veh. Technol., vol. 65, no. 10, pp. 7844–7856, Oct. 2016.
[9] X. Lyu, C. Ren, W. Ni, H. Tian, and R. P. Liu, “Distributed optimization
of collaborative regions in large-scale inhomogeneous fog computing,”
IEEE J. Sel. Areas Commun., vol. 36, no. 3, pp. 574–586, Mar. 2018.
[10] R. Chaudhary, N. Kumar, and S. Zeadally, “Network service chaining in fog
and cloud computing for the 5G environment: Data management and security
challenges,” IEEECommun. Mag., vol. 55, no. 11, pp. 114–122, Nov. 2017.
[11] X. Lin, J. Li, W. Yang, J. Wu, Z. Zong, and X. Wang, “Vehicle-to-Cloudlet:
Game-based computation demand response for mobile edge computing
through vehicles,” in Proc. IEEE 89th Veh. Technol. Conf., 2019, pp. 1–6.
[12] S. Olariu, I. Khalil, and M. Abuelela, “Taking VANET to the clouds,” Int.
J. Pervasive Comput. Commun., vol. 7, no. 1, pp. 7–21, 2011.
[13] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” 2008.
[Online]. Available: https://bitcoin.org/bitcoin.pdf
[14] G. Wood, “Ethereum: A secure decentralised generalised transaction ledger,”
EthereumProject Yellow Paper, vol. 151, 2014.
[15] S. Olariu, M. Eltoweissy, and M. Younis, “Towards autonomous vehicular
clouds,” EAI Endorsed Trans. Mobile Commun. Appl., vol. 1, no. 1, 2011,
Art. no. e2.
[16] H. Zhang, Q. Zhang, and X. Du, “Toward vehicle-assisted cloud comput-
ing for smartphones,” IEEE Trans. Veh. Technol., vol. 64, no. 12,
pp. 5610–5618, Dec. 2015.
[17] X. Hou, Y. Li, M. Chen, D. Wu, and D. Jin, “Vehicular fog computing: A
viewpoint of vehicles as the infrastructures,” IEEE Trans. Veh. Technol.,
vol. 65, no. 6, pp. 3860–3873, Jun. 2016.
[18] S. Liao, J. Li, J. Wu, W. Yang, and Z. Guan, “Fog-enabled vehicle as a ser-
vice for computing geographical migration in smart cities,” IEEE Access,
vol. 7, pp. 8726–8736, 2019.
[19] S. S. Shah, M. Ali, A. W. Malik, M. A. Khan, and S. D. Ravana, “vFog: A
vehicle-assisted computing framework for delay-sensitive applications in
smart cities,” IEEE Access, vol. 7, pp. 34900–34909, 2019.
[20] S. Kekki et al., “MEC in 5G networks,” ETSI, Sophia Antipolis, France,
White Paper, 2018.
[21] M. Chen and Y. Hao, “Task offloading for mobile edge computing in soft-
ware defined ultra-dense network,” IEEE J. Sel. Areas Commun., vol. 36,
no. 3, pp. 587–597, Mar. 2018.
[22] Y. Dai, D. Xu, S. Maharjan, and Y. Zhang, “Joint computation offloading
and user association in multi-task mobile edge computing,” IEEE Trans.
Veh. Technol., vol. 67, no. 12, pp. 12313–12325, Dec. 2018.
[23] C. Zhang, Z. Liu, B. Gu, K. Yamori, and Y. Tanaka, “A deep reinforce-
ment learning based approach for cost- and energy-aware multi-flow
mobile data offloading,” IEICE Trans. Commun., vol. E101-B, no. 7,
pp. 1625–1634, Jul. 2018.
[24] L. Gkatzikis and I. Koutsopoulos, “Migrate or not? Exploiting dynamic task
migration in mobile cloud computing systems,” IEEE Wireless Commun.,
vol. 20, no. 3, pp. 24–32, Jun. 2013.
[25] M. Mishra, A. Das, P. Kulkarni, and A. Sahoo, “Dynamic resource man-
agement using virtual machine migrations,” IEEE Commun. Mag., vol. 50,
no. 9, pp. 34–40, Sep. 2012.
[26] C. Zhang and Z. Zheng, “Task migration for mobile edge computing using
deep reinforcement learning,” Future Gener. Comput. Syst., vol. 96,
pp. 111–118, Jul. 2019.
[27] M. Jia, W. Liang, Z. Xu, and M. Huang, “Cloudlet load balancing in wireless
metropolitan networks,” in Proc. IEEE 35th Int. Conf. Comput. Commun.,
Apr. 2016, pp. 1–9.
[28] F. Gao, L. Zhu, M. Shen, K. Sharif, Z. Wan, and K. Ren, “A blockchain-
based privacy-preserving payment mechanism for vehicle-to-grid net-
works,” IEEE Netw., vol. 32, no. 6, pp. 184–192, Nov./Dec. 2018.
[29] Z. Li, J. Kang, R. Yu, D. Ye, Q. Deng, and Y. Zhang, “Consortium block-
chain for secure energy trading in industrial Internet of Things,” IEEE
Trans. Ind. Informat., vol. 14, no. 8, pp. 3690–3700, Aug. 2018.
[30] M. Li, L. Zhu, and X. Lin, “Efficient and privacy-preserving carpooling
using blockchain-assisted vehicular fog computing,” IEEE Internet Things
J., vol. 6, no. 3, pp. 4573–4584, Jun. 2019.
[31] Z. Guan et al., “ECOSECURITY: Tackling challenges related to data
exchange and security: An edge-computing-enabled secure and efficient
data exchange architecture for the energy Internet,” IEEE Consum. Elec-
tron. Mag., vol. 8, no. 2, pp. 61–65, Mar. 2019.
[32] X. Lin, J. Li, J. Wu, H. Liang, and W. Yang, “Making knowledge tradable in
edge-AI enabled IoT: A consortium blockchain-based efficient and incentive
approach,” IEEE Trans. Ind. Informat., vol. 15, no. 12, pp. 6367–6378,
Dec. 2019, doi: 10.1109/TII.2019.2917307
[33] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When mobile
blockchain meets edge computing,” IEEE Commun. Mag., vol. 56, no. 8,
pp. 33–39, Aug. 2018.
[34] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, “Social welfare maximization
auction in edge computing resource allocation for mobile blockchain,” in
Proc. IEEE Int. Conf. Commun., 2018, pp. 1–6.
[35] M. Castro, B. Liskov et al., “Practical byzantine fault tolerance,” in Proc. 3rd
Symp. Operating Syst. Des. Implementation, 1999, vol. 99, pp. 173–186.
[36] Y. Liu, S. Hu, H.Huang, R. Ranjan, A.Y. Zomaya, and L.Wang, “Game-the-
oretic market-driven smart home scheduling considering energy balancing,”
IEEE Syst. J., vol. 11, no. 2, pp. 910–921, Jun. 2017.
[37] Y. Wang, Z. Su, Q. Xu, T. Yang, and N. Zhang, “A novel charging scheme
for electric vehicles with smart communities in vehicular networks,” IEEE
Trans. Veh. Technol., vol. 68, no. 9, pp. 8487–8501, Sep. 2019.
[38] S. Boyd and L. Vandenberghe, Convex Optimization. Cambridge, U.K.:
Cambridge Univ. Press, 2004.
XI LIN (Student Member, IEEE) received the BS
degree from the School of Precision Instrument and
Opto-Electronics Engineering, Tianjin University,
Tianjin, China, in 2016. He is currently working
toward the PhD degree in the School of Electronic
Information and Electrical Engineering, Shanghai
Jiao Tong University, Shanghai, China. His research
interests include multiaccess edge computing, Inter-
net of Things, Blockchain, and so on.
JUNWU (Member, IEEE) received the PhD degree
in information and telecommunication studies from
Waseda University, Japan, in 2011. He is currently
an associate professor of School of Electronic Infor-
mation and Electrical Engineering, Shanghai Jiao
Tong University, China. He is the chair of IEEE
P21451-1-5 Standard Working Group. His research
interests include the advanced computing, communi-
cations and security techniques of SDN, ICN net-
works smart grids, Internet of Things, 5G, etc. He has
been the TPC member of more than ten international
conferences including ICC, GLOBECOM, etc. He has been a guest editor of
the IEEE Sensors Journal, the Sensors, the ICT Express. He is an associate edi-
tor of the IEEE Access.
1384 VOLUME 9, NO. 3, JULY-SEPT. 2021
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TKDE.2019.2924431
https://bitcoin.org/bitcoin.pdf
http://dx.doi.org/10.1109/TII.2019.2917307
SHAHID MUMTAZ (Senior Member, IEEE)
received the master’s and PhD degrees in electrical
and electronic engineering from the Blekinge Insti-
tute of Technology, Sweden, and the University of
Aveiro, Portugal, in 2006 and 2011, respectively. He
is an ACM distinguished speaker, EiC of IET Journal
of Quantum Communication; vice chair: Europe/
Africa Region-IEEE ComSoc: Green Communica-
tions & Computing society and vice-chair for IEEE
standard on P1932.1: Standard for Licensed/Unli-
censed Spectrum Interoperability in Wireless Mobile
Networks. He has been with the Instituto de Telecomunicaça~oes since 2011,
where he currently holds the position of auxiliary researcher and adjunct posi-
tions with several universities across the Europe-Asian Region. He is also a vis-
iting researcher at Nokia Bell Labs. He is the author of four technical books, 12
book chapters, and more than 150 technical papers in the area of mobile
communications.
SAHIL GARG (Member, IEEE) received the PhD
degree from the Thapar Institute of Engineering
and Technology, Patiala, India, in 2018. He is cur-
rently working as a postdoctoral research fellow
with the Department of Electrical Engineering,
�Ecole de technologie sup�erieure, Universit�e du
Qu�ebec, Montr�eal, Canada. He has many research
contributions in the area of machine learning,
knowledge discovery, cloud computing, Internet of
Things, and vehicular ad-hoc networks. Some of
his research findings are published in top-cited
journals such as the IEEE Transactions on Industrial Informatics, the IEEE
Transactions on Multimedia, the IEEE Transactions on Vehicular Technol-
ogy, the IEEE IoT Journal, the IEEE Communications Magazine, the IEEE
Network, the IEEE Wireless Communications, the Future Generation Com-
puting Systems, the Information Sciences, and the Computers & Electrical
Engineering including various International conferences of repute such as-
IEEE Globecom, IEEE ICC, IEEE Infocom Workshops, ACM Mobicom
Workshops, etc. He also received the IEEE ICC Best Paper Award, in 2018.
He is a member of IEEE ComSoc, IEEE Computer, IEEE IES, IEEE Smart
Grid Community, ACM, and IAENG.
JIANHUA LI (Member, IEEE) received the BS, MS,
and PhD degrees from Shanghai Jiao Tong Uni-
versity, Shanghai, China, in 1986, 1991, and 1998,
respectively. He is a professor/PhD supervisor of
School of Cyber Security, Shanghai Jiao Tong Uni-
versity, China. He was the leader of more than 30
state/province projects of China, and published more
than 300 papers. He published six books and has
about 20 patents. He made three standards and has
five software copyrights. His research interests
include information security, computer network com-
munication, etc.
MOHSEN GUIZANI (Fellow, IEEE) received the
BS and MS degrees in electrical engineering, the MS
and PhD degrees in computer engineering from Syra-
cuse University, Syracuse, New York, in 1984, 1986,
1987, and 1990, respectively. He is currently a pro-
fessor with the CSE Department, Qatar University,
Qatar. His research interests includewireless commu-
nications and mobile computing, computer networks,
security, and smart grid. He is currently the editor-in-
chief of the IEEE Network, serves on the editorial
boards of several international technical journals and
the founder and editor-in-chief of the Wireless Communications and Mobile
Computing Journal (Wiley). He was the chair of the IEEE Communications
Society Wireless Technical Committee and the chair of the TAOS technical
committee. He is a senior member of ACM.
VOLUME 9, NO. 3, JULY-SEPT. 2021 1385
Lin et al.: Blockchain-Based On-Demand Computing Resource Trading in IoV-Assisted Smart City
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:03:57 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 150
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice