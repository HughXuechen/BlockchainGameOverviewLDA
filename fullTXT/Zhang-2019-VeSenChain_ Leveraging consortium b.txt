VeSenChain: Leveraging Consortium Blockchain for Secure and Efficient Vehicular Crowdsensing
VeSenChain: Leveraging Consortium Blockchain for Secure and
Efficient Vehicular Crowdsensing
Junxing Zhang, Xumin Huang, Weiquan Ni, Maoqiang Wu, Rong Yu∗
Guangdong University of Technology, China
E-mail: junxingzhang@mail2.gdut.edu.cn, huangxu min@163.com,
weiquanni17@163.com, maoqiang.wu@vip.163.com, yurong@ieee.org
Abstract: Vehicular CrowdSensing (VCS) has become a promising paradigm to employ mobile vehicles for performing sensing
tasks in supporting location-based services and applications. In traditional VCS, a central agency is highly depended on, from
collecting task requests of requesters to employment and reward assignment to workers. However, the centralized manner causes
critical problems, such as potential privacy leakage and unexpected free-riding and false-reporting behaviors due to the lack of
recorded proofs. The challenging problems hinder the wide-spread deployment of VCS. In this paper, we utilize consortium
blockchain to elaborately design a dedicated blockchain, called by VeSenChain, to provision VCS services in a decentralized,
authentic and transparent manner. For the implementation of VeSenChain, we develop an interactive protocol to support smart
contract based operations among different entities. Stackelberg game approach is further used to formulate and solve the sensing
task scheduling problem between a requester and multiple workers, and thus enable optimal smart contract design. Numerical
results demonstrate that VeSenChain is effective and efficient for promoting VCS in network security and efficiency.
Key Words: Vehicular crowdsensing, consortium blockchain, sensing task, smart contract, Stackelberg game
1 Introduction
Vehicular CrowdSensing (VCS) has been a promising
paradigm, where a crowd of mobile vehicles with on-board
sensors, e.g., cameras and GPS devices, are recruited to ex-
ecute sensing tasks in an area of interest and thus provide
location-based services and applications [1]. Compared with
the general mobile crowdsensing systems, VCS are of ex-
tended sensing coverage and lower employment cost [2].
Owing to the advantages, VCS has been widely applied to
different scenarios, such as air quality monitoring, traffic
analysis, places characterizing, and point-of-interests recom-
mendation [3]. However, there exist security problems to be
addressed for large-scale implementation of VCS.
To deploy VCS, centralized management schemes are
generally used. But this gives rise to potential security
threats. In traditional work, there exists a central agency,
which is responsible for receiving task requests and forward-
ing them to workers with rewards. Requesters submit tasks
through the agency to the workers, and the workers upload
corresponding sensing data to the requesters [4]. Due to the
central position, the agency easily suffers from a typical s-
ingle point of failure. Moreover, once the agency is com-
promised, private information (e.g., identity information) of
requesters and workers may be revealed as the agency hold-
s necessary prior knowledge about them to enable service
orchestration and composition. Last but not least, without
recording proofs, current schemes are difficult to guard a-
gainst free-riding and false-reporting behaviors of requester-
s and workers. Reward assignment cannot be accomplished
with security guarantee [5].
For addressing the issues, we leverage blockchain to de-
sign a dedicated blockchain, called by VeSenChain, for se-
The work is supported in part by programs of NSFC under Grant nos.
61422201, 61370159, the Science and Technology Program of Guangdong
Province under Grant no. 2015B010129001, in part by Natural Science
Foundation of Guangxi Province under Grant 2018GXNSFDA281013 and
the Open Project (20170104) of SKLMCCS.
∗The corresponding author is Rong Yu.
cure and efficient VCS. Blockchain is an open, immutable
and distributed ledger to achieve the advantages of decen-
tralization, transparency and trust [6]. Blockchain has at-
tracted significant interests in industry and academia. Nowa-
days, the technology has been widely applied to, e.g., trust
management [7], energy trading [8], and proof of digital
assets [9]. At the same time, existing work has proposed
the technologies to facilitate general crowdsensing appli-
cation [4] while the authors mainly focused on smart con-
tract design. However, the performance optimization prob-
lems about sensing task scheduling are neglected in the
blockchain implementation.
In this paper, we present the proposed VeSenChain by
using consortium blockchain. Compared with the public
blockchain, consortium blockchain allows a cluster of pre-
selected nodes (i.e., miners) to take part in the consensus
process [10]. In VeSenChain, roadside units (RSUs) with
fixed locations and sufficient computing capability can be-
come such nodes, which are responsible for validating gener-
ated blocks on the VeSenChain. Activities in VCS including
task submission, task execution, task evaluation, and reward
assignment are exactly recorded and verified. Besides, smart
contract is utilized to design the interactive protocol in the
system. Smart contract is a self-executing script, which is
executed automatically and independently on each consen-
sus node in a predefined way [11]. We summarize the great
advantages of VeSenChain as follows.
• Decentralized: The elimination of any trusted third
parties ensures the reliability of service provision, and
prevents sensing data and private information from be-
ing revealed to and tampered by others.
• Authentic: All the vehicles are required to register and
acquire legitimate identities with certificates. Asym-
metric cryptography and elliptic curve digital signature
are utilized to avoid that legal entities are counterfeited.
• Transparent: Various behaviors of different network
entities are absolutely transparent and traceable. This
means that all the interactions are recorded and acces-
Proceedings of the 38th Chinese Control Conference
July 27-30, 2019, Guangzhou, China
6339
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:21:36 UTC from IEEE Xplore.  Restrictions apply. 
sible for all the miners to audit.
VeSenChain provides VCS services in a strictly decen-
tralized manner. This overcomes security threats based on
tamper-proof feature. We also further solve an optimization
problem of sensing task scheduling in VeSenChain by using
Stackelberg game. The main contributions of this paper are
summarized as follows.
• We propose VeSenChain where consortium blockchain
is exploited. RSUs are employed as miners to maintain
VeSenChain for auditing records about VCS services.
• We present an interactive protocol with basic request
and response operations for service provision in VeS-
enChain. The operations are exactly executed through
the smart contract.
• We formulate the sensing task scheduling problem as a
typical Stackelberg game, where a requester is a lead-
er to determine reward policy for works while several
workers become followers to response with their con-
tribution levels. The Stackelberg equilibrium is further
solved via a backward induction method.
The rest of this paper is organized as follows. To imple-
ment VeSenChain, we introduce a system architecture with
primary components and design an efficient interactive pro-
tocol to support smart contract based operations among them
in Section 2. Stackelberg game approach is proposed to for-
mulate and solve the sensing task scheduling problem in Sec-
tion 3. Performance evaluations are shown in Section 4. Fi-
nally, we conclude this paper in Section 5.
2 System Design
As shown in Fig. 1, we introduce system model of VeS-
enChain. There are three primary entities: requester, worker
and RSU. VeSenChain is a dedicated blockchain by using
consortium blockchain where the consensus process is per-
formed by RSUs acting as miners. With the help of RSUs, a
requester can post a request about VCS to VeSenChain. Af-
ter realizing the request, a group of workers that are willing
to perform these tasks, are employed to collect and feedback
related sensing data. Owing to task evaluation of the miner-
s, the requester acquires a sensing report from VeSenChain,
and the workers will get corresponding rewards automati-
cally according to their actual contributions. Towards se-
cure and transparent interaction environment, smart contract
is used to facilitate the above network activities.
Here, vehicles communicate directly with each other via
vehicle-to-vehicle (V2V) communications and communicate
with nearby RSUs via vehicle-to-infrastructure (V2I) com-
munications [12]. For identity authentication, all the vehi-
cles are necessary to register and acquire legitimate identi-
ties with certificates before obtaining services from VeSenC-
shain. More details of each network entity in the implemen-
tation of VeSenChain are summarized as follows.
• Requester: With the deployment of communica-
tion technologies [16], the requester posts the request
through RSUs to recruit the workers. The request is
recorded into a smart contract issued to VenSenChain.
By accessing to VenSenChain, other vehicles know the
smart contract subsequently. After that, the requester is
convenient to seek suitable workers for task execution
in VCS.
����
�����	
��
��������
������
Fig. 1: System model of VeSenChain.
• Worker: Some vehicles are interested in becoming da-
ta collectors to undertake sensing tasks and respond
to the smart contract. Being equipped with a variety
of advanced sensors, e.g., radar and high-quality cam-
eras, workers gather and provide sufficient sensing data.
Based on the individual rationality, each participating
worker determines a proper amount of sensing data to
VeSenChain by considering given incentives. After task
validation, the rewards will be allocated to them fairly.
• RSU: In VeSenChain, RSUs become the pre-selected
consensus nodes, due to fixed deployment and ade-
quate computing capability. As authentic miners, R-
SUs are permitted to validate uploaded sensing data ac-
cording to the smart contract based agreement on the
VeSenChain. In addition, they are also local router-
s, which enable communication between the requesters
and workers.
During service provision, regular communications among
the entities are extremely essential to support network func-
tionalities. But security protection should be considered for
secure communications. To this end, we design an interac-
tive protocol to support basic request and response opera-
tions among them. As illustrated in Fig. 2, there are several
steps for a requester, multiple workers, and VeSenChain in
the protocol. To initialize, all the vehicles have registered
to a trusted authority such as a government department and
transportation companies. They are given with legitimate i-
dentities with certificates. To sum up, our proposed protocol
mainly consists of four steps: task submission, task execu-
tion, task evaluation and reward assignment. More details
are described as follows.
• Step 1: Task submission. The requester would like to
outsource a sensing task to other vehicles. By recording
the request with task requirements into a smart contrac-
6340
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:21:36 UTC from IEEE Xplore.  Restrictions apply. 
��������
�����������	
��
Fig. 2: Interactive protocol among three primary entities for
VeSenChain.
t, the requester uploads the smart contract to the nearest
RSU. Then the validity and legality of the smart con-
tract will be verified by the RSU. After verification, the
RSU broadcasts the qualified smart contract to VeSen-
Chain and network-wide workers are informed.
• Step 2: Task execution. After realizing the posted s-
mart contract, some of workers reply whether to partic-
ipate in performing the sensing task with contribution
levels. Then the workers collect and upload a certain
amount of sensing data to the nearest miners within task
deadline. Once the sensing data have been uploaded,
the smart contract will be triggered. The smart contrac-
t is executed automatically and independently by each
miner in a predefined way [11]. The following process-
es, e.g., task evaluation, data aggregation, reward as-
signment are carried out in sequence autonomously.
• Step 3: Task evaluation. To evaluate the contribution-
s of workers, miners validate the sensing data whether
to satisfy the task requirements. Given the smart con-
tract, miners examine the quality of sensing data, check
task delay and so on. This means that a considerate e-
valuation function has also been embedded in the smart
contract to accomplish the operations in task evaluation.
• Step 4: Reward assignment. Finally, miners gather all
the verified sensing data together and finish task evalua-
tion to form a complete sensing report. The sensing re-
port is sent back to the requester, which assign rewards
to participating workers based on their contribution lev-
els and negotiated reward policy.
3 Stackelberg Game Formulation and Solution
To implement VCS services, we use Stackelberg game ap-
proach to formulate and solve the sensing task scheduling
problem between a requester and multiple workers in VeSen-
Chain. In this game, the requester is the leader while several
workers become followers. First, the utility functions of the
leader and followers are presented. Then we apply the back-
ward induction method to solve the Stackelberg equilibrium.
3.1 Problem Formulation
There exists a requester v posting a request about VCS to
a group of workers. A member of the group is denoted as
i, i ∈ I = {1, . . . , i, . . . , N}. Each worker is supposed to be
independent and rational to decide the contribution level in
terms of the amount of sensing data to serve the requester.
The amount of sensing data collected by worker i for the re-
quester is di,v , which is a crucial decision variable to instruct
the optimal action.
For worker i, its utility is related to acquired rewards and
energy consumption for executing the sensing task. For the
sake of fairness, rewards gotten by each worker are linear
with the proportion of di,v in the sum of di,v . For task exe-
cution, workers need to consume a certain amount of ener-
gy to sense and transmit data. Let αi represent the amount
of consumed energy to sense and upload data per unit size,
thus the overall energy consumption for worker i is αidi,v .
Besides, due to the resource-limited feature of vehicles, the
workers can not undertake too many sensing workloads. The
workloads may cause unnecessary inconvenience to hinder
individual service for worker i. Here, we formulate this neg-
ative effect as βd2i,v , and the negative factor is denoted by β.
There are similar assumptions shown in [13, 14]. To sum-
marize, the utility function of worker i is
ui,v =
di,v∑N
i=1 di,v
R− αidi,v − βd2i,v, (1)
where R is the total rewards set by the requester v for all
participating workers with valid efforts. We also consider
that the requester would like to offer actions of other workers
to each worker for enabling the game.
As for the requester, the utility function depends on the
total contributions of all the workers and the monetary cost
to employ them. We introduce a contribution factor gi to
weight the contribution of worker i to undertake the sensing
task, e.g., the prior knowledge about the accuracy of sensing
data or the significance of travelling position, as described in
[15]. Clearly, the utility gain of the requester v is linear to the
total amount of di,v with corresponding gi simultaneously,
which is denoted by
∑N
i=1 gidi,v . In short, the final utility of
the requester Uv is given by
Uv =
N∑
i=1
gidi,v −R. (2)
3.2 Analysis of Stackelberg Equilibrium
The sensing task scheduling problem between the re-
quester v and N workers is formulated as a typical Stackel-
berg game. Requester v acts as a leader while N workers are
regarded as followers. For motivating the workers to execute
sensing tasks, the requester stimulates all the workers with
reward parameter R. According to the given reward param-
eter R, the workers determine the amount of sensing data
indicated by di,v for maximizing their utilities. It is worth
noting that the requester can be replaced with a broker to de-
termine the optimal reward parameter R∗ after acquiring pri-
or knowledge about the strategy of the workers in practical
scenarios. Here, we assume that such the broker can be fully
aware of the strategies and actions of workers. With respect
to given reward R∗, each worker decides the best response
d∗i,v to maximize the payoffs.
The goal of the proposed game is to find the unique S-
tackelberg equilibrium, where both the requester and work-
ers have no motivations to change their strategies unilaterally
[14]. The Stackelberg equilibrium is defined as follows.
Definition 1: A series of decisions (d∗i,v, R
∗) can be
viewed as the Stackelberg equilibrium, when and only when
6341
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:21:36 UTC from IEEE Xplore.  Restrictions apply. 
it meets the following set of inequalities.
∀di,v, ui,v(d
∗
i,v, R
∗) ≥ ui,v(di,v, R
∗), (3)
∀R,Uv(d
∗
i,v, R
∗) ≥ Uv(d
∗
i,v, R). (4)
First, we analyse the optimal strategy of a worker. Taking
the first and second derivatives of ui,v with respect to di,v ,
we easily find that
∂ui,v
∂di,v
=
∑N
i=1 di,v − di,v
(
∑N
i=1 di,v)
2
R− αi − 2βdi,v, (5)
∂2ui,v
∂d2i,v
= −2
∑
j∈I,j �=i dj,v
∑N
i=1 di,v
(
∑N
i=1 di,v)
4
R− 2β < 0. (6)
Clearly, the utility function ui,v is concave, so the maximal
value of ui,v must exist. We take the first-order optimality
condition ∂ui,v/∂di,v = 0, and obtain
∑N
i=1 di,v − di,v
(
∑N
i=1 di,v)
2
R− αi − 2βdi,v = 0. (7)
Adding up Eqn. (7) over N workers, we further acquire
2β(
N∑
i=1
di,v)
2 +
N∑
i=1
αi
N∑
i=1
di,v − (N − 1)R = 0. (8)
We can get the final result of
∑N
i=1 di,v by solving Eqn. (8),
N∑
i=1
di,v =
√
(
∑N
i=1 αi)2 + 8β(N − 1)R−∑N
i=1 αi
4β
(9)
= ω
√
f + rR+ θ, (10)
where ω = 1/4β, r = 8β(N − 1) = 2(N − 1)/ω, θ =
−ω
∑N
i=1 αi, f = (
∑N
i=1 αi)
2. We find the best response
of di,v (denoted as d∗i,v) through substituting Eqn. (10) into
Eqn. (7),
d∗i,v =
R(ω
√
f + rR+ θ)− αi(ω
√
f + rR+ θ)
2
R+ 2β(ω
√
f + rR+ θ)
2 . (11)
d∗i,v is regarded as the optimal strategy of worker i in deter-
mining the amount of sensing data for the requester V , which
maximizes individual utility under the condition of R.
As stated above, requester v can be aware of d∗i,v via
the broker. Every sensing task has the detailed task require-
ments, e.g., accuracy, granularity, timeliness, quantity, etc.,
recorded in the smart contract. Besides, the difference values
of any two contribution factors gi can be slipped. Therefore,∑N
i=1 gidi,v is replaced with g
∑N
i=1 di,v . Furthermore, Uv
is shown as follows
Uv = g
N∑
i=1
di,v −R. (12)
Substituting Eqn. (10) into Eqn. (12), we get
Uv = g(ω
√
f + rR+ θ)−R. (13)
Likewise, we take the first and second derivatives of Uv with
respect to R, and obtain
∂Uv
∂R
=
ωrg
2
(f + rR)
− 1
2 − 1, (14)
∂2Uv
∂R2
= −ωr2g
4
(f + rR)
− 3
2 < 0. (15)
Clearly, the utility function Uv of requester v is concave,
which indicates that the maximal value of Uv exists. We get
the optimal strategy R∗ by the first-order optimality condi-
tion ∂Uv/∂R = 0 ,
ωrg
2
(f + rR)
− 1
2 = 1. (16)
Solving the equation above, we obtain the optimal strategy
R∗ as follows,
R∗ =
ω2g2r
4
− f
r
(17)
=
g2(N − 1)2 − (
∑N
i=1 αi)
2
8β(N − 1)
. (18)
Theorem 1: There exists the unique Stackelberg equilib-
rium between the requester and all participant workers in our
proposed Stackelberg game.
Proof: Based on the given reward parameter R, each
worker has its own optimal strategy d∗i,v . d∗i,v is unique be-
cause of the concave feature of the utility function ui,v ,
∂2ui,v/∂d
2
i,v < 0, as illustrated in Eqn. (6). Knowing pri-
or knowledge about all the best responses ∀i ∈ I , d∗i,v ,
the utility function of the requester is reformulated. Nex-
t, to maximize the utility of the requester, R∗ is solved in
Eqn. (18). Meanwhile, we are capable of proving that the
requester has only one best strategy under given the optimal
responses from all workers, with ∂2Uv/∂R
2 < 0. Both the
leader and followers are in full satisfaction since their deci-
sions (d∗i,v, R
∗) have maximized their utilities concurrently.
In addition, the requester and all participant workers are not
motivated to change their strategies and choose other deci-
sions, by considering the actions chosen by others. There-
fore, the unique Stackelberg equilibrium is achieved in this
game. �
4 Numerical Results
In this section, we evaluate the great performance of our
proposed scheme through Matlab simulations.
We set there exist N = 20 workers to be recruited for
VCS services. Here, the negative factor β = 0.05 is to for-
mulate the incurred inconvenience of workers caused by per-
forming sensing tasks. For performing sensing tasks, the en-
ergy consumption of each worker to sense and transfer one
unit sensing data ranges from [1, 2]. The reward parameter
given by the requester changes from [51, 100]. Next, we ob-
serve the best responses of the requester v and N workers
with respect to different model parameters, respectively. In
the proposed Stackelberg game, crucial parameters include
reward parameter R, average contribution factor g, energy
consumption parameter α, and negative factor β.
For the requester v, the utility Uv is influenced by R and
g of all the workers. As shown in Fig. 3, the utility Uv
is dynamically changed over different reward parameters R.
6342
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:21:36 UTC from IEEE Xplore.  Restrictions apply. 
50 55 60 65 70 75 80 85 90 95 100
Reward parameter R
5
6
7
8
9
10
11
U
til
ity
 o
f t
he
 re
qu
es
te
r
g = 1.95
g = 2.00
g = 2.05
Fig. 3: Comparison of the utility of the requester with respect
to different R and g.
50 55 60 65 70 75 80 85 90 95 100
Reward parameter R
20
25
30
35
40
45
50
55
60
65
70
To
ta
l a
m
ou
nt
 o
f s
en
si
ng
 d
at
a
α = 1.0,β = 0.05
α = 1.5,β = 0.05
α = 2.0,β = 0.05
Fig. 4: Comparison of the total amount of sensing data with
respect to different R and α.
Uv is increased with the improvement of g, which leads to
higher data utility of sensing data. The optimal strategy of
R (denoted as R∗) is able to be found in Fig. 3, which is
marked by the dashed. Clearly, R∗ is improved with the in-
creasing value of average contribution factor g. For workers,
a higher value of g means that they acquire high-availability
sensing data for VCS services. The requester is willing to
encourage all the workers to collect more sensing data, even
with higher monetary cost. For instance, when g is increased
from 1.95 to 2.05, the value of R∗ is increased about 30%.
As for workers, the total amount of sensing data contribut-
ing to the requester is greatly stimulated by the reward pa-
rameter R in this incentive mechanism. Fig. 4 and Fig. 5
show that the workers would like to provide more sensing da-
ta when task execution gives rise to lower energy consump-
tion and reduced negative effect, under the same condition
of R. In Fig. 4, the average value of α (denoted as α) is set
as three levels: [1.0, 1.5, 2.0]. Higher value of α means that
each worker consume more energy in task execution. Un-
der the circumstance, they prefer to decrease the amounts of
sensing data with the given same reward parameter. Taking
50 55 60 65 70 75 80 85 90 95 100
Reward parameter R
30
35
40
45
50
55
60
To
ta
l a
m
ou
nt
 o
f s
en
si
ng
 d
at
a
β = 0.01,α = 1.5
β = 0.05,α = 1.5
β = 0.09,α = 1.5
Fig. 5: Comparison of the total amount of sensing data with
respect to different R and β.
R = 75 as an example, while α increases from 1.0 to 2.0, the
total amount of sensing data is lessened from 55.7 to 32.9,
with about 41%. Similarly, in Fig. 5, with the higher value
of β, the workers also reduce their amounts of sensing data.
To summarize, the higher values of energy consumption and
negative factor have a negative impact on encouraging works
to perform sensing tasks.
Through the numerical results, we have demonstrated that
the Stackelberg game is effective and efficient for solving the
sensing task scheduling problem.
5 Conclusions
In this paper, we introduce VeSenChain wherein con-
sortium blockchain is leveraged for facilitating vehicular
crowdsensing with security and efficiency guarantee. The
traditional centralized management schemes cause critical
problems, such as potential privacy leakage, to the large-
scale implementation of VCS. To cope with the issues, we
pay attention to consortium blockchain and elaborately de-
sign VeSenChain. We put forward an effective interactive
protocol to support smart contract based operations for mu-
tual communications among different entities. Furthermore,
the Stackelberg game approach is utilized to formulate and
solve a sensing task scheduling problem between a requester
and multiple workers. Stackelberg equilibrium is solved via
theoretical analysis. Finally, numerical results demonstrate
that our proposed scheme is effective and efficient for imple-
menting VeSenChain.
References
[1] J. Ni, A. Zhang, X. Lin, and X. S. Shen, “Security, priva-
cy, and fairness in fog-based vehicular crowdsensing,” IEEE
Communications Magazine, vol. 55, no. 6, pp. 146–152,
2017.
[2] L. Gao, F. Hou, and J. Huang, “Providing long-term participa-
tion incentive in participatory sensing,” in Computer Commu-
nications (INFOCOM), 2015 IEEE Conference on, pp. 2803–
2811, IEEE, 2015.
[3] D. E. Boubiche, M. Imran, A. Maqsood, and M. Shoaib, “Mo-
bile crowd sensing–taxonomy, applications, challenges, and
solutions,” Computers in Human Behavior, 2018.
6343
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:21:36 UTC from IEEE Xplore.  Restrictions apply. 
[4] M. Li, J. Weng, A. Yang, W. Lu, Y. Zhang, L. Hou, J.-N. Li-
u, Y. Xiang, and R. H. Deng, “Crowdbc: A blockchain-based
decentralized framework for crowdsourcing,” IACR Cryptol.
ePrint Arch., Univ. California, Santa Barbara, Santa Bar-
bara, CA, USA, Tech. Rep, vol. 444, p. 2017, 2017.
[5] Y. Yuan and F.-Y. Wang, “Towards blockchain-based intel-
ligent transportation systems,” in Intelligent Transportation
Systems (ITSC), 2016 IEEE 19th International Conference
on, pp. 2663–2668, IEEE, 2016.
[6] J. Kang, R. Yu, X. Huang, M. Wu, S. Maharjan, S. Xie, and
Y. Zhang, “Blockchain for secure and efficient data sharing
in vehicular edge computing and networks,” IEEE Internet of
Things Journal, 2018.
[7] Z. Yang, K. Yang, L. Lei, K. Zheng, and V. C. Leung,
“Blockchain-based decentralized trust management in vehic-
ular networks,” IEEE Internet of Things Journal, 2018.
[8] Z. Li, J. Kang, R. Yu, D. Ye, Q. Deng, and Y. Zhang, “Consor-
tium blockchain for secure energy trading in industrial inter-
net of things,” IEEE Transactions on Industrial Informatics,
vol. 14, no. 8, pp. 3690–3700, 2018.
[9] H. R. Hasan and K. Salah, “Proof of delivery of digital assets
using blockchain and smart contracts,” IEEE Access, vol. 6,
pp. 65439–65448, 2018.
[10] Z. Zheng, S. Xie, H. Dai, X. Chen, and H. Wang, “An
overview of blockchain technology: Architecture, consensus,
and future trends,” in Big Data (BigData Congress), 2017
IEEE International Congress on, pp. 557–564, IEEE, 2017.
[11] K. Christidis and M. Devetsikiotis, “Blockchains and smart
contracts for the internet of things,” Ieee Access, vol. 4, p-
p. 2292–2303, 2016.
[12] Z. Lu, W. Liu, Q. Wang, G. Qu, and Z. Liu, “A privacy-
preserving trust model based on blockchain for vanets,” IEEE
Access, vol. 6, pp. 45655–45664, 2018.
[13] X. Wang, X. Chen, W. Wu, N. An, and L. Wang, “Cooperative
application execution in mobile cloud computing: A stackel-
berg game approach,” IEEE Communications Letters, vol. 20,
no. 5, pp. 946–949, 2016.
[14] X. Huang, R. Yu, M. Pan, and L. Shu, “Secure roadside unit
hotspot against eavesdropping based traffic analysis in edge
computing based internet of vehicles,” IEEE Access, vol. 6,
pp. 62371–62383, 2018.
[15] L. Xiao, T. Chen, C. Xie, H. Dai, and H. V. Poor, “Mobile
crowdsensing games in vehicular networks,” IEEE Transac-
tions on Vehicular Technology, vol. 67, no. 2, pp. 1535–1545,
2018.
[16] M. Chen, Y. Miao, Y. Hao, and K. Hwang, “Narrow band
internet of things,” IEEE Access, vol. 5, pp. 20557–20577,
2017.
6344
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:21:36 UTC from IEEE Xplore.  Restrictions apply.