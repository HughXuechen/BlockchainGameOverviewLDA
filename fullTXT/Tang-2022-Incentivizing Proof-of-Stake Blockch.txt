Incentivizing Proof-of-Stake Blockchain for Secured Data Collection in UAV-Assisted IoT: A Multi-Agent Reinforcement Learning Approach
3470 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Incentivizing Proof-of-Stake Blockchain for
Secured Data Collection in UAV-Assisted IoT:
A Multi-Agent Reinforcement Learning Approach
Xiao Tang , Member, IEEE, Xunqiang Lan , Graduate Student Member, IEEE, Lixin Li , Member, IEEE,
Yan Zhang , Fellow, IEEE, and Zhu Han , Fellow, IEEE
Abstract— The Internet of Things (IoT) can be conveniently
deployed while empowering various applications, where the IoT
nodes can form clusters to finish certain missions collectively.
In this paper, we propose to employ unmanned aerial vehi-
cles (UAVs) to assist the clustered IoT data collection with
blockchain-based security provisioning. In particular, the UAVs
generate candidate blocks based on the collected data, which
are then audited through a lightweight proof-of-stake consensus
mechanism within the UAV-based blockchain network. To moti-
vate efficient blockchain while reducing the operational cost,
a stake pool is constructed at the active UAV while encouraging
stake investment from other UAVs with profit sharing. The
problem is formulated to maximize the overall profit through the
blockchain system in unit time by jointly investigating the IoT
transmission, incentives through investment and profit-sharing,
and UAV deployment strategies. Then, the problem is solved
in a distributed manner while being decoupled into two layers.
The inner layer incorporates IoT transmission and incentive
design, which are tackled with large-system approximation and
one-leader-multi-follower Stackelberg game analysis, respectively.
The outer layer for UAV deployment is undertaken with a
multi-agent deep deterministic policy gradient approach. Results
show the convergence of the proposed learning process and
the UAV deployment, and also demonstrated the performance
superiority of our proposal as compared with the baselines.
Index Terms— Internet of Things, unmanned aerial vehicle,
proof-of-stake blockchain, stackelberg game, multi-agent deep
deterministic policy gradient.
Manuscript received 15 February 2022; revised 17 June 2022; accepted
30 June 2022. Date of publication 10 October 2022; date of current version
22 November 2022. This work was supported in part by the National
Natural Science Foundation of China under Grant 61901378, in part by
the National Key Research and Development Program of China under
Grant 2020YFB1807003, in part by the Open Research Fund of National
Mobile Communications Research Laboratory in Southeast University under
Grant 2022D01, and in part by NSF under Grant CNS-2107216 and Grant
CNS-2128368. (Corresponding author: Lixin Li.)
Xiao Tang is with the School of Electronics and Information, Northwestern
Polytechinical University, Xi’an 710072, China, and also with the National
Mobile Communications Research Laboratory, Southeast University, Nanjing
210096, China (e-mail: tangxiao@nwpu.edu.cn).
Xunqiang Lan and Lixin Li are with the School of Electronics and
Information, Northwestern Polytechnical University, Xi’an 710072, China
(e-mail: lanxunqiang@mail.nwpu.edu.cn; lilixin@nwpu.edu.cn).
Yan Zhang is with the Department of Informatics, University of Oslo,
0316 Oslo, Norway (e-mail: yanzhang@ieee.org).
Zhu Han is with the Department of Electrical and Computer Engineering,
University of Houston, Houston, TX 77004 USA, and also with the Depart-
ment of Computer Science and Engineering, Kyung Hee University, Seoul
446-701, South Korea (e-mail: hanzhu22@gmail.com).
Color versions of one or more figures in this article are available at
https://doi.org/10.1109/JSAC.2022.3213360.
Digital Object Identifier 10.1109/JSAC.2022.3213360
I. INTRODUCTION
INTERNET of Things (IoT) is the enabling technology
for ubiquitous sensing, computation, and communication
towards future wireless networks [1]. IoT devices usually
feature low-cost, low-power operations with massive and con-
venient deployment, thus empowering different applications
ranging from agriculture, industry, city management, and
beyond [2]. Towards this vision, the data generated by the
massive IoT nodes provides the fundamental ingredients, and
thus efficient and secure data collection and processing are
of significant importance. However, as IoT devices can be
deployed in a wide area, the data collection can be quite
challenging, and the data processing is usually beyond the
local computation capability of IoT devices [3]. Further,
the direct data feedback to the core network is difficult due to
the limited resources of IoT devices, and data transmissions
can be endangered due to various security threats [4].
With the rapid development of unmanned aerial vehicle
(UAV) technology in recent years, UAVs have been playing
an increasingly important role in wireless communications to
extend network coverage to three-dimensional space and larger
areas [5]. Attracted by the wide and flexible applications of
UAVs, we can dispatch UAVs to reach the vicinity of IoT
devices and establish communications therein without con-
ventional network infrastructures, enabling UAV-assisted IoT.
With the help of UAVs, an IoT network can be conveniently
extended to remote areas with diverse applications. The high
mobility of UAVs with flexible deployment and flying provides
a new dimension for network optimization to enhance the
performance [6]. In this regard, with UAV-assisted IoT, not
only the capital and operational expenditures can be saved, but
also the efficiency and performance of various IoT applications
can be improved.
Despite the facilitation by UAVs in IoT operations, addi-
tional strategies are required to address the security issues,
since there are various attacks that the defense may be beyond
the capability-limited IoT devices. Moreover, the distributed
nature of IoT hinders conventional centralized security man-
agement relying on network infrastructure [7]. Towards this
issue, blockchain technology has emerged as a radical solution
that provides a transparent, cryptographic, and immutable
data structure [8]. Blockchain has dispersed its application
and momentum in various areas and brought paradigm shifts
therein [9]. Meanwhile, Due to the decentralized nature of
0733-8716 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-8971-5413
https://orcid.org/0000-0003-1346-3023
https://orcid.org/0000-0002-9980-2649
https://orcid.org/0000-0002-8561-5092
https://orcid.org/0000-0002-6606-5822
TANG et al.: INCENTIVIZING PROOF-OF-STAKE BLOCKCHAIN FOR SECURED DATA COLLECTION IN UAV-ASSISTED IoT 3471
blockchain, applications of blockchain in the context of IoT
have been recognized as an effective solution for security
enhancement, identity protection, privacy, and trust manage-
ment. Supported by blockchain technology, various IoT data
can be immutably recorded and encapsulated into blocks to be
shared and synchronized among all participants in a distributed
manner [10].
Fascinated by the advantages of blockchain technology,
it is expected to provide an effective solution to the
security provisioning in UAV-assisted IoT. However, the
conventional blockchain with proof-of-work (PoW) consen-
sus is computation-intensive and storage-demanding, whose
requirements may be beyond the resource-limited IoT devices
and dynamic IoT scenarios. In this respect, an external
computing server is usually leveraged to assist blockchain
operations. Alternatively, we can resort to the proof-of-stake
(PoS) blockchain that features mild cost, sufficient scalability,
and a short delay in the IoT context. For UAV-assisted IoT
data collection, a PoS blockchain can be established at the
aerial collectors, allowing decentralized tamper-proof secu-
rity provisioning while effectively avoiding the single-point
failure under conventional centralized approaches. Further,
the flexible mobility of UAVs can be exploited as an addi-
tional dimension for optimization with joint consideration
of IoT transmissions, in order to reduce the latency in dif-
ferent stages of blockchain operations. However, an exten-
sive literature review indicates that the existing studies on
blockchain-secured IoT more often leverage external resources
for PoW or migrate PoS directly, while lacking consideration
and exploitation of the network dynamics. Therefore, there
is an urgent need for a lightweight and efficient blockchain
solution specially designed for UAV-IoT scenarios for secured
data collection.
Towards the aforementioned issues, we propose a
UAV-assisted IoT data collection scheme that is secured
through PoS blockchain with incentive design. In particular,
we consider a clustered IoT with a UAV collecting data
for each cluster. The UAVs constitute a blockchain network
with block generation from collected data and block audition
with the PoS consensus mechanism. In particular, the main
contributions can be summarized as follows:
• For the proposed PoS blockchain-secured UAV-IoT
data collection, we consider the obtained profit in the
blockchain system through block generation and stake
investment, as well as the time consumed for all stages
in blockchain operations, and formulate the problem to
maximize the system utility as the achieved profit in unit
time.
• For each UAV-IoT cluster pair, the IoT transmission
strategy is designed based on large-system analysis. Then,
to facilitate the PoS consensus with reduced operational
cost, we propose to construct a stake pool at the active
UAV, allowing stake investment and profit-sharing with
other UAVs. The incentive process is formulated within
a one-leader-multi-follower Stackelberg game framework
with equilibrium analysis.
• At the networked scale, the distributed UAV deployment
is investigated as a multi-agent Markov game, where the
instantaneous reward is determined based on the obtained
utility from the blockchain system, and the deployment
is solved through a multi-agent deep deterministic policy
gradient (MADDPG) approach.
The rest of this paper is organized as follows. In Sec. II,
we review the related works. In Sec. III, we introduce the
system model of blockchain-secured IoT data collection with
UAVs. In Sec. IV, the problem is formulated to optimize the
system utility in terms of the obtained profit in unit time.
In Sec. V, the inner problem is solved for the IoT transmission
strategy and incentive design. In Sec. VI, the outer problem
for UAV deployment is solved with the MADDPG approach.
Sec. VII provides the simulation results to demonstrate the
performance, and finally Sec. VIII concludes this paper.
II. RELATED WORKS
UAV-facilitated data collection naturally appears as a flex-
ible and effective solution for IoT applications and thus has
attracted research interests in various topics [6]. In [11], the
authors investigate the UAV trajectory and resource manage-
ment for time-sensitive IoT data collection while maximizing
the number of served IoT devices. In [12], the authors optimize
the three-dimensional deployment of multiple UAVs with net-
work interference management to minimize the uplink transmit
power of IoT devices. In [13], the authors jointly consider
the UAV trajectory, IoT transmission, and scheduling towards
energy-efficient data collection. Meanwhile, security guaran-
tee rises as a fundamental issue in UAV-IoT scenarios, and
also has been investigated in different aspects ranging from
physical-layer secrecy to upper-layer cryptography. In [14],
the authors propose to safeguard the UAV-IoT communica-
tions in the physical layer, where the secrecy performance
is investigated in the presence of randomly located eaves-
droppers with stochastic geometry-based analysis. In [15], the
authors propose an access control strategy for UAV-assisted
IoT for environment surveillance. In [16], the authors propose
a trust evaluation model for IoT data collection, where the
UAV-collected data is cleaned to avoid malicious mobile
collectors. In [17], the authors consider the UAV-assisted fed-
erated learning with the incentive-compatible contract design
to protect the privacy of IoT devices. The work above suggests
that UAVs can be exploited as flexible yet powerful roles to
improve the performance of IoT in various aspects, laying the
foundation for our proposed UAV-facilitated IoT security in
this work.
Since the decentralized operation of blockchain naturally
fits the IoT scenarios, there have emerged many recent
works that apply blockchain in various aspects in the context
of IoT. In [18], the authors employ a blockchain-enabled
distributed data storage scheme for IoT, where the mining
process is exploited for transaction verification as an alter-
native to the conventional centralized server. In [19], the
authors propose an untrusted mobile edge computing PoW
scheme for a blockchained IoT system, with fair comput-
ing resource allocation among the IoT nodes. In [20], the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
3472 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
authors propose a game-based pricing solution between the
computation-sensitive node and the cloud server reach the
consensus. However, for the aforementioned works with
the public blockchain architecture, they may not be readily
extended to UAV-assisted IoT due to the resource-demanding
PoW consensus mechanism. In contrast, lightweight solutions
requiring relatively lower computing capability and smaller
storage are propounded to fit the resource-constrained IoT
systems [21]. In [22], the authors propose a soft security
scheme for PoS Internet of vehicles based on reputation
and contract design. In [23], the authors propose a trading
model that allows UAVs to conduct blockchain operations for
IoT data in exchange for coins to get recharged. In [24],
the authors propose a UAV virtualization scheme with a
partially decentralized blockchain model to secure industry
IoT on a pay-per-use basis. In [25], the authors employ
contract theory to balance the stakes and efforts in blockchain
IoT towards the maximum profit while tackling the prac-
tical scenarios with hidden information and hidden action.
In [26], the authors apply the consortium blockchain with
delegated PoS consensus to achieve traceable and anonymous
vehicular IoT. In [27], the authors propose a drone-based
delegated PoS for IoT to enhance decentralized security with
reduced latency. These studies intend for specially designed
blockchain systems to fit the lightweight IoT network, the
effort is mostly devoted to the consensus mechanism. While
in UAV-assisted IoT, the UAV-facilitated dynamics can be
actively exploited to improve the performance of blockchain,
which is seldom addressed and thus deserves further
investigation.
Meanwhile, the rapid development of artificial intelligence
has advocated the learning-based solution in the wireless
area [28]. In [29], the authors combine deep reinforcement
learning and blockchain techniques for IoT data collection,
where the former is for the highest throughput while the
latter is for security. In [30], the authors propose to exploit
deep reinforcement learning to fog network optimization to
support IoT. In [31], the authors propose to exploit blockchain
in the deep learning operations in the IoT system to safe-
guard the learning procedure. In [32], the authors propose a
privacy-preserving framework for the cooperative Internet of
vehicles with blockchain-secured data and deep learning-based
prediction. In [33], the authors design a deep Q-network-based
sharded blockchain for massive IoT services, where the shards
improve the system scalability and the deep network finds the
optimal throughput configuration. In [34], the authors propose
to employ federated learning to protect the IoT data privacy
while the learning process is integrated into the consensus
process of permissioned blockchain. In [35], the authors
address the priced resource sharing in IoT with blockchain
tasks and UAV-based edge computing, and the formulated
stochastic game is tackled by hierarchical deep learning tech-
niques. The work above demonstrates the effectiveness of
learning techniques in wireless applications, inspiring us to
jointly exploit the conventional optimization as well as learn-
ing approaches to reach an efficient solution in the UAV-IoT
context.
III. SYSTEM MODEL
We consider an IoT network located within an area denoted
by Λ. The IoT devices form clusters for certain missions,
where the single-point IoT device can be regarded as a special
case for the clustered operations. Here, the IoT clusters may
belong to different owners and thus work independently. Con-
sider that there are J clusters, denoted as J = {1, 2, · · · , J},
and for notation simplicity, we use J−j to denote all elements
in J other than j, i.e., J \{j}. For the j-th cluster, there are Ij
IoT nodes, denoted as Ij = {1, 2, · · · , Ij}. For the i-th node
in the j-th cluster with i ∈ Ij and j ∈ J , its coordinates
within Λ are denoted by wji =
[
w
(x)
ji , w
(y)
ji
]
. To facilitate
the IoT operations, one rotary-wing UAV is deployed for each
cluster to collect the data, where the UAV also works as a
delegate for further data processing in the blockchain system.
The UAVs are assumed to hover at a fixed altitude of H and
the one for the j-th cluster is of horizontal coordinates of
vj =
[
v
(x)
j , v
(y)
j
]
. The system model is illustrated as Fig. 1.
A. IoT Transmission Model
For the considered system, the IoT nodes use single-antenna
due to their limited size and capability. Meanwhile, the UAV
has K antennas to enhance the reception. In this respect, the
uplink transmissions from the j-th cluster to the serving UAV
form an Ij × K dimensional virtual multiple-input-multiple-
output (MIMO), for which the transmission model is given
as
yj = Hjxj + zj , (1)
where xj , yj , and zj are the Ij -dimensional transmitted
signal, K-dimensional received signal, and background noise,
respectively, and Hj ∈ C
K×Ij is the virtual MIMO channel.
Based on the large-system analysis technique [36], the channel
can be further decomposed as
Hj = SjLj , (2)
where Lj is the large-scale component and Sj corresponds to
the small-scale fading. Specifically, Lj is an Ij-dimensional
diagonal matrix given as diag
([
�
1/2
ji
]
i∈Ij
)
with �ji =
d−2
ji 10−δji/10, where dji is the distance between the IoT node
and UAV as
dji =
√
‖wji − vj‖2 + H2, (3)
and
δji = 20 log10
(
4πf
c
)
+
ηLoS − ηNLoS
1 + a exp (−b(φji − a))
+ ηNLoS
(4)
is the combined effect of line-of-sight (LoS) and non-LoS
(NLoS) fading with f and c being the carrier frequency and
speed of light, respectively, ηLos, ηNLos, a, and b depending on
the propagation environment, and φji = 180
π arcsin H
dji
.
For the IoT data collection, at each time instant, there is
only one active cluster, and thus the data collection process is
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
TANG et al.: INCENTIVIZING PROOF-OF-STAKE BLOCKCHAIN FOR SECURED DATA COLLECTION IN UAV-ASSISTED IoT 3473
Fig. 1. System model.
inter-cluster interference-free. This corresponds to the practical
scenarios where IoT data is in small amounts and thus the
transmission can finish rather quickly. For node-i in cluster-j,
the transmit power is pji and limited by the power constraint
given by
0 ≤ pji ≤ pmsk
j , ∀i ∈ Ij , (5)
and ∑
i∈Ij
pji ≤ pmax
j , (6)
where pmsk
j and pmax
j are the per-node and per-cluster maximum
power, respectively. Then, the transmission rate in cluster-j is
obtained as
r(ag)
j = ESj
{
B(ag) log2 det
(
IK +
SjLjP jL
T
j ST
j
σ2
0
)}
,
(7)
where B(ag) is the bandwidth with superscript indicating air-
ground transmissions, P j = diag
(
[pji]i∈Ij
)
collects the trans-
mit power of all nodes in cluster-j, IK is a K-dimensional
identity matrix, σ2
0 is the background noise power, and the
expectation is conducted with respect to small-scale fading.
B. Blockchain Model
For the UAV-assisted IoT model, we consider that trust has
been established in each cluster between the IoT nodes and
UAV, yet they have no information regarding the legitimacy of
other clusters. Thus, to defend against the data tampering by
the potential malicious adversaries, blockchain is introduced
to process the collected IoT data to guarantee the security and
integrity in a decentralized manner. The blockchain is estab-
lished among the UAVs, where the PoS consensus mechanism
is employed with mild operational cost while being convenient
to incorporate the incentive designs. As a complete model
for PoS blockchain operations can be rather cumbersome, and
thus we concentrate on the principle components incurring the
latency to reach the consensus, including transmission, mining,
propagation, verification, and confirmation. Assume the data
amount collected from cluster-j is denoted by Ψj (in bit), the
following time components need to be consumed for the data
to be bundled, audited, and chained to the existing ledger.
1) Transmission time: Given the transmission model intro-
duced before for the IoT uplink in cluster-j, the time consumed
for Ψj bits to reach the serving UAV is
τ
(tx)
j =
Ψj
r(ag)
j
, (8)
where r
(ag)
j is obtained from (7).
2) Mining time: When the UAV finishes the data collection
from the served IoT cluster, the mining process is conducted to
generate candidate blocks with data regarded as transactions.
The time consumed in this part depends on the computation
capability of the UAV, given as
τ
(mn)
j =
Ψj
ζ
ν, (9)
for cluster-j, where ζ is the computation rate (in bit/s), and
ν is the coefficient of computation complexity for mining.
Note that the data size for mining is slightly larger than
Ψj considering the required block header. But for a general
case, the IoT data (transactions) dominates the overall size
and we can safely use Ψj as the mining data size. This
assumption is also applied for propagation and verification
time modelings. As we adopt the PoS consensus mechanism,
the mining complexity can be largely alleviated.
3) Time for propagation and verification: For the mined
blocks by the current UAV, they will be propagated to other
UAVs in the blockchain network for verification and only
the verified blocks can be chained. In this process, the
mining UAV broadcasts the candidate blocks, for which the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
3474 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
propagation delay is given as
τ
(pv)
j =
Ψj
min
j,k∈J
r
(aa)
j,k
, (10)
where r
(aa)
j,k is the transmission rate from UAV-j to UAV-k with
a superscript indicating air-to-air links. Evidently, the propaga-
tion delay depends on the inter-UAV communications with the
lowest transmission rate. While the inter-UAV communication
experiences LoS air-to-air propagation model and thus the rate
from UAV-j to UAV-k can be defined as
r
(aa)
j,k = B(aa) log2
(
1 +
KPj ‖vj − vk‖−2
σ2
0
)
, (11)
where B(aa) is the bandwidth, Pj is the transmit power of
UAV-j, and K arises as the array gain at the receiving UAV
with K antennas. Here, the interference is not explicitly incor-
porated regarding the inter-UAV communications due to the
synchronized blockchain operations among the UAVs. Then,
the propagated candidate block is verified at other UAVs.
As the verification corresponds to a certain hash calculation
that can be done rather quickly, the time consumed can be
neglected as compared with propagation time, and thus is not
explicitly considered here.
4) Time for confirmation and chaining: When the block
verification is finished, the results are fed back to confirm
that the block is valid through the air-to-air links among the
UAVs. The candidate block is then chained into the current
ledger and the local version of the ledger at all client updates
correspondingly. This process includes some lightweight trans-
mission and computation, the time required is denoted by τ
(cc)
j ,
which can be assumed to be a constant.
IV. PROBLEM FORMULATION AND DECOMPOSITION
Given the basic models regarding the IoT data transmission
and blockchain operation, we utilize an efficient PoS procedure
with incentive design. According to the PoS procedure, in each
round there will be a leader, say UAV-k ∈ J , to conduct
the blockchain operation for the IoT data in cluster-j that is
currently active. In this process, an amount of Ψj IoT data
induces an overall payment of Φ + ρΨj (in coin), where Φ is
the fixed payment for each valid block and ρ is the coefficient
(in coin/bit) for transactions fees. Meanwhile, the blockchain
operation with respect to the data in cluster-j incurs a cost,
denoted by Ωj,k, when the leader processing the blockchain
is UAV-k. Note that the IoT data originating from cluster-j
can be bundled into blocks by any UAV, yet there require
additional procedures for UAV-j as the collector to relay the
data to UAV-k for blockchaining, and thus we assume that
Ωj,j < Ωj,k for all k ∈ J−j .
Moreover, based on the principle of PoS, the probability for
a UAV as the stakeholder to generate a block (i.e., mining),
is proportional to its amount of stakes. The stake can be the
coin deposit allocated by the network operators to facilitate the
blockchain operations. Here, we denote the available stake at
UAV-j as Υj , j ∈ J . In accordance with the aforementioned
payment and cost models, we encourage the UAV serving the
currently active cluster to conduct the mining process, which
helps reduce the system cost. To this end, we propose to
construct a stake pool at the currently active UAV. Without
loss of generality, we assume cluster-j is active, and then a
pool is constructed at UAV-j. Meanwhile, other UAVs also
contribute to the pool with part of their stakes. We assume
that the ratio of the invested stake at UAV-k is αj,k ∈ [0, 1],
k ∈ J−j , then the probability for the pool, i.e., UAV-j to
generate the block is
qj,j =
Υj +
∑
k∈J−j
αj,kΥk∑
j∈J
Υj
, (12)
where UAV-j naturally devotes all its stakes in the pool. Then,
the probability of other UAVs being the miner is
qj,k =
(1− αj,k)Υk∑
j∈J
Υj
, ∀k ∈ J−j . (13)
In accordance with the pool construction at UAV-j, the
investment of other UAVs should be rewarded to incentivize
their cooperation. In particular, UAV-j splits a portion of its
potential payment for block generation to be shared with its
investors, where the returned payment is proportional to the
investment. Denote the portion of the payment to reward the
investors as βj ∈ [0, 1] at UAV-j. If the pool successfully
works as the miner receiving a payment of Φ+ρΨj , it obtains a
profit of (1− βj) (Φ + ρΨj)−Ωj,j , corresponding to the pre-
served payment while taking out the cost. Meanwhile, UAV-k
in ∈ J−j obtains a profit of αj,kΥk�
k∈J−j
αj,kΥk
βj (Φ + ρΨj),
corresponding to the investment-proportional payment at no
cost. Also, there are also possibilities that UAV-k in ∈ J−j
creates a candidate block. Then, this UAV obtains a profit
of (Φ + ρΨj) − Ωj,k, earning all the payments with the
corresponding cost. Therefore, the expected profit for the pool,
i.e., UAV-j, is given as
Θj,j =
Υj +
∑
k∈J−j
αj,kΥk∑
j∈J
Υj
[(1− βj) (Φ + ρΨj)− Ωj,j ] .
(14)
Also, the expected profit for other UAVs is
Θj,k =
(1− αj,k)Υk∑
j∈J
Υj
[(Φ + ρΨj)− Ωj,k]
+
Υj +
∑
k∈J−j
αj,kΥk∑
j∈J
Υj
αj,kΥk∑
k∈J−j
αj,kΥk
βj (Φ + ρΨj) ,
∀k ∈ J−j . (15)
Note that the above discussions are based on the assumption
that the IoT data originates from cluster-j, and the formulation
can be readily extended to the cases when other clusters are
active.
Based on the modeling of the profit gaining and time
consumed over the blockchain operations with respect to IoT
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
TANG et al.: INCENTIVIZING PROOF-OF-STAKE BLOCKCHAIN FOR SECURED DATA COLLECTION IN UAV-ASSISTED IoT 3475
data, we can then define the utility achieved by processing the
data from cluster-j as
Uj =
Θj,j +
∑
k∈J−j
Θj,k
τ (tx)
j + τ (mn)
j + τ (pv)
j + τ (cc)
j
, (16)
where the profit of all parties including the pool and other
followers is incorporated. With the proposed incentive mech-
anism, the profit is obtained not only from mining as a
conventional blockchain but also from stake investment. In this
regard, the incentive design introduces an implicit altruis-
tic effect in the blockchain system. Then, the problem is
formulated to optimize the overall system utility by jointly
considering the IoT transmissions, stake investment, profit-
sharing, and the UAV deployment, specified as
max
{vj ,pj ,βj ,αj}
j∈J
U =
∑
j∈J
Uj (17a)
s.t. vj ∈ Λ, ∀j ∈ J , (17b)
(5), (6), ∀j ∈ J , (17c)
βj ∈ [0, 1], ∀j ∈ J , (17d)
αj,k ∈ [0, 1], ∀j ∈ J , ∀k ∈ J−j , (17e)
where pj = [pji]i∈Ij
is the power vector in cluster-j and
αj = [αj,k]k∈J−j
is the vector of stake investment portion.
For the formulated problem, we can see that the considered
factors affect system performance in a coupled and compli-
cated manner. Particularly, the IoT transmissions constitute
the basic ingredient for block generation. The incentives
with investment and profit-sharing affect the achieved profit.
The UAV deployment and network topology influence the
time for blockchain operations such as data transmission and
block propagation. Then, it can be rather cumbersome to
tackle the problem directly. Moreover, as the optimization
in (17a) appears in a centralized manner, the corresponding
algorithm design violates the decentralized operations of the
UAV-assisted IoT and blockchain system. Therefore, we will
then decompose the problem to facilitate the distributed
solution.
Revisit the formulated problem to maximize the sum utility
within a distributed perspective, we first allow each UAV-IoT
cluster to determine their own strategies. Then, by analyz-
ing the relationship between the optimization variables and
the objective, we have the following observations. The IoT
transmission and incentive strategies can be investigated at
each UAV-IoT-pair basis since transmissions occur within the
current pair while the incentive needs to be designed with
respect to the pool constructed for the current pair. In contrast,
the UAV deployment affects the performance in the networked
scale, as the movement of one UAV not only affects the
IoT data transmission in its own cluster but also the block
propagation to other clusters. Therefore, we tackle the problem
in a distributed manner to allow individual and independent
decision-making at each UAV-IoT cluster pair. Further, the
problem at each UAV-IoT cluster pair is decomposed into two
layers where the outer layer solves for the UAV deployment
while the inner layer for IoT transmissions and incentive
designs. The inner problem can be solved independently for
each UAV-IoT cluster pair where the transmission optimization
corresponds to the minimization of the denominator of the util-
ity function in (16), while the incentive design maximizes the
nominator. The outer problem is solved through a multi-agent
reinforcement learning process for individual optimality at
each UAV. Correspondingly, the problem in (17a) is then
solved in a decentralized manner allowing the individual
decision-making at each party to facilitate the implementation.
V. INNER PROBLEM SOLVING FOR IOT TRANSMISSION
AND INCENTIVE DESIGN
Based on the problem decomposition introduced before,
we consider the inner problem at each UAV-IoT cluster basis
to solve for the transmission and incentive strategy, with fixed
UAV deployment at the outer layer. The inner problem intends
to maximize the individual utility function in (16), where the
transmission strategy minimizes the denominator of the utility
and the incentive design tackles the nominator. Thus, these
two subproblems can be addressed independently as detailed
below.
A. IoT Transmission Strategy
In accordance with the problem in (17a), the maximum IoT
transmission rate corresponds to the minimized transmission
time in (8), leading to the maximization of the objective
function in (17a). As has been noted, the transmission strategy
is independently determined at each IoT cluster, then the
problem is formulated to maximize the rate in (7) with respect
to the power constraint in (5) and (6). For this problem, we first
tackle the expectation operation with large-system analysis
technique [36] and approximate the transmission rate as
r(ag)
j = B(ag)
⎡
⎣∑
i∈Ij
log2(1 +
1
σ2
0
K�j,ipjiω
−1
j )
+ K log2(ωj)−K log2 e(1− ω−1
j )
]
, (18)
where ωj is the newly introduced auxiliary variable satisfying
ωj = 1 +
Ij∑
i=1
�j,ipji
σ2
0 + K�j,ipjiω
−1
j
. (19)
Then, the IoT transmission problem becomes
max
pj ,ωj
r(ag)
j (20a)
s.t. (5), (6), and (19), (20b)
for cluster-j ∈ J . For this problem, we can adopt alternating
optimization to tackle the power optimization and auxiliaries
in an iterative manner. In particular, with fixed auxiliaries, the
power allocation is evidently a convex optimization and thus
we can leverage the Lagrange multiplier method to obtain that
p�
ji =
(
μj − ωjσ
2
0
K�ji
)pmsk
j
0
(21)
with ( · )b
a indicating min(max(·, a), b) and μj being the mul-
tiplier satisfying the equality
∑
i∈Ij
p�
ji = pmax
j . Meanwhile,
the auxiliaries optimization with fixed power allocation can be
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
3476 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
obtained through the fixed-point iteration in the form of (19).
The geometry programming can be also exploited to solve
the auxiliary optimization, as shown in [13]. Finally, the
convergence of the alternating optimization processes between
power allocation and auxiliaries induces the optimal IoT
transmission strategy.
B. Incentive Design
The incentive design incorporates stake investment and
profit-sharing optimization to achieve the highest profit for
UAVs in the blockchain network, which is consistent with
the objective function in (17a). However, for the practical
blockchain system operation, all the concerned parties work
in a decentralized manner without explicit outsider coordi-
nation. Correspondingly, we intend to design the incentive
mechanism from a distributed perspective through game-
based analysis, with each concerned party maximizing its own
profit.
Without loss of generality, we consider the IoT data to be
blockchained originate from cluster-j. In accordance with the
previous discussions to reduce the system operation overhead,
we encourage UAV-j as the currently active data collector
working as the miner to generate candidate blocks based on
its collected data. To this end, UAV-j constructs a stake pool
that allows other UAVs to invest their stakes, while the stake
pool shares its obtained payment in return for the investment.
In this regard, the pool determines the portion of payment
sharing while other UAVs decide their ratio of investment,
which leads to a one-leader multi-follower Stackelberg game
formulation detailed below. Specifically, the problem at the
leader can be written as
max
βj
Θj,j (βj ; αj) (22a)
s.t. βj ∈ [0, 1], (22b)
where αj = [αj,k]k∈J−j
is the vector of followers’ decision
variable, and Θj,j is given in (14). Here we explicitly indicate
the arguments to show the interplay between different partici-
pants in the game. For the followers in the game, the problem
is specified as
max
αj,k
Θj,k (αj,k; αj,−k, βj) (23a)
s.t. αj,k ∈ [0, 1], (23b)
for k ∈ J−j , where Θj,k is given in (15) and αj,−k =
[αj,k′ ]k′∈J−j\{k} corresponds to all rest followers other than
follower-k.
Then, the problem in (22a) at the leader and problems
in (23a) at all followers constitute the Stackelberg game,
denoted by G, which incorporates one leader and J−1 follow-
ers. In the game context, the problem in (22a) and problems
in (23a) are coupled, and thus we cannot directly solve them
independently. In particular, for a Stackelberg game, the leader
takes action first, followed by the action of the followers,
and the solution to the game is defined by the Stackelberg
equilibrium. In accordance with the hierarchical structure of
decision makings in the Stackelberg game, the equilibrium is
also layered. Denote the equilibrium as (β�
j , α�
j ), and then it
satisfies the following conditions
Θj,k
(
α�
j,k; α�
j,−k, β�
j
) ≥ Θj,k
(
αj,k; α�
j,−k, β�
j
)
,
∀αj,k ∈ [0, 1], ∀k ∈ J−j , (24)
and
Θj,j
(
β�
j ; α�
j
) ≥ Θj,j
(
βj ; α�
j
)
, (25)
which denote the lower equilibrium for the followers and
upper equilibrium for the leader, respectively. Then the lower
equilibrium in (24) indicates that no follower will unilaterally
deviate from the equilibrium strategy given the leader’s action,
while the upper equilibrium in (25) implies that the equilib-
rium strategy at the leader is optimal on condition that the
lower equilibrium is also achieved among the followers.
We then find the Stackelberg equilibrium to determine
the investment and payment sharing. For Stackelberg games,
we employ the backward induction approach to achieve the
Stackelberg equilibrium. In this regard, we first analyze the
lower equilibrium among the followers while assuming a fixed
strategy at the leader, i.e., to find the individually optimal
investment with respect to fixed profit sharing. Correspond-
ingly, the followers compete to maximize their own profit
function, inducing a generic Nash game model given as
Ḡj(βj) =
{J−j , [0, 1]J−1, {Θj,k}k∈J−j
}
, (26)
where subscript-j specifies the current leader as UAV-j, and
this game is parameterized by βj as the leader’s strategy. For
the Nash game Ḡj , we can easily verify that it is a convex
game that the strategy space is compact and convex, and the
profit function in (15) is continuous against the strategies of
all followers and is convex with respect to its own strategy.
The proof is omitted here for space limitation while interested
readers can refer to the second-order derivative and the con-
clusion readily follows. Based on the study in [37], we know
that a convex game must admit a Nash equilibrium. To derive
the equilibrium, we resort to the best-response strategy, i.e.,
the optimal strategy of one player on the condition of fixed
strategies of others. Given the convexity of the profit function,
by nulling the first-order derivative, we can derive the best
response for UAV-k ∈ J−j given as (27), shown at the bottom
of the next page, where ζj and ξj,k defined as
ζj =
Υj∑
j∈J
Υj
βj (Φ + ρΨj) , (28)
and
ξj,k =
1∑
j∈J
Υj
[(1− βj) (Φ + ρΨj)− Ωj,k] , (29)
are constants obtained by rearranging the terms in the profit
functions to simplify the notation.
With the best-response strategy derived in (27), specifying
the optimal strategy for the current followers with respect to
the strategies of all other followers, we can then achieve the
lower equilibrium through an iterative strategy update process
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
TANG et al.: INCENTIVIZING PROOF-OF-STAKE BLOCKCHAIN FOR SECURED DATA COLLECTION IN UAV-ASSISTED IoT 3477
among all followers. However, by revisiting the best-response
strategy, we can rearrange the terms in (27) as
ζj
∑
k′∈J−j\{k}
αj,k′Υk′
( ∑
k′∈J−j
αj,k′Υk′
)2 = ξj,k. (30)
By further summing up the equation in (30) overall followers,
we arrive at
ζj (J − 2)∑
k′∈J−j
ξj,k′
=
∑
k′∈J−j
αj,k′Υk′ . (31)
The equality above has an implicit assumption that all follow-
ers have positive investment at the lower equilibrium. In the
case that certain followers are of no investment, then they
are regarded as inactive and thus excluded from the competi-
tion. Accordingly, the number of remaining active users then
replaces the number of followers during the derivation. Then,
the equality above is substituted into the equilibrium condition
in (27), and we obtain the following equilibrium
α�
j,k =
1
Υk
ζj (J − 2)∑
k′∈J−j
ξj,k′
⎛
⎜⎝1− ξj,k (J − 2)∑
k′∈J−j
ξj,k′
⎞
⎟⎠ , (32)
for k ∈ J−j , which is further extended as (33), shown at the
bottom of the page. Finally, the lower equilibrium in (33) is in
closed-form and can be calculated directly without iterations.
In this regard, comparing the original equilibrium in (27) as
individual best response requiring iterations, the results in (32)
are achieved due to the special structure of the lower problem
and facilitate the calculation of the lower equilibrium.
With the lower equilibrium obtained in (33), we can then
substitute it into the leader’s utility function in (14), whose
maximization induces the leader’s optimal strategy while
incorporating the lower equilibrium into consideration. We can
adopt one-dimensional search to find the upper equilibrium
for the leader, denoted by β�
j . We then substitute the leader’s
strategy β�
j into (33), leading to the actual lower equilibrium,
denoted by α�
j
(
β�
j
)
. Finally, the strategy set
[
β�
j , α�
j
(
β�
j
)]
constitutes the Stackelberg equilibrium of the incentive game,
where β�
j specifies the portion of profit sharing at UAV-j
(the stake pool), and α�
j
(
β�
j
)
corresponds to the portion
of invested stakes at other UAVs. As a further note, based
on the deviations above, we can see that the Stackelberg
equilibrium uniquely exists, as the leader’s problem in (22a)
admits the optimum, while the followers’ strategy is then
uniquely determined based on the closed-form expression
specified in (33).
VI. OUTER PROBLEM SOLVING FOR UAV DEPLOYMENT
In this section, we consider the outer problem for
UAV deployment. Similarly, we adopt the distributed
decision-making at the UAVs in accordance with the nature
of the blockchained IoT system. However, different from the
inner problem that can be tackled at each UAV-IoT cluster
basis, the UAV deployment affects the blockchain system oper-
ation over the whole network, and thus the mutual influence
of the strategy at different UAVs needs to be addressed.
A. UAV Deployment as a Markov Game
For certain UAV deployment, it is likely to affect the IoT
operations in multiple rounds. Such a relatively long-term
effect can be tracked by the Markov decision process (MDP).
Meanwhile, each UAV determines the location based on
its own observation of the network, while influencing each
other. Therefore, the networked problem can be modeled
as a partially observable Markov game, which incorpo-
rates the deployment of each UAV as a partially observ-
able MDP [38]. The Markov game with UAVs as J agents
can be represented by a set of states S, a set of obser-
vations O = {O1, . . . ,Oj , . . . ,OJ}, a set of actions A =
{A1, . . . ,Aj , . . . ,AJ}, and a reward function for each agent.
The state includes the location of IoT nodes and the deploy-
ment of UAVs, the observation of an agent is its private version
regarding the state, and the action is the decision on an update
of deployment. For the current state s ∈ S, each agent-j
uses the policy μj : Oj �→ Aj to select an action. Then, the
agents interact with the environment by executing the action
to achieve a new state, S×A1× . . .×AJ �→ S. In this regard,
agent-j receives a reward Rj : S ×Aj �→ R according to the
state and its own action, along with an updated observation.
The goal of each agent is to maximize the long-term expected
reward Γj =
∑T
t=0 γtRj , where γ ∈ (0, 1) is a discount
factor, and t ∈ [0, T ] denotes the epoch with T being the
time horizon. To be specific, the main elements regarding the
formulated Markov game are defined as follows:
α�
j,k =
⎧⎪⎨
⎪⎩
min
{
1
Υk
(√
ζj
ξj,k
∑
k′∈J−j\{k}
αj,k′Υk′ − ∑
k′∈J−j\{k}
αj,k′Υk′
)
, 1
}
, if ζj
ξj,k
≥ ∑
k′∈J−j\{k}
αj,k′Υk′
0, otherwise
(27)
α�
j,k =
(J − 2)βjΥj (Φ + ρΨj)
[
(1− βj) (Φ + ρΨj)−
∑
k′∈J−j
Cj,k′ + (J − 2)Cj,k
]
Υk
(
(J − 1) (Φ + ρΨj) (1 − βj)−
∑
k′∈J−j
Cj,k′
)2 (33)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
3478 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Fig. 2. The framework of MADDPG algorithm.
• State space S: A state s (t) ∈ S corresponds to the
system environment state at epoch-t, including channel
state information, and the horizontal coordinates of UAVs
and IoT nodes, specified as
s (t) =
{
{wji (t)}i∈Ij,j∈J , {vj (t)}j∈J ,
{�ji (t)}i∈Ij,j∈J
}
. (34)
• Observation space O: Considering that there is no central
coordinator for information exchange among UAVs, the
UAVs only have the information regarding their own
cluster, and thus the observation oj (t) is extended as
oj (t) =
{
{wji (t)}i∈Ij
, vj (t) , {�ji (t)}i∈Ij
}
. (35)
• Action space A: The UAVs take actions to update their
deployment. Given current neural network parameter
θμ
j , the policy μj(oj (t) |θμ
j ) induces an actions aj (t)
defined as the change on location between two successive
epochs, i.e., aj (t) = vj (t)− vj(t− 1).
• Reward R: The reward measures the effect of the action
taken by an agent for a given state, which further guides
the agent to find the best deployment strategy. Corre-
spondingly, it needs to be designed in accordance with
the system objective. Here we define the reward function
as
Rj = Uj (t)− Uj (t− 1) , (36)
where Uj is given in (16) as the achieved utility from the
blockchain system given current deployment. In consis-
tence with the definition of action, here we also use the
difference between two epochs for the reward function.
B. MADDPG-Based Algorithm
For problems with high-dimensional state space and con-
tinuous action space, the DDPG-based learning can be more
effective as compared with conventional approaches such
as deep Q-learning (DQN) or deterministic policy gradient
(DPG). For our considered problem that each agent deter-
mines the deployment on their own in a competitive manner
based on their local observation, the DDPG approach will
be employed at each party involved and thus constitute the
MAGGPG framework, which allows independent learning
procedure at each UAV while reflecting the interactions with
the environment.
The proposed MADDPG framework is shown in Fig. 2,
including a parallel of deep reinforcement learning agents
adopting DDPG in an independent while interactive manner.
The DDPG learning features an actor-critic architecture, where
the actor network based on policy gradient solves the problems
with continuous action space, and the critic network based
on DQN solves the problems of high-dimensional state space.
The actor network determines an action based on the currently
observed state and strategy, and the critic network evaluates the
action produced by the actor network based on the state-action
function. In addition, DDPG also integrates the experience
playback of the DQN and the target network, where the experi-
ence playback improves the utilization of data and downgrades
the correlation of data samples and the target network delays
neural network parameter updates and improves the stability
of the overall algorithm.
The MADDPG-based algorithm design is detailed as Alg. 1.
The critical procedures are explained as follows. First, initial-
ize all neural networks with parameters
{
θμ
j , θμ′
j , θQ
j , θQ′
j
}
for the evaluation actor network, target actor network, eval-
uation critic network, and target critic network, respectively,
at all agents. Also, initialize the environment parameters and
state before the start of each episode. Secondly, each agent-
j ∈ J selects and executes actions aj (t) according to its
local observation oj (t), and obtains the immediate reward
value Rj (t) with an updated observation o′
j (t). Then, store
(oj (t) , aj (t) , Rj (t) , o′
j (t)) for all the agents and constitute
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
TANG et al.: INCENTIVIZING PROOF-OF-STAKE BLOCKCHAIN FOR SECURED DATA COLLECTION IN UAV-ASSISTED IoT 3479
Algorithm 1 MADDPG for UAV Deployment
Training process:
1: Initialize Critic networks and actor networks for all agents
with weights
{
θQ
j , θQ′
j , θμ
j , θμ′
j
}
j∈J
;
2: Initialize the reply buffer D;
3: for episode = 1 to max-episode do
4: Initialize a random process N for action exploration;
5: Initialize the environment with initial state s0;
6: for t = 1 to max-epoch do
7: Each agent-j selects an action aj (t) =
μj
(
oj (t) |θμ
j
)
+ N according to the current neural
network with an exploration noise;
8: Execute the action a (t) = [aj (t)]j∈J , obtain reward
R (t) = [Rj (t)]j∈J , and reach a new state s′ (t);
9: Store transition (s (t) , a (t) , R (t) , s′ (t)) in D;
10: Update the state for the environment;
11: if sufficient transitions collected then
12: for agent j = 1 to J do
13: Sample a random minibatch of D transitions
(sd, ad
j , R
d
j , s
′d) from D;
14: Set target Q-value according to (38);
15: Update critic by minimizing the loss in (37);
16: Update actor using the sampled policy gradient
as (39);
17: end for
18: Update target network parameters for each agent
based on (40) and (41);
19: end if
20: end for
21: end for
Execution process:
1: Load the trained models of critic networks and actor
networks of all agents;
2: Initialize the environment with initial state s0;
3: for t= 1 to max-step do
4: Each agent selects action according to aj (t) =
μj
(
oj (t) |θμ
j
)
;
5: Execute actions a (t) = (a1 (t) , . . . , aJ (t)), reach a new
state s′ (t);
6: Update the state of all agents;
7: end for
8: Output: UAV deployment strategy.
a transition in the reply buffer as (s (t) , a (t) , R (t) , s′ (t)),
where a (t) = [aj (t)]j∈J and R (t) = [Rj (t)]j∈J . After
sufficient training, D group of transitions (sd, ad, Rd, s′d) are
randomly selected from the experience pool D for learning.
The training goal of the critic network is to reduce the error
between the target network parameters and the estimation
network parameters, and accurately evaluate the action-value
function. Thus the network parameters are updated by mini-
mizing the loss function defined as
L
(
θQ
j
)
=
1
D
D∑
d=1
(
yd
j −Qj
(
sd, ad
))2
, (37)
where
yd
j = Rd
j + γQ′
j
(
s′d, a′
1, . . . , a
′
J
) |a′
j=μ′
j(o′d
j ), (38)
Qj and Q′
j are action-value functions that take as input the
action a and the state s of all agents, and output the Q-value
for agent j, D is the number of transitions from the minibatch.
Then, the actor network maximizes the cumulative reward and
updates the network parameters through the gradient ascent
method:
Δθµ
j
J =
1
D
D∑
d=1
�θµ
j
μ
(
od
j
)
�aj
Qj
(
xd, ad
) |aj=μj(od
j ).
(39)
Finally, the MADDPG network parameters are updated as
θQ′
j ← σθQ
j + (1− σ) θQ′
j , σ 
 1, (40)
and
θμ′
j ← σθμ
j + (1− σ) θμ′
j , σ 
 1, (41)
according to the soft update rule, which helps improve the
stability of learning.
VII. SIMULATION RESULTS
In this section, we present the simulation results to show
the performance. We consider an area of 1,000 m × 1,000 m.
There are 6 IoT clusters while each cluster incorporates
10 IoT nodes and a serving UAV. The nodes are randomly
located within the area. The main simulation parameters are
summarized in Table I, used as defaults unless otherwise noted.
A. Convergence of MADDPG and UAV Deployment
We first show the convergence of the proposed MADDPG
approach in Figs. 3 and 4, where the cumulative reward
under the MADDPG algorithm is shown with different actor
network learning rates and different critic network learning
rates. It can be readily seen that the training process eventually
converges, while the learning rate has a significant impact
on the convergence rate. During the training process, if the
learning rate is too large, it is likely to induce an overfitted
neural network after training, and thus the cumulative reward
will fluctuate or may even diverge. On the contrary, if the
learning rate is too small, it leads to slow convergence during
the training process. Therefore, setting an appropriate learning
rate is crucial for actual algorithm implementation. Also,
it should be noted that with proper learning rates, the proposed
approach can solve our formulated problem effectively.
In Figs. 5 and 6, we show the UAV deployment through the
proposed MADDPG approach with different network settings
and topology, where the cases with 4 clusters and 6 clusters
are shown. We also explicitly indicate the geographic centers
for the areas for each cluster. The results depict two trends
regarding the UAV deployment for the blockchain-secured IoT.
The UAV tends to hover at the location with more nodes
gathering. In this regard, the UAV can establish the IoT uplink
with improved channel quality so as to facilitate the data
collection with reduced transmission time and improve the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
3480 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
TABLE I
SIMULATION PARAMETERS
Fig. 3. Cumulative reward with different learning rate of the actor network.
system utility. Meanwhile, the UAVs as blockchain users,
tend to locate close to each other. In this regard, the UAVs
have closer air transmission distances, for which the block
propagation and verification can be more conveniently con-
ducted, further reducing the blockchain operation latency and
improving the system utility. While these two trends some-
times coincide, as shown in Fig. 5, sometimes compromise
Fig. 4. Cumulative reward with different learning rate of the critic network.
Fig. 5. An illustration of UAV deployment with 4 IoT clusters.
Fig. 6. An illustration of UAV deployment with 6 IoT clusters.
is needed, as shown in Fig. 6, which reveals that the multiple
factors affecting the UAV deployment need to be well balanced
for the optimized system performance.
B. Performance Comparison
In Fig. 7, we show the obtained profit through the proposed
incentive mechanism. In particular, each row corresponds to
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
TANG et al.: INCENTIVIZING PROOF-OF-STAKE BLOCKCHAIN FOR SECURED DATA COLLECTION IN UAV-ASSISTED IoT 3481
Fig. 7. Expected profit at the UAVs with incentive design.
the case with one active IoT cluster. For example, for the first
row, cluster-1 is now actively conducting IoT transmission and
thus UAV-1 constructs a stake pool allowing the investment
from others. In this regard, we can see that at the Stackelberg
equilibrium, UAV-1 with the pool obtains a profit of 48.4 coins,
while other UAVs have a profit at about 30 coins. Similar
results can be observed in cases with different active IoT
clusters and pool constructions. Note that the Stackelberg
game with leader-follower architecture allows the leader to
take action first and achieve an advantageous position in the
game, and the pool has a relatively higher profit as compared
with the followers. Note for the case without pools, all UAVs
have an equal position in the game and thus there are no
leader’s advantages. Since the expected profit considers the
cases for other UAVs working as the miner to get the payment
for blockchain operation as well as the reward for investment.
In this regard, even though the pool is constructed, the mining
process does not necessarily occur here. However, the pool
construction does induce a higher expected profit, even though
the pool needs to share its payment for the investment.
Therefore, we can see that the proposed investment mechanism
is quite effective in improving the utility at the pool constructor
with reduced cost, which further improves the system utility
of the overall blockchain system.
In Fig. 8, we show the results comparing the proposed
MADDPG approach with global search as well as the results
with random UAV deployment as baselines. As we mainly
address the deployment through MADDPG, and thus we adopt
the IoT transmit power allocation and incentive design as
analyzed in Sec. V to facilitate the discussion, and use UAV
altitude as the ranking variable. For all considered approaches,
the achieved system utility first increases and then decreases as
the UAVs reach higher. This can be explained by the IoT-UAV
transmission link quality that first improves and then down-
grades, inducing a larger probability for LoS transmissions
while worsened channel quality as the UAV altitude increases.
Thus, there exists a tradeoff in terms of UAV altitude for
the system performance. Meanwhile, as expected, the global
search provides the best performance, while our proposed
MADDPG can effectively approach the optimum, while there
Fig. 8. Performance comparison with different approaches.
is an evident performance gap with random UAV deployment
as compared with other approaches. Particularly, we can see
that our proposal more closely approximates the optimum
when the UAVs fly higher. This is because, with higher UAV
altitude, the location of IoT nodes in each cluster has a smaller
impact on the UAV deployment, since the transmission link
from the UAV to the IoT nodes tends to be the same. In this
regard, the UAV deployment will emphasize more on the
blockchain system and thus locate closer to each other to facil-
itate the blockchain operations. Therefore, the results for UAV
deployment tend to be the same even if different approaches
are exploited. Moreover, we emphasize that the global search
as a centralized approach requires explicit coordination among
different UAVs and clusters, which goes against the distributed
nature of IoT and blockchain system. In contrast, our proposed
MADDPG approach can be implemented in a distributed
manner, which is thus not only effective but also convenient.
In Fig. 9, we compare the performance under our proposal
with the cases with the different transmission, incentive, and
deployment strategies, as specified in the legend of the figure.
The performance indicator is the system utility defined as the
objective function in (17a). Similar to the results in Fig. 8, the
performance first improves and then downgrades as the UAV
altitude increases, due to the tradeoff between LoS probability
and channel propagation for the air-ground transmissions.
Meanwhile, our proposal results in the best performance as
compared with the baselines, regardless of the UAV altitude.
Comparing the results under different approaches, we can see
the performance gain through the learning-based deployment
(solid curves vs dashed curves), incentive design (curves with
circle markers and curves with square markers), and the IoT
transmission optimization (curves with triangle markers and
the others). Overall, as the UAV becomes higher, the link
quality from different IoT nodes to the UAV becomes closer,
and thus the performance gap among different approaches
shrinks. An interesting observation is that, as we compare
the results from MADDPG without the pool and geographic
center deployment with pool constructions, we can see that
the former outperforms the latter when the UAV altitude is
relatively low. This is because, when the UAV is relatively
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
3482 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Fig. 9. System utility with respect to UAV altitude.
Fig. 10. System utility with respect to number of nodes in a cluster.
lower, the difference in channel quality from different IoT
nodes to the UAV becomes more evident due to the stronger
NLoS components. In this regard, the UAV deployment can
more significantly influence the overall performance as deploy-
ment through learning is generally superior to the geographic
center deployment. Then, the performance gain from deploy-
ment optimization outweighs that from the pool construction.
In contrast, when the UAV altitude becomes higher, the dif-
ference in IoT transmission links in the same cluster becomes
smaller. In this regard, the deployment through MADDPG
approximates the geographic center deployment. Meanwhile,
the benefit brought by pool construction becomes more evident
due to the improved blockchain profit and reduced cost.
Fig. 10 shows the performance comparison considering the
number of IoT nodes per cluster, where the baselines are
similarly defined as those in Fig. 9. Also similarly, we can
see that our proposal with joint deployment, incentive, and
transmission optimization outperforms the rest. Also, the sys-
tem utility is improved with an increasing number of nodes in
the IoT cluster for all approaches. This is as expected since
more IoT nodes induce improved IoT uplink transmissions
to facilitate the blockchain operations. For the results from
different approaches, we observe the performance gained by
different factors. In particular, the design of the stake pool
increases the average profit obtained by blockchain partici-
pants, thereby attracting more stakeholders to participate in the
investment, and improving the performance of the blockchain
network. Further, the UAV deployment and pool construction
both have a significant impact on the overall performance,
since the deployment affects the IoT transmission as well
as the blockchain operations while pool construction direct
affects the profit. Moreover, with more IoT nodes, the per-
formance gap between different approaches becomes larger.
This is because, where there are more nodes, the transmission
link difference between IoT nodes becomes more significant,
which allows a larger space for the optimization in different
aspects, including the deployment, incentive, and transmis-
sions, to demonstrate their effectiveness and superiority.
VIII. CONCLUSION
In this paper, we proposed a UAV-assisted data collection for
clustered IoT with PoS blockchain-based security, where the
IoT transmission, incentive for PoS and UAV deployment were
jointly considered. The proposed MADDPG was exploited for
the UAV-IoT cluster pair to learn their strategy, facilitating
the implementation in a distributed manner. We particularly
proposed the incentive design for the PoS procedure with stake
pool construction allowing investment-based profit sharing.
The numerical results indicated that implicit coordination is
required for IoT transmission and blockchain operation in
terms of UAV deployment for the optimized system perfor-
mance. Moreover, the construction of a stake pool not only
facilitated the PoS consensus procedure for blockchain but
also worked as an effective incentive mechanism to improve
the overall system utility.
REFERENCES
[1] S. Dang, O. Amin, B. Shihada, and M.-S. Alouini, “What should 6G
be?” Nature Electron., vol. 3, no. 1, pp. 20–29, Jan. 2020.
[2] L. Chettri and R. Bera, “A comprehensive survey on Internet of Things
(IoT) toward 5G wireless systems,” IEEE Internet Things J., vol. 7,
no. 1, pp. 16–32, Jan. 2020.
[3] N. C. Luong, D. T. Hoang, P. Wang, D. Niyato, D. I. Kim, and Z. Han,
“Data collection and wireless communication in Internet of Things (IoT)
using economic analysis and pricing models: A survey,” IEEE Commun.
Surveys Tuts., vol. 18, no. 4, pp. 2546–2590, 4th Quart. 2016.
[4] X. Tang, R. Zhang, W. Wang, L. Cai, and Z. Han, “Robust secrecy
competition with aggregate interference constraint in small-cell net-
works,” IEEE Trans. Wireless Commun., vol. 20, no. 4, pp. 2325–2340,
Apr. 2021.
[5] A. Fotouhi et al., “Survey on UAV cellular communications: Practical
aspects, standardization advancements, regulation, and security chal-
lenges,” IEEE Commun. Surveys Tuts., vol. 21, no. 4, pp. 3417–3442,
4th Quart. 2019.
[6] R. Shakeri et al., “Design challenges of multi-UAV systems in
cyber-physical applications: A comprehensive survey and future direc-
tions,” IEEE Commun. Surveys Tuts., vol. 21, no. 4, pp. 3340–3385,
4th Quart. 2019.
[7] F. Meneghello, M. Calore, D. Zucchetto, M. Polese, and A. Zanella,
“IoT: Internet of threats? A survey of practical security vulnerabilities in
real IoT devices,” IEEE Internet Things J., vol. 6, no. 5, pp. 8182–8201,
May 2019.
[8] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When mobile
blockchain meets edge computing,” IEEE Commun. Mag., vol. 56, no. 8,
pp. 33–39, Aug. 2018.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
TANG et al.: INCENTIVIZING PROOF-OF-STAKE BLOCKCHAIN FOR SECURED DATA COLLECTION IN UAV-ASSISTED IoT 3483
[9] H. Huang, W. Kong, S. Zhou, Z. Zheng, and S. Guo, “A survey of
state-of-the-art on blockchains: Theories, modelings, and tools,” ACM
Comput. Surveys, vol. 54, no. 2, pp. 1–42, Mar. 2022.
[10] B. Cao et al., “When Internet of Things meets blockchain: Challenges
in distributed consensus,” IEEE Netw., vol. 33, no. 6, pp. 133–139,
Nov. 2019.
[11] M. Samir, S. Sharafeddine, C. M. Assi, T. M. Nguyen, and A. Ghrayeb,
“UAV trajectory planning for data collection from time-constrained IoT
devices,” IEEE Trans. Wireless Commun., vol. 19, no. 1, pp. 34–46,
Jan. 2020.
[12] Y. Liu, K. Liu, J. Han, L. Zhu, Z. Xiao, and X.-G. Xia, “Resource
allocation and 3-D placement for UAV-enabled energy-efficient IoT
communications,” IEEE Internet Things J., vol. 8, no. 3, pp. 1322–1333,
Mar. 2021.
[13] X. Tang, W. Wang, H. He, and R. Zhang, “Energy-efficient data collec-
tion for UAV-assisted IoT: Joint trajectory and resource optimization,”
Chinese J. Aeronaut., vol. 39, no. 9, pp. 15–25, Sep. 2022.
[14] H. Lei et al., “Safeguarding UAV IoT communication systems against
randomly located eavesdroppers,” IEEE Internet Things J., vol. 7, no. 2,
pp. 1230–1244, Feb. 2020.
[15] B. Bera, A. K. Das, S. Garg, M. J. Piran, and M. S. Hossain,
“Access control protocol for battlefield surveillance in drone-assisted
IoT environment,” IEEE Internet Things J., vol. 9, no. 4, pp. 2708–2721,
Feb. 2022.
[16] M. Huang, A. Liu, N. N. Xiong, and J. Wu, “A UAV-assisted ubiquitous
trust communication system in 5G and beyond networks,” IEEE J. Sel.
Areas Commun., vol. 39, no. 11, pp. 3444–3458, Nov. 2021.
[17] W. Y. B. Lim et al., “UAV-assisted communication efficient federated
learning in the era of the artificial intelligence of things,” IEEE Netw.,
vol. 35, no. 5, pp. 188–195, Sep. 2021.
[18] R. Li, T. Song, B. Mei, H. Li, X. Cheng, and L. Sun, “Blockchain for
large-scale Internet of Things data storage and protection,” IEEE Trans.
Services Comput., vol. 12, no. 5, pp. 762–771, Sep. 2019.
[19] Y. Zuo, S. Jin, and S. Zhang, “Computation offloading in untrusted
MEC-aided mobile blockchain IoT systems,” IEEE Trans. Wireless
Commun., vol. 20, no. 12, pp. 8333–8347, Dec. 2021.
[20] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for blockchain
networks,” IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600,
Jun. 2019.
[21] K. Huang et al., “Building redactable consortium blockchain for indus-
trial Internet-of-Things,” IEEE Trans. Ind. Informat., vol. 15, no. 6,
pp. 3670–3679, Jun. 2019.
[22] J. Kang, Z. Xiong, D. Ye, D. I. Kim, J. Zhao, and D. Niyato, “Toward
secure blockchain-enabled Internet of Vehicles: Optimizing consensus
management using reputation and contract theory,” IEEE Trans. Veh.
Technol., vol. 68, no. 3, pp. 2906–2920, Mar. 2019.
[23] X. Xu, H. Zhao, H. Yao, and S. Wang, “A blockchain-enabled energy-
efficient data collection system for UAV-assisted IoT,” IEEE Internet
Things J., vol. 8, no. 4, pp. 2431–2443, Feb. 2021.
[24] N. Pathak, A. Mukherjee, and S. Misra, “AerialBlocks: Blockchain-
enabled UAV virtualization for industrial IoT,” IEEE Internet Things
Mag., vol. 4, no. 1, pp. 72–77, Mar. 2021.
[25] J. Li, T. Liu, D. Niyato, P. Wang, J. Li, and Z. Han, “Contract-theoretic
pricing for security deposits in sharded blockchain with Internet of
Things (IoT),” IEEE Internet Things J., vol. 8, no. 12, pp. 10052–10070,
Jun. 2021.
[26] J. Cui, F. Ouyang, Z. Ying, L. Wei, and H. Zhong, “Secure and efficient
data sharing among vehicles based on consortium blockchain,” IEEE
Trans. Intell. Transp. Syst., vol. 23, no. 7, pp. 8857–8867, Jul. 2022.
[27] A. Yazdinejad, R. M. Parizi, A. Dehghantanha, H. Karimipour,
G. Srivastava, and M. Aledhari, “Enabling drones in the Internet of
Things with decentralized blockchain-based security,” IEEE Internet
Things J., vol. 8, no. 8, pp. 6406–6415, Apr. 2021.
[28] Y. Sun, M. Peng, Y. Zhou, Y. Huang, and S. Mao, “Application
of machine learning in wireless networks: Key techniques and open
issues,” IEEE Commun. Surveys Tuts., vol. 21, no. 4, pp. 3072–3108,
4th Quart., 2019.
[29] C. H. Liu, Q. Lin, and S. Wen, “Blockchain-enabled data collection
and sharing for industrial IoT with deep reinforcement learning,” IEEE
Trans. Ind. Informat., vol. 15, no. 6, pp. 3516–3526, Jun. 2019.
[30] Y. Sun, M. Peng, and S. Mao, “Deep reinforcement learning-based mode
selection and resource management for green fog radio access networks,”
IEEE Internet Things J., vol. 6, no. 2, pp. 1960–1971, Apr. 2019.
[31] S. Rathore and J. H. Park, “A blockchain-based deep learning approach
for cyber security in next generation industrial cyber-physical systems,”
IEEE Trans. Ind. Informat., vol. 17, no. 8, pp. 5522–5532, Aug. 2021.
[32] R. Kumar, P. Kumar, R. Tripathi, G. P. Gupta, N. Kumar, and
M. M. Hassan, “A privacy-preserving-based secure framework using
blockchain-enabled deep-learning in cooperative intelligent trans-
port system,” IEEE Trans. Intell. Transp. Syst., vol. 23, no. 9,
pp. 16492–16503, Sep. 2022.
[33] J. Yun, Y. Goh, and J.-M. Chung, “DQN-based optimization framework
for secure sharded blockchain systems,” IEEE Internet Things J., vol. 8,
no. 2, pp. 708–722, Jan. 2021.
[34] Y. Lu, X. Huang, Y. Dai, S. Maharjan, and Y. Zhang, “Blockchain and
federated learning for privacy-preserved data sharing in industrial IoT,”
IEEE Trans. Ind. Informat., vol. 16, no. 6, pp. 4177–4186, Jun. 2020.
[35] A. Asheralieva and D. Niyato, “Distributed dynamic resource manage-
ment and pricing in the IoT systems with blockchain-as-a-service and
UAV-enabled mobile edge computing,” IEEE Internet Things J., vol. 7,
no. 3, pp. 1974–1993, Mar. 2020.
[36] W. Feng, J. Wang, Y. Chen, X. Wang, N. Ge, and J. Lu, “UAV-
aided MIMO communications for 5G Internet of Things,” IEEE Internet
Things J., vol. 6, no. 2, pp. 1731–1740, Apr. 2019.
[37] Z. Han, D. Niyato, W. Saad, and T. Başar, Game Theory for Next
Generation Wireless and Communication Networks. Cambridge, U.K.:
Cambridge Univ. Press, 2019.
[38] R. Lowe, Y. Wu, A. Tamar, J. Harb, O. P. Abbeel, and I. Mordatch,
“Multi-agent actor-critic for mixed cooperative-competitive environ-
ments,” in Proc. Adv. Neural Info. Process. Syst., Los Angeles, CA,
Dec. 2017, pp. 6379–6390.
Xiao Tang (Member, IEEE) received the B.S. degree
in information engineering (Elite Class Named
After Tsien Hsue-shen) and the Ph.D. degree in
information and communication engineering from
Xi’an Jiaotong University, Xi’an, China, in 2011 and
2018, respectively. He is currently with the Depart-
ment of Communication Engineering, Northwestern
Polytechnical University, Xi’an. His research inter-
ests include wireless communications and network-
ing, game theory, and physical layer security.
Xunqiang Lan (Graduate Student Member, IEEE)
received the B.E. degree in communication engineer-
ing from the School of Northwestern Polytechnical
University, Xi’an, China, in July 2020, where he is
currently pursuing the M.S. degree in communica-
tion and information systems. His research interests
include unmanned aerial vehicle communications,
machine learning, and blockchains.
Lixin Li (Member, IEEE) received the B.S.
(Hons.), the M.S. (Hons.), and the Ph.D. degrees
from Northwestern Polytechnical University (NPU),
Xi’an, China, in 2001, 2004, and 2008, respectively.
From 2009 to 2011, he was a Post-Doctoral Research
Fellow at NPU. In 2011, he joined the School
of Electronics and Information, NPU, where he is
currently a Full Professor and the Deputy Director
of the Department of Communication Engineering
with the School. In 2017, he held the visiting scholar
position with the University of Houston, Texas.
He has authored or coauthored five books, more than 150 peer-reviewed papers
in many prestigious journals and conferences, and he holds 26 granted patents.
His current research interests include 5G/6G wireless networks, federated
learning, game theory, and machine learning for wireless communications.
He received the 2016 NPU Outstanding Young Teacher Award, which is the
highest research and education honors for young faculties in NPU. He was
an Exemplary Reviewer for IEEE TRANSACTIONS ON COMMUNICATIONS
in 2020.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
3484 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Yan Zhang (Fellow, IEEE) received the B.S.
degree from Beihang University, Beijing, China,
the M.S. degree from the Nanjing University of
Posts and Telecommunications, Nanjing, China, and
the Ph.D. degree from the School of Electrical
and Electronic Engineering, Nanyang Technological
University, Singapore.
He is currently a Full Professor with the
Department of Informatics, University of Oslo,
Oslo, Norway. His research interests include
next-generation wireless networks leading to 6G,
and green and secure cyber-physical systems, such as smart grid and transport.
He is a fellow of IET, an Elected Member of the Academia Europaea (MAE),
the Royal Norwegian Society of Sciences and Letters (DKNVS), and the
Norwegian Academy of Technological Sciences (NTVA). In 2018, he was
a Recipient of the Global Highly Cited Researcher Award (web of science
top 1% most cited worldwide). He is also the Symposium/Track Chair of a
number of conferences, including IEEE ICC 2021, IEEE SmartGridComm
2021, and IEEE GLOBECOM 2017. He is also the Chair of the IEEE
Communications Society Technical Committee on Green Communications and
Computing (TCGCC). He is also an Editor (an Area Editor, a Senior Editor,
or an Associate Editor) for several IEEE transactions/magazines, including
IEEE Network Magazine, IEEE TRANSACTIONS ON NETWORK SCIENCE
AND ENGINEERING, IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY,
IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, IEEE TRANSAC-
TIONS ON GREEN COMMUNICATIONS AND NETWORKING, IEEE COM-
MUNICATIONS SURVEYS AND TUTORIALS, IEEE INTERNET OF THINGS
JOURNAL, IEEE SYSTEMS JOURNAL, IEEE Vehicular Technology Magazine,
and IEEE BLOCKCHAIN TECHNICAL BRIEFS. He was also a Distinguished
Lecturer of the IEEE Vehicular Technology Society from 2016 to 2020. He is
also a Distinguished Lecturer of the IEEE Communications Society and a
Distinguished Speaker of the IEEE Vehicular Technology Society.
Zhu Han (Fellow, IEEE) received the B.S. degree
in electronic engineering from Tsinghua University
in 1997 and the M.S. and Ph.D. degrees in elec-
trical and computer engineering from the Univer-
sity of Maryland, College Park, in 1999 and 2003,
respectively.
From 2000 to 2002, he was a Research and Devel-
opment Engineer of JDSU, Germantown, Maryland.
From 2003 to 2006, he was a Research Associate
at the University of Maryland. From 2006 to 2008,
he was an Assistant Professor at Boise State Univer-
sity, Idaho. He is currently a John and Rebecca Moores Professor with the
Electrical and Computer Engineering Department as well as with the Com-
puter Science Department, University of Houston, Texas. His research interests
include wireless resource allocation and management, wireless communica-
tions and networking, game theory, big data analysis, security, and smart grid.
He received the NSF Career Award in 2010, the Fred W. Ellersick Prize of
the IEEE Communication Society in 2011, the EURASIP Best Paper Award
for the EURASIP Journal on Advances in Signal Processing in 2015, IEEE
Leonard G. Abraham Prize in the field of communications systems (Best Paper
Award in IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS) in
2016, and several best paper awards in IEEE conferences. He was an IEEE
Communications Society Distinguished Lecturer from 2015 to 2018, an AAAS
Fellow since 2019, and an ACM Distinguished Member since 2019. He is a
1% highly cited researcher since 2017 according to Web of Science. He is
also the winner of the 2021 IEEE Kiyo Tomiyasu Award, for outstanding early
to mid-career contributions to technologies holding the promise of innovative
applications, with the following citation: “for contributions to game theory
and distributed management of autonomous communication networks.”
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:03:00 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Black & White)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Tags
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 524288
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments true
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /AdobeArabic-Bold
    /AdobeArabic-BoldItalic
    /AdobeArabic-Italic
    /AdobeArabic-Regular
    /AdobeHebrew-Bold
    /AdobeHebrew-BoldItalic
    /AdobeHebrew-Italic
    /AdobeHebrew-Regular
    /AdobeHeitiStd-Regular
    /AdobeMingStd-Light
    /AdobeMyungjoStd-Medium
    /AdobePiStd
    /AdobeSansMM
    /AdobeSerifMM
    /AdobeSongStd-Light
    /AdobeThai-Bold
    /AdobeThai-BoldItalic
    /AdobeThai-Italic
    /AdobeThai-Regular
    /ArborText
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /BellGothicStd-Black
    /BellGothicStd-Bold
    /BellGothicStd-Light
    /ComicSansMS
    /ComicSansMS-Bold
    /Courier
    /Courier-Bold
    /Courier-BoldOblique
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /Courier-Oblique
    /CourierStd
    /CourierStd-Bold
    /CourierStd-BoldOblique
    /CourierStd-Oblique
    /EstrangeloEdessa
    /EuroSig
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Helvetica
    /Helvetica-Bold
    /Helvetica-BoldOblique
    /Helvetica-Oblique
    /Impact
    /KozGoPr6N-Medium
    /KozGoProVI-Medium
    /KozMinPr6N-Regular
    /KozMinProVI-Regular
    /Latha
    /LetterGothicStd
    /LetterGothicStd-Bold
    /LetterGothicStd-BoldSlanted
    /LetterGothicStd-Slanted
    /LucidaConsole
    /LucidaSans-Typewriter
    /LucidaSans-TypewriterBold
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MinionPro-Bold
    /MinionPro-BoldIt
    /MinionPro-It
    /MinionPro-Regular
    /MinionPro-Semibold
    /MinionPro-SemiboldIt
    /MVBoli
    /MyriadPro-Black
    /MyriadPro-BlackIt
    /MyriadPro-Bold
    /MyriadPro-BoldIt
    /MyriadPro-It
    /MyriadPro-Light
    /MyriadPro-LightIt
    /MyriadPro-Regular
    /MyriadPro-Semibold
    /MyriadPro-SemiboldIt
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /Symbol
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Webdings
    /Wingdings-Regular
    /ZapfDingbats
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 600
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 600
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 300
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 900
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.33333
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /Unknown
  /CreateJDFFile false
  /Description <<
    /ENU ()
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice