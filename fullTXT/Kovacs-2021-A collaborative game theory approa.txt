A collaborative game theory approach for determining the feasibility of a shared AS blockchain infrastructure
A collaborative game theory approach for 
determining the feasibility of a shared AS 
blockchain infrastructure 
Rudolf Kovacs, Bogdan Iancu, Vasile Dadarlat, Sorin Buzura, Adrian Peculea, Emil Cebuc 
Computer Science Department, 
Technical University of Cluj-Napoca 
Cluj-Napoca, Romania 
Email: Rudolf.Kovacs@cs.utcluj.ro 
Abstract— The paper studies the feasibility of building a 
shared AS blockchain infrastructure employing a collaborative 
game theory approach. Game theory is used due to its versatility 
on analyzing situation where the outcome depends on the actions 
of several actors (AS) and on the estimated payoff when an actor 
makes a decision. The games chosen are in the category of 
Cooperative Game type, where multiple actors cooperate and 
form a coalition which they join or leave based upon their 
payoffs / reward. PFG is the basis of the algorithm implemented 
to demonstrate the feasibility of integrating a blockchain 
solution in an AS federation and to validate the reason for this 
integration. A mechanism of incentives is proposed to stimulate 
the cooperation of multiple AS. 
Keywords—game theory, blockchain, autonomous system, 
feasibility, federation 
I. INTRODUCTION
The paper proposes to validate the feasibility of a 
collaborative approach in integrating a blockchain solution by 
a coalition / federation of autonomous systems (AS). The 
solution presented in this article simulates the evolution over 
time of a collaborative behavior and the benefits that result 
from this behavior in order to learn if it is more beneficial for 
an AS to collaborate or to act on its own. It uses game theory 
mathematical models to analyze the interactions between 
different AS in the context of blockchain technology. Several 
strategies and choices are modeled and compared, proving the 
feasibility of building a shared AS blockchain infrastructure 
Game theory represents the mathematical model study of 
the strategical interaction between rational (at all times) agents 
(two or more) that take decisions in a situation that contains a 
set of rules and consequences [1] . Game theory is used for 
strategical behavior analysis, taking into account how the 
agents expect other participants to behave. This branch of 
applied mathematics provides means for analyzing situations 
where participants take interdependent decisions. This 
interdependence makes each participant to take into account 
the possible decisions and strategies that other participants 
might have in the process of forming its own strategy [2]. In 
this way, game theory can be used for finding the optimal gain 
based on the analysis of costs and benefits of each participant 
individually. This can be done exploring the gain in every 
possible situation over the course of actions that are benefic to 
each party that competes. These actions can be derived from 
the combinations of the simultaneous actions of the parties 
involved. A solution of such game describes the optimal 
decisions of the participants – which may have common 
interests, opposing interests or shared interests – and the 
consequences that result from these decisions. 
Game theory contains a set of analytical means that aim to 
help understand the phenomenon observed by the interaction 
of agents who make decisions. It starts from the assumption 
that (rational) agents follow well-defined objectives and take 
into account the information / expectations they have about 
the behavior of other agents. It is assumed that all participants 
reason and act strategically. In such a game, each participant 
analyzes the possible reaction of the other participants to his 
action and only then makes a decision that will serve him best. 
Such an environment, in which the above-mentioned 
characteristic is mutually valid for all participants, is called 
strategic environment [3]. Due to its versatile nature, Game 
theory is used different field, ranging from economics, 
political science, sociology to computer science [4] (e.g., 
wireless networks [5], cybersecurity and cloud computing 
[6]). 
Cooperative games within game theory are games in 
which "competition" occurs between groups (coalitions) of 
participants, due to the possibility and ability of participants 
to form cooperative behaviors [7]. This type of games can be 
classified as non-zero sum games. They are characterized by 
the fact that the profit of one participant does not necessarily 
mean the loss of another participant, and even in some 
conditions both participants can benefit from a situation. In 
these games - also called variable sum - the ability of the 
participants to cooperate and how this happens can have a 
significant influence on the end results. In contrast, in games 
with a constant sum, cooperation and communication do not 
make sense given that there is no possibility for more 
participants to have a gain. In the case of cooperative games. 
where participants share a common goal, the solution involves 
coordinating the decisions of the parties in the most efficient 
way [2]. 
A blockchain data structure is defined as an ordered, back- 
linked list of blocks of transactions [8]. A blockchain system 
is based on a peer-to-peer (P2P) network, which is a resilient, 
decentralized and open network. The system users are 
represented by the nodes in the network. All nodes are 
hierarchically equal, there are no special nodes, so they can 
both use services and provide them to others. At the same 
time, the nodes within the blockchain can have different roles, 
depending on the functionality they support. 
For this paper the concept of federation of Autonomous 
Systems (AS federation) – ASs that collaborate for a common 
goal, was used. The AS federation aims to promote 
collaboration between ASs in the implementation of a 
blockchain over the networks of each AS. In general, a 
federation refers to a group of entities that adhere to and are 
committed to complying with and integrating a certain 
standard and operating in accordance with it. In the 
20
21
 2
0t
h 
R
oE
du
N
et
 C
on
fe
re
nc
e:
 N
et
w
or
ki
ng
 in
 E
du
ca
tio
n 
an
d 
R
es
ea
rc
h 
(R
oE
du
N
et
) |
 9
78
-1
-6
65
4-
13
51
-0
/2
1/
$3
1.
00
 ©
20
21
 IE
EE
 | 
D
O
I: 
10
.1
10
9/
R
oE
du
N
et
54
11
2.
20
21
.9
63
77
11
978-1-6654-1351-0/21/$31.00 ©2021 European Union
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:15 UTC from IEEE Xplore.  Restrictions apply. 
cooperation within the federation, the entities can have the 
freedom to comply and integrate the respective standard in 
their own way, customized to the internal needs and 
characteristics. 
The AS that will choose to join the federation must be 
committed to integrating and implementing the blockchain 
solution within the networks they manage. In this way, a large 
space of interconnected networks can be obtained that 
integrate blockchain technology, thus resulting in a 
homogeneous environment within the federation. By 
integrating the blockchain, the AS in the federation will obtain 
a distributed environment to help them manage their 
infrastructure. The advantage of joining the federation is that 
an AS can choose to collaborate with other autonomous 
systems in the federation for implementing and integrating the 
blockchain, and in using its functionalities. 
An AS can store its data in the blockchain in a secure 
manner, knowing that access is restricted. The blockchain 
ensures the integrity of the data provided by the AS, 
transparency, and the traceability. 
The papers original contributions are: 
• using game theory, a mathematical model was used to 
analyze the interactions between different autonomous 
systems (AS) in the context of blockchain technology; 
• a PFG based algorithm and its payoff function were 
proposed and derived from the analyzed parameters; 
• the feasibility of integrating a blockchain solution in a 
federation of ASs was demonstrated by comparing three 
game theory approaches. 
The paper is organized as follows: Section II provides 
background and related work regarding blockchain and 
collaboration approaches in game theory. Section III presents 
and describes the proposed algorithm and the approach that 
this algorithm takes. The experimental results are presented 
and analyzed in section IV. Section V concludes the paper and 
presents possible further improvements. 
II. BACKGROUND 
In a blockchain system, depending on the resources 
available for storage and verification, there are two types of 
nodes: full nodes and light nodes. Full nodes store locally the 
entire blockchain (and all block components) with all 
transactions and the nodes are involved in the complete 
verification of all transactions and blocks, based on the fixed 
rules set of the system. Accelerating blockchain search of full 
nodes using high performance computing (HPC) architectures 
such as graphics clusters that can offer the necessary power 
[9]. These nodes have both inbound and outbound connections 
with other users. Through the input connections all new 
transactions and blocks from other nodes are received, and 
they are checked according to a well-defined set of rules. 
Valid blocks and transactions are cached locally and sent to 
other complete nodes. Those that are found invalid are 
removed. Nodes that have storage and power constraints can 
operate without storing the entire blockchain and are called 
partial nodes. These nodes rely on the other nodes to obtain 
partial views of the relevant parts and to verify the 
transactions, downloading only the block headers, without 
including the transactions in the blocks [9]. A transaction is 
the smallest element within the blockchain and represents a 
data structure that encodes the transfer of information between 
participants. A certain value is transferred between users, thus 
changing the owner. The entire transfer history is stored in the 
blockchain, each transaction being a signed public entry. Once 
the transaction has been generated, it will be shared with the 
other nodes with which a connection is established. Full nodes 
validate the received transaction, propagate it further in the 
network and store it in the memory pool until it is verified and 
accepted within a block. 
The games chosen are in the category of Cooperative 
Game type, where multiple actors cooperate and form a 
coalition which they join or leave based upon their payoffs / 
reward. In [10] the authors focus on the quote "I help you 
because you helped others" and based on this they propose a 
solution that promotes collaboration and a behavior that will 
shift away from the equilibrium state that the game prisoner's 
dilemma has - non-cooperation, everybody on its own. Game 
theory is used in cognitive networks in order to determine 
nodes to cooperate even though they have different goals and 
the nodes are selfish. In [11] an energy grid model is presented 
where the energy transfer is prioritized to be made inside of a 
formed coalition and just after no one from the coalition needs 
energy it can be made to the base station. Coalitional game 
theory is used for micro-grid distribution networks in order to 
improve collaboration. Here the behavior of collaborating and 
helping other members of coalition is enforced as a first step 
and just after this step other actions can be made. 
In [12] the authors propose a PFG (pay-for-gain) 
mechanism for nodes in delay tolerant networks. The PFG 
mechanism helps the nodes collaborate to share their available 
buffer space in order to process and send messages and, at the 
same time, eliminates the ill behavior of nodes that use others 
buffer space for their own good but never help. The 
mechanism proposed in [12] was adapted and applied to 
demonstrate the feasibility of integrating a blockchain solution 
in an AS federation 
III. PROPOSED SOLUTION 
In [6] the authors present the characteristics of different 
cloud beneficiaries and their actions to gain a maximum 
financial advantage. Similar, in our proposed approach, the 
characteristics of blockchain systems and actors are presented 
and the financial advantages for an AS to adhere to a 
federation are discussed. Thus, the proposed algorithm and its 
payoff function is derived from the analyzed parameters. 
A. Cost calculation model for hosting and maintaining a 
blockchain 
In [13] the issue of anticipation and calculation of a 
blockchain solution is addressed. This issue is not easy to 
foresee due to the fact that the history of such implementations 
is recent and limited. Also, there are new proposals that come 
with improvements, or new implementations that don't help 
the mentioned issue because most of the time the approaches 
used are new and different. In this way, the authors define a 
way of cost calculation based on data that come from global 
clients for which proof of concepts, pilot versions or even 
production ones were implemented. Also, they used 
information from their internal platform. 
Based on the analysis made on the presented data, the 
conclusion is that the minimum requirement for hosting a 
blockchain is to have 10 (full) nodes and 250 users. For the 
number of transactions (transaction volume), the amount 
differs in regard to the solution application from a couple 
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:15 UTC from IEEE Xplore.  Restrictions apply. 
thousands to millions of transactions per year. However, the 
most blockchain solutions fall in the category that has a 
transaction volume of around 365 000 transactions per year 
(1000 transactions per day). The same can be said for 
transaction size, the size being different based on the solution 
application. 
For a typical blockchain solution, a fair number of 
transactions per day is 1000, taking into consideration that 
from this value on the costs are considered to be in the margins 
of feasibility. If there are more transactions the costs become 
easier to be supported. Of course, the requirements and 
applicability of the blockchain solution need to be evaluated 
also besides the details already mentioned. 
B. Proposed algorithm 
The pay-for-gain algorithm (PFG) proposed in [12] is 
based on game theory and loan credit theory. Its aim is to find 
an equilibrium condition by which to maximize the interest of 
each participant through cooperation. PFG is the basis of the 
algorithm implemented to demonstrate the feasibility of 
integrating a blockchain solution in an AS federation and to 
validate the reason for this integration. A mechanism of 
incentives is proposed to stimulate the cooperation of multiple 
AS. Therefore, individuals (AS) who do not want to cooperate 
and prefer an approach on their own may find that it is 
advantageous and optimal if they choose the option of 
cooperation. By implementing the mentioned algorithm, the 
equilibrium condition is investigated, through which the 
interest of each individual is maximized within the PFG 
scheme of the algorithm. The effectiveness of the proposed 
mechanism will be demonstrated and presented in the 
experimental section. 
The integrated PFG mechanism and algorithm presented 
in this paper it is based on the fact that if an individual borrows 
something of interest (resources) from another individual 
several times, and the individual does not return what he 
borrowed, in the end the individual willing to give will not 
borrow any more resources or will borrow them less often. 
Therefore, a set of formulas is needed to consider all these 
aspects, as well as the aspects given by the problem in 
question for which it must demonstrate the feasibility and 
validity of the cooperation. These formulas are adapted from 
[11] to the take into account the cooperative context and 
characteristics of the technologies needed. 
In the proposed algorithm a node represents an AS - the 
individuals between which the actions take place. In order to 
quantify the interaction between nodes and their contribution 
in the coalition for the blockchain integration, the following 
formulas are used (1) – (3): 
 
,where resources_for_B represent the resources that AS A 
allocates to the coalition blockchain; sum_for_B represents 
the total resources allocated by AS A to the blockchain; 
resources_free_A represents the resources that AS A has 
available for use in the coalition blockchain; 
initial_resources_amount represents the number of resources 
that an AS reserves in order to be allocated and used within 
the coalition blockchain; g() represents the function with 
which resources_for_B is calculated. Similarly, the formulas 
are used for all participating nodes. 
In the algorithm, a node is defined with the following 
fields: an identifier (ID), the list of nodes allocated to be part 
of the blockchain, the resources initially set to be allocated in 
the blockchain (initial_resources_for_sharing), the resources 
available to be allocated (available_resources), the resources 
allocated to the blockchain in the current round 
(current_lent_resources) and the total number of resources 
that have been allocated so far to the blockchain 
(total_lent_resources). In each round, the node calculates its 
resources for blockchain allocation based on the total number 
of resources allocated so far. 
The flow diagram in Figure 1 summarizes the algorithm’s 
steps. 
 
Fig. 1. Flow diagram of integrated PFG mechanism 
 
An AS that contributes resources in the blockchain is 
represented as a node or individual in the presented algorithm. 
Each participating AS may have one or more blockchain 
nodes – resources/devices allocated to be part of the 
processing required for the blockchain. These blockchain 
nodes are randomly distributed to the autonomous systems in 
the algorithm. Each node has a maximum number of resources 
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:15 UTC from IEEE Xplore.  Restrictions apply. 
that can be allocated for the blockchain and an initial number 
(starting with) of resources that can be allocated. 
The algorithm runs over a certain period of time (which 
can be variable) - period divided into rounds. In each round 
the steps of the PFG mechanism, as well as the 
complementary steps of the algorithm, are carried out. At the 
beginning of each round, an AS has a random number of 
transactions to process. The total value accumulated from each 
AS represents the transactions to be processed in the 
blockchain for the respective round. The processing of the 
mentioned transactions requires a contribution of necessary 
resources to cover this need. The necessary resources are 
calculated according to the number of transactions and their 
size. 
There is a verification step in which the resources needed 
by the blockchain for a round are compared with those that 
were made available by the autonomous systems through their 
nodes. If the resources allocated by them are sufficient, then 
the algorithm can proceed to the next round. Otherwise, the 
step of allocating resources must be performed again until the 
condition is met, in order to be able to have the processing 
needed for the transactions. At the end of the round there is 
also a correction stage, if needed. This stage takes into account 
the resources allocated to the blockchain by an AS in relation 
to the resources used from the blockchain and regulates the 
amount of resources that will be available to be allocated in 
the next round. The purpose of this correction is to balance the 
number of resources that autonomous systems allocate within 
blockchain of the coalition / federation and to stimulate a 
uniform behavior regarding the allocation of resources. This 
verification eliminates the situations in which one AS 
allocates most of the resources, and the others allocate only a 
minimum amount required, thus taking advantage of the 
generous resources offered by other participants. After the 
elapsed time period (number of rounds) the algorithm reaches 
the end, and the results can be analyzed. 
Following the initial simulations, a correction step was 
introduced which aims to maximize the benefits of 
participating in the coalition / federation. It has been observed 
that in some cases, if the number of blockchain nodes provided 
by each AS is more unbalanced, multi-node autonomous 
systems have a slower increase in coalition participation 
benefits than other autonomous systems. Therefore, a history 
has been introduced that monitors the benefit obtained by each 
service provider from participating in the coalition in the last 
three rounds. If the trend is not an ascending one and a 
stagnation of the benefit is noticed, with the help of the 
mentioned history, a recalibration of the available resources is 
used to be allocated in the next step. Thus, the current trend of 
the benefits is changed in an ascending one. 
The performance constraints of blockchain, regarding the 
number of transactions that can be processed per day, were 
also analyzed. Following this analysis, a step was 
implemented that moves the excess of transactions for one day 
(round) and propagates it to be processed in the next one, in 
addition to the transactions associated with the respective day. 
This step ensures the continuity of transaction processing by 
eliminating the risk that they will be lost and not processed. 
Thus, at the end of each round the surplus transactions are 
buffered for the next round. In this way the processing effort 
becomes more balanced, avoiding significant fluctuations 
over time and processing rounds. 
IV. SIMULATION 
For simulation it is considered that the coalition integrates 
a private blockchain that has as a starting point 10 nodes, as 
per analysis discussed in [13]. These blockchain nodes are 
randomly distributed to the parties (ASs) involved in the 
algorithm. The starting number of ASs is a random between 2 
and 4, having considered a distribution as balanced as possible 
but in the same time one that allows cases where an AS 
allocates a more significant number of resources than others. 
The amount of transactions to be processed per AS, a random 
value between 1000 and 2000 is considered, such a number 
falling in the minimum accepted values as described in [13]. 
Related to the simulation period, a round is considered to be 
the equivalent of a day. Thus, different simulation intervals 
can be achieved, helping for a better framing of the results 
over the course of time. In this way we can achieve 
information related to evolution in relation with time. For 
blockchain nodes in terms of processing resources, a value of 
1 GB is considered as initial resources and a value of 4 GB is 
considered as maximum resources that can be allocated. These 
values are considered based on the resources and performance 
of the network devices from recent time and having an 
approach that takes into consideration middle tier devices (not 
an approach with top tier devices). 
For better clarity and understanding of the results for the 
implemented algorithm, two more approaches were included 
for comparison. The standard algorithm used for comparison 
in game theory is tit-for-tat (TFT). This mechanism takes into 
account the actions of the other parties and adapts its action 
from the next round based on these actions. Thus, in our case 
if a party allocates resources for the federation's blockchain 
but the other does not allocate resources, the next round's 
action will be a punishment so no resources will be allocated. 
If the other participant party allocates resources then in the 
next round our party will allocate resources too. Because TFT 
mechanism does not always perform well and the results could 
go in a wrong way because of the punishments affecting the 
cooperation and the benefits, another improved mechanism 
was also considered. This second mechanism is called hybrid 
tit-for-tat (HTFT) and is different from TFT in a way that is 
not so strict in punishing a non-cooperative action. Thus, if a 
party allocates resources for the coalition's blockchain but the 
other party does not do this, our party has a chance (based on 
a probability) to forgive and not punish this behavior, so in the 
next round it will also allocate resources. In this way, there are 
more chances that this mechanism will not fall in the worst 
case scenario of the TFT mechanism and there are more 
chances for the cooperation and benefit not to be (so) affected. 
Considering what was already mentioned, in the next part 
the simulation results are presented. As mentioned before, our 
simulation period for the implemented algorithms is divided 
into time slots. A time slot is actually a simulation round and 
such a round is considered to be the time spent in a day. Thus, 
we have a classification of three categories from this point of 
view in order to paint the picture as clear as possible in regard 
to the results obtained: behavior simulation for a short time, 
for a medium amount of time and for a long time. Also, we try 
to obtain the best projection possible of the evolution in time. 
Besides the time period, the graphic shows the average 
value of the benefit for an AS to participate to coalition's 
blockchain for each round. For the short time interval 
simulation we considered periods of time of 1 month and 3 
months. These two intervals are presented in Figure 2. In the 
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:15 UTC from IEEE Xplore.  Restrictions apply. 
 
 
graphics it can be observed that PFG mechanism has a 
sustained growth over the whole simulation period. This fact 
shows that the benefit of an AS is maximized by the 
participation to blockchain together with the other ASs. When 
using TFT it can be observed that the benefit is a constant 
value that is maintained at 0. This means that an AS will not 
lose benefit by participation but will not gain benefit by 
participating either. When using HTFT on the other hand, it 
can be observed that a growth in benefit is assured when ASs 
cooperate. This growth is comparable for short term with the 
one assured by PFG, as the first graphic shows, but as the time 
period grows the results from PFG take off having a clearer 
growth. 
 
 
Fig. 2. PFG vs TFT vs HTFT (short term) 
 
The second category of simulation is the one made on 
medium time in regard to the length of the time period. This 
is presented in the graphic from Figure 3. 
The time periods for this category are 6 months and 1 year, 
respectively. When PFG mechanism is used the growth trend 
of maximizing benefit is maintained. It can also be observed 
that there is a constant growth over the whole simulation 
period, the benefit growing directly proportional with the 
simulation period. If the TFT mechanism is used, for one of 
the periods of time it can be observed that the same trend is 
maintained as for short term simulation. For the other period 
of time a negative case scenario is hit where the ASs lose 
benefit due to a faulty collaboration relation. This graphic 
presents the previously described case when TFT can affect 
collaboration in a wrong way if it goes on the wrong way with 
punishing actions. When HTFT mechanism is used, a growth 
of benefit over time is observed, but this growth is not 
comparable with growth provided by PFG mechanism. 
Besides this, the second graphic shows that even though 
HTFT maintains a better collaboration between the parties 
than the one in TFT, there are chances too that it will fall on a 
descending path the same as TFT does, even though these 
chances are more reduced. 
 
 
Fig. 3. PFG vs TFT vs HTFT (medium term) 
 
Figure 4 presents the third category presented. This is the 
simulation over a long period of time and the time intervals 
considered here are 2 and 5 years respectively. 
 
 
Fig. 4. PFG vs TFT vs HTFT (long term) 
 
Because the participation of an AS to a coalition that 
integrates a blockchain solution is viewed as a long term 
action, we need to see how this would perform in terms of the 
long term benefits obtained. In this way we can find out if the 
effort of collaboration is justified and brings a positive 
contribution. The presented graphics help in finding the 
answer to this. When the algorithm that implements PFG is 
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:15 UTC from IEEE Xplore.  Restrictions apply. 
used it can be observed that the benefit growth maintains for 
long periods of time too. Another thing is that this growth is 
in a constant way and is a linear (stable) growth. When TFT 
is used it can be observed that same linear stagnation on the 0 
value is maintained, but there is the case in the second graphic 
that shows that TFT can also take a favorable path where there 
is a healthy cooperation so TFT provides a growth in benefit. 
Anyway, the results obtained are not on the same level with 
those obtained by PFG. When HTFT is used it can be observed 
that there is a growth of benefit over time, but the growth 
provided here is not as big as what PFG offers. 
Based on the presented graphics it can be observed that 
PFG assures a benefit growth that demonstrates that the 
collaboration done in a healthy way in integrating a 
blockchain benefits all parties. Besides the growth, the 
consistency provided in growth by the PFG mechanism can 
also be observed. PFG also takes into consideration that some 
actions could affect the growth of benefit for some participants 
so it limits and discourages these behaviors so the growth can 
be beneficial in the most favorable way to all participants. 
These facts cand be observed in Figure 5. This graphic 
compares the evolutions of PFG for every simulation period 
based on the average value of benefit per AS at every step. It 
can be observed with ease that PFG is constant and linear in 
growth by overlapping the simulations. This only strengthens 
the belief that a good and correct collaboration provides 
benefits over time. 
 
Fig. 5. Simulation comparison in regard to all time periods 
 
V. CONCLUSIONS 
The paper studies the feasibility of building a shared AS 
blockchain infrastructure employing a collaborative game 
theory approach. Using game theory, a mathematical model 
was used to analyze the interactions between different 
autonomous systems (AS) in the context of blockchain 
technology. The games chosen are in the category of 
cooperative games, where multiple actors cooperate and form 
a coalition which they join or leave based upon their payoffs / 
reward. A PFG based algorithm and its payoff function were 
proposed and derived from the analyzed parameters. The 
feasibility of integrating a blockchain solution in a federation 
of ASs was demonstrated. 
In our simulation we have learned that if there is a 
discrepancy between the number of resources (blockchain 
nodes) allocated by the ASs for the coalition's blockchain 
there is also a difference in benefit growth for the ASs. In 
regard to the PFG approach, it was shown that there is no 
correlation in the number of nodes an AS provides and the 
increase in benefits and a maximization over time. However, 
there is a significant difference between the number of 
resources allocated by ASs, the AS that will participate with 
more nodes will have a slower increase in benefits than the 
other ASs. This happens due to the fact the amount of 
resources the blockchain offers for the AS with a higher 
allocation of resources is lower compared to the other ASs. 
Thus, if the amount of resources allocated for blockchain is 
similar for all ASs, the benefit maximization rate will also be 
similar. However, the actors that offer more resources are 
slightly disadvantaged. As a future work, a mechanism should 
be added to protect and promote this type of actors, so as to 
maximize their benefits. In this way the PFG mechanism will 
have stability over all areas. 
The feasibility of integrating a blockchain solution in a 
federation of ASs was demonstrated by developing a PFG 
based algorithm and its associate payoff function and by 
comparing the proposed approach with two other games. 
ACKNOWLEDGMNENT 
This research was partially supported by grant no 
25391/7.10.2020, Study of security solutions for 
communication networks in FinTech, TUCN, 2020-2021. 
REFERENCES 
[1] R.B. Myerson, Game Theory: Analysis of Conflict, Harvard University 
Press, p. 1, 1991. 
[2] M.D. Davis, Game theory mathematics, 
https://www.britannica.com/science/game-theory. 
[3] M. Arghavani, M. Karampanah, S. Abasi and R. Rezaee, „Incitement 
rational nodes to cooperation in wireless networks based on IPD 
game,” 2013 Tenth International Conference on Wireless and Optical 
Communications Networks (WOCN), 2013, pp. 1-4, doi: 10.1. 
[4] S.N Durlauf and L.E. Blume, Computer Science and Game Theory. In: 
Durlauf S.N., Blume L.E. (eds) Game Theory. The New Palgrave 
Economics Collection. Palgrave Macmillan, London, 2010. 
[5] D. Charilas and A. Panagopoulos, A survey on game theory 
applications in wireless networks. Comput. Netw. 54, 18, pp. 3421– 
3430, 2010. 
[6] V. Kakkad, H. Shah, R. Patel and N. Doshi, A Comparative study of 
applications of Game Theory in Cyber Security and Cloud Computing, 
Procedia Computer Science, Volume 155, Pages 680-685, 2019. 
[7] M. Shor, “Non-Cooperative Game”, 
https://www.gametheory.net/dictionary/Non-CooperativeGame.html 
[8] A.M. Antonopoulos, Mastering Bitcoin: Unlocking digital 
cryptocurrencies, O’Reilly Media, Inc., First Edition, December 2014. 
[9] A. Sabou and D. Gorgan, "Remote interactive visualization for 
particle-based simulations on graphics clusters," 2017 40th 
International Convention on Information and Communication 
Technology, Electronics and Microelectronics (MIPRO), 2017, pp. 
253-258, doi: 10.23919/MIPRO.2017.7973429. 
[10] Y. Chen and K. J. R. Liu, "Indirect Reciprocity Game Modelling for 
Cooperation Stimulation in Cognitive Networks," in IEEE 
Transactions on Communications, vol. 59, no. 1, pp. 159-168, January 
2011, doi: 10.1109/TCOMM.2010.110310.100143. 
[11] W. Saad, Z. Han and H. V. Poor, „Coalitional Game Theory for 
Cooperative Micro-Grid Distribution Networks,” 2011 IEEE 
International Conference on Communications Workshops (ICC), 2011, 
pp. 1-5, doi: 10.1109/iccw.2011.5963577. 
[12] L. Yin, H. Lu, Y. Cao and J. Gao, „Cooperation in delay tolerant 
networks,” 2010 2nd International Conference on Signal Processing 
Systems, 2010, pp. V1-202-V1-205, doi: 
10.1109/ICSPS.2010.5555572.] 
[13] P. Brody, A. Holmes, E. Wolfsohn and J. Frechette, “Total cost of 
ownership for blockchain solutions”, EY whitepaper, April 2019 
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:58:15 UTC from IEEE Xplore.  Restrictions apply.