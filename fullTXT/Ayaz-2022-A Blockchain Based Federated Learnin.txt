A Blockchain Based Federated Learning for Message Dissemination in Vehicular Networks
IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 2, FEBRUARY 2022 1927
A Blockchain Based Federated Learning for Message
Dissemination in Vehicular Networks
Ferheen Ayaz , Graduate Student Member, IEEE, Zhengguo Sheng , Senior Member, IEEE,
Daxin Tian , Senior Member, IEEE, and Yong Liang Guan , Senior Member, IEEE
Abstract—Message exchange among vehicles plays an important
role in ensuring road safety. Emergency message dissemination is
usually carried out by broadcasting. However, high vehicle density
and mobility lead to challenges in message dissemination such
as broadcasting storm and low probability of packet reception.
This paper proposes a federated learning based blockchain-assisted
message dissemination solution. Similar to the incentive-based
Proof-of-Work consensus in blockchain, vehicles compete to be-
come a relay node (miner) by processing the proposed Proof-
of-Federated-Learning (PoFL) consensus which is embedded in
the smart contract of blockchain. Both theoretical and practical
analysis of the proposed solution are provided. Specifically, the
proposed blockchain based federated learning results in more
vehicles uploading their models in a given time, which can poten-
tially lead to a more accurate model in less time as compared to
the same solution without using blockchain. It also outperforms
other blockchain approaches in reducing 65.2% of time delay in
consensus, improving at least 8.2% message delivery rate and pre-
serving privacy of neighbor vehicle more efficiently. The economic
model to incentivize vehicles participating in federated learning
and message dissemination is further analyzed using Stackelberg
game. The analysis of asymptotic complexity proves PoFL as the
most scalable solution compared to other consensus algorithms in
vehicular networks.
Index Terms—Blockchain, federated learning, smart contract.
I. INTRODUCTION
TRADITIONAL Vehicular Ad-hoc NETwork (VANET) is
growing into Internet-of-Vehicles (IoV) to manage large
amounts of data transmission, computation & storage and to
meet the increasing requirements of infotainment and road
Manuscript received March 3, 2021; revised May 22, 2021 and September
26, 2021; accepted November 28, 2021. Date of publication December 2, 2021;
date of current version February 14, 2022. This work was supported in part
by the European Union’s Horizon 2020 research, and innovation programme
under the Marie Skłodowska-Curie under Grant 101006411, in part by the
Newton Advanced Fellowship under Grant 62061130221, in part by the National
Natural Science Foundation of China under Grants U20A20155, 61822101, and
62173012, in part by the Beijing Municipal Natural Science Foundation under
Grant L191001, and in part by the A*STAR under its RIE2020 Advanced Man-
ufacturing, and Engineering (AME) Industry Alignment Fund–Pre Positioning
(IAF-PP) under Grant A19D6a0053. The review of this article was coordinated
by Dr. Yan Zhang. (Corresponding authors: Daxin Tian.)
Ferheen Ayaz and Zhengguo Sheng are with the Department of Engineer-
ing and Design, University of Sussex, Brighton BN1 9RH, U.K. (e-mail:
f.ayaz@sussex.ac.uk; z.sheng@sussex.ac.uk).
Daxin Tian is with the School of Transportation Science and Engineering,
Beihang University, Beijing 100191, China (e-mail: dtian@buaa.edu.cn).
Yong Liang Guan is with the School of Electrical and Electronic Engineer-
ing, Nanyang Technological University, Singapore 639798, Singapore (e-mail:
eylguan@ntu.edu.sg).
Digital Object Identifier 10.1109/TVT.2021.3132226
safety [1]. An IoV enables Vehicle-to-Everything (V2X) com-
munications including Vehicle-to-Vehicle (V2V) and Vehicle-
to-Infrastructure (V2I) communications. V2I communication
usually refers to an infrastructure dependent VANET, where
a cellular base station or a Road Side Unit (RSU) is used to
provide a real-time and reliable traffic information. However, a
large number of RSUs to provide full coverage in urban areas and
high traffic densities require huge installation and maintenance
cost [2]. Therefore, effective and reliable infrastructure-less
V2V communication is necessary in emergency situations such
as accidents and traffic jams, so that traffic information can be
exchanged in real time, even if RSU is out of reach. In V2V
communications, multi-hop relaying is one of the challenges to
successfully deliver a message over a wide area. Optimal relay
selection mechanisms result in better coverage, more reliable
connectivity and less communication overhead [3]. Various
intelligent relay selection schemes depending on a vehicle’s
distance from predecessor, moving direction, speed and prop-
agation loss in environment have been proposed using fuzzy
logic [4] or machine learning algorithms [5]. Existing litera-
ture shows improved packet delivery ratio by machine learning
algorithms in multi-hop V2V communications [6]. However,
artificial intelligence methods require huge processing power
and are often not suitable for a fully distributed architecture [7].
In a traditional centralized architecture of machine learning,
the data collected by mobile devices is uploaded and processed
in a cloud based server to produce inference models [8]. With
potentially large number of autonomous vehicles, where real-
time decisions have to be made within a restricted time period,
a cloud-centric approach is unable to offer acceptable latency
and scalability. Also, a centralized architecture requires full
connectivity which is challenging for vehicular networks. Fed-
erated learning (FL) is a distributed machine learning approach,
in which mobile devices collect data and train their individual
machine learning or deep learning models, called local models.
They send their local models (i.e., models’ weights) to an
aggregator. The aggregator averages local models and produces
a global model. Mobile devices further train the global model
individually to create updated local models and submit them
to aggregator. The steps are repeated in multiple iterations
until a desired accuracy of global model is achieved [9]. FL
is considered as a feasible solution for safety and time critical
applications involving autonomous vehicles [10].
Despite offering a distributed approach, FL still relies on a
central aggregator. Furthermore, it needs a sustainable economic
0018-9545 © 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0003-3905-675X
https://orcid.org/0000-0003-2143-4003
https://orcid.org/0000-0001-7796-5650
https://orcid.org/0000-0002-9757-630X
mailto:f.ayaz@sussex.ac.uk
mailto:z.sheng@sussex.ac.uk
mailto:dtian@buaa.edu.cn
mailto:eylguan@ntu.edu.sg
1928 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 2, FEBRUARY 2022
Fig. 1. Parallel addition of microblocks to resolve forks in blockchain in vehicular networks. (a) Fork (parallel blocks) in linear blockchain. (b) Parallel microblocks
and linear keyblock.
TABLE I
FL ISSUES & BLOCKCHAIN SOLUTIONS
model to incentivize mobile devices based on their contributions
and prevent adversary attacks. For example, in IoV, a malicious
vehicle may deliberately modify data, causing poisoning at-
tack [11] or a selfish vehicle may not cooperate in data collection
resulting in inaccurate weights of a local model. Blockchain can
be used with FL to provide a decentralized solution, for manag-
ing incentives and ensuring security and privacy in a trustworthy
manner [12]. A blockchain is a distributed ledger of immutable
blocks which are added after undergoing a set of rules called
consensus [13]. Due to its decentralized nature, blockchain com-
plements both FL and IoV [14]. Furthermore, smart contracts,
which are self executing scripts stored in blockchain to enforce
a set of rules, allow automation of multi-step processes and
interaction among mobile devices [15]. Therefore, they can be
used to set rules for protecting FL from adversary and security
attacks. The process of transaction verification in blockchain
can also be utilized to validate local models in FL [16]. Table I
summarizes the current issues of FL in IoV and corresponding
solutions provided by blockchain.
Practical implementation of blockchain in vehicular networks
is challenging. Due to limited connectivity duration in V2V
communications, moving vehicles may not always have an
updated blockchain ledger, which leads to possibility of multiple
blocks added in parallel, called forks, as shown in Fig. 1(a). With
presence of forks, it is difficult for all vehicles in a network to
attain a synchronized linear structure of ledger. As a common
practice, blockchain picks one of the parallel blocks to continue,
and meanwhile, disqualifies other forking blocks by longest
chain acceptance protocol [17]. Forks also lead to creation of
malicious chains [18]. To address this issue, the hierarchical
structure of blockchain is proposed for vehicles in [19]–[20]. In
a hierarchical structure, there are two types of blocks: keyblock
and microblock. Instead of a linear ledger, microblocks rep-
resenting off-chain transactions are added in parallel, whereas
keyblocks are main blocks which are appended horizontally in
a blockchain by a leader or a central node, for example, RSU.
As shown in Fig. 1(b), parallel addition of microblocks does
not disturb the main linear ledger and forks are not disqualified
but accepted as off-chain micro-transactions recorded in a de-
centralized manner. In this paper, we propose a decentralized
message dissemination solution using a hierarchical blockchain
based FL process. The vehicles train local models and RSU acts
as aggregator to consolidate the global model. The process uses
blockchain for updating local models in a decentralized manner.
The main contributions of the paper are:
� We propose a blockchain based FL process in vehicular
networks, where a smart contract is used to control ad-
versary attacks by malicious and selfish vehicles. Lower
Mean Squared Error (MSE) in less number of iterations
is achieved by the global model produced through FL
if security check is enforced by the smart contract. An
economic model to incentivize relay nodes and vehicles
participating in FL process is also presented together with
its analysis using Stackelberg game.
� Theoretical and simulation analysis in presence and ab-
sence of blockchain are presented. In a given time slot,
the number of local models uploaded through blockchain
based FL are higher than a centralized approach without
blockchain, which concludes that the proposed solution
can achieve greater accuracy within less time.
� We propose a Proof-of-FL (PoFL) consensus for a
blockchain-based multi-hop relay selection scheme in V2V
communications. PoFL results averagely in a reduced time
delay per hop by 65.2%, an improved message delivery ra-
tio by at least 8.2% and a more privacy-preserving approach
as compared to other blockchain approaches suitable for
message dissemination.
The rest of the paper is organized as follows. Section II de-
scribes related work. Section III explains the proposed solution
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: BLOCKCHAIN BASED FEDERATED LEARNING FOR MESSAGE DISSEMINATION IN VEHICULAR NETWORKS 1929
of blockchain based FL and PoFL based message dissemination
with discussion on its privacy feature. Section IV theoretically
analyzes training capacity of FL and the proposed economic
model. Simulation results and conclusion are presented in Sec-
tion V and Section VI respectively.
II. RELATED WORK
A. Multi-Hop Relay Selection
Relay selection in V2V communications plays a crucial role in
message broadcasting. An inappropriate relay may cause unac-
ceptable latency or sometimes failure in delivering a message to
a desired number of vehicles or area. Probabilistic calculations
are usually used to predict either the distance [21] or link
stability [22] of a relay node. In [20], a Proof-of-Quality-Factor
(PoQF) is established using probabilistic estimation of both dis-
tance and Signal to Noise Interference Ratio (SINR) as a merit of
relay node selection. However, probabilistic predictions rely on
certain approximations, for example, number of vehicles within
a transmission range, which may not be highly accurate with
varying speeds. In [23] and [24], the combination of distance of
a vehicle from previous sender and channel quality parameters
are used to determine link stability for relay node selection. It is
crucial to set weights of all parameters according to their impacts
on message delivery in a network.
To make relay selection more adaptive to network changes, ar-
tificial intelligence based mechanisms are designed. Fuzzy logic
has been used in [4] and [25], which makes decision according
to distance, moving direction and speed of vehicles. However,
fuzzy logic is also dependent on thresholds and weights to
be set in the rule base for making inferences. In [5], satellite
images are used to detect buildings and obstacles to enable
machine learning driven channel characterization. The path with
lowest propagation loss is used for message dissemination in [5].
RSU assisted deep learning based technique is developed for
relay selection in [7]. It is pointed out that machine learning
and deep learning algorithms require large processing power to
handle huge amount of data and therefore they must require V2I
communications and infrastructure support for implementation.
B. FL in Vehicular Networks
FL is suggested as a promising technique to securely train
intelligent models across smart cars [10] and Unmanned Aerial
Vehicles (UAVs) [26]. It has the feature of reducing network la-
tency by dividing training task among network edges. In cellular-
V2X (C-V2X) communications, FL is proposed to reduce failure
probability by intelligently offloading high computation tasks
to nearby base stations [27]. Resource allocation and sharing in
C-V2X by FL among vehicles has promised better coverage and
Quality-of-Service (QoS) in [28]. FL and fog-assisted V2X is
presented in [29] to improve driving experience of autonomous
vehicles by providing user-end services, for example, car shar-
ing, intelligent parking allocation, infotainment and e-commerce
applications. In [30], FL is used to tackle energy transfer issues
of electric vehicles at charging stations and has resulted in
improved accuracy of energy demand prediction. FL assisted
TABLE II
MULTI-HOP RELAY SELECTION CHALLENGES AND SOLUTIONS OFFERED BY
BLOCKCHAIN-BASED FL
blockchain is proposed in [14] to adjust block arrival rate in
order to reduce communication latency and consensus delay
among vehicles. Applications of FL in vehicular networks are
summarized in [31] and most of the recent applications focus
on resource management, performance optimization in com-
puting tasks and user-end services. However, FL can also be
promising in message delivery and relay node selection. Table II
summarizes the challenges of existing multi-hop relay selection
schemes and solutions offered by blockchain-based FL.
C. Economic Modeling in FL
Economic models to strategize incentives and to promote
mobile devices for producing reliable local models have been
developed. For a blockchain based FL in [14], the authors have
suggested to incentivize vehicles for both model training and
block mining. A joint price and reputation based economic
model is proposed in [11] to incentivize devices according to
the size of data contributed and prevent poisoning attack. The
economic model is analyzed using Contract Theory. In Contract
Theory, the contracts are formed between a payer and a service
provider (i.e., devices training local models) before initiation
of FL process. FL among vehicles for image classification is
proposed in [32] and contracts are formulated to incentivize
vehicles in proportion to the number of images used and amount
of computation resources consumed.
Stackelberg game approach is used in [33] and [34] to analyze
the actions of players when incentives are distributed after FL
iterations are completed. If relay nodes are involved in incentive
distribution among vehicles, the economic model is more suited
to be analyzed using Stackelberg game model. Due to varying
speed and position of vehicles, it is practically better to select an
appropriate relay node after a message is originated. Therefore,
analysis using Stackelberg game model is a more feasible option
for multi-hop relay selection scheme than Contract Theory, be-
cause formation of contract prior to FL process initiation or relay
selection cannot be materialized. The existing literature assumes
information asymmetry, i.e., the payer is not aware of the amount
of contributions (for example, data size) upon which the payment
is to be made. However, with public blockchain, where stored
transactions are visible to every member of blockchain, FL can
be a case of symmetric information, i.e., the relevant information
is known to all associated members.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
1930 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 2, FEBRUARY 2022
Fig. 2. The proposed solution of blockchain based FL for message dissemination in vehicular networks. (a) The proposed steps for vehicles and RSU.
(b) Blockchain-based FL and Message Dissemination.
III. THE PROPOSED SOLUTION
As illustrated in Fig. 2, the proposed solution consists of a
blockchain-based FL process and a solution for multi-hop relay
selection. The FL process is aimed to form a global model which
is later used as a consensus to select a relay node (RLY ) when
an incident message is originated by a vehicle. Overall, the
proposed approach consists of two major parts:
1) FL integrated with blockchain, where vehicles take part in
a blockchain based FL process to form a global model for
relay node selection, and
2) PoFL based message dissemination, where the global
model produced in first part is used to find vehicles’
eligibility to become a relay node. Table III lists the key
notations used in this paper.
A. Blockchain Based FL
Elements asscociated with FL.
� Hello Packet by designated vehicle: A Central Authority
appoints some designated vehicles to regularly originate
a Hello packet and share their position to initiate dataset
collection by vehicles participating in FL. Only the desig-
nated vehicles are allowed to originate Hello packets. The
motivation behind designated vehicles is two fold: first is
because they are trusted by Central Authority to honestly
send their actual position without any malicious change and
second is because the encrypted identities of designated
vehicles are already shared with other vehicles, so Hello
packet from any other identity is not recognized by the
network. Designated vehicles can either be representatives
of Central Authority or selected from the existing network
based on their trust ratings. Calculations and storage of
trust ratings are out of the scope of this paper but can be
managed by a separate blockchain.
� Dataset: It refers to the data samples collected by vehi-
cle i for training local model. In the proposed solution,
dataset collected by vehicle i includes multi-hop relay
selection parameters. After forwarding a Hello packet,
dataset collected by vehicle i consists of the following
parameters mentioned in Table III: di,s, distance from
sender s (designated vehicle or previous relay node). diri,s,
TABLE III
KEY NOTATIONS
moving direction (either towards or away from sender
s). vi, speed at the time of forwarding message. h, hop
number. γi, traffic density within its transmission range
andNA, number of acknowledgments received as the score
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: BLOCKCHAIN BASED FEDERATED LEARNING FOR MESSAGE DISSEMINATION IN VEHICULAR NETWORKS 1931
of relaying. γi in dataset can be pre-specified by Central
Authority or estimated by counting average number of
vehicles sending beacon messages per meter [35]. The
process of dataset collection is explained in detail later
in this section. The motivation behind individual dataset
collection by each vehicle is two-fold. First, the datasets
are not shared among vehicles to protect privacy. Second,
vehicles training their local models on different dataset
brings diversity in learning, so an efficient global model is
created.
� Local Model: Each vehicle i participating in FL trains a
Deep Neural Network based local model.
� Global Model: It is an aggregated model ofN local models,
whereN also refers to the number of vehicles participating
in FL. In our proposed system, RSU collects N local
models and aggregates them to form a global model.
Adversary. We consider the following adversary threats:
� Malicious Vehicles: They may deliberately change or inject
false data so that local model is not trained accurately. This
phenomenon is also known as poisoning attack [11].
� Selfish Vehicles: They may not send acknowledgment mes-
sages despite receiving forwarded messages. Therefore,
NA cannot be recorded correctly during dataset collection,
leading to an inaccurate local model produced by vehicle
i.
FL Blockchain and Its Components. FL blockchain is a
blockchain used by vehicles and RSUs to store local and global
models as blocks. Its main components include
� Security Check: It is a machine learning algorithm embed-
ded in smart contract of FL blockchain to detect adversary
before a local model is uploaded as a block by vehicle i.
� Microblock: A local model is stored in FL blockchain
as a microblock after undergoing a security check. A
microblock is added in parallel to other microblocks, all
containing hash of previous keyblock.
� Keyblock: A global model is stored in FL blockchain at
RSU in the form of a keyblock, containing hashes of
previous N microblocks.
As shown in Fig. 1, the proposed blockchain based FL consists
of the following three stages:
1) Stage 1: Dataset Collection and Local Model Training: In
this stage, vehicles collect dataset for training. Upon receiving
a Hello packet from a designated vehicle, a vehicle i which
aims to collect dataset, generates a random waiting time. When
the waiting time is complete, it forwards a Hello packet with
its encrypted identity. The reason behind a random waiting
time is to prevent multiple vehicles from transmitting at the
same time and avoid packet collision. The limits and probability
distribution of random waiting time are described in [20]. The
vehicles which receive the forwarded Hello packet for the first
time share their acknowledgment. An acknowledgment packet
contains encrypted identity of vehicle i, so that it can collect
dataset. A vehicle j, which participates in FL, will broadcast
the received Hello packet again after a random waiting time.
This process continues up to a specified number of hops, hmax,
as shown in Algorithm 1. Each vehicle produces a local model
Algorithm 1: FL Algorithm for vehicle i.
Input: Hello Packet, N vehicles
Output: Global Model
1: while h ≤ hmax do
2: Generate random waiting time
3: while Time elapsed ≤ random waiting time do
4: if Forwarded Hello packet received at h then
5: break
6: end if
7: end while
8: if Forwarded Hello packet not received at h then
9: Forward Hello packet
10: Count acknowledgment packages into NA
11: Record di,s, vi, diri,s, γi, NA in dataset
12: break
13: else
14: h = h+ 1
15: end if
16: end while
17: if data size == si then
18: Train local model
19: else
20: Go to 1
21: end if
22: while k ≤ kmax do
23: Upload local model through smart contract
24: Receive updated global model
25: Re-train local model
26: k = k + 1
27: end while
based on Deep Neural Network with 7 hidden layers and 256
neurons in each layer.
2) Stage 2: Security Check and FL Blockchain Update: A
vehicle i shares its local model with the network by adding it into
FL blockchain as a microblock. It is added after passing through
a security check performed by the smart contract embedded in
FL blockchain. The proposed security check employs a machine
learning algorithm called Isolation Forest [36] to detect anomaly
in a local model caused by adversary. Isolation Forest is used
because it only requires a small number of samples for training.
A true sample of dataset is provided by the Central Authority for
its initial training. Later, it can be used in a fully unsupervised
manner to detect anomaly. Moreover, it is computationally ef-
ficient and has low memory requirement [37]. We have used
the security check in three ways. Firstly, the security check
on dataset is conducted by finding anomalies in dataset of
each vehicle. Secondly, the security check performs anomaly
detection on weights of local models. If a malicious vehicle
i deliberately changes its dataset for training its local model
but shares a true dataset in smart contract, the adversary attack
will be detected by anomaly detection on weights. Thirdly, the
security check on both dataset and weights is performed. If local
models successfully pass the security check, they are added in FL
blockchain in the form of parallel microblocks. The microblock
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
1932 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 2, FEBRUARY 2022
Algorithm 2: Message Dissemination Algorithm for vehicle
i.
Input: Incident message, global model
Output: New block announcement in message
blockchain
1: while h ≤ hmax do
2: Compute score from global model
3: timer expiry limit = 1/score
4: while Time elapsed ≤ timer expiry limit do
5: if New block announced then
6: break
7: end if
8: end while
9: if New block not announced then
10: Announce block
11: break
12: else
13: h = h+ 1
14: end if
15: end while
announcement is broadcasted by vehicle i and the receiving
vehicles will then update their copy of FL blockchain. Vehicles
can exchange new microblock updates with their neighbors
regularly.
3) Stage 3: Global Model Aggregation: Whenever a vehicle
i finds an RSU available in its transmission range, it shares
its updated copy of FL blockchain. When N microblocks are
received by RSU in FL blockchain, it aggregates local models
into a global model and uploads it into a keyblock.
All stages are repeated at each iteration. The goal is to repeat
the process up to kmax iterations for minimizing global loss
function L(wwwk
G), which is defined as
L(wwwk
G) =
1
N
N∑
i=1
L(wwwk
i ). (1)
where wwwk
G are weights of global model, L(wwwk
i ) is the loss
function of local model i and wwwk
i are its corresponding weights
at kth iteration. Neural networks commonly use MSE as the loss
function [10]. The value ofkmax is adjusted by Central Authority
to achieve the minimum possible or desired L(wwwkmax
G ) [9].
B. PoFL Based Message Dissemination
The main elements of this part include
� Incident Message: It is a message initiated by an originating
vehicle (ORG) in an emergency situation, for example,
incident or traffic jam. It contains time and position of
incident and encrypted identity of ORG.
� PoFL: It is the consensus to select RLY for forwarding
an incident message. Global model contained in the latest
keyblock of FL blockchain is used as PoFL. It is run by a
smart contract of message blockchain.
� Message Blockchain: It contains history of incident mes-
sages. The selected RLY adds a block in the message
TABLE IV
PARAMETER-SHARING REQUIRED FROM NEIGHBOR VEHICLES IN MULTI-HOP
RELAY SELECTION
blockchain containing the forwarded incident message.
The block also contains time, location and encrypted iden-
tity of the RLY which adds the block. The motivation
behind message blockchain is to record forwarded incident
messages as immutable blocks and avoid discrepancies in
allocating incentive to RLY at each hop.
When an incident message is initiated by ORG, all receiving
vehicles attempt to become the RLY by competing through
PoFL consensus. Each vehicle i runs PoFL consensus to find its
score of being RLY , as shown in Algorithm 2. PoFL is aimed
to assign the highest score to the most appropriate vehicle as
RLY . The smart contract starts a timer whose length is inversely
proportional to the score of vehicle i. As shown in Fig. 4, a block
is added in the message blockchain and a block announcement
with the forwarded incident message is initiated by vehicle i if
its timer first expires. In this case, vehicle i is assigned as a relay
node RLY at h = 1. All other vehicles continue to compete for
becoming RLY at further hops until the message is forwarded
up to hmax number of hops.
a) Privacy of PoFL based Message Dissemination: Table IV
lists the parameters required to be shared by neighbor vehicles
in various multi-hop relay selection approaches. The position,
speed and heading direction of vehicles are regularly shared
in VANETs using beacon messages and thus create a threat
to privacy [38]. The proposed approach does not require such
information from all neighbor vehicles and can therefore be
considered as a privacy-preserving solution. The position and
direction of only sender is required for dataset collection in
blockchain based FL and for calculating score of relaying
in PoFL based message dissemination. However, identities of
vehicles are kept anonymous using encryption. Disclosure of
identities through brute force attack is a possibility but it will not
be very effective for the attacker. Due to high time complexity
of brute force attack [39], the position, speed and direction of a
vehicle will be changed until its identity is disclosed. In case of
high probability of brute force attack, a private blockchain with
only trusted vehicles [23] or timely refreshing of cryptographic
identities is recommended [40].
IV. THEORETICAL ANALYSIS
A. Training Capacity of FL
This subsection is aimed to analyze the capacity of FL
blockchain to complete one FL iteration in a given amount of
time, compared with the same process without blockchain. FL
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: BLOCKCHAIN BASED FEDERATED LEARNING FOR MESSAGE DISSEMINATION IN VEHICULAR NETWORKS 1933
Fig. 3. The proposed stages in blockchain based FL.
Fig. 4. Flowchart of actions by vehicle i according to PoFL based Message
Dissemination.
without blockchain is referred to as a centralized approach in
which each vehicle i submits its local model directly to RSU
instead of uploading it into FL blockchain. As the convergence
performance of FL improves with increasing number of local
models [41], FL via blockchain is expected to achieve greater
accuracy, provided the number of uploaded local models are
higher as compared to the process carried out without blockchain
within the same time period.
1) FL With Blockchain: Let TS be a time slot in which a
vehicle i is required to upload its local model as microblock
in FL blockchain, after it has completed training and passed its
local model through security check. Let λMB be the microblock
arrival rate at RSU or throughput in microblocks/s. Detailed
derivation of λMB can be found in [20]. If microblock arrival
is modeled using Poisson distribution as defined in [18], the
expected number of vehicles able to upload thier local models
via FL blockchain in TS can be given as [42]
E(NB) =
λMBTS∑
l=1
le−λMBTS (λMBTS)
l
l!
. (2)
Fig. 5. Distance between vehicle and RSU.
2) FL without Blockchain: If vehicles are required to upload
their models directly to RSU without blockchain, then it is
necessary that either RSU is in their transmission range or they
are able to reach towards RSU within TS. Consider a general
and dynamic movement of vehicles, the position of vehicles on
road follows Poisson distribution, λV vehicles/m2 is assumed as
the density of vehicles on a two dimensional road segment with
no separation of lanes [43], the expected number of vehicles
with RSU in their transmission range is
E(NV ) =
λV πR2∑
l=1
le−λV πR2 (λV πR
2)l
l!
, (3)
where transmission range is assumed as a uniform circle with
radius R. Similarly, the expected number of moving vehicles
with RSU not currently in their transmission range but can travel
to reach RSU within TS is
E(NMV ) =
TS
µd−Rμv∑
l=1
le
− TS
µd−Rμv
( TS
μd−Rμv)
l
l!
, (4)
where μd > R is the mean distance of those vehicles from RSU
which do not have RSU within their transmission range, as
shown in Fig. 5 and μv is their average speed. Therefore, the
expected number of vehicles able to upload their local models
to RSU without blockchain during TS is
E(NWB) = E(NV ) + E(NMV ). (5)
B. Economic Model
In this subsection, we define an economic model of payment
to vehicles contributing in FL and message dissemination. The
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
1934 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 2, FEBRUARY 2022
TABLE V
REWARD GAINED AND PAYMENT MADE BY PLAYERS
feasibility of economic model is analyzed by investigating strate-
gic behavior of RLY s and vehicles participating in FL based on
their expected utilities through Stackelberg game model.
1) Stackelberg Game Formulation: The Stackelberg game
model consists of three types of players: ORG, RLY partic-
ipating in message dissemination and vehicle i participating
in FL. For each incident message initiated by ORG, there are
NRLY number of RLY s which forward the incident message
and N vehicles in the network which train their local models
during blockchain based FL. The proposed economic model is
formulated as a two-stage Stackelberg game. First, at stage 1,
ORG pays reward toRLY s for forwarding message. At stage 2,
RLY s pay reward to N vehicles for participating in FL to form
a global model of RLY selection. Since, both FL and message
dissemination processes are blockchain-based, the contribution
of players is stored as immutable timestamped blocks and cannot
be altered through cheating. The transactions of incentives are
also processed automatically in the form of blockchain based
virtual currency through smart contracts.
As shown in Table V, the reward to N vehicles is paid in
proportion to the sizes of dataset they have used in training their
local models. Assume that the dataset sizes of N vehicles are
sss = {s1, s2, . . .., sN}. The utility of each vehicle i participating
in FL process is
Ui(si, I) = NRLY Isi − C(si), (6)
where I denotes incentive which is constant for every vehicle i
and C(si) is the computational cost of training a local model on
dataset of size si and is modeled as a quadratic function, i.e.,
C(si) = αis
2
i , (7)
where αi > 0 denotes cost co-efficient of vehicle i [44]. The
utility of each RLY is
URLY (sss, I) = βlog(1 + I)−
N∑
i=1
I · si, (8)
where βlog(1 + I) is paid by ORG for forwarding the incident
message. Here β > 0 and can be assumed as a compensation
amount paid to RLY s present in an area affected by an incident
or traffic jam caused by ORG.
2) Stackelberg Game Analysis: We consider the case of in-
formation symmetry where every RLY knows data size used by
each vehicle i prior to forwarding a message.
Definition 1: Assume that s∗i is the optimal data size for each
vehicle i and I∗ is the optimal incentive amount per data size paid
by each RLY to vehicle i, then (s∗i , I
∗) is the Nash equilibrium
point which satisfies the following conditions
Ui(s
∗
i , I
∗) ≥ Ui(si, I
∗), (9)
and
URLY (s
∗
i , I
∗) ≥ URLY (s
∗
i , I). (10)
Theorem 1: There exists a Nash equilibrium point for a
vehicle i with Ui defined in (6).
Proof: For a fixed I∗, Ui is
Ui(si, I
∗) = NRLY · I∗ · si − αis
2
i . (11)
The first-order derivative of (11) is
∂Ui(si, I
∗)
∂si
= NRLY · I∗ − 2αisi. (12)
The second-order derivative of (11) is
∂2Ui(si, I
∗)
∂s2
i
= −2αi. (13)
Since αi > 0, the second-order derivative of Ui is negative
and Ui(si, I
∗) is a strictly concave function, which proves the
existence of Nash equilibrium.
Theorem 2: There exists a Nash equilibrium point for RLY
with URLY defined in (8).
Proof: The first-order derivative of (8) is
∂URLY (sss, I)
∂I
=
β
1 + I
−
N∑
i=1
si. (14)
The second-order derivative of (8) is
∂2URLY (sss, I)
∂I2
=
−β
(1 + I)2
. (15)
Since β > 0 and (1 + I)2 > 0, the second-order derivative of
URLY is negative and URLY (sss, I) is a strictly concave function,
which proves the existence of Nash equilibrium.
Based on Theorem 1 and Theorem 2, we can state that the
unique Stackelberg Nash equilibrium point of our model exists.
The Central Authority is responsible to choose values of I and β
such that Nash equilibrium points for all N vehicles and RLY s
become their best response strategies (i.e, Ui > 0 and URLY >
0) and all players are willing to cooperate in the proposed game.
The proposed economic model assumes information sym-
metry, i.e., all players have complete information about si. If
private blockchain is used, complete information may not be
visible to every player and the economic model will be informa-
tion asymmetric. In this case, players may predict information
through a machine learning method [45] or using probabilistic
assumption [44]. Letsss = {s1, s2, . . ..sM} be the sizes of dataset
used by vehicles in FL and pm be the probability that a vehicle
i uses sm. (8) can be modified as
URLY (sss, I) = βlog(1 + I)−
M∑
m=1
pmNIsm, (16)
whereM is the total number of possible sm. Similar to Theorem
2, the existence of Nash Equilibrium point can be proved for
URLY defined in (16).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: BLOCKCHAIN BASED FEDERATED LEARNING FOR MESSAGE DISSEMINATION IN VEHICULAR NETWORKS 1935
Fig. 6. Loss (MSE) of global model with 50% adversary. (a) No security Check. (b) Security Check on dataset. (c) Security check on weights. (d) Security check
on both dataset and weights.
TABLE VI
SIMULATION PARAMETERS
V. RESULTS AND DISCUSSION
In this section, we discuss simulation results of the proposed
solution using OMNeT++, Python and SUMO (Simulation of
Urban Mobility). An open-source framework VeINS (Vehicles
In Network Simulation) is used to integrate SUMO with OM-
NeT++ [46]. Python is employed for carrying out FL using
Tensorflow library of machine learning. Python can be embed-
ded into a C++ program by writing an extension module [47].
Since OMNeT++ is a modular C++ based network simulator,
it supports dynamic loading of Python script at run time. The
simulation parameters used are listed in Table VI.
Fig. 6 shows the loss (MSE) of global model with respect to
iteration index k. We present the results with 50% adversarial
vehicles, as it is the highest amount of adversary a blockchain so-
lution can tolerate [20]. For the sake of generality, the adversary
consists of equal percentage of malicious and selfish vehicles. In
all cases, the loss converges to its lowest possible value until 100
iterations. However, this convergence is achieved in less number
of iterations with 300 vehicles as compared to 100 vehicles,
which means that the maximum accuracy of a global model
can be attained faster with more vehicles participating in FL.
Fig. 6(a) shows the loss when no security check is implemented.
TABLE VII
LOSS (MSE) OF GLOBAL MODEL AFTER 100 ITERATIONS
The convergence rate is slower without security check and takes
more iterations than those with security checks, as shown in
Fig. 6(b)–(d). Table VII shows loss of global model after 100
iterations with respect to number of vehicles participating in FL
without any adversary or security check. As shown in Table VII,
the loss is inversely proportional to both dataset size and number
of vehicles.
Fig. 7 shows the loss of global model after 100 iterations
of FL in presence of adversary. The global loss function is the
highest if no security check is employed in smart contract of
FL blockchain. Security check on weights results in less loss as
compared to security check on dataset in presence of malicious
vehicles and oppositely in case of selfish vehicles and combined
adversary of equal percentages of malicious and selfish vehicles.
Since selfish vehicles only affect NA in dataset by not sending
acknowledgments, such discrepancy is easily detected if security
check is applied on dataset only. On the other hand, malicious
vehicles can change all parameters in dataset and therefore it is
not easy to detect anomaly on such dataset. It shows that security
check on weights is more suitable to prevent poisoning attack
caused by malicious vehicles and security check on dataset
is more appropriate to reduce the effect of selfish behavior.
Nevertheless, malicious vehicles may submit a true dataset for
security check and upload inaccurate local models using a false
dataset. Therefore, in this case, only security check on weights
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
1936 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 2, FEBRUARY 2022
Fig. 7. Loss (MSE) of global model after 100 iterations. (a) Vehicles: 100, Adversary: Malicious. (b) Vehicles: 200, Adversary: Malicious. (c) Vehicles: 300,
Adversary: Malicious. (d) Vehicles: 100, Adversary: Selfish. (e) Vehicles: 200, Adversary: Selfish. (f) Vehicles: 300, Adversary: Selfish. (g) Vehicles: 100, Adversary:
Equal number of malicious and selfish vehicles. (h) Vehicles: 200, Adversary: Equal number of malicious and selfish vehicles. (i) Vehicles: 300, Adversary: Equal
number of malicious and selfish vehicles.
Fig. 8. Average time per iteration.
can prevent adversary caused by malicious vehicles. The loss
function is minimum with all types of adversary if security
check on both dataset and weights is used and is suitable for
both malicious and selfish vehicles. As a trade-off, computation
time is increased to run security check twice. Fig. 8 shows time
consumed per iteration. On an average, security check on dataset
or weight takes additional 40 s and security check on both dataset
and weights requires 148 s more than an iteration performed
without any security check.
Fig. 9 shows the average number of vehicles over 100 simu-
lation runs which uploaded their local models during TS, with
and without blockchain at various λV . The simulation results are
matched with expected values derived in (2) and (5), confirming
our theoretical analysis. λMB and μd change with varying λV
and are listed in Table VIII. Fig. 9 shows that blockchain based
Fig. 9. Number of vehicles uploading local model in TS.
TABLE VIII
λMB AND μd WITH RESPECT TO λV
approach results in average 18 more vehicles uploading their
local models within same TS compared with the centralized
solution in submitting local models directly to RSU without
blockchain. This is because a copy of FL blockchain is possessed
by each vehicle. A local model by vehicle i can be entered into FL
blockchain without depending upon RSU. Subsequently, RSU
is able to receive an updated FL blockchain by another vehicle j,
containing local models of both vehicle i and vehicle j. Without
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: BLOCKCHAIN BASED FEDERATED LEARNING FOR MESSAGE DISSEMINATION IN VEHICULAR NETWORKS 1937
Fig. 10. Ui with equilibrium points (*) of Stackelberg Game. (a) NRLY = 6. (b) NRLY = 8.
Fig. 11. URLY with equilibrium points (*) of Stackelberg Game. (a) URLY at N = 100, β = 0.9 × 107. (b) URLY at N = 200, β = 2 × 107. (c) URLY at N =
200, β = 1.8 × 107. (d) URLY at N = 200, β = 0.9 × 107. (e) URLY at N = 300, β = 2 × 107. (f) URLY at N = 300, β = 1.8 × 107.
blockchain, a vehicle i has to travel towards RSU within TS to
directly share its local model. In this case, one RSU or small
TS may not be sufficient for receiving local models from large
number of vehicles. Also, as shown in Table VII, the loss of
global model decreases with rising N . It can be concluded
that FL blockchain can achieve desired accuracy of a global
model faster than FL carried out without blockchain, because
FL blockchain enables collection of local models from more
vehicles within the same time limit.
Fig. 10 and Fig. 11 prove Definition 1. The equilibrium points
exist with all combinations of I , αi, β, si, NRLY and N . Fig. 10
shows the utility of vehicle i, Ui, participating in a blockchain
based FL. As shown in Fig. 10, for a given I∗, there exists only
one s∗i which results in maximum Ui, irrespective of NRLY .
Similarly, Fig. 11 also shows existence of an equilibrium point
with every combination of I , si, N and β. A Central Authority
can select the value of I∗, which gives both maximum Ui and
URLY . As shown in Fig. 11(d) and (f), URLY <= 0 for certain
values of I , which will motivate RLY s to become selfish. An
appropriate value of β can be selected to make URLY > 0 for
every N and I . A machine learning model can be used to
predict dependent parameters, such as si used by each vehicle
i, when it is trained using historical information [45]. Thus, the
expected utility can be estimated using (8) and the optimum
combination of β and I , which results in the best response
strategy of RLY s. This model can be embedded into smart
contract of message blockchain to automate reward distribution
independently without Central Authority.
Fig. 12 shows message delivery ratio at varying number of
vehicles and percentages in malicious vehicles as a result of
100 simulation runs. Results are also compared with PoQF [20]
and another voting blockchain based relay selection method in
which an appropriate relay is elected on the basis of its distance
from the sender and channel quality parameters [23]. Since both
PoQF and voting based approach can tolerate up to half as
malicious vehicles in the network and do not consider selfish
adversary, the results are presented with up to 50% as malicious
vehicles only. Message delivery ratio decreases with number of
vehicles in all approaches. Voting based relay selection always
results in least message delivery ratio. Results of PoQF are
comparable to PoFL with no security check. PoFL with security
check on both datasets and weights result in the highest message
delivery ratio and outperforms voting based relay selection and
PoQF by an average of 25% and 8.2% increase in message
delivery ratio respectively. Fig. 12 shows that the improved
performance is due to blockchain-based smart contract which
executes security check. It proves that a blockchain support is
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
1938 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 2, FEBRUARY 2022
Fig. 12. Message delivery ratio. (a) Vehicles: 100, Maximum speed: 55 km/hr. (b) Vehicles: 200, Maximum speed: 55 km/hr. (c) Vehicles: 300, Maximum speed:
55 km/hr. (d) Vehicles: 100, Maximum speed: 110 km/hr. (e) Vehicles: 200, Maximum speed: 110 km/hr. (f) Vehicles: 300, Maximum speed: 110 km/hr.
Fig. 13. Average time delay per hop.
essential for federated learning based message dissemination in
presence of malicious vehicles.
Fig. 13 shows the average time delay per hop in completing
PoFL, PoQF [20] and PoS (Proof-of-Stake) [48] consensus in
presence of both low and high vehicle density in the network,
i.e., 100 vehicles and 300 vehicles . PoS is simulated such that it
selects relay node on the basis of reputation of vehicle. A random
reputation value following uniform distribution, ranging from 0
to 100 is assigned to each vehicle. The average time delay per hop
of PoQF is proportional to number of vehicles and percentage of
malicious vehicles in the network. This is because PoQF waits
for a threshold number of votes to determine a relay node and
the optimum threshold increases proportionally with number
of vehicles and malicious vehicles percentage. Time delay of
PoS changes according to number of vehicles due to more time
required in accessing large amount of reputation values but it
is independent of percentage of malicious vehicles. PoFL is
run by each vehicle simultaneously and therefore its time delay
is independent of both number of vehicles and percentage of
malicious vehicles. On an average, PoFL is 65.2% faster than
PoQF in relay selection and is more suitable for time-critical
emergency situations. As a trade-off, PoQF only involves Qual-
ity Factor calculations but PoFL is based on a computationally
expensive FL process with multiple iterations. Compared to
PoS, PoFL is 15.74% faster when there are 300 vehicles but
TABLE IX
COMPARISON OF ASYMPTOTIC COMPLEXITIES
18.93% slower when there are 100 vehicles. This is because
PoS consumes time only in accessing the blockchain to find
reputation of vehicles. The access time increases when there
are more vehicles registered in a blockchain network. Although
PoS with 100 vehicles outperforms both PoQF and PoFL, this
faster consensus for block verification and addition cannot be
run independently for appropriate relay selection, unlike PoQF
and PoFL.
Table IX compares the asymptotic latency, communication
and computation complexities of PoS, PoQF, PoFL and the
blockchain-based FL process which is used to produce a global
model for PoFL. Standard mathematical notations are used in
Table IX, i.e., Ω(.), O(.) and Θ(.) denote the order of at least,
at most and exactly respectively. κ denotes consensus parameter
and is unique to each algorithm, i.e., synchronization level in
PoS, number of minimum votes required in PoQF and smallest
dataset size in blockchain-based FL. The blockchain-based FL
process has the highest computation complexity, as its compu-
tations depend on the size of dataset and number of vehicles
submitting local models. Also, its communication complexity
is proportional to the number of vehicles sharing their local
models and its latency depends on the time of training a local
model, which is proportional to the dataset size. However, PoFL,
resulted from a blockchain-based FL process, outperforms PoS
and PoQF because its latency, communication and computation
complexities are independent of N and κ. It is therefore a highly
scalable solution once the FL process is completed.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
AYAZ et al.: BLOCKCHAIN BASED FEDERATED LEARNING FOR MESSAGE DISSEMINATION IN VEHICULAR NETWORKS 1939
VI. CONCLUSION
In this paper, we have proposed a decentralized FL based
message dissemination, governed by blockchain. The theoretical
and practical performance of uploading local models using
blockchain is compared with a centralized approach without
blockchain. The proposed FL with blockchain can be consid-
ered as a faster approach since it results in more local models
uploaded within a given time as compared to a solution without
blockchain. Smart contract based security checks are proposed
to detect adversary, which result in lower MSE in less number
of iterations achieved by global model than FL without security
check, after 100 iterations. Compared with other blockchain
approaches suitable for relay selection in vehicular networks,
the proposed solution is highly scalable, 65.2% faster and at
least 8.2% more efficient in message dissemination approach. It
also preserves privacy of neighbour vehicles, unlike other relay
selection approaches. An economic model for blockchain based
FL is also proposed and analyzed using Stackelberg game to
determine optimal data size and incentive which result in the best
response strategy of vehicles. Message dissemination and relay
selection can further be improved in future work by including
cross-layer information in dataset, obtained from physical and
MAC layers.
REFERENCES
[1] S. Yaqoob, A. Ullah, M. Akbar, M. Imran, and M. Shoaib, “Congestion
avoidance through fog computing in internet of vehicles,” J. Ambient Intell.
Hum. Comput., vol. 10, no. 10, pp. 3863–3877, Feb. 2019.
[2] Y. Shi, L. Lv, H. Yu, L. Yu, and Z. Zhang, “A center-rule-based neigh-
borhood search algorithm for roadside units deployment in emergency
scenarios,” Mathematics, vol. 8, no. 10, Oct. 2020, Art. no. 1734.
[3] M. F. Feteiha and M. H. Ahmed, “Multihop best-relay selection for ve-
hicular communication over highways traffic,” IEEE Trans. Veh. Technol.,
vol. 67, no. 10, pp. 9845–9855, Oct. 2018.
[4] A. Hawbani, E. Torbosh, W. Xingfu, P. Sincak, L. Zhao, and A. Y.
Al-Dubai, “Fuzzy based distributed protocol for vehicle to vehicle commu-
nication,” IEEE Trans. Fuzzy Syst, vol. 29, no. 3, pp. 612–626, Mar. 2021.
[5] M. E. Morocho-Cayamcela, H. Lee, and W. Lim, “Machine learning to
improve multi-hop searching and extended wireless reach-ability in V2X,”
IEEE Commun. Lett., vol 24, no. 7, pp. 1477–1481, Jul. 2020.
[6] W. K. Lai, M. T. Lin, and Y. H. Yang, “A machine learning system
for routing decision-making in urban vehicular ad hoc networks,” Int. J.
Distrib. Sens. Netw., vol. 11, no. 3, Mar. 2015, Art. no. 374391.
[7] A. Mchergui, T. Moulahi, and S. Nasri, “Relay selection based on deep
learning for broadcasting in VANET,” in Proc. 15th Int. Wireless Commun.
Mobile Comput. Conf., 2019, pp. 865–870.
[8] W. He, G. Yan, and L. D. Xu, “Developing vehicular data cloud ser-
vices in the IoT environment,” IEEE Trans. Ind. Inform., vol. 10, no. 2,
pp. 1587–1595, May 2014.
[9] H. B. McMahan, E. Moore, D. Ramage, S. Hampson, and B. A. Y. Arcas,
“Communication-efficient learning of deep networks from decentralized
data,” in Proc. 20th Int. Conf. Artif. Intell. Statist., Fort Lauderdale, FL,
USA, 2017, pp. 1–11.
[10] W. Y. B. Lim et al., “Federated learning in mobile edge networks:
A comprehensive survey,” IEEE Commun. Surv. Tut., vol. 22, no. 3,
pp. 2031–2063, Apr. 2020.
[11] J. Kang, Z. Xiong, D. Niyato, S. Xie, and J. Zhang, “Incentive mechanism
for reliable federated learning: A joint optimization approach to combining
reputation and contract theory,” IEEE Internet Things J., vol. 6, no. 6,
pp. 10700–10714, Dec. 2019.
[12] Y. Lu, X. Huang, K. Zhang, S. Maharjan, and Y. Zhang, “Low-latency
federated learning and blockchain for edge association in digital twin
empowered 6G networks,” IEEE Trans. Ind. Inform., vol. 17, no. 7,
pp. 5098–5107, Jul. 2021.
[13] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” 2008.
[Online]. Available: https://www.debr.io/article/21260.pdf.
[14] S. R. Pokhrel and J. Choi, “Federated learning with blockchain for au-
tonomous vehicles: Analysis and design challenges,” IEEE Trans. Com-
mun., vol. 68, no. 8, pp. 4734–4746, Aug. 2020.
[15] K. Christidis and M. Devetsikiotis, “Blockchains and smart contracts for
the Internet of Things,” IEEE Access, vol. 4, pp. 2292–2303, May 2016.
[16] Y. Lu, X. Huang, K. Zhang, S. Maharjan, and Y. Zhang, “Communication-
efficient federated learning and permissioned blockchain for digital twin
edge networks,” IEEE Internet Things J., vol. 8, no. 4, pp. 2276–2288,
Feb. 2021.
[17] D. Mingxiao, M. Xiaofeng, Z. Zhe, W. Xiangwei, and C. Qijun, “A review
on consensus algorithm of blockchain,” in Proc. IEEE Int. Conf. Systems,
Man, Cybern., 2017, pp. 2567–2572.
[18] V. Bagaria, S. Kannan, D. Tse, G. Fanti, and P. Viswanath, “Prism:
Deconstructing the blockchain to approach physical limits,” in Proc. ACM
SIGSAC Conf. Comput. Commun. Secur., New York, NY, USA, 2019,
pp. 585–602.
[19] W. Dong, Y. Li, R. Hou, X. Lv, H. Li, and B. Sun, “A blockchain-based
hierarchical reputation management scheme in vehicular network,” in
Proc. IEEE Glob. Commun. Conf., Waikoloa, HI, USA, 2019, pp. 1–6.
[20] F. Ayaz, Z. Sheng, D. Tian, and Y. L. Guan, “A proof-of-quality-factor
(PoQF) based blockchain and edge computing for vehicular message
dissemination,” IEEE Internet Things J., vol. 8, no. 4, pp. 2468–2482,
Feb. 2021.
[21] D. Cao, B. Zheng, B. Ji, Z. Lei, and C. Feng, “A robust distance-based
relay selection for message dissemination in vehicular network,” Wireless
Netw., vol. 26, no. 3, pp. 1755–1771, Oct. 2018.
[22] S. A. Rashid, L. Audah, M. M. Hamdi, and S. Alani, “Prediction based
efficient multi-hop clustering approach with adaptive relay node selection
for VANET,” J. Commun., vol. 15, no. 4, pp. 332–334, Apr. 2020.
[23] F. Ayaz, Z. Sheng, D. Tian, Y. L. Guan, and V. Leung, “A voting blockchain
based message dissemination in vehicular ad-hoc networks (VANETs),”
in Proc. IEEE Int. Conf. Commun., Dublin, Ireland, 2020, pp. 1–6.
[24] F. Ayaz, Z. Sheng, D. Tian, and V. Leung, “Blockchain-Enabled Security
and Privacy for Internet-of-Vehicles,” in Internet of Vehicles and Its Ap-
plications in Autonomous Driving, N. Gupta, A. Prakash, and R. Tripathi,
Cham, Switzerland: Springer, Sep. 2020, pp. 123–148.
[25] C. Wu, S. Ohzahata, Y. Ji, and T. Kato, “Joint fuzzy relays and network-
coding-based forwarding for multihop broadcasting in VANETs,” IEEE
Trans. Intell. Transp. Syst., vol. 16, no. 3, pp. 1415–1427, Jun. 2015.
[26] K. Yang, Y. Shi, Y. Zhou, Z. Yang, L. Fu, and W. Chen, “Federated machine
learning for intelligent IoT via reconfigurable intelligent surface,” IEEE
Netw., vol. 34, no. 5, pp. 16–22, Oct. 2020.
[27] K. Xiong, S. Leng, C. Huang, C. Yuen, and Y. L. Guan, “Intelligent task
offloading for heterogeneous V2X communications,” IEEE Trans. Intell.
Transp. Syst., vol. 22, no. 4, pp. 2226–2238, Apr. 2021.
[28] S. Samarakoon, M. Bennis, W. Saad, and M. Debbah, “Distributed fed-
erated learning for ultra-reliable low-latency vehicular communications,”
IEEE Trans. Commun, vol. 68, no. 2, pp. 1146–1159, Nov. 2019.
[29] M. Rihan, M. Elwekeil, Y. Yang, L. Huang, C. Xu, and M. M. Selim,
“Deep-VFog: When artificial intelligence meets fog computing in V2X,”
IEEE Syst. J., vol. 15, no. 3, pp. 3492–3505, Sep. 2021.
[30] Y. M. Saputra, D. T. Hoang, D. N. Nguyen, E. Dutkiewicz, M. D. Mueck,
and S. Srikanteswara, “Energy demand prediction with federated learning
for electric vehicle networks,” in Proc. IEEE Glob. Commun. Conf.,
Waikoloa, HI, USA, 2019, pp. 1–6.
[31] K. Tan, D. Bremner, J. L. Kernec, and M. Imran, “Federated machine
learning in vehicular networks: A summary of recent applications,” in
Proc. IEEE Int. Conf. U.K.-China Emerg. Technol., Glasgow, U.K., 2020,
pp. 1–4.
[32] D. Ye, R. Yu, M. Pan, and Z. Han, “Federated learning in vehicular edge
computing: A selective model aggregation approach,” IEEE Access, vol. 8,
pp. 23920–23935, 2020.
[33] Y. Sarikaya and O. Ercetin, “Motivating workers in federated learning: A
Stackelberg game perspective,” IEEE Netw. Lett., vol. 2, no. 1, pp. 23–27,
Oct. 2019.
[34] S. R. Pandey, N. H. Tran, M. Bennis, Y. K. Tun, A. Manzoor, and C.
S. Hong, “A crowdsourcing framework for on-device federated learning,”
IEEE Trans. Wireless. Commun., vol. 19, no. 5, pp. 3241–3256, Feb. 2020.
[35] R. Stanica, E. Chaput, and A.-L. Beylot, “Local density estimation for
contention window adaptation in vehicular networks,” in Proc. 22nd IEEE
Int. Symp. Pers. Indoor Mobile Radio Commun., Toronto, ON, Canada,
2011, pp. 730–734.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
https://www.debr.io/article/21260.pdf.
1940 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 2, FEBRUARY 2022
[36] F. T. Liu, K. M. Ting, and Z. H. Zhou, “Isolation forest,” in Proc. 8th IEEE
Int. Conf. Data Mining, Pisa, Italy, 2008, pp. 413–422.
[37] G. A. Susto, A. Beghi, and S. McLoone, “Anomaly detection through
on-line isolation forest: An application to plasma etching,” in Proc. 28th
Annu. SEMI Adv. Semicond. Manuf. Conf., New York, NY, USA, Saratoga
Springs, 2017, pp. 89–94.
[38] K. Emara, “Safety-aware location privacy in VANET: Evaluation and
comparison,” IEEE Trans. Veh. Technol., vol. 66, no. 12, pp. 10718–10731,
Dec. 2017.
[39] J. Zhou et al., “Security-critical energy-aware task scheduling for hetero-
geneous real-time MPSoCs in IoT,” IEEE Trans. Serv. Comput., vol. 13,
no. 4, pp. 745–758, Aug. 2020.
[40] A. W. Roscoe, “Temporal signature in the blockchain,” 2021. [On-
line]. Available: https://blockchain.univ.ox.ac.uk/wp-content/uploads/
2021/05/Bill-Roscoe-Temporal-Signature.pdf
[41] K. Wei et al., “Federated learning with differential privacy: Algorithms
and performance analysis,” IEEE Trans. Inf. Forensics Secur., vol. 15,
pp. 3454–3469, Apr. 2020.
[42] Y. Sun, L. Zhang, G. Feng, B. Yang, B. Cao, and M. A. Imran, “Blockchain-
enabled wireless Internet of Things: Performance analysis and optimal
communication node deployment,” IEEE Internet Things J., vol. 6, no. 3,
pp. 5791–5802, Jun. 2019.
[43] S. Kim, “Impacts of mobility on performance of blockchain in VANET,”
IEEE Access, vol. 7, pp. 68646–68655, Jun. 2019.
[44] Z. Hou, H. Chen, Y. Li, and B. Vucetic, “Incentive mechanism design
for wireless energy harvesting-based Internet of Things,” IEEE Internet
Things J., vol. 5, no. 4, pp. 2620–2632, Aug. 2018.
[45] F. Li, H. Yao, J. Du, C. Jiang, and Y. Qian, “Stackelberg game-based
computation offloading in social and cognitive industrial Internet of
Things,” IEEE Trans. Industr. Inform., vol. 16, no. 8, pp. 5444–5455, Aug.
2020.
[46] C. Sommer, R. German, and F. Dressler, “Bidirectionally coupled network
and road traffic simulation for improved IVC analysis,” IEEE Trans.
Mobile Comput., vol. 10, no. 1, pp. 3–15, Jan. 2011.
[47] T. E. Oliphant, “Python for scientific computing,” Comput. Sci. Eng., vol. 9,
no. 3, pp. 10–20, May/Jun. 2007.
[48] J. Kang, Z. Xiong, D. Niyato, D. Ye, D. I. Kim, and J. Zhao, “Toward
secure blockchain-enabled internet of vehicles: Optimizing consensus
management using reputation and contract theory,” IEEE Trans. Veh.
Technol., vol. 68, no. 3, pp. 2906–2920, Mar. 2019.
Ferheen Ayaz (Graduate Student Member, IEEE) re-
ceived the B.E. and M.E. degrees from the NED Uni-
versity of Engineering and Technology, Karachi, Pak-
istan, in 2010 and 2014, respectively. She is currently
working toward the Ph.D. degree with the University
of Sussex, Brighton, U.K. She is currently a Research
Associate with the University of Glasgow, Glasgow,
U.K. Her current research interests include security
and privacy, vehicular communications, blockchain,
and machine learning.
Zhengguo Sheng (Senior Member, IEEE) received
the B.Sc. degree from the University of Electronic
Science and Technology of China, Chengdu, China,
in 2006, and the M.S. and Ph.D. degrees from Im-
perial College London, London, U.K., in 2007 and
2011, respectively. He is currently a Reader with the
University of Sussex, Brighton, U.K. Previously, he
was with The University of British Columbia, Van-
couver, BC, Canada, as a Research Associate and with
Orange Labs, as a Senior Researcher. He has more
than 120 publications. His research interests include
IoT, vehicular communications, and cloud/edge computing.
Daxin Tian (Senior Member, IEEE) is currently a
Professor with the School of Transportation Science
and Engineering, Beihang University, Beijing, China.
His current research interests include mobile comput-
ing, intelligent transportation systems, vehicular ad
hoc networks, and swarm intelligence.
Yong Liang Guan (Senior Member, IEEE) received
the Bachelor of Engineering degree (with first-class
Hons.) from the National University of Singapore,
Singapore and the Ph.D. degree from Imperial Col-
lege London, London, U.K. He is currently a Profes-
sor of communication engineering with the School
of Electrical and Electronic Engineering, Nanyang
Technological University, Singapore, where he is
leads two industry collaboration labs, which include
Continental-NTU Corporate Research Lab, and Scha-
effler Hub for Advanced Research with NTU, and
led the successful deployment of the campus-wide NTU-NXP V2X Test Bed.
His research interests include coding and signal processing for communication
systems and data storage systems. He is an Editor of the IEEE TRANSACTIONS
ON VEHICULAR TECHNOLOGY.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:44:07 UTC from IEEE Xplore.  Restrictions apply. 
https://blockchain.univ.ox.ac.uk/wp-content/uploads/2021/05/Bill-Roscoe-Temporal-Signature.pdf
https://blockchain.univ.ox.ac.uk/wp-content/uploads/2021/05/Bill-Roscoe-Temporal-Signature.pdf
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice