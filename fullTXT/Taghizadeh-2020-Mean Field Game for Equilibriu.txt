Mean Field Game for Equilibrium Analysis of Mining Computational Power in Blockchains
IEEE INTERNET OF THINGS JOURNAL, VOL. 7, NO. 8, AUGUST 2020 7625
Mean Field Game for Equilibrium Analysis of
Mining Computational Power in Blockchains
Amirheckmat Taghizadeh , Hamed Kebriaei , Senior Member, IEEE, and Dusit Niyato , Fellow, IEEE
Abstract—In a blockchain network, to mine new blocks like
in cryptocurrencies or secure IoT networks, each node or player
specifies the amount of computational power as its strategy by
compromising between the cost and expected utility. Since the
strategies of all players affect the expected utility of others
through the probability of success, in this article, we first formu-
late the mining competition among the players in a blockchain
network as a noncooperative game. The existence and unique-
ness of the Nash equilibrium (NE) point of the game are proven.
We consider a gradient learning strategy for the players while
preserving their private information as a bounded rational learn-
ing model. Furthermore, the convergence of this learning strategy
to the ε-NE point of the game is studied analytically using the
concept of the mean field (MF) game theory. While conven-
tional analytical tools face problems in dealing with a large
number of participants, which is a key feature in many IoT
networks, deploying the MF game theory facilitates analyzing
the behavior of a large population of players by encapsulating
the network behavior in an MF term. As the number of players
becomes larger, the accuracy of the MF method becomes greater.
Moreover, in the MF approach, no information exchange among
the agents is needed for optimal decision making and the privacy
of the players is preserved. The minimal information exchange
is also a proper motivation for using the MF approach in the
IoT networks.
Index Terms—ε-Nash equilibrium, blockchain, computational
game theory, convergence analysis, mean field game, proof of
work.
Manuscript received October 29, 2019; revised February 14, 2020 and
March 19, 2020; accepted April 7, 2020. Date of publication April 16, 2020;
date of current version August 12, 2020. This work was supported in part
by the Institute for Research in Fundamental Sciences under Grant CS
1398-4-256, in part by the National Research Foundation (NRF), Singapore,
through Singapore Energy Market Authority, Energy Resilience under Grant
NRF2017EWT-EP003-041, in part by Singapore NRF under Grant NRF2015-
NRF-ISF001-2277, in part by the Singapore NRF National Satellite of
Excellence, Design Science and Technology for Secure Critical Infrastructure
under Grant NSoE DeST-SCI2019-0007, in part by the A*STAR-NTU-
SUTD Joint Research Grant Call on Artificial Intelligence for the Future of
Manufacturing under Grant RGANS1906 and Grant WASP/NTU M4082187
(4080), in part by Singapore MOE Tier 2 under Grant MOE2014-T2-2-015
ARC4/15, and in part by Singapore MOE Tier 1 under Grant 2017-T1-002-007
RG122/17. (Corresponding author: Hamed Kebriaei.)
Amirheckmat Taghizadeh is with the School of ECE, College of
Engineering, University of Tehran, Tehran 1439957131, Iran (e-mail:
taghizadeh.amirheckmat@gmail.com).
Hamed Kebriaei is with the School of ECE, College of Engineering,
University of Tehran, Tehran 1439957131, Iran, and also with the School
of Computer Science, Institute for Research in Fundamental Sciences, Tehran
19395-5746, Iran (e-mail: kebriaei@ut.ac.ir).
Dusit Niyato is with the School of Computer Science and Engineering,
Nanyang Technological University, Singapore (e-mail: dniyato@ntu.edu.sg).
Digital Object Identifier 10.1109/JIOT.2020.2988304
I. INTRODUCTION
IN RECENT years, blockchain technologies have gained
much attention due to their promising features as a secure
distributed data-keeping platform. As a main application,
cryptocurrencies, such as Bitcoin, have been implemented
using blockchain as a distributed ledgers [1]. Nevertheless,
the blockchain technology can be used for other applica-
tions [2], such as Internet of Things [3]–[5], edge and cloud
computing [6]–[8], smart power grids [9], content delivery
networks [10], and crowdsourcing [11]. Blockchain is espe-
cially of interest in IoT networks since it can create a secure
robust network, where services are distributed among different
nodes and the network [12]. The data in blockchain are stored
in blocks that are chained together through Hash pointers to
form a tamper proof and temporally ordered data structure.
Participants in the blockchain network check the validity of
transactions registered in each block. In order to motivate
participants to take part, the network protocol provides incen-
tives to those who successfully generate a new block. The
process of creating new blocks on the blockchain is called
mining. The most prevalent form of mining is through Proof
of Work (PoW), which involves solving a mathematically com-
plex problem, generally, a hash puzzle [13]. Alternative proof
concepts have been introduced as well, such as Proof of Stake
(PoS) [14], [15]. In PoS schemes, each player commits a
certain asset as stake (usually the network tokens), and the
probability of winning the mining game is proportional to
the amount of assets committed as stake. Since PoW is more
widely used and has been utilized in many research and com-
mercial services, including in the IoT systems, the focus of this
article is on PoW networks. For example, [7], [16], and [17],
all use PoW as the basis of their IoT blockchain network. As
for the commercial system, IOTA, which is the backbone of
many commercial IoT blockchain services, uses PoW as well.
Due to the exponential growth of computational power of
network participants, an individual miner with limited hash
power compared to the whole network hash power has a neg-
ligible chance of winning the mining game in each iteration.
In order to achieve more stable income, i.e., lower variance,
in real-world blockchain networks, individual miners usually
form mining pools [1]. A mining pool is a coalition of indi-
vidual miners who act as a single miner in which, aggregating
their computational power increases the chance of winning in
each round. The acquired profit from a mined block is then
distributed among the miners of pool. Joining a mining pool
could greatly lower the variance of profit, although it has a
small effect on a player’s expected payoff. Pool management
2327-4662 c© 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-8874-2188
https://orcid.org/0000-0002-3781-2163
https://orcid.org/0000-0002-7442-7416
7626 IEEE INTERNET OF THINGS JOURNAL, VOL. 7, NO. 8, AUGUST 2020
usually takes a small percentage of the pool’s profit as man-
agement costs. Hence, although joining a mining pool may
slightly reduce the expected profit of a miner since it reduces
the profit risk, miners are willing to forgo a small portion of
their income to have more persistent income. For example,
more than 80% of bitcoin network power are focused on dif-
ferent mining pools [18]. Since each node in the IoT network
has limited storage and computational power, forming mining
pools to cooperate in solving the network puzzle is reasonable.
In this article, the competition of players in mining pools
in a blockchain network is modeled as a game in which, the
mining computational power is the strategy of each pool that
needs to be determined. The payoff function of each pool is
considered to be the difference between the expected utility
gained from mining and the computational cost. The exis-
tence and uniqueness of the Nash equilibrium (NE) point of
the game are proven. Furthermore, we analyze the learning
behavior of pools under incomplete information, and bounded
rational decision making of the players is studied using the
gradient learning method and the concept of the mean field
(MF) game theory. In addition, the convergence of learn-
ing strategies to the ε-NE point of the game is investigated.
The proposed MF approach can be used in lightweighted and
bandwidth-limited blockchain networks, e.g., mobile and IoT-
based blockchain networks, where limited bandwidth impedes
full information exchange and only limited information about
the network is available to the agents [7], [19], [20]. Also,
the use of the gradient-based decision mechanism ensures that
low-cost computations for decision making is achieved.
The main contributions of this article are as follows.
1) We exploit the MF theory for equilibrium analysis of
the mining game in a blockchain network.
2) We provide the conditions for the existence and unique-
ness of the NE point of the game.
3) We analyze both the rational and bounded rational
decision-making dynamics by using the MF game.
4) We prove the convergence of the learning strategies of
players to the ε-NE point of the game.
The remainder of this article is structured as follows. In
Section II, the related works in the literature are reviewed.
In Section III, the mining game is introduced and formulated.
In Section IV, the NE of the game is represented and its exis-
tence and uniqueness are proved. Section V discusses the MF
game and gradient-based decision dynamics. The update algo-
rithm is represented and its convergence is proved. Moreover,
the concept of MF ε-NE and its relationship with the exact NE
point is also introduced. Section VI includes computational
simulations to show the convergence of different algorithms
under different conditions. Section VII concludes this article.
II. RELATED WORKS
Different tools and approaches have been used for analyz-
ing blockchain networks, including performance analysis [19],
[21]–[25], security analysis [26]–[28], or even economical
analysis [29]. Taking into account the competitive/cooperative
behavior of mining individuals/pools, the game theory is a
well-suited tool for analyzing the blockchain network. In [30],
an extensive literature on the game theoretical analysis of
blockchain is provided.
Game theory has been also used to analyze mining strate-
gies and behavior of players in the blockchain network. In
the existing works, the strategy of players consists of whether
they release or withhold their mining block, which is called
selfish mining, and also which block to mine on [31], [32]. In
addition, “computational power allocation” was studied in [33]
and [34]. In [33], a complete information game was consid-
ered and the NE point is achieved only for two-player games.
In [34], the strategy of players is considered to be the time
in which they turn on each of their mining rigs. However,
because of the complexity of the model, theoretical analysis
was not provided and only the sensitivity of model parameters
is shown by simulations. Mining pool coalition formation was
studied in [35]. Liu et al. [35] analyzed the dynamics of pool
formation using the evolutionary game theory. In their work,
it is assumed that each mining pool requires its participants to
provide a minimum computational power. Different equilib-
rium points for the case of two mining pools were calculated
and the evolutionary stability of those equilibrium points was
studied. In this article, the authors assumed that all miners in
a mining pool participate with the same computational power,
which is dictated by the pool management.
However, when the number of players becomes larger and
they do not have information exchange due to their selfishness
and privacy, classical game theoretical models cannot be effec-
tive due to lack of information or computational complexities.
To face such problems, the MF game has been developed as a
promising tool [36]. The MF game theory uses the same prin-
ciple as the MF theory in physics [36]. The idea is that, when
the number of agents is high, in many cases, the effect of all
agents could be encapsulated in a term which is called the MF
term. Each agent only needs to know the value of “MF term”
while making decisions, which is the mass effect of players’
strategies on its payoff function, rather than an individual strat-
egy of rivals [37]. In this way, information exchange among the
players is avoided and the privacy of the players is preserved.
The reason is that the information of the MF term is usu-
ally publicly available or measurable for all players. In other
words, the MF term is macroscopic information about the
system [36]. This feature makes the MF game an appropri-
ate tool to analyze the games of incomplete information with
no information exchange among the players. MF game can be
seen as an approximation of the original game. The accuracy
of this approximation increases by increasing the number of
players since the effect of decision making of a single player
on the whole population becomes negligible.
The MF game approach has been utilized in many prac-
tical applications, such as smart grids and electric vehicles
[38]–[40], or wireless networks [41]–[43]. However, to the
best of our knowledge, it has not been applied to analyze the
behavior of players in blockchain networks.
III. SYSTEM MODEL AND PROBLEM FORMULATION
In this article, we consider a blockchain network using the
PoW protocol. In the PoW concept, in order for a player to
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
TAGHIZADEH et al.: MEAN FIELD GAME FOR EQUILIBRIUM ANALYSIS OF MINING COMPUTATIONAL POWER IN BLOCKCHAINS 7627
mine a new block and receive the monetary incentives pro-
vided by the network protocol, she should successfully guess
a correct “nonce” so that the hash of the block would be less
than a target value defined by the network. The hash puzzle
difficulty, which is controlled by the difficulty parameter of the
network, is maintained in such a way that the expected time
of mining blocks would be fixed. Since hash functions that
are used as the PoW problem show random-like properties,
players have no option but to randomly try different nonce
values to reach the aforementioned condition. Due to the ran-
dom property of the hash function, the chance of winning the
mining game for a player in each round is equal to the ratio of
its computational power to the whole network computational
power [32], [44]
Pwin
i = xi
∑
j∈N xj
(1)
where N = {1, 2, . . . , N} is the set of all players, Pwin
i is
the probability of winning for a player i, and xi is the player
i’s computational power, in terms of hash rate. We assume
xi ∈ Xi, where Xi = [xmin
i , xmax
i ], and 0 ≤ xmin
i ≤ xmax
i < ∞.
Equation (1) shows the winning probability of an individual
miner. The expected portion that a miner inside a mining pool
receives from each block could be represented in the same
way. This is due to the fact that miners who are part of a
mining pool receive a share of the reward from the pool-mined
blocks proportional to the ratio of their computational power
to the pool’s computational power. Distribution schemes in
mining pools often consist of a flat rate for the pool manager
and the rest is distributed proportionally to the computational
power of miners in the pool. Therefore, the expected utility of
the player i can be modeled as follows:
Ai
xi
∑
k∈Ni
xk
×
∑
k∈Ni
xk
∑
j∈N xj
(2)
where Ni is the set of players in the same pool as the player i.
Since an individual miner could be seen as a pool with only
one miner, we assume players as mining pools. Ai repre-
sents the expected reward from a successfully mined block for
the player i, which incorporates the pool management share
reduction and distribution scheme, which is known to all pool
members, as well as other influencing factors. Also, different
participants in the network may value the network tokens dif-
ferently. This can be due to different levels of the changeability
of network tokens in different countries, or different privacy
and anonymity preferences among participants. Also, different
participants face different network propagation delays and use
different styles of filling the blocks. All of these factors are
encapsulated in Ai.
By taking into account the cost of computational power, the
payoff function of the player i can be expressed as follows:
Ji(x) =
{
Ai
xi∑
j∈N xj
− pixi,
∑
j∈N xj > 0
0,
∑
j∈N xj = 0
(3)
where x = (x1, . . . , xN) and pi is the unit price of computa-
tional power (usually electricity consumption price and other
maintaining fees) for the player i. As seen in (3), a player’s
payoff is dependent to all other players’ computational power.
Therefore, the competition of players could be formalized
as the following “Mining Game” by introducing the set of
players, strategies, and payoff functions, respectively
G = (N , {Xi}i∈N , {Ji}i∈N
)
. (4)
From (3), the coupling term among the players’ payoff
function is the aggregative term
∑
j∈N xj, which is the total
computational power (hash rate) of the network. Although it
is not reasonable to assume that a player has information
of all other players’ hash powers, a player can estimate the
aggregative term by knowing the expected number of required
hash function calculations (which is determined by difficulty
parameter of the network) [44]–[46]. To be more specific, we
consider that players use a naive estimation from the expected
total hash rate. This type of estimation is known also as
“myopic” estimation in the literature and is well suited to
model the human behavior [47], [48]. In this way, the expected
value of the overall hash power in the next round is approx-
imated by the expected current hash power. The expected
current hash power of the network could be approximated
by knowing the network’s difficulty, based on the expected
number of hash completions required to mine a block, and
the actual time taken for the last block to be mined. Dividing
these two can provide an appropriate estimate of the expected
value of the current network hash power. In the theory of
the MF game, the estimation of the agents from the aggrega-
tive term is known as the MF term. The main feature of the
MF game is that by knowing the MF term, each player can
decide on its strategy based on (3), independent to other play-
ers. The player updates its strategy depending also on different
humanoid factors, including the level of adaptation, computa-
tional capability, and the level of foresightedness. After each
decision making, the strategy of players is fed into the network
and based on the network’s parameters, the MF term is updated
for the next round. Hence, in an iterative procedure, each
player updates its estimate and decision until the convergence
is achieved. Fig. 1 shows this procedure. In the subsequent sec-
tions, first, we analyze the NE point of G. Then, by considering
the gradient update rule of players as the learning method, the
convergence of the strategy update to the Nash/ε-NE point of
the mining game is studied using the MF game theory.
IV. NASH EQUILIBRIUM
The NE of G is studied in this section. An NE is a state
of the game where no player can increase its payoff if other
players do not change their strategies. The NE of G can be
obtained by intersecting the best response (BR) function of
players.
Assumption 1: We assume that there are at least two active
miners in the game which means that there are at least two
players with positive strategies.
To obtain the BR solution, we take the derivative to find the
optimal solution. The first derivative should be equal to zero
at the optimal point.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
7628 IEEE INTERNET OF THINGS JOURNAL, VOL. 7, NO. 8, AUGUST 2020
Fig. 1. Estimation of MF term by each agent, and subsequent decision
making based on MF term.
Applying the derivative operator to (3) and solving it for xi
leads to
x̃i(x−i) =
√
√
√
√
Ai
(∑
j∈N ,j �=i xj
)
pi
−
∑
j∈N ,j �=i
xj (5)
where x−i = (x1, . . . , xi−1, xi+1, . . . , xN).
Taking the second derivative from (3), we get
∂2Ji(x)
∂x2
i
= −2Ai
∑
j∈N ,j �=i xj
(∑
j∈N xj
)3
. (6)
Since it is always negative, the solution in (5) is the
maximum of the payoff function.
Applying the constraint xi ∈ Xi, the solution should be pro-
jected into Xi, and finally, the BR of the player i is obtained
as follows:
x∗
i (x−i) =
⎧
⎨
⎩
xmax
i , xmax
i ≤ x̃i
x̃i, xmin
i ≤ x̃i ≤ xmax
i
xmin
i , x̃i ≤ xmin
i .
(7)
The next two sections prove the existence and uniqueness
of the NE point in the mining game.
A. Existence of NE
Definition 1 (Concave Game): A game is concave if ∀xi ∈
Xi, x ∈ C, where C is a compact convex set and the payoff
function Ji(x) is continuous with respect to x and concave with
respect to xi ∀x ∈ C.
Lemma 1: G is a concave game.
Proof: Since xi ∈ [xmin
i , xmax
i ], C is closed, bounded, and
convex. According to (6), Ji(x) is concave with respect to xi.
As a result, G is a concave game.
Reference [49, Th. 1] proves that for every concave N-
person game, an NE point exists and therefore, there exist
an NE point for G as well.
B. Uniqueness of NE
Definition 2 (Diagonally Strictly Concave Function) [49]:
The function f (x, r) =∑N
i=1 riJi(x) is called diagonally strictly
concave for x ∈ X = X1 × X2 × · · · × XN and fixed r =
(r1, r2, . . . , rN) > 0, if for every u, v ∈ X, we have
(u − v)Tg(v, r) + (v − u)Tg(u, r) > 0 (8)
where g is a pseudogradient of f which is defined as
g(x, r) =
[
r1
∂J1(x)
∂x1
, . . . , rn
∂Jn(x)
∂xn
]	
. (9)
To prove the uniqueness of the NE point, we employ
[49, Th. 2]. This theorem says that the NE point of an
N-player concave game with a diagonally strictly concave
function f (x, r) is unique.
Theorem 1: G admits a unique NE point.
Proof: Taking the first derivatives from (3) and substitut-
ing in (9) yields
g(x, r) =
⎡
⎢
⎢
⎢
⎢
⎢
⎣
r1A1
∑
j∈N xj−x1
(∑
j∈N xj
)2 − p1
...
rnAn
∑
j∈N xj−xn
(∑
j∈N xj
)2 − pn
⎤
⎥
⎥
⎥
⎥
⎥
⎦
. (10)
According to [49, Th. 6], a sufficient condition for f (x, r) to
be diagonally strictly concave is
G(x, r) + GT(x, r) < 0 (11)
where G(x, r) is the Jacobian matrix of g(x, r) with respect
to x. Choosing ri = 1/Ai and taking the derivative of (9) with
respect to x, and constructing G + GT results in
[
G + GT]
ii = −4
∑
j∈N xj − xi
(∑
j∈N xj
)3
(12)
[
G + GT]
ik = −2
∑
j∈N xj − xi − xk
(∑
j∈N xj
)3
. (13)
To simplify the notation, define the auxiliary variables: S �∑
j∈N xj > 0, Si �
∑
j∈N xj − xi > 0, Sil �
∑
j∈N xj − xi −
xl ≥ 0. Hence, we have
G + GT = −2
1
S3
⎡
⎢
⎢
⎢
⎣
2S1 S12 S13 . . . S1N
S12 2S2 S13 . . . S1N
...
...
. . .
. . .
...
S1N S2N S3N . . . 2SN
⎤
⎥
⎥
⎥
⎦
. (14)
Since S > 0, the criterion is changed to proving the matrix
part is positive definite. To this end, we prove that all of its
leading principal minors are positive.
By defining Sk
i =∑k
j=1 xj − xi, Sk
il =∑k
j=1 xj − xi − xl, and
S̄k =∑N
j=k+1 xj, we can write the kth leading principal minor
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
TAGHIZADEH et al.: MEAN FIELD GAME FOR EQUILIBRIUM ANALYSIS OF MINING COMPUTATIONAL POWER IN BLOCKCHAINS 7629
as follows:
det
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
Fk
︷ ︸︸ ︷⎡
⎢
⎢
⎢
⎣
Sk
1 Sk
12 Sk
13 . . . Sk
1k
Sk
12 Sk
2 Sk
13 . . . Sk
1k
...
...
. . .
. . .
...
Sk
1k Sk
2k Sk
3k . . . Sk
k
⎤
⎥
⎥
⎥
⎦
+
⎡
⎢
⎢
⎢
⎣
S̄k S̄k S̄k . . . S̄k
S̄k S̄k S̄k . . . S̄k
...
...
. . .
. . .
...
S̄k S̄k S̄k . . . S̄k
⎤
⎥
⎥
⎥
⎦
︸ ︷︷ ︸
Gk
+
⎡
⎢
⎢
⎢
⎣
S1 0 0 . . . 0
0 S2 0 . . . 0
...
...
. . .
. . .
...
0 0 0 . . . Sk
⎤
⎥
⎥
⎥
⎦
︸ ︷︷ ︸
Hk
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
. (15)
According to the Minkowski determinant theorem [50], if
A, B, and C are positive semidefinite matrices, we have
det(A + B + C) ≥ det(A) + det(B) + det(C) ≥ 0. (16)
Thus, we can analyze the three terms separately. Since Si > 0,
Hk in (15) is positive definite and its determinant is strictly
positive. Gk is also positive semidefinite since it can be writ-
ten as Gk = Nk	
Nk where Nk =
√
S̄k�11×k. Therefore, if the
Matrix Fk in (15) is positive semidefinite, then the theorem is
proved. To show that Fk is positive semidefinite, we study its
leading principal minors.
We have to prove that the determinant of the tth leading
principal minors of Fk is nonnegative. Let us denote
Fk
t �
⎡
⎢
⎢
⎢
⎣
Sk
1 Sk
12 Sk
13 . . . Sk
1t
Sk
12 Sk
2 Sk
13 . . . Sk
1t
...
...
. . .
. . .
...
Sk
1t Sk
2t Sk
3t . . . Sk
t
⎤
⎥
⎥
⎥
⎦
. (17)
We break Fk
t down into two matrices
∣
∣
∣Fk
t
∣
∣
∣ = det
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
Lt
︷ ︸︸ ︷⎡
⎢
⎢
⎢
⎣
St
1 St
12 St
13 . . . St
1t
St
12 St
2 St
13 . . . St
1t
...
...
. . .
. . .
...
St
1t St
2t St
3t . . . St
t
⎤
⎥
⎥
⎥
⎦
+
⎡
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎢
⎣
k∑
j=t+1
xj
k∑
j=t+1
xj . . .
k∑
j=t+1
xj
k∑
j=t+1
xj
k∑
j=t+1
xj . . .
k∑
j=t+1
xj
...
. . .
. . .
...
k∑
j=t+1
xj
k∑
j=t+1
xj . . .
k∑
j=t+1
xj
⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎦
︸ ︷︷ ︸
Mk
t
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
.
(18)
Again, we apply the Minkowski determinant theorem. Matrix
Mk
t is positive semidefinite, because it has the same structure
as Gk. Therefore, sufficient condition for Fk
t ≥ 0 is Lt ≥ 0.
Comparing Lt with Fk in (15) shows their similar structure.
Since the theorem holds for the base case, i.e., F1 = 0, the
proof is completed by induction.
V. MEAN FIELD GAME WITH GRADIENT
LEARNING DYNAMICS
Finding the NE point of the game by intersecting the BR
functions of the players in (7) is not practical nor compu-
tationally tractable for large populations. Because, first, one
needs to know the objective function of all the agents which
is not reasonable, and second, to obtain the NE point, we
need to intersect too many saturating functions in (7) which
is not computationally feasible. Therefore, we employ the MF
approach to avoid such problems. From the other side, in the
real world, usually, players do not act “fully rational.” That
could be due to the tendency of humans to decide myopic with
gradual decision update and limited computation. This feature
of decision making is known as “bounded rationality.” It has
been shown that naive expectation and myopic adjustment can
well represent the human behavior in decision making with-
out anticipation of the future [49], [51]–[53]. Due to this point,
the gradient-based method as a prevalent model of bounded
rationality is used for the decision making of players.
In gradient-based learning (GD), players use the following
strategy:
xi[k + 1] = xi[k] + γi
∂Ji(x)
∂xi
(19)
where k is the game iteration and γi is the learning rate of
the player i. However, to compute the derivation of the payoff
function in (19), each player needs to know the strategy of
other players. A possible solution for this problem is the use
of the MF game theory.
By looking at (3), it can be realized that the payoff function
of the player i is affected by the strategies of all other agents by
an aggregative term. We can consider this aggregative term as
the MF term and estimate its value using the naive estimation
as follows:
Z[k] =
N∑
j=1
xj[k] (20)
where Z[k] is the MF term at iteration k.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
7630 IEEE INTERNET OF THINGS JOURNAL, VOL. 7, NO. 8, AUGUST 2020
Algorithm 1: MF Gradient Learning
Initialization: k = 1 and Z[0] = Z0
while ε > ε0 do
Players choose their strategy according to
Equation (22)
Update MF term by (23).
ε = |Z[k + 1] − Z[k]|
k = k + 1
end
A fundamental assumption behind the MF game is that
the number of players is large enough in which, the change
in a single player’s strategy would not significantly change
the MF term. This assumption is valid in our case which is
a blockchain network. Therefore, each player estimates the
total computational power of the network at each iteration
(i.e., Z[k]).
The payoff for player i is rewritten as
JMF
i [k] = Ai
xi[k]
Z[k]
− pixi[k]. (21)
Applying (21) to (19), we will get
xj[k + 1] = xj[k] + γj
(
Aj
Z[k]
− pj
)
. (22)
As we see, the updated strategy of each player is obtained
as a function of the MF term. Therefore, the update equation
for the MF term in (20) can be rewritten as the following
fixed-point iteration:
Z[k + 1] = �(Z[k]) = Z[k] +
∑
j∈N
γj
(
Aj
Z[k]
− pj
)
. (23)
Finally, the game overlying algorithm is given in
Algorithm 1 which shows alternating update of the MF term
and the strategies of players.
A. Convergence
In what follows, the convergence of the proposed MF
gradient learning algorithm is studied.
Theorem 2: A Sufficient condition for the convergence of
Algorithm 1 is
∑
j∈N
γjAj < 2S2 (24)
where S =∑i∈N xmin
i .
Proof: According to the Banach fixed-point theorem [54],
the iteration provided in (23) converges if the mapping �(.)
is contractive, which is
‖�(w) − �(v)‖ < ‖w − v‖ (25)
where �(w) is obtained from (23), and w and v are any
possible values for Z[k].
Simplifying the left-hand side of (25)
‖�(w) − �(v)‖ =
∥
∥
∥
∥
∥
∥
w − v +
∑
j∈N
γjAj
(
1
w
− 1
v
)
∥
∥
∥
∥
∥
∥
= ‖w − v‖.
∥
∥
∥
∥
∥
∥
1 − 1
wv
∑
j∈N
γjAj
∥
∥
∥
∥
∥
∥
. (26)
From Assumption 1, we consider S = ∑
j∈N xmin
j > 0.
Hence, w, v ≥ S > 0. Applying these inequalities, we obtain
‖�(w) − �(v)‖
‖w − v‖ ≤
∥
∥
∥
∥
∥
1 −
∑
j∈N γjAj
S2
∥
∥
∥
∥
∥
. (27)
In order to satisfy the contractive mapping condition, we
should choose γj such that
∑
j∈N
γjAj < 2S2. (28)
In the special case where γj = γ , this condition could be
simplified as
γ <
2S2
∑
j∈N Aj
. (29)
Note that the above condition is the conservative lowest
bound of γ . γj could be chosen a much bigger value and the
MF term will still converge to its final value.
B. ε-Nash Equilibrium
After convergence analysis of the proposed MF game, a rea-
sonable question that arises is that where does the proposed
algorithm converges to. Since in the MF game, each player
encapsulates the effect of all players with the MF term and
neglects its own effect on the MF game, the MF solution
might be slightly different from the BR solution presented in
Section IV. Therefore, the concept of MF ε-NE is introduced
as follows.
Definition 3 (MF ε-NE): A strategy profile (x∗
1, . . . , x∗
n) is
an MF ε-NE, if there exists ε > 0 such that for every player
i, the following condition holds:
Ji
⎛
⎝x∗
i ,
∑
j∈N
x∗
j
⎞
⎠ ≥ max
y∈Xi
Ji
⎛
⎝y,
⎛
⎝y +
∑
j �=i
x∗
j
⎞
⎠
⎞
⎠− ε. (30)
In the MF game, usually, as the number of players grows,
ε uniformly goes to zero and the MF solution approaches the
exact solution [36], [55]. In our case, we show that ε uniformly
goes to zero as the network computational power increases.
Theorem 3: The difference in the payoff of agents at NE
and at the converged point of Algorithm 1 is a decreasing
function of the network computational power.
Proof: We are going to calculate the difference
between players’ exact BR and MF. In the converged point
of Algorithm 1, players’ strategies satisfy the following
condition:
x∗
i =
{
xmax
i Z∗ < Ai
pi
xmin
i Z∗ > Ai
pi
(31)
where Z∗ is the converged MF term of the algorithm. In gen-
eral, this condition holds for any decision-making dynamics
based on the MF term.
We investigate this difference for three different cases.
1) If xBR
i = xmax
i , then xMF
i = xmax
i . Following the nota-
tion introduced in (5) and (7), and considering Si �
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
TAGHIZADEH et al.: MEAN FIELD GAME FOR EQUILIBRIUM ANALYSIS OF MINING COMPUTATIONAL POWER IN BLOCKCHAINS 7631
∑
j∈N xj − xi, if xmax
i ≤ x̂i, then xBR
i = xmax
i . Then, we
have
xmax
i <
√
Ai
pi
Si − Si. (32)
Applying xmax
i ≥ xmin
i ≥ 0
0 <
√
Ai
pi
Si − Si, 0 < Si <
Ai
pi
, 0 <
√
Ai
pi
Si <
Ai
pi
.
(33)
Combining (32) and (33), we have
xmax
i + Si <
Ai
pi
, Z <
Ai
pi
, xMF = xmax
i . (34)
As a result, in this case, the NE and ε-NE are exactly
the same. �x = �J = 0.
2) If xMF
i = xmin
i , then xBR
i = xmin
i . According to (31), we
have
Z >
Ai
pi
, xmin
i + Si >
Ai
pi
,
√
Si >
√
Ai
pi
− xmin
i . (35)
On the other hand
√
Ai
pi
− xmin
i >
√
Ai
pi
+
√
Ai
pi
− 4xmin
i
2
. (36)
Combining (35) and (36), we have
√
Si >
√
Ai
pi
+
√
Ai
pi
− 4xmin
i
2
, x∗
i < xmin
i , xBR
i = xmin
i .
(37)
As a result, in this case, the NE and ε-NE are exactly
the same. �x = �J = 0.
3) If Z > Ai/pi and xmin
i < x∗
i < xmax
i , then �J = O(1/M),
where Si = Mxmax
i and M >> 1
xmin
i < x∗
i < xmax
i
xmin
i <
√
Ai
pi
Si − Si < xmax
i . (38)
Inequality (38) has two solutions. The first solution
√
Ai
pi
−
√
Ai
pi
− 4xmin
i
2
<
√
Si
<
√
Ai
pi
−
√
Ai
pi
− 4xmax
i
2
Ai
2pi
− xmin
i − 1
2
√
Ai
pi
√
Ai
pi
− 4xmin
i < Si
<
Ai
2pi
− xmax
i − 1
2
√
Ai
pi
√
Ai
pi
− 4xmax
i (39)
and from the assumption of this case, we have
Z <
Ai
pi
, Si + xmax
i <
Ai
pi
, xmax
i <<
Ai
pi
. (40)
As a result
√
Ai
pi
− 4xm
i ≈
√
Ai
pi
(
1 − 2pixm
i
Ai
)
(41)
where xm
i stands for either xmin
i or xmax
i . Applying
approximation of (41) to inequality for the first solu-
tion in (39), we obtain 0 < Si < 0, which means this
solution is not feasible. The second solution
√
Ai
pi
+
√
Ai
pi
− 4xmax
i
2
<
√
Si <
√
Ai
pi
+
√
Ai
pi
− 4xmin
i
2
(42)
using first term of the Taylor series
Ai
2pi
− xmax
i + 1
2
√
Ai
pi
√
Ai
pi
− 4xmax
i < Si
<
Ai
2pi
− xmin
i − 1
2
√
Ai
pi
√
Ai
pi
− 4xmin
i . (43)
Applying (41)–(43), we have
Ai
pi
− 2xmax
i < Si <
Ai
pi
− 2xmin
i . (44)
As a result
Ai
pi
< (M + 2)xmax
i . (45)
Now, we form �J
�J = JBR − JMF
= Ai
xBR
xBR + Si
− pix
BR − Ai
xMF
xMF + Si
+ pix
MF (46)
and thus
�J
�x
= AiSi
(
xBR + Si
)(
xMF + Si
) − pi
≤ Ai
Si
− pi = pi
[
Ai
piSi
− 1
]
≤ pi
[
(M + 2)xmax
i
Mxmax
i
− 1
]
= pi
2
M
. (47)
As a result, in this case, the difference between NE
and ε-NE decreases as the computational power of the
network increases.
In summary, as the computational power of the network
grows, the MF game becomes a better estimation of the exact
game, meaning that MF-ε-NE approaches the NE point of the
game.
VI. SIMULATION
In this section, numerical simulations are performed to eval-
uate the proposed MF method. This section includes two
parts. First, the MF approach is compared to the BR method,
which is the best theoretical solution, considering complete
information on the payoff function of players. Second, the
sensitivity analysis of parameters is performed and the con-
vergence of the MF term is investigated also with dynamic
settings of a practical network.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
7632 IEEE INTERNET OF THINGS JOURNAL, VOL. 7, NO. 8, AUGUST 2020
TABLE I
PARAMETERS OF SIMULATIONS
The BR of players is calculated according to (7). For the
MF method, players follow Algorithm 1. Unless otherwise
mentioned, all simulations use parameters specified in Table I.
The parameters are chosen to follow the Bitcoin blockchain
network as an example. Ai represents the reward of suc-
cessfully mining a new block. Currently, each new block
contains 12.5 BTC. Each BTC is assumed to worth $7200,
thus, A = $90k. To account for accessibility, ease of spend-
ing, and privacy values, this parameter is assumed to be from a
uniform distribution in the range of $80k–$100k. pi represents
the price of the computational power unit, which is assumed to
be the electricity price. The price of electricity varies around
the world, but it is mainly between $0.08 and $0.33 per kWh.
The efficiency and hash rate depend on the type of mining
equipment. As an example, Antminer S9 has a hash power of
14 TH/s (Tera Hash per second) and consumes about 1400
W of energy. A simple calculation reveals that this device is
capable of 36 000 TH with 1 kWh of energy. Given the price
of electricity pi, which is the price of each hash completion,
is calculated to be about $2–$9 per EH, hence, it is assumed
to be drawn from a uniform distribution on this range.
To analyze the effect of parameter distribution on the
evolution of the network, the Monte Carlo simulation is con-
ducted with parameter distributions described in the previous
paragraph and summarized in Table I. All simulations are run
five times and the average result is depicted. The codes to
reproduce the results are available at https://github.com/Smart
NetworkLab-UT/Mean-Field-Game-for-Equilibrium-Analysis-
of-Mining-Computational-Power-in-Blockchains.
A. Comparison With Best Response
In the following figures, social welfares of the network
obtained from the BR and MF gradient-based learning are
compared. Social welfare is defined as the sum of all players’
payoffs. In all figures, γ is chosen sufficiently small to ensure
convergence of the MF term. Social welfare is calculated after
the network has converged to the NE point.
Fig. 2 depicts the social welfare for the BR and MF response
under gradient-based decision dynamics. Since BR is the the-
oretical best solution, it always gives higher payoff than that
of the MF method. However, the MF solution is very close
to the optimal solution by considering incomplete information
of the players from the rivals’ model. The fluctuations are
due to randomness of parameters. As the number of players
increases, the network becomes more competitive, and due to
competitive action of players, each agents’ surplus decreases
and the total utility of players, i.e., network’s social welfare
decreases.
Fig. 2. Social welfare of the network for BR and MF solutions, for different
network sizes.
Fig. 3. Social welfare of the network for BR and MF solutions, for different
Ai distributions.
In Fig. 3, social welfare for different ranges of Ai is com-
pared. In each case, the Ai of players is uniformly distributed
in the given range. As expected, increasing Ai, which repre-
sents the expected payoff gained by the agent i for successfully
mining a block, results in higher social welfare in the network.
Since the relationship between an agent’s payoff and its Ai is
linear, the social welfare increases almost linearly with Ai.
Finally, Fig. 4 shows the social welfare of the network
for BR and MF for different ranges of pi. In each case, pi
is uniformly distributed in the given range. Since pi repre-
sents the unit price of computational power, it is reasonable to
see social welfare decreases as pi increases. More precisely,
since pi resides in the denominator, the social welfare shows
a reciprocal behavior with respect to pi range.
B. Sensitivity Analysis of Convergence
In this section, the convergence of the MF term is depicted
and analyzed. In all simulations, the range of iterations is cho-
sen large enough to show the convergence of the MF term.
Fig. 5 shows the MF term evolution for three different values
of learning rate, i.e., γ = 0.3, γ = 0.5, and γ = 0.7. The MF
term takes about 100 iterations to reach its 5% bound of its
settling point. Since on average, every 10 min, a new block
is mined in the Bitcoin network, this corresponds to about
17 h. After that, small changes in parameters will quickly
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
TAGHIZADEH et al.: MEAN FIELD GAME FOR EQUILIBRIUM ANALYSIS OF MINING COMPUTATIONAL POWER IN BLOCKCHAINS 7633
Fig. 4. Social welfare of the network for BR and MF solutions, for different
pi distributions.
Fig. 5. MF term versus iteration number for γ = 0.3, 0.5, 0.7.
Fig. 6. MF term for different network sizes, versus iteration number.
be traced. We see that as much as the value of the learn-
ing rate becomes smaller, the convergence of the MF term
becomes slower accordingly. However, a larger learning rate
means more fluctuations in the MF term.
Fig. 6 shows the MF term under iterations of Algorithm 1,
for different number of agents in the network. As seen in this
figure, more agents participating in the network leads to more
computational power. Also, converging to the settling point of
the system takes more time.
In Fig. 7, the MF term evolution of the network is depicted
for a fixed value of Ai = 80 000, while pi ∼ U(2, 9). Three
plots represent the average of five simulations and a confidence
Fig. 7. MF term versus iteration number. Ai of players increase by 50% at
the 500th iteration and the MF term converges quickly to the new equilibrium
point.
Fig. 8. MF term versus iteration number. pi of players decreased by 50% at
the 100th iteration and the MF term converges quickly to the new equilibrium
point.
interval equal to one standard deviation to show the robust-
ness of the proposed MF method. As seen in this figure, the
MF term converges after about 200 iterations. To show the
behavior of the proposed method under parameter changes,
at 500th iteration, Ai increases by 50%. This sudden change
in the parameter value causes the system to move to a new
equilibrium, which is reached after about 300 iterations. In
practice, parameter changes happen more smoothly and the
MF term tracks the system more quickly and smoothly.
Finally, Fig. 8 shows the MF term evolution of the network
for a fixed value of pi = 10, while Ai ∼ U(80k, 100k).
Average over five simulations and a confidence interval of one
standard deviation are drawn in this figure. The convergence
happens at about 30 iterations. To simulate the dynamic change
of parameters in real blockchain networks, pi is perturbed
at 100th iteration by a 50% decrease. The network quickly
reaches the new equilibrium point after only 20 iterations. As
before, this abrupt change is only meant to show the robust-
ness of the algorithm since, in practice, parameters change
gradually.
VII. CONCLUSION
In this article, the concept of the MF game theory was
used to analyze the behavior of mining agents in a PoW
network. An MF gradient learning algorithm was introduced
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
7634 IEEE INTERNET OF THINGS JOURNAL, VOL. 7, NO. 8, AUGUST 2020
and its convergence to ε-NE point of the game was analyzed.
The difference between BR exact solution and MF solution
for each player was calculated and shown that for mining
pools with small computational power compared to the rest
of network, decision making based on the MF term is not
only easier but also as good as the BR method with full
information about other players. Furthermore, if Ai increases,
i.e., network tokens are more valuable, or pi decreases, i.e.,
the unit computational price decreases, e.g., due to technolog-
ical advancements or lower electricity prices, existing agents
would increase their computational power and also new play-
ers might enter the network and thus, the total computational
power of the network increases, making the MF method even
more accurate, and vice versa. Namely, decreases in Ai, e.g.,
due to decrease of the number of network tokens awarded for
each mined block, and increases in pi, e.g., due to rising elec-
tricity prices, the total computational power of the network
decreases, and thus, the MF method becomes more distant
from the BR method and less accurate. On the other hand, the
only parameter that each player must choose in the proposed
method was the learning rate of the gradient-based algorithm.
It was shown that convergence of the MF term is guaranteed
for a small enough learning rate. In addition, a smaller learn-
ing rate leads to more robustness of the algorithm and a larger
learning rate results in faster convergence. Therefore, choosing
the value of the learning parameter, one needs to compromise
between robustness and learning speed. Extending the analysis
provided in this article to other proof concepts, such as PoS,
is considered as future works.
REFERENCES
[1] F. Tschorsch and B. Scheuermann, “Bitcoin and beyond: A technical sur-
vey on decentralized digital currencies,” IEEE Commun. Surveys Tuts.,
vol. 18, no. 3, pp. 2084–2123, 3rd Quart., 2016.
[2] M. Swan, Blockchain: Blueprint for a New Economy. Beijing, China:
O’Reilly Media, 2015.
[3] S. Huh, S. Cho, and S. Kim, “Managing IoT devices using blockchain
platform,” in Proc. IEEE 19th Int. Conf. Adv. Commun. Technol.
(ICACT), 2017, pp. 464–467.
[4] A. Dorri, S. S. Kanhere, R. Jurdak, and P. Gauravaram, “Blockchain for
IoT security and privacy: The case study of a smart home,” in Proc. IEEE
Int. Conf. Pervasive Comput. Commun. Workshops (PerCom Workshops),
2017, pp. 618–623.
[5] A. Banafa, “IoT and blockchain convergence: Benefits and challenges,”
IEEE Internet Things J., early access.
[6] C. Xu et al., “Making big data open in edges: A resource-efficient
blockchain-based approach,” IEEE Trans. Parallel Distrib. Syst., vol. 30,
no. 4, pp. 870–882, Apr. 2019.
[7] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When mobile
blockchain meets edge computing,” IEEE Commun. Mag., vol. 56, no. 8,
pp. 33–39, Aug. 2018.
[8] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for blockchain
networks,” IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600,
Jun. 2019.
[9] J. Kang, R. Yu, X. Huang, S. Maharjan, Y. Zhang, and E. Hossain,
“Enabling localized peer-to-peer electricity trading among plug-in hybrid
electric vehicles using consortium blockchains,” IEEE Trans. Ind.
Informat., vol. 13, no. 6, pp. 3154–3164, Dec. 2017.
[10] N. Herbaut and N. Negru, “A model for collaborative blockchain-based
video delivery relying on advanced network services chains,” IEEE
Commun. Mag., vol. 55, no. 9, pp. 70–76, Sep. 2017.
[11] M. Li et al., “CrowdBC: A blockchain-based decentralized framework
for crowdsourcing,” IEEE Trans. Parallel Distrib. Syst, vol. 30, no. 6,
pp. 1251–1266, Jun. 2019.
[12] T. M. Fernández-Caramés, and P. Fraga-Lamas, “A review on the
use of blockchain for the Internet of Things,” IEEE Access, vol. 6,
pp. 32979–33001, 2018.
[13] F. X. Olleros and M. Zhegu, Research Handbook on Digital
Transformations. Cheltenham, U.K.: Edward Elgar, 2016.
[14] I. Bentov, C. Lee, A. Mizrahi, and M. Rosenfeld, “Proof of activ-
ity: Extending bitcoin’s proof of work via proof of stake,” ACM
SIGMETRICS Perform. Eval. Rev., vol. 42, no. 3, pp. 34–37, 2014.
[15] F. Saleh, “Blockchain without waste: Proof-of-stake,” in Proc. SSRN,
2019, Art. no. 3183935.
[16] P. K. Sharma and J. H. Park, “Blockchain based hybrid network archi-
tecture for the smart city,” Future Gener. Comput. Syst., vol. 86,
pp. 650–655, Sep. 2018.
[17] G. Sagirlar, B. Carminati, E. Ferrari, J. D. Sheehan, and E. Ragnoli,
“Hybrid-IoT: Hybrid blockchain architecture for Internet of Things-
pow sub-blockchains,” in Proc. IEEE Int. Conf. Internet Things
(iThings) IEEE Green Comput. Commun. (GreenCom) IEEE Cyber
Phys. Soc. Comput. (CPSCom) IEEE Smart Data (SmartData), 2018,
pp. 1007–1016.
[18] M. Romiti, A. Judmayer, A. Zamyatin, and B. Haslhofer, “A deep dive
into bitcoin mining pools: An empirical analysis of mining shares,” 2019.
[Online]. Available: arXiv:1905.05999.
[19] K. Suankaewmanee, D. T. Hoang, D. Niyato, S. Sawadsitang,
P. Wang, and Z. Han, “Performance analysis and application of mobile
blockchain,” in Proc. IEEE Int. Conf. Comput. Netw. Commun. (ICNC),
2018, pp. 642–646.
[20] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Distributed
resource allocation in blockchain-based video streaming systems with
mobile edge computing,” IEEE Trans. Wireless Commun., vol. 18, no. 1,
pp. 695–708, Jan. 2019.
[21] A. Reyna, C. Martín, J. Chen, E. Soler, and M. Díaz, “On blockchain and
its integration with IoT. Challenges and opportunities,” Future Gener.
Comput. Syst., vol. 88, pp. 173–190, Nov. 2018.
[22] D. Minoli and B. Occhiogrosso, “Blockchain mechanisms for IoT
security,” Internet Things, vols. 1–2, pp. 1–13, Sep. 2018.
[23] T. Jiang, H. Fang, and H. Wang, “Blockchain-based Internet of
Vehicles: Distributed network architecture and performance analysis,”
IEEE Internet Things J., vol. 6, no. 3, pp. 4640–4649, Jun. 2019.
[24] Y. Sun, L. Zhang, G. Feng, B. Yang, B. Cao, and M. A. Imran,
“Blockchain-enabled wireless Internet of Things: Performance analysis
and optimal communication node deployment,” IEEE Internet Things J.,
vol. 6, no. 3, pp. 5791–5802, Jun. 2019.
[25] T. Klein, H. P. Thu, and T. Walther, “Bitcoin is not the new gold—
A comparison of volatility, correlation, and portfolio performance,” Int.
Rev. Financ. Anal., vol. 59, pp. 105–116, Oct. 2018.
[26] M. A. Ferrag, M. Derdour, M. Mukherjee, A. Derhab, L. Maglaras,
and H. Janicke, “Blockchain technologies for the Internet of Things:
Research issues and challenges,” IEEE Internet Things J., vol. 6, no. 2,
pp. 2188–2204, Apr. 2019.
[27] D. K. Tosh, S. Shetty, X. Liang, C. A. Kamhoua, K. A. Kwiat, and
L. Njilla, “Security implications of blockchain cloud with analysis of
block withholding attack,” in Proc. 17th IEEE/ACM Int. Symp. Cluster
Cloud Grid Comput., 2017, pp. 458–467.
[28] M. A. Khan and K. Salah, “IoT security: Review, blockchain solu-
tions, and open challenges,” Future Gener. Comput. Syst., vol. 82,
pp. 395–411, May 2018.
[29] B. Alvarez-Pereira et al., “Network and conversation analyses of
bitcoin,” in Proc. Complex Syst. Summer School, 2014. [Online].
Available: https://madeinhaus.s3.amazonaws.com/sfi-com/staging/
uploads/ckeditor/2016/11/02/network-and-conversation-analyses-of-
bitcoin.pdf
[30] Z. Liu et al., “A survey on applications of game theory in blockchain,”
2019. [Online]. Available: arXiv:1902.10865.
[31] A. Sapirshtein, Y. Sompolinsky, and A. Zohar, “Optimal selfish mining
strategies in bitcoin,” in Proc. Int. Conf. Financ. Cryptography Data
Security, 2016, pp. 515–532.
[32] A. Kiayias, E. Koutsoupias, M. Kyropoulou, and Y. Tselekounis,
“Blockchain mining games,” in Proc. ACM Conf. Econ. Comput., 2016,
pp. 365–382.
[33] N. Dimitri, “Bitcoin mining as a contest,” Ledger, vol. 2, pp. 31–37,
Sep. 2017.
[34] I. Tsabary and I. Eyal, “The gap game,” in Proc. ACM SIGSAC Conf.
Comput. Commun. Security, 2018, pp. 713–728.
[35] X. Liu, W. Wang, D. Niyato, N. Zhao, and P. Wang, “Evolutionary
game for mining pool selection in blockchain networks,” IEEE Wireless
Commun. Lett., vol. 7, no. 5, pp. 760–763, Oct. 2018.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
TAGHIZADEH et al.: MEAN FIELD GAME FOR EQUILIBRIUM ANALYSIS OF MINING COMPUTATIONAL POWER IN BLOCKCHAINS 7635
[36] J.-M. Lasry and P.-L. Lions, “Mean field games,” Jpn. J. Math., vol. 2,
no. 1, pp. 229–260, 2007.
[37] O. Guéant, J.-M. Lasry, and P.-L. Lions, “Mean field games and appli-
cations,” in Paris–Princeton Lectures on Mathematical Finance 2010.
Berlin, Germany: Springer, 2011, pp. 205–266. [Online]. Available:
https://link.springer.com/chapter/10.1007/978-3-642-14660-2_3
[38] F. Bagagiolo and D. Bauso, “Mean-field games and dynamic demand
management in power grids,” Dyn. Games Appl., vol. 4, no. 2,
pp. 155–176, 2014.
[39] R. Couillet, S. M. Perlaza, H. Tembine, and M. Debbah, “Electrical
vehicles in the smart grid: A mean field game analysis,” IEEE J. Sel.
Areas Commun., vol. 30, no. 6, pp. 1086–1096, Jul. 2012.
[40] M. Kamgarpour and H. Tembine, “A Bayesian mean field game approach
to supply demand analysis of the smart grid,” in Proc. IEEE 1st Int.
Black Sea Conf. Commun. Netw. (BlackSeaCom), 2013, pp. 211–215.
[41] F. Mériaux, V. S. Varma, and S. Lasaulce, “Mean field energy games
in wireless networks,” in Proc. IEEE Conf. Record 46th Asilomar Conf.
Signals Syst. Comput. (ASILOMAR), 2012, pp. 671–675.
[42] Y. Wang, F. R. Yu, H. Tang, and M. Huang, “A mean field game theoretic
approach for security enhancements in mobile ad hoc networks,” IEEE
Trans. Wireless Commun., vol. 13, no. 3, pp. 1616–1627, Mar. 2014.
[43] H. Tembine, “Energy-constrained mean field games in wireless
networks,” Strategic Behav. Environ., vol. 4, no. 2, pp. 187–211, 2014.
[44] J. A. Garay, A. Kiayias, and N. Leonardos, “The bitcoin backbone pro-
tocol: Analysis and applications,” in Proc. Annu. Int. Conf. Theory Appl.
Cryptograph. Techn., 2015, pp. 281–310.
[45] M. Rosenfeld, “Analysis of bitcoin pooled mining reward systems,”
2011. [Online]. Available: arXiv:1112.4980.
[46] K. J. O’Dwyer and D. Malone, “Bitcoin mining and its energy footprint,”
in Proc. ISSC, 2014, pp. 1–6.
[47] M. K. Jensen, “Aggregative games and best-reply potentials,” Econ.
Theory, vol. 43, no. 1, pp. 45–66, 2010.
[48] F. Parise, S. Grammatico, B. Gentile, and J. Lygeros, “Network aggrega-
tive games and distributed mean field control via consensus theory,”
2015. [Online]. Available: arXiv:1506.07719.
[49] J. B. Rosen, “Existence and uniqueness of equilibrium points for con-
cave n-person games,” Econometrica J. Econ. Soc., vol. 33, no. 3,
pp. 520–534, 1965.
[50] M. Marcus and H. Minc, A Survey of Matrix Theory and Matrix
Inequalities, vol. 14. Newburyport, MA, USA: Courier Corporat., 1992.
[51] C. Camerer, “Bounded rationality in individual decision making,” Exp.
Econ., vol. 1, no. 2, pp. 163–183, 1998.
[52] M. Kandori, G. J. Mailath, and R. Rob, “Learning, mutation, and long
run equilibria in games,” Econometrica J. Econ. Soc., vol. 61, no. 1,
pp. 29–56, 1993.
[53] A. Dixit, “Comparative statics for oligopoly,” Int. Econ. Rev., vol. 27,
no. 1, pp. 107–122, 1986.
[54] A. Granas and J. Dugundji, Fixed Point Theory. New York, NY, USA:
Springer-Verlag, 2013. [Online]. Available: https://www.springer.com/
gp/book/9780387001739
[55] M. Huang, P. E. Caines, and R. P. Malhamé, “Individual and mass
behavior in large population stochastic wireless power control problems:
Centralized and Nash equilibrium solutions,” in Proc. 42nd IEEE Int.
Conf. Decis. Control, vol. 1, 2003, pp. 98–103.
Amirheckmat Taghizadeh received the B.Sc. and
M.Sc. degrees in electrical engineering from the
University of Tehran, Tehran, Iran, in 2016 and
2019, respectively.
He is currently a Researcher with the School of
Electrical and Computer Engineering, University of
Tehran. His research interests include game theory,
decentralized control, and smart grids.
Hamed Kebriaei (Senior Member, IEEE) received
the B.Sc. degree in electrical engineering from the
University of Tehran, Tehran, Iran, in 2005, the
M.Sc. degree in electrical engineering from Tarbiat
Modares University, Tehran, in 2007, and the Ph.D.
degree in control systems from the University of
Tehran in 2010.
He is currently an Associate Professor with the
School of Electrical and Computer Engineering,
University of Tehran. His research interests include
game theory, and optimization and stochastic control
with applications in network systems and smart grids.
Dusit Niyato (Fellow, IEEE) received the B.Eng.
degree from the King Mongkut’s Institute of
Technology Ladkrabang, Bangkok, Thailand, in
1999, and the Ph.D. degree in electrical and com-
puter engineering from the University of Manitoba,
Winnipeg, MB, Canada, in 2008.
He is currently a Professor with the School
of Computer Science and Engineering, Nanyang
Technological University, Singapore. His research
interests are in the area of energy harvesting for
wireless communication, Internet of Things, and
sensor networks.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:43 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice