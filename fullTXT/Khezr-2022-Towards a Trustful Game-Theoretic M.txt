Towards a Trustful Game-Theoretic Mechanism for Data Trading in the Blockchain-IoT Ecosystem
Vol.:(0123456789)
Journal of Network and Systems Management (2022) 30: 56
https://doi.org/10.1007/s10922-022-09669-1
1 3
Towards a Trustful Game‑Theoretic Mechanism for Data 
Trading in the Blockchain‑IoT Ecosystem
Seyednima Khezr1  · Abdulsalam Yassine2 · Rachid Benlamri2,3
Received: 24 November 2021 / Revised: 8 March 2022 / Accepted: 27 May 2022 /  
Published online: 2 July 2022 
© The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature 
2022
Abstract
This paper introduces a data trading system based on the blockchain network, where 
a trusted data aggregator collects data from the Internet of Things (IoT) device own-
ers and sells them in the format of different packages to multiple buyers. In this 
paper, we formulate infinitely repeated games between rational buyers that are com-
peting with each other to obtain the required data records. Buyers update their bid-
ding strategies to maximize their profits based on the outcome of previous games. 
We validate the existence and uniqueness of the Nash equilibrium in a one-shot 
game, finite, and infinitely repeated games. To ensure data owners’ privacy, a novel 
trust mechanism design is used to impede untruthful buyers to win the game. To 
prevent the use of a third party such as an auctioneer, all of these methods are imple-
mented as smart contracts on the Hyperledger blockchain. We provide extensive 
analysis to demonstrate that the proposed system satisfies the properties of com-
pleteness, soundness, computationally efficiency, truthfulness, budget balance, and 
individual rationality. Lastly, we provide simulation experiments to demonstrate the 
performance of our blockchain network using different metrics, such as transaction 
throughput, latency, and resource consumption under different parameters.
Keywords Blockchain network · Internet of things · Trust · Data trading · Data 
privacy · Game theory
1 Introduction
The IoT ecosystem is expanding daily, connecting the physical and digital worlds 
to transform the way we live and do business. With an increasing number of con-
nected devices, a huge amount of data is instantly collected, aggregated, and 
 * Seyednima Khezr 
 skhezr@lakeheadu.ca
Extended author information available on the last page of the article
http://orcid.org/0000-0002-5910-6171
http://crossmark.crossref.org/dialog/?doi=10.1007/s10922-022-09669-1&domain=pdf
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 2 of 33
exploited in new applications in areas such as smart homes, smart cities, and 
health [1]. According to the estimates conducted by the International Data Cor-
poration report [2], 41.6 billion IoT devices will be connected to the Internet by 
2025 and generating 79.4 zettabytes of data. As the IoT devices become more 
instrumented and interconnected, data will grow exponentially [3, 4]. Data from 
IoT devices has spawned a new data economy in which people and companies can 
sell and exchange data [5]. As data continues to pile up, the data economy will 
continue to emerge and enable new IoT data marketplaces. Several companies, 
such as Terbine and Dfintech, have developed real-world applications to manage 
and monetize IoT generated data. These applications allow IoT device owners to 
sell their data to various stakeholders.
However, current online data marketplaces suffer from three main concerns. 
First, online data marketplaces such as CitizenMe, Terbine, Datacoup, DataEx-
change, and Factual, to name a few, use a centralized marketplace for their data 
trading systems, which is vulnerable to cyber-attacks and data leakage [6, 7]. 
Furthermore, it has been evidenced that existing applications that assist the IoT 
device owners to sell their data in exchange for money fail to clearly explain how, 
where, or with whom the users’ data are being shared [8]. Second, existing appli-
cations also tend to package the owners’ data for sale to other companies repeat-
edly [9]. Such information changes hands or ownership and the monetary benefit 
that companies are receiving as a result of selling the data packages is not passed 
back to IoT device owners [10]. Since data records can be sold repeatedly to mul-
tiple buyers, a key question to be addressed is how to devise a strategic nego-
tiation model that maximizes the benefit of data owners and buyers. Third, trust 
becomes a challenge if data buyers are not trustful and they may misuse the data. 
Data owners may be reluctant to sell their data if the buyers are not trustful [11]. 
Thus, a key question is how to impede and impose penalties on untruthful buy-
ers. Therefore, one significant aspect that needs to be taken into consideration is 
ensuring data owners have control of their data and have the autonomy to decide 
what information is collected, how it is used, and most importantly, how much 
it is worth. Consequently, designing a trustworthy data market, capable of sell-
ing and buying data which incentivizes the participants to maximize their profits 
under a fair trading mechanism is very critical.
To tackle the first challenge, we integrated the blockchain as a trustworthy and 
transparent mechanism that preserves the data owner’s control over their data. 
Blockchain technology is difficult to tamper with and transactions are secure as 
well as transparent to all parties, including the users who generated the data [12]. 
As such, blockchain presents a solution for developing a transparent and trustful 
network for data trading and gives the data owners full control of their informa-
tion, guards their privacy [13]. To tackle the second challenge, we formulate a 
non-cooperative game in infinite setup between the buyers in which each buyer 
strategically chooses the bidding price for that specific data to maximize their 
utilities. In particular, in each one-shot game (stage-game), a limited amount of 
records is traded. The game is played repeatedly and buyers learn from the out-
come of the previous stage and update their bids over the next periods to increase 
their utilities until the demand is met. To tackle the third challenge, we propose 
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 3 of 33 56
a novel mechanism design based on the trust score. The proposed mechanism 
design impedes untruthful buyers to obtain the data based on a scoring rule func-
tion. Also, if the winner is not fully trusted (i.e., trust score less than 1), we con-
sider a penalty on his/her payment for the current stage of the game. We build the 
entire scheme in the form of smart contracts on the Hyperledger blockchain to 
show our system is not using a third party (e.g., auctioneer). The main contribu-
tions of this paper are as follows:
• We design a blockchain-based system for data trading using a game-theoretic 
approach in the IoT ecosystem. In particular, we formulate a non-cooperative 
infinitely repeated game in which rational buyers are strategically deciding on 
their bids and learn from the outcome of each one-shot (stage) game and try 
to adjust their bids to maximize their utility. The non-cooperative nature of the 
game in the data market is properly modeled in a one-shot game by carefully 
defining utility functions. Using this one-shot game as a building block, we then 
proceed to define finite and infinitely repeated games with a discount factor that 
captures the repeated interactions among rational buyers.
• We show the existence and uniqueness of the Nash equilibrium under the discon-
tinuous utility function setup. Our proposed system achieves Nash equilibrium 
using pure strategy in a one-shot, discounted finite and infinite repeated game 
horizon, where no buyers in the market can improve their utility by deviating 
their bids.
• To ensure data owners’ assets are protected and are not being misused within 
the data trading system, blockchain is used as a means of data transparency and 
security. Furthermore, we filter out the untruthful buyers based on the scoring 
function, which is calculated through the trust score. In the payment stage, we 
consider a penalty for the winner if he/she is not fully trusted. Even with consid-
ering a penalty, we ensure that the individual rationality property is set up, which 
implies the winner buyer receives a non-negative utility.
• We demonstrate and provide a comprehensive theoretical and experimental anal-
ysis of the proposed system which satisfies the economic and security proper-
ties including, completeness, soundness, computationally efficient, truthful, and 
individually rational. Moreover, we analyze and evaluate the performance of pro-
posed system using Hyperledger Caliper. Our work measures and analyze trans-
action throughput, latency, elapsed time, and resource consumption (memory 
consumption, CPU utilization, and disc read/write operations).
The organization of this paper is as follows: The next section discusses the related 
work. In Sect. 3, the data market structure is presented, followed by non-cooperative 
game theoretic approach for data trading in Sect.  4. Section 5 discusses the Nash 
equilibrium solutions. Section 6 discusses the mechanism design, while Sect. 7 pre-
sents system evaluation. Finally, conclusions are drawn and future research direc-
tions are discussed in Sect. 8.
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 4 of 33
2  Related Work
Extensive research has been conducted in order to monetize and trade data [14–18]. 
Oh et al. [14] proposed a non-cooperative game for data trading with privacy valu-
ation for data consumers in the IoT environment. The paper introduced a method 
to unify the unit price of data for data brokers as well as an optimization model to 
maximize data providers’ profits. Similarly, in other work, Oh et al. [15] proposed a 
data trading model between data owners and consumers as two natural logarithmic 
functions and a data broker who processes data and provides service to the consum-
ers. This model guaranteed that a data broker will find a global maximum point to 
reach the best probability deal to sell the data. Tian et  al. [16] proposed an opti-
mal contract-based model for data trading between data sellers and consumers. This 
model maximizes the data seller’s payoff while satisfying individual rationality and 
incentive compatibility properties for data consumers. The work in [17] introduced 
an iterative auction mechanism for data trading to coordinate the selfish agents in 
an optimal way to prevent direct access to private information. Khokhar et al. [18] 
proposed an entropy-based trust computation model to verify the correctness of 
data from untrusted data providers in the data market. This model utilized the Vick-
rey–Clarke–Groves auction mechanism for the valuation of data providers’ attributes 
for determining truthful pricing strategies.
To build a more transparent data marketplace, blockchain-based data trading 
systems are studied in [19–23], and [24]. Liu et al. [19] introduced an optimal 
pricing mechanism for data trading in the IoT environment adopted by the two-
stage Stackelberg competition based on the blockchain. The model presented a 
pricing and purchasing mechanism between the data consumer and the market-
agency to maximize the profits of both parties. The work in [20] proposes a 
decentralized fair data trading system, which guarantees the availability of data 
and fairness between the sellers and buyers. The model implements homomor-
phic encryption, double-authentication-preventing signatures, and smart con-
tracts to improve data availability and achieve fairness in data trading between 
participants. In the work presented in [19], the authors propose a blockchain-
data market framework and an optimal pricing mechanism. They designed an 
optimal pricing mechanism to support efficient data trading in an IoT environ-
ment using a two-stage Stackelberg game. Sheng et  al. [21] studied a crowd-
sourcing data trading system based on blockchain. The model implements a 
smart contract that enables sellers and buyers to conduct credible and truthful 
data trading while ensuring the copyright and quality of data. The authors also 
proposed a semantic-similarity-based auction mechanism to guarantee truth-
ful data trading. Similarly, the authors in [22] investigated a blockchain-based 
data trading ecosystem that filters out dishonest buyers to guarantee the market’s 
truthfulness. The security model in [22] includes a set of trading protocols based 
on asymmetric cryptography. The work in [23] proposes a trading model based 
on Ethereum smart contracts. It incorporates machine learning to guarantee fair-
ness in data trading. All the participants in the blockchain network achieve a 
consensus on an authentication task, and any potential threats can be identified. 
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 5 of 33 56
Truong et  al. [24] proposed a blockchain-based for sharing IoT data, in which 
data owners can sell their private data. In this framework, smart contracts evalu-
ate access control requests to off-chain encrypted data. Table 1 summarizes the 
comparison of our work and previous studies.
Table 1  Comparison between our work and existing studies
Research studies Decentraliza-
tion
Smart con-
tracts
Reputation com-
putation
Utility maximi-
zation
Perfor-
mance 
evaluation
[14, 15] ✗ ✗ ✗ ✓ ✗
[16, 17] ✗ ✗ ✗ ✓ ✗
[18] ✗ ✗ ✓ ✓ ✗
[19, 20] ✓ ✓ ✗ ✓ ✗
[21, 22] ✓ ✓ ✓ ✗ ✗
[23, 24] ✓ ✓ ✗ ✗ ✗
Our work ✓ ✓ ✓ ✓ ✓
Fig. 1  High-level architecture of the proposed system
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 6 of 33
3  Data Market Structure
Figure 1 shows the high-level architecture of the proposed data market. At a high 
level, data buyers and a data aggregator (DA) register themselves to the certificate 
authority (CA) to obtain a legal identity. The CA issues certificates (digital identi-
ties contained in X.509 digital certificates) to each entity. In this market, continuous 
data records are generated through IoT devices and made for sale by data owners 
(DOs). The latter grant access permission to the DA to aggregate, package, and sell 
data records on their behalf according to a smart contract-based agreement. The DA 
informs all the buyers about the packages available for sale through the blockchain 
network. Buyers simultaneously reply with their bids, which include the bidding 
price and required data records from a specific package. Buyers will compete with 
each other to obtain desired records and learn from the outcome. Afterward, through 
a trustful auctioning process, data records will be awarded to one winner at a given 
time. Later, DA can leave a review score for a winner buyer for the current transac-
tion. All the transactions will be added to the ledger. Our auction mechanism (win-
ner determination and payment allocation) and review score are implemented in the 
form of smart contracts on the blockchain network.
3.1  Assumptions
Before describing the detailed process of the proposed system, the following 
assumptions are made: 
(1) Infinite data records: we assume that DO w ∈ W = {1, 2,… ,m} produces infinite 
data records rt
w
 from IoT devices, such as wearable devices and smart appliances 
at time t. This is reasonable since 41.6 billion IoT devices will be connected to 
Internet by 2025 [2].
(2) Data aggregator We assume that DA is a trusted entity, acting on behalf of 
DOs, involves in technical and operational tasks, such as deriving data records 
value based on DOs’ privacy risk, data encryption, coding a smart contract, and 
blockchain operations. This is reasonable because performing these technical 
tasks for senior citizens equipped with IoT devices would be extremely difficult.
(3) Certificate authority We assume the CA to be fully trusted. This is reasonable 
since the CA is a government agency responsible for managing the identities 
and credentials of a data aggregator and buyers.
(4) Data buyers We assume that the data buyers do not share their bidding values 
among each other, and their behavior is non-cooperative with the goal of maxi-
mizing their benefit.
3.2  Process Details of the Proposed System
Figure  2 describes the sequence diagram of the interaction between DA 
and buyers. Once DA and buyers obtained their certificates, the DA creates 
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 7 of 33 56
different packages based on data types received from DOs. For example, a pack-
age D = {rt
1
, rt
2
,… , rt
m
} may contain smart TV records or energy records. The DA 
encrypts and stores data records in a secure indexed database, and generates a 
decryption key. Once this is completed, the DA sends the index of the records 
to the blockchain. Afterward, the DA publicizes the packages to the blockchain 
network. Data buyers are the end-users who purchase the data. Let B = {1, 2, ..., 
b} be the set of data buyers in our system. Each data buyer is indexed by i ∈ B . 
Each data buyer i submits its bid � t
i
=
(
gi, v
t
i
(x)
)
 to the blockchain network, where 
gi and vt
i
 are total required quantity and reserved value, respectively. We denote x 
as the traded amount of records from package D in the market at time t. In this 
model, a limited number of records will be traded at each time t, until buyers 
fulfill their total demand gi . The traded amount of records x can be defined by 
the CA or can be based on an agreement between players inside the market. For 
example, assume that a package consists of 10 million energy records about TV 
usage. Utility companies (i.e, buyers) are usually interested in different quantities, 
maybe one company is interested in one thousand records, while another com-
pany is interested in one million records, and in each auction period a hundred 
Fig. 2  Sequence diagram describes the interaction between DA and buyers
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 8 of 33
number of records are going to be sold. Thus, companies are going to keep com-
peting with each other and biding simultaneously at each period (stage) until 
obtaining the desired quantity. Finally, after receiving the asking price for data 
records to be traded and bids from buyers, the smart contracts run as follow: 
(1) In the first sub-stage, the winner determination smart contract retrieves the trust 
score of buyers from blockchain. The trust score is determined by DA and buyer 
i’s previous trading experiences. Then, the smart contract will remove the bids 
which are less than the trust threshold. This is done to ensure untrustworthy 
buyers will not have a chance to get the data. Then, smart contract will run the 
scoring rule and announce the winner.
(2) In the second sub-stage, the payment allocation smart contract will run to deter-
mine the payment. In the payment stage, we impose a penalty on the payment 
of the winning buyer with respect to his/her trust score. The winner i receives 
data records and a decryption key. Simultaneously, the DA receives a payment 
amount pi.
Our proposed systems are composed of following polynomial algorithms [25, 26]: 
(1) KeyGenSetup(1�) ⟶ SK : It is run by DA j and takes security parameter � . It 
outputs the encryption key SKj.
(2) Encrypt(SK⇔D) ⟶ C : It is run by the DA j to encrypt data. Given the encryp-
tion key of DA SKj , and data package D , it outputs a ciphertext for the data 
package C.
(3) CreateIndex(SK⇔D⇔C) ⟶ I  : It is run by the DA j to create the index I  . 
Given the encryption key of DA SKj , data package D , ciphertext C , and it out-
puts the searchable index I .
(4) Trapdoor(SK⇔Q) ⟶ TQ : It is run by the DA j to create trapdoor for the 
authorized buyer i. Given the encryption key of DA SKj , and query (e.g., key-
word) Q , it outputs the trapdoor TQ.
(5) Search(I⇔TQ) ⟶ SR : It is run by buyer i and evaluated by smart contract 
(1 or 0). Given the search index I  , and trapdoor TQ , it outputs the search result 
SR , including ciphertext C.
(6) Eval(I⇔TQ) ⟶ � : Given index I  , and trapdoor TQ , it evaluates the search 
function and outputs the correctness proof �.
(7) Verify(TQ,SR,�) ⟶ True or False : Given trapdoor TQ , search SR , and proof 
� , it outputs the (inculding ciphertext C ), and correctness proof � . It outputs True 
if the result is valid (correct) and False otherwise.
(8) Decrypt(SK⇔C) ⟶ D : Given the encryption key SK , and ciphertext C , it 
outputs the decrypted data package D to buyer i.
3.3  Data Value
The value of data will be derived based on DOs’ privacy risk. DOs may have 
different privacy attitudes, and as a result, they may set different values for their 
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 9 of 33 56
data records. For instance, some DOs may be concerned about their privacy and 
would allow a user to access a small portion of data in exchange for a few dol-
lars, whereas others may not be concerned about privacy and they ask for a higher 
price. The DA derives the privacy risk Ωw(r
t
w
) of a DO w as follows [27]:
where PC(rt
w
) denotes privacy concern of DO w, and SL(rt
w
) denotes the sensitivity 
level of data [27]. The DA derives the privacy risk values Ωw,q(r
t
w
) of each w. Each 
DO w is described by a privacy risk value Ωw(r
t
w
) as well as a value of data Vw(r
t
w
) . 
Therefore, there is mapping Z between the privacy risk and the value of data that 
Z = [Ωw(r
t
w
) → Vw(r
t
w
)] . The data values may vary for each DO. In order to find the 
final value of data records for each data type, we calculate the average value of data 
records as follows:
where m is the total number of DOs which participate in selling data for a specific 
data type. Once the data aggregator announces the final value of the data to DOs, 
they can either accept or reject it ⟨Accept,Reject⟩ . If the DO w decides to accept the 
final value then DA collects the data for further processing.
3.4  Data Aggregator Utility
For DA j, we define a cost function Cj(r
t
w
) representing the total cost incurring 
from operation, maintenance and electricity bill for the data records rt
w
 at period 
t. It can be noticed that such cost increases with the size of data records, yielding 
an increasing and strictly convex cost function. We choose a quadratic function to 
model the cost function as follows [28]:
where a, b, c ≥ 0 are constants. These parameters are dependent on the type of oper-
ation, maintenance, and electricity bill incurred to the DA. The utility function of 
DA is modeled by revenue of selling data records minus the cost:
where Rj(r
t
w
) is revenue function that is equal to the number of record sold at time t 
and its corresponding price.
(1)Ω
w
(rt
w
) = PC(rt
w
) × SL(rt
w
) ∀PC, SL ∈ [0, 1]
(2)V̄t =
�∑m
w=1
Vw(r
t
w
)
m
�
(3)Cj(r
t
w
) = a(rt
w
)2 + b(rt
w
) + c
(4)Uj =
T∑
t=1
Rj(r
t
w
) − Cj(r
t
w
)
(5)subject to xt
w
≤ rt
w
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 10 of 33
Equation (4) ensures that the DA trades no more than the agreed upon amount of 
records. Significant notation is summarized in Table 2 for the clarity of readers.
4  A Repeated Game Theoretic Approach for Data Trading Between 
Buyers
In this section, we present a non-cooperative game for data buyers in the infinite 
repeated horizon. A repeated game is one where the buyers repeatedly play the same 
one-shot game in each time period (called a stage game) in which they play simul-
taneously [29]. We first formulate the utility function for a one-shot game G. Then, 
using the one-shot game definition as a building block, we then proceed to define 
finitely GT and infinitely repeated games G∞ that capture repeated interactions 
among the different buyers. We consider a data market setting for one-shot game 
G = ⟨B,Ai, ui⟩ , where B is set of buyers. Each buyer i has an action set Ai . An action 
profile � = (�i, �−i) consists of the bid of buyer i and bids of other buyers, denoted by 
(6)Rj(r
t
w
) = max
T∑
t
rt
w
× pt
ji
,
(7)subject to pt
ji
> Cj(r
t
w
) + V̄t
Table 2  Notations Notation Description
w Data owner (DO) w ∈ W = {1, 2,… ,m}
j Data aggregator (DA)
rt
w
Infinite data records rt
w
 of Do w at time t
i Buyer i ∈ B = {1, 2,… , b}
x Trading amount of records x
Ωw(r
t
w
) Privacy risk
Vw(r
t
w
) Value of data
V̄
t Average value of data records
Cj(r
t
w
) Cost function
Uj Utility function for the DA
ui(�
t
i
, � t
−i
) Utility function for buyer i for one-shot game
vt
i
(x(� t
i
, � t
−i
)) The buyers’ valuation functions vt
i
Ui Overall utility of buyer i
G One-shot game
S(�i) Scoring rule funtion for buyer i bid
GT
�
Finite repeated game with discount factor �
Trt
n
(j, i) Total trust DA has about a given buyer i
T
yi
indirect
Indirect trust
pi(𝛽i) Payment of the winner buyer i
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 11 of 33 56
�−i = (�1, ...., �i−1, �i+1, ..., �b) ∈ A−i . In addition, each buyer i has a real-valued, one-
shot game utility function ui ∶ Ai → ℝ , which maps every action profile � ∈ A into a 
utility for buyer i, where A denotes the cartesian product of the action spaces Ai , written 
as A =
∏B
i=1
Ai.
4.1  Data Buyers Utility
We assume a buyer i, who needs a number of records from package D of a specific 
type, knows his own valuation of the current traded amount of records, but not those of 
his opponents. On receiving the required amount of records, the buyers pay the price 
pt
i
(
x(� t
i
, � t
−i
)
)
 , conditional on winning records, given the other buyers bid � t
−i
 . If the 
game G is played only once, the utility function for the buyer i is the difference between 
valuation for traded amount of records and payment. The utility function ui of buyer i 
for one-shot game is:
where vt
i
 is buyer i’s valuation for the trading amount of records x. It represents how 
much the requested records are worth to the buyer i. The buyer i hopes to pay a 
smaller price pi then his estimated value vi . The buyers’ valuation functions vt
i
 are 
drawn independently from the following equation:
where � denotes the satisfaction rate of buyer i ( 0 ≤ � ≤ 1 ). This means that if buyer 
i is not satisfied with the quality of obtained records at stage t, the valuation of the 
buyer i in next stage decreases as show in in Fig. 3. We assume that the satisfac-
tion rate of buyers i ∈ B is 1 at the beginning. After receiving records at stage t, the 
(8)ui(�
t
i
, � t
−i
) =
∑
t
vt
i
(
x(� t
i
, � t
−i
)
)
− pt
i
(
x(� t
i
, � t
−i
)
)
(9)vt
i
(x(� t
i
, � t
−i
)) = vt
i
(
x
(
1 + log
(
� t
i
(�), � t
−i
(�)
)))
Fig. 3  Valuation function. This example shows that the valuation v
i
 of buyers B decreases on the basis 
of the satisfaction rate � . Note that this example does not take into account the average of all satisfaction 
rates
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 12 of 33
buyer measures the quality of the records and updates the satisfaction rate. The buy-
ers use the average of satisfaction rates as their valuation for the next stage. Figure 2 
describes they way valuations are affected by the satisfaction rates.
In the next stage, the game G structure stage does not change. Buyers will con-
tinue bidding until they obtain the total quantity they needed. The overall utility of 
buyer i in the repeated game GT
�
 is:
where � is a discounted factor and � t
−i
 denotes the set of bids submitted by the buy-
ers other than i at stage t. We assume that future utilities are discounted proportion-
ally at some rate (0 ≤ � ≤ 1) . � =
1
1+r
 , where r is the interest rate. We used ficti-
tious play as type of learning for the buyers [30, 31]. Each buyer i starts with some 
belief about what are the bids of other buyers. Each buyer i updates his/her beliefs 
based on what he/she observed in the iteration of GT
�
 . More formally, let �t
i
(�−i) 
denotes the number of times buyer i has observed (�−i) in the previous stages. So, 
buyer i assesses other buyers bid using fictitious learning as follow [30, 31]:
where �t
i
(�i) is the probability that is proportional to the time it was played in the 
past. This means that buyer i forecasts buyer −i ’s bid at time t to be the empirical 
frequency distribution of past G. Given buyer i’s belief about other buyers play, he/
she chooses the bid at time t to maximize his/her utility [30, 31]:
5  Nash Equilibrium Solutions
The Nash equilibrium (NE) of a game is an action profile (list of actions—one for 
each buyer) with the property that no player can increase his utility to achieve higher 
benefits by choosing a different action given the other buyers’ actions. To maximize 
the utilities, the buyers adjust their bids to reach the equilibrium. This means that 
if a NE exists for the game, then all buyers i ∈ B are expected to converge to the 
state represented by the equilibrium. So, each buyer i aims to choose the strategy or 
action that maximizes its utility function to determine the best outcome. In addition, 
the players in the one-shot game choose their own bids independently and simulta-
neously and try to maximize their expected utility. There are two types of strategies 
or actions available for players: pure strategies and mixed strategies. Pure strategy 
defines an action that a player wants to take with positive probability from a given 
set of strategies in the game. In contrast, a mixed strategy for a player is a probabil-
ity distribution over his/her pure-strategy choices. In our model, we will prove that 
(10)Ui = (1 − �)
T∑
t=1
� t−1ui(�
t
i
, � t
−i
)
(11)�t
i
(�i) =
�t
i
(�−i)∑
�−i∈A−i �
t
i
(�−i)
(12)� t
i
∈ arg max
�i∈A−i
(�i, �
t
i
)
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 13 of 33 56
the pure strategy equilibrium exists for the proposed one-shot game. The objective 
function of the players is to maximize their utilities. Before finding the NE of our 
one-shot game G, we first define formally the best response and NE. For the sake of 
clarity, we are dropping t notations, referring to the time, since we are dealing with 
a one-shot game.
Definition 1 (Best response [32]) Assuming all the buyers i ∈ B are rational, a buyer 
i played his/her bid 
(
�∗
i
)
 as best response to the other buyers’ �−i played action 
(
�∗
−i
)
 
such that:
Definition 2 (Nash equilibrium [32]) The NE is a profile of actions, one for each 
buyer, such that each action is the best response to the other buyers actions. Specifi-
cally, an action profile � is said to be NE, if:
We will first define the existence of NE for the finite repeated game, which can 
be viewed as a generalization of the equilibrium concept for the one-shot game. We 
should point out here that we won’t be able to construct subgame perfect nash equi-
librium (SPNE) i.e., induced normal form - backward induction, which is the stand-
ard solution for finding NE. SPNE works only when the utility function is continu-
ous and only applies to finite games. However, in our model, the utility function of 
buyers in (8) introduces a discontinuity in utilities. This means that the ui could be 
zero at some stage t for buyer i, or it could have non-zero value. Hence, we will use 
the following approach to finding the NE in every one-shot game with a discontinu-
ous utility setting. Next, we will leverage the results by using the Folk theorem in 
the infinitely horizon setup to find NE.
Theorem  1 A Nash equilibrium exists in the proposed non-cooperative game 
G = ⟨B,Ai, ui⟩.
Proof The Nash equilibrium exists only when the following conditions are satisfied 
[33]: 
(1) Ai ⊆ ℝ
m, (i = 1, ...., b) is a non-empty, compact and convex subset of Euclidean 
space.
(2) ui = Ai → ℝ
b is upper semi-continuous in � and quasi-concave in �i ∀i.
  ◻
Obviously, the first condition can be satisfied since Ai is defined by a set of 
bidding vectors in which all the values are between zero and the maximum bid-
ding of buyers. So, it is a nonempty, compact and convex subset of the Euclidean 
(13)�∗
i
∈ BR
(
�−i
)
iff ∀�i ∈ Ai, ui
(
�∗
i
, �−i
)
≥ ui
(
�i, �−i
)
(14)�∗ = ⟨�∗
1
, �∗
2
, ...., �∗
n
⟩ is a NE iff ∀i, �∗
i
∈ BR
�
�∗
−i
�
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 14 of 33
space Rb . To show that ui = Ai → ℝ
b is upper semi-continuous, we first define the 
following property [34]:
Definition 3 ui(�i, �−i) is upper semi-continuous at �i0 if ∃�i as a neighborhood such 
that:
For a jump point of ui in a given range Δ� , we define [34]: �i0 = �i + Δ� such 
that p1 ≤ p2 , pt(�i, �−i) = p1 , and pt(�i0, �−i) = p2 . This means that ui function is 
upper semi-continuous because rational buyers i ∈ B attempt for a higher utility 
around the discontinuity point. Only the quasi-concave property remains to be 
proved. Taking the derivatives of (8) with respect to �i , we get:
Since 𝜕ui
𝜕𝛽i
=
v
(
x(𝛽−i)
)
ln(10)𝛽i
− 1 > 0 and 𝜕
2ui
𝜕𝛽2
i
= −
v
(
x(𝛽−i)
)
ln(10)𝛽2
i
< 0 , the utility function ui is con-
cave with respect to �i , hence it is quasi-concave in �i [28], thus we get:
where �x
i
 and �y
i
 belong to the buyer i action set Ai . Therefore, ui is a quasi-concave 
in �i ∀i . Thus, we have proved the existence of the NE.
Theorem 2 The NE of game G = ⟨B,Ai, ui⟩ is unique.
Proof The uniqueness proof is to show that the best response function of each buyer 
�∗
i
 is a standard function. Based on best response Definition 13 and using Eq. (16), 
the best-response is achieved when the first derivative of ui is equal to 0, thus we 
have:
and we obtain:
A function f (�) is a standard function [35], if the following properties are satisfied: 
(15)lim
�i→�i0
sup ui(�i, �−i) ≤ ui(�i0, �−i)
(16)
�ui
��i
=
v
(
x(�−i)
)
ln(10)�i
− 1
(17)
�2ui
��2
i
= −
v
(
x(�−i)
)
ln(10)�2
i
(18)ui((1 − �)�x
i
+ ��
y
i
, �−i) ≥ min{ui(�
x
i
), ui(�
y
i
), �−i}
(19)
�ui
��i
=
v
(
x(�−i)
)
ln(10)�i
− 1 = 0
(20)�∗
i
= f (�) =
v
(
x(�−i)
)
ln(10)
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 15 of 33 56
(1) Positivity f (�) ≥ 0;
(2) Monotonicity For all � and 𝛽  , if 𝛽 ≥ 𝛽  , then f (𝛽) ≥ f (𝛽);
(3) Scalability For all 𝜇 > 1,𝜇f (𝛽) ≥ f (𝜇𝛽);
f (�) satisfies the three above properties of a standard function.
Positivity: The best-response function in (19) is always positive, so f (�) ≥ 0 pos-
itivity property is set up.
Monotonicity: Assuming 𝛽 ≥ 𝛽  , then
we have f (𝛽) − f (𝛽) ≥ 0 , in which f (�) is monotonically increasing function.
Scalability: For all 𝜇 > 1 we have,
So, for all 𝜇 > 1,𝜇f (𝛽) ≥ f (𝜇𝛽) thus, scalability property holds. Therefore, there 
exists a unique NE in the above one-shot game G, which can be viewed as the finite 
repeated game GT
�
 .   ◻
If the stage-game of a finitely repeated game has a unique NE, then we can con-
sider that constant action for each buyer i, always play the stage-game best response 
irrespective of the past history. The infinitely repeated games requires different setup 
than finitely repeated games since it dose not have a terminal point. Before find-
ing the NE of infinitely repeated game G∞
�
 , we need to formally define the minmax 
value, enforceable and feasible utility as follows:
Definition 4 (Minmax value [32]) Considering stage-game G = ⟨B,Ai, ui⟩ , the min-
max value �i for each buyer i is:
It represents the amount of utility buyer i receives when the other buyers play 
minmax strategies and buyer i plays the best response.
Definition 5 (Feasible [32]) Given a set of utility vector U = (u1, u2, ..., un) , U is said 
to be feasible if the convex hull of U is expressed as:
First, we need to apply Definition 5 to the set of utilities in a stage game G. Then, 
the convex hull of U will be determined by the convex combination between all util-
ity vectors. Note that convex hull H of the vector utilities is achievable with pure 
(21)f (𝛽) − f (𝛽) =
v
(
x(𝛽 − 𝛽)
)
ln(10)
≥ 0
(22)f (�) = �
v
(
x(�−i)
)
ln(10)
f (�) =
�v
(
x(�−i)
)
ln(10)
(23)�i = min
�−i
max
�i
ui(�i, �−i)
(24)H = Conv
{
u ∈ ℝ+ | ∃� ∈ ℝ+,Ui
=
∞∑
t=1
u
i
}
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 16 of 33
strategies. In other words, a utility profile is feasible if it is a convex, and convex 
combination of the outcomes in G.
Definition 6 (Enforceable [32]) A utility vector U is said to be enforceable, if:
The set of feasible and enforceable utilities is E = H ∩ U . Therefore, any set 
of feasible and enforceable utilities in E∞ (Infinitely repeated game), ET (Finitely 
repeated game), and E� (Discounted repeated game) are always included in E.
Theorem 3 A Nash equilibrium exists in infinitely repeated game G∞
�
= ⟨B,Ai,Ui⟩ , 
if U is enforceable and feasible in E , such that for each buyer i, we have ui ≥ �i [36]. 
Then E� ������������������→
�→0
E.
Proof According to [37], there exists NE in discounted infinitely repeated game. 
There can be many NE in the infinitely repeated games G∞ even if the stage game 
only has a unique NE.   ◻
6  Mechanism Design
In this section, we design a truthful mechanism to determine the winner allocation 
and corresponding payment for the proposed one-shot game G (possibly G → GT ) 
and implement it in form of smart contracts. The process of developing a mech-
anism design faces two primary challenges. One is how to determine the winner 
buyer and allocation. The other is how much the winner buyer should pay for the 
records. This section addresses these two issues by using a scoring function based 
on the trust score to evaluate the buyer’s bid and announce the winner. Furthermore, 
we consider a penalty for the winner if he/she is not fully trusted with respect to his/
her trust score. Given the reservation price pj(x) and the submitted bids, the smart 
contracts will return the winner allocation and payment rules.
6.1  Winner Allocation Stage
In winner allocation stage, each data buyer i ∈ B submits his/her bid �i =
(
gi, vi(x)
)
 
simultaneously to the blockchain at stage t. The valuation vi(x) for the traded amount 
of records offered in all stages is unknown to the DA. In this model the winner allo-
cation stage includes two steps. In the first step, after receiving bids from buyers, 
the smart contract collects the trust score of buyers who participated in the bidding 
process and eliminates buyers whose trust score is less than a threshold T  . The T  
is determined based on the average of data sensitivity SL(rt
w
) ∀w ∈ W , which is 
obtained through Eq. (1). In the second step, the scoring function S(�i) is calculated 
for each buyer i ∈ B according to the following scoring rule:
(25)U = {ui ≥ �i,∀i ∈ B}
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 17 of 33 56
where Trt
n
(j, i) measures the total trust DA has about a given buyer i, which is com-
puted using the current satisfaction Trc and previous trust score Trt
n−1
(j, i) as shown 
in Eq. (28). In case DA does not have a prior trust for buyer i, we take indirect trust 
T
yi
indirect
 into account. The total trust function is defined as follows:
Here � is a relative weight that changes based on the accumulated deviation defined 
in Eqs. (32, 33 and 34). The Trc function measures how much DA j is satisfied about 
data buyer i. It represents the satisfaction score for the most recent transaction 
between j and i ( 0 ≤ Trc ≤ 1).
Here Satc is a feedback-based factor (e.g., review score) for the current transaction n 
reflecting the way DA j rates data buyer i [38].
Valv
n
(j, i) is a recent value fluctuation between the previous and current value Valc . 
Here, � is the decay constant and it controls the trust value. The Trc value reaches 
1.0 with larger Valv
n
(j, i) and decreases slowly with smaller Valv
n
(j, i) . For example, if 
the transaction’s value is insignificant and current satisfaction is high, this will have 
little effect on overall trust. On the other hand, if the value of the transaction is high, 
and current satisfaction is high, the overall trust will be increased significantly.
Here �v
n
(j, i) represents the accumulated value deviation for the history of all transac-
tions. The � is relative weight which gives higher weight to the recent n [38]. The 
weight of � changes based on the accumulated deviation �n
t
(j, i) [38].
(26)S(�i) = �i × Trt
n
(j, i)
(27)subject to �i ≥ pi
(28)
Trt
n
(j, i) =
⎧
⎪⎨⎪⎩
𝛼 × Trc + (1 − 𝛼) × Trt
n−1
(j, i), if Tr(.) > 0
𝛼 × Trc + (1 − 𝛼) × T
yi
indirect
, if Tr(.) = 0
(29)Trc = Satc ×
(1 − e−�Val
v
n
(j,i))
1 + �v
n
(j, i)
Satc =
⎧⎪⎨⎪⎩
0, if j is totally unstatisied with i,
1, if j is totally statisied with i,
∈ (0, 1), otherwise.
(30)Valv
n
(j, i) = |Valv
n−1
(j, i) − Valc|
(31)�v
n
(j, i) = K × Valv
n
(j, i) + (1 −K) × �v
n−1
(j, i)
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 18 of 33
Here K is some user-defined constant factor which controls to what extent we will 
react to the recent error �t
n
(j, i) [38]. So, if we increase the value of K , then we give 
more significance to the recent deviation than accumulated deviation [38]. The 
threshold is used to prevent � from saturating to a constant value. Tyi
indirect
 value is 
computed when DA j does not have a prior trust relationship and experience with 
buyer i. The DA requests other entities’ y ∈ Y  to provide their rating about the target 
buyer i. So, the DA will have the capability and experience to truthfully judge the 
data buyer for the first transaction. The indirect trust function is:
where, Pyi denotes positive feedback of entity y ( 0.5 ≤ Pyi < 1 ), and Nyi termed as 
negative feedback ( 0 ≤ Nyi ≤ 0.5 ). So, Tyi
indirect
 represents the total number of posi-
tive and negative feedbacks for buyer i. Based on Eq. (26), the buyer with the high-
est score wins the game at stage t. If the buyers have an equally high trust score, we 
randomly selected the winner. After that, allocation rule will apply X ∶ ℝ+ → [0, 1] , 
meaning that with the score bid profile S(�i) , buyer i gets the records with prob-
ability X
(
S(�i)
)
 and makes a payment of pi(�) ∈ ℝ , which indicates the amount that 
buyer i must pay. Furthermore, allocation rules have to satisfy the feasibility con-
straint as follows:
Equation (36) restricts the allocation of records for the winner not to be more than 
the traded amount at stage t. Other buyers will modify their bids accordingly for the 
next stage of the game. Buyer i ∈ B will continue bidding until obtaining the total 
quantity he/she requested.
6.2  Payment Stage
In the payment stage, we consider a penalty for the winner if he/she is not fully trusted 
i.e., a trust score less than 1. If the winner is fully trusted which implies ( Trt
n
(j, i) = 1 ), 
(32)� = threshold +K ×
�t
n
(j, i)
1 + �t
n
(j, i)
(33)�t
n
(j, i) = |Trt
n−1
(j, i) − Trc|
(34)�t
n
(j, i) = K × �t
n
(j, i) + (1 −K) × �t
n
(j, i)
(35)T
yi
indirect
=
Y∑
y=1
Pyi
Pyi +Nyi
(36)
t∑
i∈B
X
(
S(�i)
)
≤ x ∀�
(37)gi ≥
∞∑
t
x
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 19 of 33 56
he/she will not be punished. The trust is calculated based on Eq. (28). The payment rule 
of winning buyer 𝛽i is:
The above equation provides assurances that buyer i is punished only on its stage 
utility ui and will not be charged more than its bid. Algorithm 1 describes the winner 
allocation as well as the payment stage.
(38)pi(𝛽i) = 𝛽i − ui
(
1 + log
(
Trt
n
(j, i)
))
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 20 of 33
7  Evaluation of Results
In this section, we first present our security analysis of the proposed data market, 
which satisfies the properties of completeness and soundness. Then, we evaluate 
the model and analyze the results using different properties such as computational 
efficiency, bidding learning process, truthfulness, individual rationality, and budget 
balance. Then, we evaluate the performance of the blockchain network using differ-
ent metrics, such as transaction latency, transaction throughput, and resource con-
sumption, under varied scenarios and parameters using Hyperledger Caliper. All 
the results were conducted using a Ubuntu Linux Intel Core(TM) i7-3610QM CPU 
@2.30GHz with 6 GB RAM in our experiments.
7.1  Parameters and Experiment Settings
For the evaluation of the model, since the record price is decided by the number 
of DOs w ∈ W based on their privacy risk, we choose reasonable values for our 
experiments. We assigned a privacy risk value that is uniformly distributed between 
0 and 1 to reflect the privacy attitude of the different DOs. Then, we calculate the 
average value of the data. We assumed that the data records cost varies between 
0 and 1, which is incurred by DA. We vary the number of buyers for evaluating 
the performance of our proposed data market. For the blockchain implementation, 
we deployed two organizations (Org0, Org1), each consisting of one peer (peer0.
org1.example.com, and peer0.org2.example.com), each consisting of one data-
base (couchdb.org1.example.com, and couchdb.org2.example.com), each con-
sisting of one certificate authority (ca.org1.example.com, ca.org2.example.com) 
and one orderer node (orderer.example.com) hosted inside a Docker container in 
Hyperledger Fabric. We choose the Solo consensus mechanism as an ordering ser-
vice for our implementation. We run the Hyperledger Caliper benchmark framework 
[39] on top of the Fabric to analyze our performance. We test the system perfor-
mance under open workload (i.e., opening accounts and testing the writing perfor-
mance of the ledger), query workload (i.e., querying accounts and testing the read-
ing performance of the ledger), and transfer workload (i.e., data trading between 
accounts and testing the transaction performance of the ledger). The workload 
reflects the actual production usage. It is proportional to the amount of time and 
computational power required to execute a specific task (e.g., amount of time and 
computing resources used to create a new transaction on the blockchain). Table 3 
Table 3  Summary of performance with 500 transactions
Name Succ Fail Send rate 
(TPS)
Max latency (s) Min latency (s) Avg latency (s) Through-
put 
(TPS)
Open 500 0 50 9.11 5.41 7.16 39
Query 500 0 50 2.42 1.11 1.27 41
Transfer 500 0 50 1.69 1.02 1.21 48
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 21 of 33 56
summarize the performance of the blockchain network with 500 transactions using 
50 transactions per second (tps).
7.2  Security Analysis
Our system satisfies the soundness and completeness properties. The soundness 
property guarantees dishonest entity does not perform any attacks such as eaves-
dropping and malleability attacks. The proposed system is said to be soundness, if 
the following properties are satisfied [40]:
where Adv, is an adversary algorithm to forge S and � variables. According to 
[41], Hyperledger Fabric satisfies the soundness property. The completeness prop-
erty guarantees the search operations are carried out correctly and faithfully. The 
proposed system is said to be completeness, if the following properties are satisfied 
[40]:
The search function is translated to a quadratic arithmetic program with sets of poly-
nomials. The evaluation of the search function with input and output parameters is 
equal to the divisibility check of the target polynomials [42]. Thus, the completeness 
property is set up.
7.3  Computational Efficiency Analysis
We evaluate the property of computational efficiency property, which means that 
winning determination and the payment stages in Algorithm 1 must be solved within 
a polynomial time. The computation complexity of the Algorithm 1 is O(n), where 
n is the number of bidders. In the winning allocation stage, the for loop runs for all 
submitted bids and then calculates the trust score and scoring rule. The computa-
tional complexity of the for loop takes O(n). The max operation will take O(n), and 
allocations will take O(1). In the payment stage, each statement will take O(1) to fin-
ish. Therefore, the computational complexity of the proposed system is bounded by 
O(n) time complexity at the most. We select 10, 50, 100, 150, 200, 250 and 300 buy-
ers for the experiment, respectively. Figure 4 shows the running time of Algorithm 1 
under various numbers of buyers. These results indicate that Algorithm 1 completes 
(39)Pr
⎡
⎢⎢⎢⎢⎢⎣
������
�
T
Q
, S, �
�
= 1 ∶
SK ← �����������
�
1
�
�
∧
S∕⟵ Search
�
I, T
Q
�
∧
� ⟵ ���
�
I, T
Q
�
⎤
⎥⎥⎥⎥⎥⎦
(40)Pr
⎡⎢⎢⎣
Verify(TQ,S,�) = 1 ∶
S ⟵ Search(I⇔TQ)∧
� ⟵ Eval(I⇔TQ)
⎤⎥⎥⎦
= 1
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 22 of 33
the computation in almost linear time, as demonstrated in the time complexity anal-
ysis given above. Therefore the computational efficiency property is satisfied.
7.4  Budget Balance Analysis
We verify the budget balance property. Budget balance means at each stage t, the 
buyer’s payment is higher than the reservation price (asked-price) of the data aggre-
gator. As shown in the payment stage described in Algorithm 1, the buying price for 
the winner, taking into account the penalty, is greater than the selling price �i ≥ pi . 
To verify the property of budget balance, we repeatedly run the game until stage 20 
as shown in Fig. 5. We can see that the curve line representing the buyer’s payment 
is higher than of the asking price. Since we are imposing a penalty in the payment 
stage, definitely we satisfy the property of budget balance.
Fig. 4  Computationally efficient property
Fig. 5  Budget balance property
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 23 of 33 56
7.5  Individual Rationality Analysis
We evaluate the property of individual rationality in which each winning buyer i 
must receive a non-negative stage utility ui ≥ 0 . Similarly, DA utility must be non-
negative Uj ≥ 0 . The stage utility is ui = 0 for buyers who are not selected in the 
winning determination stage. Even by imposing a penalty on the winning buyer in 
the payment stage, the winning buyer has non-negative ui . For example, in the worst-
case scenario, let’s assume that the buyer trust score is 0.1. The payment would 
be the same as the bidding price. So, the buyer’s utility is non-negative. Figure 6 
shows the average utility for the buyers and DA. We can observe that the winning 
buyer receives non-negative utility considering penalty in each stage. It can also be 
observed that DA has a non-negative utility. From the above, we can verify the indi-
vidual rationality property of our proposed system.
Fig. 6  Individual rationality property
Fig. 7  Learning process
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 24 of 33
7.6  Bidding Learning Analysis
As mentioned in Sect. 4, we used fictitious play for the bidding learning process. 
After some arbitrary initial bidding at the first stage of the game, the buyers myopi-
cally choose their best responses against the empirical action distribution of other 
buyers’ bids at every subsequent stage. Buyers hope that such a bidding learning 
process will converge and lead to a NE to increase their utility. Figure 7 shows the 
bidding learning process among 10, 100, and 500 buyers without considering trust. 
After each stage t, buyers update their actions (bids) based on the outcome of previ-
ous stages and observation of other bidders. We can notice that by increasing the 
number of buyers, the expected utilities increase as well. This will lead to the point 
where buyers can learn bidding strategies swiftly and converge to a NE to maximize 
their expected utilities. From Fig. 7, we can see that buyers are learning from the 
outcome and observation of other buyers in the previous stage and are increasing 
their stage utility. Furthermore, by increasing the number of buyers, we can see that 
buyers converge to their NE profile.
We conducted a box-plot presentation to show the learning process of different 
data buyers using fictitious play. Figure 8 shows the utility with 10, 100, and 500 
data buyers competing with each other repeatedly. For each box plot, the central 
mark indicates a median of utilities. The upper whiskers show the highest utility and 
the lowest whiskers show the lowest utility at each stage. The outliers are indicated 
by a ( ◦ ) symbol.
7.7  Truthfulness Analysis
We evaluate the property of truthfulness in which each winning buyer i must bid 
their true valuation. Let’s assume the following two cases: 
(1) We define 𝛽i as overbid from the valuation, and �∗
i
 as the best response, and ũi 
and ūi as their stage utilities, respectively. Buyer i is the winner when submit-
ting either 𝛽i or �∗
i
 at stage t. However, overbidding creates extreme penalties 
with respect to trust scores in the payment stage in our model, which leads the 
Fig. 8  Boxplot presenting the bid learning processing using fictitious play
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 25 of 33 56
winning buyer to pay more and gain less utility than if he/she plays their best 
response. The best response scheme given by Eq. 13 is incentive-compatible, 
when buyer i is repeatedly best-responding, in which case other buyers are incen-
tivized to do the same to maximize their utilities. In other words, a buyer i ∈ B 
cannot increase its utility by overbidding, since he/she will be punished severely.
(2) Buyer i will lose the game G if he/she bids lower than their valuation (under-
bidding), otherwise would win if he/she reported the true valuation and played 
their best response.
Therefore, buyer i cannot increase its utility by providing untruthful bidding 
(overbidding and under-bidding), no matter what the other buyers’ bid. For the 
experiment, we select two buyers; the first buyer bids truthfully while the other 
bids untruthfully. To provide a consistent environment for comparison, we set the 
trust score for both buyers to 0.7 and ask price to 50, 48, 41, 40, and 30, respec-
tively. Figure 9a is the result when winner buyer i is biding his/her true valuation 
and pays the price pi at stage t. Figure 9b is the result when buyer i bids untruth-
fully. We can see that buyer i receives zero payment when he/she is underbidding, 
Fig. 9  Truthfulness property
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 26 of 33
which means that he/she receives zero utility. At stages 3 and 4, he/she is over-
bidding, and he/she is the winner. However, we can see that the winner is pay-
ing much more than if he bids truthfully. Truthfulness property provides the best 
possible utility for the buyers and ensures there is no incentive for a buyer to bid 
untruthfully.
7.8  Transaction Throughput Metric
Transaction throughput is the average number of transactions per second that can 
be written on the ledger. The transaction throughput of the blockchain network 
calculated as follows [43]:
(41)Transaction throughput =
Total transcations
Total time in seconds
Fig. 10  Transaction throughput under open, query, and transfer workloads with 50, 100, 200, 400, and 
800 sending rates
Fig. 11  Transaction throughput under open, query, and transfer workloads with 50, 100, 200, 400, and 
800 sending rates
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 27 of 33 56
Figure 10 shows the transaction throughput with 50, 100, 200, 400, and 800 send-
ing rates. From the results in Fig. 10, we observe that by increasing the sending rate, 
the throughput of the transfer workload increased linearly, and the throughput of the 
open and transfer workload increased slightly too.
7.9  Transaction Metric
Transaction latency is the amount of time taken from the time when a transaction 
is submitted till the time when it is confirmed and available on the blockchain. 
Figure 11 indicates the average latency for 500 different sending rates of 50, 100, 
200, 400, 800 tps. From Fig.  11, we can see that by increasing the sending rate, 
the average latency of the open workload increases with the sending rate. Sending 
a large number of transactions with higher sending rates would cause a failure in 
the network. Many other things can also cause transaction failures in the blockchain 
network, such as chaincode (smart contract) logic, version errors, peer resources, 
policy failures, network resources, consensus errors, and repeated transactions, to 
name a few. For query and transfer workload, we can see that when the sending rate 
increases, the average latency increases slightly.
7.10  Elapsed Time Metric
Elapsed time is the amount of time that each buyer needs to interact with the block-
chain network to query data from smart contract. This metric measures how much 
time it takes for the buyer to get query result from database. By default, the underly-
ing data structure of a blockchain does not support an effective method of querying 
the stored data. To overcome this limitation, we modeled the data in JSON format 
through CouchDB and deployed indexes. Tables 4 and 5 show the benchmark results 
of creating and retrieval data within CouchDB, respectively. We can see the aver-
age latency increases with the size of the data. We ran the test queries on data to 
Table 4  Creating the data in 
CouchDB
Data size (MB) Max latency (s) Avg latency (s) Throughput
3.2MB 12.88 7.50 803.3
5.4MB 19.87 11.13 890.9
7.4MB 29.95 17.05 997.5
Table 5  Retrieval the data from 
CouchDB
Data size (MB) Max latency (s) Avg latency (s) Throughput
3.2MB 11.11 6.41 792.33
5.4MB 14.31 10.14 819.91
7.4MB 25.41 15.01 935.62
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 28 of 33
calculate the elapsed time. The elapsed time begins when the query is executed, and 
ends when the query is returned. Figure 12 shows running times of test queries with-
out index and with index. From Fig. 12, we can observe that querying with index 
takes less elapsed time compared with querying without index. In general, queries 
without index will have a longer elapsed time. Indexes enable a database to be que-
ried faster and more efficiently.
7.11  Resource Consumption Metric
Resource consumption metric measures the computing resources consumed by the 
blockchain network through different operations. Finally, table 6 shows the resource 
consumption for open, query, and transfer workloads with 500 transactions. Mem-
ory displays the amount of memory used by the docker container on each test round. 
Memory(MAX) measures the maximum resources spent on a transaction, and 
memory(AVG) measures the average resources spent on all transactions. CPU displays 
the amount of CPU used by the docker containers during the test round. CPU(MAX) 
measures the maximum resources spent on a transaction, and CPU(AVG) measures 
the average resources spent on all transactions. For both 500 transactions, the resource 
consumption for open and query workloads reveals that CouchDB consumes the most 
memory and CPU, followed by the peers. The network usage is conducted based on the 
traffic input and traffic output parameters. The majority of the network traffic is occu-
pied by the orderer since it seeks the consensus in the network in an open workload. 
During our experiments, we observed that disk read is zero bytes, as there is no need to 
perform read operations on the ledger in open, and transfer workloads. The query trans-
action reads the data from the CouchDB in query workload. The performance analysis 
Fig. 12  Running times of test queries
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 29 of 33 56
Ta
bl
e 
6 
 R
es
ou
rc
e 
co
ns
um
pt
io
n 
fo
r o
pe
n,
 q
ue
ry
, a
nd
 tr
an
sf
er
 w
or
kl
oa
ds
 w
ith
 5
00
 tr
an
sa
ct
io
ns
Ty
pe
N
am
e
M
em
or
y 
(M
ax
)
M
em
or
y 
(A
vg
)
C
PU
%
 (M
ax
)
C
PU
%
 (A
vg
)
Tr
affi
c 
in
pu
t
Tr
affi
c 
ou
t
D
is
c 
re
ad
/w
rit
e
O
pe
n 
w
or
kl
oa
d
 D
oc
ke
r
pe
er
0.
or
g2
.e
xa
m
pl
e.
co
m
60
.7
M
B
59
.3
M
B
4.
41
3.
48
3.
1M
B
2.
4M
B
0B
 &
 8
.8
M
B
 D
oc
ke
r
pe
er
0.
or
g1
.e
xa
m
pl
e.
co
m
30
.7
M
B
25
.1
M
B
4.
5
2.
65
2.
9M
B
2.
2M
B
0B
 &
 8
.7
M
B
 D
oc
ke
r
or
de
re
r.e
xa
m
pl
e.
co
m
7.
5M
B
6.
7M
B
2.
46
1.
04
2.
9M
4.
6M
0B
 &
 5
.5
M
B
 D
oc
ke
r
co
uc
hd
b.
or
g2
.e
xa
m
pl
e.
co
m
79
.1
M
B
71
.5
M
B
39
.1
28
.7
3.
9M
B
3.
5M
B
0B
 &
 4
.1
M
B
 D
oc
ke
r
co
uc
hd
b.
or
g1
.e
xa
m
pl
e.
co
m
72
.5
M
B
67
.1
M
B
34
.5
24
.4
3.
5M
B
3.
2M
B
0B
 &
 3
.8
M
B
 D
oc
ke
r
ca
.o
rg
2.
ex
am
pl
e.
co
m
32
.1
M
B
29
.9
M
B
2.
7
2.
5
1.
4M
B
1.
1M
B
0B
 &
 1
.2
M
B
 D
oc
ke
r
ca
.o
rg
1.
ex
am
pl
e.
co
m
29
.5
M
B
24
.7
M
B
2.
1
1.
7
1.
2M
B
1M
B
0B
 &
 1
.0
M
B
Q
ue
ry
 w
or
kl
oa
d
 D
oc
ke
r
pe
er
0.
or
g2
.e
xa
m
pl
e.
co
m
37
.1
M
B
35
.1
M
B
2.
22
1.
48
1.
5M
B
1.
1M
B
0B
 D
oc
ke
r
pe
er
0.
or
g1
.e
xa
m
pl
e.
co
m
19
.1
M
B
10
.1
M
B
1.
9
1.
08
1.
0M
B
0.
95
2B
0B
 D
oc
ke
r
or
de
re
r.e
xa
m
pl
e.
co
m
4.
9M
B
4.
3M
B
1.
21
0.
53
1.
3M
B
0.
59
2B
0B
 D
oc
ke
r
co
uc
hd
b.
or
g2
.e
xa
m
pl
e.
co
m
93
.4
M
B
87
.3
M
B
63
.2
40
.5
5.
9M
B
5.
7M
B
1.
4M
 &
 0
B
 D
oc
ke
r
co
uc
hd
b.
or
g1
.e
xa
m
pl
e.
co
m
90
.1
M
B
84
.4
M
B
51
.8
34
.3
5.
6M
B
5.
5M
B
1.
2M
 &
 0
B
 D
oc
ke
r
ca
.o
rg
2.
ex
am
pl
e.
co
m
26
.3
M
B
22
.9
M
B
1.
7
1.
5
1.
0M
B
60
6B
0B
 D
oc
ke
r
ca
.o
rg
1.
ex
am
pl
e.
co
m
18
.1
M
B
10
.7
M
B
1.
5
1.
1
87
6B
51
2B
0B
Tr
an
sf
er
 w
or
kl
oa
d
 D
oc
ke
r
pe
er
0.
or
g2
.e
xa
m
pl
e.
co
m
33
.2
M
B
29
.4
M
B
2.
12
1.
01
1.
2M
B
1.
0M
B
0B
 &
 4
.3
M
B
 D
oc
ke
r
pe
er
0.
or
g1
.e
xa
m
pl
e.
co
m
15
.1
M
B
10
.4
M
B
1.
4
0.
78
1.
0M
B
0.
70
2B
0B
 &
 4
.2
M
B
 D
oc
ke
r
or
de
re
r.e
xa
m
pl
e.
co
m
11
M
B
8.
2M
B
1.
64
1.
04
91
4B
55
3B
0B
 &
 4
.5
M
B
 D
oc
ke
r
co
uc
hd
b.
or
g2
.e
xa
m
pl
e.
co
m
60
.6
M
B
58
.7
M
B
25
.3
17
.0
2.
0M
B
1.
7M
B
0B
 &
 2
.8
M
B
 D
oc
ke
r
co
uc
hd
b.
or
g1
.e
xa
m
pl
e.
co
m
54
.1
M
B
48
.3
M
B
21
.1
13
.8
1.
6M
B
1.
5M
B
0B
 &
 2
.5
M
B
 D
oc
ke
r
ca
.o
rg
2.
ex
am
pl
e.
co
m
24
.7
M
B
20
.4
M
B
1.
2
1.
1
1.
1M
B
79
6B
0B
 &
 1
.4
M
B
 D
oc
ke
r
ca
.o
rg
1.
ex
am
pl
e.
co
m
17
.4
M
B
11
.5
M
B
1.
1
1.
0
77
6B
55
2B
0B
 &
 1
.1
M
B
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 30 of 33
shows considerably low memory and CPU consumption. The peer node consumes an 
average of 59.3MB for memory and 4.41% for CPU in 500 transactions. This depicts 
that this blockchain network can be easily deployed in real-world applications with 
low-cost hardware.
8  Conclusion and Future Work
While the economic value of IoT data is increasing, it is not very well known how 
these data can be conceptualized, measured, and monetized in IoT data markets that 
enable data owners to trade their data. Unfortunately, the existing IoT data markets 
are insufficient for capitalizing on the full value of the data in a trusted and transpar-
ent way. To address these challenges, we proposed a trustful data trading framework 
using the game theory approach in an infinitely repeated horizon to enable secure 
and efficient data trading between buyers and sellers. To model the data market, this 
paper proposed a non-cooperative infinity repeated game model between rational 
data buyers. In each stage of the game, buyers hold a bid for a traded amount of 
records and seek to maximize their expected utility through learning from the 
outcome of previous stages considering discounted rates for the future utility. We 
proved NE and the uniqueness of our model, which is derived theoretically for the 
one-shot game, finite, and infinite horizon games, respectively. Besides, this model 
imposes a penalty on those buyers who do not have a good reputation and decreases 
their chance of winning to preserve the data owner’s privacy. Through theoretical 
and security analysis, the paper showed that the proposed system is computation-
ally efficient, soundness, completeness, truthful, budget balance, and individu-
ally rational. We implemented our blockchain network using Hyperledger Fabric. 
We measure the system performance using different metrics. Currently, there is a 
limitation that buyers can not increase their trust score. We completely understand 
that this might lead to the starvation of other buyers who are eager to win deals but 
unable to reach the highest score. We intend to propose a new mechanism for buyers 
to maximize their trust scores in future work. We also plan to add more data aggre-
gators in the system, in which they can compete with each other to collect IoT data 
from data owners and sell them to buyers.
Acknowledgements We acknowledge the support of the Natural Sciences and Engineering Research 
Council of Canada (NSERC).
References
 1. Bebortta, S., Singh, A.K., Pati, B., Senapati, D.: A robust energy optimization and data reduction 
scheme for iot based indoor environments using local processing framework. J. Netw. Syst. Manage. 
29(1), 1–28 (2021)
 2. International Data Corporation. The growth in connected iot devices is expected to generate 79.4zb 
of data in 2025, according to a new idc forecast. https:// www. idc. com/ getdoc. jsp? conta inerId= 
prUS4 52132 19, 2020. Accessed 14 Dec 2020.
https://www.idc.com/getdoc.jsp?containerId=prUS45213219
https://www.idc.com/getdoc.jsp?containerId=prUS45213219
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 31 of 33 56
 3. Hassan, M.U., Rehmani, M.H., Chen, J.: Privacy preservation in blockchain based iot systems: Inte-
gration issues, prospects, challenges, and future research directions. Fut. Gener. Comput. Syst. 97, 
512–529 (2019)
 4. Yassine, A., Shirmohammadi, S.: Privacy and the market for private data: a negotiation model to 
capitalize on private data. In: 2008 IEEE/ACS International Conference on Computer Systems and 
Applications, pp. 669–678. IEEE (2008)
 5. Opher, A., Chou, A., Onda, A., Sounderrajan, K.: The Rise of the Data Economy: Driving Value 
Through Internet of Things Data Monetization. IBM Corporation, Somers, NY (2016)
 6. Rashid, Z., Noor, U., Altmann, J.: Economic model for evaluating the value creation through infor-
mation sharing within the cybersecurity information sharing ecosystem. Fut. Gener. Comput. Syst. 
124, 436 (2021)
 7. Rodrigues, B., Scheid, E., Killer, C., Franco, M., Stiller, B.: Blockchain signaling system (bloss): 
cooperative signaling of distributed denial-of-service attacks. J. Netw. Syst. Manage. 28(4), 953–
989 (2020)
 8. Fernandez, R.C., Subramaniam, P., Franklin, M.J.: Data market platforms: trading data assets to 
solve data problems [vision paper]. arXiv, pp. arXiv–2002 (2020)
 9. Lopez, D., Farooq, B.: A multi-layered blockchain framework for smart mobility data-markets. 
Transp. Res. Part C: Emerg. Technol. 111, 588–615 (2020)
 10. Xiao, Y., Zhang, N., Li, J., Lou, W., Hou, Y.T.: Privacyguard: enforcing private data usage control 
with blockchain and attested off-chain contract execution. In: European Symposium on Research in 
Computer Security, pp. 610–629. Springer (2020)
 11. An, B., Xiao, M., Liu, A., Xu, Y., Zhang, X., Li, Q.: Secure crowdsensed data trading based on 
blockchain. IEEE Trans. Mobile Comput. (2021). https:// doi. org/ 10. 1109/ TMC. 2021. 31071 87
 12. Si, H., Sun, C., Li, Y., Qiao, H., Shi, L.: Iot information sharing security mechanism based on block-
chain technology. Fut. Gener. Comput. Syst. 101, 1028–1040 (2019)
 13. Khezr, S., Benlamri, R., Yassine, A.: Blockchain-based model for sharing activities of daily living 
in healthcare applications. In: 2020 IEEE Intl Conf on Dependable, Autonomic and Secure Comput-
ing, Intl Conf on Pervasive Intelligence and Computing, Intl Conf on Cloud and Big Data Com-
puting, Intl Conf on Cyber Science and Technology Congress (DASC/PiCom/CBDCom/CyberSc-
iTech), pp. 627–633. IEEE (2020)
 14. Oh, H., Park, S., Lee, G.M., Choi, J.K., Noh, S.: Competitive data trading model with privacy valua-
tion for multiple stakeholders in iot data markets. IEEE Internet Things J. 7(4), 3623–3639 (2020)
 15. Oh, H., Park, S., Lee, G.M., Heo, H., Choi, J.K.: Personal data trading scheme for data brokers in iot 
data marketplaces. IEEE Access 7, 40120–40132 (2019)
 16. Tian, L., Li, J., Li, W., Ramesh, B., Cai, Z.: Optimal contract-based mechanisms for online data 
trading markets. IEEE Internet Things J. 6(5), 7800–7810 (2019)
 17. Cao, X., Chen, Y., Liu, K.J.R.: Data trading with multiple owners, collectors, and users: an iterative 
auction mechanism. IEEE Trans. Signal Inf. Process. Netw. 3(2), 268–281 (2017)
 18. Khokhar, R.H., Iqbal, F., Fung, B.C.M., Bentahar, J.: Enabling secure trustworthiness assessment 
and privacy protection in integrating data for trading person-specific information. IEEE Trans. Eng. 
Manage. 68, 149 (2020)
 19. Liu, K., Qiu, X., Wuhui Chen, X., Chen, Z.Z.: Optimal pricing mechanism for data market in block-
chain-enhanced internet of things. IEEE Internet Things J. 6(6), 9748–9761 (2019)
 20. Li, Y., Li, L., Zhao, Y., Guizani, N., Yu, Y., Du, X.: Toward decentralized fair data trading based on 
blockchain. IEEE Netw. 35, 304 (2020)
 21. Sheng, D., Xiao, M., Liu, A., Zou, X., An, B., Zhang, S.: Cpchain: a copyright-preserving crowd-
sourcing data trading framework based on blockchain. In: 2020 29th International Conference on 
Computer Communications and Networks (ICCCN), pp. 1–9. IEEE (2020)
 22. Dai, W., Dai, C., Choo, K.K.R., Cui, C., Zou, D., Jin, H.: Sdte: A secure blockchain-based data trad-
ing ecosystem. IEEE Trans. Inf. Forensics Secur. 15, 725–737 (2019)
 23. Xiong, W., Xiong, L.: Smart contract based data trading mode using blockchain and machine learn-
ing. IEEE Access 7, 102331–102344 (2019)
 24. Thu, T., Hien, T., Almeida, M., Karame, G., Soriente, C.: Towards secure and decentralized sharing 
of iot data. In: 2019 IEEE International Conference on Blockchain (Blockchain), pp. 176–183. IEEE 
(2019)
 25. Parno, B., Howell, J., Gentry, C., Raykova, M.: Pinocchio: nearly practical verifiable computation. 
In: 2013 IEEE Symposium on Security and Privacy, pp. 238–252. IEEE (2013)
https://doi.org/10.1109/TMC.2021.3107187
 Journal of Network and Systems Management (2022) 30: 56
1 3
56 Page 32 of 33
 26. Zhang, Y., Deng, R.H., Shu, J., Yang, K., Zheng, D.: Tkse: Trustworthy keyword search over 
encrypted data with two-side verifiability via blockchain. IEEE Access 6, 31077–31087 (2018)
 27. Yassine, A., Shirehjini, A.A.N., Shirmohammadi, S.: Smart meters big data: Game theoretic model 
for fair data sharing in deregulated smart grids. IEEE Access 3, 2743–2754 (2015)
 28. Boyd, S., Boyd S.P., Vandenberghe L.: Convex Optimization. Cambridge University Press, Cam-
bridge (2004)
 29. Hoang, D.T., Lu, X., Niyato, D., Wang, P., Kim, D.I., Han, Z.: Applications of repeated games in 
wireless networks: a survey. IEEE Commun. Surv. Tutor. 17(4), 2102–2135 (2015)
 30. Levine, D.K.: Learning in games (2001)
 31. Fudenberg, D., Levine, D.: Learning in games. Eur. Econ. Rev. 42(3–5), 631–639 (1998)
 32. Leyton-Brown, K., Shoham, Y.: Essentials of game theory: a concise multidisciplinary introduction. 
Synth. Lect. Artif. Intell. Mach. Learn. 2(1), 1–88 (2008)
 33. Dasgupta, P., Maskin, E.: The existence of equilibrium in discontinuous economic games, i: theory. 
Rev. Econ. Stud. 53(1), 1–26 (1986)
 34. Wang, Y., Saad, W., Han, Z., Poor, H.V., Başar, T.: A game-theoretic approach to energy trading in 
the smart grid. IEEE Trans. Smart Grid 5(3), 1439–1450 (2014)
 35. Yates, R.D.: A framework for uplink power control in cellular radio systems. IEEE J. Sel. Areas 
Commun. 13(7), 1341–1347 (1995)
 36. Sorin, S.: On repeated games with complete information. Math. Oper. Res. 11(1), 147–160 (1986)
 37. Laraki, R., Renault, J., Sorin, S.: Mathematical Foundations of Game Theory. Springer, Berlin 
(2019)
 38. Das, A., Islam, M.M.: Securedtrust: a dynamic trust computation model for secured communication 
in multiagent systems. IEEE Trans. Depend. Secur. Comput. 9(2), 261–274 (2011)
 39. Hyperledger.org. Hyperledger caliper: a blockchain performance benchmark framework. https:// 
github. com/ hyper ledger/ calip er (2021). Accessed 26 Aug 2021
 40. Gennaro, R., Gentry, C., Parno, B., Raykova, M.: Quadratic span programs and succinct nizks with-
out pcps. In: Annual International Conference on the Theory and Applications of Cryptographic 
Techniques, pp. 626–645. Springer (2013)
 41. Graf, M., Küsters, R., Rausch, D.: Accountability in a permissioned blockchain: formal analysis of 
hyperledger fabric. In: 2020 IEEE European Symposium on Security and Privacy (EuroS &P), pp. 
236–255. IEEE (2020)
 42. Liu, D., Ni, J., Huang, C., Lin, X., Shen, X.S.: Secure and efficient distributed network provenance 
for iot: A blockchain-based approach. IEEE Internet Things J. 7(8), 7564–7574 (2020)
 43. Hyperledger Performance, Scale Working Group, et al.: Hyperledger blockchain performance met-
rics. Hyperledger. org, pp. 1–17 (2018)
Publisher’s Note Springer Nature remains neutral with regard to jurisdictional claims in published maps 
and institutional affiliations.
Seyednima Khezr received his B.Sc. and M.Sc. degree in Software Engineering from Islamic Azad Uni-
versity, Iran, in 2013 and 2016, respectively. He received his Ph.D. degree in Electrical and Computer 
Engineering from Lakehead University, Thunder Bay, Ontario, Canada. His research interests include 
blockchain technology, reputation systems, IoT data trading, software security, and game theory.
Abdulsalam Yassine received his B.Sc. in electrical engineering from Beirut Arab University, Lebanon, 
in 1993, and his M.Sc. and Ph.D. in electrical and computer engineering from the University of Ottawa, 
Canada, in 2004 and 2010, respectively. He is a Associate Professor in the Software Engineering Depart-
ment, Lakehead University, Canada. His research interests are energy informatics, smart cities, and block-
chain applications.
Rachid Benlamri is a Professor of Software Engineering and Vice President Academic at the University 
of Doha for Science and Technology, Qatar. He received his Master’s degree and Ph.D. in Computer Sci-
ence from the University of Manchester - UK. He served as keynote speaker and general chair for many 
international conferences. His research interests are in AI, Semantic Web, Blockchain, Data Science and 
Knowledge Engineering.
https://github.com/hyperledger/caliper
https://github.com/hyperledger/caliper
1 3
Journal of Network and Systems Management (2022) 30: 56 Page 33 of 33 56
Authors and Affiliations
Seyednima Khezr1  · Abdulsalam Yassine2 · Rachid Benlamri2,3
 Abdulsalam Yassine 
 ayassine@lakeheadu.ca
 Rachid Benlamri 
 rachid.benlamri@udst.edu.qa
1 Department of Electrical and Computer Engineering, Lakehead University, 955 Oliver Road, 
Thunder Bay, ON P7B 5E1, Canada
2 Department of Software Engineering, Lakehead University, 955 Oliver Road, Thunder Bay, 
ON P7B 5E1, Canada
3 University of Doha for Science and Technology, 24449 Arab League St, Doha, Qatar
http://orcid.org/0000-0002-5910-6171
	Towards a Trustful Game-Theoretic Mechanism for Data Trading in the Blockchain-IoT Ecosystem
	Abstract
	1 Introduction
	2 Related Work
	3 Data Market Structure
	3.1 Assumptions
	3.2 Process Details of the Proposed System
	3.3 Data Value
	3.4 Data Aggregator Utility
	4 A Repeated Game Theoretic Approach for Data Trading Between Buyers
	4.1 Data Buyers Utility
	5 Nash Equilibrium Solutions
	6 Mechanism Design
	6.1 Winner Allocation Stage
	6.2 Payment Stage
	7 Evaluation of Results
	7.1 Parameters and Experiment Settings
	7.2 Security Analysis
	7.3 Computational Efficiency Analysis
	7.4 Budget Balance Analysis
	7.5 Individual Rationality Analysis
	7.6 Bidding Learning Analysis
	7.7 Truthfulness Analysis
	7.8 Transaction Throughput Metric
	7.9 Transaction Metric
	7.10 Elapsed Time Metric
	7.11 Resource Consumption Metric
	8 Conclusion and Future Work
	Acknowledgements 
	References