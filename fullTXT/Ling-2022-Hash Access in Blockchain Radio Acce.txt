Hash Access in Blockchain Radio Access Networks: Characterization and Optimization
IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 11, JUNE 1, 2022 8053
Hash Access in Blockchain Radio Access
Networks: Characterization and Optimization
Xintong Ling , Member, IEEE, Bowen Zhang, Hui Xie, Jiaheng Wang , Senior Member, IEEE,
and Zhi Ding , Fellow, IEEE
Abstract—Blockchain radio access network (B-RAN) is a
decentralized, trustworthy wireless networking paradigm spurred
by distributed ledger technologies (DLTs). In B-RAN, even
though the blockchain builds trust in upper layers, the absence
of trust between client devices still causes the problem with
open access, or the so-called Rogue’s dilemma, and degrades
the network performance. Therefore, Hash Access was proposed
for B-RAN to address the trust issue between clients and enforce
client devices to obey the grant-free access rule. However, the
characteristics and performance of Hash Access in B-RAN
remain unclear. In this work, we dive deep into the Rogue’s
dilemma from a game-theoretic model to emphasize the necessity
of Hash Access. We establish an analytical model to comprehen-
sively evaluate the performance of B-RAN using Hash Access
regarding transmission success probability, access delay, and
network throughput. Based on the analytical model, we fur-
ther optimize the Hash Access protocol for network throughput
and provide useful practical guidelines. Simulation results are
presented to validate our proposed model and insights.
Index Terms—Blockchain, Internet of Things (IoT),
machine-to-machine communications, medium access control
protocol, radio access network (RAN).
I. INTRODUCTION
BLOCKCHAIN radio access network (B-RAN) is
emerging as a decentralized, secure, and efficient wireless
access paradigm by leveraging distributed ledger technologies
(DLTs) for the upcoming sixth-generation (6G) era [1]–[5]. By
establishing a trusted foundation, B-RAN facilitates collabora-
tion among multiple parties and provides a unified framework
Manuscript received March 16, 2021; revised June 23, 2021 and August 3,
2021; accepted August 27, 2021. Date of publication September 13, 2021;
date of current version May 23, 2022. This work was supported in part
by the National Key Research and Development Program of China under
Grant 2018YFB1801103; in part by the National Natural Science Foundation
of China under Grant 61901111, Grant 61971130, and Grant 61720106003;
in part by the Natural Science Foundation of Jiangsu Province under Grant
BK20190331; in part by the Jiangsu Province Basic Research Project under
Grant BK20192002; in part by the Huawei Cooperation Project under Grant
FA 2019051081-2021-01; and in part by the Fundamental Research Funds for
the Central Universities. (Corresponding author: Jiaheng Wang.)
Xintong Ling and Jiaheng Wang are with the National Mobile
Communications Research Laboratory, Southeast University, Nanjing 210096,
China, and also with the Pervasive Communication Research Center, Purple
Mountain Laboratories, Nanjing 210023, China (e-mail: xtling@seu.edu.cn;
jhwang@seu.edu.cn).
Bowen Zhang and Hui Xie are with the National Mobile Communications
Research Laboratory, Southeast University, Nanjing 210096, China (e-mail:
bwzhang@seu.edu.cn; huixie@seu.edu.cn).
Zhi Ding is with the Department of Electrical and Computer Engineering,
University of California at Davis, Davis, CA 95616 USA (e-mail:
zding@ucdavis.edu).
Digital Object Identifier 10.1109/JIOT.2021.3111915
for heterogeneous, distributed, and complex future Internet
of Things (IoT) [6]–[8]. In B-RAN, the IoT devices are not
limited to any specific subscribing service providers (SPs) but
can receive resources and services from different subnetworks.
With the help of blockchain and related critical components,
B-RAN connects multiple untrusted parties, including SPs and
clients and further forms a multisided platform (MSP) that
enables direct interactions among them [1].
However, it is worth emphasizing that the process of estab-
lishing trust is not easy [1], [9]–[14]. That is why B-RAN
requires a series of designs and modules, more than a sim-
ple blockchain, to work together through proper orchestration
for a trustworthy environment [1], [15]. As highlighted in [1],
there are several fundamental trust relationships, such as SP–
client, SP–SP, and client–client, in such an interhost network
platform. Among them, the trust between client devices is
often overlooked. However, as stressed in [16], the lack of
trust between the client devices may lead to an interesting
phenomenon, named the Rogue’s Dilemma.
To see the Rogue’s Dilemma, let us consider the grant-free
random access (GFRA) scenario, where a massive number of
IoT devices share an open access medium without dedicated
resources [17]–[21]. Due to the short packets with typically
tens of bytes, GFRA enables efficient management with low
signaling overhead and access delay and thus is favored.
Traditionally, if all the devices either belong to a common
operator or are shared authentication, they will strictly obey
the random access (RA) protocols for the entire network’s
performance. For example, in the well-known Aloha proto-
col [22], [23], a random backoff is required before a packet
transmission, to reduce the collision probability of the whole
network. However, unlike such traditional networks, B-RAN
includes a massive number of devices that may belong to
multiple parties [1], [16]. These client devices do not trust
each other and thus may ignore predefined protocols and com-
pete for limited resources for self-interest. A rogue device
may simply skip the required backoff to shorten the waiting
time in its best interest; however, such behaviors harm hon-
est device’s interests, especially when the number of rogue
devices increases. As illustrated in [16], even a few self-
ish devices may significantly compromise and undermine
network efficiency and fairness. Clearly, the Rogue’s Dilemma
is directly caused by the absence of trust between clients.
It can be viewed as the problem with open access or “the
tragedy of the commons” [24] in the context of wireless
communications.
2327-4662 c© 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-7033-395X
https://orcid.org/0000-0002-9783-5471
https://orcid.org/0000-0002-2649-2125
8054 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 11, JUNE 1, 2022
The Rogue’s Dilemma implies that even if blockchain builds
trust in the upper layers of an integrated network, the coordi-
nation may still fail because of the lack of trust between clients
at the bottom. In B-RAN, a trustworthy grant-free access
protocol named Hash Access was proposed in [16] for IoT
environments to resolve the Rogue’s Dilemma. Hash Access
can enforce all the devices to obey the rule of access and
prevent selfish behaviors of rogue devices, and can ultimately
establish trust between clients in B-RAN. As revealed in [16],
Hash Access can promote multiparty cooperation through
cross-network integration and unbalanced traffic offloading.
More recently, several variants, such as nonorthogonal hash
access (NOHA) [25], were proposed based on Hash Access
for further enhancement.
Nevertheless, some fundamental problems of the origi-
nal Hash Access protocol remain unknown yet. First, the
Rogue’s Dilemma is straightforward; however, it has never
been analytically characterized yet. More evidence and analy-
sis are thus required to provide insightful intuitions for the
Rogue’s Dilemma. Second, the work in [16] demonstrated
the performance of Hash Access but mainly relied on simula-
tions. So far, there is a lack of models and methods to assess
the behavior and performance of Hash Access. Third, due to
the absence of modeling, the optimization of parameters in
Hash Access is still open. Consequently, a proper analytical
model is urgently called for Hash Access in B-RAN to ana-
lyze the key network performance indicators and give insights
and guidelines for practical designs.
This article is intended to address the above issues. First,
we interpret the Rogue’s Dilemma from a game-theoretic
model. We provide the detailed workflow of Hash Access
in the B-RAN framework and illustrate how Hash Access
enforces rogue devices to obey. To evaluate the performance
of B-RAN using Hash Access, we analyze the characteris-
tics of Hash Access systematically, which is quite challenging.
Eventually, we establish an analytical model for Hash Access
and optimize the protocol based on the proposed model. The
key contributions of this work are listed as follows.
1) We demonstrate the Rogue’s Dilemma from a simplified
two-player game instead of empirical or pure intuitions.
Based on the game model, we provide several interesting
insights and even qualify the value of trust. The Rogue’s
Dilemma explains the fundamental motivation why we
need Hash Access in B-RAN.
2) We establish an analytical model for Hash Access in
the framework of B-RAN with a general traffic pattern,
which, to the best of our knowledge, has never been
developed before.
3) Based on the above model, we comprehensively assess
the performance of Hash Access in terms of trans-
mission success probability, network throughput, and
access delay and provide several insightful guidelines
for designs.
4) In the scenario with sparse IoT traffic, we present
the network performance in closed-form solutions and
derive the optimal access difficulty for the maximum
throughput. We also take the impact of IoT device’s
storage space into consideration.
TABLE I
PAYOFF MATRIX
5) In the simulation, we evaluate several critical aspects
of Hash Access and validate our analytical model and
conclusions.
The remainder of this article is organized as follows.
Section II introduces the game model of the Rogue’s Dilemma.
Section III describes Hash Access in detail and presents the
traffic model. Section IV establishes an analytical model for
B-RAN using Hash Access. Section V considers Bernoulli
traffic and optimizes the access difficulty. Section VI presents
the simulation results, and Section VII draws the conclusion.
II. ROGUE’S DILEMMA
In this section, we would like to explain the Rogue’s
Dilemma from a game-theoretic model. We consider the case
with two IoT devices as players that share a common medium
but do not trust each other. In every slot, each device has two
strategies: 1) T for transmitting and 2) W for waiting, belong-
ing to the strategy set S = {T, W}. Denote si ∈ {T, W} as
the strategy adopted by device i = 0, 1. Assume that both of
them have packets to transmit. If they both attempt to trans-
mit in a slot, i.e., s0 = s1 = T , a collision occurs, and no
one transmits their packets successfully. If both of them wait,
an available slot is wasted, resulting in longer access delays
for both sides. One transmits and the other one waits, leading
to successful transmissions. Therefore, the payoff function of
device i = 0, 1 can be written as
ui(si, s1−i) =
⎧
⎨
⎩
g − cp, si = T, s1−i = W
−ct, si = W
−cp − ct, si = T, s1−i = T
(1)
where g is the profit of one successful transmission, ct is
the waiting cost caused by transmission delays, and cp is
the transmission cost (e.g., power consumption). Compactly,
we summarize (1) in the payoff matrix in Table I. Note that
g − cp > −ct always holds, implying one successful trans-
mission is always better than waiting for a slot; otherwise, a
successful access yields a negative payoff.
Based on the above game model, we first consider a trust-
worthy case where two players strictly follow a given RA
protocol with access probability q. The utility functions can
be written as
ui(T) � Es1−i{ui(si = T, s1−i)} = g − cp − (g + ct)q
ui(W) � Es1−i{ui(si = W, s1−i)} = −ct.
Hence, the expected payoff of device i is
ui = Esi,s1−i{ui(si, s1−i)}
= qui(T) + (1 − q)ui(W)
= −(g + ct)q
2 + (
g − cp + ct
)
q − ct. (2)
To maximize the gain, the transmit probability q of the RA
protocol should be set to q� = ([g − cp + ct]/[2(g + ct)]) for
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
LING et al.: HASH ACCESS IN BLOCKCHAIN RADIO ACCESS NETWORKS: CHARACTERIZATION AND OPTIMIZATION 8055
(a) (b)
Fig. 1. Average payoffs of different strategies in the two-player game model. (The profit of a successful transmission is normalized as g = 1.) (a) ct = 0.5.
(b) cp = 0.5.
both players, yielding
utrust �
(
g + ct − cp
)2
4(g + ct)
− ct. (3)
Now, we consider the case that device 1 follows the RA
protocol, i.e., q1 = q�, and the rogue device 0 selfishly sets
q0 to maximize its own profit. The utility functions of device
0 are given by
u0(T) = g − cp − ct
2
u0(W) = −ct.
The expected payoff of device 0 is
u0 = g − cp + ct
2
q0 − ct (4)
which is maximized at q0 = 1. In other words, a rogue
device should always skip the backoff and occupy the link.
The maximum payoff of device 0 is
uselfish � g − cp − ct
2
. (5)
As a result, the expected payoff of device 1 becomes
uhonest � −g − cp + ct
2(g + ct)
cp − ct. (6)
Obviously, the selfish strategy dominates the honest one.
Now, what if both devices behave selfishly? If both devices
keep transmitting, it will tragically result in collisions in every
slot, with payoff (−cp −ct). Now, consider that they are smart
enough to adjust their transmitting probability qi based on the
other’s strategy q1−i in their best interest. The network will
converge to a Nash equilibrium at last in an uncoordinated
manner. The utility function of device i is given by
ui(T) = g − cp − (g + ct)q1−i
ui(W) = −ct.
We calculate the mixed strategy equilibrium via the principle
of indifference [26]. By letting ui(T) = ui(W), we have
q0 = q1 = g − cp + ct
g + ct
. (7)
The expected payoff is
uuntrust � −ct. (8)
In Fig. 1, we visualize the payoffs of different strategies in
the game model with varying costs. Observing the above
results in (3), (5), (6), and (8), we can obtain the relationship
among them easily. Now, we formally summarize the Rogue’s
Dilemma based on the two-player game in the following.
Theorem 1 (Rogue’s Dilemma): In an open access medium
shared by two devices, the payoffs of different strategies have
the following relationship:
uhonest
(a)
< uuntrust
(b)
< utrust
(c)
< uselfish (9)
indicating the situation where rogue behaviors for self-interests
eventually result in low payoffs for everyone, even worse than
the original trustworthy environment.
Proof: Inequality (a) is obvious since g − cp > −ct.
Inequality (b) comes from the positivity of ([(g + ct−cp)
2]/
[4(g + ct)]). Inequality (c) is because uselfish − utrust = ([(g −
cp + ct)(g + cp + ct)]/ [4(g + ct)]) > 0.
Theorem 1 interprets how the Rogue’s Dilemma occurs, and
provides several interesting insights. First, if all the devices
follow the access protocol honestly, the rogue behavior seems
profitable to themselves due to the shorter delay and thus
results in uselfish > utrust, but affects the honest device’s
interests (uhonest < utrust). A device can easily conclude that
it is in its best interests to skip the backoff and becomes a
rogue device. That is how the selfish nature of devices comes.
However, as more devices become rogues, all of them are los-
ing out (uuntrust < uselfish). The entire network will converge
to an untrusted, uncoordinated Nash equilibrium with lower
payoffs even than the original trusted state (uuntrust < utrust).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
8056 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 11, JUNE 1, 2022
Moreover, any single device that attempts to behave honestly
will suffer by a lower payoff (uhonest < uuntrust) and cannot
change the aggressive atmosphere. The gap between utrust and
uuntrust, i.e., ([(g + ct − cp)
2]/[4(g + ct)]), reflects the value of
trust between clients, which is always positive. One can see
that the relationships in Theorem 1 agree with the numerical
results in Fig. 1. Essentially, the Rogue’s Dilemma is the wire-
less communication version of “the tragedy of the commons.”
Even though Theorem 1 is based on a simplified two-player
game model, the Rogue’s Dilemma also holds for a network
with multiple devices, which is verified by the simulations in
Section VI.
Notably, B-RAN is a typical scenario, where the Rogue’s
Dilemma may occur. The rogue devices in B-RAN may violate
the RA protocol and obtain gains in the short term; how-
ever, optimizing for the self in the short term is not optimal
for all in the long term, and the cost of rogue behaviors is
borne by all. The Rogue’s Dilemma reveals the value of trust
and stresses the necessity of establishing the trust between
clients in B-RAN. As suggested by the Rogue’s Dilemma, if
we cannot guarantee every device to obey the protocol hon-
estly, “the tragedy of the commons” could occur in B-RAN
or any other shared open networks. That explains why Hash
Access is indispensable.
III. HASH ACCESS IN B-RAN
A. Hash Access Protocol
With the help of blockchain and related designs, B-RAN
integrates multilateral SPs and clients to form an interopera-
tive network of subnetworks. As a trust builder, B-RAN pools
diverse resources across sectors and connects network par-
ticipants for multihost collaboration. Even so, the devices in
B-RAN belonging to different parties without shared authen-
tication could be dishonest or even selfish due to the absence
of trust between them. Now, consider, in B-RAN, there are
nd untrusted and possibly selfish IoT devices sharing nc open
access channels. In other words, at most nc IoT devices can
access simultaneously. The value of nc reflects the access capa-
bility of the shared network. As illustrated in Section II, the
Rogue’s Dilemma may occur in such a scenario. Therefore,
we use Hash Access in B-RAN to avoid the Rogue’s Dilemma
caused by the lack of trust between devices.
According to the protocol of Hash Access, each IoT device
shall perform hash queries before sending data packets until
it finds a hash value below a given target value. Owing to the
noninvertibility of the hash function, the access point (AP) can
easily verify the validity of a solution, but it is difficult to find
such a qualified solution. In this approach, an enforced backoff
is automatically embedded into Hash Access, which can hardly
be skipped. Different from the traditional RA protocol that
simply assumes all the devices follow the protocol honestly,
Hash Access enforces the protocol for every device and offers
a feasible solution to the Rogue’s Dilemma by rebuilding the
trust between them.
Now, we demonstrate the Hash Access procedure in Fig. 2,
with the detailed steps listed as follows.
Fig. 2. Procedure of Hash access.
1) Step 1 (Contract Broadcast): In B-RAN, the AP peri-
odically broadcasts access contracts to announce the
availability of GFRA services. The access contracts are
digitally signed by the AP and contain the service fee,
a target hash, the timestamp, and control messages.
2) Step 2 (Hash Check): If a device has a packet to transmit,
it starts to perform hash queries for access. The hash
puzzle is formulated as
h = H(T + I + C) (10)
where h is the hash value, H(·) denotes a hash operation,
T is the current timestamp, I is the device’s unique
identifier (ID),1 and C is the access contract. This device
uploads the packet, once the hash value is less than the
given target hash, i.e.,
h = H(T + I + C) < hc (11)
where hc is the target hash value. Otherwise (h ≥ hc),
this device is denied and has to wait and perform the
hash query in the next slot (the timestamp is changing
for each slot to keep the hash trials fresh and indepen-
dent of each other). The device also needs to sign the
smart contract C with its digital signature.
3) Step 3 (Packet Transmission): If a device passes the hash
check, it transmits the data packet, the hash value, and
the access contract to the AP in the current slot, and a
contention resolution (CR) timer starts simultaneously.
The data packet is successfully transmitted only if there
is no packet collision.
1The unique identifier can rely on the existing ones, e.g., the international
mobile equipment identity (IMEI), and also hardware-dependent features, e.g.,
RF fingerprinting [27], [28].
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
LING et al.: HASH ACCESS IN BLOCKCHAIN RADIO ACCESS NETWORKS: CHARACTERIZATION AND OPTIMIZATION 8057
4) Step 4 (Validation): After receiving the data packets and
the access contract from the IoT device, the AP verifies
the hash value and the access contract.
5) Step 5 (Acknowledgment): If the hash value is below
the target, the AP will accept the data packets and
send the acknowledgment (ACK) messages to the
device. If the hash value or the access contract is invalid,
the AP will ignore the corresponding packet. If the IoT
device does not receive the ACK message before the CR
timer expires, it regards the transmission as a failure and
repeats step 2 and step 3.
6) Step 6 (Contract Upload): As the ACK message is trans-
mitted, the AP uploads the access contract to the miner
network for the service fee.
7) Step 7 (Block Confirmation): The miners check the
validity of the access contract and then commit the
contract to the blockchain. After the access contract is
accepted by the main chain, the service fee specified in
the contract will be automatically transferred from the
IoT device to the AP through the blockchain.
Indeed, it is true that Hash Access requires extra computation
and energy for hash operations. However, in step 2, we design
the hash query (10) and restrict that each device can compute
the hash value once per slot, which largely saves the energy
cost of Hash Access. As shown in [16], the energy consump-
tion of hash operations per second is acceptable compared with
that of the data transmission.
In the process of Hash Access, the AP sets a suitable target
hash value hc to determine how hard it is for client devices to
transmit data packets. More literally, we introduce a straight-
forward term named access difficulty to measure the difficulty
of finding a hash value below the current target. Borrowed
from the concept of mining difficulty in bitcoin [29], [30], the
access difficulty d is defined as
d � hm
hc
(12)
where hm represents the maximum target hash. According to
the definition of the access difficulty, the transmission prob-
ability of an IoT device in one slot, i.e., the probability that
each IoT device calculates a valid hash below the target hash,
can be expressed as
Pr{h < hc} = hc
hm
= 1
d
. (13)
To show it more straightforward, we give an example where
the target hash is a 16-bit number. The maximum target hash
is set to 0xffff in the hexadecimal version. If the current hash
target is 0x1027, the access difficulty d is
d = 0xffff
0x1027
≈ 15.85. (14)
Obviously, a larger target hash indicates less access difficulty,
whereas a smaller target hash yields greater access difficulty.
In principle, at a higher difficulty level, it is more difficult
to pass the hash check and thus leads to a longer waiting
time, whereas, at a lower difficulty level, it is easier to find a
valid hash solution but results in a higher collision probabil-
ity. Therefore, the value of access difficulty d should be set
Fig. 3. Physical-layer model of B-RAN using Hash Access in GFRA
scenarios.
accordingly for traffic control in B-RAN. An analytical model
is thus called for assessing the characteristics of Hash Access
and optimizing the access difficulty in the protocol.
B. Traffic Pattern
We adopt a general traffic model in this study. Every IoT
device generates new packets following an independent, iden-
tical, stationary random process with an arbitrary probability
mass function (PMF):
Pr{X = k} = ξk, k = 0, 1, . . . (15)
where X is the random variable of newly generated packets
within a slot duration τs for every IoT device. We define
the expected value of E[X] (packets/slot), or E[X]/τs (pack-
ets/s), as the offered load of an IoT device. We summarize the
physical-layer model of B-RAN using Hash Access in GFRA
scenarios in Fig. 3.
Based on the general traffic flow (15), we give several
typical IoT traffic patterns as examples in the following.
1) Bernoulli Traffic: The arrivals of data packets follow a
Bernoulli distribution [31] with probability ξ1 for one
packet and probability ξ0 for none
Pr{X = k} =
⎧
⎨
⎩
ξ0, k = 0
ξ1, k = 1
0, k = 2, 3, . . . .
(16)
Bernoulli traffic implies sparse traffic, where at most one
packet arrives in an IoT device in a slot. Hence, in the
Bernoulli traffic, ξ1 packet is expected to arrive in a slot.
2) Sporadic Traffic: If each IoT device sporadically gen-
erates packets (two packets cannot arrive at the same
epoch but may arrive in the same slot), we can use a
Poisson process to model the IoT traffic [32], [33] with
the PMF
Pr{X = k} = ξk = e−λ(λ)k
k!
, k = 0, 1, . . . (17)
where λ � E[X] is defined as the average number of
arrival packets in a slot.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
8058 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 11, JUNE 1, 2022
Fig. 4. State transition diagram of the proposed Markov chain.
IV. PERFORMANCE ANALYSIS OF HASH ACCESS
A. Markov Model
In this section, we will establish a Markov model to char-
acterize the performance of Hash Access. Let the state of
the Markov chain be the length of each IoT device’s packet
buffer, i.e., the number of data packets awaiting their turn
to transmit in each device. Since an IoT device’s storage
space is limited, we set the maximum buffer size to be L
such that the state space Q of an IoT device is given by
Q = {0, 1, . . . , i, . . . , L}. Define πi(t) as the probability that
there are i packets in the buffer at time t for i = 0, 1, . . . , L,
and denote πi � limt→∞πi(t) as the steady-state probabil-
ity of state i. The state transition diagram of Hash Access is
shown in Fig. 4, where pj,k is the state transition probability
from state j to state k. A state transition occurs as new pack-
ets’ arrive or transmissions succeed (we assume that the ACK
message can always be captured successfully before the CR
timer expires). Mathematically, the state transition probability
of the Markov chain can be represented as
pj,k =
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
ξk−j
(
1 − ps
d
)+ ξk−j+1
ps
d , 1 ≤ j ≤ k ≤ L − 1
ξ0
ps
d , j = 1, . . . , L; k = j − 1
∑∞
i=k ξi−j
(
1 − ps
d
)
+∑∞
i=k ξi−j+1
ps
d , j = 1, . . . , L − 1; k = L
ξk, j = 0; k = 0, . . . , L − 1∑∞
i=k ξi, j = 0; k = L
1 − ξ0
ps
d , j = L; k = L
0, otherwise
(18)
where ps is the transmission success probability. We denote
the one-step state transition matrix as P, of which the (j, k)
element is given by the state transition probability pj,k in (18).
Now, we can characterize and express the stationary distribu-
tion π = [π0, π1, . . . , πL] under Hash Access as
π = πP. (19)
Given the traffic model {ξk} and the maximum buffer size
L, π in (19) can be expressed by an implicit function of
ps/d, denoted by π(ps/d). Essentially, the term ps/d repre-
sents the probability that a device solves the hash puzzle and
transmits the packet successfully, implying the probability of
successful access. Even so, we are still far from solving the
steady-state distribution via (19) since matrix P includes the
transmission success probability ps which is unknown yet.2
2The steady-state distribution may not exist if d = 1 and nc = 1. The
following discussions do not consider this case.
Naturally, we shall derive the transmission success probability
ps in the following.
B. Transmission Success Probability
The packet transmission success probability ps is defined as
the probability of successfully transmitting a packet to the AP
with no collision. Obviously, 1 − ps represents the probability
of packet collision. We denote π+ as the probability that an
IoT device attempts to access to the AP, i.e., it has at least
one data packet to transmit
π+(ps
d
)
�
L∑
i=1
πi
(ps
d
)
= 1 − π0
(ps
d
)
. (20)
We can hardly give the closed-form expression of the station-
ary distribution π . Nevertheless, by using Cramer’s rule [34],
we can obtain the expression of π0(ps/d) from (19)
π0
(ps
d
)
=
(
ξ0ps
d
)L
det
([
(I − P)1:L−1, 1
])
where [(I − P)1:L−1, 1] is the matrix formed by replacing the
Lth column of I − P by an all-one column vector 1. Hence,
we have
π+(ps
d
)
= 1 −
(
ξ0ps
d
)L
det
([
(I − P)1:L−1, 1
]) . (21)
Consequently, the probability that only one specific device col-
lides with the current device is (1/dnc)π
+(ps/d). In a network
with nd devices, the transmission success probability is
ps =
(
1 − π+( ps
d
)
dnc
)nd−1
=
⎛
⎜
⎝1 − 1
dnc
⎛
⎜
⎝1 −
(
ξ0ps
d
)L
det
([
(I − P)1:L−1, 1
])
⎞
⎟
⎠
⎞
⎟
⎠
nd−1
. (22)
We can calculate the value of ps based on (22) by numerical
methods. For example, we can use the fixed-point method and
update ps iteratively from an initial point until convergence.
From (22), we would like to discuss the impact of network
parameters on ps. Given d, ps is increasing in the number of
links nc and decreasing in the number of devices nd. It is
straightforward because more uplink channels mean stronger
access capability and massive devices cause excessive colli-
sions. Given nd and nc, ps is an implicit function of the access
difficulty d determined by (22) and thus can be denoted by
ps(d). Hence, π+(ps/d) as a function of ps/d, is essentially
determined by d, which will be denoted as π+(d) in the fol-
lowing. Meanwhile, if we simply look at (22), the relationship
between ps and d is unclear. In principle, a larger d means a
fewer devices allowed to access, implying fewer collisions and
a higher successful transmission probability ps. The mono-
tonicity is verified by numerical and simulation results (see
Fig. 5); however, the strict proof under a general traffic model
is not easy. Hence, we would like to make a conjecture first.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
LING et al.: HASH ACCESS IN BLOCKCHAIN RADIO ACCESS NETWORKS: CHARACTERIZATION AND OPTIMIZATION 8059
Fig. 5. Relationship between ps and d with varying numbers of devices in
different traffic patterns. (nc = 8 and E[X]/τs = 40packets/s).
Conjecture 1: Given nc and nd, ps is monotonically
increasing in d.
Section V will mathematically prove Conjecture 1 for the
Bernoulli traffic as evidence of the general traffic pattern.
C. Network Throughput
Now, let us evaluate the network throughput of Hash Access,
which is the critical performance measure in evaluating a
network. We define the network throughput T as the aver-
age number of data packets successfully transmitted in a slot.
The network throughput T is the product of the probability of
successful transmission and the number of IoT devices that
have packets to be transmitted in a slot, given by
T = ps(d) · ndπ
+(d)
d
. (23)
According to (21) and (22), ps(d) and π+(d) are determined
by the access difficulty d. Apparently, the access difficulty d
plays a critical role in affecting the network throughput T.
Naturally, the access difficulty optimization for the network
throughput arises. We formulate the optimization problem as
maximize
d
T in (23) (24)
subject to d ≥ 1.
The problem in (24) is challenging and intractable. We even
do not have the closed-form expressions of ps(d) and π+(d),
not to mention the objective T. However, by taking advantage
of the problem structure, we have the following theorem.
Theorem 2: Given nc and nd, the network throughput is
upper bounded by Tm = nc(1 − 1/nd)
nd−1, and the optimal
access difficulty d� is given by
⎧
⎪⎨
⎪⎩
ps(d�) =
(
1 − 1
nd
)nd−1
, if ps(1) ≤
(
1 − 1
nd
)nd−1
d� = 1, if ps(1) >
(
1 − 1
nd
)nd−1
.
(25)
Proof: By substituting (22) into (23), the throughput can
be rewritten as a function of ps
T(ps) = ncndps
(
1 − p
1
nd−1
s
)
. (26)
The first-order derivative of this function is given by
T′(ps) = ncnd
(
1 −
(
1 + 1
nd − 1
)
p
1
nd−1
s
)
. (27)
Hence, T(ps) is monotonically increasing in ps if ps <
(1 − [1/nd])nd−1 and is monotonically decreasing in ps if
ps > (1 − [1/nd])nd−1. The maximum throughput is nc(1 −
1/nd)
nd−1, which is achieved at ps(d) = (1 − [1/nd])nd−1.
According to Conjecture 1, ps is monotonically increasing
in d and thus the minimum is ps(d) = ps(1). Therefore, if
ps(1) ≤ (1 − [1/nd])nd−1, we can always find an access dif-
ficulty d satisfying ps(d) = (1 − [1/nd])nd−1. Meanwhile, if
ps(1) > (1 − [1/nd])nd−1, the access difficulty d satisfying
ps(d) = (1− [1/nd])nd−1 does not exist. In this case, through-
put T is decreasing in d, and the maximum is achieved at
d� = 1.
Theorem 2 indicates the optimal access difficulty d�
to maximize the network throughput T. As revealed by
Theorem 2, the network has two states, depending on the
value of ps(1). Since ps(d) is increasing in d, we have
ps(1) ≤ ps(d) < 1.3 In the case ps(1) > (1 − [1/nd])nd−1,
we cannot find such d satisfying ps(d) = (1 − [1/nd])nd−1
to achieve the upper bound Tm. In this case, the network
throughput mainly depends on the offered traffic load, and
the access channel is capable of handling the current traffic
intensity. The optimal access difficulty d� should be set to 1,
suggesting that packets can be transmitted immediately once
they arrive. This case corresponds to the scenario that the open
access resources are sufficient for all the devices with pack-
ets to transmit so that backoff is unnecessary. Meanwhile, if
ps(1) ≤ (1 − [1/nd])nd−1, we can always find proper d� satis-
fying ps(d�) = (1 − [1/nd])nd−1 for the upper bound Tm. Let
us recall the Rogue’s Dilemma in Section II. In this case, the
network is saturated or even congested so that Hash Access is
necessary to control the aggressive traffic and prevent selfish
access.
In the saturated state using d�, both the transmission suc-
cess probability ps(d�) and the maximum throughput Tm are
monotonically decreasing in nd. It accords with our intu-
ition that more devices result in a higher collision probability
and a lower throughput. In a network with massive devices
nd → ∞, one finds that limnd→∞ Tm = nc(1 − 1/nd)
nd−1 =
[nc/e], which only depends on the number of uplinks nc.
Actually, the uplink channels represent the available resources
of the network and determine the upper bound of the system
performance. From Theorem 2, we always have [nc/e] <
Tm ≤ [nc/2] for any network with at least two devices.
3limd→+∞ π+(d)/d = 0 yields limd→+∞ ps(d) = 1, which is the
supremum of ps(d).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
8060 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 11, JUNE 1, 2022
D. Access Delay
Now, we would like to assess the delay of Hash Access
based on the results of network throughput. According to
Little’s law [35], in a stable system, an item’s waiting time
equals the ratio of the average length of the waiting queue
and the long-term average arrival rate (i.e., the throughput in
our case). Hence, the access delay of Hash Access can be
expressed as
D = ndL̄
T
= d
ps(d)
∑L
i=0iπi
1 − π0
(28)
where πi is obtained from (19), L̄ = ∑L
i=0iπi is the average
packet number in a device’s buffer, and the throughput T is
given by (23). Equation (28) provides a general method to
characterize the access delay of Hash Access for any traffic
pattern described by (15). Remark that the access delay was
previously discussed in [36] and derived by dividing into two
parts: 1) the calculating delay and 2) queuing delay. However,
Zhang et al. [36] assumed that the distribution (say �i) that
the device buffer has i packets just prior to a packet arrival
epoch4 is the same as the stationary distribution πi. However,
such an assumption may not hold for any traffic patterns.
Therefore, (28) provides a more accurate and general result
for access delay analysis than the existing work [36].
As shown in Fig. 2, Hash Access is based on a service-
before-payment mechanism to reduce the long confirmation
delay caused by the blockchain. After receiving the packet
from the IoT device, the AP directly provides the GFRA ser-
vice and transmits the ACK messages to the IoT device if
the hash value meets the requirement. Since Hash Access
is grant-free, the IoT device does not have to wait for the
access contract to be confirmed and accepted by the main
chain, significantly reducing the access delay. The physical-
layer safeguard mechanism guarantees that the AP cannot
charge the service fee if the data packet is in collisions, since
the data packet and the contract are packed together [16].
V. HASH ACCESS WITH BERNOULLI TRAFFIC
A. Analytical Model
This section focuses on the Bernoulli traffic model, where
ξk = 0 for any k > 1. In this case, at most one packet arrives
in an IoT device in a slot, implying very sparse IoT traffic.
The state transition probability is thus simplified as
pj,k =
⎧
⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩
ξk, j = 0; k = 0, 1
ξ1
(
1 − ps
d
)
, j = 1, . . . , L − 1; k = j + 1
ξ0
(
1 − ps
d
)+ ξ1
ps
d , j = 1, . . . , L − 1; k = j
1 − ξ0
ps
d , j = L; k = j
ξ0
ps
d , j = 1, . . . , L; k = j − 1
0, otherwise.
(29)
Now, the steady-state probabilities are expressed as
⎧
⎨
⎩
π0 = π0p0,0 + π1p1,0
πi = πi−1pi−1,i + πipi,i + πi+1pi+1,i, i = 1, . . . , L − 1
πL = πL−1pL−1,L + πLpL,L.
(30)
4In other words, the distribution �i represents the viewpoint of the arriving
packet.
Combining the above equations yields
πi =
{
π0, i = 0
π0
∏i−1
j=0
(
pj,j+1
pj+1,j
)
, i = 1, . . . , L.
(31)
We normalize the distribution {πi} and obtain
π0 =
⎛
⎝1 +
L∑
i=1
i−1∏
j=0
(
pj,j+1
pj+1,j
)
⎞
⎠
−1
. (32)
To simplify the expression, we introduce an auxiliary variable
a(ps/d) as the ratio of pj,j+1 and pj+1,j
a
(ps
d
)
� pj,j+1
pj+1,j
= ξ1
ξ0
(
d
ps
− 1
)
, j = 1, . . . , L − 1. (33)
Let us first consider the case ξ1 
= (ps/d) or equivalently
a 
= 1. We can express the steady-state probabilities as
π0 =
(
1 +
L∑
i=1
p0,1
p1,0
ai−1
)−1
=
(
1 + ξ1d
ξ0ps
1 − aL
1 − a
)−1
(34)
πi =
(
1 + ξ1d
ξ0ps
1 − aL
1 − a
)−1
ξ1d
ξ0ps
ai−1, i = 1, . . . , L. (35)
Hence, π+(ps/d) = 1 − π0 yields
π+(ps
d
)
= 1 − aL
ps
dξ1
− aL
. (36)
If ξ1 = (ps/d), i.e., a = 1, then we have the steady-state
distribution as
π0 =
(
1 +
L∑
i=1
p0,1
p1,0
ai−1
)−1
= ξ0
L + ξ0
πi = 1
L + ξ0
, i = 1, . . . , L.
Hence
π+ = L
L + ξ0
. (37)
Compactly, we can write π+(ps/d) as
π+(ps
d
)
=
⎧
⎨
⎩
1−aL
ps
dξ1
−aL , ξ1 
= ps
d
L
L+ξ0
, ξ1 = ps
d .
(38)
Now, in the Bernoulli traffic, we have obtained the steady-state
distribution in a more explicit form. This analytical model is
helpful to the optimization of Hash Access.
B. Optimal Access Difficulty
In this section, we aim to find the optimal access difficulty
to maximize the network throughput with the Bernoulli traffic.
First, it seems that π+(ps/d) is not a continuous function due
to the discontinuity at ξ1 = (ps/d); however, it is not true.
In fact, as the value at ξ1 = (ps/d) is specifically defined by
(L/[L + ξ0]), π+(d, ps) is a continuous function, proved by
the following proposition.
Proposition 1: π+(ps/d) is a continuous function.
Proof: We only need to prove the function is continuous
at (ps/d) = ξ1. From the definition of a(ps/d), we can easily
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
LING et al.: HASH ACCESS IN BLOCKCHAIN RADIO ACCESS NETWORKS: CHARACTERIZATION AND OPTIMIZATION 8061
obtain lim(ps/d)→ξ1a = 1. According to L’Hospital’s rule, we
have
lim
ps
d →ξ1
π+(ps
d
)
= −LaL−1a′( ps
d
)
1
ξ1
− LaL−1a′( ps
d
)
= L
L + ξ0
= π+(ps
d
)
| ps
d =ξ1
. (39)
Therefore, π+(ps/d) is a continuous function.
Substituting (38) into (22) yields
ps =
⎧
⎪⎪⎨
⎪⎪⎩
(
1 − 1−aL
dnc
(
ps
dξ1
−aL
)
)nd−1
, ξ1 
= ps
d
(
1 − L
dnc(L+ξ0)
)nd−1
, ξ1 = ps
d .
(40)
Obviously, ps(d) is also a continuous function. Given the
access difficulty d, the transmission success probability ps(d)
is determined by the implicit equation (40). In Section IV, we
conjecture that ps is increasing in d without strict proof. With
the Bernoulli traffic, we can strictly prove the monotonicity of
ps(d), summarized by the following theorem.
Theorem 3: Given nc and nd, ps is monotonically increasing
in d ≥ 1.
Proof: First, we would like to prove ps(d) is injec-
tive, i.e., if d1 
= d2, then ps(d1) 
= ps(d2). We show this
by contradiction. We assume that there exist 1 ≤ d1 < d2 but
ps(d1) = ps(d2) = p̂s. We consider the case where d 
= (p̂s/ξ1)
first. According to the expression of ps in (40), we have
nc
(
1 − p̂
1
nd−1
s
)
= 1 − aL(d1)
p̂s
ξ1
− d1aL(d1)
= 1 − aL(d2)
p̂s
ξ1
− d2aL(d2)
. (41)
Now, we define
f (d) � 1 − aL(d)
p̂s
ξ1
− daL(d)
− nc
(
1 − p̂
1
nd−1
s
)
. (42)
f (d) is undefined at the point d = (p̂s/ξ1). Redefine
f (d)|d=(p̂s/ξ1) = limd→(p̂s/ξ1) f (d) so that f (d) is continuous
for any d ≥ 1 and thus the case d = (p̂s/ξ1) is included. The
derivative of f (d) with respect to d is
f ′(d) = −aL+1(d) − a(d)(L + 1) + L
a1−L(d)
(
p̂s
ξ1
− daL(d)
)2
= g(a)
a1−L(d)
(
p̂s
ξ1
− daL(d)
)2
(43)
where g(a) � −aL+1 + (L + 1)a − L. The derivative of g(a)
is g′(a) = −(L + 1)aL + L + 1, yielding
{
g′(a) > 0, 0 < a < 1
g′(a) < 0, a > 1.
Hence, g(a) is upper bounded by g(1) = 0 and thus g(a) < 0
if a 
= 1. That means, f ′(d) < 0 for d 
= p̂s/ξ1 and f ′(d) = 0 at
d = p̂s/ξ1. Therefore, f (d) is monotonically decreasing in d ≥ 1
(except the point d = p̂s/ξ1 at which the derivation is 0). Due
to the monotonicity of f (d), if f (d1) = 0, then we always have
f (d2) < 0 for any d2 > d1, implying ps(d2) 
= p̂s. This contra-
dicts the assumption that ps(d1) = ps(d2), indicating that ps(d)
is injective. ps(d) is both continuous and injective and thus is
strictly increasing or decreasing. By checking the derivation
of ps(d) at some points, we can prove ps(d) is monotonically
increasing in d ≥ 1.
Theorem 3 agrees with our intuition, but we should not
take it for granted. In fact, even though the traffic pattern
is specified, it is not easy to prove Theorem 3 (the mono-
tonicity can hardly be proved directly and thus we use an
alternative approach to complete the proof). Theorem 3 ver-
ifies Conjecture 1 as a piece of evidence with the Bernoulli
traffic. As pointed out by Theorem 3, with a greater access
difficulty, the devices are less likely to pass the hash check,
resulting in a lower collision probability and a higher transmis-
sion success probability. Meanwhile, if the access difficulty is
too large, very few devices can pass the hash check, resulting
in negative effects on the network throughput.
Note that Theorem 3 is helpful for the access difficulty
optimization problem. According to Section V-A, the network
throughput can be expressed as
T = ndπ
+( ps
d
)
ps(d)
d
=
⎧
⎨
⎩
ndξ1
1−aL
1− dξ1
ps
aL
, ξ1 
= ps
d
nd
ξ1L
ξ0+L , ξ1 = ps
d .
(44)
The throughput optimization problem is formulated the same
as (24), and yields the same optimal solution to (25) given by
Theorem 2. However, Theorem 2 and the optimality of d� rely
on the monotonicity of ps(d) based on Conjecture 1. From
Theorem 3, we can guarantee the optimality of d� with the
Bernoulli traffic. Also, according to the monotonicity of ps(d),
we can find the optimal d� via, e.g., the bisection method.
In the above analysis, ps/d plays an important role in Hash
Access. Again, ps/d represents the probability that a packet
passes the hash check and is successfully transmitted with no
collision, reflecting the network’s access capability. If ξ1 ≥
(ps/d), the network is saturated and congested; otherwise, the
network is capable of supporting the given offered traffic load.
In the next section, we will provide more discussions on these
two network statuses.
C. Infinite Buffer Size
This section considers the case that the buffer size is infinite
or large enough. In this case, (38) can be written as
lim
L→∞π+
(ps
d
)
=
{
dξ1
ps
, ξ1 <
ps
d
1, ξ1 ≥ ps
d .
(45)
In light traffic ξ1 < (ps/d), we find that ps is determined by
the root of the following equation:
ps =
(
1 − ξ1
psnc
)nd−1
. (46)
Observe that the access difficulty d is not involved in (46).
That means, no matter what the value of d is, the transmission
success probability is constant in this case. We denote the root
of (46) as p∗
s , indicating the transmission success probability
in light traffic.
Substituting (45) into (44), we can obtain the expression of
the throughput as
T = ndξ1.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
8062 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 11, JUNE 1, 2022
(a) (b) (c)
Fig. 6. Performance of Hash access in B-RAN with sporadic traffic. (nc = 8 and nd = 30). (a) Transmission success probability. (b) Network throughput.
(c) Access delay.
Interestingly, in this case, the network throughput with low
traffic is unrelated to any network parameters, such as ps, d,
and nc. It is not surprising because the devices using infinite
buffers would not reject any packet, and hence the network
throughput merely depends on the offered load. Consequently,
we can simply set the access difficulty d to 1, which means
every device can transmit immediately if necessary. We name
the case with ξ1 < ps/d as the traffic-limited status, since the
network throughput only depends on the traffic.
In heavy traffic ξ1 ≥ (ps/d), we have limL→∞π+ = 1,
which means almost every device has packets to transmit.
Substituting (45) into (22) yields
ps =
(
1 − 1
dnc
)nd−1
. (47)
Hence, the network throughput is given by
T = nd
d
(
1 − 1
dnc
)nd−1
(48)
which is maximized at Tm = nc(1 − [1/nd])nd−1 with d� =
(nd/nc). It is consistent with the results of Section V-B. Under
high traffic ξ1 ≥ (ps/d), both ps and T are irrelevant to the
traffic intensity ξ1. Therefore, we say the system is in the
network-limited status. The access difficulty d has to be care-
fully selected and optimized, and the maximum throughput
only depends on the network parameters nc and nd.
Now, we are interested in the exact value of the threshold
traffic intensity, denoted by ξ th
1 . At the threshold, we have
Tm = nc
(
1 − 1
nd
)nd−1
= ndξ
th
1
yielding
ξ th
1 = nc
nd
(
1 − 1
nd
)nd−1
.
With the traffic intensity ξ th
1 , the transmission success proba-
bility ps = (1−[1/dnc])nd−1 given by (47), is also the solution
of (46), which verifies the correctness of ξ th
1 . In conclusion, if
the traffic is above ξ th
1 , then the network is limited by itself and
we should set d� = [nd/nc] to maximize the throughput; if the
traffic is below ξ th
1 , then the network throughput is constrained
by the traffic and we should set d� = 1. In the traffic-limited
case, we do not have to worry about the Rogue’s Dilemma
since the shared channel is sufficient for the given traffic.
VI. SIMULATION RESULTS
In this section, we present the simulation results to ver-
ify our proposed analytical model. We consider the GFRA
scenario of B-RAN using Hash Access where nd possibly
selfish IoT devices share nc open access links. The slot dura-
tion is set to 5 ms according to the RA channel (RACH)
setup in long-term evolution (LTE) [22]. In all the figures
(except Fig. 10), markers and lines represent the simulation
and analytical results, respectively.
The monotonicity of ps(d) plays an important role in the
analytical model and optimization of Hash Access. We first
demonstrate the monotonic relationship between ps and d in
Fig. 5 to verify Conjecture 1 and Theorem 3. We consider
Bernoulli and sporadic traffic patterns with different numbers
of devices. As strictly proved by Theorem 3, ps(d) is mono-
tonically increasing in d with the Bernoulli traffic. Meanwhile,
with sporadic traffic, one can also find the monotonic relation-
ship for different nd, which provides evidence for supporting
Conjecture 1.
Fig. 6 illustrates the performance of B-RAN using Hash
Access (nc = 8 and nd = 30) with sporadic traffic in terms
of transmission success probability, network throughput, and
access delay. One can see that the analytical results (dashed
lines) fit well with the simulations (markers), implying that
our proposed model can characterize the B-RAN using Hash
Access accurately.
Fig. 6(a) shows the relationship between the transmission
success probability and the offered load. As the traffic inten-
sity increases, the transmission success probability decreases
because more packets compete for the limited uplink and cause
more collisions. A greater access difficulty can control the
number of IoT devices transmitting in a slot and reduce the
collision probability. Using the optimal access difficulty, we
can see that the transmission success probability is close to
ps(d�) = (1 − [1/nd])nd−1 ≈ (1/e).
Fig. 6(b) visualizes the network throughput with varying
access difficulties. In light traffic, the network is capable of
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
LING et al.: HASH ACCESS IN BLOCKCHAIN RADIO ACCESS NETWORKS: CHARACTERIZATION AND OPTIMIZATION 8063
Fig. 7. Network throughput of Hash Access versus the number of devices
in the Bernoulli traffic. (nc = 8 and E[X]/τs = 40packets/s).
supporting the offered load and thus the network throughput
depends on the traffic intensity. In heavy traffic, the network
is saturated and limited by its capacity. If d is too more
difficult than necessary, the channels are not fully utilized;
otherwise, the traffic is not effectively controlled, causing
catastrophic collisions. As one can see, the optimal access
difficulty d� derived by Theorem 2 achieves the maximum
network throughput.
We present the access delay of Hash Access at different
difficulty levels in Fig. 6(c). As the offered load increases,
the access delay rises slightly initially and becomes signifi-
cant once the network is congested. The delay is relatively
long for a greater access difficulty since it needs more time
to find a valid hash solution. Meanwhile, for a little difficulty,
the access delay is short with light traffic and increases dra-
matically with heavy traffic due to excessive collisions. The
best access difficulty, although is not optimized for latency,
still exhibits satisfactory performance in general.
Now, let us look at Bernoulli traffic. Fig. 7 verifies the opti-
mality of d� in networks with different numbers of devices.
One can see that the optimal access difficulty can always
achieve the maximum network throughput. A greater access
difficulty unduly restricts traffic flow and negatively affects
the network throughput. In a network with a few devices, the
transmission resources are adequate and, hence, a low access
difficulty can reach a close-to-optimal performance; mean-
while, with more devices, the network throughput falls rapidly
due to aggressive competition.
Fig. 8 shows the network throughput versus the access dif-
ficulty. Given the buffer size L and the number of devices
nd, one can see that the optimal access difficulty d� given by
Theorem 2 does maximize the throughput T. From the figure,
as the number of devices grows, we should set a greater d�
to control the traffic, since more devices cause severe colli-
sions. Meanwhile, we also demonstrate the impact of buffer
size on the network throughput. If the buffer size is small, a
high proportion of data packets may be rejected directly due
to the limited buffer size. Hence, the actual traffic intensity is
lower than the offered traffic load, requiring a lower optimal
access difficulty level, just as illustrated by Fig. 8. From the
Fig. 8. Network throughput of Hash Access versus access difficulty in the
Bernoulli traffic. (nc = 8 and E[X]/τs = 40packets/s).
Fig. 9. Network throughput of Hash access with infinite buffer size in the
Bernoulli traffic. (nc = 8 and nd = 30).
simulation, if the buffer size is larger enough (say L > 3), its
impact on the network is negligible.
Fig. 9 presents the network behaviors with infinite buffer
size. According to Section V-C, the system could be traffic-
limited or network-limited, depending on the offered load.
In the traffic-limited status, the uplink is able to support the
offered traffic load and thus the throughput is determined by
the traffic intensity. The optimal access difficulty is d� = 1
so that every device can access directly. In the network-
limited status, the network resources are scarce so that the
throughput is constrained by the number of channels and
devices (nc and nd). Every device is required to pass the
hash check with d� = (nd/nc). These two statuses are divided
by ξ th
1 = (nc/nd)(1 − [1/nd])nd−1, which is consistent to the
conclusion in Section V-C.
Fig. 10 demonstrates the throughput of Hash Access and
Aloha in the presence of rogue nodes. The Aloha protocol in
a trustworthy environment is shown as a benchmark. The CR
based on a uniform backoff algorithm is adopted in the Aloha
with a maximum window of 60 slots [37]. From Fig. 10(a),
Hash Access using the optimal access difficulty achieves a
slightly higher throughput than the Aloha protocol. However,
in the existence of selfish devices, the network throughput of
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
8064 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 11, JUNE 1, 2022
(a) (b)
Fig. 10. Network throughput in the presence of rogue devices with sporadic traffic. (nc = 8 and nd = 100). (a) Point of view of the network. (b) Point of
view from an individual device.
the Aloha protocol drops sharply once the shared link can-
not support so many rogue devices. Hash Access enforces
the backoff and thus effectively avoids such a tragic situa-
tion.5 Furthermore, we visualize the throughput per device in
Fig. 10(b) to show the interesting phenomenon of the Rogue’s
Dilemma. Now, look at the performance of the Aloha proto-
col with 30% rogue devices. With low traffic, the network is
not significantly affected, whereas, with high traffic, the rogue
devices occupy the uplink for higher individual throughput,
and harm the honest devices’ interests. As the network con-
gests more severely, even the rogue devices’ throughput falls
rapidly. Eventually, every device’s throughput is worse than the
trustworthy case that everyone obeys the given RA protocol.
Finally, let us dive deeper into the Rogue’s Dilemma in
Fig. 11 by showing the average access delay and the num-
ber of transmission attempts per packet. In these two aspects,
Hash Access is close to the Aloha protocol in a trustwor-
thy environment, even in the presence of a few rogue devices
(5%). Anyway, these rogue devices can obtain negligible
access delays so that more devices become rogues due to
their selfish nature. Now, with more rogue devices (30%),
both honest and rogue devices have to suffer much longer
access delays and much more transmission attempts for every
packet. The network is highly congested by selfish access,
and the trust between client devices is severely damaged. If
Hash Access is not adopted in B-RAN or other untrustwor-
thy environments, every device would optimize for the self
in the short term, which, ironically, precipitates the network
collapse. Fig. 11 indicates the profound implications of Hash
Access for avoiding the Rogue’s Dilemma and establishing the
trust between clients.
VII. CONCLUSION
In this study, we started from the Rogue’s Dilemma via
a simplified two-player game. The game model showed
5Note that Fig. 10(a) shows a different result from [16, Fig. 5(a)], since the
traffic load in [16] includes the packets retransmitted due to the collisions,
which is different from the definition of offered load in this study.
Fig. 11. Impact of rogue nodes on the network regarding the average number
of transmission attempts per packet and average access delay. (nc = 8, nd =
100, and E[X]/τs = 40packets/s).
how such rogue devices affected the entire network and
qualified the value of trust between clients established by
Hash Access. After demonstrating Hash Access in detail, we
built a Markov model for general traffic patterns to quan-
titatively evaluate the performance of B-RAN using Hash
Access in different aspects. Based on the analytical model,
we further optimized Hash Access in terms of throughput
and pointed out the relationships between the access diffi-
culty and the key performance indicators, such as network
throughput and transmission success probability. Also, we
characterized the impact of the buffer size and assessed the
infinite buffer case with closed-form solutions. Simulation
results illustrate the effectiveness of our established analytical
model.
REFERENCES
[1] X. Ling, J. Wang, Y. Le, Z. Ding, and X. Gao, “Blockchain radio
access network beyond 5G,” IEEE Wireless Commun., vol. 27, no. 6,
pp. 160–168, Dec. 2020.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
LING et al.: HASH ACCESS IN BLOCKCHAIN RADIO ACCESS NETWORKS: CHARACTERIZATION AND OPTIMIZATION 8065
[2] X. Ling, J. Wang, T. Bouchoucha, B. C. Levy, and Z. Ding, “Blockchain
radio access network (B-RAN): Towards decentralized secure radio
access paradigm,” IEEE Access, vol. 7, pp. 9714–9723, Jan. 2019.
[3] J. Wang, X. Ling, Y. Le, Y. Huang, and X. You, “Blockchain enabled
wireless communications: A new paradigm towards 6G,” Nat. Sci. Rev.,
vol. 8, no. 9, Apr. 2021, Art. no. nwab069.
[4] X. Ling, Y. Le, J. Wang, Z. Ding, and X. Gao, “Practical modeling and
analysis of blockchain radio access network,” IEEE Trans. Commun.,
vol. 69, no. 2, pp. 1021–1037, Feb. 2021.
[5] H. Xu, L. Zhang, E. Sun, and C. I, “BE-RAN: Blockchain-enabled open
RAN with decentralized identity management and privacy-preserving
communication,” Jan. 2021. [Online]. Available: arXiv:2101.10856.
[6] K. Christidis and M. Devetsikiotis, “Blockchains and smart contracts for
the Internet of Things,” IEEE Access, vol. 4, pp. 2292–2303, Jun. 2016.
[7] B. Cao et al., “When Internet of Things meets blockchain: Challenges
in distributed consensus,” IEEE Netw., vol. 33, no. 6, pp. 133–139,
Nov./Dec. 2019.
[8] Z. Xiong, Y. Zhang, N. C. Luong, D. Niyato, P. Wang, and N. Guizani,
“The best of both worlds: A general architecture for data management
in blockchain-enabled Internet-of-Things,” IEEE Netw., vol. 34, no. 1,
pp. 166–173, Jan./Feb. 2020.
[9] H. Xu, P. V. Klaine, O. Onireti, B. Cao, M. Imran, and L. Zhang,
“Blockchain-enabled resource management and sharing for 6G commu-
nications,” Digit. Commun. Netw., vol. 6, no. 3, pp. 261–269, Aug. 2020.
[10] H. Xu, L. Zhang, Y. Liu, and B. Cao, “RAFT based wireless blockchain
networks in the presence of malicious jamming,” IEEE Wireless
Commun. Lett., vol. 9, no. 6, pp. 817–821, Jun. 2020.
[11] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for blockchain
networks,” IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600,
Jun. 2019.
[12] S. Guo, Y. Qi, Y. Jin, W. Li, X. Qiu, and L. Meng, “Endogenous trusted
DRL-based service function chain orchestration for IoT,” IEEE Trans.
Comput., early access, Jan. 18, 2021, doi: 10.1109/TC.2021.3051681.
[13] Y. Li et al., “Direct acyclic Graph-Based ledger for Internet of Things:
Performance and security analysis,” IEEE/ACM Trans. Networking,
vol. 28, no. 4, pp. 1643–1656, Aug. 2020.
[14] B. Cao et al., “Performance analysis and comparison of PoW, PoS
and DAG based blockchains,” Digit. Commun. Netw., vol. 6, no. 4,
pp. 480–485, Nov. 2020.
[15] Y. Le, X. Ling, J. Wang, and Z. Ding, “Prototype design and test of
blockchain radio access network,” in Proc. IEEE Int. Conf. Commun.
Workshops (ICC), Shanghai, China, May 2019, pp. 1–6.
[16] X. Ling, Y. Le, J. Wang, and Z. Ding, “Hash access: Trustworthy grant-
free IoT access enabled by blockchain radio access networks,” IEEE
Netw., vol. 34, no. 1, pp. 54–61, Jan./Feb. 2020.
[17] G. Berardinelli et al., “Reliability analysis of uplink grant-free trans-
mission over shared resources,” IEEE Access, vol. 6, pp. 23602–23611,
May 2018.
[18] Y. Wei, F. R. Yu, M. Song, and Z. Han, “Joint optimization of caching,
computing, and radio resources for fog-enabled IoT using natural actor–
critic deep reinforcement learning,” IEEE Internet Things J., vol. 6,
no. 2, pp. 2061–2073, Apr. 2019.
[19] B. Cao, M. Li, L. Zhang, Y. Li, and M. Peng, “How does CSMA/CA
affect the performance and security in wireless blockchain networks,”
IEEE Trans. Ind. Inf., vol. 16, no. 6, pp. 4270–4280, Jun. 2020.
[20] L. Zhang, H. Xu, O. Onireti, M. A. Imran, and B. Cao, “How much com-
munication resource is needed to run a wireless blockchain network?”
Jan. 2021. [Online]. Available: arXiv:2101.10852.
[21] Z. Li, W. Wang, and Q. Wu, “Blockchain-based dynamic spectrum shar-
ing for 5G and beyond wireless communications,” in Proc. Int. Conf.
Blockchain Trustworthy Syst., Nov. 2020, pp. 575–587.
[22] A. Laya, L. Alonso, and J. Alonso-Zarate, “Is the random access channel
of LTE and LTE-A suitable for M2M communications? A survey of
alternatives,” IEEE Commun. Surveys Tuts., vol. 16, no. 1, pp. 4–16,
1st Quart., 2014.
[23] N. Jiang, Y. Deng, A. Nallanathan, X. Kang, and T. Q. S. Quek,
“Analyzing random access collisions in massive IoT networks,” IEEE
Trans. Wireless Commun., vol. 17, no. 10, pp. 6853–6870, Oct. 2018.
[24] G. Hardin, “The tragedy of the commons,” Science, vol. 162, no. 3859,
pp. 1243–1248, Dec. 1968.
[25] J. Farhat, J. F. Grybosi, G. Brante, R. D. Souza, and J. L. Rebelatto,
“Non-orthogonal hash access for grant-free IoT blockchain radio access
networks,” IEEE Wireless Commun. Lett., vol. 10, no. 5, pp. 1066–1070,
May 2021.
[26] M. Osborne and A. Rubinstein, A Course in Game Theory. Cambridge,
MA, USA: MIT Press, 1994.
[27] G. Li, J. Yu, Y. Xing, and A. Hu, “Location-invariant physical
layer identification approach for WiFi devices,” IEEE Access, vol. 7,
pp. 106974–106986, Aug. 2019.
[28] J. Yu, A. Hu, G. Li, and L. Peng, “A robust RF fingerprinting
approach using multisampling convolutional neural network,” IEEE
Internet Things J., vol. 6, no. 4, pp. 6786–6799, Aug. 2019.
[29] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” Bitcoin,
Rep., Oct. 2008. [Online]. Available: https://bitcoin.org/bitcoin.pdf
[30] F. Tschorsch and B. Scheuermann, “Bitcoin and beyond: A technical sur-
vey on decentralized digital currencies,” IEEE Commun. Surveys Tuts.,
vol. 18, no. 3, pp. 2084–2123, 3rd Quart., 2016.
[31] W. Zhan and L. Dai, “Massive random access of machine-to-
machine communications in LTE networks: Modeling and through-
put optimization,” IEEE Trans. Wireless Commun., vol. 17, no. 4,
pp. 2771–2785, Apr. 2018.
[32] P. Osti, P. Lassila, S. Aalto, A. Larmo, and T. Tirronen, “Analysis
of PDCCH performance for M2M traffic in LTE,” IEEE Trans. Veh.
Technol., vol. 63, no. 9, pp. 4357–4371, Nov. 2014.
[33] E. Soltanmohammadi, K. Ghavami, and M. Naraghi-Pour, “A survey of
traffic issues in machine-to-machine communications over LTE,” IEEE
Internet Things J., vol. 3, no. 6, pp. 865–884, Dec. 2016.
[34] R. A. Horn and C. R. Johnson, Matrix Analysis. New York, NY, USA:
Cambridge Univ. Press, 1985.
[35] L. Kleinrock, Theory, Volume 1, Queueing Systems. New York, NY,
USA: Wiley-Intersci., 1975.
[36] B. Zhang, X. Ling, Y. Le, J. Wang, C. Cai, and Z. Tang, “Analysis
and evaluation of hash access for blockchain radio access networks,”
in Proc. 12th Int. Conf. Wireless Commun. Signal Process. (WCSP),
Nanjing, China, Oct. 2020, pp. 62–67.
[37] M. E. Rivero-Angeles, D. Lara-Rodriguez, and F. A. Cruz-Perez,
“Gaussian approximations for the probability mass function of the access
delay for different backoff policies in S-ALOHA,” IEEE Commun. Lett.,
vol. 10, no. 10, pp. 731–733, Oct. 2006.
Xintong Ling (Member, IEEE) received the B.E.
and Ph.D. degrees in electrical engineering from
Southeast University, Nanjing, China, in 2013 and
2018, respectively.
He is currently an Associate Professor with
the National Mobile Communications Research
Laboratory, Southeast University and also with the
Purple Mountain Laboratories, Nanjing. From 2016
to 2018, he was a visiting Ph.D. student with the
Department of Electrical and Computer Engineering,
University of California at Davis, Davis, CA, USA.
His current research interests focus on future-generation wireless communi-
cations and networks, including blockchain technologies, distributed systems,
machine learning, optical wireless communications, and signal processing.
Bowen Zhang received the B.E. and M.S. degrees
in electrical engineering from Southeast University,
Nanjing, China, in 2018 and 2021, respectively.
His current research interests include wireless
communications, Internet of Things, and blockchain.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TC.2021.3051681
8066 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 11, JUNE 1, 2022
Hui Xie received the B.E. degree in communication
engineering from North China Electric Power
University, Beijing, China, in 2020. He is currently
pursuing the M.S. degree with the School of
Information Science and Engineering, National
Mobile Communications Research Laboratory,
Southeast University, Nanjing, China.
His research interests include medium access
control protocol, Internet of Things, and blockchain.
Jiaheng Wang (Senior Member, IEEE) received the
B.E. and M.S. degrees from Southeast University,
Nanjing, China, in 2001 and 2006, respectively,
and the Ph.D. degree in electronic and computer
engineering from Hong Kong University of Science
and Technology, Hong Kong, in 2010.
He is currently a Full Professor with the National
Mobile Communications Research Laboratory,
Southeast University and also with the Purple
Mountain Laboratories. From 2010 to 2011, he was
with the Signal Processing Laboratory, KTH Royal
Institute of Technology, Stockholm, Sweden. He also held visiting positions
with the Friedrich Alexander University Erlangen–Nürnberg, Nürnberg,
Germany, and the University of Macau, Macau, China. He has published
more than 150 articles on international journals and conferences. His research
interests are mainly on communication systems and networks.
Dr. Wang was a recipient of the Humboldt Fellowship for Experienced
Researchers and the best paper awards of IEEE GLOBECOM 2019,
ADHOCNETS 2019, and WCSP 2014. From 2014 to 2018, he served as
an Associate Editor for the IEEE SIGNAL PROCESSING LETTERS. In 2018,
he served as a Senior Area Editor for the IEEE SIGNAL PROCESSING
LETTERS.
Zhi Ding (Fellow, IEEE) received the Ph.D. degree
in electrical engineering from Cornell University,
Ithaca, NY, USA, in 1990.
He is a Professor of Electrical and Computer
Engineering with the University of California at
Davis, Davis, CA, USA. From 1990 to 2000,
he was a Faculty Member of Auburn University,
Auburn, AL, USA, and later, University of Iowa,
Iowa City, IA, USA. He has held visiting posi-
tions with Australian National University, Canberra,
ACT, Australia; Hong Kong University of Science
and Technology, Hong Kong; NASA Lewis Research Center, Cleveland,
OH, USA; and USAF Wright Laboratory, Wright-Patterson AFB, OH, USA.
He has active collaboration with researchers from several countries, includ-
ing Australia, China, Japan, Canada, Taiwan, South Korea, Singapore, and
Hong Kong. He has coauthored the text: Modern Digital and Analog
Communication Systems (4th ed., Oxford University Press, 2009).
Prof. Ding received the 2012 IEEE Wireless Communication Recognition
Award from the IEEE Communications Society. He has been an active volun-
teer, serving on technical programs of several workshops and conferences. He
was an Associate Editor for IEEE TRANSACTIONS ON SIGNAL PROCESSING
from 1994 to 1997 and from 2001 to 2004, and IEEE SIGNAL PROCESSING
LETTERS from 2002 to 2005. He was a member of technical commit-
tee on Statistical Signal and Array Processing and member of Technical
Committee on Signal Processing for Communications from 1994 to 2003.
He was the Technical Program Chair of the 2006 IEEE Globecom. He is
also an IEEE Distinguished Lecturer of Circuits and Systems Society from
2004 to 2006 and Communications Society from 2008 to 2009. He served
as an IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS Steering
Committee Member from 2007 to 2009 and its Chair from 2009 to 2010.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:45 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice