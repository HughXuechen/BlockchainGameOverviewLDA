Blockchain-Aided Edge Computing Market: Smart Contract and Consensus Mechanisms
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
1
Blockchain-Aided Edge Computing Market:
Smart Contract and Consensus Mechanisms
Yu Du, Student Member, IEEE, Zhe Wang, Member, IEEE, Jun Li, Senior Member, IEEE,
Long Shi, Member, IEEE, Dushantha Nalin K. Jayakody, Senior Member, IEEE,
Quan Chen, Wen Chen, Senior Member, IEEE, and Zhu Han, Fellow, IEEE
Abstract—Building upon the prevailing concept of edge computing (EC), a distributed EC market requires decentralized and verified
transaction management to trade computing resources. Towards this goal, we study a blockchain-aided EC market wherein each data
service operator (DSO) rents a group of edge computing nodes (ECNs) and leases the ECNs to the user terminals (UTs) to provide
computation offloading services. A trustworthiness model is introduced to evaluate the quality of each network entity throughout the
transactions. We develop a two-level trading mechanism over smart contract to enable the automatic and efficient transactions among
the network entities and provide high quality services. First, we propose a smart contract based matching mechanism to establish the
renting association between the DSOs and ECNs with the aim of maximizing the social welfare. Second, we propose a social welfare
improved double auction (SWIDA) mechanism to build up the leasing association between the DSOs and UTs, and determine the
pricing of the winners. We show that the proposed double auction mechanism can achieve individual rationality, balanced budget,
truthfulness in expectation, and an improved social welfare than the benchmark mechanisms. Moreover, we put forth a trustworthiness
driven Proof-of-Stake (PoS) consensus mechanism to enable verified transaction and fair allocation of block generation reward.
Following the principle of PoS, we formulate the block generation as a coalitional game, wherein each stakeholder votes according to
its trustworthiness and coinage, and shares the reward among the coalition according to the Shapley values. The simulation results
show that the proposed PoS consensus mechanism can reduce the wealth inequality among the network entities compared with the
conventional consensus mechanisms.
Index Terms—Edge computing, blockchain, smart contract, matching, double auction, proof-of-stake, Shapley value.
�
1 INTRODUCTION
It is envisioned that tens of billions of smart devices
will emerge in the next few years, creating a host of delay-
sensitive services such as virtual/augmented reality and au-
tonomous driving [1]. In particular, if massive computation-
intensive tasks are processed in user terminals (UTs), it is
bound to accelerate energy consumption and shorten their
service lifetime [2]. The recent advances in edge computing
(EC) tackles these challenges by allowing the UTs to offload
the computational tasks to the edge computing nodes (EC-
Ns) deployed in close proximity [3], [4].
Building upon the EC network, a typical EC market
• Y. Du, J. Li, and L. Shi are with the School of Electronic and Optical Engi-
neering, Nanjing University of Science and Technology, Nanjing 210094,
China. E-mail: {yudu, and jun.li}@njust.edu.cn, slong1007@gmail.com.
• Z. Wang is with the School of Computer Science and Engineering,
Nanjing University of Science and Technology, Nanjing 210094, China.
E-mail: zwang@njust.edu.cn.
• D. N. K. Jayakody is with the Autónoma Techlab da, Centro de In-
vestigação em Tecnologias, Universidade Autónoma de lisboa, 1169-023
lisbon Portugal, and also with the School of Computer Science and
Robotics, Tomsk Polytechnic University, Tomsk 634050, Russia. E-mail:
nalin@tpu.ru.
• Q. Chen is with the Department of Computer Science and Engineering,
Shanghai Jiao Tong University, Shanghai 200240, China. E-mail: chen-
quan@cs.sjtu.edu.cn.
• W. Chen is with the Department of Electronic Engineering, Shanghai Jiao
Tong University, Shanghai 200240, China. E-mail: wenchen@sjtu.edu.cn.
• Z. Han is with the University of Houston, Houston, TX 77004, and also
with the Department of Computer Science and Engineering, Kyung Hee
University, Seoul 446-701, South Korea. E-mail: zhan2@uh.edu.
Manuscript received XXX, XXX; revised XXX XXX, XXX; accepted XXX
XXX, XXX.(Corresponding authors: Zhe Wang, Jun Li.)
provides a trading platform on which the ECNs sell their
resources to the UTs [5]–[7] where the UTs rent the comput-
ing resources of the ECNs for computational task offloading
[5], [6] or content storage [7]. Most existing trading mech-
anisms for EC market require a central authority to enable
the transactions and resource allocation across the network
devices. However, the central authority may not be trusted
and is vulnerable to the single point of failure. To avoid the
intervention of central authority, blockchain is proposed to
manage the transactions in a distributed and tamper-proof
ledger.
Currently, the research about blockchain and EC market
can be classified into two categories: EC market aided
blockchain and blockchain aided EC market. First, for EC
market aided blockchain [8]–[13], the resource-constrained
UTs rent the computing resources from the ECNs to improve
the mining efficiency for Proof of Work (PoW) in blockchain.
Second, for blockchain aided EC market, the blockchain can
verify and recall the EC market transactions that are auto-
matically executed by smart contract [14]. Specically, smart
contracts are lines of code that are stored in the blockchain
and are automatically executed when predetermined con-
ditions in the contract are met. Ref. [15] designed a smart
contract based double auction mechanism to maximize the
total amount of offloading tasks between the UTs and ECNs.
In [16], the authors adopt blockchain based smart contracts
to construct an autonomous content caching market that
helps the UTs download content from the ECNs. In [17],
a resource pricing and trading scheme is proposed based
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
2
on Stackelberg dynamic game to allocate edge computing
resources between ECNs and drone UTs, where blockchain
technology is applied to record and protect the security and
privacy of the trading process. However, in practice, as the
resources of the distributed ECNs are usually invisible to
the UTs, it is difficult for the UTs to directly purchase the
services from the ECNs. The data service provider (DSO),
acting as an agent, can coordinate the transactions between
UTs and ECNs. The most recent work in [18] proposes a
blockchain-aided two-level Stackelberg game-based com-
puting resource trading mechanism, where the DSO first
rents the computing resources from the ECNs and then leas-
es the resources to the UTs. However, the method proposed
in [18] is only applicable to the blockchain aided EC trading
with a single DSO. For EC market with multiple DSOs, the
key challenge is to handle the competition among multiple
DSOs when establishing the trading association among D-
SOs, ECNs, and UTs in such a blockchain aided EC market.
This motivates us to propose a two-level trading association
mechanism (i.e., matching based ECNs-DSOs association,
and double auction based DSOs-UTs association) in the EC
market that aims to achieve system efficiency (i.e., social
welfare maximization) while ensuring the truthfulness of
the trustless devices.
In addition, a consensus mechanism is a fault-tolerant
mechanism to achieve a common agreement on the valid
transactions ruled by smart contracts [19]. Proof of Work
(PoW) is one of the most prevailing consensus mechanism in
many blockchain networks [20]. With PoW, all entities com-
pete to solve an mathematical puzzle to generate the blocks
and earn the rewards. Ref. [21] applied the PoW mechanism
to manage the data and energy in the blockchain-aided
electric vehicle network. In [22], the authors applied PoW
in the industrial IoT network to manage the credit value
of each entity. However, the process of PoW is extremely
computation-consuming, which is not applicable in the EC
market. Proof of stake (PoS), has been proposed to address
the limitation of PoW. Differing from PoW, the probabil-
ity that an entity obtains the right to publish a block is
determined by its stake, i.e., the coinage [23], [24]. More
specifically, each entity earns a higher chance to publish a
new block if it owns more coinage. Thus, PoS is beneficial
for wealthy entities and may enlarge the wealth inequality
among the entities. In addition, these conventional mecha-
nisms incentivize the entities to aggregate either computing
power or stake, but ignore service quality. This issue moti-
vates us to propose a PoS design that achieves better fairness
and service quality for blockchain-aided EC market.
In this work, we propose several mechanisms in a
blockchain-aided EC market aiming to enable efficient and
verified transactions among the network entities. The main
contributions are summarized as follows.
• Blockchain-aided EC market: We study a blockchain-
aided EC market consisting of multiple DSOs, ECNs
and UTs. As an agent, each DSO first associates with
a group of ECNs, and then leases these ECNs to the
UTs that require computation offloading services. A
trustworthiness model is introduced to evaluate the
quality of each entity throughout the transactions.
Without a central authority, we adopt blockchain to
enable automatic, efficient and verified transactions
in a decentralized EC market. More specifically, we
propose the smart contract based trading mecha-
nisms to enhance the system efficiency of the au-
tomatic transactions, and propose a PoS consensus
mechanism to ensure fair and verified transactions.
• Smart contract based trading mechanisms for automat-
ic and efficient transaction: We design the trading
mechanisms of smart contract over the blockchain to
automatically activate the transactions with the aim
of maximizing the social welfare in the EC market.
First, we design a smart-contract based matching
mechanism to establish the one-to-many renting as-
sociation between the DSOs and ECNs with the
goal of maximizing the social welfare. Second, we
propose a social welfare improved double auction
(SWIDA) mechanism to establish the leasing associ-
ation between the DSOs and UTs, and determine the
pricing of the winners. We prove that the proposed
SWIDA mechanism is individually rational and bud-
get balanced. Moreover, we prove that SWIDA is
truthful for the DSOs, and show that it is truthful
in expectation for the UTs. Furthermore, SWIDA
can improve the social welfare compared with the
traditional double auction mechanism.
• Trustworthiness-driven PoS mechanism for transaction
verification and fair reward allocation: We propose
a trustworthiness-driven PoS mechanism to enable
verified transactions and fair reward allocation in the
blockchain-aided EC market. Following the princi-
ple of PoS mechanism, we first formulate the block
generation as a coalitional game wherein each stake-
holder votes according to its trustworthiness and
coinage, and then allocate the reward among the
coalition according to the Shapley values. Simulation
results show that the proposed PoS mechanism can
reduce wealth inequality among the entities than the
conventional consensus mechanisms.
The rest of this paper is organized as follows. Sec-
tion 2 describes the EC market model. In Sections 3 and
4, we propose two smart contract based mechanisms, and
a trustworthiness-driven PoS mechanism, respectively. Sec-
tion 5 shows the numerical results. Section 6 concludes this
paper. We summarize the main notations in Table 1.
2 SYSTEM MODEL
2.1 Distributed EC Market
Consider a typical EC market consisting of G DSOs, M EC-
Ns and N UTs as shown in Fig. 1. Let U = {U1, U2, · · · , UN}
denote the set of UTs with Un being the n-th UT, E =
{E1, E2, · · · , EM} denote the set of ECNs with Em being
the m-th ECN, and D = {D1, D2, · · · , DG} denote the set
of DSOs with Dg being the g-th DSO.
With limited computing capability, each UT executes the
delay-tolerant tasks locally, and offloads the delay-sensitive
tasks to a proper ECN that owns more sufficient computing
resources. Meanwhile, the ECNs can make profits by leasing
their computing resources to the UTs. The DSOs, acting
as agents, can coordinate the transactions between UTs
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
3
TABLE 1: Key Notations
Notation Description
Un the n-th UT in UT set U
Dg the g-th DSO in DSO set D
Em the m-th ECN in ECN set E
ξi the trustworthiness of entity i
Ψg,m the estimated utility of DSO Dg
Rg,m the rental that Dg promises to pay if the
service of Em is sold
γg,m the estimated utility of ECN Em
Og the maximum number of ECNs that
DSO Dg can rent
Ag,m Dg’s ask on behalf of its rented ECN Em
V n
m Un’s true valuation on ECN Em
Bn
m Un’s bid for ECN Em
wn
m the utility of Un by renting ECN Em from
the DSO
w̄n
m the estimated utility of Un if it rents
ECN Em from the DSO
πg,m the utility of DSO Dg by leasing ECN Em
to the UT
Û the winning UT set
Ê the winning ECN set
σ(·) the association function that maps the UT
to the ECN
Pn
m the payment that the UT Un is charged
for renting ECN Em
Ig,m the reward that Dg receives for leasing
ECN Em.
Aj the median ask
Bı the threshold bid
B̄m the original bid list of Em for payment
determination
Bm the bid list of Em for association
determination
Cj the coinage of entity j
Xj the stake of entity j
and ECNs. As the number of ECNs and their computing
resources are invisible to the UTs, the UTs can only purchase
the computing services from the DSOs. In this context, the
transactions in the EC market operate over two phases:
• ECN association phase: Each DSO builds the renting
association with a group of ECNs, i.e., this DSO
becomes an agent of these ECNs.
• ECN leasing phase: Each DSO sublets the ECNs to
the UTs, and pays the rental to the ECN once it has
sold this ECN’s computation offloading service to a
UT. We assume that each ECN can serve at most one
UT, and each UT can be served by at most one ECN
and does not move out of the coverage area of its
associated ECN during the service time.
2.2 Trustworthiness Model
To build a trusted market, we employ a trustworthiness
model to assess the entity. Due to the fact that the trust-
worthiness is more about whether the entity can fullfill the
Fig. 1. The diagram of a blockchain-aided EC market.
Fig. 2. Illustration of social relationships of entities in the
distributed EC market.
service task/payment as it promises, which is not directly
related to the energy and computing power availability
of this entity, we can regard any UT, DSO, or ECN as
“entity i”. We define the entity i’s transaction reputation
Rep(eik) ∈ [0, 1] as the normalized service quality of this en-
tity in the k-th transaction evaluated by its trading partner.
For example, the transaction reputation value of a service
seller is the normalized service quality (e.g., timeliness of
computing services) provided by this seller, and the transac-
tion reputation value of the buyer is the normalized service
quality (e.g., timeless of payment) of this buyer evaluated
by its seller. After an ECN owned by a DSO computes
a UT’s task, this UT assesses the DSO’s service by the
transaction reputation value, and the DSO assesses this ECN
with the same transaction reputation value. Meanwhile, this
DSO also assesses the transaction reputation of the UT.
Since different entity i may experience different number of
transaction Ki, we adopt the average transaction reputation
ϑi to reflect the long-term service quality of entity i, i.e.,
ϑi =
1
Ki
∑Ki
k=1 Rep(e
i
k). Note that once the entity i’s average
transaction reputation is low (e.g., below a threshold), it will
also be added to the blacklist and prohibited from trading
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
4
with other entities.
From [25], the trustworthiness of entity i is expressed as
ξi = μϑi + (1− μ)βi, (1)
where ϑi is the average transaction reputation, βi is the
betweenness, and μ ∈ [0, 1] is a weight. As shown in Fig. 2,
the pairs of entities are socially related if any transaction
occurs between them. The betweenness of an entity reflects
the proportion of the shortest path between all pairs of
nodes passing through this entity. A large value of between-
ness means that the entity is well-known as a bridge to
interconnect other entities [26]. The betweenness of entity
i is defined as
βi =
∑Q
j=1
∑
j<b
yj,b(i)
Yj,b
, (2)
where Q = N + M + G is the total number of all entities,
Yj,b is the number of shortest links between entities j
and b, and yj,b(i) is the number of shortest links between
entities j and b that pass through entity i. As the weighted
sum of the average transaction reputation and betweenness,
the trustworthiness can be intuitively regarded as a “good
fame”, where the weight μ balances between “good” (i.e.,
the quality of transaction offered by this entity) and “fame”
(i.e., the quantity of connections between this entity and
other peers).
Fig. 3. Data structure of a single transaction.
2.3 Blockchain-Aided EC Market
In an EC market, a central authority for transaction record-
ing may not be trusted and is vulnerable to the single
point of failure. In this work, we employ the blockchain
technology to manage the transactions (including both the
ECN renting and leasing) in the distributed EC market. We
consider each entity (i.e., a DSO, an ECN, or a UT) can be
registered as both a client of the EC market transactions
and a validator for these transactions on the blockchain.
Note that the validation process is via voting-based PoS
consensus mechanism, which consumes much less compu-
tation/energy on the energy-constrained devices compared
with the traditional PoW consensus mechanism. As shown
in Fig. 3, a transaction on the blockchain [16] can be struc-
tured as:
• Seller’s address;
• Buyer’s address;
• Payload data: payment value and the auxiliary infor-
mation (e.g., computing frequency of the ECN, trans-
action reputations of seller and buyer, betweenness,
and trustworthiness of the entity, payment value,
transaction fee);
• Buyer’s signature: the publicly verifiable digital sig-
nature of the buyer.
After each transaction, the information of the ECNs, DSOs,
and UTs (e.g., computing frequency, transaction reputation,
betweenness, and trustworthiness) will be stored on the
blockchain in form of the payload data of this transaction.
As shown in Fig. 1, we first design the trading mechanisms
of the smart contract over the blockchain to automatically
activate the transactions with the aim of maximizing the
social welfare in the EC market (Section 3). Moreover, we
develop the consensus mechanism to incentivize the entities
towards fair and verified transactions (Section 4).
3 SMART CONTRACT BASED TRADING MECHA-
NISMS
In this section, we design two smart contract enabled trad-
ing mechanisms for the ECN renting and leasing phases,
respectively.
3.1 Matching Mechanism for ECN Association Phase
In the ECN association phase, each DSO targets at renting a
group of ECNs that provide the highest estimated utilities,
and the ECN aims to be rented by the DSO that provides
the highest estimated utility.
Each DSO has different preferences over the ECNs de-
pending on the ECN’s trustworthiness and computing capa-
bilities. Let τg,m denote the preference of DSO Dg for ECN
Em, i.e.,
τg,m = αgξm + (1− αg)fm, (3)
where ξm is the trustworthiness in (1), fm is the computing
frequency of ECN Em, and αg ∈ [0, 1] is the weighting
factor. We define the estimated utility of DSO Dg as
Ψg,m = Λg(τg,m)−Rg,m, (4)
where Λg(·) is estimated income function that positively
correlates with τg,m and varies across DSOs. Moreover, Rg,m
is the rental that Dg promises to pay if the service of Em is
sold to a UT later. We define it as
Rg,m = �g(τg,m), (5)
where �g(·) is the rental function of Dg . We further define
the estimated utility of ECN Em, if it is rented by DSO Dg
and leased to a UT by Dg , as
γg,m = Rg,m − ζκ(fm)2, (6)
where ζ is the reference cost caused per CPU cycle, and
κ(fm)2 is the energy consumed by a CPU cycle [27].
To build the renting association between the DSOs and
UTs, we design a smart contract based matching mechanism
aiming at maximizing the social welfare (i.e., sum of estimat-
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
5
ed utilities of all DSOs and ECNs), where the social welfare
for the ECN association phase is given by
�wel =
∑G
g=1
∑M
m=1
xg,m(Ψg,m + γg,m)
=
∑G
g=1
∑M
m=1
xg,m(Λg(τg,m)−ζκ(fm)2). (7)
Let xg,m ∈ {0, 1} denote the association between DSO
Dg and ECN Em. Concretely, xg,m = 1 if Em is rented.
Otherwise, xg,m = 0. The association problem for the ECN
association phase is given by
max
xg,m
�wel (8a)
s.t. xg,m ∈ {0, 1} (8b)∑M
m=1
xg,m ≤ Og, g = 1, · · ·, G, (8c)
∑G
g=1
xg,m ≤ 1, m = 1, · · ·,M, (8d)
where (8c) indicates that DSO Dg can rent at most Og
number of ECNs, and (8d) tells that an ECN can only be
rented by at most one DSO.
The smart contract usually provides many functions, and
the entity can invoke the functions by sending messages
to the smart contract. To establish the association between
DSOs and ECNs, we design three main functions of smart
contract in the association phase as follows:
Algorithm 1 Smart Contract Based Matching Mechanism.
1: Each ECN Em calls the “upload” function and sends fm
and γg,m to smart contract
2: Each DSO Dg in D calls the ”upload” function and re-
ports its estimated rental and estimated utility function
pairs for ECN Em, i.e., (Rg,m,Ψg,m), and its maximum
allowable number of matched ECNs Og to smart con-
tract
3: Smart contract verifies fm and calculates ξm, and then
executes the matching function:
4: Initialize O
(t)
g = Og, ∀g ∈ {1, 2, ..., G} and D(t) = D
5: while either O
(t)
g �= 0, ∀g ∈ {1, 2, ..., G} or existing
ECNs are unmatched do
6: Calculate each unmatched ECN’s utility from each
DSO in D(t) according to γg,m and identifies DSO Dg′
that provides the highest utility
7: Identify the ECNs that obtain the highest utility from
Dg , ∀Dg ∈ D(t), and calculate the number of these
ECNs l(t)g
8: for ∀Dg ∈ D(t) do
9: if l
(t)
g > O
(t)
g then
10: Match DSO Dg with the top O
(t)
g ECNs that
provide the largest utilities to Dg
11: Update O
(t+1)
g = 0, D(t+1) = D(t) \ {Dg}
12: else
13: Match DSO Dg with all l(t)g ECNs
14: Update O
(t+1)
g = O
(t)
g − l
(t)
g
15: end if
16: end for
17: Go to step 5
18: end while
1) An “upload” function that enables ECN and DSO to
upload messages to the smart contract.
2) A “matching” function that enables each DSO to rent a
group of ECNs.
As shown in Algorithm 1, we propose a smart contract
based matching mechanism to solve the association problem
in (8).
First, each ECN Em calls the “upload” function by
sending the computing frequency fm and estimated utility
function (γg,m in (6)) to smart contract. Second, each DSO
calls the “upload” function by reporting the estimated rental
function (Rg,m in (5)) and the estimated utility function
(Ψg,m in (4)) to smart contract (lines 1-2). Furthermore,
smart contract verifies computing frequency1 fm and cal-
culates trustworthiness ξm of ECN Em according to social
network (e.g., in Fig. 2) and Eqns. (1) and (2), and then
calls the “matching” function to establish the association
between the ECNs and DSOs (lines 3 to 17). In round
t, smart contract estimates each unmatched ECN’s utility
obtained by associating with each DSO in the set of D(t)
according to γg,m, and then identifies the DSO that provides
the highest utility (e.g., Dg′ ). Since the number of ECNs l(t)g
that obtain the highest utility from a DSO Dg may exceed its
association constraint O(t)
g , we discuss the matching process
in the following two cases. If l(t)g > O
(t)
g (lines 9−11), smart
contract matches Dg with the top O
(t)
g ECNs that provide
the highest estimated utilities for Dg from above l
(t)
g ECNs.
If l
(t)
g ≤ O
(t)
g (lines 12 to 15), smart contract matches Dg
with all l(t)g ECNs and updates O
(t+1)
g = O
(t)
g − l
(t)
g . Smart
contract terminates if either O
(t)
g = 0, ∀g ∈ {1, 2, ..., G} or
all ECNs are matched.
Based on Algorithm 1, we have established the one-
to-many associations between the DSOs and ECNs. If a
DSO successfully sells the computational resource of its
associated ECN to a UT in the ECN leasing phase later, it
will pay this ECN with the amount of money that equals to
its rental Rg,m. Otherwise, the DSO pays zero rental to this
ECN and there is no need for the ECN to serve for UTs.
3.2 Double Auction Mechanism for ECN Leasing Phase
In this subsection, we propose a double auction mechanism
for the ECN leasing phase. First, we design two main
functions of the smart contract in this phase as follows:
1) An “upload” function that enables DSOs and UTs to
upload messages to smart contract.
2) A “double auction” function that enables the UTs to
purchase the ECNs’ computing services from the DSOs
for these ECNs.
3.2.1 Smart Contract Based Double Auction
We now introduce the smart contract based double auction
design in details. As shown in Fig. 4, the DSOs and UTs
are sellers and buyers, respectively, and the smart contract
can work as an auctioneer to establish the automatic trans-
actions between the DSOs and UTs via the proposed double
auction mechanism.
1. If the computing frequency fm reported by ECN Em is incon-
sistent with that stored in past transactions, Em will be added to the
blacklist.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
6
Fig. 4. Double auction mechanism of smart contract.
First, as shown in Fig. 4(a), each DSO Dg calls the
“upload” function by sending ask Ag,m and computing
frequency fm of each of its associated ECN Em (obtained
from the ECN association phase) to the smart contract. Here,
Ag,m is the ask submitted by DSO Dg on behalf of its
associated ECN Em, which can be different from its rental
Rg,m for Em. The ask matrix consisting of the ask vectors of
all DSOs is denoted by A.
Second, smart contract verifies computing frequency fm
and calculates trustworthiness ξm of each ECN Em from the
blockchain, and broadcasts them to the UTs.
Third, with the knowledge of fm and ξm, each UT Un
calculates its true valuation V n
m for each ECN Em, i.e.,
V n
m = (1− χn)
{
δn
(
1− fn
fm
)}
+ χnξm, (9)
where fn is the computing frequency of Un, δn is the
reference profit achieved by the computation speedup of
a CPU cycle, δn(1 − fn/fm) is the income of procedural
acceleration, and χn ∈ [0, 1] is a weighting factor. Then, each
Un selects the ECNs that have higher computing frequencies
than itself, i.e., ECN Em with fm > fn, and then calls
the “upload” function by sending its bid Bn
m for each of
its intended ECN Em to the smart contract. Note that Bn
m
can be different from its true valuation V n
m. We will discuss
whether or not the DSOs and UTs would truthfully report
their asks (i.e., Ag,m = Rg,m) and bids (i.e., Bn
m = V n
m)
to the smart contract under the proposed double auction
mechanism in Section 3.2.4. The bid matrix consisting of the
bids of all UTs is denoted by B.
Last, given A and B, the smart contract calls the ”double
auction” function to decide winning UT set Û ⊆ U , winning
ECN set Ê ⊆ E , the association between Û and Ê , i.e.,
σ(Un ∈ Û) = Em ∈ Ê , payment Pn
m that winning UT
Un ∈ Û is charged for renting ECN Em, and reward Ig,m
that DSO Dg receives for leasing ECN Em ∈ Ê . Consider
DSO Dg finally sells the computing resources of ECN Em to
a proper UT Un as shown in Fig. 4(b). We have the following
transactions: 1) UT Un pays Pn
m to the smart contract; 2) the
smart contract pays the reward Ig,m to DSO Dg ; 3) DSO
pays rental that equals to its estimated rental Rg,m to ECN
Em. Furthermore, the utility of UT Un is given by
wn
m =
{
V n
m − Pn
m, if Un ∈ Û ,
0, otherwise .
(10)
The utility of DSO Dg by leasing ECN Em is given by
πg,m =
{
Ig,m −Rg,m, if Em ∈ Ê ,
0, otherwise .
(11)
3.2.2 Desired Properties for Auction Mechanism
A feasible auction mechanism should first satisfy the follow-
ing desirable properties.
1) Balanced Budget: A double auction is budget balanced
if the smart contract (auctioneer) does not lose money in
the transaction. In other words, the sum rewards paid
to all DSOs should be no more than the sum payment
from all UTs, i.e.,
∑
Un∈ Û
Pn
m− ∑
Em∈ Ê
Ig,m ≥ 0.
2) Truthfulness: A double auction mechanism is strong-
ly truthful when the UTs or DSOs cannot improve their
utilities by untruthfully submitting their bids or asks
to the smart contract [28]. Specifically, in our auction
model, UT Un’s utility wn
m is maximized when its bid
for ECN Em equals to its true valuation for this ECN,
i.e., Bn
m = V n
m. Moreover, DSO Dg’s utility πg,m is
maximized when its reported ask on behalf of ECN Em
in the ECN leasing phase equals to the rental paid to
Em in the ECN association phase, i.e., Ag,m = Rg,m.
Furthermore, a weaker truthfulness is the truthfulness
in expectation, where the UTs or DSOs cannot improve
their expected utilities via untruthful bidding [29].
3) System Efficiency: The system efficiency is measured
in terms of social welfare in our double auction, which
is defined as the sum utility of all DSOs and UTs, i.e.,
Πauc =
∑
Un∈ Û
wn
m +
∑
Em∈ Ê
πg,m. (12)
4) Individual Rationality: We assume all the buyers and
sellers are rational, i.e., no one should lose from join-
ing the auction. Particularly, the payment Pn
m of any
winning UT Un should be no more than its bid Bn
m,
i.e., Pn
m ≤ Bn
m. Moreover, for any DSO Dg that owns
a winning ECN, its received reward Ig,m should be no
less than its ask Ag,m, i.e., Ig,m ≥ Ag,m.
However, the well-known result in [30] reveals that
it is next to impossible to design a strongly truthful,
efficient, and budget-balanced double auction, even putting
individual rationality aside. For example, McAfee double
auction in [31] is individually rational and truthful, but
neither budget-balanced nor efficient. Moreover, VCG
double auction in [32] is individually rational, truthful,
and efficient, but not budget-balanced. However, for the
blockchain system, smart contract cannot insert money
into the system to meet the budget-balanced requirement.
To solve this problem, the incentive-compatible auction
mechanism (ICAM) in [33] is individually rational, budget-
balanced, and strongly truthful, but suffers from a relatively
low social welfare. To further improve the system efficiency,
we propose a social welfare improved double auction
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
7
Algorithm 2 Determination of Candidates.
1: Input: A, B
2: Output: A,B
3: A ← ∅, B ← ∅
4: Sort all the asks from matrix A in ascending order, i.e.,
A = {A1, A2, ..., Aλ}, A1 ≤ A2 ≤ ... ≤ Aλ, where λ is total
number asks
5: Sort all the bids from matrix B in descending order, i.e.,
B = {B1, B2, ..., Bη}, B1 ≥ B2 ≥ ... ≥ Bη , where η is total
number of all bids
6: Find the median of A and define it as Aj, where j =
⌊
λ+1
2
⌋
7: A ← {A1, A2, ..., Aj}
8: Find the minimum bid that is no less than Aj and define it as the
threshold bid Bı
9: B ← {B1, B2, ..., Bı}
(SWIDA) mechanism that achieves individual rationality,
balanced budget, truthfulness and a higher social welfare
than the traditional ICAM. The discussions and proofs will
be detailed in Section 3.2.4.
3.2.3 Proposed SWIDA Mechanism
Next, we introduce the main procedures of the proposed
SWIDA mechanism, which includes two stages, i.e., deter-
mination of candidates (Algorithm 2), determination and
pricing of winners (Algorithm 3).
Determination of Candidates: In this stage, the smart
contract shortlists the candidates of ECNs and UTs. To
reduce the computational complexity, we first remove the
ECNs with high asks and the UTs with low bids from the
candidate set via Breakeven mechanism in Algorithm 2.
First, we sort all the asks from A in ascending order to
obtain a new set A. Then, we sort all the bids from B in
descending order and get a new set B. We find the median of
A and denote the median ask by Aj, where j =
⌊
λ+1
2
⌋
. Then,
we remove the reported asks that are higher than Aj from
set A, and delete the bids that are less than Aj from set B. We
denote the smallest bid that is no less than median ask Aj
as threshold bid Bı. The UTs whose bids are in the updated
set of B and ECNs whose asks are in the updated set of A
become the candidate buyers and sellers, respectively.
Determination and Pricing of Winners: In this seal-
bid double auction, it is possible that one UT bids for mul-
tiple ECNs and one ECN receives bids from multiple UTs.
We adopt Algorithm 3 to determine the one-to-one pairing
between the UT and the pricing rules for the winners, which
consists of two steps as follows.
Step 1: Winning UT determination (lines 4-10). In Al-
gorithm 2, we have obtained the ECN candidates’ ask set
A and UT candidates’ bid set B. For each ECN Em whose
ask is in set A, we first select its received bids from set
B, and then construct a set Bm by sorting these bids in
descending order. In the case of a tie (i.e., more than one
bid has the same value), we arrange these bids with the
equal value in a random order. We denote the highest bid in
set Bm by B
(1)
m and regard the corresponding UT U
(1)
m as the
potential winning UT for ECN Em. We then add this bid to
the highest bid set B(1).
Step 2: Winning ECN determination and pricing (lines
11-36). It is possible that one potential winning UT is the
Algorithm 3 Determination and Pricing of Winners.
1: Input: B,A
2: Output: Û , Ê , σ
3: Û ← ∅, Ê ← ∅, B̄ ← B
Winning UT Determination:
4: for Em with its ask in A do
5: Construct a set consisting of the bids for Em in B̄
B̄m = {B̄(q)
m : ∀Ū (q)
m whose bid for Em in B̄}, where B̄
(q)
m
is the q-th highest bid for Em submitted by Ū
(q)
m in B̄m.
6: end for
7: for Em with its ask in A do
8: Construct a set consisting of the bids for Em in B
Bm = {B(q)
m : ∀U (q)
m whose bid for Em in B}, where B
(q)
m
is the q-th highest bid for Em submitted by U
(q)
m in Bm.
9: end for
10: Construct highest bid set B(1) = {B(1)
m : ∀Em with its ask in
A}
Winning ECN Determination and Pricing:
11: if B(1) �= ∅ then
12: Randomly select a bid B
(1)
m ∈ B(1)
13: Construct a set consisting of all U (1)
m ’s bids that are in B(1)
{B(1)
m : m ∈ {1, 2, ..., H}}
14: Find B
(1)
m ’s rank r in B̄m
15: for m = 1 to H do
16: if r =| B̄m | then
17: P
(1)
m = Bı
18: else
19: P
(1)
m = B̄
(r+1)
m
20: end if
21: w̄
(1)
m = B
(1)
m − P
(1)
m
22: end for
23: m′ = argmax
m∈{1,··· ,H}
w̄
(1)
m
24: σ(U
(1)
m ) = Em′
25: Û ← Û ⋃
U
(1)
m
26: Ê ← Ê ⋃
Em′
27: Ig,m′ = Aj
28: DSO Dg pays rental Rg,m to its associated ECN Em′
29: Remove all bids submitted by U
(1)
m from B
30: Remove the ask regarding ECN Em′ from A
31: Go to step 7
32: else
33: Go to step 36
34: end if
35: return (Û , Ê , σ)
highest bidder for multiple ECNs, but it can only choose
one ECN to associate with. A simple and efficient solution
is to associate this UT with the ECN that provides the
highest utility. In order to prevent untruthful bidding, we
start with a randomly ordered list of the potential winning
UTs. More specifically, we randomly select a bid from the
highest bid set B(1), e.g., we choose the highest bid B
(1)
m
for ECN Em submitted by UT U
(1)
m (line 12). Suppose that
UT U
(1)
m is the highest bidder for H ECNs, where the integer
H ∈ [1, |B(1)|]. We add UT U
(1)
m ’s bids for its intended ECNs
into a new set {B(1)
m : m ∈ {1, 2, ..., H}} (line 13). We then
evaluate the estimated utility w̄
(1)
m that UT U
(1)
m obtains by
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
8
associating with each of these ECNs, which is expressed as
w̄
(1)
m = B
(1)
m − P
(1)
m (line 21), where P
(1)
m is the payment
from UT U
(1)
m to the smart contract if it associates with Em.
Note that, since the smart contract does not know the true
valuation of the UTs, the estimated utility for each UT is
based on its bid instead of the true valuation.
To further enhance the truthfulness, we construct an-
other set B̄m with the same initial components as Bm for
price determination. Note that we use set Bm to determine
the winning UT for ECN Em, and adopt another set B̄m
to decide the payment for the UTs, respectively. We keep
updating Bm by eliminating the UTs that have been suc-
cessfully associated with other ECNs in each iteration, while
adopting the same B̄m throughout the whole game. As a
result, the highest bid (i.e., B(1)
m ) in Bm may not also be the
highest in B̄m at an arbitrary iteration. We now assume B
(1)
m
is the r-th highest bid in set B̄m, where r = 1 or r = |B̄m|
means the B
(1)
m is the highest or lowest bid, respectively.
We will determine its payment P
(1)
m in the following two
cases. If r = |B̄m|, UT U
(1)
m pays the threshold bid of Bı.
Otherwise, it pays the highest bid that is no greater than its
own bid in B̄m, i.e., P (1)
m = B̄
(r+1)
m (lines 16-20).
Finally, UT U
(1)
m associates with ECN Em′ that pro-
vides the highest estimated utility among all ECNs, where
the association between U
(1)
m and Em′ is represented by
σ(U
(1)
m ) = Em′ (line 23). Once the association is established,
UT U
(1)
m pays P
(1)
m′ to the smart contract. To guarantee the
strongly truthfulness of the DSO, the DSO that owns ECN
Em′ is rewarded by median ask Aj, i.e., Ig,m′ = Aj (line 27).
In the meanwhile, the DSO pays the rental to its associated
ECN Em′ (line 28). Finally, this UT and its associated ECN
are added to the winning UT set Û and winning ECN set
Ê , respectively (lines 25-26). Moreover, their corresponding
bids and asks will be removed from the bid set B and ask
set A to avoid double association (lines 29-30).
By iteratively operating steps 1 and 2 until B(1) = ∅, the
smart contract finally establishes the one-to-one association
between the UTs and ECNs.
3.2.4 Proof of Desirable Properties
In the following, we prove several key properties for the
proposed SWIDA mechanism.
Theorem 1. SWIDA is individually rational.
Proof: For any winning UT Un, we can deduce that
its payment Pn
m ∈ [Bı, B
n
m] according to lines 16-20 of
Algorithm 3. Since its payment Pn
m is less than its bid Bn
m,
we have proved that SWIDA is individual rational for any
winning UT Un.
For each DSO Dg that owns a winning ECN, its received
reward from the smart contract for leasing this ECN to the
corresponding UT equals the median ask Aj, which is no
less than their own asks, i.e., Ig,m = Aj ≥ Ag,m according
to Algorithms 2 and 3. As a result, SWIDA is individually
rational for any DSO that owns the winning ECNs.
Moreover, for the UT (or DSO) that does not win the auc-
tion, its payment (or reward) and utility are zero. Therefore,
it also does not lose money by participating in the auction.
Theorem 2. SWIDA is budget-balanced.
Proof: According to Algorithm 2, we know that the
threshold bid Bı is no less than the medium ask Aj. Based
on the proof of Theorem 1, we can deduce that Pn
m ≥ Bı ≥
Aj = Ig,m holds for each association pair of UT Un and ECN
Em. We therefore can further deduce that the total reward
paid to all DSOs is no more than the total payment received
from all UTs, i.e., ∑
Un∈ Û
Pn
m−
∑
Em∈ Ê
Ig,m ≥ 0. (13)
Theorem 3. SWIDA is truthful for DSOs.
Proof: We will prove that each DSO Dg achieves the
maximum utility πg,m when it truthfully reports the ask of
its rented ECN Em to the smart contract, i.e., Ag,m = Rg,m
(Dg’s ask on behalf of Em in the ECN leasing phase equals
the estimated rental it promised to pay to Em in the ECN
association phase). To prove this property, we first define Eo
as the set of all ECNs that have been associated with the
DSOs in the ECN association phase. Assuming all the DSOs
truthfully report the asks of their rented ECNs, we divide
Eo into two subsets: Ed and Eo \Ed, where Ed is the ECN
candidate set obtained via Algorithm 2, and Eo \Ed is the
set of the remaining ECNs. In the rest of the proof, we will
see whether or not the DSOs can improve their utilities by
untruthfully reporting the asks.
Case 1: Em ∈ Eo \ Ed. In this case, we consider ECN Em
is not a candidate via Algorithm 2 given DSO Dg truthfully
reports its ask (i.e., Ag,m = Rg,m). This implies that the
truthful ask of this ECN is higher than the medium ask, i.e.,
Rg,m > Aj, and the utility of Dg by leasing this ECN is
πg,m(Rg,m) = 0. Based on Algorithms 2 and 3, the DSO will
lose the auction by increasing the ask, and it may win the
game by decreasing the ask. In the following two subcases,
we will discuss whether or not the DSO can improve its
utility by decreasing its ask.
1) If DSO Dg decreases the ask of ECN Em and this ECN
finally becomes the winning ECN via Algorithm 3, the DSO
receives the medium ask as the reward (i.e., Ig,m = Aj).
However, since Rg,m > Aj, the utility of Dg becomes
negative which is smaller than that of truthful reporting, i.e.,
πg,m(Ag,m) = Ig,m−Rg,m = Aj−Rg,m < 0 = πg,m(Rg,m).
2) If DSO Dg decreases the ask and Em does not become
the winning ECN, the utility of Dg is still zero, which is the
same as that of truthful reporting.
Case 2: Em ∈ Ed. In this case, we consider ECN Em
becomes the ECN candidate via Algorithm 2 given DSO Dg
truthfully reports its ask. This implies that the DSO has a
non-negative utility, where it has positive utility if it wins
the game and it obtains zero utility if it does not win via
Algorithm 3.
1) If DSO Dg untruthfully reports the ask and ECN Em
is not a candidate via Algorithm 2, the DSO receives zero
utility which is no more than that of truthful reporting, i.e.,
πg,m(Ag,m) = 0 ≤ πg,m(Rg,m).
2) If DSO Dg untruthfully reports the ask and ECN Em is
still one of candidates after Algorithm 2, the utility of Dg
is the same as that of truthful reporting, i.e., πg,m(Ag,m) =
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
9
πg,m(Rg,m). This is because whether or not this ECN can
become a winning ECN does not depend on its ask but
decided by the bids of the UTs, as shown in Algorithm 3.
To sum up, the DSO cannot improve its utility by un-
truthfully reporting, which completes the proof.
Different from the DSOs that satisfy strong truthfulness,
the UTs in the proposed SWIDA mechanism only satisfy
weak truthfulness. In the strongly truthful double auction
like ICAM [33], truthful reporting is the weakly dominant
strategy for all UTs, i.e., no UT can improve its utility by
untruthfully submitting its bids. However, the social welfare
is relatively low in such a mechanism. Compared with
the ICAM, our proposed SWIDA mechanism improves the
social welfare at the cost of certain degree of truthfulness.
The definition of the weak truthfulness is similar to that
of [29], i.e., no buyer can improve its expected utility via
untruthful bidding. In the proposed SWIDA, each UT can
always obtain a non-negative utility by truthful bidding, but
may receive a non-positive utility by bidding untruthfully.
Moreover, a UT may lose an auction with a lie while
it should have won with a truthful bid. Compared with
efficient design of auction (EDA) mechanism in [29], we
adopt social welfare instead of successful trading pairs as
the objective, making the design of the double auction mech-
anism even more challenging. Furthermore, we provide a
comprehensive proof to illustrate the risks for the UTs to lie
in the following proposition.
Proposition 1. For the proposed SWIDA mechanism, any un-
truthful bidding strategy (i.e., underbidding or overbidding) that
potentially leads to a positive improvement in a UT’s utility also
imposes a risk to reduce its utility.
Proof: We denote the valuation and bid of UT Un for
ECN Em by V n
m and Bn
m, respectively. Given each UT truth-
fully submits its bid to the smart contract (i.e., Bn
m = V n
m),
we can divide UT set U into two subsets: winning UT set Û ,
and non-winning UT set U \Û . A UT Un is does not win any
ECN if it is not a UT candidate via Algorithm 2, or its bid
is not the highest for any ECN via Algorithm 3. Given Un is
not a winning UT, its payment and utility are both zero.
If Un becomes a UT candidate via Algorithm 2, there are
two conditions for Un to win an ECN Em via Algorithm 3.
First, UT Un’s bid Bn
m should be the highest among all UTs
in set Bm. In the meanwhile, Un’s estimated utility obtained
from Em (i.e., ω̄n
m = Bn
m−Pn
m) should be the highest among
all ECNs. Given Un wins Em, its utility is ωn
m = V n
m − Pn
m,
and payment Pn
m equals either the highest bid that is no
more than Bn
m in B̄m (line 19, Algorithm 3), or the threshold
price Bı if there is no other smaller bid in B̄m (line 17,
Algorithm 3). Note that payment Pn
m may change if Un
untruthfully bids.
Recall that Un’s truthful bid Bn
m = V n
m is the z-th highest
bid in set B̄m, i.e., V n
m = B̄
(z)
m . We denote B̄
(z−1)
m as the
smallest bid that is no less than V n
m in B̄m, and B̄
(z+1)
m as
the highest bid that is no more than V n
m in B̄m.2 We can
deduce that Un’s payment Pn
m increases if Bn
m > B̄
(z−1)
m ,
2. If V n
m < Bı, we let B̄(z−1)
m = Bı and B̄
(z+1)
m = 0. If V n
m ≥ Bı and
there does not exist any bid no less than V n
m in B̄m, we let B̄(z−1)
m = ∞.
If V n
m ≥ Bı and there does not exist any bid no more than V n
m in B̄m,
we let B̄(z+1)
m = Bı.
and decreases if Bn
m < B̄
(z+1)
m , respectively, compared with
that of truthful bidding.
We will discuss whether or not the UTs can improve their
utilities by untruthful bidding in the following two cases.
Case 1: Un ∈ U \Û . In this case, we consider UT Un does
not become the winning UT given it truthfully submits its
bids. We can deduce that its utility is zero.
(1) If UT Un underbids for ECN Em (i.e., Bn
m < V n
m), it still
cannot win this ECN and obtains zero utility.
(2) If UT Un overbids for Em (i.e., Bn
m > V n
m), it may
become the highest bidder in Bm and wins Em. Then
Un’s utility may have two possible outcomes. First, if
Bn
m ≤ B̄
(z−1)
m , its payment does not change and is less
than the true valuation, i.e., Pn
m ≤ V n
m. In this case, its
utility ωn
m = V n
m − Pn
m ≥ 0, which is higher than that
of truthful bidding. Second, if Bn
m > B̄
(z−1)
m , it pays
at least B̄
(z−1)
m which exceeds its true valuation, i.e.,
Pn
m ≥ B̄
(z−1)
m > V n
m. Its utility is thus non-positive, i.e.,
wn
m = V n
m − Pn
m ≤ 0, which is even worse than that of
truthful bidding.
Case 2: Un ∈ Û . In this case, we consider UT Un wins an
ECN (e.g., Em) given it truthfully submits its bids. We can
deduce that Un obtains a non-negative utility from Em by
truthful bidding, i.e., wn
m ≥ 0. Now we discuss whether or
not Un can improve its utility by untruthfully bids for Em
or any other ECNs.
(1) If UT Un underbids for Em (i.e., Bn
m < V n
m), it may
not be able to become the winning UT. We have the
following two subcases.
1) If Bn
m is no longer the highest bid in Bm, UT Un
cannot win ECN Em. In this case, there are two
possible outcomes. First, if Un has not won any other
ECNs, its utility is zero. Second, if it wins another EC-
N, its utility may increase or decrease from truthful
bidding.
2) If Bn
m is still the highest bid in Bm, we are not sure if
it wins Em since its estimated utility obtained from
Em has changed and we need to compare it with that
obtained from other ECNs.
i) If Un’s estimated utility obtained from Em is
greater than that obtained from any other ECNs,
it still wins Em. Its utility has two possible out-
comes. First, if Bn
m ≥ B̄
(z+1)
m , the payment of Un
does not change and its utility remains the same.
Second, if Bı ≤ Bn
m < B̄
(z+1)
m , Un’s payment Pn
m
is smaller than B̄
(z+1)
m , and its utility is improved
than truthful bidding.
ii) If Un wins another ECN that provides a larger
estimated utility than Em, its utility may increase
or decrease from truthful bidding.
(2) If UT Un overbids for Em (i.e., Bn
m > V n
m), its bid Bn
m is
still the highest in Bm. However, since Un’s estimated
utility obtained from Em has changed, it may not still
win Em.
1) If Bn
m ≤ B̄
(z−1)
m , Un’s estimated utility at Em in-
creases as Bn
m increases. We have the following two
subcases.
i) If Un truthfully bids for all other ECNs, it still
wins Em and its payment and utility do not
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
10
changed compared with those of truthful bidding.
ii) If Un also untruthfully bids for some other ECNs,
Un will win the ECN that provides the highest
estimated utility. First, if Un wins Em, its utility
does not change. Second, if Un wins another EC-
N, and its utility may increase or decrease from
truthful bidding (similar to Case 2-(1)-1)).
2) Once Bn
m > B̄
(z−1)
m , UT Un’s estimated utility returns
to zero before it further increases. In this case, Un
wins the ECN that provides the highest estimated
utility. If Un wins Em, it pays at least B̄(z−1)
m which
is greater than its valuation. In this case, Un obtains
negative utility, i.e., wn
m ≤ V n
m − B̄
(z−1)
m < 0. Oth-
erwise, Un wins another ECN and its utility may
increase or decrease from truthful bidding (similar
to Case 2-(1)-1)).
Remark 1. From the above two cases, we see that Un needs to
precisely know the other UTs’ bids in order to increase its own
utility. For example, in Case 1, Bn
m should become the highest bid
in Bm while without exceeding B̄h
m. However, since no UT knows
the bids of other UTs in such a seal-bid double auction, the UT’s
utility may be decreased in practice if the UT takes the untruthful
bidding strategy that it expects to increase its utility. On the one
hand, placing a blind overbid may help it win an auction, but may
also cause it paying more than its valuation when its bid exceeds
other UTs’ bids, which results in a non-positive utility. On the
other hand, placing a blind underbid may reduce its payment, but
may also be at risk of losing the auction. Moreover, even if the
UT knows the other UTs’ bids in the original B̄m, it still does not
know which case it falls into due to the lack of information about
the randomly ordered list of the potential winning UTs (line 12 of
Algorithm 3).
Furthermore, our simulation results in Section 5.2 illus-
trate that, for the proposed SWIDA mechanism, no UT can
obtain a positive improvement in its expected utility by
bidding untruthfully.
4 PROPOSED POS CONSENSUS MECHANISM
Using the smart contract designs, transactions are automat-
ically generated in the blockchain-aided EC market. In this
section, we propose a modified PoS consensus mechanism
to determine an unique block generator and ensure a fair
allocation of the block generation reward among stakehold-
ers.
The traditional PoW/PoS mechanisms suffer from the
limitation of wealth inequality, i.e., the entity that possesses
either dominated computing power in PoW or massive
coinage in PoS earns the right to verify the transaction and
is rewarded induced by this verification. As a result, the
conventional PoW/PoS mechanisms incentivize the entities
in this market towards either computing power or coinage,
but ignore the service quality. To cope with this issue, we re-
define the stake of each entity as a weighted sum of coinage
and trustworthiness accumulated in the transactions, and
propose a trustworthiness-driven PoS mechanism for the
blockchain-aided EC market. The entity that obtains the
highest ballot proportion is given the right to generate a
block.
4.1 Conventional Consensus Mechanisms
In the blockchain-aided EC market, all payments are made
in blockchain digital coins. New digital coins are supplied
to the blockchain as a reward for publishing every new
block. To get the reward, the entities compete to publish
the new block. Currently, the consensus mechanism used in
the Bitcoin blockchain is called PoW. As [20] unveiled, the
PoW mechanism is particularly resource-consuming during
the block generation. However, PoW is not suitable for
the blockchain-aided EC network, since the entities have
limited computing capability [34]. Differing from PoW, the
PoS mechanism selects the entity to publish a new block
according to its stake (e.g., the coinage in [23]).
Definition 1. The coinage of entity i is defined as
Ci = numi · ti, (14)
where numi is the the amount of entity i’s coins, and ti is the
period that the coins are possessed by entity i.
In each slot, an entity is elected to publish a single block.
The PoS based election scheme can be implemented by a
standard Follow-the-Satoshi algorithm [23], where the entity
j is elected to publish the block in each slot with probability
of
ϕj =
Cj∑J
i=1 Ci
, j ∈ {1, 2, ..., J}, (15)
where J is the number of entities that participate in the
block generation. For example, in the Delegated Proof of
Stake (DPoS) mechanism, all entities each with coinage can
vote for multiple trusted entities to publish the blocks in
order [24].
Compared with PoW that requires to solve extremely
complicated hash puzzles, the voting process for PoS greatly
reduces the energy and computing power consumptions on
the battery constrained devices [19]. Moreover, the commu-
nication overhead for the proposed PoS is similar to that
of PoW. Different from PoW, the voting information is the
only additional information exchanged among stakeholder-
s, which does not introduce much communication overhead
due to its small size.
However, the conventional PoS mechanism in [23] [24]
is not well-suited to the proposed blockchain market due to
two critical reasons [19]. First, the right of publishing blocks
in PoS is determined by the coinage. In the context of the
blockchain-enabled market, it might cause the evil of rich
entities by forking and double spending. Second, from (15),
it is more likely for the entity with larger coinage to win the
right of publishing a new block. Thus, PoS is beneficial for
the wealthy entities, and may enlarge the wealth inequality
among the entities. Driven by these two issues, we propose
a trustworthiness-driven PoS consensus mechanism in the
following section.
4.2 PoS Based Consensus Mechanism
Consider that a single block is published in each time slot
and multiple consecutive time slots form an epoch. At
the beginning of each epoch, a genesis block records the
entities that hold stakes and intend to publish the blocks as
the stakeholders. Since the operation of our proposed PoS
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
11
mechanism does not require much energy and computing
power consumptions on each entity, any UT, DSO or ECN
can participate in the blockchain as a stakeholder relying on
its stake (i.e., the weighted sum of coinage or trustworthi-
ness defined in Eqn. (16)). Note that only the entity whose
normalized trustworthiness is greater than the threshold
can register as a stakeholder and the stake of each entity
in the current epoch is accumulated over all the previous
epochs. Any change of stake within the current epoch does
not affect the stakeholder election of publishing a block in
this epoch. The proposed mechanism within every single
epoch operates in three steps:
Step 1 (Ballot allocation): At the beginning of each epoch,
different stakeholders take different ballot proportions
based on their stakes (i.e., the weighted sum of coinage and
trustworthiness as Eqn. (16)).
Step 2 (Voting of stakeholders): Every stakeholder votes
for its trusted stakeholder, and the stakeholder that re-
ceives the highest ballots publishes the block. In this con-
text, a tie may occur wherein multiple stakeholders re-
ceive the same highest ballots. Without loss of generali-
ty, let S̄ = {PK1,PK2, · · ·,PKS} be a set that collects
the public keys of the stakeholders involved in the tie
in the k-th block height. Inspired by [35] and [36], we
use cryptographic hash function to promote distributed
randomness for the selection of block publisher in the tie.
Since the number of ballots and associated public keys are
transparent, each stakeholder in S̄ first calculates the hash
values, i.e., H(〈PK1, H(Lk−1)〉), H(〈PK2, H(Lk−1)〉),· · ·,
H(〈PKS , H(Lk−1)〉), where H(Lk−1) denotes the hash val-
ue of the previous block and 〈·〉 is a concatenation opera-
tion. Here, H(Lk−1) serves as a random and unpredictable
selection seed. Then, the stakeholder associated with the
minimum hash value becomes the block publisher. Since the
number of ballots and associated public keys are transparent
and verifiable, all the stakeholders can verify the legitimacy
of the block publisher.
Step 3 (Reward allocation): The stakeholder that votes for
the block publisher is rewarded according to its Shapley
value.
The details of steps 1, 2, and 3 are given in Section 4.2.1,
Section 4.2.2, and Section 4.2.3, respectively.
4.2.1 Vote Allocation
In the conventional PoS mechanism, the stake only relies
on the coinage. However, the blockchain-aided EC market
emphasizes not only the coinage of each entity but also its
trustworthiness that reflects the service quality. In this con-
text, we define the stake of stakerholder j in the proposed
PoS mechanism as a weighted sum of trustworthiness in (1)
and coinage in (14):
Xj = (1− uξ)Cj + uξξj , (16)
where uξ ∈ [0, 1] denotes the weight of trustworthiness.
Note that the effect of different uξ on the wealth inequality
will be illustrated in Section 5. The ballot proportion taken
by stakeholder j is defined as
Ωj =
Xj∑J
q=1 Xq
. (17)
From (17), the entity with a larger stake occupies a higher
ballot proportion.
4.2.2 Voting of Stakeholders
In this step, each stakeholder uses up its votes for a single
stakeholder it trusts. The stakeholder that receives the high-
est ballots publishes the new block, and all stakeholders that
vote for the block publisher are rewarded due to the contri-
butions of their own stakes. In this paper, we formulate the
voting process as a coalitional game.
Definition 2. Let J = {1, ..., J} be a set that collects all the
stakeholders that vote for the block publisher, and the stakeholder
joins in the J randomly. A coalition K is defined as a subset of J .
The coalitional game is given by pair (J , v(K)), where function
v(K) measures the total reward produced by coalition K.
We define a coalition K as the key coalition if the total
ballot proportion of the stakeholders in K is the most. In
other words, the stakeholder supported by the key coalition
can get the right to publish the block. We define
v(K) =
{
�, if K is the key coalition,
0, otherwise,
(18)
where K ⊆ J . From (18), only the key coalition K earns the
reward � for all stakeholders in J , and each stakeholder in
J is rewarded according to its voting proportion.
4.2.3 Reward Allocation
Unlike the conventional PoS mechanism in which only the s-
takeholder that publishes the block is rewarded, we employ
the Shapley-based reward allocation strategy to reward all
stakeholders in J that vote for the block publisher. Accord-
ing to the coalitional game, the reward of each stakeholder
corresponds to its Shapley value [37]. The following theorem
verifies the fairness of the Shapley based reward allocation.
Theorem 4. The Shapley-based reward allocation strategy that
rewards each stakeholder j according to its Shapley vlaue
φ(J , j) =
1
J !
∑
K⊆J\{j}
|K|!(J− |K| − 1)![v(K ∪ {j})− v(K)]
(19)
is fair, where K can be any coalition in J and |K| denotes the
number of stakeholders in coalition K.
Proof: Consider that all stakeholders join in the coali-
tional game with the same probability p. Suppose that p
is a random variable uniformly distributed over [0, 1]. The
probability of forming a coalition K ⊆ J \{j} is given by
P (K ⊆ J \{j}) = p|K|(1− p)J−|K|−1, (20)
where J \{j} denotes set J that excludes j and j /∈ K.
When stakeholder j joins coalition K by using up its
votes for the same stakeholder voted by coalition K, the
rewards earned by K increases from v(K) to v(K∪{j}). Note
that the increased rewards belong to stakeholder j. Define
the marginal contribution of stakeholder j to coalition K as
φ
′
(J , j) = v(K ∪ {j})− v(K). (21)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
12
As such, the average marginal contribution of j to all possi-
ble coalitions K with respect to p is defined as the Shapley
value of j, given by
φ(J , j) =
∑
K⊆J\{j}
∫ 1
0
φp(J , j)dp
=
∑
K⊆J\{j}
∫ 1
0
p|K|(1−p)
J−|K|−1
[φ
′
(J , j)]dp
=
1
J !
∑
K⊆J\{j}
|K|!(J− |K|− 1)![v(K ∪ {j})−v(K)]. (22)
From (22), the allocation strategy based on the Shapley value
is fair, since the reward allocated to the stakeholder is the
stakeholder’s average marginal contribution to all possible
coalitions [38]. This completes the proof.
In addition, as Section 5.2 will show, the proposed allo-
cation strategy can reduce the wealth inequality compared
with conventional PoS.
5 SIMULATION RESULTS
In this section, we present the simulation results of smart
contract design in Section 5.1 and the proposed PoS mecha-
nism in Section 5.2, respectively.
5.1 Simulations of Smart Contract
In Fig. 5, we plot the network social welfare that is defined
as the summation of the utilities of all the DSOs, ECNs
and UTs obtained from both the matching-based ECN as-
socaition phase (in Section 3.1) and the auction-based ECN
leasing phase (in Section 3.2). The system parameters are
given in Table 2. With reference to [25], DSO Dg’s weight of
trustworthiness αg and UT Un’s weight of trustworthiness
χn are both randomly selected over [0,1]. With reference
to [39], we consider UT Un’s computing frequency fn and
Em’s computing frequency fm are both randomly selected
over [0,4] GHz. We set the DSO number as G = 10 and
the maximum number of rented ECNs by the DSOs as
40. In Fig. 5(a), we fix the number of ECNs as 60 and
observe that the network social welfare first increases with
the number of UTs, which is due to the increased number of
successful ECN-UT association pairs. For large UT numbers
(e.g., higher than 140), the network social welfare decreases
with the further increase of the number of UTs. This is
because the fiercer competition among UTs contributes to
higher payment, which finally reduces the social welfare.
In Fig. 5(b), by fixing the number of UT as 40, we see
that the network social welfare first increases and then
decreases with the number of ECNs. When the number
of ECNs is small, the social welfare increases with the
number of ECNs due to the increased number of successful
trading pairs. As the number of ECNs further increases,
the network social welfare decreases. This is mainly due
to the fact that the fiercer competition among the ECNs im-
proves the service standard (e.g., only the ECNs with higher
computing frequency survive), which implicitly increases
the UTs’ payment and finally reduces the social welfare.
Furthermore, for both Fig. 5(a) and Fig. 5(b), the proposed
SWIDA achieves higher social welfare than the traditional
TABLE 2: Simulation parameters for Fig. 5
Description Notations Value
Computing frequency of UT Un fn [0,4]GHz
Computing frequency of ECN Em fm [0,4]GHz
Dg’s weight of trustworthiness αg [0,1]
Un’s weight of trustworthiness χn [0,1]
Effective switched capacitance κ 10−26
ICAM since it is able to establish more successful trading
pairs among the entities. In ICAM, when a UT’s bid is the
highest for multiple ECNs, only the ECN that provides the
highest utility for this UT is rented and other ECNs are
discarded from the candidate list until the double auction
algorithm terminates. Therefore, the traditional ICAM suf-
fers from relative low association efficiency. To cope with
this problem, the proposed SWIDA does not immediately
discard these ECNs but allows them to continue searching
for the association opportunities along with other UTs in
the next iterations, which improves the number of successful
trading pairs and thus increases the social welfare. However,
Fig. 5(b) shows that the gap between SWIDA and ICAM
slightly decreases as the number of ECN increases. This is
due to the fact that the benefit gained from more successful
trading pair is less significant as the number of successful
trading pair stabilizes.
0 50 100 150 200
0
1
2
3
4
5
So
ci
al
 w
el
fa
re
Number of UTs
matching+ICAM
matching+SWIDA
(a)
0 20 40 60 80 100
0
1
2
3
4
5
So
ci
al
 w
el
fa
re
Number of ECNs
matching+ICAM
matching+SWIDA
(b)
Fig. 5. Social welfare vs. (a) different numbers of UTs with
M = 60 ECNs and (b) different numbers of ECNs with
N = 40 UTs.
Fig. 6 validates the weak truthfulness of the UTs under
the proposed SWIDA mechanism. We take the expectation
of each UT’s utility over 1,000 realizations, where each is
initialized with a randomly ordered list of the potential
winning UTs (see line 12 of Algorithm 3). The medium ask
of the ECNs is set to be Aj = 0.55. Without loss of generality,
we randomly select three typical UTs U3, U9 and U7, where
their true valuations on their intended ECNs of E2, E6 and
E11 are V 3
2 = 0.4, V 9
6 = 0.7 and V 7
11 = 0.9, respectively. We
now discuss the effects of untruthful bidding on the UTs’
expected utilities. First, since V 3
2 = 0.4 < Aj = 0.55, UT
U3 is not even a UT candidate by using Algorithm 2. If U3
underbids with B3
2 < 0.4 or overbids with B3
2 ∈ [0, 4, 0.92],
it still loses the auction and obtains zero utility. If U3
overbids with B3
2 > 0.92, it becomes the winning UT for
ECN E2. However, the utility for U3 is negative since it pays
more than its valuation for this ECN. Second, we observe
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
13
0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
Bm
n (UT Un's Submitted Bid for ECN Em)
-0.6
-0.5
-0.4
-0.3
-0.2
-0.1
0
0.1
U
n's 
Ex
pe
ct
ed
 U
til
ity
B2
3    (V2
3=0.4)
B6
9    (V6
9=0.7)
B11
7    (V11
7 =0.9)
Fig. 6. Truthfulness in expectation of UTs with SWIDA.
10 15 20 25 30 35 40 45 50 55 60
0
1
2
3
4
5
6
7
8
A
ve
ra
ge
 re
w
ar
d 
of
 p
oo
r s
ta
ke
ho
ld
er
 (%
)
Number of poor stakeholders
Proposed Shapley-based PoS
Shapley-based PoS
Conventional PoS
Fig. 7. Average reward allocation of each poor stakeholder
under different consensus mechanisms.
that UTs U9 and U7 win ECNs E6 and E11 by truthful
bidding, respectively. If U9 underbids with B9
6 < 0.6, it
is no longer the highest bidder for E6 and loses auction
with zero utility. If U9 overbids with B9
6 > 0.9, it pays
more than its valuation and obtains negative utility. For
B9
6 ∈ [0.6, 0.9], U9 wins the auction without changing its
payment and its utility remains the same as that of truthful
bidding. Similarly, U7 cannot improve its expected utility by
either overbidding or underbidding. To sum up, no UT can
improve its expected utility by bidding untruthfully, which
confirms our conclusions on the UTs’ weak truthfulness.
5.2 Simulations of Consensus Mechanism
Fig. 7 compares the average reward of each poor stake-
holder of our proposed Sharpley-based PoS mechanism
with the other two benchmark PoS mechanisms, where
the reward of each stakeholder corresponds to the coinage
proportion, the stake of coinage, and the stake of weighted
sum of coinage and trustworthiness for the conventional
PoS, Shapley-based PoS, and our proposed Sharpley-based
PoS mechanisms, respectively. We consider that the reward
for publishing a new block is fixed. The entity whose
trustworthiness value is within [0.7,1] can register as the
stakeholder and we set the weight of the trustworthiness
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
2
2.5
3
3.5
4
A
ve
ra
ge
 re
w
ar
d 
of
 p
oo
r s
ta
ke
ho
ld
er
 (%
)
Fig. 8. Average reward allocation of each poor stakeholder
of the proposed mechanism under different weights (two
rich stakeholders, each with coinage proportion ρ).
uξ = 0.5. Moreover, we consider two rich stakeholders
each with 1/4 of the total coinage. First, compared with
the other two mechanisms, we observe that our proposed
Shapley based PoS mechanism can allocate more reward to
the poor stakeholders. In this context, under a fixed total
reward, the rich stakeholders reap less reward under the
proposed mechanism than that under the other benchmark
PoS mechanisms. Therefore, the proposed mechanism can
reduce the wealth inequality among the entities. Second, we
see that the average reward of poor stakeholder decreases
as the number of poor stakeholders increases.
Fig. 8 shows the impact of different weights of trustwor-
thiness on the reward allocation of the proposed Shapley
based PoS mechanism. Consider that there are 20 poor
stakeholders and two rich stakeholders. We discuss the
following three cases, where each of the rich stakeholders
has 1/4, 1/6, and 1/8 of the total coinage, respectively.
We observe that the average reward of poor stakeholders
goes up as the weight of uξ increases. Therefore, the wealth
equality among the entities is reduced under the fixed total
reward. First, when the weight of trustworthiness uξ is small
(e.g., uξ ∈ [0, 0.2]), the average reward allocation for poor
stakeholder grows faster as uξ increases. Since the average
reward of the poor stakeholder is positively correlated with
its average ballot proportion, the ballot proportion of the
rich stakeholders decreases sharply and that of the poor s-
takeholder increases sharply in this region. Second, when uξ
is large (e.g., uξ ∈ [0.2, 1]), the average reward allocation for
the poor stakeholders increases slowly since the trustwor-
thiness value plays a more dominant role than coinage in
the ballot proportion. For uξ = 1, the three curves coincide
since the allocation of the stakeholder’s ballot proportion
only depends on the trustworthiness. The determination of
the weight uξ depends on the aim of the blockchain system.
If the target is to encourage more participants, it is better to
use a large uξ as an incentive for the poor stakeholders. If
the aim is to encourage the participation of the stakeholders
with more coinage, it is better to use a small weight uξ that
ensures the benefits of the rich.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
14
6 CONCLUSION
In this paper, we proposed several mechanisms in a
blockchain-aided EC market aiming to enable automatic,
efficient and verified transactions among the decentralized
network entities. First, we proposed a smart contract based
matching mechanism to establish the one-to-many associa-
tion between the DSOs and ECNs with the aim of maximiz-
ing the social welfare in the ECN association phase. Second,
we proposed a double auction mechanism named SWIDA
to build up the association between the DSOs and UTs, and
determine the pricing of the winners. We proved that the
proposed SWIDA mechanism is individually rational and
budget balanced. Meanwhile, SWIDA is truthful for the
DSOs and can ensure the truthfulness in expectation for the
UTs. Most importantly, we showed that SWIDA can signifi-
cantly improve the social welfare of the network compared
with the traditional double auction mechanism. Third, we
proposed a trustworthiness-driven PoS mechanism to fairly
allocate the reward during the block generation. It is shown
that the proposed PoS mechanism can reduce wealth in-
equality among the entities compared with the conventional
consensus mechanisms. In future work, we will extend the
smart contract based double auction algorithm design to
one-to-many ECN-UT association scenario, where each ECN
can potentially serve multiple UTs at the same time.
ACKNOWLEDGMENTS
This work was supported in part by National Key Project
2020YFB1807700, the Natural Science Foundation of Jiangsu
Province under Grant BK20210331, the National Natural
Science Foundation of China under Grant 61872184, and the
Competitiveness Enhancement Program of Tomsk Polytech-
nic University.
REFERENCES
[1] H. Guo, J. Zhang, J. Liu, and H. Zhang, “Energy-aware compu-
tation offloading and transmit power allocation in ultradense IoT
networks,” IEEE Internet Things J., vol. 6, no. 3, pp. 4317–4329, Jun.
2019.
[2] S. Azodolmolky, P. Wieder, and R. Yahyapour, “Cloud computing
networking: Challenges and opportunities for innovations,” IEEE
Commun. Mag., vol. 51, no. 7, pp. 54–62, Jul. 2013.
[3] W. Shi, J. Cao, Q. Zhang, Y. Li, and L. Xu, “Edge computing: Vision
and challenges,” IEEE Internet Things J., vol. 3, no. 5, pp. 637–646,
Oct. 2016.
[4] Y. Du, J. Li, L. Shi, T. Liu, F. Shu, and Z. Han, “Two-tier matching
game in small cell networks for mobile edge computing,” IEEE
Trans. Serv. Comput., early access, 2019.
[5] H. Zhang, Y. Xiao, S. Bu, D. Niyato, F. R. Yu, and Z. Han,
“Computing resource allocation in three-tier IoT fog networks:
A joint optimization approach combining Stackelberg game and
matching,” IEEE Internet Things J., vol. 4, no. 5, pp. 1204–1215,
Oct. 2017.
[6] H. Zhang, Y. Zhang, Y. Gu, D. Niyato, and Z. Han, “A hierarchical
game framework for resource management in fog computing,”
IEEE Commun. Mag., vol. 55, no. 8, pp. 52–57, Aug. 2017.
[7] J. Li, S. Chu, F. Shu, J. Wu, and D. N. K. Jayakody, “Contract-based
small-cell caching for data disseminations in ultra-dense cellular
networks,” IEEE Trans. Wireless Commun., vol. 18, no. 5, pp. 1042–
1053, May 2019.
[8] Z. Zhou, B. Wang, M. Dong, and K. Ota, “Secure and efficient
vehicle-to-grid energy trading in cyber physical systems: Integra-
tion of blockchain and edge computing,” IEEE Trans. Syst., Man,
Cybern., Syst., vol. 50, no. 1, pp. 43–57, Jan. 2020.
[9] Z. Chang, W, Guo, X. Guo, Z. Zhou, and T. Ristaniemi, “Incentive
mechanism for edge-computing-based blockchain,” IEEE Trans.
Ind. Informat., vol. 16, no. 11, pp. 7105–7114, Nov. 2020.
[10] Y. Fan, L. Wang, W. Wu, and D. Du, “Cloud/Edge computing
resource allocation and pricing for mobile blockchain: An iterative
greedy and search approach,” IEEE Trans. Computat. Social Syst.,
vol. 8, no. 2, pp. 451–463, Apr. 2021.
[11] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When mobile
blockchain meets edge computing,” IEEE Commun. Mag., vol. 56,
no. 8, pp. 33–39, Aug. 2018.
[12] S. Guo, Y. Dai, S. Guo, X. Qiu, and F. Qi, “Blockchain meets
edge computing: Stackelberg game and double auction based task
offloading for mobile blockchain,” IEEE Trans. Veh. Technol., vol. 69,
no. 5, pp. 5549–5561, May 2020.
[13] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, “Social welfare maxi-
mization auction in edge computing resource allocation for mobile
blockchain,” in Proc. IEEE ICC, Kansas City, MO, USA, May 2018.
[14] Q. Wang, R. Y. K. Lau, and X. Mao, “Blockchain-enabled smart
contracts for enhancing distributor-to-consumer transactions,”
IEEE Consum. Electron. Mag., vol. 8, no. 6, pp. 22–28, Nov. 2019.
[15] W. Sun, J. Liu, Y. Yue, and P. Wang, “Joint resource allocation and
incentive design for blockchain-based mobile edge computing,”
IEEE Trans. Wireless Commun., vol. 19, no. 9, pp. 6050–6064, Sept.
2020.
[16] W. Wang, D. Niyato, P. Wang, and A. Leshem, “Decentralized
caching for content delivery based on blockchain: A game theo-
retic perspective,” in Proc. IEEE ICC, Kansas City, MO, USA, May
2018.
[17] H. Xu, W. Huang, Y. Zhou, D. Yang, M. Li, and Z. Han, “Edge
computing resource allocation for unmanned aerial vehicle as-
sisted mobile network with blockchain applications,” IEEE Trans.
Wireless Commun., vol. 20, no. 5, pp. 3107–3121, May 2021.
[18] Z. Yang, K. Liu, Y. Chen, W. Chen, and M. Tang, “Two-level Stack-
elberg game for IoT computational resource trading mechanism:
A smart contract approach,” IEEE Trans. Serv. Comput., early access,
2020.
[19] B. Cao, Y. Li, L. Zhang, L. Zhang, S. Mumtaz, Z. Zhou, and
M. Peng, “When Internet of things meets blockchain: Challenges
in distributed consensus,” IEEE Netw., vol. 33, no. 6, pp. 133–139,
Nov. 2019.
[20] D. Tosh, S. Shetty, X. Liang, C. Kamhoua, and L. L. Njilla, “Data
provenance in the cloud: A blockchain-based approach,” IEEE
Consum. Electron. Mag., vol. 8, no. 4, pp. 38–44, Jul. 2019.
[21] H. Liu, Y. Zhang, and T. Yang, “Blockchain-enabled security in
electric vehicles cloud and edge computing,” IEEE Netw., vol. 32,
no. 3, pp. 78–83, May. 2018.
[22] J. Huang, L. Kong, G. Chen, M. Wu, X. Liu, and P. Zeng, “Towards
secure industrial IoT: Blockchain system with credit-based con-
sensus mechanism,” IEEE Trans. Ind. Informat., vol. 15, no. 6, pp.
3680–3689, Jun. 2019.
[23] A. Kiayias, A. Russell, B. David, and R. Oliynykov, “Ouroboros:
A provably secure proof-of-stake blockchain protocol,” Santa Bar-
bara, CA, Aug. 2017, pp. 357–388.
[24] D. Wang and X. Zhang, “Secure ride-sharing services based on a
consortium blockchain,” IEEE Internet Things J., vol. 8, no. 4, pp.
2976–2991, Feb. 2021.
[25] K. Chen, H. Shen, K. Sapra, and G. Liu, “A social network based
reputation system for cooperative P2P file sharing,” IEEE Trans.
Parallel Distrib. Syst., vol. 26, no. 8, pp. 2140–2153, Aug. 2015.
[26] C. Ma, M. Ding, H. Chen, Z. Lin, G. Mao, Y. Liang, and B. Vucetic,
“Socially aware caching strategy in device-to-device communica-
tion networks,” IEEE Trans. Veh. Technol., vol. 67, no. 5, pp. 4615–
4629, May 2018.
[27] W. Zhang, Y. Wen, K. Guan, D. Kilper, H. Luo, and D. O. Wu,
“Energy-optimal mobile cloud computing under stochastic wire-
less channel,” IEEE Trans. Wireless Commun., vol. 12, no. 9, pp.
4569–4581, Sep. 2013.
[28] Z. Wang, T. Alpcan, J. Evans, and S. Dey, “Truthful mechanism
design for wireless powered networks,” IEEE Trans. Commun.,
vol. 67, no. 11, pp. 7966–7979, Nov. 2019.
[29] A. Jin, W. Song, P. Wang, D. Niyato, and P. Ju, “Auction mech-
anisms toward efficient resource sharing for cloudlets in mobile
cloud computing,” IEEE Trans. Serv. Comput., vol. 9, no. 6, pp.
895–909, Nov.-Dec. 2016.
[30] V. Krishna, Auction Theory, 2nd ed. New York, NY, USA: Academic,
Aug. 2009.
[31] R. P. McAfee, “A dominant strategy double auction,” J. Econ.
Theory, vol. 56, no. 2, pp. 434–450, Apr. 1992.
[32] V. V. Vazirani, N. Nisan, T. Roughgarden, and E. Tardos, Algorith-
mic game theory. Cambridge, UK: Cambridge Univ. Press, 2007.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
15
[33] A. Jin, W. Song, and W. Zhuang, “Auction-based resource alloca-
tion for sharing cloudlets in mobile cloud computing,” IEEE Trans.
Emerg. Topics Comput., vol. 6, no. 1, pp. 45–57, Jan.-Mar. 2018.
[34] H. Xing, L. Liu, J. Xu, and A. Nallanathan, “Joint task assignment
and resource allocation for d2d-enabled mobile-edge computing,”
IEEE Trans. Commun., vol. 67, no. 6, pp. 4193–4207, Jun. 2019.
[35] Y. Gilad, R. Hemo, S. Micali, G. Vlachos, and N. Zeldovich,
“Algorand: Scaling byzantine agreements for cryptocurrencies,”
in Proc. ACM SOSP, ShangHai, China, Oct. 2017.
[36] S. Das, V. Krishnan, I. M. Isaac, and L. Ren, “Spurt: Scalable dis-
tributed randomness beacon with transparent setup,” Cryptology
ePrint Archive, Report 2021/100, 2021, https://ia.cr/2021/100.
[37] Z. Han and H. V. Poor, “Coalition games with cooperative trans-
mission: a cure for the curse of boundary nodes in selfish packet-
forwarding wireless networks,” IEEE Trans. Commun., vol. 57,
no. 1, pp. 203–213, Jan. 2009.
[38] S. Sharma and A. R. Abhyankar, “Loss allocation for weakly
meshed distribution system using analytical formulation of shap-
ley value,” IEEE Trans. Power Syst., vol. 32, no. 2, pp. 1369–1377,
Mar. 2017.
[39] M. Sun, X. Xu, Y. Huang, Q. Wu, X. Tao, and P. Zhang, “Resource
management for computation offloading in D2D-aided wireless
powered mobile-edge computing networks,” IEEE Internet Things
J., vol. 8, no. 10, pp. 8005–8020, May 2021.
Yu Du received his B.S. degree from Nanjing
University of Science and Technology, P. R. Chi-
na in 2015. From September 2015 to now, he
is a Ph.D. student at the School of Electronic
and Optical Engineering, Nanjing University of
Science and Technology, Nanjing, China. His re-
search interests include blockchain, mobile edge
computing, and game theory.
Zhe Wang (M’14) received the Ph.D. degree
in electrical engineering from The University of
New South Wales, Sydney, Australia, in 2014.
From 2014 to 2020, she was a research fel-
low with The University of Melbourne, Australi-
a, and Singapore University of Technology and
Design, Singapore, respectively. She is currently
a professor with the School of Computer Sci-
ence and Engineering at Nanjing University of
Science and Technology, Nanjing, China. Her
research interests include applications of opti-
mization, game theory, and machine learning to resource allocation in
communications and networking.
Jun Li (M’09-SM’16) received Ph. D degree in
Electronic Engineering from Shanghai Jiao Tong
University, Shanghai, P. R. China in 2009. From
January 2009 to June 2009, he worked in the
Department of Research and Innovation, Alcatel
Lucent Shanghai Bell as a Research Scientist.
From June 2009 to April 2012, he was a Post-
doctoral Fellow at the School of Electrical Engi-
neering and Telecommunications, the University
of New South Wales, Australia. From April 2012
to June 2015, he was a Research Fellow at the
School of Electrical Engineering, the University of Sydney, Australia.
From June 2015 to now, he is a Professor at the School of Electronic
and Optical Engineering, Nanjing University of Science and Technology,
Nanjing, China. He was a visiting professor at Princeton University from
2018 to 2019. His research interests include network information the-
ory, game theory, distributed intelligence, multiple agent reinforcement
learning, and their applications in ultra-dense wireless networks, mobile
edge computing, network privacy and security, and industrial Internet of
things. He has co-authored more than 200 papers in IEEE journals and
conferences, and holds 1 US patents and more than 10 Chinese patents
in these areas. He was serving as an editor of IEEE Communication
Letters and TPC member for several flagship IEEE conferences. He
received Exemplary Reviewer of IEEE Transactions on Communications
in 2018, and best paper award from IEEE International Conference on
5G for Future Wireless Networks in 2017.
Long Shi (S’10-M’15) received the Ph.D. degree
in Electrical Engineering from University of New
South Wales, Sydney, Australia, in 2012. From
2013 to 2016, he was a Postdoctoral Fellow
at the Institute of Network Coding, Chinese U-
niversity of Hong Kong, China. From 2014 to
2017, he was a Lecturer at Nanjing University
of Aeronautics and Astronautics, Nanjing, China.
From 2017 to 2020, he was a Research Fellow
at Singapore University of Technology and De-
sign. Currently, he is a Professor at School of
Electronic and Optical Engineering, Nanjing University of Science and
Technology, Nanjing, China. His research interests include blockchain
networks, mobile edge computing, and wireless network coding.
Dushantha Nalin K. Jayakody (S’09-M’14-
SM’18) received the Ph. D. degree in Electron-
ics, Electrical, and Communications Engineer-
ing, from the University College Dublin, Ireland
in 2013. From 2014 - 2016, he was a Postdoc
Research Fellow at the Institute of Computer
science, University of Tartu, Estonia and De-
partment of Informatics, University of Bergen,
Norway. From 2016, he is a Professor at the
School of Computer Science & Robotics, Na-
tional Research Tomsk Polytechnic University
(TPU), Russia. In addition, since 2019, he also serves as the Dean/
School of Postgraduate & Research, Sri Lanka Technological Cam-
pus (SLTC), Padukka Sri Lanka and Founding director of Centre of
Telecommunication Research, SLTC, Sri Lanka. He has received the
best paper award from the IEEE International Conference on Communi-
cation, Management and Information Technology (ICCMIT) in 2017 and
International Conference on Emerging Technologies of Information and
Communications, Bhutan, March 2019. In July 2019, He received the E-
ducation Leadership Award from the World Academic Congress in 2019.
In 2017 and 2018, he received the outstanding faculty award by National
Research Tomsk Polytechnic University, Russia. He also received Dis-
tinguished Researcher in Wireless Communications in Chennai, India
2019. He has published over 140 international peer reviewed journal
and conference papers and books. His research interests include PHY
and NET layer prospective of 5G communications technologies such
as NOMA for 5G etc, Cooperative wireless communications, device to
device communications, LDPC codes, Unmanned Ariel Vehicle etc. He
is a Senior Member of IEEE and he has organized or co-organized more
than 20 workshops and special sessions of various IEEE conferences.
He also served as chair, session chair or technical program committee
member for various international conferences, such as IEEE PIMRC
2013-2019, IEEE WCNC 2014-2018, IEEE VTC 2015-2018 etc. He cur-
rently serves as an Area Editor the Elsevier Physical Communications
Journal, MDPI Information journal and Wiley Internet of Technology
Letters. Also, he serves as a reviewer for various IEEE Transactions
and other journals.
Quan Chen is a tenure-track associate pro-
fessor in the Department of Computer Science
and Engineering, Shanghai Jiao Tong University,
China. His research interests include High per-
formance computing, Task Scheduling in various
architectures, Resource management in Data-
center, Runtime System and Operating System.
He got his Ph.D. degree at June 2014 from the
Department of Computer Science and Engineer-
ing, Shanghai Jiao Tong University, China.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply. 
1536-1233 (c) 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
This article has been accepted for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Citation information: DOI 10.1109/TMC.2021.3140080, IEEE
Transactions on Mobile Computing
16
Wen Chen (M’03-SM’11) is a tenured Professor
with the Department of Electronic Engineering,
Shanghai Jiao Tong University, China, where he
is the director of Broadband Access Network
Laboratory. He is a fellow of Chinese Institute
of Electronics and the distinguished lecturers
of IEEE Communications Society and IEEE Ve-
hicular Technology Society. He is the Shang-
hai Chapter Chair of IEEE Vehicular Technolo-
gy Society, an Editors of IEEE Transactions on
Wireless Communications, IEEE Transactions
on Communications, IEEE Access and IEEE Open Journal of Vehicular
Technology. His research interests include multiple access, wireless AI
and meta-surface communications. He has published more than 110 pa-
pers in IEEE journals and more than 120 papers in IEEE Conferences,
with citations more than 6000 in google scholar.
Zhu Han (S’01-M’04-SM’09-F’14) received the
B.S. degree in electronic engineering from Ts-
inghua University, in 1997, and the M.S. and
Ph.D. degrees in electrical and computer engi-
neering from the University of Maryland, College
Park, in 1999 and 2003, respectively.
From 2000 to 2002, he was an R&D Engineer
of JDSU, Germantown, Maryland. From 2003
to 2006, he was a Research Associate at the
University of Maryland. From 2006 to 2008, he
was an assistant professor at Boise State Uni-
versity, Idaho. Currently, he is a John and Rebecca Moores Professor
in the Electrical and Computer Engineering Department as well as in
the Computer Science Department at the University of Houston, Texas.
His research interests include wireless resource allocation and man-
agement, wireless communications and networking, game theory, big
data analysis, security, and smart grid. Dr. Han received an NSF Career
Award in 2010, the Fred W. Ellersick Prize of the IEEE Communication
Society in 2011, the EURASIP Best Paper Award for the Journal on
Advances in Signal Processing in 2015, IEEE Leonard G. Abraham
Prize in the field of Communications Systems (best paper award in IEEE
JSAC) in 2016, and several best paper awards in IEEE conferences. Dr.
Han was an IEEE Communications Society Distinguished Lecturer from
2015-2018, AAAS fellow since 2019 and ACM distinguished Member
since 2019. Dr. Han is 1% highly cited researcher since 2017 according
to Web of Science. Dr. Han is also the winner of 2021 IEEE Kiyo
Tomiyasu Award, for outstanding early to mid-career contributions to
technologies holding the promise of innovative applications, with the
following citation: “for contributions to game theory and distributed man-
agement of autonomous communication networks.”
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:35:24 UTC from IEEE Xplore.  Restrictions apply.