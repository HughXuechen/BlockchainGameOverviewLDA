Optimal Resource Allocation by Reverse Stackelberg Game Approach in Blockchain
Optimal Resource Allocation by Reverse
Stackelberg Game Approach in Blockchain
Shivani Wadhwa, Divya Gupta*, Bhavna Sareen, Ruchi Kawatra
Chitkara University Institute of Engineering and Technology , Chitkara University, Punjab, India
shivani.wadhwa@chitkara.edu.in, divya.gupta@chitkara.edu.in, bhavna.sareen@chitkara.edu.in, ruchi.kawatra@chitkara.edu.in
Abstract—With the increase in Internet of Things (IoT) devices,
data produced by these devices is also increasing. For its trusted
use, security of the IoT data is very important. Nowadays,
blockchain is a contemporary technology which is used in
various fields for providing security. But the mining task of
the blockchain is very computation intensive. So, there exist
dependency on resource providers like near-by devices, edge
network for providing resources to the miners for the task
of computations. In our proposed framework, bidding of the
resources is done by the miners from near-by devices and edge
network. Reverse stackelberg game and auction mechanism are
used to reach optimality of the decisions. Nash equilibrium is
also achieved. Less storage is consumed by few blocks of the
blockchain network as meta data is stored in some blocks.
Experimental evaluation is done to compute average delay and
net profit.
Index Terms—blockchain, resource, stackelberg
I. INTRODUCTION
The evolution of Internet of Things (IoT) from 2006 exists
in various field like, manufacturing industries, agriculture,
public service, health, mining, electronics, energy, etc. [1].
Although, there is growth in its use in various areas but there
doesn’t exist any secure platform which can provide security
to the IoT data being produced. Moreover, IoT devices also
have very less computational power due to which there exist
dependency of these devices on other devices to provide
computational power or storage capacity. As the concept of
bitcoin comes into use from 2008, the blockchain is gaining
its importance in various fields including IoT [2]. Because of
its decentralization nature, its gossip algorithm works very fast
and information about any transaction can be accessed from
any nodes that are part of blockchain network. All the blocks
of the blockchain are linked to each other cryptographically
which prevents the user from double-spending as well as
from data tampering. The integration of blockchain and IoT
is done by various researchers to provide security to its data.
But, there exists various challenges in its integration because
of the huge computational power required for blockchain
and IoT devices are generally less computational intensive
devices.
The consensus mechanism of blockchain needs the nodes
with high processing power and storage capacity so as to
solve the complex puzzle known as proof of work (PoW).
To provide huge computational power, generally edge, fog
or cloud networks are used by many researchers [3]. Edge
networks are widely deployed for computational purpose
because of its close proximity to the users [4]. This provides
support for integrating blockchain and IoT. Therefore, we
provide the integration of blockchain, IoT, and edge networks
to provide secure environment to the IoT users.
Many academicians are working on the integration of IoT,
blockchain, and edge computing. Few attempts have been
made to offload the computation at fog nodes to improve the
delay and rate of task completion [5]. The implementation
has been done on semi-private blockchain also known as
consortium blockchain for managing reputation ledger of
fog vehicles. Proof of elapsed time is used as consensus
mechanism which performs the voting between the delegated
members. Another approach known as Edgechain, which
works on the basis of credits has been made to allocate
resources to the IoT devices [6]. Smart contracts are used
to pre-define the rules that prioritize the allocation of edge
resources to the IoT devices. The game theory is used
to model the interactions amongst the miners and edge
computing service providers [7]. In this technique also,
edge resources are used to perform the operations of the
blockchain. Modified proof of stake consensus approach is
used in pervasive edge environments which can produce new
blocks by consuming less energy [8]. Strategy has been also
proposed in this paper for quick retrieval of latest blocks
which improves the access time of the blocks. The same
shortcomings has been observed in mobile devices. Edge
servers are used to perform computations in blockchain
based mobile application. POEM+ is the auction mechanism
used for offloading computations among the heterogeneous
edge nodes [9]. In our proposed architecture, the edge nodes
and near-by devices are used to allocate the resources to
IoT devices for performing blockchain tasks in an efficient
manner. We use reverse stackelberg game theory for the
allocation of efficient number of resources with optimum cost.
The auction mechanism has also been used for performing
bidding between the miners for getting resources from the
near-by devices. In this way, computation intensive tasks are
either offloaded either to edge nodes and near-by devices.
The main contribution of paper is as follows:
1) Offloading of blockchain computations is done on edge
nodes and near-by devices.
2) Bidding is done amongst the edge nodes to maximize
the profit of edge nodes
2022 International Conference on Emerging Smart Computing and Informatics (ESCI) 
AISSMS Institute of Information Technology, Pune, India. Mar 9-11, 2022
978-1-6654-0073-2/22/$31.00 ©2022 IEEE 1
20
22
 In
te
rn
at
io
na
l C
on
fe
re
nc
e 
on
 E
m
er
gi
ng
 S
m
ar
t C
om
pu
tin
g 
an
d 
In
fo
rm
at
ic
s (
ES
CI
) |
 9
78
-1
-6
65
4-
00
73
-2
/2
2/
$3
1.
00
 ©
20
22
 IE
EE
 |
 D
O
I: 
10
.1
10
9/
ES
CI
53
50
9.
20
22
.9
75
82
29
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:32:09 UTC from IEEE Xplore.  Restrictions apply. 
3) Reverse stackelberg game is used to offload the mining
tasks to the edge nodes. Nash equilibrium is also reached
which optimizes the demand of the resource and price.
4) Few nodes contains meta data stored in blocks to con-
sume less storage.
The rest sections of this paper are organized as follows:
Section II provides the related work done in this field. Pro-
posed framework is given in section III. Section IV discusses
the resource allocation scheme. Experimental evaluation is
presented in section V. Section VI concludes the paper.
II. RELATED WORK
Mobile equipments does not possess much capabilities to
perform the computations required for creation of block in a
blockchain [10]. Joint computation offloading is performed to
complete the computations and coin loaning problem is intro-
duced reduce the over all cost of all mobile equipments. Non-
cooperative game is designed for the competitions amongst
the mobile equipments. Nash equilibrium is also achieved in
the game. Two smart contracts are designed in Ethereum to
execute the trading of the resources.
To avail the benefits of edge computing, computation tasks
of smart devices are offloaded to edge devices [11]. BeCome
model is proposed to perform balancing of resources provided
by the edge devices by using non-dominated sorting genetic
algorithm III. This model makes sure that edge are not
underloaded or overloaded.
FLchain architecture is proposed by the authors for its applica-
bilty in edge networks [12]. In proposed FLchain, blockchain
mining is done at mobile edge computing servers where as
local devices can either act as training node, mining node
or training and mining node. After mining process, all local
updates are stored in a block and then content is shared
globally. Its main applications are edge crowdsensing, edge
data sharing, and edge content caching.
To improve the consensus mechanism, Proof-of-Utility is
proposed to improve the process of block verification [13] in
vehicular edge computing environment. This method content
cashing as well as privacy protection. Its implementation is
done on a real dataset fetched from the uber which shows
better performance as compared to other benchmark methods.
For solving complex proof of work puzzle, edge computing
is taken into consideration for the implementation of mobile
blockchain. Resource management is done by offloading min-
ing task to the Edge computing Service Provider (ESP) [16].
Two-stage Stackelberg game is used for maximizing the profit
of ESP as well as of miners. Backward induction is applied
to access the perfect equilibrium for fixed and variant pricing
schemes. Results proved that maximum profit is achieved in
case of fixed pricing scheme. In case of variant pricing scheme,
ESP motivates more demand of service from the miners and
accordingly achieves profit.
Nowadays, research is mostly focusing on either offloading
the computation intensive taks to other computing platforms
or improving the consensus mechanism in such a way that
it consumes less computations. From the survey being done,
we proposed non-cooperative technique known as reverse
stackelberg for offloading the mining tasks to edge nodes.
III. PROPOSED FRAMEWORK
In our proposed framework, the data is produced by the
IoT devices. To secure the data being generated, the data
is stored securely at the blockchain network. For performing
computation intensive task of consensus, the nearby devices
and edge devices help by sharing their resources.
A. Blockchain network
A decentralized blockchain network is created which stores
the IoT data in secured manner. As the data transactions are
created, these are batched together and collectively these are
stored in the block. The block needs to be verified by the
miners by applying consensus mechanism which are gener-
ally computation intensive. Proof of Work (PoW) consensus
approach is used in our proposed framework.
PoW is a complex mathematical puzzle which is complex
to solve whereas its verification is easy [14]. To solve the
complex puzzle, miners should have good processing power.
There is a competition among the miners as they get rewards
for solving the puzzle. It is very difficult to attack the
blockchain, as attacker must have control of atleast 51% of the
total network’s computational power. This huge requirement of
the computaional power, makes it impossible for the attacker
to attack blockchain based on PoW consensus approach.
The time taken for computation, T= (average verification
speed) * (number of transactions in a block)
The creation of a block using PoW follows a poisson process,
so probability of miner not successfully generating a block is,
P0 = 1− e-αk
where, α −→ complexity level of mining a block
The probability of miner successfully generating a block is,
P = H ∗ e-αk
where, H −→ hashing power of miner
B. Near-by devices
The mining process of blockchain consumes lot of com-
putational power as well as space, due to which IoT devices
generally offload the task of mining. In our scenario, we are
offloading the this task to the near-by devices or the edge
network. Near-by devices are very close to the blockchain
network. Miners at the near-by devices also depends on other
resources because they do not have sufficient resources to
perform the complex puzzle. There exist broker in the system,
which performs the task of auction. Bidding for the resources
is done by the miners to perform their task efficiently. Nego-
tiation of the rental amount is done by the miners with the
broker to get the access of the resources.
2
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:32:09 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 1. Proposed framework
C. Edge network
In edge network, there exists multiple edge devices that are
sufficient to serve the task of mining. If the miners does not
get the sufficient resources from the near-by devices, then the
request of resources is done from edge network. All services
provided by the edge network are of good processing and
accordingly there exist rent for accessing these devices.
IV. RESOURCE ALLOCATION
For the generation of a block, there is a dependency on
the miners for the creation of a block. The miners need huge
amount of computation processing power.
Firstly, bidding is done by the miners while requesting re-
sources. Broker completes the task of bidding and provides
the optimal auction price to them. Broker holds the list of bids
done by miners and selling price of the resource providers.
Broker arranges bids in descending order and selling price of
resource in ascending order. To select the winner among the
resource provider, there is monotonocity in selecting winner as
greedy approach is followed. The method for selecting winner
is also efficient in computation as social welfare maximization
auction is applied [15]. After selection of the winner, auction
price, is conveyed to the miner by the broker as shown in
figure 1.
For obtaining optimization, the mining task may get offloaded
to the edge network. Reverse Stackelberg game is used for
achieving the optimal results. Reverse Stackelberg game is a
non-cooperative game theory in which players have their own
subjectives. Here, miner (leader) will just propose the solution
instead of taking the final decision of selecting optimal price
of the edge resource provider. Now, the provider of edge
resources will follow the proposed decision of the miner. And
then the final decision will be taken by the miner. This is a
multi-stage (m-stage) game. Finally, the nash equilibrium is
achieved and optimal pricing for both is achieved.
Computation of miner’s utility can be expressed as:
Reward per transaction = Rt
Total reward of miner, TR = FR + nRt
FR −→ Fixed reward of miner,
n −→ number of transactions in a block
If resources are consumed from near-by devices, then net profit
of miner is expressed as:
U1 = TR− pnrND
If resources are consumed from edge network, then net profit
3
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:32:09 UTC from IEEE Xplore.  Restrictions apply. 
of miner is expressed as:
U2 = TR− perEN
If resources are consumed from near-by devices as well as
from edge network, then net profit of miner is expressed as:
U3 = U1 − pe(rND − rND)
where,
pn −→ price finalized by broker of near-by devices for con-
suming resources
pe −→ price finalized by resource provider of edge devices for
consuming edge resources
rND −→ Resources consumed of near-by devices
rEN −→ Resources consumed of edge network
Resource requirement of miner and pe are computed every
time, depending on the previous computations and in the
current stage. The solution converges after m-stages and nash
equilbrium is achieved. The optimal price pe is offered to the
miner on the resource demand being made.
The block size of the blockchain is also reduced, as metadata is
stored instead of storing actual data. Few nodes contains meta
data. Information of actual data can be very easily extracted
from the nodes containing complete information. Only those
nodes are selected for storing the complete information, that
can be easily accessed. This reduces the storage requirement
of the entire blockchain network.
V. EXPERIMENTAL EVALUATION
In this section, evaluation of the proposed framework is
done. Implementation of blockchain network is done by using
python 3.7. Implementation of the network is done on i7-
8565U, CPU 1.80GHz, 1992 Mhz, 4 Core(s), 8 Logical
Processor(s). Its multiple nodes are implemented by using
Docker container system. PoW consensus mechanism is used
for computing blockchain. Near-by edge devices are used
for the consuming resources located in the coverage area
of 400 m X 400 m. Edge networks are also connected
to the whole network. When demand of resources is not
completed by the near-by devices, then request is offloaded
to the edge network. Comparison of three techniques is done
with our proposed framework. Three techniques considered
are resources are shared from only near-by devices, only edge
network, and offloading to both using Stackelberg game. Our
proposed framework includes offloading to both using reverse
Stackelberg game. The evaluation parameters considered in
our study are average delay and net profit.
A. Average Delay
Average delay is the time taken to generate the block
by the miner and the time it takes to append block at all
nodes to make the blockchain consistent. Figure 2 displays
the average delays of all compared methods. With the increase
in the number of mining transactions, the average delay of
all methods increases as the processing time also increases.
Results of offloading to both using reverse Stackelberg game
and offloading to both using Stackelberg game are almost
same because of the extra time taken for the number of stages
in reverse Stackelberg game. Only near-by devices and only
Fig. 2. Average delay
Fig. 3. Net profit
edge network methods take more time for processing as they
individually need to fulfill the needs of all miners.
B. Net Profit
All techniques are providing resources to the miners and
getting profit in return. Figure 3 displays the net profit of
different techniques with the increasing mining deadline. As
the mining deadline increases, the profit of all the techniques
increases. Profit is maximum in case of reverse Stackelberg
game, as miners and request providers are seeing profits of
both and reaching a optimal price value of offering resources.
Profit achieved is less in case of Only near-by devices and
only edge network methods because miners have dependency
on single network only.
VI. CONCLUSION
Due to increase in IoT data, security demand of the data
is also increasing. Blockchain network is created to secure
the IoT data. But the mining task of the blockchain is very
computation intensive. So, there exist dependency on resource
providers like near-by devices, edge network for providing
resources to the miners. In our proposed framework, bidding
of the resources is done by the miners from near-by devices
and edge network. Optimal profit is achieved by using reverse
stackelberg game and auction mechanism. Less storage is
consumed by few blocks of the blockchain network as meta
data is stored in some blocks. Experimental results proved
that average delay is almost similar to the technique using
stackelberg game approach but profit is maximum in case
of reverse stackelberg game. In future, This work can be
implemented on real time data produced by some IoT devices.
4
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:32:09 UTC from IEEE Xplore.  Restrictions apply. 
REFERENCES
[1] Dachyar, M., Zagloel, T.Y.M. and Saragih, L.R., 2019. Knowledge
growth and development: internet of things (IoT) research, 2006–2018.
Heliyon, 5(8), p.e02264.
[2] Nakamoto, S., 2008. Bitcoin: A peer-to-peer electronic cash system.
Decentralized Business Review, p.21260.
[3] Ashik, M.H., Maswood, M.M.S. and Alharbi, A.G., 2020, June.
Designing a Fog-Cloud architecture using blockchain and analyzing
security improvements. In 2020 International Conference on Electri-
cal, Communication, and Computer Engineering (ICECCE) (pp. 1-6).
IEEE.
[4] Ma, X., Wang, S., Zhang, S., Yang, P., Lin, C. and Shen, X.S.,
2019. Cost-efficient resource provisioning for dynamic requests in
cloud assisted mobile edge computing. IEEE Transactions on Cloud
Computing.
[5] Iqbal, S., Malik, A.W., Rahman, A.U. and Noor, R.M., 2020.
Blockchain-based reputation management for task offloading in micro-
level vehicular fog network. IEEE Access, 8, pp.52968-52980.
[6] Pan, J., Wang, J., Hester, A., Alqerm, I., Liu, Y. and Zhao, Y.,
2018. EdgeChain: An edge-IoT framework and prototype based on
blockchain and smart contracts. IEEE Internet of Things Journal, 6(3),
pp.4719-4732.
[7] Xiong, Z., Zhang, Y., Niyato, D., Wang, P. and Han, Z., 2018. When
mobile blockchain meets edge computing. IEEE Communications
Magazine, 56(8), pp.33-39.
[8] Huang, Y., Zhang, J., Duan, J., Xiao, B., Ye, F. and Yang, Y., 2019, July.
Resource allocation and consensus on edge blockchain in pervasive
edge computing environments. In 2019 IEEE 39th international con-
ference on distributed computing systems (ICDCS) (pp. 1476-1486).
IEEE.
[9] Li, Y., Wu, J. and Chen, L., 2019, August. POEM+: Pricing longer
for mobile blockchain computation offloading with edge computing.
In 2019 IEEE 21st International Conference on High Performance
Computing and Communications; IEEE 17th International Conference
on Smart City; IEEE 5th International Conference on Data Science and
Systems (HPCC/SmartCity/DSS) (pp. 162-167). IEEE.
[10] Zhang, Z., Hong, Z., Chen, W., Zheng, Z. and Chen, X., 2019. Joint
computation offloading and coin loaning for blockchain-empowered
mobile-edge computing. IEEE Internet of Things Journal, 6(6),
pp.9934-9950.
[11] Xu, X., Zhang, X., Gao, H., Xue, Y., Qi, L. and Dou, W., 2019.
BeCome: Blockchain-enabled computation offloading for IoT in mobile
edge computing. IEEE Transactions on Industrial Informatics, 16(6),
pp.4187-4195.
[12] Nguyen, D.C., Ding, M., Pham, Q.V., Pathirana, P.N., Le, L.B., Senevi-
ratne, A., Li, J., Niyato, D. and Poor, H.V., 2021. Federated learning
meets blockchain in edge computing: Opportunities and challenges.
IEEE Internet of Things Journal.
[13] Dai, Y., Xu, D., Zhang, K., Maharjan, S. and Zhang, Y., 2020.
Deep reinforcement learning and permissioned blockchain for content
caching in vehicular edge computing and networks. IEEE Transactions
on Vehicular Technology, 69(4), pp.4312-4324.
[14] Du, Y., Wang, Z. and Leung, V., 2021. Blockchain-Enabled Edge
Intelligence for IoT: Background, Emerging Trends and Open Issues.
Future Internet, 13(2), p.48.
[15] Jiao, Y., Wang, P., Niyato, D. and Xiong, Z., 2018, May. Social welfare
maximization auction in edge computing resource allocation for mobile
blockchain. In 2018 IEEE international conference on communications
(ICC) (pp. 1-6). IEEE.
[16] Xiong, Z., Feng, S., Niyato, D., Wang, P. and Han, Z., 2018, May.
Optimal pricing-based edge computing resource management in mobile
blockchain. In 2018 IEEE International Conference on Communica-
tions (ICC) (pp. 1-6). IEEE.
5
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:32:09 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Error
  /CompatibilityLevel 1.6
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1200
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice