A Modified Blockchain DPoS Consensus Algorithm Based on Anomaly Detection and Reward-Punishment
 
A Modified Blockchain DPoS Consensus Algorithm 
Based on Anomaly Detection and Reward-
Punishment 
 
 
School of Microelectronics and Communication Engineering 
Chongqing University 
Chongqing, China 
wyx@cqu.edu.cn; LiangLiang@cqu.edu.cn; BoZhou@cqu.edu.cn; fengxinsong@cqu.edu.cn 
 
Abstract—The blockchain consensus algorithm can be 
leveraged to enhance IoT security and promote the efficiency of 
collaboration among IoT nodes. Delegated Proof of Stake (DPoS) 
can simultaneously meet the low-cost and high-efficiency 
requirements and improve the service quality of node 
collaboration. However, the malicious attacks, selfishness and 
insufficient enthusiasm of collaborative nodes can affect DPoS 
consensus process. In view of these challenges, we modify DPoS 
consensus algorithm, and design a self-selecting abnormal data 
detection algorithm to identify abnormal data from malicious 
attacks and selfishness behavior of nodes. Meanwhile, a game 
theory-based reward and punishment incentive mechanism is 
proposed to improve the voting enthusiasm of nodes. Simulation 
results show that the proposed mechanism can effectively reduce 
the effect of malicious attacks and nodes selfishness in DPoS 
consensus process. 
Keywords—blockchain, consensus algorithm, game theory, 
internet of things 
I. INTRODUCTION  
Internet of Things (IoT) is considered as one of the most 
revolutionary technologies in this century, which has been 
widely adopted in smart home, automotive industries and so on 
[1]. In the IoT context, there are massive energy-constrainted 
nodes, and it is particularly important to establish collaboration 
between them for ensuring efficient and orderly system 
operation. Due to existence of abnormal nodes, it is a challenge 
to establish credible collaboration. For example, a node may 
send different decision-making information or even false 
message to other nodes, which leads to information 
inconsistency. In addition, since there are millions of nodes in 
IoT, the cost of collaboration between nodes is very high, and 
the collaboration is vulnerable to malicious attacks. Meanwhile, 
the lack of a unified IoT security standard makes it difficult to 
provide systematic protection for IoT collaboration [2]. To this 
end, it is necessary to establish a safe and reliable collaboration 
mechanisms in IoT. 
As a distributed ledger technology, blockchain has the 
characteristics of decentralization, security and node scalability, 
which has been applied to digital finance, intelligent 
manufacturing, supply chain management [3]. Using the 
blockchain technology, the IoT system can have the advantages 
of low operating costs, decentralized resource management, 
and strong anti-attack capabilities. The blockchain consensus 
algorithm can be used to enhance IoT security and improve the 
efficiency of collaboration among IoT nodes [4]. Typical 
blockchain consensus algorithms include Proof of Work (PoW) 
[5], Proof of Stake (PoS) [5], Delegated Proof of Stake (DPoS) 
[6], etc. Among them, PoW consensus algorithm is widely 
used in cryptocurrencies, e.g., Bitcoin and Ethereum. However, 
PoW has high consensus delay and consumes a large amount 
of computational power. Compared with PoW, PoS consensus 
algorithm changes workload into the number and duration of 
stakes in nodes, and thus saves the cost of blockchain 
maintenance. But the stakes in PoS is beneficial to wealthy 
nodes, and thus the decentralization of PoS is weaker than 
PoW. DPoS inherits the advantages of low computational 
power consumption in PoS, and which can simultaneously 
meet the low-cost and high-efficiency requirements of node 
collaboration in IoT context. Since DPoS uses voting process 
to select proxy nodes, there are two factors in IoT context that 
affect the performance of DPoS algorithm. One is the abnormal 
voting that affects the selection results of the proxy nodes. The 
other is the lack of voting enthusiasm [6] that affects the 
consensus delay. To modify DPoS for IoT collaboration, 
abnormal data detection algorithm and incentive mechanism 
should be well designed to address the above challenges. 
To address abnormal voting issue, anomaly data detection 
algorithm can be used to identify abnormal data. Existing 
researches do not consider the impact of the amount and 
density of data, which can affect the performance of anomaly 
data detection algorithm. 
Selfishness and malicious attacks can affect node voting 
enthusiasm. As a solution to improve the node enthusiasm, the 
incentive mechanisms have two categories: monetary incentive 
and reciprocal incentive. In monetary incentive mechanism, the 
nodes who meet other nodes’ requests will be rewarded. The 
reciprocal incentive mechanism needs to calculate the node's 
reputation and other indicators that can reflect the behavior of 
the node. Based on the indicators, the reciprocal incentive 
gives rewards and punishment to different nodes. 
 
283
2021 13th International Conference on Communication Software and Networks
Yaxing Wei, Liang Liang*, Bo Zhou, Xinsong Feng
978-1-6654-3182-8/21/$31.00 ©2021 IEEE
20
21
 1
3t
h 
In
te
rn
at
io
na
l C
on
fe
re
nc
e 
on
 C
om
m
un
ic
at
io
n 
So
ftw
ar
e 
an
d 
N
et
w
or
ks
 (I
C
C
SN
) |
 9
78
-1
-6
65
4-
31
82
-8
/2
0/
$3
1.
00
 ©
20
21
 IE
EE
 | 
D
O
I: 
10
.1
10
9/
IC
C
SN
52
43
7.
20
21
.9
46
36
34
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:58 UTC from IEEE Xplore.  Restrictions apply. 
 
Fig. 1. Modified DPoS consensus process in blockchain-enabled IoT 
network. 
In this paper, we design a mechanism based on modified 
blockchain DPoS consensus algorithm to address abnormal 
voting and insufficient voting enthusiasm issues. The main 
contributions can be summarized as follows: 1) Considering 
the amount and density of nodes’ data, we propose a Self-
selecting Abnormal data Detection Algorithm (SADA) to 
identify abnormal voting data efficiently and accurately. 2) We 
propose a Game Theory-based reward and punishment 
Incentive Mechanism (GTIM) to enhance the voting 
enthusiasm of nodes and reduce the impact of malicious attack. 
The rest of this paper is organized as follows. Section II 
describes the main elements in blockchain-enabled IoT 
network and the DPoS consensus process. Section III 
introduces the proposed SADA. Section IV illustrates the 
GTIM. Simulation results are presented in Section V. Section 
VI concludes our work. 
II. PRELIMINARIES 
A blockchain-enabled IoT network based on DPoS 
typically contains two types of nodes: Voting Nodes (VNs) and 
Proxy Nodes (PNs). The VNs vote for PNs in DPoS consensus 
process. The PNs are nodes selected by VNs for generating 
new blocks. If VNs vote based on trust value, they are defined 
as honest VNs. If the VNs have selfish or malicious behaviors 
in voting process, they are defined as abnormal VNs. The 
abnormal VNs may abstain from voting or vote for nodes with 
low trust value, which affect the consensus process. 
Specifically, the characteristics of abnormal VNs can be 
summarized as follows: 1) The nodes conduct illegal voting, 
and more than 80 percentage of their votes are given to the 
nodes with low trust value. 2) The nodes are unwilling to 
consume their own resources, and thus abstain from voting. 3) 
The nodes take cheating actions to prevent the system from 
identifying abnormal behaviors. 
In order to improve the security and reliability of node 
collaboration in blockchain-enabled IoT network and reduce 
the impact of abnormal behavior on voting process of DPoS, 
we propose a modified DPoS consensus algorithm based on 
SADA and GTIM. SADA is proposed to identify abnormal 
information in voting process. GTIM will increase or decrease 
the trust value and voting capacity of VNs. Since nodes with 
high values have higher probability to obtain block generation 
rewards, GTIM can increase the enthusiasm of nodes to 
participate in voting. Fig. 1 is the consensus process of the 
modified DPoS. In this figure, VNs vote for PNs, then PNs 
generate the new block. The detailed process of modified 
DPoS process can be described as follows: 
      
(a) Detection time with dense data set (b) Detection time with sparse data set 
Fig. 2. Detection time with data set distribution. 
Step 1: VNs broadcast voting data to the network for 
selecting PNs. The voting data of each VN will be identified by 
the proposed SADA, and removed the illegal voting data. 
Step 2: The PNs are selected according to the number of 
votes from all VNs, and the top 100 nodes with the highest 
votes are the PNs in the current voting round. 
Step 3: PNs generate new blocks in turn, and the block 
information will be shared with all PNs via the network 
connection. 
Step 4: The trust values of all nodes will be adjusted by 
GTIM, and broadcasted to the network. The changed trust 
values will affect the voting capacity of each node in the next 
voting round. 
III. SELF-SELECTING ALGORITHM BASED DETECTION OF 
ABNORMAL DATA 
Abnormal data detection algorithm can be used to perform 
anomaly detection on the voting data, thereby reducing the 
impact of abnormal nodes on the consensus process. 
A. Typical Algorithms for Abnormal Data Delectation 
1) k-means clustering algorithm (KC): KC divides the 
voting data set into k groups, and randomly select k data as the 
initial cluster centers. Then it calculates the distance between 
each data and each seed cluster center, and assigns each data to 
the nearest clustering center. 
2) Gaussian mixture model based algorithm (GM): This 
algorithm fits the voting data into a Gaussian distribution, and 
sets the ratio of precision rate to recall rate of voting data as the 
threshold to detect abnormal data. Then it calculates the 
probability density of this Gaussian distribution to compare 
with the abnormal data threshold. If the probability density is 
less than the threshold, the voting data can be identified as 
abnormal data. 
284
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:58 UTC from IEEE Xplore.  Restrictions apply. 
3) One class support vector machine based algorithm 
(OSVM): This algorithm selects part of the voting data as 
training samples, and then constructs a hypersphere. Using this 
hypersphere to classify the test set, and the data which fall 
outside the hypersphere is abnormal data. 
Algorithm 1: (SADA) Self-selecting Abnormal data 
Detection Algorithm 
Input : voting data set 
1 2
{ , ,... }
m
D x x x=  and 
parameters A  and B , execution times n  
Output: abnormal data detection result 
1: for each [1, ]i n  do 
2:     Randomly select part of the sample 
1
D of the data set 
D  
3:     for each [1,3]j   do 
4:         Calculate detection time 
j
t tjand detection result 
vector 
j
V  of 
1
D  within three algorithms respectively 
5:         Traverse the sample of 
1
D  to detect whether it is 
abnormal, and the detection result vector is V  
6:        Calculate correct rate ( ) / dim( )j jr sum V V V=  
7:     end for 
8:     Calculate 
,
( 1,2,3)
i m
h i =  according to formula (1) 
9: end for 
10: Calculate 
,
1
n
i m
i
h
m n
h =

=  
11: choose the algorithm with the smallest 
m
h  to detect 
anomaly to voting data 
 
B. Self-Selecting Abnormal Data Detection Algorithm (SADA) 
We consider the detection performance of the dense and 
sparse data sets under three data anomaly detection algorithms. 
We take the detection time as an indicator to measure the 
detection performance. The detection time with dense data set 
is shown in Fig. 2. The curve of KC changes gently, while the 
other two algorithms change sharply. As the number of nodes 
increases, the advantage of KC becomes more obvious. If the 
data distribution is relatively sparse, the detection time is 
shown in Fig. 3. The three typical algorithms have different 
detection performance under different data distributions. If we 
can automatically choose the most suitable data anomaly 
algorithm based on the data distributions, it can achieve better 
performance. Therefore, we propose SADA to adapt to 
different data distribution to improve detection efficiency and 
accuracy. we design self-selecting function asthree data 
anomaly detection algorithms. We take the detection time as an 
indicator to measure the detection performance. The detection 
time with dense data set is shown in Fig. 2. The curve of KC 
changes gently, while the other two algorithms change sharply. 
As the number of nodes increases, the advantage of KC 
becomes more obvious. If the data distribution is relatively 
sparse, the detection time is shown in Fig. 3. The three typical 
algorithms have different detection performance under 
different data distributions. If we can automatically choose the 
most suitable data anomaly algorithm based on the data 
distributions, it can achieve better performance. Therefore, we 
propose SADA to adapt to different data distribution to 
improve detection efficiency and accuracy. we design self-
selecting function as: 
 ( , ) (1 )A Bh t r t r= −  () 
where t  is the detection time, r  is correct rate. A and B are 
positive parameters with 1A B+ = . The values of A  and 
B are determined by nodes’ different requirements for 
detection time and accuracy respectively.  The detailed SADA 
is described as Algorithm 1. 
IV. GAME-THEORY-BASED REWARD AND PUNISHMENT 
INCENTIVE MECHANISM 
We establish a game model to this dynamic voting process 
and GTIM to improve the voting enthusiasm of nodes. 
A. Voting Game Model 
We construct the voting process as a static non-cooperative 
game, which can be expressed as { , , }PL S U . PL  refers to 
the node set, S  is the strategy set of nodes, and U  represents 
the utility function set of nodes. 
Player: The node set is 
l
PL PL= , where l  refers to the 
type of a node, and 1,2,3l = . The node set includes honest 
nodes 
1
PL , selfish nodes 
2
PL and malicious nodes 
3
PL . Both 
selfish and malicious nodes are called abnormal nodes. 
Strategy: The strategy set is 
l
S S= . l  is the type of 
voting strategy, and 1,2,3l = . Honest nodes only vote for 
nodes with high trust. Malicious nodes always vote for nodes 
with low trustworthiness. Selfish nodes prefer rational voting, 
they abandon some votes or even abstain from voting. They 
will randomly change their actual voting proportion based on 
their own interests. The strategy set of honest nodes is denoted 
by 
1
S . As an abnormal node may be a selfish node or a 
malicious node, the strategy set of abnormal nodes is denoted 
by 
2 3
{ , }S S . Where 
2
S  is irrational voting strategy set and 
3
S  
is rational voting strategy set. 
Utility: The maximum number of votes is K and the cost 
of each vote is f . The cost of making {1,2,3... }k K
votes is 
k
V f k=  . After each voting round, the reward get 
by a honest node is 
r
R K g w=   , whereg is the reward 
of each vote and 
r
w is the reward weight. The utility function 
of an honest node can be expressed as: 
 ( )
h k r
U R V K g w f= − =   −  () 
285
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:58 UTC from IEEE Xplore.  Restrictions apply. 
Selfish node can do some extra work such as ultilizing 
zombie [7] to anti-detect by IoT system. We denote the cost of 
selfish node’s extra works for anti-tracking as ˆ( , )
j
f j a b= , 
and we have ˆ ˆ
a b
f f . ˆ
a
f  and ˆ
b
f  are the anti-tracking cost 
under irrational voting and rational voting respectively. We set 
the penalty cost of each vote is 
p
f , the penalty cost of 
abstaining voting is q
f  , and the penalty weight is p
w . If 
voting strategy belongs to  
2
S , the penalty cost of each voting 
node is 
a
f . It can be expressed as 
 a p p
f K f w=    () 
If voting strategy belongs to 
3
S , the penalty cost of each 
voting node is 
b
f . And the number of abstentions of node i is 
t
N in round t . The penalty factor is 
t
w , 
b
f can be expressed 
as 
 b t t q
f N w f=    () 
The purpose of abnormal nodes is to reduce the overall 
revenue of the system, and the cost of voting losses for honest 
nodes is the utility for abnormal nodes. The cost of illegal 
voting is related to the voting strategy of abnormal nodes and 
the number of illegal votes, which is denoted as 
( , )
j
f j a b= , and we have 
a b
f f . 
For malicious nodes, the utility function is: 
 m k j
U V f= −  () 
For selfish nodes, the utility function is: 
 ˆ
s k j j
U V f f= − −  () 
Assuming that the probability of malicious nodes is P , 
and the probability of selfish nodes is 1 P− . 
B. Nash Equilibrium Analysis 
Considering the voting strategy of abnormal nodes, we 
analyze two different cases of our game model respectively. 
1) Two type abnormal nodes adopt the same voting strategy 
The utility of strategy belongs to 
2
S  and 
3
S  as follows: 
 
2
ˆ( ) ( ) (1 )( )
k a k a a
u S P V f P V f f= − + − − −  () 
 
3
ˆ( ) ( ) (1 )( )
k b k b b
u S P V f P V f f= − + − − −  () 
If the abnormal node’s benefit with voting strategy 
3
S  is 
greater than that with strategy 
2
S . It requires 
 0 1
ˆ ˆ
b a
b a
f f
P
f f
−
  −
+
 () 
The above condition is always satisfied. If abnormal nodes 
all use rational voting, a Nash equilibrium can be obtained in 
the game. If the abnormal node’s benefit with voting strategy 
2
S  is greater than that with strategy 
3
S . It requires 
 1 1
ˆ ˆ
b a
b a
f f
P
f f
−
−  
+
  () 
However, the above condition cannot be satisfied, the Nash 
equilibrium does not exist in this case. 
2) Two type abnormal nodes adopt different voting strategies 
 
2
ˆ( ) ( ) (1 )( )
k a k b b
u S P V f P V f f= − + − − − () 
 
3
ˆ( ) ( ) (1 )( )
k b k a a
u S P V f P V f f= − + − − − () 
If the abnormal node’s benefit with voting strategy 
3
S is 
greater than 
2
S . It requires 
3 2
( ) ( )u S u S , we get 
 1 1
ˆ ˆ 2( )
a b
a b a b
f f
P
f f f f
−
−  
− + −
  () 
The existence of Nash equilibrium depends on P . If the 
value of P  is appropriate, the Nash equilibrium exists. If the 
abnormal node’s utility belongs to 
2
S  is greater than that with 
strategy belongs to 
3
S , it requires 
3 2
( ) ( )u S u S , it needs 
satisfy 
 0 1
ˆ ˆ 2( )
a b
a b a b
f f
P
f f f f
−
  −
− + −
   () 
The existence of Nash equilibrium depends on P .In 
summary, at least one Nash equilibrium exists. 
C. Reward-Punishment Mechanism 
The node is rewarded with trust value if it votes honestly. 
The trust rewards and punishments are defined as follows: 
 
( )
( )
( )
( )
( )
ii
ii
ii
ii
V t
M t
i G t
M t
P t


= 
−

   () 
where ( )
ii
V t  refers to the total number of honest node’s 
votes obtained from other nodes, and ( )
ii
M t is total 
number of valid votes of all nodes. ( )
ii
G t  represents the 
number of  malicious node’s irrational votes, or the number of 
286
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:58 UTC from IEEE Xplore.  Restrictions apply. 
selfless node’s abstentions in ration voting. The trust value of 
node is updated as 
 ( 1) ( ) ( )
i i i
C t C t P t+ = +  () 
( )
i
C t  is the trust value of the node i in round t .The 
voting capacity of each round of nodes is 
 ( 1) ( 1)
i i
Cap t C t + = +   () 
where   is the voting capacity parameter. 
V. SIMULATION AND DISCUSSION 
A. Simulation Setting 
Similar to [8] and [9], we set the number of nodes 
participating in the voting is 1000. In each round, the total 
rounds of voting is 1000, and the number of proxy nodes 
selected of voting is 100. The reward for each vote $g=85$, the 
reward weight 0.5
r
W = , the penalty for irrational voting  
of abnormal nodes 80
p
f = , the penalty for rational voting 
50
q
f = , and the penalty weight is 0.3
p
w = . 
B. Simulation Analysis 
when using the reward-punishment incentive mechanism, 
honest nodes are more likely to vote honestly, while abnormal 
voting behaviors will decrease. We can see the average utility 
converges to a stable value as the number of voting iterations 
increases from Fig. 4. For abnormal node, at the beginning, the 
utility of the abnormal node is negative, then the abnormal 
node tends to be more rational, and the abnormal node 
behavior gradually decreases. Fig. 3 shows the system utility 
with the increase of voting rounds of the consensus algorithm. 
As the number of voting iterations increases, the system utility 
increases and eventually tends to be stable. This is because 
when using the reward-punishment incentive mechanism, 
honest nodes are more likely to vote honestly, while abnormal 
voting behaviors will decrease. Fig. 4 presents the average 
utility of each abnormal node and each honest node. From this 
figure, we can see the average utility converges to a stable 
value as the number of voting iterations increases. The honest 
node has higher utility. For abnormal node, at the beginning, 
the utility of the abnormal node is negative, then the abnormal 
node tends to be more rational, and the abnormal node 
behavior gradually decreases. As the voting strategy of the 
abnormal node tends to be honest voting, and the utility begins 
to increase. 
Fig. 5 shows the average trust value of each node. The trust 
value of the honest node  always is improved, and finally 
converges to a stable value. The trust value of abnormal nodes 
(decrease firstly and then increase. For abnormal nodes, 
especially selfish nodes, illegal voting will reduce their trust 
values, and then increase. For abnormal nodes, especially 
selfish nodes, illegal voting will reduce their trust values, and 
the probability to be selected as PNs is decreased. Therefore, 
the abnormal node tends to vote honestly, then the trust value 
increases, and finally converges to a stable value.  
The voting capacity of a node is related to the 
trustworthiness of the node. Fig. 6 gives the voting capability 
fluctuation of each node. firstly, the abnormal node’s voting 
strategy is illegal voting, the ( )
i
P t  is negative value, and the 
fluctuation is decided by ( )
i
P t , the fluctuation of abnormal 
node voting capability is also be negative, under the GTIM, the 
abnormal node gradually vote honestly, and the change 
tendency of ( )
i
P t  tends to decrease, finally, the ( )
i
P t  tends 
to stable, and the fluctuation also tends to zero. The honest 
nodes vote honestly, the possibility to be PN depends on their 
trust value, with the increasing of voting round, the change of 
trust value tends to become slow, and the fluctuation decreases, 
finally also becomes zero. 
 
Fig. 3. System utility. 
 
Fig. 4. Utility of each node. 
 
Fig. 5. Trust value of each node. 
287
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:58 UTC from IEEE Xplore.  Restrictions apply. 
 
Fig. 6. Voting capability fluctuation of each node. 
VI. CONCLUSION AND FUTURE WORK 
In this article, a DPoS consensus algorithm incentive 
mechanism based on game theory is proposed to encourage 
voting nodes to participate in voting. At the same time, we 
propose an abnormal data detection algorithm to detect the 
voting abnormal data and reduce their impact on the voting 
results of DPoS proxy nodes.  
REFERENCES 
[1] A. Mahanty, G. Singh, S. Som and S. K. Khatri, “Security Issues and 
Challenges in Perception Layer of Smart Healthcare?” 2018 7th 
International Conference on Reliability, Infocom Technologies and 
Optimization (Trends and Future Directions) (ICRITO), Noida, India, 
2018, pp. 639-644. 
[2] China Unicom, “ ‘5G+Blockchain’ Integrated Development and 
Application White Paper (2019),” White paper, 2019. [Online]. 
Available: https://cloud.tencent.com/developer/article/1555589.I. S. 
Jacobs and C. P. Bean, “Fine particles, thin films and exchange 
anisotropy,” in Magnetism, vol. III, G. T. Rado and H. Suhl, Eds. New 
York: Academic, 1963, pp. 271–350. 
[3] Y. Li, X. Wang, X. Gan, H. Jin, L. Fu and X. Wang, “Learning-Aided 
Computation Offloading for Trusted Collaborative Mobile Edge 
Computing,” in IEEE Transactions on Mobile Computing,2019.R. 
Nicole, “Title of paper with only first word capitalized,” J. Name Stand. 
Abbrev., in press. 
[4] M. A. Ferrag, M. Derdour, M. Mukherjee, A. Derhab, L. Maglaras and 
H. Janicke, “Blockchain Technologies for the Internet of Things: 
Research Issues and Challenges,” in IEEE Internet of Things Journal, vol. 
6, no. 2, pp. 2188-2204, April 2019. 
[5] B. Cao, Y. Li, L. Zhang, L. Zhang, S. Mumtaz, Z. Zhou, and M. Peng, 
“When Internet of Things Meets Blockchain: Challenges in Distributed 
Consensus,” in IEEE Network, vol. 33, no. 6, pp. 133-139, Nov.-
Dec.2019. 
[6] G. Xu, Y. Liu and P. W. Khan, “Improvement of the DPoS Consensus 
Mechanism in Blockchain Based on Vague Sets,” in IEEE Transactions 
on Industrial Informatics, vol. 16, no. 6, pp. 4252-4259, June 2020. 
[7] M. Mousavi and A. Klein, “Energy and Social Cost Minimization for 
Data Dissemination in Wireless Networks: Centralized and Decentral- 
ized Approaches,” in IEEE Transactions on Vehicular Technology, vol. 
69, no. 5, pp. 5521-5534, May 2020. 
[8] M. Pouryazdan, C. Fiandrino, B. Kantarci, D. Kliazovich, T. Soyata and 
P. Bouvry, “Game-Theoretic Recruitment of Sensing Service Providers 
for Trustworthy Cloud-Centric Internet-of-Things (IoT) Applications,” 
2016 IEEE Globecom Workshops (GC Wkshps), Washington, DC, 2016,  
pp. 1-6. 
[9] Zhuo Lu, Wenye Wang, Cliff Wang, “How can botnets cause storms? 
Understanding the evolution and impact of mobile botnets,” IEEE 
INFOCOM 2014 - IEEE Conference on Computer Communications, 
Toronto, ON, 2014, pp. 1501-1509. 
 
288
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:58 UTC from IEEE Xplore.  Restrictions apply. 
		2022-08-24T18:02:37-0400
	Preflight Ticket Signature