Cloud/Fog Computing Resource Management and Pricing for Blockchain Networks
IEEE INTERNET OF THINGS JOURNAL, VOL. 6, NO. 3, JUNE 2019 4585
Cloud/Fog Computing Resource Management
and Pricing for Blockchain Networks
Zehui Xiong , Student Member, IEEE, Shaohan Feng, Student Member, IEEE, Wenbo Wang , Member, IEEE,
Dusit Niyato , Fellow, IEEE, Ping Wang , Senior Member, IEEE, and Zhu Han, Fellow, IEEE
Abstract—Public blockchain networks using proof of work
(PoW)-based consensus protocols are considered as a promising
platform for decentralized resource management with financial
incentive mechanisms. In order to maintain a secured, universal
state of the blockchain, PoW-based consensus protocols finan-
cially incentivize the nodes in the network to compete for the priv-
ilege of block generation through cryptographic puzzle solving.
For rational consensus nodes, i.e., miners with limited local com-
putational resources, offloading the computation load for PoW to
the cloud/fog providers (CFPs) becomes a viable option. In this
paper, we study the interaction between the CFPs and the min-
ers in a PoW-based blockchain network using a game theoretic
approach. In particular, we propose a lightweight infrastructure
of the PoW-based blockchains, where the computation-intensive
part of the consensus process is offloaded to the cloud/fog. We for-
mulate the computation resource management in the blockchain
consensus process as a two-stage Stackelberg game, where the
profit of the CFP and the utilities of the individual miners are
jointly optimized. In the first stage of the game, the CFP sets
the price of offered computing resource. In the second stage, the
miners decide on the amount of service to purchase accordingly.
We apply backward induction to analyze the subgame perfect
equilibria in each stage for both uniform and discriminatory pric-
ing schemes. For uniform pricing where the same price applies
to all miners, the uniqueness of the Stackelberg equilibrium is
validated by identifying the best response strategies of the min-
ers. For discriminatory pricing where the different prices are
applied, the uniqueness of the Stackelberg equilibrium is proved
by capitalizing on the variational inequality theory. Further, the
real experimental results are employed to justify our proposed
model.
Index Terms—Blockchain, computation offloading, game the-
ory, pricing, proof-of-work, variational inequalities (VIs).
Manuscript received May 28, 2018; revised August 29, 2018; accepted
September 17, 2018. Date of publication September 24, 2018; date of cur-
rent version June 19, 2019. This work was supported in part by WASP/NTU
under Grant M4082187 (4080), in part by the Singapore MOE Tier 1 under
Grant 2017-T1-002-007 RG122/17 and MOE Tier 2 under Grant MOE2014-
T2-2-015 ARC4/15 and Grant NRF2015-NRF-ISF001-2277, in part by EMA
Energy Resilience under Grant NRF2017EWT-EP003-041, in part by the
U.S. MURI, and in part by the NSF under Grant CNS-1717454, Grant
CNS-1731424, Grant CNS-1702850, Grant CNS-1646607, and Grant ECCS-
1547201. An earlier version of this paper was accepted by IEEE ICC in [1].
(Corresponding author: Ping Wang.)
Z. Xiong, S. Feng, W. Wang, and D. Niyato are with the School
of Computer Science and Engineering, Nanyang Technological University,
Singapore.
P. Wang is with the Department of Electrical Engineering and
Computer Science, York University, Toronto, ON M3J 1P3, Canada (e-mail:
pingw@yorku.ca).
Z. Han is with Electrical and Computer Engineering Department and the
Computer Science Department, University of Houston, Houston, TX 77204
USA, and also with the Department of Computer Science and Engineering,
Kyung Hee University, Seoul 130-701, South Korea.
Digital Object Identifier 10.1109/JIOT.2018.2871706
I. INTRODUCTION
BLOCKCHAIN networks were first designed to be the
backbone of a distributed, permissionless/public database
for recording the transactional data of cryptocurrencies in
a tamper-proof and totally ordered manner [2], [3]. The
blockchain network is essentially organized as a virtual over-
lay peer-to-peer (P2P) network, where the database state is
maintained in a purely decentralized manner and any node
in the network is allowed to join the state maintenance
process without the need of identity authentication. As indi-
cated by the name “blockchain,” the records of transactions
between nodes in the network are organized in a data struc-
ture known as the “block.” A series of blocks are arranged
in a strictly increasing-time order by a linked-list-like data
structure known as the chain of blocks (i.e., blockchain). The
blockchain is maintained as the appending-only local replicas
by the nodes participating in the replicated consensus pro-
cess. Unlike the traditional distributed ledger systems using the
practical Byzantine fault-tolerant [4] or Paxos [5] protocols, a
permissionless blockchain network no longer needs any cen-
tralized authorities (e.g., authenticating/authorizing servers)
and is able to accommodate a much larger number of consen-
sus nodes in the network [6]. Such an objective is achieved
by blockchain networks with the Nakamoto consensus pro-
tocol [2] (or protocols alike). Per the Nakamoto protocol,
financial incentive is introduced into the consensus process to
ensure that the best strategies of the pseudonymous consensus
nodes is to follow the given rules of blockchain mainte-
nance/extension. Otherwise they will suffer from monetary
loss.
The core component of the Nakamoto consensus proto-
col is a computation-intensive process known as proof of
work (PoW). For the consensus nodes that propose their local
blockchain view to be the new state of the blockchain database,
PoW requires them to solve a cryptographic puzzle, i.e., to find
a partial preimage satisfying certain conditions of a hash map-
ping based on the proposed blockchain state. According to [7],
a typical PoW process is executed in the following steps. First,
with an input contribution function, a consensus node validates
and bundles a subset of unconfirmed transactions into a new
block. Then, the consensus node computes the PoW solution
to the cryptographic puzzle, which is formed based on the
value of the new block. Immediately after the puzzle solution
is obtained, the consensus node broadcasts the new block to
the entire network as its own proposal of the new blockchain
head. On the other hand, the rest of nodes in the network run a
2327-4662 c© 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-4440-941X
https://orcid.org/0000-0002-7500-8723
https://orcid.org/0000-0002-7442-7416
https://orcid.org/0000-0002-1599-5480
4586 IEEE INTERNET OF THINGS JOURNAL, VOL. 6, NO. 3, JUNE 2019
chain validation-comparison function to determine whether to
accept such a proposal or not. In the blockchain network, an
honest consensus node follows “the-longest-chain” rule and
adopts the longest one among the received blockchain pro-
posals to update its local view of the blockchain state. In
such a process, the nodes that devote their computational
resources to the generation of new blocks (i.e., PoW solu-
tions) are also known as the block “miners.” This is mainly
because according to the Nakamoto protocol, a certain amount
of blockchain tokens will be awarded to the node that has
its proposed blockchain state accepted by the majority of
the network. The theoretic proof and analysis for secure and
private communication with the Nakamoto protocol can be
found in [7].
With the blossom of various cryptocurrencies, permission-
less blockchains are considered to be especially appropriate
for constructing the decentralized autonomous resource man-
agement framework in (wireless) communication networks.
Specifically, when the resource management relies on the
design of incentive mechanisms (e.g., resource access con-
trol [8] and proactive edge caching [9]), permissionless
blockchains are able to provide fast implementation of the
self-organized trading platform with small investment in the
operational infrastructure. Furthermore, with the PoW-based
Nakamoto consensus protocol, the users of a decentralized
application (DApp) are incentivized to turn themselves from
the free riders of the blockchain network into consensus nodes
(i.e., block miners) for more profit. However, due to the
required computation contribution by the PoW, the compu-
tationally lightweight nodes such as the Internet of Things
(IoT) devices may be prevented from directly participat-
ing in the consensus process. To alleviate such limitation,
“cloud mining” becomes a viable option where the mobile
devices offload their storage load and/or computation tasks in
PoW to the cloud/fog providers (CFPs) or even other edge
devices [10], [11]. In the case of computation offloading, the
lightweight devices may employ the existing cloud-mining
protocols such as Stratum [12] without causing any sig-
nificant transmission overhead. From the perspective of the
blockchain-based DApp’s designer, the benefit of encouraging
cloud-based mining is multifold. First, by incorporating more
consensus nodes, the robustness of the blockchain network
is naturally improved [7]. Second, the user devices may
improve their valuation of the DApps, thanks to the addi-
tional reward obtained in the consensus process. Also, the high
level of user activities may attract more users and in return
further improve the robustness of the underlying blockchain
network.
In this paper, we study the interaction between the computa-
tionally lightweight devices and a CFP, where the lightweight
devices (i.e., block miners) purchase the computing power
from the CFP to participate in the consensus process of a
PoW-based blockchain for block-mining revenues. Game the-
ory can be leveraged as a promising mathematical tool to
analyze the interactions among the CFP and block miners. For
example, Zhang et al. [13] formulated a Stackelberg game to
solve the resource management in fog computing networks,
where the game theoretic study of the market and pricing
strategies are presented. Zhang et al. [14] studied the spec-
trum resource allocation in order to mitigate the interference
management among multiple cellular operators in the unli-
censed system. A multileader multifollower Stackelberg game
is proposed to model the interactions among the operators
and users in unlicensed spectrum. Similarly, we also model
the resource offloading market as a two-stage Stackelberg
game. In the first stage, the CFP sets the unit price for com-
putation offloading. In the second stage, the miners decide
on the amount of services to purchase from the CFP. In
particular, we analyze two pricing schemes [15], i.e., uni-
form pricing where a uniform unit price is applied to all
the miners and discriminatory pricing where different unit
prices are assigned to different miners. The uniform pricing
leads to a straightforward implementation as the CFP does
not need to keep track of information of every miner, and
charging the same prices is fair to all miners. However, from
the perspective of the CFP, discriminatory pricing yields a
higher profit by allowing price adjustment for different min-
ers [16]. The main contributions of this paper are summarized
as follows.
1) We explore the possibility of implementing a permis-
sionless, PoW-based blockchain in a network of compu-
tationally lightweight devices. By allowing computation
offloading to the cloud/fog, we model the interactions
between the rational blockchain miners and the CFP as
a two-stage Stackelberg game.
2) We study both the uniform pricing scheme and the
discriminatory pricing scheme for the CFP. Through
backward induction, we provide a series of analytically
results with respect to the properties of the Stackelberg
equilibrium in different situations.
3) In particular, the existence and uniqueness of
Stackelberg equilibrium are validated by identify-
ing the best response strategies of the miners under
the uniform pricing scheme. Likewise, the Stackelberg
equilibrium is proved to exist and be unique by
capitalizing on the variational inequalities (VIs) theory
under discriminatory pricing scheme.
4) We conduct extensive numerical simulations to evaluate
the performance of the proposed price-based resource
management in blockchain networks. The results show
that the discriminatory pricing helps the CFP to encour-
age more service demand from the miners and achieve
greater profit. Moreover, under uniform pricing, the CFP
has an incentive to set the maximum price for the profit
maximization.
The rest of this paper is organized as follows. Section II
presents a brief review of the related work. We describe
the model of the consensus formation in a permissionless
PoW-based blockchain network and formulate the two-stage
Stackelberg game between the lightweight nodes and the CFP
in Section III. In Section IV, we analyze the optimal service
demand of block miners as well as the profit maximization
of the CFP using backward induction for both uniform and
discriminatory pricing schemes. We present the performance
evaluations in Section V. Section VI concludes this paper with
summary and future directions.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
XIONG et al.: CLOUD/FOG COMPUTING RESOURCE MANAGEMENT AND PRICING FOR BLOCKCHAIN NETWORKS 4587
II. RELATED WORK
A. Public Blockchains, DApps, and Incentive Mechanism
For blockchain networks, the core technological “building
blocks” have been recognized as the distributed database (i.e.,
ledger), the consensus protocol and the executable scripts (i.e.,
smart contract) based on network consensus [17]. From a
data processing point of view, a DApp is essentially a col-
lection of smart contracts and transactional data residing on
the blockchain. The realization of a DApp relies on the dis-
tributed ledger to identify the state/ownership changes of the
tokenized assets. The smart contracts are implemented as
transaction (data)-driven procedures to autonomously deter-
mine the state transition regarding the asset redistribution
among the DApp users [17]. With public blockchains, the
implementation of a DApp does not require a centralized
infrastructure, namely, dedicated storage and computation
provision for the ledger and smart contracts. Instead, the
DApp users are allowed to freely enable their functionalities
among transaction issuing/validation, information propaga-
tion/storage, and consensus participation [17], [18]. More
specifically, the token-based incentive mechanisms in pub-
lic blockchains offload the tasks of resource provision and
system maintenance from the DApp providers to the DApp
users. Thereby, public blockchain networks are considered to
be a suitable platform for implementing the incentive-driven
distributed autonomous organization (DAO) systems.
In recent years, a line of work has been dedicated to the
study in DAO for wireless networking applications based on
public blockchains. In [19], a trading platform for device-to-
device (D2D) computation offloading is proposed using a ded-
icated cryptocurrency network. Therein, resource offloading is
executed between neighbor D2D nodes through smart contract-
based auctions, and the block mining tasks are offloaded to the
cloudlets. In [20], a PoW-based public blockchain is adopted
as the backbone of a P2P file storage market, where the pri-
vacy of different parties in a transaction is enhanced by the
techniques, such as ring signatures and one-time payment
addresses. When identity verification is required for market
access granting, e.g., in the scenarios of autonomous network
slice brokering [21] and P2P electricity trading [22], the pub-
lic blockchains can be adapted into consortium blockchains
by introducing membership authorizing servers with little
modification to the consensus protocols and smart contract
design.
This paper also relates to the classical literature on incen-
tive mechanisms in crowdsensing [23]–[25]. In crowdsensing,
the crowdsensing platform as the service provider offers a
reward as the incentive to attract more crowdsensing user
participation. In the pioneering work [23], Yang et al. consid-
ered two system models: 1) the platform-centric model where
the provider offers a certain amount of reward that will be
shared by the participating users and 2) the user-centric model
where the users have their reserve prices for the participation.
Chakeri and Jaimes [24] designed the incentive mechanisms
for crowdsensing with multiple crowdsourcers, i.e., service
providers. The interactions among the service providers are
modeled as the noncooperative game. Therein, the authors
proposed a discrete time dynamic algorithm utilizing the best
response dynamics to compute the Nash equilibrium of the
modeled game. Chakeri and Jaimes [25] presented the incen-
tive mechanism in a sealed market where the users have
incomplete information on other users’ behavior. The con-
vergence to the Nash equilibrium in such a market is then
analyzed using the well-known best response dynamics.
B. Consensus and Game Theoretic Mining Models in
PoW-Based Blockchains
By the Nakamoto protocol, from a single miner’s point
of view, the process of solving a PoW puzzle involves an
exhaustive query to a collision-resistant hash function (e.g.,
SHA-256), which aims to find a fixed-length hashcode output
with no less than a given number of prefix zeros [2], [7]. For
each individual miner, such a process simulates a Poisson pro-
cess when the required number of prefix zeros is sufficiently
large. For a group of miners independently running their own
PoW processes at the same time, the first miner to obtain the
PoW puzzle solution will have a high probability of getting
its block head proposal acknowledged by the entire network.
Therefore, block mining under the Nakamoto protocol can also
be viewed as a hashing competition, where the probability of
a miner winning the competition is roughly proportional to
the ratio between its devoted hash power1 and the total hash
power in the network.
According to the theoretical analysis in [7], when the PoW-
based blockchain network satisfies the condition of honest
majority in terms of computing power, the probability for
the blockchain state machine to be compromised is negligi-
ble. Therefore, the mainstream research on the PoW-based
consensus protocols focus on the protocol’s incentive com-
patibility and thus the search of miners’ rational strategy to
optimize the reward obtained in the mining process. A plethora
of recent studies [26]–[28] model the mining process in PoW-
based blockchain networks as a noncooperative game, where
rational miners may withhold their newly found blocks with
valid PoW solutions to internationally cause the fork of the
blockchain. In certain conditions of hash power distribution,
it is proved in [26]–[28] that by postponing the newly mined
blocks, rational miners may obtain a higher expected payoff
than fully abiding by the Nakamoto protocol.
In the literature, the most relevant works to this paper
are about the pool-based mining mechanisms. In public
blockchains based on outsourceable PoW schemes, a min-
ing pool is essentially a proxy node in the network that
only enables its local functionalities of transaction issu-
ing/validation and information propagation/storage. The proxy
node offloads the queries to the hash function to the min-
ing workers that subscribe to the pool for mining pay-
ment [17], [18]. It is worth noting that most of the existing
studies consider the pool-based mining from the perspective of
mining workers (i.e., cloud-side resource providers) [29]–[32].
In [29], the process of mining pool formation is modeled as a
coalitional game among the mining workers, which is found to
have an empty core under the proportional payment scheme. In
1We use the hash power and computing power interchangeably throughout
this paper.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
4588 IEEE INTERNET OF THINGS JOURNAL, VOL. 6, NO. 3, JUNE 2019
contrast, the social welfare of miners is considered in [30] and
a geometric-payment pooling strategy is found to be able to
achieve the optimal steady-state utility for the miners. In [31],
the group bargaining solution is adopted by considering the
P2P relationship of the miners. In [32], instead of limiting
the miner subscription to a single mining pool, a computing
power-splitting game is proposed. With the proposed scheme,
the miners play a puzzle-solution game by distributing their
computing power into different pools in order to maximize the
mining reward.
III. SYSTEM MODEL AND GAME FORMULATION
In this section, we first propose the system model of
blockchain under our consideration [33]. Then, we present
the Stackelberg game formulation for the price-based com-
puting resource management in blockchain networks assisted
by cloud/fog computing.
A. Chain Mining Assisted by Cloud/Fog Computing
We consider a public blockchain network using the PoW-
based consensus protocol [1], [34], [35]. The blockchain
network dedicatedly works as the backbone of a specific
DApp, where most of the nodes are limited in their local com-
puting power (e.g., the IoT devices and smart phones in a
typical crowd-sensing market). We assume that the adopted
PoW protocol is ASIC-resistant [18], e.g., using the Ethash-
based PoW scheme [36] or the schemes alike. Then, to
participate in the consensus process, a node only has to solve
the PoW puzzle with general-purpose computing devices.
In the blockchain network, a set of N nodes denoted as
N = {1, . . . , N}, are interested in participating in the con-
sensus process and make extra profit through block mining.
In order to achieve this, these block miners purchase the nec-
essary hash power from a public CFP (e.g., Amazon EC2)
without hassle of managing the infrastructure such as seeking
extra electricity sources [37]. In addition, we consider that the
CFP is able to provide the near-to-end computing units such
as fog nodes or even edge devices which are closer to the
miners2 [38]. As such, the aforementioned PoW puzzle can
be offloaded to the remote cloud or the nearby fog computing
unit. The computing resources offered to the miners is priced
by the CFP.3 Fig. 1 shows the system model of the blockchain
network under our consideration. Note that we assume that the
link between the miners and cloud/fog computing units is suf-
ficiently reliable and secured, which is guaranteed by certain
ready-to-use communication protocols (e.g., Stratum [12]).
The CFP, i.e., the seller, sells the computing services, and
the miners, i.e., the buyers, access and consume this service
from the remote cloud or the nearby fog computing unit.
2Note that this fog unit deployment is also more appropriate in hostile
environment, where the communications with remote cloud are limited and
for the access from personal devices which keep moving, e.g., mobile devices.
3Note that the resource may also include communication resource.
Specifically, we can consider that the communication cost is part of the
price charged by the CFP. In other words, the CFP offers the service as a
bundle which is composed of computing and wireless/wired communication
resources. The energy consumption for the computing and communication is
naturally accounted in the bundle.
Fig. 1. System model of public blockchain application involving PoW.
Each miner i ∈ N determines their individual service demand,
denoted by xi. Additionally, we consider xi ∈ [x, x], in which
x is the minimum service demand, e.g., for blockchain data
synchronization, and x is the maximum service demand gov-
erned by the CFP. Note that each miner has no incentive to
unboundedly increase its service demand due to its financial
burden. Then, let x � (x1, . . . , xN) and x−i represent the ser-
vice demand profile of all the miners and all other miners
except miner i, respectively. As such, the miner i ∈ N with
the service demand xi has a relative computing power (hash
power) αi with respect to the total hash power of the network,
which is defined as follows:
αi(xi, x−i) = xi
∑
j∈N xj
, αi > 0 (1)
such that
∑
j∈N αj = 1.
In the blockchain network, miners compete against each
other in order to be the first one to solve the PoW puz-
zle and receive the reward from the speed game accordingly.
The occurrence of solving the puzzle can be modeled as
a random variable following a Poisson process with mean
λ = (1/600 s) [26]. Note that our model is general that can be
applied with other values of λ easily. The set of transactions to
be included in a block chosen by miner i is denoted as ti. Once
the miner successfully solves the puzzle, the miner needs to
propagate its solution to the whole blockchain network and its
solution needs to reach consensus. Because there is no cen-
tralized authority to verify the validate a newly mined block, a
mechanism for reaching network consensus must be employed.
In this mechanism, the verification needs to be processed by
other miners before the new mined block is appended to the
current blockchain.
The first miner to successfully mine a block that reaches
consensus earns the reward. The reward consists of a fixed
reward denoted by R, and a variable reward which is defined
as rti, where r denotes a given variable reward factor and
ti denotes the number of transactions included in the block
mined by miner i [26]. Additionally, the process of solving the
puzzle incurs an associated cost, i.e., the payment from miner
i to the CFP, pi. The objective of the miners is to maximize
their individual expected utility, and for miner i, it is defined
as follows:
ui = (R+ rti)Pi(αi(xi, x−i), ti)− pixi (2)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
XIONG et al.: CLOUD/FOG COMPUTING RESOURCE MANAGEMENT AND PRICING FOR BLOCKCHAIN NETWORKS 4589
Fig. 2. Two-stage Stackelberg game model of the interactions among the
CFP and miners in the blockchain network.
where P(αi(xi, x−i), ti) is the probability that miner i success-
fully mines the block and its solutions reach consensus, i.e.,
miner i wins the mining reward.
The process of successfully mining a block consists of two
steps, i.e., the mining step and the propagation step. In the min-
ing step, the probability that miner i mines the block is directly
proportional to its relative computing power αi. Furthermore,
there are diminishing chances of wining if one miner chooses
to propagate a block that propagates slowly to other miners in
the propagation step. In other words, even though one miner
may find the first valid block, if its mined block is large,
then this block will be likely to be discarded because of long
latency, which is called orphaning [26]. Considering this fact,
the probability of successful mining by miner i is discounted
by the chances that the block is orphaned, Porphan(ti), which
is expressed by
Pi(αi(xi, x−i), ti) = αi
(
1− Porphan(ti)
)
. (3)
Using the fact that block mining times follow the Poisson dis-
tribution aforementioned, the orphaning probability is approx-
imated as [39]:
Porphan(ti) = 1− e−λτ(ti) (4)
where τ(ti) is the block propagation time, which is a function
of the block size. In other words, the propagation time needed
for a block to reach consensus is dependent on its size ti, i.e.,
the number of transactions in it [26], [40]. Thus, the bigger the
block is, the more time needed to propagate the block to the
whole blockchain network [41]. Same as [26], we assume this
time function is linear, i.e., τ(ti) = z × ti with z > 0 repre-
sents a given delay factor. Note that this linear approximation
is acceptable according to the numerical results from [26].
Additionally, it would be more appropriate to add a constant
term in this function [41], but apparently this constant term
has no effect on our subsequent analytical results. Thus, the
probability that the miner i successfully mines a block and its
solution reaches consensus is expressed as follows:
Pi(αi(xi, x−i), ti) = αie
−λzti (5)
where αi(xi, x−i) is given in (1).
B. Two-Stage Stackelberg Game Formulation
The interaction between the CFP and miners can be mod-
eled as a two-stage Stackelberg game, as illustrated in Fig. 2.
The CFP, i.e., the leader, sets the price in the upper Stage I.
The miners, i.e., the followers, decide on their optimal com-
puting service demand for offloading in the lower Stage II,
being aware of the price set by the CFP. By using backward
induction, we formulate the optimization problems for the
leader and followers as follows.
1) Miners’ Mining Strategies in Stage II: Given the pricing
of the CFP and other miners’ strategies, the miner i determines
its computing service demand for its hash power maximizing
the expected utility which is given as
ui(xi, x−i, pi) = (R+ rti)
xi
∑
j∈N xj
e−λzti − pixi (6)
where pi is the price per unit for service demand of miner i.
The miner subgame problem can be written as follows.
Problem 1 (Miner i Subgame):
maximize
xi
ui(xi, x−i, pi)
subject to xi ∈ [x, x]. (7)
2) CFP’s Pricing Strategies in Stage I: The profit of the
CFP is the revenue obtained from charging the miners for
computing service minus the service cost. The service cost is
directly related to the time that the miner takes to mine a block,
the cost of electricity, c, and the other cost that is a function of
the service demand xi. Therefore, the CFP decides the pricing
within the strategy space {p = [pi]i∈N : 0 ≤ pi ≤ p} to
maximize its profit which is represented as
�(p, x) =
∑
i∈N pixi −
∑
i∈N cTxi. (8)
Note that practically the price is bounded by maximum price
constraint that is denoted by p. Then, the profit maximization
problem of the CFP is formulated as follows.
Problem 2 (CFP Subgame):
maximize
p
�(p, x)
subject to 0 ≤ pi ≤ p. (9)
Problem 1 and Problem 2 together form the Stackelberg
game, and the objective of this game is to find the Stackelberg
equilibrium. The Stackelberg equilibrium ensures that the
profit of the CFP is maximized given that the miners gen-
erate their demands following the best responses, i.e., the
Nash equilibrium. This means that the demands from the
miners maximize the utility. In our problem, the Stackelberg
equilibrium can be written as follows.
Definition 1: Let x∗ and p∗ denote the optimal service
demand vector of all the miners and optimal unit price vector
of computing service, respectively. Then, the point (x∗, p∗) is
the Stackelberg equilibrium if the following conditions:
�(p∗, x∗) ≥ �(p, x∗) (10)
and
ui(x
∗
i , x∗−i, p∗) ≥ ui(xi, x∗−i, p∗) ∀xi ≥ 0; ∀i (11)
are satisfied, where x∗−i is the best response service demand
vector for all the miners except miner i.
Note that the same or different prices can be applied to
the miners, which we refer to them as the uniform and dis-
criminatory pricing schemes, respectively. In the following,
we investigate these two pricing schemes for resource man-
agement in blockchain networks. The Stackelberg equilibrium
ensures that the profit of the CFP is maximized given that the
miners generate their demands following the best responses,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
4590 IEEE INTERNET OF THINGS JOURNAL, VOL. 6, NO. 3, JUNE 2019
i.e., the Nash equilibrium. This means that the demands from
the miners maximize the utility. The Stackelberg equilibrium
under the uniform pricing scheme contains only one single
price that the CFP imposes to the miners identically. On
the contrary, the equilibrium under the discriminatory pric-
ing scheme contains different prices, each of which the CFP
imposes to each miner separately.
The significance of each pricing scheme is as follows. Under
the uniform pricing scheme, the equilibrium ensures a fair
price applied to all miners. The miners are indifferent to
choose the services. However, the CFP has limited degree of
freedom to maximize its profit. By contrast, under the dis-
criminatory pricing scheme, the CFP can customize the price
for each miner, matching with the miner’s demand and pref-
erence. As such, the profit obtained under the discriminatory
pricing scheme is expected to be superior to that of the uniform
pricing scheme in terms of the higher profit for the CFP.
IV. EQUILIBRIUM ANALYSIS FOR CLOUD/FOG
COMPUTING RESOURCE MANAGEMENT
In this section, we propose the uniform pricing and dis-
criminatory pricing schemes for resource management in
blockchain application involving PoW assisted by the CFP.
We then analyze the optimal service demand of miners as
well as the profit maximization of the CFP under both pricing
schemes.
A. Uniform Pricing Scheme
We first consider the uniform pricing scheme, in which
the CFP charges all the miners the same unit price for their
computing service demand, i.e., pi = p,∀i. Given the payoff
functions defined in Section III, we use backward induction
to analyze the Stackelberg game.
1) Stage II (Miners’ Demand Game): Given the price p
decided by the CFP, in Stage II, the miners compete with
each other to maximize their own utility by choosing their
individual service demand, which forms the noncooperative
miners’ demand game (MDG) Gu = {N , {xi}i∈N , {ui}i∈N },
where N is the set of miners, {xi}i∈N is the strategy set, and ui
is the utility, i.e., payoff, function of miner i. Specifically, each
miner i ∈ N selects its strategy to maximize its utility function
ui(xi, x−i, p). We next analyze the existence and uniqueness of
the Nash equilibrium in the MDG.
Definition 2: A demand vector x∗ = (x∗1, . . . , x∗N) is the
Nash equilibrium of the MDG Gu = {N , {xi}i∈N , {ui}i∈N },
if, for every miner i ∈ N , ui(x∗i , x∗−i, p) ≥ ui(xi
′, x∗−i, p) for
all xi
′ ∈ [x, x], where ui(xi, x−i) is the resulting utility of the
miner i, given the other miners’ demand x−i
xi
∗ = Fi(x)
=
⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎩
x,
√
(R+rti)
∑
i	=j xj
pe−λzti
−∑
i 	=j
xj < x
√
(R+rti)
∑
i	=j xj
pe−λzti
−∑
i 	=j
xj, x ≤
√
(R+rti)
∑
i	=j xj
pe−λzti
−∑
i 	=j
xj ≤ x
x,
√
(R+rti)
∑
i	=j xj
pe−λzti
−∑
i 	=j
xj > x.
(12)
Theorem 1: A Nash equilibrium exists in MDG Gu =
{N , {xi}i∈N , {ui}i∈N }.
Proof: First, the strategy space for each miner is defined
to be [x, x], which is a nonempty, convex, and compact subset
of the Euclidean space. From (6), ui is apparently continuous
in [x, x]. Then, we take the first-order and second-order deriva-
tives of (6) with respect to xi to prove its concavity, which can
be written as follows:
∂ui
∂xi
= (R+ rti)e
−λzti ∂αi
∂xi
− p (13)
∂2ui
∂xi
2
= (R+ rti)e
−λzti ∂
2αi
∂xi
2
< 0 (14)
where (∂αi/∂xi) = [(
∑
i 	=j xj)/(
∑
i∈N xj)
2] > 0, and
(∂2αi/∂xi
2) = −2[(
∑
i 	=j xj)/(
∑
i∈N xj)
3] < 0.
Therefore, we have proved that ui is strictly concave
with respect to xi. Accordingly, the Nash equilibrium exists
in this noncooperative MDG Gu [42]. The proof is now
completed.
Further, based on the first-order derivative condition, we
have
∂ui
∂xi
= (R+ rti)e
−λzti ∂αi
∂xi
− p = 0 (15)
and we obtain the best response function of miner i by
solving (15), as shown in (12).
Theorem 2: The uniqueness of the Nash equilibrium in
the noncooperative MDG is guaranteed given the following
condition:
2(N − 1)e−λzti
R+ rti
<
∑
i∈N
e−λzti
R+ rti
(16)
is satisfied.
Proof: Let x∗ denote the Nash equilibrium of the MDG.
By definition, the Nash equilibrium needs to satisfy x = F (x),
in which F (x) = (F1(x),F2( x), . . . ,FN(x)). In particu-
lar, Fi(x) is the best response function of miner i, given the
demand strategies of other miners. The uniqueness of the Nash
equilibrium can be proved by showing that the best response
function of miner i, i.e., as given in (12), is the standard
function [42].
Definition 3: A function F (x) is a standard function when
the following properties are guaranteed [42].
1) Positivity: F (x) > 0.
2) Monotonicity: If x ≤ x′, then F (x) ≤ F (x′).
3) Scalability: For all λ > 1, λF (x) > F (λx).
First, for the positivity, under the condition in (16), we have
(from Lemma 1)
∑
i 	=j
xj <
R+ rti
pe−λzti
<
R+ rti
4pe−λzti
(17)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
XIONG et al.: CLOUD/FOG COMPUTING RESOURCE MANAGEMENT AND PRICING FOR BLOCKCHAIN NETWORKS 4591
then we can conclude that
∑
i 	=j
xj <
√
R+ rti
∑
i 	=j xj
pe−λzti
. (18)
Thus, we can prove that
Fi(x) =
√
R+ rti
∑
i	=j xj
pe−λzti
−
∑
i	=j
xj > 0 (19)
Fi(x′)−Fi(x) =
√
R+ rti
∑
i	=j x′j
pe−λzti
−
∑
i	=j
x′j −
√
(R+ rti)
∑
i	=j xj
pe−λzti
−
∑
i	=j
xj
=
⎛
⎝
√
R+ rti
pe−λzti
−
√∑
i	=j
x′j −
√∑
i	=j
xj
⎞
⎠
⎛
⎝
√∑
i	=j
x′j −
√∑
i	=j
xj
⎞
⎠
(20)
λFi(x)−Fi(λx) = λ
√
(R+ rti)
∑
i	=j xj
pe−λzti
− λ
∑
i	=j
xj
−
√
(R+ rti)
∑
i	=j λxj
pe−λzti
−
∑
i	=j
λxj
=
(
λ−√λ
)
√
(R+ rti)
∑
i	=j xj
pe−λzti
> 0 ∀λ > 1 (21)
which is the positivity condition. Second, we prove the
monotonicity of (12). Let x′ > x, we can further simplify
the expression of Fi(x′) − Fi(x), which is shown in (20). In
particular, we have
√∑
i 	=j x′j −
√∑
i 	=j xj > 0, and we can
easily verify that
√
R+ rti
pe−λzti
−
√∑
i 	=j
x′j −
√∑
i 	=j
xj
∈
⎛
⎝
√
R+ rti
pe−λzti
− 2
√∑
i 	=j
x′j,
√
R+ rti
pe−λzti
− 2
√∑
i 	=j
xj
⎞
⎠. (22)
Under the condition in (30), we can prove that
√
R+ rti
pe−λzti
− 2
√∑
i 	=j
xj > 0 ∀xj. (23)
Thus, the best response function of miner i in (12) is always
positive.
At last, as for scalability, we need to prove that λF (x) >
F (λx), for λ > 1. The steps of proving the positivity of
λF(x)−F(λx) are shown in (20). Therefore, λF (x) > F (λx)
is always satisfied for λ > 1. Until now, we have proved that
the best response function in (12) satisfies three properties
described in Definition 2. Therefore, the Nash equilibrium of
MDG Gu = {N , {xi}i∈N , {ui}i∈N } is unique. The proof is now
completed.
Theorem 3: The unique Nash equilibrium for miner i in the
MDG is given by
xi
∗ = N − 1
∑
j∈N
pe−λztj
R+rtj
−
⎛
⎜
⎝
N − 1
∑
j∈N
pe−λztj
R+rtj
⎞
⎟
⎠
2
pe−λzti
R+ rti
∀i (24)
provided that the condition in (16) holds.
Proof: According to (13), for each miner i, we have the
mathematical expression
∑
i 	=j xj
(∑
j∈N xj
)2
= pe−λzti
R+ rti
. (25)
Then, we calculate the summation of this expression for all
the miners as follows:
(N − 1)
∑
j∈N xj
(∑
j∈N xj
)2
=
∑
i∈N
pe−λzti
R+ rti
(26)
which means [(N − 1)/(
∑
j∈N xj)] = ∑
i∈N ([pe−λzti ]/
[R+ rti]). Thus, we have
∑
j∈N
xj = N − 1
∑
i∈N
pe−λzti
R+rti
. (27)
Recall from (12), according to the first-order derivative con-
dition, we have
∑
j∈N
xj =
√
(R+ rti)
∑
i 	=j xj
pe−λzti
. (28)
By substituting (28) into (27), we have
N − 1
∑
i∈N
pe−λzti
R+rti
=
√
√
√
√
√
R+ rti
pe−λzti
⎛
⎝ N − 1
∑
i∈N
pe−λzti
R+rti
− xi
⎞
⎠. (29)
After squaring both sides, we have
⎛
⎝ N − 1
∑
i∈N
pe−λzti
R+rti
⎞
⎠
2
= R+ rti
pe−λzti
⎛
⎝ N − 1
∑
i∈N
pe−λzti
R+rti
− xi
⎞
⎠.
With simple transformations, we obtain the Nash equilibrium
for miner i as shown in (24).
Lemma 1: Given
2(N − 1)e−λzti
R+ rti
<
∑
i∈N
e−λzti
R+ rti
(30)
the following condition:
∑
i 	=j
xj <
R+ rti
4pe−λzti
(31)
is satisfied.
Proof: According to (24) and (27), we can obtain
∑
j 	=i
xj =
⎛
⎜
⎝
N − 1
∑
j∈N
pe−λztj
R+rtj
⎞
⎟
⎠
2
pe−λzti
R+ rti
. (32)
After substituting (30) into (32), we have
2(N − 1)pe−λzti
R+ rti
<
∑
i∈N
pe−λzti
R+ rti
(33)
which means that the condition in (30) needs to be ensured. On
the contrary, if the condition in (30) holds, then, the condition
in (32) is satisfied. The proof is now completed.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
4592 IEEE INTERNET OF THINGS JOURNAL, VOL. 6, NO. 3, JUNE 2019
Generally, we can use the best-response dynamics for
obtaining the Nash equilibrium of the N-player noncooperative
game in Stage II [42]. In the following, we analyze the profit
maximization of the CFP in Stage I under uniform pricing.
2) Stage I (CFP’s Profit Maximization): Based on the
Nash equilibrium of the computing service demand in the
MDG Gu = {N , {xi}i∈N , {ui}i∈N } in Stage II, the leader of the
Stackelberg game, i.e., the CFP, can optimize its pricing strat-
egy in Stage I to maximize its profit defined in (8). Thus, the
optimal pricing can be formulated as an optimization problem.
By substituting (24) into (8), the profit maximization of the
CFP is simplified as follows:
maximize
p>0
�(p) = (p− cT)
N − 1
∑
j∈N
pe−λztj
R+rtj
subject to 0 ≤ p ≤ p. (34)
Theorem 4: Under uniform pricing, the CFP achieves the
globally optimal profit, i.e., profit maximization, under the
unique optimal price.
Proof: From (34), we have
�(p) = p− cT
p
N − 1
∑
j∈N e−λztj
R+rtj
. (35)
The first and second derivatives of profit �(p) with respect to
price p are given as follows:
d�(p)
dp
= cT
p2
N − 1
∑
j∈N e−λztj
R+rtj
(36)
and
d2�(p)
dp2
= −2cT
p2
N − 1
∑
j∈N e−λztj
R+rtj
< 0. (37)
Due to the negativity of (37), the strict concavity of the objec-
tive function is ensured. Thus, the CFP is able to achieve the
maximum profit with the unique optimal price. The proof is
now completed.
Note that the profit maximization defined in (34) is a convex
optimization problem, and thus it can be solved by stan-
dard convex optimization algorithms, e.g., gradient assisted
binary search. Under uniform pricing, we have proved that
the Nash equilibrium in Stage II is unique and the optimal
price in Stage I is also unique. Thus, we can conclude that
the Stackelberg equilibrium is unique and accordingly the
best-response dynamics algorithm can achieve this unique
Stackelberg equilibrium [42].
B. Discriminatory Pricing Scheme
Then, we consider the discriminatory pricing scheme, in
which the CFP is able to set different unit prices of service
demand for different miners. Again, we use the backward
induction to analyze the optimal service demand of miners
and the profit maximization of the CFP.
1) Stage II (Miners’ Demand Game): Under discrimina-
tory pricing scheme, the strategy space of the CFP becomes
{p = [pi]i∈N : 0 ≤ pi ≤ p}. Recall that we prove the exis-
tence and uniqueness of MDG Gu = {N , {xi}i∈N , {ui}i∈N },
given the fixed price from the CFP. Thus, under discrimina-
tory pricing, the existence and uniqueness of the MDG can
be still guaranteed. With minor change from Theorem 3, we
have the following theorem immediately.
Theorem 5: Under uniform pricing, the unique Nash equi-
librium demand of miner i can be obtained as follows:
xi
∗ = N − 1
∑
j∈N
pje
−λztj
R+rtj
−
⎛
⎜
⎝
N − 1
∑
j∈N
pje
−λztj
R+rtj
⎞
⎟
⎠
2
pie−λzti
R+ rti
,∀i (38)
if the following condition:
2(N − 1)pie−λzti
R+ rti
<
∑
j∈N
pje−λztj
R+ rtj
(39)
holds.
Proof: The steps of proof are similar to those in the case
of uniform pricing as shown in Section IV-A1, and thus we
omit them for brevity.
We next analyze the profit maximization of the CFP in
Stage I under discriminatory pricing to further investigate the
Stackelberg equilibrium.
2) Stage I (CFP’s Profit Maximization): Similar to that
in Section IV-A2, we analyze the profit maximization with
the analytical result from Theorem 5, i.e., the Nash equi-
librium of the computing service demand in Stage II. After
substituting (38) into (8), we have the following optimization:
maximize
p>0
�(p) =
∑
i∈N
⎛
⎜
⎝pi − cT
N − 1
∑
j∈N
pje
−λztj
R+rtj
⎞
⎟
⎠
subject to 0 ≤ pi ≤ p ∀i. (40)
Theorem 6: �(p) is concave on each pi, when∑
i 	=j (ai + aj)(1− [N(pj/aj)/
∑
j∈N (pj/aj)]) ≤ 0, and
decreasing on each pi when
∑
i 	=j(ai + aj)(1 − [N(pj/aj)]/
[
∑
j∈N (pj/aj)]) > 0, provided that the following condition:
pi
ai
≥
∑
j∈N
pj
aj
(N − 1)2
(41)
is satisfied, where ai = (R+ rti)e−λzti .
Proof: We first decompose the objective function in (40)
into two parts, namely,
∑
i cTx∗i and
∑
i pix∗i . Then, we
analyze the properties of each part. We define
f (p) = −cTx∗i = −cT
N − 1
∑
j∈N
pje
−λztj
R+rtj
. (46)
Let aj = (R + rtj)e−λztj , and we have f (p) =
([−cT(N − 1)]/[
∑
j∈N (pj/aj)]). Then, we obtain the first and
the second partial derivatives of (46) with respect to pi as
follows:
∂f (p)
∂pi
= (N − 1)cT
ai
(∑
j∈N
pj
aj
)2
(47)
∂2f (p)
∂pi
2
= −2(N − 1)cT
ai
2
(∑
j∈N
pj
aj
)3
. (48)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
XIONG et al.: CLOUD/FOG COMPUTING RESOURCE MANAGEMENT AND PRICING FOR BLOCKCHAIN NETWORKS 4593
Further, we have
∂f (p)
∂pipj
= −2(N − 1)cT
aiaj
(∑
j∈N
pj
aj
)3
. (49)
Thus, we can obtain the Hessian matrix of f (p), which is
expressed as
∇2f (p) = −2(N − 1)cT
(∑
j∈N
pj
aj
)3
⎡
⎢
⎢
⎢
⎢
⎣
1
a1
2
1
a1a2
· · · 1
a1aN
1
a2a1
1
a2
2 · · · 1
a2aN
...
...
. . .
...
1
aN a1
1
aN a2
· · · 1
aN
2
⎤
⎥
⎥
⎥
⎥
⎦
. (50)
For each i ∈ N , we have (1/ai
2) > 0. Thus, the diagonal
elements of the Hessian matrix are all larger than zero, and
the principle minors are equal to zero. Therefore, the Hessian
matrix of f (p) is semi-negative definite.
Then, we analyze the properties of
∑
i pix∗i . We first define
g(p) =
∑
i∈N
pixi
∗ =
∑
j 	=i aixixj
(∑
j 	=i xj
)2
. (51)
By substituting (38) into (51), we can obtain the final expres-
sion for g(p), which can be rewritten as (42), shown at the
bottom of this page. Then, we derive the first-order and the
second partial derivatives of (42) with respect to pi as shown
in (43), at the bottom of this page, and (52), at the bottom of
the next page. Since we have
xi = N − 1
∑
h∈N
ph
ah
− pi
ai
(
N − 1
∑
h∈N
ph
ah
)2
= N − 1
∑
h∈N
ph
ah
(
1− N − 1
∑
h∈N
ph
ah
pi
ai
)
> 0
then
1− N − 1
∑
h∈N
ph
ah
pi
ai
> 0.
When
∑
i 	=j (ai + aj)(1− [N(pj/aj)]/[
∑
j∈N (pj/aj)]) ≤ 0,
it is observed from (53), shown at the bottom of
the next page, that [∂2g(p)/∂pi
2] < 0, i.e., g(p) is
concave on each pi. Now we prove that �(p) is a
monotonically decreasing function with respect to pi, when∑
i 	=j (ai + aj)(1− [N(pj/aj)]/[
∑
j∈N (pj/aj)]) > 0. The steps
are shown in (45), at the bottom of the next page, where
pmin = min{p1, p2, . . . , pN}. Practically, pmin > cT . Thus,
with some manipulations, we can prove (∂�/∂pi) < 0 when∑
i 	=j(ai + aj)(1 − [N(pj/aj)]/ [
∑
j∈N (pj/aj)]) > 0, if the
condition in (41) holds. The proof is now completed.
Theorem 7: Under discriminatory pricing, the CFP achieves
the profit maximization by finding the unique optimal pricing
vector.
Proof: From Theorem 6, we know that �(p)
is concave on each pi, when
∑
i 	=j(ai + aj)
(1− [N(pj/aj)]/[
∑
j∈N (pj/aj)]) ≤ 0, and decreasing on each
pi when
∑
i 	=j(ai + aj)(1− [N(pj/aj)]/[
∑
j∈N (pj/aj)]) > 0.
In other words, when �(p) is concave on pi, pi needs to
be smaller than a certain threshold, and �( p) is decreasing
on pi when pi is larger than this threshold. Then, it can be
concluded that if the price is higher than the threshold, the
miner is not willing to purchase the computing service from
the CFP. Therefore, we know that the optimal value of profit
of the CFP, i.e., �∗(p) is achieved in the concave parts when∑
i 	=j (ai + aj)(1− [N(pj/aj)]/[
∑
j∈N (pj/aj)]) ≤ 0. Clearly,
the maximization of profit �(p) is achieved either in the
boundary of domain area or in the local maximization point.
Since we know that the optimal value of profit, i.e., �∗(p)
is achieved in the interior area, and thus p∗ exists. In the
following, we prove that there exists at most one optimal
solution by using VI theory [43], from which the uniqueness
of the optimal solution, i.e., the Stackelberg equilibrium,
follows.
Let the set
K =
{
p = [p1, . . . , pN]�
∣
∣
∣
∣
∑
i 	=j
(ai + aj)(1−
N
pj
aj
∑
j∈N
pj
aj
) ≤ 0
∀i ∈ N
}
.
The constraint can be rewritten as follows:
∑
i 	=j
(
(ai + aj)
(
∑
h∈N
ph
ah
− N
pj
aj
))
≤ 0. (54)
g(p) =
∑
j 	=h
(
ah
(
1− ph
ah
N − 1
∑
h∈N
ph
ah
)(
1− pj
aj
N − 1
∑
h∈N
ph
ah
))
(42)
∂g(p)
∂pi
=
∑
j 	=i
⎛
⎜
⎝
(
ai + aj
)
⎛
⎜
⎝
−N−1
ai
∑
h 	=i
ph
ah
(∑
h∈N
ph
ah
)2
(
1− N − 1
∑
h∈N
ph
ah
pj
aj
)
+
N−1
ai
pj
aj
(∑
h∈N
ph
ah
)2
(
1− N − 1
∑
h∈N
ph
ah
pi
ai
)
⎞
⎟
⎠
⎞
⎟
⎠ (43)
∑
i 	=j
(
(ai + aj)
(
∑
h∈N
λp′h + (1− λ)ph
′′
ah
− N
λp′j + (1− λ)pj
′′
aj
))
=
∑
i 	=j
(
(ai + aj)
(
λ
∑
h∈N
p′h
ah
− (1− λ)
∑
h∈N
ph
′′
ah
− λN
p′j
aj
− (1− λ)N
pj
′′
aj
))
= λ
∑
i 	=j
(
(ai + aj)
(
∑
h∈N
p′h
ah
− N
pj
′′
aj
))
+ (1− λ)
∑
i 	=j
(
(ai + aj)
(
(1− λ)
∑
h∈N
p′h
ah
− N
pj
′′
aj
))
≤ 0 (44)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
4594 IEEE INTERNET OF THINGS JOURNAL, VOL. 6, NO. 3, JUNE 2019
Thus, we redefine the set K as {p = [p1, . . . , pN]�
|∑i 	=j ((ai + aj)(
∑
h∈N (ph/ah)− N(pj/aj))) ≤ 0,∀i ∈ N }.
Then, we formulate an equivalent problem to (40) as follows:
minimize
p>0
−�(p)
subject to p ∈ K. (55)
Let F(p) = ∇(−�(p)) = −[∇pi�]�i∈N . Accordingly, the
optimization problem in (55) is equivalent to find a point set
p* ∈ K, such that (p − p*)F(p*) ≥ 0,∀p ∈ K, which is the
VI problem: VI(K, F).
Definition 4: If F is strictly monotone on K, then VI(K, F)
has at most one solution, where K ∈ R
N is a convex closed
set, and the mapping F : K → R
N is continuous [43].
Let λ ∈ (0, 1), p′, p′′ ∈ K, it can be concluded that
λp′ + (1 − λ)p′ ∈ K, which is shown in (44), at the bot-
tom of the previous page. Accordingly, K is a convex and
closed set. To prove that the mapping F : K → R
N is strictly
monotone on K, we check the positivity of (p′−p′′)�(F(p′)−
F(p′′)),∀p′, p′′ ∈ K and p′ 	= p′′. We know
(p′ − p′′)�(F(p′)− F(p′′))
=
∑
i∈N
(
(p′i − p′′i )
(
−∇pi�
∣
∣
pi=p′i
+ ∇pi�
∣
∣
pi=p′′i
))
(56)
and from Theorem 6, we have
∂2�(p)
∂pi
2
= ∂2(f (p)+ g(p))
∂pi
2
< 0. (57)
Thus, ∇pi� is decreasing on each pi, and −∇pi� is increasing
on each pi. It can be concluded that
− ∇pi�
∣
∣
pi=p′i
+ ∇pi�
∣
∣
pi=p′′i
=
{ ≥ 0, p′i ≥ p′′i
< 0, p′i < p′′i .
(58)
∂�(p)
∂pi
=
∑
j	=i
⎛
⎜
⎝
(
ai + aj
)
⎛
⎜
⎝
N−1
ai
∑
h 	=i
ph
ah
(∑
h∈N
ph
ah
)2
(
1− N − 1
∑
h∈N
ph
ah
pj
aj
)
+
N−1
aiaj
pj
(∑
h∈N
ph
ah
)2
(
1− N − 1
∑
h∈N
ph
ah
pi
ai
)
⎞
⎟
⎠
⎞
⎟
⎠+
N−1
ai
cT
(∑
h∈N
ph
ah
)2
≤
N−1
ai
(∑
h∈N
ph
ah
)2
⎛
⎝
∑
j	=i
(
(
ai + aj
)
(
−
∑
h∈N
ph
ah
(
1− N − 1
∑
h∈N
ph
ah
pj
aj
)
+ pj
aj
(
1− N − 1
∑
h∈N
ph
ah
pi
ai
)))
+ cT
⎞
⎠
= −
N−1
ai
(∑
h∈N
ph
ah
)2
∑
j	=i
(
(
ai + aj
)
(
∑
h∈N
ph
ah
(
1− N
∑
h∈N
ph
ah
pj
aj
)))
︸ ︷︷ ︸
<0
+
N−1
ai
(∑
h∈N
ph
ah
)2
⎛
⎝cT −
∑
j	=i
(
(
ai + aj
) N − 1
∑
h∈N
ph
ah
pi
ai
pj
aj
)⎞
⎠
= −
N−1
ai
(∑
h∈N
ph
ah
)2
∑
j	=i
(
(
ai + aj
)
(
−
∑
h∈N
ph
ah
(
1− N
∑
h∈N
ph
ah
pj
aj
)))
+
N−1
ai
(∑
h∈N
ph
ah
)2
⎛
⎜
⎜
⎜
⎝
cT −
∑
j	=i
⎛
⎜
⎜
⎜
⎝
ai + aj
aj
︸ ︷︷ ︸
<1
N − 1
∑
h∈N
ph
ah
pipj
ai
⎞
⎟
⎟
⎟
⎠
⎞
⎟
⎟
⎟
⎠
≤ −
N−1
ai
(∑
h∈N
ph
ah
)2
∑
j	=i
(
(
ai + aj
)
(
−
∑
h∈N
ph
ah
(
1− N
∑
h∈N
ph
ah
pj
aj
)))
+
N−1
ai
(∑
h∈N
ph
ah
)2
(
cT − pmin
N − 1
∑
h∈N
ph
ah
N − 1pi
ai
)
= −
N−1
ai
(∑
h∈N
ph
ah
)2
∑
j	=i
(
(
ai + aj
)
(
−
∑
h∈N
ph
ah
(
1− N
∑
h∈N
ph
ah
pj
aj
)))
︸ ︷︷ ︸
<0
+
N−1
ai
(∑
h∈N
ph
ah
)2
(
cT − pmin
(N − 1)2
∑
h∈N
ph
ah
pi
ai
)
︸ ︷︷ ︸
<0
< 0 (45)
∂2g(p)
∂pi
2
=
∑
j 	=i
⎛
⎜
⎝
(
ai + aj
)
⎛
⎜
⎝
2 N−1
ai
2
∑
h 	=i
ph
ah
(∑
h∈N
ph
ah
)3
(
1− 2
N − 1
∑
h∈N
ph
ah
pj
aj
)
−
2 N−1
ai
2
pj
aj
(∑
h∈N
ph
ah
)3
(
1− N − 1
∑
h∈N
ph
ah
pi
ai
)
⎞
⎟
⎠
⎞
⎟
⎠ (52)
∂2g(p)
∂pi
2
=
2 N−1
ai
2
∑
h 	=i
ph
ah
(∑
h∈N
ph
ah
)3
∑
j 	=i
(
(
ai + aj
)
(
1− 2
N − 1
∑
h∈N
ph
ah
pj
aj
))
−
2 N−1
ai
2
(∑
h∈N
ph
ah
)3
∑
j 	=i
(
(
ai + aj
)pj
aj
(
1− N − 1
∑
h∈N
ph
ah
pi
ai
))
≤
2 N−1
ai
2
∑
h 	=i
ph
ah
(∑
h∈N
ph
ah
)3
∑
j 	=i
(
(
ai + aj
)
(
1− N
∑
h∈N
ph
ah
pj
aj
))
︸ ︷︷ ︸
≤0
−
2 N−1
ai
2
(∑
h∈N
ph
ah
)3
∑
j 	=i
⎛
⎜
⎜
⎜
⎜
⎝
(
ai + aj
)pj
aj
(
1− N − 1
∑
h∈N
ph
ah
pi
ai
)
︸ ︷︷ ︸
≥0
⎞
⎟
⎟
⎟
⎟
⎠
(53)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
XIONG et al.: CLOUD/FOG COMPUTING RESOURCE MANAGEMENT AND PRICING FOR BLOCKCHAIN NETWORKS 4595
Algorithm 1 Gradient Iterative Algorithm to Find Stackelberg
Equilibrium Under Discriminatory Pricing
1: Initialization:
Select initial input p = [pi]i∈N where pi ∈ [0, p], k← 1, precision threshold ε;
2: repeat
3: Each miner i decides its computing service demand x[k]
i based on (12);
4: CFP updates the prices using a gradient assisted searching algorithm, i.e.,
p(t + 1) = p(t)+ μ∇�(p(t)), (60)
where μ is the step size of the price update and μ∇�(p(t)) is the gradient with
∂�(p(t))
∂p(t) . The price information is sent to all miners;
5: k← k + 1;
6: until
∥
∥
∥p[k]−p[k−1]
∥
∥
∥
1∥
∥
∥p[k−1]
∥
∥
∥
1
< ε
7: Output: optimal demand x∗[k] and optimal price p∗[k].
Then, we have
(
(p′i − p′′i )
(
−∇pi�
∣
∣
pi=p′i
+ ∇pi�
∣
∣
pi=p′′i
))
≥ 0 ∀i ∈ N
(59)
and we know p′ 	= p′′, and accordingly there exists at least
one j ∈ N which satisfies the constraint in (59). Therefore,
we have proved that F is strictly monotone on K and contin-
uous. Until now, we have proved that VI(K, F) has at most
one solution according to [43, Definition 4]. Thus, the equiv-
alent problem admits at most one optimal solution. Since we
know the existence of a single optimal solution, and thus the
uniqueness of the optimal solution is validated. The proof is
now completed.
Similar to that in Section IV-A, we can apply the low-
complexity gradient-based searching algorithm to achieve the
maximized profit �(p) of the CFP. In particular, we adopt
Algorithm 1 to obtain the unique Stackelberg equilibrium,
under which the CFP achieves the profit maximization accord-
ing to Theorem 7. The basic description is explained as
follows: for the given prices imposed by the CFP, the fol-
lowers’ subgame is solved first. After substituting the best
responses of the followers’ subgame into the leader subgame,
the optimal prices can be obtained by a gradient-based algo-
rithm. The similar algorithm can be used for uniform pricing
as well.
V. PERFORMANCE EVALUATION
In this section, we first perform the real experiment on
the PoW-based blockchain mining to validate the proposed
utility function of the miner. Then, we conduct the exten-
sive numerical simulations to evaluate the performance of
our proposed price-based computing resource management to
support blockchain application involving PoW.
A. Environmental Setup
We first set up the real blockchain mining experiment based
on Ethereum and consider the smart phones as limited devices,
as illustrated in Fig. 3. The experiment is performed on
a workstation with Intel Xeon CPU E5-1630, and Android
devices (smart phones) installing a mobile blockchain client
application. The mobile blockchain client application is imple-
mented by the Android Studio and Software Development Kits
Fig. 3. Real mobile blockchain mining experimental setup with Ethereum
which is a popular open ledger.
tools. All transactions are created by the mobile blockchain
client application.4 Each miner’s working environment has
one CPU core as its processor. The miner’s processor and
its CPU utilization rate are generated and managed by the
Docker platform [45]. The mobile device of each miner
has installed Ubuntu 16.04 LTS (Xenial Xerus) and Go-
Ethereum [46] as the operation system and the blockchain
framework, respectively.
In Fig. 3, from Box 1 and 2, the screen of computer terminal
shows that the Ethereum is running on the host, i.e., edge
device (Box 5). The mobile devices in Box 4 are connected to
the edge computing node through network hub (Box 3) using
mobile blockchain client application. The basic steps can be
implemented as follows. The mobile users, i.e., miners use
the Android device to connect to the edge computing node
through network hub, i.e., access point. Then, the miners can
request the service from edge node, and mine the block with
the assistance of Ethereum service provided accordingly.
We create 1000 blocks employing Node.js and use the
mobile device to mine these blocks in the experiment. We
consider two cases with three miners and four miners. In the
three-miner case, we first fix the other two miners’ service
demand (CPU utilization) at 40 and 60, and then vary one
miner’s service demand. In the four-miner case, we first fix
other three miners’ service demand as 40, 50, and 60, and
then vary one miner’s service demand. For our experiment,
the number of transactions in each mined block is 10, i.e., the
size of block is the same. The comparison of the real experi-
mental results and our proposed analytical model is shown in
Fig. 4. As expected, there is not much difference between the
4In our experiment, each mobile device sends transactions to the server,
and the size of each transaction is around 1 kB [44]. Then, the server will
collect and pack all the transactions into a block and proceed to solve the
proof-of-work puzzle, where each block consists of block information and
hash numbers. As mentioned in this paper, the number of transactions in each
mined block is 10, and thus the size of the data from mobile device sent to the
server is approximately 10 kB in total. Likewise, the size of a block including
10 hash numbers that is sent from the server to the mobile device is around
1.5 kB. The detailed description can be found in our previous work [44].
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
4596 IEEE INTERNET OF THINGS JOURNAL, VOL. 6, NO. 3, JUNE 2019
Fig. 4. Comparison of real experiment results with our proposed model.
real results and our analytical model. This is because the prob-
ability that the miner successfully mines the block is directly
proportional to its relative computing power when the block
size are identical. Note that the delay effects are negligible.
In the sequel, we present the numerical results to evaluate the
performance of the proposed price-based computing resource
management for supporting blockchain application involving
PoW.
B. Numerical Results
To illustrate the impacts of different parameters from the
proposed model on the performance, we consider a group of N
miners, e.g., mobile users in the blockchain application involv-
ing PoW assisted by the CFP. We assume the size of a block
mined by miner i follows the normal distribution N (μt, σ
2).
The default parameter values are set as follows: x = 10−2,
x = 100, p = 100, μt = 200, σ 2 = 5, R = 104, r = 20,
z = 5 × 10−3, c = 10−3, and N = 100. Further, we employ
the “fix” function in MATLAB to round each ti to the nearest
integer toward zero. Note that some of these parameters are
varied according to the evaluation scenarios. We evaluate the
performance of uniform pricing and discriminatory pricing in
the following.
1) Investigation on Total Service Demand of Miners and
the Profit of the CFP:
a) Comparison of uniform pricing and discriminatory
pricing: We first address the comparison of uniform pricing
and discriminatory pricing schemes. Fig. 5 demonstrates the
comparison of the normalized average optimal price under two
proposed pricing schemes. It is worth noting that the optimal
price under uniform pricing is the same as the maximum price,
which can be explained by (36). Specifically, the expression
in (36) is always positive, and thus the profit of the CFP
increases with the increase of price. This means that the max-
imum price is the optimal value for profit maximization of
the CFP under uniform pricing. Thus, we have the follow-
ing conclusion: the CFP intends to set the maximum possible
value as optimal price under uniform pricing. This conclusion
is still useful even when the CFP does not have the complete
information about the miners.
Fig. 5. Normalized average optimal price versus the number of miners.
Fig. 6. Normalized total service demand of miners and the profit of the CFP
versus the number of miners.
Further, we find that the average optimal price of discrim-
inatory pricing is slightly lower than that of uniform pricing.
The intuition is that, under discriminatory pricing, the CFP can
set different unit prices of service demand for different min-
ers. For the details of operation of discriminatory pricing, we
conduct the case study in Section V-B2. In this case, the CFP
can significantly encourage the higher total service demand
from miners and achieve greater profit gain under discrim-
inatory pricing, which is also consistent with the following
results. As shown in Figs. 6–8, in all cases, the total service
demand from miners and the profit of the CFP under the uni-
form pricing scheme is slightly smaller than that under the
discriminatory pricing scheme.
From Fig. 6, we find that when σ 2 decreases, the results
under uniform pricing scheme is close to that under discrim-
inatory pricing. This is because the heterogeneity of miners
in blockchain is reduced as σ 2 decreases. We may consider
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
XIONG et al.: CLOUD/FOG COMPUTING RESOURCE MANAGEMENT AND PRICING FOR BLOCKCHAIN NETWORKS 4597
Fig. 7. Normalized total service demand of miners and the profit of the CFP
versus the variable reward factor.
Fig. 8. Normalized total service demand of miners and the profit of the CFP
versus the propagation delay factor.
one symmetric case, where the miners are homogeneous with
the same size of blocks to mine, i.e., σ 2 = 0. In this case, the
discriminatory pricing scheme yields the same results as those
of the uniform pricing scheme.
b) Impacts of the number of miners: We next evaluate
the impacts brought by the number of miners, and the results
are shown in Fig. 6. From Fig. 6, we find that the total ser-
vice demand of miners and the profit of the CFP increase
with the increase of the number of miners in blockchain.
This is due to the fact that having more miners will intensify
the competition among the miners, which potentially moti-
vates them to have higher service demand. Further, the coming
miners have their service demand, and thus the total service
demand from miners is increased. In turn, the CFP extracts
more surplus from miners and thereby has greater profit gain.
Additionally, it is observed that the rate of service demand
increment decreases as the number of miners increases. This
is from the fact that the incentive of miners to increase their
service demand is weakened because the probability of their
successful mining is reduced when the number of miners is
increasing. Comparing different results, it is also observed that
the total service demand of miners and the profit of the CFP
increase as μt increases. This is because when μt increases,
i.e., the average size of one block becomes larger, the variable
reward for each miner also increases. The potential incen-
tive of miners to increase their service demand is improved,
and accordingly the total service demand of miners increases.
Consequently, the CFP achieves greater profit gain.
c) Impacts of reward for successful mining: Then, we
investigate the impacts of variable reward and fixed reward
on miners and the CFP, which are shown in Fig. 7. It is
observed that with the increase of variable reward factor, both
the total service demand of miners and the profit of the CFP
increase. This is from the fact that the increased variable
reward enhances the motivation of miners for higher service
demand, and the total service demand is enhanced accordingly.
As a result, the CFP achieves greater profit gain. Further, by
comparing curves with different value of fixed reward, we find
that as the fixed reward increases, the total service demand of
miners and the profit of the CFP also increase. Similarly, this
is because the increased fixed reward induces greater incentive
of miners, which in turn improves the total service demand of
miners and the profit of the CFP.
d) Impacts of propagation delay: At last, we examine
the impact of propagation delay on miners and the CFP, as
illustrated in Fig. 8. It is observed that as the propagation
delay factor increases, the total service demand and the profit
of the CFP increase. This is because when the propagation
delay effects are strong, the miners with larger mined block
need to have higher service demand to reduce the propaga-
tion delay of their propagated solutions. At the same time, a
miner with smaller mined block is also incentivized from the
demand competition with the other miners. Therefore, the total
service demand increases, which in turn improves the profit of
the CFP. Additionally, we observe that as the value of service
cost factor increases, the total service demand decreases under
discriminatory pricing and remains unchanged under uniform
pricing. On the contrary, the profit of the CFP increases in both
schemes. Recall from Fig. 5, the reason is that the optimal
price under uniform pricing remains unchanged from varying
the value of service cost factor, and thus the service demand
remains unchanged under uniform pricing. Correspondingly,
the CFP achieves greater profit gain from the lower cost under
uniform pricing. However, under discriminatory pricing, when
the service cost decreases, the CFP has an incentive to set
lower price for some miners to encourage higher total service
demand. On the contrary, when the value of service cost factor
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
4598 IEEE INTERNET OF THINGS JOURNAL, VOL. 6, NO. 3, JUNE 2019
Fig. 9. Normalized optimal price versus the fixed reward for mining
successfully under discriminatory pricing.
Fig. 10. Normalized optimal price versus the variable reward factor under
discriminatory pricing.
increases, the CFP has no incentive to set lower price for these
miners, since the higher total service demand results in higher
cost for the CFP. Therefore, as the value of service cost fac-
tor decreases, the total service demand and the profit of CFP
increase.
2) Investigation on Optimal Price Under Uniform and
Discriminatory Pricing Schemes: Then, to explore the impacts
of discriminatory pricing on each specific miner, we inves-
tigate the optimal price and resulting individual computing
service demand from miners. We conduct a case study for
three-miner mining with the following parameters: t1 = 100,
t2 = 200, t3 = 300, x = 10−2, x = 100, p = 100, R = 104,
r = 20, z = 5× 10−3, and c = 10−3.
As expected, we observe from Figs. 9 and 10 that the
optimal price charging to the miners with the smaller block is
lower, e.g., miners 1 and 2. This is because the variable reward
of miners 1 and 2 for successful mining is smaller than that
of miner 3. Thus, the miners 1 and 2 have no incentive to pay
a high price for their service demand as miner 3. In this case,
the CFP can greatly improve the individual service demand
of miners 1 and 2 by setting lower prices to attract them, as
illustrated in Figs. 11 and 12. Due to the competition from
other two miners, the miner 3 also has the potential incen-
tive to increase its service demand. However, due to the high
service unit price, as a result, the miner 3 reduces its service
demand for saving cost. Nevertheless, the increase of service
Fig. 11. Normalized individual demand versus the fixed reward for mining
successful.
Fig. 12. Normalized individual demand versus the variable reward factor.
demand from miners 1 and 2 are greater. Therefore, the total
service demand and the profit of the CFP are still improved
under discriminatory pricing compared with uniform pricing.
Further, from Fig. 9, we observe that the optimal prices for
miners 1 and 2 increase with the increase of fixed reward. This
is because as the fixed reward increases, the incentives of min-
ers 1 and 2 to have higher service demand is greater. In this
case, the CFP is able to raise the price and charge more for
higher revenue, and thus achieves greater profit. Therefore,
for each miner, the individual service demand increases as
the fixed reward increases, as shown in Fig. 11. Additionally,
we observe from Fig. 10 that the optimal prices for miners
1 and 2 decrease as the variable reward factor increases. This
is because when the variable reward factor increases, the incen-
tive of each miner to have higher service demand is greater.
However, the incentives of the miners with smaller block to
mine, i.e., the miners 1 and 2 are still not much as that of
miner 3, and become smaller than that of miner 3 as the vari-
able reward factor increases. Therefore, the CFP intends to set
the lower price for miners 1 and 2 which may induce more
individual service demand as shown in Fig. 12.
Note that the Stackelberg game of the edge/fog comput-
ing service for blockchain aims at maximizing the profit of
the CFP. Alternatively, social welfare, i.e., utility of miners,
are also important and should be maximized. As such, auc-
tion [47] is a suitable tool to achieve this objective in which
some preliminary modeling and results are presented in [35].
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
XIONG et al.: CLOUD/FOG COMPUTING RESOURCE MANAGEMENT AND PRICING FOR BLOCKCHAIN NETWORKS 4599
VI. CONCLUSION
In this paper, we have investigated the price-based
computing resource management, for supporting offload-
ing mining tasks to CFP in proof-of-work-based public
blockchain networks. In particular, we have adopted the two-
stage Stackelberg game model to jointly study the profit
maximization of CFP and the utility maximization of min-
ers. Through backward induction, we have derived the unique
Nash equilibrium point of the game among the miners. The
optimal resource management schemes including the uniform
and discriminatory pricing for the CFP have been presented
and examined. Further, the existence and uniqueness of the
Stackelberg equilibrium have been proved analytically for both
pricing schemes. We have performed the real experiment to
validate the proposed analytical model. Additionally, we have
conducted the numerical simulations to evaluate the network
performance, which help the CFP to achieve optimal resource
management and gain the highest profit. For the future work,
we will further study the oligopoly market with multiple
CFPs, where providers compete with each other for selling
computing services to miners. Another direction is to study
the optimal strategies of the provider and miners with the
consideration of cyber-attacks, such as [48].
REFERENCES
[1] Z. Xiong, S. Feng, D. Niyato, P. Wang, and Z. Han, “Optimal pricing-
based edge computing resource management in mobile blockchain,” in
Proc. IEEE ICC, Kansas City, MO, USA, May 2018, pp. 1–6.
[2] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,”
White Paper, May 2008.
[3] W. Wang et al., “A survey on consensus mechanisms and mining man-
agement in blockchain networks,” arXiv preprint arXiv:1805.02707,
2018.
[4] M. Castro and B. Liskov, “Practical Byzantine fault tolerance,” in
Proc. 3rd Symp. Oper. Syst. Design Implement., vol. 99. New Orleans,
LA, USA, Feb. 1999, pp. 173–186.
[5] D. Ongaro and J. K. Ousterhout, “In search of an understandable con-
sensus algorithm,” in Proc. USENIX Annu. Tech. Conf., Philadelphia,
PA, USA, Jun. 2014, pp. 305–319.
[6] M. Vukolić, “The quest for scalable blockchain fabric: Proof-of-work
vs. BFT replication,” in Proc. Int. Workshop Open Prob. Netw. Security
(IFIP WG), Zürich, Switzerland, Oct. 2015, pp. 112–125.
[7] J. Garay, A. Kiayias, and N. Leonardos, “The bitcoin backbone protocol:
Analysis and applications,” in Proc. 34th Annu. Int. Conf. Theory Appl.
Cryptograph. Techn. II Adv. Cryptol. (EUROCRYPT), Sofia, Bulgaria,
Apr. 2015, pp. 281–310.
[8] D. D. F. Maesa, P. Mori, and L. Ricci, “Blockchain based access con-
trol,” in Proc. IFIP Int. Conf. Distrib. Appl. Interoper. Syst., Neuchatel,
Switzerland, Jun. 2017, pp. 206–220.
[9] W. Wang, D. Niyato, P. Wang, and A. Leshem, “Decentralized caching
for content delivery based on blockchain: A game theoretic per-
spective,” in Proc. IEEE ICC, Kansas City, MO, USA, May 2018,
pp. 1–6.
[10] X. Chen et al., “Framework for context-aware computation offloading
in mobile cloud computing,” J. Cloud Comput., vol. 6, no. 1, p. 1,
2017.
[11] C. Huang, R. Lu, and K.-K. R. Choo, “Vehicular fog computing:
Architecture, use case, and security and forensic challenges,” IEEE
Commun. Mag., vol. 55, no. 11, pp. 105–111, Nov. 2017.
[12] R. Recabarren and B. Carbunar, “Hardening Stratum, the bitcoin pool
mining protocol,” in Proc. Privacy Enhancing Technol., vol. 2017, no. 3,
2017, pp. 57–74.
[13] H. Zhang, Y. Zhang, Y. Gu, D. Niyato, and Z. Han, “A hierarchical game
framework for resource management in fog computing,” IEEE Commun.
Mag., vol. 55, no. 8, pp. 52–57, Aug. 2017.
[14] H. Zhang et al., “A multi-leader multi-follower Stackelberg game
for resource management in LTE unlicensed,” IEEE Trans. Wireless
Commun., vol. 16, no. 1, pp. 348–361, Jan. 2017.
[15] C. Jiang, Y. Chen, K. R. Liu, and Y. Ren, “Optimal pricing strategy
for operators in cognitive femtocell networks,” IEEE Trans. Wireless
Commun., vol. 13, no. 9, pp. 5288–5301, Sep. 2014.
[16] J.-J. Laffont, P. Rey, and J. Tirole, “Network competition: II. Price
discrimination,” RAND J. Econ., vol. 29, no. 1, pp. 38–56, 1998.
[17] T. T. A. Dinh et al., “Untangling blockchain: A data processing view
of blockchain systems,” IEEE Trans. Knowl. Data Eng., vol. 30, no. 7,
pp. 1366–1385, Jul. 2018.
[18] F. Tschorsch and B. Scheuermann, “Bitcoin and beyond: A technical sur-
vey on decentralized digital currencies,” IEEE Commun. Surveys Tuts.,
vol. 18, no. 3, pp. 2084–2123, 3rd Quart., 2016.
[19] D. Chatzopoulos, M. Ahmadi, S. Kosta, and P. Hui, “Flopcoin: A cryp-
tocurrency for computation offloading,” IEEE Trans. Mobile Comput.,
vol. 17, no. 5, pp. 1062–1075, May 2018.
[20] H. Kopp, D. Mödinger, F. Hauck, F. Kargl, and C. Bösch, “Design
of a privacy-preserving decentralized file storage with financial incen-
tives,” in Proc. IEEE Eur. Symp. Security Privacy Workshops (EuroS
PW), Paris, France, 2017, pp. 14–22.
[21] J. Backman, S. Yrjölä, K. Valtanen, and O. Mämmelä, “Blockchain
network slice broker in 5G: Slice leasing in factory of the future use
case,” in Proc. Internet Things Bus. Models Users Netw., Copenhagen,
Denmark, Nov. 2017, pp. 1–8.
[22] J. Kang et al., “Enabling localized peer-to-peer electricity trading
among plug-in hybrid electric vehicles using consortium blockchains,”
IEEE Trans. Ind. Informat., vol. 13, no. 6, pp. 3154–3164,
Dec. 2017.
[23] D. Yang, G. Xue, X. Fang, and J. Tang, “Crowdsourcing to smart-
phones: Incentive mechanism design for mobile phone sensing,” in
Proc. ACM 18th Annu. Int. Conf. Mobile Comput. Netw., 2012,
pp. 173–184.
[24] A. Chakeri and L. G. Jaimes, “An incentive mechanism for crowdsensing
markets with multiple crowdsourcers,” IEEE Internet Things J., vol. 5,
no. 2, pp. 708–715, Apr. 2018.
[25] A. Chakeri and L. G. Jaimes, “An iterative incentive mechanism design
for crowd sensing using best response dynamics,” in Proc. IEEE ICC,
Paris, France, May 2017, pp. 1–7.
[26] N. Houy, “The bitcoin mining game,” Ledger J., vol. 1, no. 13,
pp. 53–68, 2016.
[27] J. I. Beccuti and C. Jaag, “The bitcoin mining game: On the optimality of
honesty in proof-of-work consensus mechanism,” Swiss Econ., Zürich,
Switzerland, Working Papers 0060, Aug. 2017.
[28] A. Kiayias, E. Koutsoupias, M. Kyropoulou, and Y. Tselekounis,
“Blockchain mining games,” in Proc. ACM Conf. Econ. Comput. (EC),
Maastricht, The Netherlands, Jul. 2016, pp. 365–382.
[29] Y. Lewenberg, Y. Bachrach, Y. Sompolinsky, A. Zohar, and J. S.
Rosenschein, “Bitcoin mining pools: A cooperative game theoretic
analysis,” in Proc. ACM AAMAS, Istanbul, Turkey, May 2015,
pp. 919–927.
[30] B. A. Fisch, R. Pass, and A. Shelat, “Socially optimal mining pools,”
in Proc. Int. Conf. Web Internet Econom., 2017, pp. 205–218.
[31] S. Kim, “Group bargaining based bitcoin mining scheme using incentive
payment process,” Trans. Emerg. Telecommun. Technol., vol. 27, no. 11,
pp. 1486–1495, 2016.
[32] L. Luu, R. Saha, I. Parameshwaran, P. Saxena, and A. Hobor, “On power
splitting games in distributed computation: The case of bitcoin pooled
mining,” in Proc. IEEE CSF, Verona, Italy, Jul. 2015, pp. 397–411.
[33] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When mobile
blockchain meets edge computing,” IEEE Commun. Mag., vol. 56, no. 8,
pp. 33–39, Aug. 2018.
[34] N. C. Luong, Z. Xiong, P. Wang, and D. Niyato, “Optimal auction for
edge computing resource management in mobile blockchain networks:
A deep learning approach,” in Proc. IEEE ICC, Kansas City, MO, USA,
May 2018, pp. 1–6.
[35] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, “Social welfare maximization
auction in edge computing resource allocation for mobile blockchain,”
in Proc. IEEE ICC, Kansas City, MO, USA, May 2018, pp. 1–6.
[36] G. Wood, “Ethereum: A secure decentralised generalised transaction
ledger (EIP-150 revision),” Ethereum Project, White Paper, 2017.
[37] D. K. Tosh et al., “Security implications of blockchain cloud with anal-
ysis of block withholding attack,” in Proc. IEEE/ACM CCGrid, 2017,
pp. 458–467.
[38] N. Wang, B. Varghese, M. Matthaiou, and D. S. Nikolopoulos,
“ENORM: A framework for edge node resource management,” IEEE
Trans. Services Comput., to be published.
[39] Orphan Probablity Approximation. Accessed: Mar. 2013. [Online].
Available: https://gist.github.com/gavinandresen/5044482
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
4600 IEEE INTERNET OF THINGS JOURNAL, VOL. 6, NO. 3, JUNE 2019
[40] E. S. Robla, “Analysis of reward strategy and transaction selection in
bitcoin block generation,” Ph.D. dissertation, Dept. Elect. Eng., Univ.
Washington, Seattle, WA, USA, 2015.
[41] C. Decker and R. Wattenhofer, “Information propagation in the bitcoin
network,” in Proc. IEEE P2P, Trento, Italy, Sep. 2013, pp. 1–10.
[42] Z. Han, D. Niyato, W. Saad, T. Baar, and A. Hjrungnes, Game
Theory in Wireless and Communication Networks: Theory, Models, and
Applications. Cambridge, U.K.: Cambridge Univ. Press, 2012.
[43] G. Scutari, D. P. Palomar, F. Facchinei, and J.-S. Pang, “Convex
optimization, game theory, and variational inequality theory,” IEEE
Signal Process. Mag., vol. 27, no. 3, pp. 35–49, May 2010.
[44] K. Suankaewmanee et al., “Performance analysis and application of
mobile blockchain,” in Proc. IEEE Int. Conf. Comput. Netw. Commun.
(ICNC), 2018, pp. 642–646.
[45] Docker. [Online]. Available: https://www.docker.com/community-
edition
[46] Go-ethereum. Accessed: Jun. 2017. [Online]. Available:
https://ethereum.github.io/go-ethereum/
[47] C. Jiang, Y. Chen, Q. Wang, and K. R. Liu, “Data-driven auction mecha-
nism design in IAAS cloud computing,” IEEE Trans. Services Comput.,
to be published.
[48] S. Feng et al., “On cyber risk management of blockchain networks: A
game theoretic approach,” arXiv preprint arXiv:1804.10412, 2018.
Zehui Xiong (S’17) received the B.Eng. degree
(Hons.) in telecommunication engineering from the
Huazhong University of Science and Technology,
Wuhan, China, in 2016. He is currently pursuing
the Ph.D. degree at the School of Computer Science
and Engineering, Nanyang Technological University,
Singapore.
His current research interests include network
economics, game theory for resource management,
market models, and pricing.
Shaohan Feng (S’17) received the B.S. degree
from Beihang University, Beijing, China, in 2014,
and the M.Sc. degree from Zhejiang University,
Hangzhou, China, in 2016. He is currently pursuing
the Ph.D. degree at the School of Computer Science
and Engineering, Nanyang Technological University,
Singapore.
His current research interests include resource
management in cloud computing and communica-
tion networks.
Wenbo Wang (S’13–M’17) received the B.S. and
M.S. degrees from the School of Automation,
Beijing Institute of Technology, Beijing, China, and
the Ph.D. degree in computing and information sci-
ences from the Rochester Institute of Technology,
Rochester, NY, USA, in 2016.
He is currently a Research Fellow with the School
of Computer Engineering, Nanyang Technological
University, Singapore. His current research interests
include cross-layer optimization in multimedia wire-
less networks, cognitive radio networks, game theo-
retical modeling and mechanism design in wireless networks, and Internet of
Things.
Dusit Niyato (M’09–SM’15–F’17) received the
B.Eng. degree from the King Mongkut’s Institute
of Technology Ladkrabang, Bangkok, Thailand, in
1999, and the Ph.D. degree in electrical and com-
puter engineering from the University of Manitoba,
Winnipeg, MB, Canada, in 2008.
He is currently a Full Professor with the School
of Computer Science and Engineering, Nanyang
Technological University, Singapore. His current
research interests include energy harvesting for wire-
less communication, Internet of Things, and sensor
networks.
Ping Wang (M’08–SM’15) received the Ph.D.
degree in electrical engineering from the University
of Waterloo, Waterloo, ON, Canada, in 2008.
She is currently an Associate Professor with the
Department of Electrical Engineering and Computer
Science, York University, Toronto, ON, Canada. Her
current research interests include resource allocation
in multimedia wireless networks, cloud computing,
and smart grid.
Dr. Wang was a co-recipient of the Best Paper
Award of the IEEE Wireless Communications and
Networking Conference in 2012 and the IEEE International Conference on
Communications in 2007. She is an Editor of the IEEE TRANSACTIONS
ON WIRELESS COMMUNICATIONS, the EURASIP Journal on Wireless
Communications and Networking, and the International Journal of Ultra
Wideband Communications and Systems.
Zhu Han (S’01–M’04–SM’09–F’14) received the
B.S. degree in electronic engineering from Tsinghua
University, Beijing, China, in 1997, and the M.S.
and Ph.D. degrees in electrical and computer engi-
neering from the University of Maryland at College
Park, College Park, MD, USA, in 1999 and 2003,
respectively.
From 2000 to 2002, he was a Research and
Development Engineer with JDSU, Germantown,
MD, USA. From 2003 to 2006, he was a Research
Associate with the University of Maryland at
College Park. From 2006 to 2008, he was an Assistant Professor with Boise
State University, Boise, ID, USA. He is currently a Professor with the
Electrical and Computer Engineering Department and the Computer Science
Department, University of Houston, Houston, TX, USA. His current research
interests include wireless resource allocation and management, wireless com-
munications and networking, game theory, big data analysis, security, and
smart grid.
Dr. Han was a recipient of the NSF Career Award in 2010, the
Fred W. Ellersick Prize of the IEEE Communication Society in 2011, the
EURASIP Best Paper Award for a paper published in the Journal on Advances
in Signal Processing in 2015, the IEEE Leonard G. Abraham Prize in the
field of communications systems (Best Paper Award in the IEEE JOURNAL
ON SELECTED AREAS IN COMMUNICATIONS) in 2016, and several Best
Paper Awards at IEEE conferences. He is currently an IEEE Communications
Society Distinguished Lecturer.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:45 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZapfChancery-MediumItalic
    /ZapfDingBats
    /ZapfDingbatsITCbyBT-Regular
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice