Incentive Mechanism for Edge Computing-Based Blockchain: A Sequential Game Approach
IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 11, NOVEMBER 2022 7899
Incentive Mechanism for Edge
Computing-Based Blockchain: A
Sequential Game Approach
Wenlong Guo , Zheng Chang , Senior Member, IEEE, Xijuan Guo , Peiliang Wu,
and Zhu Han , Fellow, IEEE
Abstract—Due to its distributed characteristics, the
development and deployment of the blockchain framework
are able to provide feasible solutions for a wide range
of Internet of Things (IoT) applications. While the IoT
devices are usually resource-limited, how to make sure the
acquisition of computational resources and participation of
the devices will be the driving force to realize blockchain at
the network edge. In this article, an edge computing-based
blockchain framework is considered, where multiple
edge service providers (ESPs) can provide computational
resources to the devices for mining. We mainly focus on
investigating the trading between the devices and ESPs
in the computational resource market, where ESPs act as
the sellers and devices act as the buyers. Accordingly,
a sequential game model is formulated and by exploring
the sequential Nash equilibrium (SE), the existence of the
optimal solutions of selling and buying strategies can
be proved. Then, a deep Q-network-based algorithm with
modified experience replay update method is applied to
find the optimal strategies. Through theoretical analysis
and simulations, we demonstrate the effectiveness of the
proposed incentive mechanism on forming the blockchain
via the assistance of edge computing.
Index Terms—Blockchain, edge computing, incentive
mechanism, mining.
Manuscript received 30 September 2021; revised 17 February 2022;
accepted 25 March 2022. Date of publication 6 April 2022; date of cur-
rent version 9 September 2022. This work was supported in part by the
NSFC under Grant 62071105, in part by the China Postdoctoral Science
Foundation under Grant 2018M631620, in part by the Beijing Natural
Science Foundation under Grant 4202026, in part by the NSFunder
Grant CNS-2107216 and Grant CNS-2128368. Paper no. TII-21-4284.
(Corresponding author: Zheng Chang.)
Wenlong Guo, Xijuan Guo, and Peiliang Wu are with the Col-
lege of Information Science and Engineering, Yanshan University,
Qinhuangdao 066004, China (e-mail: guowenlong2106@163.com;
xjguo@ysu.edu.cn; peiliangwu@ysu.edu.cn).
Zheng Chang is with the School of Computer Science and En-
gineering, University of Electronic Science and Technology of China,
Chengdu 610056, China, and also with the Faculty of Information
Technology, University of Jyväskylä, 40014 Jyväskylä, Finland (e-mail:
zheng.chang@jyu.fi).
Zhu Han is with the Department of Electrical and Computer En-
gineering, University of Houston, Houston, TX 77004 USA, and also
with the Department of Computer Science and Engineering, Kyung Hee
University, Seoul 446-701, South Korea (e-mail: zhan2@uh.edu).
Color versions of one or more figures in this article are available at
https://doi.org/10.1109/TII.2022.3163550.
Digital Object Identifier 10.1109/TII.2022.3163550
I. INTRODUCTION
THE emergence of Internet of Things (IoT) will be the
driving force of the development of the future informa-
tion and communication technology (ICT) [1]. However, due
to distributed and resource-constrain natures of IoT, the se-
curity mechanism design is critical for its wide deployment.
Recently, the blockchain has evolved from the original digital
currency to extensive IoT applications due to its distributed,
tamper-resistant, retrospective, and transparent features [2]. As a
well-known decentralized ledger-based framework, blockchain
is able to provide secure transactions and trust in a trustless net-
work environment. The node (or so called miner) in blockchain
executes some computation tasks to obtain an unverified block.
When one miner successfully addresses the consensus protocol,
it could report the result to blockchain for verification. The
miners will reach consensus when the verification is correct
and then obtain rewards caused by the computing for consensus
process (or so called mining). As we can see, the blockchain has
its great potential to provide a secure IoT platform, especially
when facing large-scale accesses.
Although blockchain has been widely adopted in many ap-
plications, its application in mobile services is still limited.
Before adding or publishing to the blockchain, some complex
computation problems, e.g., PoW puzzle, are solved to secure the
integrity and validity of transactions. In this context, to facilitate
blockchain applications in future mobile IoT systems, mobile
edge computing can play a significant role [3]. Leveraging the
computing capabilities of edge computing system, the miners
with insufficient hash power can rent computational resources
from edge service providers (ESPs) [4]. Thus, how to incentivize
the miners to participate the blockchain process and obtain
the computational resources from ESP or perform computation
offloading is of profound significance [3]–[6]. Meanwhile, how
to encourage multiple ESPs to provide computational resources
to the miners is also crucial. Such observations motivate us to
seek for game theoretic approaches to explore the interactions
between multiple ESPs and multiple miners.
Recently, there are increasing interests on utilizing blockchain
incentive to design the blockchain system. There are several
works utilizing the mathematical methodology on designing
the incentive schemes for multiple players [7]–[14]. Jiao et
al. [7] designed an approximation algorithm and study how
1551-3203 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-2275-5389
https://orcid.org/0000-0003-3766-820X
https://orcid.org/0000-0002-2816-5849
https://orcid.org/0000-0002-6606-5822
mailto:guowenlong2106@163.com
mailto:xjguo@ysu.edu.cn
mailto:peiliangwu@ysu.edu.cn
mailto:zheng.chang@jyu.fi
mailto:zhan2@uh.edu
https://doi.org/10.1109/TII.2022.3163550
7900 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 11, NOVEMBER 2022
to maximize the social welfare of blockchain network. Xiong
et al. [8] proposed to investigate the optimal profits of the
ESPs and/or miners under different pricing strategies via game
theoretic approaches. Houy [9] suggested a two-miner model to
find the strategy of utilizing computation resource and find the
Nash Equilibrium (NE) in the blockchain. In [10], Lewenberg
et al. presented a cooperative game model to study the dynamic
equilibrium problem that when the miners choose to participate
in the mining pool. Combining the blockchain reputation and
incentive mechanism, Avyukt et al. [11] adopted the game
theoretical methods to formulate the multibuyer and multiseller
data marketplace, and realize the credible evaluation of a higher-
quality ecosystem. Liu et al. [12] proposed a blockchain-based
double auction protocol, in which multiple buyers and sellers
could quickly optimize a balance market cleaning price, to en-
sure integrity, efficiency, and incentive. For P2P energy trading,
Kumari et al. [13] formulated a blockchain-based scheme and
Q-learning algorithm to optimize the decision-making process
to improve system security, transaction latency, and participant
rewards. Huang et al. [14] proposed to achieve social welfare
maximization by a truthful double auction mechanism, which
the incentive and fairness of the buyers and sellers could be
guarantee.
However, the current works rarely analyze the competitive
relationship like seller–seller, buyer–buyer, and the dynamic
competition between multiple buyers and sellers in the edge
computing-based blockchain system. Motivated by the afore-
mentioned observations, in this article, we aim at proposing
a novel incentive mechanism for an edge computing-based
blockchain, in order to find the optimal purchase and pricing
strategies for all the involved ESPs and miners. The main con-
tribution can be summarized as follows.
1) We consider a multi-ESPs and multiminers scenario.
In the considered system, to encourage the devices to
participate the mining process and ESPs to provide the
computational resources, we aim to explore the relations
and interactions between these two parties.
2) We mainly focus on investigating the trading process be-
tween the devices and ESPs in the computational resource
market, where ESPs and miners can act as the sellers
and buyers, respectively. Accordingly, a sequential game
model is formulated. Then, we have proved the existence
and uniqueness of the NE, and applied backward induc-
tion to find the global optimal solution.
3) To optimize strategies, a deep Q-network-based algorithm
with modified experience replay update is applied to find
the optimal strategies. The proposed mechanisms can help
both parties obtain the best utilities in a dynamic manner
and essentially stimulate the development of blockchain
system. Numerical results demonstrate the effectiveness
of the proposed incentive mechanism.
The rest of this article is organized as follows. The designed
system model is introduced in Section II. In Section III, we
formulate the resource trading market. Then, Section IV formu-
lates the sequential equilibrium problem. Section V proposes
a deep reinforcement learning (RL)-based algorithm to obtain
optimal solution. In Section VI, simulation study is conducted
Fig. 1. System model.
with detailed discussions. Finally, Section VII concludes this
article.
II. SYSTEM MODEL
A. System Assumptions
We consider an edge computing-assisted blockchain system
with M ESPs and N miners. Each ESP can provide homoge-
neous computational resource services to all the miners. Miners
pay for the computational resources, in form of offloading the
computing tasks of PoW puzzle to the ESPs. On blockchain,
once the clients publish the verified requests, miners can offload
the computing tasks to all the ESPs through dedicated channels
via the wireless connection, then ESPs can obtain returns by
providing recourse. Each ESP can provide computational ser-
vices to multiple miners at the same time, and so do miners. As
shown in Fig. 1, consensus mechanism makes it necessary for
the miners to immediately handle the PoW puzzles.
We assume that prices set of computational resource of ESP
j is pj = [pj1, . . ., p
j
i , . . ., p
j
N ]T , where pji is the price of ESP
j for miner i. We assume pji ∈ [pmin, pmax], where pmin and
pmax are the minimum and maximum prices, respectively. The
set of prices of computational resource of all the ESPs is P =
{p1, . . .,pj , . . .pM}. The set of strategies (the amounts of pur-
chasing) of all the miners is S = {s1, . . ., si, . . ., sN}, where si
is the purchase strategy of miner i. We assume si ∈ [smin, smax],
where smin and smax are the minimum and maximum purchase
quantity, respectively. Meanwhile, The computational capability
or hash power proportion of miner i is αi, which is expressed as
αi =
si∑
i∈N
s−i
. (1)
In this article, we assume the communications between the
ESP and miners are perfect, and we did not consider the problem
during the transmission process, caused by channel variation or
spectrum usage. In practice, when the size of offloaded task is
small, the transmission will not be the bottleneck due to the
relatively sufficient communication and computing resources
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: INCENTIVE MECHANISM FOR EDGE COMPUTING-BASED BLOCKCHAIN 7901
owned by the ESP. Thus, we mainly focus on the trading inter-
action between sellers (i.e., ESPs) and buyers (i.e., miners), to
study the optimal strategy to enable MEC-based blockchain.
B. Mining Process and Consensus Mechanism
The solution of PoW puzzle is considered as a stochastic
process following the Poisson distribution [19] with parameter
λ. Then, the probability of successfully solving the problem μi
is defined as
μi = αie
−λti (2)
where the computing delay ti is related to the transactions or
block size of each block πb. Then, we have ti = ςiπb where
ςi is a constant parameter for miner i, where −i means all the
remaining miners except i.
C. Degree of Satisfaction
For miner i, the amount of purchased computational resources
depends on its cost and the degree of satisfaction (DoS) obtained
through the mining process. For miner i, we have following
definition of DoS D(si):
D (si) = log2 (1 + μi) . (3)
For (3), the logarithmic function satisfies the constraint of
0 ≤ D(si) ≤ 1, where it is the possibility of obtaining profits.
In addition. the logarithmic function of the DoS is convex and
it can indicate that DoS of the miner increases as the proportion
of computational resources increases, and there must exist a
maximum value that optimizes the satisfaction of miners [20].
III. RESOURCE TRADING MARKET
First, we formulate the resource trading between the ESPs and
miners as a sequential game in Section III-A and then present
the corresponding game model among the ESPs and miners.
A. Sequential Game Formulation
For service provisioning, a two-stage game model is formu-
lated. Once the strategies in the previous stages were determined,
the players (either ESPs or miners) in the later stage can select
the corresponding strategies. Then, the trades between multiple
ESPs and miners are considered as sequential decision-making
problem, where the players can make successive observations
before the final decision is made. In this article, we mainly
focus on the trading interaction between sellers/ESPs and buy-
ers/miners.
Correspondingly, we formulate the trading between the ESPs
and miners as a sequential game G with incomplete dynamic
information. The competition among the miners is modeled by
noncooperative game GM and competition among the ESPs is
defined as multioligopoly Cournot game GE . Sequential game
is a model for making decisions along time slots based on the
sequential rationality assumption. That is, all players dynami-
cally adjust their strategies to find optimized decisions based on
the current observations.
B. Mining Competition Among Multiple Miners
Blockchain players can be rewarded by participating the
mining. The computational resource acquisition process of the
miners is modeled as a noncooperative game, where the players
are miners and the strategies are the purchasing amount from
ESPs for solving the PoW puzzle. The utility of the miner
consists of profit and cost functions. The profit E(si) can be
defined as follows:
1) The profit functionE(si) is a combination of fixed reward
Rf and performance reward Rp, which is
E (si) = μi (Rf +Rp) . (4)
2) The fixed rewardRf is the constant reward for computing
a newly generated block. The fixed reward of blockchain
can be regarded as an attenuation function of which the
half-life is T . That is
Rf = Rmax
f
(
1
2
) tc
T
(5)
where Rmax
f is the constant reward from genesis block
and tc is the time point when miners start mining.
3) The performance reward Rp is related to the volume of
transactions contained within the generated block, e.g.,
the size of each block. We have following definition:
Rp = rπb, (6)
where r is an evaluation factor and πb is the size of block.
4) The participant reward Rε,i depends on the degree of
participation in the computing process while the new
block is generated, i.e.,
Rε,i = εαi (7)
where ε is an evaluation factor.
5) The purchase expenditure cEi is paid to the ESP for
computational resource, i.e.,
cEi = pjisi. (8)
The computational cost ci,M is the consumption gener-
ated during the calculation process.
For miner i, the total profit comes from mining process and
the cost is related to the purchase of computational resources.
With the above definitions, the utility of miner i is given as
UM
i (S,P) = E (si)+Rε,i−cEi −ci,M . (9)
C. Market Competition Among Multiple ESPs
As mentioned above, the competition via multiple ESPs is
formulated as a multioligopoly Cournot game. Multiple ESPs
acting as the sellers select the pricing strategies at the same time,
and they cannot observe each others’ strategies and utilities.
Based on the DoS of miners and cost cjE , the utility function of
the ESP j can be defined as follows:
UE
j (S,P) =
N∑
i=1
pjisiD(si)− cjE . (10)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
7902 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 11, NOVEMBER 2022
IV. SEQUENTIAL GAME ANALYSIS
In this part, the objectives of both stages are formulated in
Section IV-A. The sequential game is then transformed into a
static game by Harsanyi transformation in Section IV-B, and the
existence and uniqueness of the Stackelberg equilibrium (SE)
of two-stage static game are discussed in two separated cases in
Sections IV-C and IV-D.
A. Problem Formulation
In the formulated game, multiple miners need to compete for
the resources and the optimal utility in a noncooperative manner.
The miners cannot observe the each others’ information (e.g.,
purchasing demand and the probability of successfully mining)
and the strategies of all miners are executed at the same time.
Thus, the subgame of miners is considered as a static game with
incomplete information. In this stage, the optimization problem
(P1) is formulated as
P1 : max
S
UM
i (S,P)
s.t. D (si) ∈ [0, 1]
(11)
The competition among the ESPs is modeled as a multi-
oligopoly Cournot game. The ESPs cannot obtain each other’s
information and the subgame of ESPs is also a static game with
incomplete information. In this stage, the subgame of the ESP
aims at addressing the following problem, i.e.
P2 : max
P
UE
j (S,P)
s.t. D (si) ∈ [0, 1]
(12)
Based on the presented sequential game model, a two-stage
iterative method is required to reach a SE. This two-stage update
will iterate until the conditions in Definition 1 are satisfied.
Definition 1: Let S∗ be a solution for P1 and P∗ denotes a
solution for P2, Then, the point (S∗,P∗) is a Sequential equi-
librium for the game if for any (S,P) the following conditions
are fulfilled:
UE
j (S∗,P∗) ≥ UE
j (S,P)
UM
i (S∗,P∗) ≥ UM
i (S,P) .
In the considered two-stage game, the miners choose their
purchasing strategies after observing the information of all the
ESPs. The miners inevitably purchase the resources that can
optimize their own utilities, and the ESPs will accordingly adjust
their pricing strategies to reach equilibrium in a dynamic man-
ner. The overall game is considered as a sequential game with
incomplete information. As mentioned, ESPs may tend to obtain
the miners’ private information to complete the formulated
game. Based on the historical interaction records (e.g., incentive,
consumption, and probability) in the computing resource trading
market, ESPs can predict the private information and formulate
the next-step strategies. In addition, the communication between
the ESPs and miners can also contains some of the information,
which could accelerate the decision-making process.
B. Harsanyi Transformation
For the formulated sequential game with incomplete infor-
mation, we choose to add a virtual player Ω to transform the
dynamic game into a two-step static game [15]. After Ω chooses
the participants, who will formulate the strategies in the next
step, the dynamic game is transformed into a two-stage static
game. Backward induction method is then used to gradually
reverse from the later stage of decision-making to the previous
stage. That is, the study of subgame NE of the previous stage
will have to add the later equilibrium as the basis. When the
subgame in each stage reaches NE, the game will turn into the
SE, i.e., the global optimal solution of formulated problem.
In the following, two decision-making scenarios are dis-
cussed separately: ESP-first-select case and miner-first-select
case, based on which set of players act first in the second step
of Harsanyi Transformation. Next, we turn each of cases into a
two-stage decision-making problem, and study the SE of these
two cases, respectively.
C. ESP-First-Select (EFS) Case
In this part, we study the case that ESPs first set the price.
Thus, in the first stage, the ESPs first set the price, and the miners
purchase the resources from the ESPs in the second stage. In
the following, backward induction method is used to solve the
optimization problem through reverse deduction.
1) Game of Miners in EFS: The utility function of miner i
obtaining computational resources from ESP j can be expressed
as follows:
UM
i = e−λtiαi (Rf +Rp)+εαi−pjisi − ci,M . (13)
Take the first and second derivatives of UM
i with respect to
si, respectively, we obtain that⎧⎨
⎩
∂UM
i
∂si
= e−λti ∂αi
∂si
(Rf +Rp) + ε∂αi
∂si
− pji
∂2UM
i
∂s2
i
=
(
e−λti (Rf +Rp) + ε
)
∂2αi
∂s2
i
.
(14)
The first and second derivatives of αi with respect to si is
given as ⎧⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩
∂αi
∂si
=
∑
i∈N
s−i
( ∑
i∈N
si
)2 , i ∈ N
∂2αi
∂si2 = −2
∑
i∈N
s−i
( ∑
i∈N
si
)3 .
(15)
Then, we are able to find UM
i is convex with respect to s∗i .
Accordingly, there must be at least one s∗i , which enables to
optimize the utility of miner i while the condition of ∂UM
i
∂si
= 0
can be satisfied.
Next, the fixed point method is used to explore the existence
of NE and we can obtain the following two theorems.
Theorem 1: In the formulated sequential game G, there exists
fixed point(s).
Proof: Obviously, S and P are all nonempty sets. Because
the domain of S and P all contain upper bounds, so S and P
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: INCENTIVE MECHANISM FOR EDGE COMPUTING-BASED BLOCKCHAIN 7903
belong to the subnonempty compact spaces of Euclidean space
�. In addition, the utility function is a strictly convex function.
We can also see that the solution set are convex set. Moreover, it
can be easily obtained that the function is continuous. Above all,
the strategy sets of this game are nonempty convex and compact
sets, and the utility functions are continuous.
Then, the utility function of miners could be a continuous
mapping in the total sets of strategy and utility. According to
the definition of Brower’s fixed point theorem [16], the utility
function must have a fixed point, i.e., there is a s0 in S , which
enables s0 = U(s0). The proof is now completed. �
Theorem 2: The defined utility functions have the fixed
points.
Proof: The strategy set of the game GM is an nonempty
convex and compact set, and the utility function is continuous.
Therefore, the defined utility function must have the fixed points.
Due to the limitation of the space and detailed proof can be found
in [16], we omit here. �
Assume that e−λti(Rf +Rp) = Φ, we can obtain
Φ
∂αi
∂si
+ ε
∂αi
∂si
− pji = 0. (16)
Due to the fact
si =
∑
i∈N
si −
∑
i∈N
s−i (17)
and we have
s∗i =
√√√√ (Φ + ε) · ∑
i∈N
s−i
pji
−
∑
i∈N
s−i. (18)
To this end, the optimal purchasing strategy for miner i, which
maximizes the utility is expressed as follows:
s∗i =
(N − 1)∑
i∈N
pj
i
Φ+ε
− pji
Φ+ ε
⎛
⎜⎜⎝ (N − 1)∑
i∈N
pj
i
Φ+ε
⎞
⎟⎟⎠
2
. (19)
Then, we will study the uniqueness of the NE. In noncoopera-
tive game problems, the sequential equilibrium solution problem
(SEP) and the variational inequality (VI) problem have some
common similarities. Thus, the problem of refining NE can be
transformed into the VI problem [17]. Based on the uniqueness
of the NE in the formulated miners’ subgame with nonempty
convex compact set of strategy, there are mainly two methods to
construct the VI problem.
2) Game of ESPs in EFS: Based on the above definitions,
the utility of ESP j obtained from serving miner i is
UE
j = pjisiD (si)− cjE . (20)
After we get the optimal purchasing strategy, which maxi-
mizes the utility of miners, the best pricing strategy for ESP can
be applied in a similar manner in the first stage. After substituting
(3) and (19) into (20), one can arrive
UE
j = pjs∗iD (s∗i )− cjE . (21)
Then, with some calculations, conclusions can be easily ob-
tained that the UE
j is also a convex function with respect to pj
while
∂2UE
j
∂(pj
i )
2 < 0. The optimal pricing strategy (pj)∗ that makes
ESP maximize the profits while the condition
∂UE
j
∂pj = 0 can be
satisfy.
To this end, the following observations can be made: there
must exist an unique α∗i , which makes the Hessian matrix to
be negative definite. That is, the optimization of EFS is true.
Through backward induction method, we can also find the
existence of an unique strategy combination (i.e., SE) (S∗,P∗)
which optimizes the problem P1 and P2.
D. Miner-First-Select (MFS) Case
In this case, rational miners first select the purchasing strategy
based on the observations. Then, ESPs select the pricing strategy
accordingly. Here, we also utilize backward induction and first
study the second stage of this game.
1) Game of ESPs in MFS: In the second stage of MFS, the
ESP select a pricing strategy. The considered homogeneous
ESPs (with the same strategy space) simultaneously choose
their strategies in the Cournot game. To maximize utilities,
miners inevitably expect much more computational resources
with lower prices. Obviously, the increase in the amount of
computational resources provided by multiple ESPs will have
an negative impact on selling prices.
Let qj be the strategy of ESP j for selecting the provided quan-
tity, where the set of quantity strategy isΘ = (q1, .., qj , . . ., qM )
and qj ∈ [qmin, qmax], where qmin and qmax are the minimum
and maximum quantities, respectively. We assume that the seller
decides the resource quantity strategy at time t+ 1 based on the
profits of moment t, that is
qj (t+ 1) = qj(t) + ϑqj(t)
∂UE,Θ
j
∂qj
(22)
where ϑ is a positive value of the relative adjusting speed of qj ,
and the presentation of UE
j is given in (24).
Let’s consider a Cournot duopoly game, where a twice differ-
entiable and quadratic nonlinearity inverse demand function [21]
can be denoted as follows:
pj = p
(
QE
)
= aB − bB
(
QE
)2
(23)
where aB and bB are positive constants of demand function,
QE =
∑M
j=1 q
j is the total quantity ESPs provided. Also we
have QE =
∑N
i=1 si.
For simplification, we now redefine the utility function of ESP
through the economic method, and ignore the impact of D(si)
from miner i. Thus, the utility of ESP j would be
UE
j =
(
pj − cjE
)
qj =
(
aB − bB
(
QE
)2 − cjE
)
qj (24)
Take the first derivative of UE
j with respect to qj and we have
∂UE,Θ
j
∂qj
= −2qjQE ∂Q
E
∂qj
+
(
aB − bB
(
QE
)2 − cjE
)
. (25)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
7904 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 11, NOVEMBER 2022
Once the condition
∂UE
j
∂qj = 0 was true, the optimal selling
strategy for ESP j can be denoted as (qj)∗ = f(pj).
Thus, the optimal quantity of ESP j was obtained by
(
qj
)∗
= argmax
q(j)
[(
aB − bB
(
QE
)2 − cjE
)
qj
]
. (26)
Then, the optimization problem P2 can be transformed into
P2’ under the condition of ignoring DoS for ESP, that is
P2′ : max
S,Θ
UE,Θ
j
s.t. C1 :D (si) ∈ [0, 1] .
(27)
Therefore, we define the Lagrange function of P2’ as
L
(
qj , ζi
)
=
(
aB−bB
(
QE
)2− cjE
)
qj
−
N∑
i=1
ζi (D (si)− 1) (28)
where ζi > 0 is Lagrange multiplier corresponding to constraint
C1. After the KKT condition can be obtained,the Lagrange
method to solve the optimal problem to find the optimal (qj)∗
and then (pj)∗. Due to the space limitation, we omit it here.
Based on the mentioned fixed points theorem and the strategy
qj(t+ 1) at slot t+ 1, the dynamic equation of the ESPs could
be expressed by mapping function from the previous time slot
⎧⎪⎨
⎪⎩
q1 (t+ 1) = q1(t) + ϑq1(t)
∂UE
1
∂q1
. . .
qM (t+ 1) = qM (t) + ϑqM (t)
∂UE
M
∂qM
.
(29)
We consider study the eigenvalues of the Jacobian matrix of
the aforementioned mapping function to research the stability
of the NE
J =
⎡
⎢⎣
∂q1(t+1)
∂q1(t)
∂q1(t+1)
∂q2 . . . ∂q1(t+1)
∂qM
. . . . . . . . .
∂qM (t+1)
∂q1(t)
∂qM (t+1)
∂q2(t) . . . ∂qM (t+1)
∂qM (t)
⎤
⎥⎦ . (30)
Through two typical cases, i.e., the selection of adaptive
strategies adjustment strategies, the stability of the NE could
be verified and the necessary conditions to be satisfied.
Case 1: when there are two ESPs and both ESPs adjust the
quantity according to the income at the previous time slot. That
is, when (22) is satisfied, the Jacobian matrix is as follows:
J1 =
[
J1,1 J1,2
J1,3 J1,4
]
(31)
where⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
J1,1 = (q1)2ϑ−2− bB − 4ϑ+ (q2)2ϑ−2− bB
+ q1q2−2ϑbB + ϑ−2− 2bB + ϑaB − cjE + 1
J1,2 = 2−2− bBq2 − 2bBq
1
J1,3 = 2−2− bBq1 − 2bBq
2
J1,4 = (q2)2ϑ−2− bB − 4ϑ+ (q1)2ϑ−2− bB
+ q1q2−2ϑbB + ϑ−2− 2bB + ϑaB − cjE + 1.
(32)
The eigenvalues can be obtained as follows:
(λ1,1, λ1,2)
=
−2±
√
(J1,1+J1,4)
2−4 (J1,1J1,4−J1,2J1,3) (J1,1+J1,4)
4 (J1,1J1,4−J1,2J1,3) (J1,1+J1,4)
.
(33)
Substituting (32) into (33), for given q1 and q2, we can see
that the stability of NE is relevant to ϑ since aB and bB are only
coefficient constraints.
Case 2: when there are two ESPs, if one of them is a strategic
choice to adjust based on the observations of the previous slot,
and the other is an adaptive adjustment, that is
q1 (t+ 1) = q1(t) + ϑq1(t)∂u
1
∂q1
q2 (t+ 1) = (1− β) q2(t) + βq1(t)
(34)
where β is the adjustment speed.
Similarly, the Jacobian matrix can be defined as
J2 =
[
J2,1 J2,2
J2,3 J2,4
]
(35)
where ⎧⎪⎪⎨
⎪⎪⎩
J2,1 = J1,1
J2,2 = ϑq1
(
2 (−2− bB) q2 − 2bBq1
)
J2,3 = β
J2,4 = ∂q2(t+1)
∂q2(t) = 1− β.
(36)
Similarly, conclusion can be easily drew that he stability of
NE is related to the speed of adjustment ϑ, β. When the NE is
stable, the utility of the ESPs cannot be increased by altering the
quantity or price.
The combined analysis of Case 1 and Case 2 shows that
when ESPs select the quantity of computing resources, no mat-
ter what kind of strategy is using, as long as the appropriate
adjustment speed is selected, the optimal sale strategy q∗ =
[(q1)
∗
, (q2)
∗
, . . ., (qM )
∗
]T can be achieved and the stability can
be guaranteed.
Based on (23), when ESP j selects the optimal quantity (qj)∗,
the optimal pricing scheme could be obtained as follows:(
pj
)∗
= aBE − bBE
((
QE
)∗)2
. (37)
The selection of adaptive strategies adjustment strategies, the
stability of the NE could be verified and the necessary conditions
to be satisfied. When ESPs select the quantity of computing
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: INCENTIVE MECHANISM FOR EDGE COMPUTING-BASED BLOCKCHAIN 7905
resources, no matter what kind of strategy is using, as long
as the appropriate adjustment speed is selected, the optimal
sale strategy q∗ = [(q1)
∗
, . . ., (qM )
∗
]T can be achieved and the
stability can be guaranteed.
2) Game of the Miners in MSF: Based on the idea of back-
ward induction, after observing the pricing strategy of ESPs,
miners choose the purchasing strategy. Thus, the utility of miner
i at this time slot is
UM
i = e−λtiαi (Rf,i +Rv,i) + εαi
−
(
aBE − bBE
((
QE
)∗)2
)
si−ci,M .
(38)
The proof of the existence and uniqueness of NE is similar
to above analysis. The existence of NE can be determined by
the fixed point theorem, and the uniqueness can be proved by
Hessian matrix, which we omit it here due to the space limitation.
E. Summary
To study the timer-shaft-based incentive optimization prob-
lem, the incentive mechanism under two cases are separately
studied. Then, the existence and uniqueness of the SE of these
two cases are studied through backward induction. We are able
to find there are SEs for the formulated games which enable the
optimal utility.
V. PROPOSED SOLUTION
As we can see, over a certain amount of time slots, the
optimization problem needs to obtain the complete information
about the future time slots to reach the optimal solution for the
next time slot, which means that absence of prior information
may degrade its achievable performance. Therefore, we intend
to utilize the RL-based algorithm to obtain solution without
aforementioned prior knowledge.
A. RL Framework Formulation
In our considered system, the agent is the network controller,
and the environment consists of all the entities in the network. In
each time slot l, the agent chooses an action al from the action
space, which decides the resource trading. The agent obtains
a reward or punishment from the environment after applying
an action. This scheme aims at maximizing the cumulative
received rewards within interactions. The RL problem comprises
of a single or multiple agents and an environment. Based on
a chosen policy, the agent can take actions to interact with
the environment. Briefly, there are three elements in the RL
framework: action a, state s, and reward r. The state space,
action space, and reward of the DRL-based framework at time
slot l are defined in the following.
1) State: We define the state space Ψ =
(ψl ∈ Ψ, l = 1, 2, . . .) is a set of the following factors: the DoS,
the probability of successfully reward, computational capability,
etc, which is the observation of the current environment at time
slot l.
2) Action: We consider the action space of agent i is A =
{al ∈ A, l = 1, 2, . . .}, where is strategy of the blockchain play-
ers (i.e., S and P) at time slot l.
3) Reward: After executing the chosen action, the agent will
obtain a reward in certain state in each time slot. As the target
of the RL is to obtain reward maximization, the defined reward
needs to be positively related to the objective function. For the
considered problem, we define reward as the utility functions
(i.e., objective function of P1 or P2). In the simulations, as iter-
ative scheme is used for finding the optimum, we use objective
function of P2 as the reward.
B. Proposed DQN-Based Solution
DQN uses a neural network (NN) Q(ψ,a; θ) to represent
Q-function, where θ is the weights of the NN. By updating θ
at each iteration, the Q-network is trained to approximate the
real Q-values. When it is applied to Q-learning, NN improve
the performance of flexibility at the cost of stability [22]. In
this context, DNN is proven to be a robust learning with better
performance [23]. Comparing with the Q-learning, there are
following major improvements in the DQN.
The hierarchical layers of convolution filters in the DNN can
be used to exploit the local spatial correlations. By such, the
high-level features of input data are extracted. The second one
is that experience replay can store its experience tuple e(l) =
(ψl, al, rl, ψl+1) at time slot l into a replay memory O. The
relay can randomly sample batches Ô from the memory to train
the DNN. Such a process enables DQN to learn from different
past experience rather than from the current one. In addition,
while using one network for estimating the Q-values, the target
Q-values that compute the loss of each action in the training
process can be generated by a second network. Such a procedure
is able to make the DQN stable.
DQNs are optimized by minimizing
L(θ) = E[yl −Q(ψl, al; θ))
2] (39)
where yl is the target Q-value, and it can be expressed as
yl = r(ψl, al) + ξmax
al+1
Q∗(ψl+1, al+1; θ
−). (40)
θ− is a target network parameter that is frozen for some
iterations when the online network −Q(ψ,a; θ) is updated by
gradient descent. Specially, the network controller chooses al at
time slot l, obtains reward rl and goes to the next state ψl+1.
Accordingly, an experience replay memory O is used to store
the vector (ψl, al, rl, sl+1).
C. Modified Experience Replay Update Method
We consider to randomly select two historical sequences
in the experience pool and remove the empirical value with
a larger number of Niche (i.e., the distance is greater than a
predetermined value, similar to the concept of variance), and
then put the current sampling result into the experience replay.
Accordingly, we propose a new experience replay update algo-
rithm, which is mainly used for secondary update of the weights
after initialization.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
7906 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 11, NOVEMBER 2022
Algorithm 1: Modified Experience Replay Update Method
for DQN.
1: Input: A, Ψ, θ
2: Output: Optimal strategy
a∗ = argmaxa′∈AQ(ψl+1, al+1; θ)
3: Initialize Q(ψl, al) in the prioritized replay memory D
with the size of ND
4: Initialize the main Q-network with input pairs
(ψl, al, rl, ψl+1) and the target Q(ψl+1, al+1)
5: Initialize the parameters of online Q-network to
measure the loss value
6: Repeat
7: while ∀ψ and a, s.t. Q(ψ, a) not converge do
8: Step 1: At the beginning of decision episode l,
randomly select the action al with probability ε
according to ε-greedy policy.
9: Step 2: Execute action al, received instant reward
signal rl and the new state s′.
10: Step 3: Generate the sequence (ψl, al, rl, ψ
′).
11: Step 4:
12: if (ψ, a, r, ψ′)Niche
cl
< (ψ, a, r, ψ′)Niche
dl
13: (ψ, a, r, ψ′)dl
← (ψl, al, rl, ψl+1)
14: else (ψ, a, r, ψ′)cl ← (ψl, al, rl, ψl+1)
15: Step 5: Randomly sample a mini-batch of the state
sequence (ψl′ , al′ , rl′ , ψ
′) from D
16: Step 6: Calculate the target Q-value by (40) and loss
function
17: Step 7: Randomly generate new weight ω′
18: end while
As shown in Algorithm 1, action al is first selected randomly
based on the probability 1− ε of the ε-greedy strategy at time
slot l. Then, based on state ψl and immediate reward rl, a
new sequence combination (ψl, al, rl, sl+1) will be generated
when the latest state sl+1 is obtained. Next, randomly select
two sequence combinations and replace the greater number of
niche by the new sequence. Then, randomly sample a mini-
batch in the experience replay, gradually approach the target
Q-value through (40), and update the key parameters of the
current Q-network according to the loss function (39). Once it
gradually converges, the iterative process will be interrupted and
the optimal action a∗ = argmaxal+1∈AQ(ψl+1, al+1; θ)will be
the output.
Based on the improved experience replay update method, the
presented DQN algorithm can achieve a rapid convergence with
the help of experience replay sampling. Thus, the players in
edge computing-based blockchain system can quickly find the
optimal participation strategy based on the information set to
achieve the optimal utility.
VI. PERFORMANCE EVALUATION
In this section, we conduct numerical simulation of the de-
signed edge computing-based blockchain incentive mechanism.
For the value of some key parameters, we refer to [7]. In detail,
we set the following parameters to: Rmax
f = 50, T = 107, r =
Fig. 2. Size of block versus DoS.
Fig. 3. Quantity versus utility of ESP.
105, ε = 10−6, λ = 1
600 , η = 10−2, ci,M = 10−3, cjE = 10−4, ξ
= e− 1, and ε = 5× 10−2.
Fig. 2 shows the relations between the number of transactions
in block πb and the formulated DoS. It can be found that,
when miners own fixed computational capability or hash power
proportionαi, the DoS increases as the size of block increases. It
is mainly because that the increase of number of transactions in
the block (i.e., the block size) directly makes it more difficult to
solve a new PoW puzzle. Then more computational resource is
needed for mining. For the case of fixed number of transactions
πb in the block, it is obvious that the increase in αi directly
leads to an increment of DoS. Based on the definition, the DoS
is mainly determined by the probability of successfully mining,
which is further affected by the factors such as the number of
transactions, time delay and the proportion of hash power.
Fig. 3 illustrates the relations between the quantity of compu-
tational resource qj provided by ESP and the utility j UE
j . It can
be found that when the block size πb is constant, the increase of
the quantity qj leads to the increase of the utility of ESP j. Based
on the definition of the utility, UE
j is nonlinear w.r.t. qj . Then,
the price of computational resource would decrease, which is
determined by the inverse price-demand function. Meanwhile,
the utility of miners and the DoS increase, which leads to the
incremental of the utility. Also, it can be easily found that the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: INCENTIVE MECHANISM FOR EDGE COMPUTING-BASED BLOCKCHAIN 7907
Fig. 4. Quantity versus utility of players.
Fig. 5. Computational capability versus utility of ESP.
bigger πb would make a smaller utility U j
ESP for the case of
fixed quantity qj . That is due to fact that a larger number of
transactions in block makes the process of solving PoW puzzle
harder, which decreases the DoS of miners as well as the utility
of ESP.
In Fig. 4, we plot the relationship between the resource
quantity qj and the utilities of ESP j and miner i. We can see
that the increase of qj makes UE
i become larger, but decrease
UM
i . The utilities of players have an intersection point, which is
the SE point. At the intersection point, the utilities of players in
blockchain reach a balance where neither of players can change
the strategy without performance loss. We can also find from this
figure that the utility must be optimized. For the case of fixed
quantity qj , the bigger hash power proportion αi is, the greater
utility of player will be. This is mainly because the increase ofαi
would lead to the increased probability of successfully mining
μi and a better DoS. Furthermore, based on the defined inverse
price-demand function, the fixed quantity qj makes a constant
price of computational resource, so the increase of αi shows the
fact that miners (except miner i) decrease the demand of service,
then it will also increase the DoS of miner i.
In Fig. 5, we plot the relation between the proportion of
computational resource and the utility of ESP. It can be found that
the increase of hash power proportion αi leads to the increase
Fig. 6. Computational capability and price versus utility of miner.
Fig. 7. The amounts of miners versus transactions.
of UE
j . For the case of fixed αi, the bigger the quantity qj , the
higher utility will be. Moreover, UE
j would be negative if the
quantity qj are blow 200, where should be the minimum amount
provided by ESP j in this case.
As shown in Fig. 6, we can see that some factors, i.e., the
proportion of computational capability αi and the price of the
computational resources pj can affect the utility of miners UM
i .
In the figure, when the price remains the same, the utility UM
i
increases with the increment of αi. UM
i gradually decreases
with the increase of pj for the case of fixed αi. The main reason
is that the increase of αi and the decrease of pj would lead to
the increase of the probability of successfully mining and the
DoS, so as to bring a positive effect on the expected reward for
miner i. Further, with the change in αi and pj , it can be easily
observed that there must exist strategic point(s), which enables
to optimize the utility of miners.
Fig. 7 implies the relations between the amounts of miners
participating in mining and system efficiency. Specifically, the
system efficiency is characterized by the number of transactions
contained in a single block in this paper. As for the newly gener-
ated block, while the award of the certain block and the average
time of solving the PoW puzzle keep constant, the larger amounts
of miners will cause the amount of transactions/data contained
in the block to increase. In other words, the efficiency of the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
7908 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 11, NOVEMBER 2022
Fig. 8. Convergence performance.
blockchain network increases as the number of miners increases.
Likewise, when the number of miners remains unchanged, the
efficiency of the system improves as the award increases.
We evaluate the proposed experience replay update method
for DQN algorithm in Fig. 8. Through numerical simulation,
we characterize the reward performance for players of each
episode. With the increase of number of the episode, the al-
gorithm shows positive effects. Then, the result obtained by all
blockchain participants converges to a relatively stable value,
which represents a good convergence performance. For the
modeled sequential decision problem, the proposed algorithm
can enable participants to obtain the optimal reward. In addition,
Fig. 8 also shows that the proposed scheme can significantly
reduce the number of target steps to achieve the optimal strategy
and utility.
VII. CONCLUSION
In this article, an edge computing-based blockchain frame-
work is considered, where multiple ESPs can offer computa-
tional resources to the devices for mining. We mainly focus on
investigating the trades between rational devices and ESPs in the
computational resource market, where ESPs can act as the sellers
and devices as the buyers. Accordingly, a sequential game model
is formulated and by exploring the sequential NE, the existence
of optimal incentive solutions can be proved. Then, a Deep
Q-Network-based algorithm with modified experience replay
update method is applied to find the optimal strategies. Through
theoretical analysis and simulations, we demonstrate the ef-
fectiveness of the proposed incentive mechanism on forming
the blockchain. In the future, we will take transmission-related
metric into the consideration when designing the interactions
between blockchain players.
REFERENCES
[1] L. Zhao, J. Wang, J. Liu, and N. Kato, “Optimal edge resource alloca-
tion in IoT-based smart cities,” IEEE Netw., vol. 33, no. 2, pp. 30–35,
Mar./Apr. 2019.
[2] P. K. Sharma, S. Singh, Y. Jeong, and J. H. Park, “DistBlockNet: A
distributed blockchains-based secure SDN architecture for IoT networks,”
IEEE Commun. Mag., vol. 55, no. 9, pp. 78–85, Sep. 2017.
[3] Z. Chang, W. Guo, X. Guo, Z. Zhou, and T. Ristaniemi, “Incentive
mechanism for EDGE computing-based blockchain,” IEEE Trans. Ind.
Informat., vol. 16, no. 11, pp. 7105–7114, Nov. 2020.
[4] S. Guo, Y. Dai, S. Guo, X. Qiu, and F. Qi, “Blockchain meets edge comput-
ing: Stackelberg game and double auction based task offloading for mobile
blockchain,” IEEE Trans. Veh. Technol., vol. 69, no. 5, pp. 5549–5561,
May 2020.
[5] N. C. Luong, Z. Xiong, P. Wang, and D. Niyato, “Optimal auction for edge
computing resource management in mobile blockchain networks: A deep
learning approach,” in Proc. IEEE Int. Conf. Commun., 2018, pp. 1–6.
[6] Z. Zhang, Z. Hong, W. Chen, Z. Zheng, and X. Chen, “Joint computation
offloading and coin loaning for blockchain-empowered mobile-edge com-
puting,” IEEE Internet Things J., vol. 6, no. 6, pp. 9934–9950, Dec. 2019.
[7] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, “Social welfare maximization
auction in edge computing resource allocation for mobile blockchain,” in
Proc. IEEE Int. Conf. Commun., Kansas City, MO, USA, 2018, pp. 1–6.
[8] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han, “Cloud/Fog
computing resource management and pricing for blockchain networks,”
IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600, Jun. 2019.
[9] N. Houy, “The bitcoin mining game,” Ledger, vol. 1, pp. 53–68, 2016.
[10] Y. Lewenberg, Y. Bachrach, Y. Sompolinsky, A. Zohar, and J. S. Rosen-
schein, “Bitcoin mining pools: A cooperative game theoretic analysis,” in
Proc. Int. Conf. Auton. Agents Multiagent Syst., 2015, pp. 919–927.
[11] A. Avyukt, G. Ramachandran, and B. Krishnamachari, “A decentralized
review system for data marketplaces,” in Proc. IEEE Int. Conf. Blockchain
Cryptocurrency, 2021, pp. 1–9.
[12] L. Liu, M. Du, and X. Ma, “Blockchain-based fair and secure electronic
double auction protocol,” IEEE Intell. Syst.,vol. 35, no. 3, pp. 31–40,
May 2020.
[13] A. Kumari, R. Gupta, and S. Tanwar, “PRS-P2P: A prosumer recommender
system for secure P2P energy trading using Q-learning towards 6G,” in
Proc. IEEE Int. Conf. Commun. Workshops, 2021, pp. 1–6.
[14] J. Huang, Y. Xu, B. An, and M. Xiao, “ Blockchain-based double auction
for edge cloud resource trading with differential privacy,” in Proc. IEEE
18th Int. Conf. Mobile Ad Hoc Smart Syst., 2021, pp. 615–620.
[15] M. Gairing, B. Monien, and K. Tiemann, “Selfish routing with incomplete
information,” Theory Comput. Syst., vol. 42, no. 1, pp. 91–130, 2008.
[16] D. Gale, “The game of hex and the brouwer fixed-point theorem,” Amer.
Math. Monthly, vol. 86, no. 10, pp. 818–827, 1979.
[17] G. Scutari, D. Palomar, F. Facchinei, and J.-S. Pang, “Convex optimization,
game theory, and variational inequality theory,” IEEE Signal Process.
Mag., vol. 27, no. 3, pp. 35–49, May 2010.
[18] Z. Han, D. Niyato, W. Saad, T. Basar, and A. Hjarungnes, “Game Theory
in Wireless and Communication Networks: Theory, Models, and Applica-
tions,” Cambridge, U.K.: Cambridge Univ. Press, 2012.
[19] A. Shoker, “Sustainable blockchain through proof of exercise,” in Proc.
IEEE 16th Int. Symp. Netw. Comput. Appl., Cambridge, MA, USA, 2017,
pp. 1–9.
[20] D. Niyato, E. Hossain, and Z. Han, “Dynamics of multiple-seller and
multiple-buyer spectrum trading in cognitive radio networks: A game-
theoretic modeling approach,” IEEE Trans. Mobile Comput., vol. 8, no. 8,
pp. 1009–1022, Aug. 2009.
[21] H. N. Agiza and A. A. Elsadany, “Chaotic dynamics in nonlinear duopoly
game with heterogeneous players,” Appl. Math. Comput., vol. 149,
pp. 843–860, Feb. 2004.
[22] R. S. Sutton and A. G. Barto, “Reinforcement Learning: An Introduction.”
Cambridge, MA, USA: MIT Press, 1998.
[23] V. Minh et al., “Human-level control through deep reinforcement learn-
ing,” Nature, vol. 518, no. 7540, pp. 529–533, Feb. 2015.
Wenlong Guo received the B.Eng. degree in
electronics engineering from Yantai University,
Yantai, China, in 2015. He is currently working
toward the Ph.D. degree in computer science
and technology with the College of Information
Science and Engineering, Yanshan University,
Qinhuangdao, China.
He is currently an visiting Ph.D. with the Uni-
versity of Jyväskylä, Jyväskylä, Finland. His re-
search interests include blockchain, UAV, re-
source allocation, and mobile computing.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
GUO et al.: INCENTIVE MECHANISM FOR EDGE COMPUTING-BASED BLOCKCHAIN 7909
Zheng Chang (Senior Member, IEEE) re-
ceived the B.Eng. degree from Jilin University,
Changchun, China, in 2007, the M.Sc. (Tech.)
degree from Helsinki University of Technology
(Now Aalto University), Espoo, Finland, in 2009,
and the Ph.D degree from the University of
Jyväskylä, Jyväskylä, Finland, in 2013.
Since 2008, he has held various research
positions with Helsinki University of Technology,
University of Jyväskylä and Magister Solutions
Ltd., Finland. He has been awarded by the Ulla
Tuominen Foundation, the Nokia Foundation and the Riitta and Jorma J.
Takanen Foundation for his research excellence. He has been awarded
as 2018 IEEE Communications Society best young Researcher for Eu-
rope, Middle East, and Africa region. He has authored or coauthored
more than 140 papers in journals and conferences, and received best
paper awards from IEEE TCGCC and APCC in 2017. His research inter-
ests include IoT, cloud/edge computing, security and privacy, vehicular
networks, and green communications.
Dr. Chang serves as an Editor of IEEE WIRELESS COMMUNICATIONS
LETTERS, Springer Wireless Networks and International Journal of Dis-
tributed Sensor Networks, and a Guest Editor for the IEEE NETWORK,
IEEE WIRELESS COMMUNICATIONS, IEEE COMMUNICATIONS MAGAZINE,
IEEE INTERNET OF THINGS JOURNAL, IEEE TRANSACTIONS ON INDUS-
TRIAL INFORMATICS, etc. He was the exemplary reviewer of IEEE WIRE-
LESS COMMUNICATION LETTERS in 2018. He has participated in orga-
nizing workshops and special sessions in Globecom’19, WCNC’18-22,
SPAWC’19, and ISWCS’18. He also serves as Symposium Chair for
ICC’20 and Publicity Chair for INFOCOM’22.
Xijuan Guo received the Ph.D. degree from
Yanshan University, Qinhuangdao, China.
She is currently a Professor with the Col-
lege of Information Science and Engineering,
Yanshan University. Her current research in-
terests include high performance computing,
cloud computing, image processing, and wire-
less communications.
Peiliang Wu received both the B.Sc. degree in
computer science and technology from Yanshan
University, Qinhuangdao, China, in 2004, and
the Ph.D. degree in computer application tech-
nology from Yanshan University, in 2010.
He is currently a Professor of artificial intelli-
gence and intelligent robotics with the Depart-
ment of Computer Science and Engineering,
School of Information Science and Engineer-
ing, Yanshan University. His research interests
include IoT robot system, multiagent system,
artificial intelligence, robot manipulation skill learning, computer vision,
and pattern recognition.
Dr. Wu was a Postdoctor with The State Key Laboratory for Manage-
ment and Control of Complex Systems, Institute of Automation Chinese
Academy of Sciences, China, and an academic visitor in the School
of Engineering and the Built Environment, Edinburgh Napier University,
U.K. He has served as a Local Chair for both Artificial intelligence and
Internet of Things Forum, International Future Intelligent Computing
Conference 2020 and China Conference on Knowledge Graph and
Semantic Computing 2022.
Zhu Han (Fellow, IEEE) received the B.S. de-
gree in electronic engineering from Tsinghua
University, Beijing, China, in 1997, and the M.S.
and Ph.D. degrees in electrical and computer
engineering from the University of Maryland,
College Park, MD, USA, in 1999 and 2003, re-
spectively.
From 2000 to 2002, he was a R&D Engineer
of JDSU, Germantown, MD, USA. From 2003
to 2006, he was a Research Associate with the
University of Maryland. From 2006 to 2008, he
was an Assistant Professor with Boise State University, Boise, ID, USA.
He is currently a John and Rebecca Moores Professor with the Electrical
and Computer Engineering Department as well as in the Computer
Science Department, University of Houston, TX, USA. His research
interests include wireless resource allocation and management, wire-
less communications and networking, game theory, Big Data analysis,
security, and smart grid.
Dr. Han was a recipient of NSF Career Award in 2010, the Fred
W. Ellersick Prize of the IEEE Communication Society in 2011, the
EURASIP Best Paper Award for the Journal on Advances in Signal
Processing in 2015, IEEE Leonard G. Abraham Prize in the field of
Communications Systems (best paper award in IEEE JSAC) in 2016,
and several best paper awards in IEEE conferences. He was an IEEE
Communications Society Distinguished Lecturer from 2015 to 2018,
AAAS fellow since 2019, and ACM distinguished Member since 2019.
He is a 1% highly cited Researcher since 2017 according to Web of Sci-
ence. He is also the winner of the 2021 IEEE Kiyo Tomiyasu Award, for
outstanding early to mid-career contributions to technologies holding the
promise of innovative applications, with the following citation: “for con-
tributions to game theory and distributed management of autonomous
communication networks.”
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:05:14 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice