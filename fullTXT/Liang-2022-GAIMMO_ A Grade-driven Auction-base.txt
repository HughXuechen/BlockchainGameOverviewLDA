GAIMMO: A Grade-Driven Auction-Based Incentive Mechanism With Multiple Objectives for Crowdsourcing Managed by Blockchain
17488 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 18, 15 SEPTEMBER 2022
GAIMMO: A Grade-Driven Auction-Based
Incentive Mechanism With Multiple
Objectives for Crowdsourcing
Managed by Blockchain
Xueqin Liang , Zheng Yan , Senior Member, IEEE, and Raimo Kantola, Member, IEEE
Abstract—Blockchain has been applied for decentralized
crowdsourcing management by deploying a number of min-
ers to reach a consensus on crowdsourced task allocation and
payment decision. In a blockchain-based crowdsourcing system
(BCS), incentive becomes essential to motivate the participa-
tion and cooperation of all system entities. However, existing
literature scarcely investigates how to motivate heterogeneous
crowdsourcers, workers, and miners simultaneously toward sat-
isfying multiple objectives without the support of centralized
management. In this article, we propose GAIMMO, a novel
grade-driven auction-based incentive mechanism for BCS with
multiple objectives in mind: crowdsourcer utility maximization,
social welfare maximization, social grade maximization, and
social cost minimization. Concretely, we propose a grade-based
task sorting (GTS) algorithm to determine the service prior-
ity of heterogeneous crowdsourcers in order to motivate their
cooperative behaviors, which consequently maximizes crowd-
sourcer utility when combining with the carefully designed
utility functions of other system entities. We propose a grade-
based utility function of workers and employ a hierarchical
premium-based task assignment (PTA) algorithm to realize social
welfare maximization, social grade maximization, and social cost
minimization. We further propose a fixed-grade-sum and grade-
based reward-sharing (FGSGRS) method to encourage fast block
generation and motivate high-grade miners without damaging the
profits of the crowdsourcers. We conduct simulation-based exper-
iments to show the effectiveness and advance of our proposed
incentive mechanism in stimulating the participation willing-
ness of high-grade system entities and achieving the multiple
objectives.
Index Terms—Auction, blockchain, crowdsourcing, incentive
mechanism, social cost, social welfare.
Manuscript received 25 August 2021; revised 17 January 2022 and
11 February 2022; accepted 26 February 2022. Date of publication
1 March 2022; date of current version 7 September 2022. This work was
supported in part by the National Natural Science Foundation of China under
Grant 62072351; in part by the Academy of Finland under Grant 308087,
Grant 335262, Grant 345072, and Grant 350464; in part by the Open Project
of Zhejiang Lab under Grant 2021PD0AB01; and in part by the 111 Project
under Grant B16037. (Corresponding author: Zheng Yan.)
Xueqin Liang is with the State Key Laboratory on Integrated Services
Networks, School of Cyber Engineering, Xidian University, Xi’an 710071,
China (e-mail: dearliangxq@126.com).
Zheng Yan is with the State Key Laboratory on Integrated Services
Networks, School of Cyber Engineering, Xidian University, Xi’an 710071,
China, and also with the Department of Communications and Networking,
Aalto University, 02150 Espoo, Finland (e-mail: zheng.yan@aalto.fi).
Raimo Kantola is with the Department of Communications and Networking,
Aalto University, 02150 Espoo, Finland (e-mail: raimo.kantola@aalto.fi).
Digital Object Identifier 10.1109/JIOT.2022.3155631
I. INTRODUCTION
CROWDSOURCING aggregates the intelligence of
crowds to provide solutions to outsourced tasks [1], [2].
The entities that explore their idle resources for providing
solutions to the tasks are called workers. The requester’s
outsourcing tasks are crowdsourcers that pay rewards to the
contributed workers. Centralized crowdsourcing (CCS) relies
on a centralized platform to allocate tasks to workers, as well
as collect solutions and assign rewards to workers.
In crowdsourcing, task completion and system sustainabil-
ity require enthusiastic participation of all system entities,
especially the workers. To this end, numerous incentive mech-
anisms have been designed to attract crowdsourcing partici-
pants. A number of incentive mechanisms based on different
auctions have been adopted to maximize the profits of the
crowdsourcers [3], minimize their costs [4], and maximize the
social welfare that is the sum of the profits of both the crowd-
sourcers and the workers [5]. Contract theory is widely applied
to motivate workers to reveal their private information [6], [7].
In addition, researchers have proposed some grade-based
incentive mechanisms to associate the behaviors of system
entities to their grade values for motivating expected or
cooperative behavior of the system entities, where the grade
could be trust [8], [9], reputation [10]–[12], data, service
quality [13]–[15], etc.
Existing grade-based incentive mechanisms are constructed
for the CCS and depend on a reliable party to select workers,
determine payments, and evaluate grade values. The reliable
party is usually the crowdsourcing platform that is assumed
to be trustworthy. However, such an assumption is impractical
in practice. The platform could collude with crowdsourcers
or workers. Moreover, even if the platform is honest, it is
commonly the primary target of attackers and could suffer
from single-point-of-failure problems and DDoS attacks.
Blockchain, a promising decentralized technology with
immutability, auditability, and reliability, has been applied
into crowdsourcing [16], [17]. The centralized platform in
CCS is replaced by a blockchain-based crowdsourcing plat-
form (BCP) that is managed by miners through consensus
on task announcement, worker selection, and payment deci-
sion. In a blockchain-based crowdsourcing system (BCS), the
miners verify the correctness and validity of crowdsourcing
2327-4662 c© 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-0335-1768
https://orcid.org/0000-0002-9697-2108
LIANG et al.: GAIMMO: GRADE-DRIVEN AUCTION-BASED INCENTIVE MECHANISM 17489
information for supporting its regular operations. Some
researchers have employed the consensus of miners to guaran-
tee the trustworthiness of grade evaluation in blockchain-based
decentralized systems [18]–[20]. The proper execution and the
security of BCS are inseparable from the participation of all
system entities. Therefore, an incentive mechanism is crucially
essential in BCSs.
Although game theory [21], auction theory [22]–[25], con-
tract theory [26], and other methods [17], [27] have already
been applied to design incentive mechanisms in BCSs, we
identify the following practical problems. First, existing incen-
tive mechanisms cannot guarantee fairness for all system
entities. Some researchers have analyzed BCSs with hetero-
geneous crowdsourcers [23]–[26]. However, they offer the
crowdsourcers with the same probability to obtain crowd-
sourcing services. This causes unfairness to high-grade crowd-
sourcers, especially when the capabilities of workers are not
sufficient to provide services to all crowdsourcers. Herein, fair-
ness follows the definition of distributional fairness in [28],
which emphasizes that what an entity obtains should be pro-
portional to what it has given or paid for. Second, existing
grade-based incentive mechanisms seldom regard both grade
values and utility-related economic elements as the parameters
to be optimized at the same time [23], [26], [27]. However,
optimizing the economic elements contributes to motivating
the participation willingness of the system entities while opti-
mizing the grade values produces a healthy and sustainable
ecosystem. Therefore, it is valuable to optimize both parame-
ters when applying a grade-based incentive mechanism. Third,
the incentive to motivate the newly involved entity, namely, the
miner, has not yet been properly designed [22], [23]. Although
some researchers have noticed this problem, they just assumed
the existence of a payment mechanism for the miners [29]
or mentioned that the miners can obtain rewards from the
crowdsourcers [30] without further investigation. Therefore,
it is necessary to design a feasible incentive mechanism for
the miners. In short, an effective incentive mechanism with
multiple design objectives related to all system entities is
highly expected for addressing the above open problems.
Unfortunately, we confront some challenges in solving
the above problems. First, a crowdsourcer may have dif-
ferent types of tasks with different task requirements. Such
crowdsourcer heterogeneity increases the difficulty of incen-
tive mechanism design. Second, the tradeoff between multiple
objectives is not easy to balance. The payments in BCSs are
mainly offered by the crowdsourcers, therefore, the incentive
mechanism should first satisfy the crowdsourcers by maxi-
mizing their utilities. The utilities of other system entities
should also be guaranteed and their participation costs should
be minimized in order to attract their involvement, which is
essential for the success of BCSs. In addition, BCSs should
recruit high-grade participants for ensuring system trustwor-
thiness and liveness. The high-grade workers usually produce
satisfactory task execution results to the crowdsourcers. The
crowdsourcers need to pay relatively high payments to the
high-grade workers while this may violate the objective of
maximizing the utilities of the crowdsourcers. Third, the exis-
tence of miners in BCSs complicates the design of a proper
payment strategy. The crowdsourcers prefer to pay relatively
low payments to the miners. However, the number of partic-
ipated miners will decrease without enough payments, which
inherently influences the security of BCSs and eventually dam-
ages the utilities of all system entities. All these challenges
motivate our work presented in this article.
In this article, we design GAIMMO, a novel grade-driven
auction-based incentive mechanism for decentralized crowd-
sourcing in order to achieve multiple objectives: maximize
the utilities of crowdsourcers, maximize social welfare, min-
imize social cost, and maximize social grade. Herein, the
social welfare is the sum of the utilities of all system enti-
ties, the social grade refers to the sum of grade values of
crowdsourcers, workers, and miners, and the social cost cor-
responds to the sum of the costs of workers and miners. First,
we propose a grade-based task sorting (GTS) algorithm to
determine the service priority of different crowdsourcers in
order to motivate their cooperative behaviors for gaining high
grades. We also sort the subtasks outsourced by the same
crowdsourcer according to their requirements for guarantee-
ing task completion. Second, we propose a grade-based utility
function of workers with truthfulness and employ a hierar-
chical premium-based task assignment (PTA) algorithm to
assign suitable workers to each subtask according to their
service priorities for balancing the objectives of social grade
maximization and social cost minimization. Premium is the
ratio between bid and grade value. Consequently, we maximize
the social welfare by motivating the participation of high-grade
workers with a grade-based utility function design when the
social cost is minimized. Third, we further propose a fixed-
grade-sum and grade-based reward-sharing (FGSGRS) method
by setting that only the first several miners that find a block
can be rewarded with shared proportions determined by their
grades. In this way, we motivate miners to behave cooper-
atively for gaining high grades. In addition, we design the
reward amount carefully to avoid damaging the profits of
crowdsourcers. Specifically, the contributions of this article
can be summarized as follows.
1) We propose GAIMMO for decentralized crowdsourc-
ing participated by heterogeneous crowdsourcers, work-
ers, and miners in order to achieve multiple objec-
tives: crowdsourcer utility maximization, social welfare
maximization, social cost minimization, and social grade
maximization.
2) We investigate the functions of these objectives and con-
clude that the multiple objectives can be obtained by
motivating high-grade system entities, minimizing social
cost, and carefully scheduling the interest interactions
between crowdsourcers and miners.
3) We design several auxiliary algorithms for the practi-
cal implementation of GAIMMO, conduct experiments
to illustrate its feasibility, and emphasize its superiority
through comparison with borderline methods.
The remainder of this article is organized as follows.
Section II reviews existing incentive mechanisms in crowd-
sourcing systems. Section III presents the general procedure
of BCS with an auction, along with research assumptions,
our grade-based economic model, problem descriptions, and
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
17490 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 18, 15 SEPTEMBER 2022
research goals. We present the details of GAIMMO and the
auxiliary algorithms in Section IV, followed by our experi-
mental settings and experimental results in Section V. Finally,
we present our conclusion in the last section.
II. RELATED WORK
This section reviews existing literature about incentive
mechanisms in crowdsourcing systems and concludes their
shortcomings, which motivates our research.
A number of incentive mechanisms are designed for the
crowdsourcing systems participated by one crowdsourcer and
multiple workers. Hu et al. [21] employed a three-stage
Stackelberg game to model the interactions among a crowd-
sourcer, contract workers, and temporary workers in the
BCS. The authors involved reputation values into the utility
functions of the workers. The proposed reward mechanism
maximizes the utilities of all players (i.e., the crowdsourcer
and workers) and data quality with budget constraints and
data quantity requirements. Chatzopoulos et al. [31] applied
a combinatorial auction to model the interaction between a
crowdsourcer and multiple workers. The BCP selects workers
for each task according to the unit cost of workers, which min-
imizes the payment paid by the crowdsourcer to the workers.
Similar to [21], this article does not mention how to motivate
the miners. Kang et al. [26] employed the crowdsourcer to
evaluate the data quality of workers through attack detection
schemes. They applied a contract theory-based incentive mech-
anism to assist the crowdsourcer to select the optimal workers
according to reputation value, which succeeds in maximizing
the utilities of the crowdsourcers and the workers. However,
the miners in this system are preselected edge nodes and the
incentive to them is ignored. Different from [26], An et al. [27]
enabled the miners to perform worker selection through a
matching degree. The crowdsourcer is responsible for veri-
fying the data quality of the workers through quality grading
evaluation (QGE). The payments to the workers with different
grades are also different. This incentive mechanism bene-
fits the crowdsourcer with high-quality data. Gao et al. [34]
employed blockchain as a method to guarantee the trustworthi-
ness of worker selection and applied a deterministic encryption
algorithm to encrypt reputation values stored on the blockchain
to prevent side-channel attacks. Unfortunately, no incentive
mechanism is applied to motivate participants.
Some researchers have designed incentive mechanisms for
crowdsourcing with a centralized or blockchain-based platform
and multiple workers, where the platform directly outsources
tasks to workers. Huang et al. [32] applied a Stackelberg game
to model the interaction of a centralized platform and workers.
They investigated the influence of the quality heterogeneity of
workers on the platform’s profits when the number of workers
is fixed. The authors discovered that a discriminatory reward
policy contributes to high social welfare. Xiao et al. [35]
proposed an incentive mechanism to resist the collusion of
workers, the purpose of which is different from this article.
Chen et al. [22] enabled the BCP to select workers for max-
imizing the social welfare and determined data quality-based
rewards for the selected workers. Herein, the data quality
is verified by the BCP through an expectation–maximization
(EM) algorithm; thus, the incentive mechanism heavily relies
on the truthfulness of the BCP and is not applicable in our
scenario with heterogeneous crowdsourcers. In [33], a BCP
adopts a hierarchical worker selection method, which first fil-
ters all workers according to their credibility and then selects
the workers based on budgets and bids. The incentive mech-
anism provides the BCP with near-optimal profits and high
data reliability.
We also discovered some incentive mechanisms designed
for crowdsourcing with multiple crowdsourcers and multiple
workers. Krishna and Lorenz [36] enabled centralized and
trusted task allocators to analyze worker preferences and apply
maximum likelihood and EM to designate tasks. Yu et al. [37]
employed reverse combination auction to model the interac-
tions between task publishers located in different places and
vehicles, designed a worker selection method to guarantee the
profits of the crowdsourcing platform. They applied virtual
currency to encourage long-term participation and adopted the
reputation to motivate workers to provide high-quality data.
However, these two works were not conducted for blockchain-
based systems. Wei et al. [23] applied the auction theory to
design an incentive mechanism for motivating the participa-
tion of high-quality workers. The crowdsourcers also work as
miners to manage the blockchain, evaluate the data quality of
the workers, and select workers based on the weighted sum of
bid, reputation, and data quality. Yin et al. [24] considered the
heterogeneity of tasks and classified them as general tasks and
emergent tasks. The worker selection methods are different for
different kinds of tasks. The payments to the selected workers
of different tasks are also different. The incentive mechanism
for general tasks maximizes the profits of the crowdsourcers,
while that for emergent tasks maximizes the profits of both
the crowdsourcers and the workers as well as reduces the
task processing time. Wang et al. [25] proposed a reverse
auction-based incentive mechanism and enabled the BCP to
choose workers with a hierarchical method. Specifically, the
BCP first determines a candidate worker set according to the
task-completion rates of workers and then selects some work-
ers for minimizing the selected worker number and the costs.
Furthermore, the rewards to the selected workers are calculated
based on their credits and bids. Xu et al. [17] considered the
task of each crowdsourcer to be related to location and service
time period. The authors applied the optimization theory to
help workers find their best strategies, which can achieve max-
imum service time, maximum payment from crowdsourcers,
and minimum cost to perform the tasks. Unfortunately, this
method is designed from the perspective of workers, which
may not be compatible with a practical scenario that the
crowdsourcers dominate the market. However, none of these
papers [17], [23]–[25] considered the competition among the
multiple crowdsourcers.
Table I compares existing incentive mechanisms in BCSs
with ours. We summarize their shortcomings as follows.
1) Shortcoming 1: The competition among heterogeneous
crowdsourcers is scarcely discussed. Many researchers
only considered one crowdsourcer in their incen-
tive mechanisms, which could confine the practical
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
LIANG et al.: GAIMMO: GRADE-DRIVEN AUCTION-BASED INCENTIVE MECHANISM 17491
TABLE I
COMPARISON AMONG RELATED WORK AND THIS ARTICLE
application of their methods. Even if some researchers
have considered the multicrowdsourcer scenario, they
pay little attention to the competition among the crowd-
sourcers, which is worth noting especially when the
high-quality and low-cost resources (i.e., workers) are
insufficient.
2) Shortcoming 2: The motivated entities in BCS are not
comprehensive. Existing incentive mechanisms imprac-
tically assume that the crowdsourcers are honest and
cooperative. However, their honest and cooperative
behavior also need motivation in practical scenarios.
Moreover, the blockchain technology introduces miners
that play an important role in maintaining the security
and reliability of the BCSs, while most papers seldom
detail how to provide incentives to the miners.
3) Shortcoming 3: The grade values and the utility-related
elements are not optimized simultaneously in the exist-
ing literature. The incentive mechanisms in [23] and [27]
only maximize the grade values, data quality to be more
exact, while ignore the practical profits of system enti-
ties. Although the incentive mechanisms in [21] and [22]
are designed based on multiple objectives, they are
suffering from the above two shortcomings.
III. SYSTEM MODEL
In this section, we present the general procedure of BCS
with an auction and summarize our research assumptions,
based on which we further establish an economic model.
Afterward, we describe our research problems and research
goals.
Before further investigation, we specify the system with
notations. The system consists of N crowdsourcers C =
{C1,C2, . . . ,CN}, K workers W = {W1,W2, . . . ,WK}, and
L miners M = {M1,M2, . . . ,ML}. A crowdsourcer Cn issues
a task Tn with three subtasks that are a data collection subtask
tcn, a data processing subtask tpn, and a data storage subtask tsn,
and transfers some deposits dn for their subtasks. The crowd-
sourcer Cn holds specific requirements �n to its task Tn. Each
worker Wk submits bids bc
n,k, bp
n,k, and bs
n,k for subtasks tcn, tpn,
and tsn according to its corresponding costs cc
n,k, cp
n,k, and cs
n,k.
The miners together maintain the BCP by verifying all trans-
actions in the system, including the validity of task issuance,
task bidding, payment, etc. A grade mechanism based on roles
and subtasks is introduced to evaluate the performance of all
system entities. Although the grade could be trust, reputation,
or other parameters calculated based on historical behavior
and other elements (e.g., criteria, standards, policies, and basic
capabilities), the grade mentioned in this article is fixed to one
kind, like trust value. Furthermore, the grade values of the
workers for different subtasks are calculated based on the same
grade evaluation theory, by considering proper inputs of a con-
crete evaluation method with context awareness. Specifically,
a system entity possesses independent grade values for its
crowdsourcer role, worker role, and miner role. Furthermore,
each worker holds different grade values for different subtasks.
After the task Tn is completed and confirmed on the block,
the crowdsourcer Cn pays some payments to the workers that
are calculated by the miners and rewards the miners that have
participated in the transaction verification related to task Tn.
The payments and rewards are calculated by a certain rule of
the system designer.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
17492 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 18, 15 SEPTEMBER 2022
Fig. 1. Procedure of a BCS with auction.
Fig. 1 depicts the procedure of the system with an auction
that is detailed as follows.
1) All system entities invoke a smart contract to register on
the BCP.
2) Each crowdsourcer publishes its task/subtasks and
requirements on the platform and transfers the secure
deposits to the platform.
3) Miners verify the task issuance and deposit transferring
transactions and publish verified tasks on the platform.
4) By browsing published tasks, each worker submits bids
for interested subtasks and pays deposits. Specifically,
a worker can bid for many subtasks and it should pay
deposits for each subtask to suppress malicious bidding.
5) The miners verify the bid and deposit transactions to
primarily exclude unqualified bids for avoiding unnec-
essary workloads. After that, the miners select workers
for each subtask according to the requirements of the
crowdsourcers and the goals of the platform.
6) The selected workers perform their assigned subtasks.
Specifically, the selected data collecting workers first
submit collected data to the selected data processing
workers, which then upload the processed data to the
selected data storage workers.
7) The miners verify the subtasks accomplishment and
update the grade values for each system entity.
The miners calculate the payment to the selected
workers according to the payment structure designed
by the system designer. The miners receive the
rewards from the crowdsourcers according to a cer-
tain rule written on the smart contract by the system
designer. Finally, the miners return the deposits to
the crowdsourcers and workers after deducting their
payments.
A. Research Assumptions
The following are the research assumptions of this article
work.
System Assumption: The blockchain applied is a public
blockchain that every entity can join as well as leave freely
and they can adopt any role arbitrarily. We assume that there
are sufficient numbers of crowdsourcers, workers, and miners
in our investigated system. A solid grade evaluation model
is applied, where the grade could be trust, reputation, etc.
Furthermore, the grade is measured based on roles and sub-
tasks, which means that an entity has different grade values
with regard to their roles and a worker holds different grade
values for different subtasks. The grade values are accessible
to miners; therefore, the miners can easily make decisions on
task assignment and payment calculation. We consider role-
based utilities, rather than entity-based utilities. Hence, if an
entity performs multiple roles (e.g., a crowdsourcer and miner)
at the same time, we split it as different individuals (a crowd-
sourcer and a miner) and calculate utilities separately. Notably,
even if an entity can perform many subtasks, we do not fur-
ther split it when calculating the utility. The application of
blockchain along with the grade mechanism has encouraged
honest behaviors of all participants [19], [20]; therefore, the
number of malicious participants can be greatly controlled and
limited.
Crowdsourcer Assumption: We assume a crowdsourcer pub-
lishes one task at one time, which can be further divided
into the data collection, data processing, and data storage
subtasks. A crowdsourcer that published multiple tasks will
be regarded as multiple crowdsourcers. An obvious require-
ment of the crowdsourcer is the lowest acceptable grade of
workers for each subtask. Practical crowdsourcers generally
have limited budgets, considering the task fulfillment cannot
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
LIANG et al.: GAIMMO: GRADE-DRIVEN AUCTION-BASED INCENTIVE MECHANISM 17493
produce infinite profits to the crowdsourcers. We assume that
the budget is a fraction of the task fulfillment profits and is
determined by the requirement on grade.
Worker Assumption: We assume workers to take an active
part in bidding since bidding is effortless and costless. If a
worker is unwilling to participate in a subtask, it can set its
bid as an unreasonable value. To ensure fairness and consider
the practical capability of a worker, we assume that there is a
limitation on the number of subtasks that a worker can con-
duct simultaneously. Furthermore, We assume the limitation
number is known to each worker, since the worker is familiar
with its ability and it can infer such a number from histori-
cal information. Without loss of generality, we advocate that
a worker will not refuse an assigned task if it still has the
capability to handle the task. We also assume that the worker
will not accept the excess number of subtasks considering the
risk of forfeiting deposits for uncompleted tasks.
B. Economic Model
We establish an economic model based on the system pro-
cedure as well as the research assumptions and produce the
utility functions of all system entities in this section.
According to the crowdsourcer assumption, we con-
sider that a crowdsourcer Cn holds different requirements
for each subtask. We denote the requirements as �n =
{�c
n,�
p
n,�
s
n, ψ
c
n, ψ
p
n , ψ
s
n}. Herein, �c
n,�
p
n, and �s
n are the
minimum requirements of the grade values for the subtasks.
ψc
n, ψ
p
n , and ψ s
n represent the budgets of Cn for recruiting
the data collection workers, data processing workers, and
data storage workers, respectively. Table II summarizes the
notations throughout this article for convenient reference.
We introduce τ ∈ {0, 1} to indicate the assignment of sub-
tasks. For example, τ c
n,k = 1 indicates that the subtask tcn
is assigned to and accepted by the worker Wk. Considering
that if no workers participate in the data collection subtask
of crowdsourcer Cn, the data processing and storage subtasks
of this crowdsourcer cannot be further performed. Therefore,
the values of τ p
n,k and τ s
n,k are related to
∑
k τ
c
n,k. Specifically,
τ
p
n,k = 1 if
∑
k τ
c
n,k > 0 and the subtask tpn is assigned to Wk.
The parameter τ s
n,k shares a similar definition.
We apply the function v() to represent the influence of a
worker’s grade value on the task-completion profit of a crowd-
sourcer. We set (∂v/∂θa
k ) > 0 and (∂2v/∂θa
k
2) < 0, where
a = c, p, s. This setting is easy to understand and widely
applied in the value function design [22]. A high-grade worker
will bring the crowdsourcer high profits. When the grade value
increases, the marginal profit will decrease. We adopt pa
n to
denote the profit brought by worker Wk whose grade value is
�a
n for completing the subtask tan. Then v(�a
n) = 1. If θa
k > �a
n,
Cn can benefit more than pa
n. Therefore, the task-completion
profit brought by a worker with θa
k is v(θa
k )p
a
n.
Crowdsourcer Cn needs to pay the selected workers of each
subtask for their contributions. We denote f a
n,k as the pay-
ment to worker Wk, which is related to its grade value θa
n
and all bids of the subtask. The crowdsourcer Cn also needs
to pay a certain amount of rewards to the miners. If denote the
rewards as Rn, we can conclude the utility function of Cn as
TABLE II
NOTATIONS
follows:
Un =
∑
k
∑
a={c,p,s}
τ a
n,k
(
v
(
θa
k
)
pa
n − f a
n,k
)− Rn. (1)
Based on our crowdsourcer assumption, the value of pa
n is
determined with the following method. When the grade values
of all recruited workers for tsn are �a
n, the profits that Cn can
obtain from all the recruited workers is linearly related to its
budget ψa
n . Therefore
∑
k
τ a
n,kpa
n = αnψ
a
n (2)
where αn > 1.
The worker Wk will obtain payments from every crowd-
sourcer Cn for performing different kinds of subtasks tan. The
utility function of Wk consists of all its received payments
minus its costs for performing these subtasks. Hence, the
utility function of Wk is presented as follows:
Uk =
∑
n
∑
a={c,p,s}
τ a
n,k
(
f a
n,k − ca
n,k
)
. (3)
We denote the reward-sharing function of miners as g(),
which is positively related to the grade values of miners to
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
17494 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 18, 15 SEPTEMBER 2022
ensure fairness. The function g() is also related to τ n
l , which
indicates whether a miner Ml is qualified for being rewarded
by the crowdsourcer Cn. We simply set
g
(
θl, τ
n
l
) = τ n
l θl
∑
l τ
n
l θl
(4)
which satisfies
∑
l g(θl, τ
n
l ) = 1. We conclude the expected
utility function of Ml as follows:
Ul =
∑
n
(
g
(
θl, τ
n
l
)
Rn − cn
l
)
. (5)
Notably, even if all system entities need to transfer security
deposits, the deposits will be returned later on. Therefore, we
exclude the deposits from our economic model.
C. Problem Description
We identify the following problems when designing a grade-
driven auction-based incentive mechanism for BCSs with
heterogeneous system entities.
First, the heterogeneity of crowdsourcers and workers and
the diverse requirements of different subtasks complicate the
procedure of worker selection. Concretely, a rational crowd-
sourcer prefers workers with high-grade values and low costs.
Since the tasks are published on the blockchain, they can be
bid with the same probability. However, considering the capa-
bility limitation, economic workers cannot provide services to
all crowdsourcers. If the miners arrange workers for the tasks
without considering the service priority of crowdsourcers, the
most suitable workers for high-grade crowdsourcers may have
been assigned to low-grade crowdsourcers, thus decreasing the
willingness of high-grade ones to participate in the system.
Therefore, we need to arrange the service priority of multiple
crowdsourcers fairly. Moreover, a crowdsourcer outsources
multiple subtasks and the service priority of these subtasks
within the same crowdsourcer should also be considered.
In addition, the match of workers and subtasks needs care-
ful study with regard to the requirements of crowdsourcers,
the capability of workers, and the profits of crowdsourcers.
Specifically, miners should contemplate the fundamental trade-
off between high grade and low cost when selecting workers,
since practical crowdsourcers are rational and profit driven.
Second, the incentive mechanism with multiple objectives
is difficult to design. Crowdsourcers need to pay workers and
reward miners for their contributions. They prefer to obtain
services from high-grade system entities with low payments
while the workers and miners would like to receive high pay-
ments with low costs. The interest conflict among them urges
us to decide which objective should be satisfied first and how
to balance the tradeoff between different objectives.
Third, involving miners as additional entities to be moti-
vated increases the difficulty of effective and fair incentive
mechanism design. Only rewarding one miner may not be the
best approach since the majority cannot gain anything for a
long period. Rewarding several miners could be a feasible
alternative; however, we still face two challenges. The first
one is how to set the amount of rewards. A small amount
cannot provide enough incentives to the miners, and therefore
may pose security problems to the system. A large amount
may cause profit losses to the crowdsourcers. The second one
is how to improve the willingness of high-grade miners, thus
enhancing system security and efficiency.
D. Research Goals
For overcoming these problems, we propose our goals when
designing a feasible incentive mechanism for BCSs.
Involving the incentive of miners complicates the design of
utility functions. Our goal is to motivate the miners to ver-
ify transactions fast and guarantee the grade value of system
entities at a high level without the profit loss of others.
The primary objective of our incentive mechanism is to pro-
vide crowdsourcers with satisfaction, since the crowdsourcers
dominate BCSs as they decide whether to outsource tasks and
control the payments to other system entities. From the view
of the whole system, we aim to propose an incentive mech-
anism that can attract high-grade participants and suppress
the willingness of low-grade system entities for guaranteeing
long-term system development. Furthermore, the total costs for
achieving these goals should be tolerable for building a green
and sustainable system. We expect the workers and miners can
also benefit from participating in BCSs. In general, we hope to
first maximize crowdsourcer utility and then maximize social
welfare and the social grade at a relatively low social cost.
Herein, social welfare refers to the sum of the utilities of
all participants. After deduction, we conclude the formula of
the social welfare based on our economic model as follows:
SW =
∑
n
Un +
∑
k
Uk +
∑
l
Ul
=
∑
n
(
∑
k
∑
a
τ a
n,k
(
v
(
θa
k
)
pa
n − ca
n,k
)−
∑
l
cn
l
)
. (6)
The parameters f a
n,k and Rn are eliminated from SW, and the
final form of SW is the sum of task-completion profits of all
crowdsourcers subtracts the costs of all workers and miners,
which is defined as social cost, representing as follows:
SC =
∑
n
(
∑
k
∑
a
τ a
n,kca
n,k +
∑
l
cn
l
)
. (7)
By comparing (6) and (7), we recognize that the satisfaction
of social welfare maximization can be realized by motivating
high-grade workers and minimizing the social cost.
We designate social grade as the sum of the grade values of
the crowdsourcers, all selected workers, and rewarded miners,
which is formalized as follows:
SG =
∑
n
(
θn +
∑
k
∑
a
τ a
n,kθ
a
k +
∑
l
τ n
l θl
)
. (8)
A high social grade represents the promising prospect of the
system with sustainability.
It is possible for a rational worker to gain more profits
if its bid is higher than its real cost, which will definitely
damage the profits of crowdsourcers. Therefore, a feasible
incentive mechanism should motivate workers to bid accord-
ing to their real costs, which is called the requirement of
truthfulness. Specifically, for any worker Wk with truthful bid
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
LIANG et al.: GAIMMO: GRADE-DRIVEN AUCTION-BASED INCENTIVE MECHANISM 17495
Fig. 2. Overview of GAIMMO.
bc
n,k and untruthful bid b̄c
n,k, the relationship between their
corresponding payments satisfies f c
n,k(b
c
n,k) ≥ f c
n,k(b̄
c
n,k).
IV. INCENTIVE MECHANISM DESIGN
This section presents the methods in our incentive mecha-
nism to motivate crowdsourcers, workers, and miners, respec-
tively, along with some auxiliary algorithms for implementing
these methods. All of these methods are executed by miners
with predefined policies.
A. Incentive Mechanism Overview
Fig. 2 overviews of our incentive mechanism GAIMMO.
According to (1), the crowdsourcer utility can be maximized
by selecting high-grade workers and delicately scheduling Rn.
By investigating the equation of social welfare, we have rec-
ognized that social welfare maximization can be realized by
motivating high-grade workers and minimizing social costs.
The social grade maximization objective requires to moti-
vate all high-grade system entities, including crowdsourcers,
workers, and miners.
We propose a grade-based service priority method to moti-
vate crowdsourcers with high-grade values and deploy it
with a GTS algorithm. We employ grade-based payment to
attract high-grade workers for maximizing the utilities of
crowdsourcers. In addition, we present a hierarchical worker
selection method by considering the balance of social grade
maximization and social cost minimization. We introduce
premium, which is the ratio of bid and grade, and design a PTA
algorithm to deploy the hierarchical worker selection method.
In order to motivate miners, we design an FGSGRS algorithm,
which is carefully designed to avoid damaging the profits of
crowdsourcers.
Before the concrete introduction of GAIMMO, we spec-
ify public information and private information in our model.
First, the requirements of crowdsourcers are accessible to all
authorized miners for worker selection and payment decisions.
Algorithm 1: GTS
Input: C, {θn}, {�c
n}, {�p
n}, {�s
n}
Output: Task sorting set T.sort
1 Initialization;
2 Sort C in the non-increasing order of {θn} as C′;
3 T.sort = ∅;
4 for C′n ∈ C′ do
5 Sort tcn, tpn, tsn in the non-increasing order of �c
n, �p
n,
�s
n as Tn.sort;
6 T.sort← T.sort ∪ Tn.sort;
7 end
Second, the workers know their costs for performing subtasks.
Third, the grade values of all system entities are attached to
their pseudonyms and published on the blockchain and can be
accessed by the public. Fourth, the task assignment and execu-
tion results that have been verified and confirmed are published
on the blockchain, thus all system entities can observe.
B. Incentive of Crowdsourcers
Crowdsourcers are the direct beneficiary of BCSs and their
incentives are commonly ignored in existing incentive mech-
anisms. However, their participation and cooperation are also
essential for the success of BCSs. We propose a grade-based
service priority method to motivate high-grade crowdsourcers
and design the payment and reward policies of other system
entities without sacrificing the profits of crowdsourcers.
When multiple crowdsourcers have published their tasks and
requirements, the BCP needs to decide the order in which the
crowdsourcing service is provided. We first sort all tasks {Tn}
according to the grade values of {Cn}. Concretely, the miners
will select workers for the crowdsourcer with the highest grade
value first; therefore, this crowdsourcer can obtain the services
from highly matched workers with a high probability. In this
way, the crowdsourcers are motivated to maintain their grade
values at a high level for high-quality of service experience
and expenditure savings.
According to our assumption, each crowdsourcer could have
different lowest acceptable grade values for different subtasks.
Therefore, we additionally sort the subtasks {tcn, tpn, tsn} for each
crowdsourcer Cn according to the descending order of the min-
imum grade requirements �c
n,�
p
n, and �s
n. The underlying
reason is to avoid the possibility of task failures while increas-
ing the matching degree of subtasks and workers. Concretely,
we select workers for the subtask with the highest grade value
requirement first to avoid that suitable workers have been
assigned to the subtask with a lower grade value requirement
and unexpected task failures happen.
GTS presents the deployment of the grade-based service
priority method as shown in Algorithm 1. By inputting the
grade values of crowdsourcers and the lowest acceptable grade
value of each subtask into this algorithm, we can obtain the
task sorting result, which is the service priority order.
After sorting all subtasks of all crowdsourcers and obtaining
the order T.sort, the miners need to arrange suitable workers
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
17496 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 18, 15 SEPTEMBER 2022
for each subtask according to the order, namely, decide the val-
ues for all τ a
n,k, a = {c, p, s}. The objective of crowdsourcer
utility maximization is considered in the worker selection pro-
cedure. According to (1), the grade values of selected workers
should maximize v(θa
k )p
a
n− f a
n,k. Therefore, the grade value θa
k
and payment f a
n,k are two elements to be considered in worker
selection. In addition, (1) shows that the rewards to miners
reversely influence the utilities of crowdsourcers. We regulate
the rewarding amount to miners to be a fraction of the pay-
ments to workers; therefore, the rewarding amount is relatively
constant.
C. Incentives of Workers
The worker selection procedure and the structure of pay-
ment f a
n,k influence the incentives of workers.
Combining the requirements of each subtask with our
research goals, the worker selection procedure aims at solving
the following problems by determining the values for all τ a
n,k:
maximize Un,SW,SG,−SC
s.t.
∑
k
τ a
n,kf a
n,k ≤ ψa
n ∀n (9)
τ a
n,kθ
a
k ≥ τ a
n,k�
a
n ∀n (10)
∑
n
∑
a
τ a
n,k ≤ NUMk ∀k. (11)
Condition (9) means that the payments to all workers that
perform each subtask should not exceed the budget of each
crowdsourcer. We enable (10) to represent that the selected
workers should satisfy the minimum grade value requirements.
The condition (11) shows the capability limitation of workers.
The main objective of crowdsourcers is to recruit the eco-
nomical workers with high grade and low cost. In this case,
they can recruit more workers with the given budget constraint,
thus increasing the task-completion profits. In order to select
the economical workers and balance the tradeoff between
social grade maximization and social cost minimization, we
define the ratio of the bid to grade as premium and introduce
a parameter ωa
n,k to quantify the premium of Wk in performing
tan, where
ωa
n,k =
ba
n,k
θa
k
, a = {c, p, s}. (12)
A lower value of ω equates to a more economical worker.
In order to reduce the computational complexity of the
worker selection procedure, we propose a hierarchical worker
selection method to assign workers for each subtask in T.sort
according to priority. Specifically, the miners first filter the
available worker set and produce a candidate worker set for
each subtask according to �a
n. Then, they optimize the assign-
ments by choosing the workers according to ωa
n,k in the
candidate worker set and the capabilities of these workers.
Overall, the miners apply Algorithm 2 to select workers
for all subtasks in T.sort sequentially. They first initialize
the number of subtasks that each worker Wk has conducted
num(k) as 0. For each subtask, they exclude the workers in
W with unqualified grade and produce the candidate worker
Algorithm 2: PTA
Input: T.sort, W , {ba
n,k}, {ψa
n }, {θa
k }, {�a
n}, {NUMk}
Output: {τ a
n,k}
1 Initialization: Set all num(k) = 0, CWa
n = ∅, Bc
n = 0, set
all τ a
n,k = 0;
2 for i = 1 to | T.sort | do
3 if T.sort(i) = tan then
4 for k = 1 to |W | do
5 if (θa
k ≥ �a
n) ∧ (Wk ∈W) then
6 add Wk into CWa
n;
7 end
8 end
9 for k′ = 1 to | CWa
n | do
10 calculate ωa
n,k′ ←
ba
n,k′
θa
k′
;
11 end
12 sort CWa
n according to the non-decreasing order
of ωa
n,k′ as CWa
n.sort;
13 set NUMa
n = argmax
κ
{
κ| ψa
n∑κ
k̄=1
θa
k̄
≥ ωa
n,κ
}
, where
Wk̄ ∈ CWa
n.sort;
14 select the first NUMa
n workers in CWa
n.sort as the
selected workers and formulate SWa
n;
15 for ka = 1 to NUMa
n do
16 find the k such that SWa
n(ka) is W(k);
17 set τ a
n,k = 1;
18 num(k)← num(k)+ 1;
19 if num(k) ≥ NUMk then
20 W ←W \ {Wk};
21 end
22 end
23 end
24 end
set CWa
n. Then, they sort CWa
n according to the nonde-
creasing order of ωa
n,k′ as CWa
n.sort. Considering that the
selected worker number of tan is decided by budget ψa
n ,
they set NUMa
n = argmaxκ {κ|(ψa
n/[
∑κ
k̄=1 θ
a
k̄
]) ≥ ωa
n,k̄
},
where Wk̄ ∈ CWa
n.sort. They select the first NUMa
n work-
ers in CWa
n.sort as the selected workers and formulate SWa
n.
The workers whose capabilities are depleted after being
selected will quit from the existing worker set for the next
round.
To ensure the truthfulness of our incentive mechanism,
namely, to motivate the workers to bid with their real costs,
we design f a
n,k according to the following rule [38]:
f a
n,k = min
{
ψa
n∑
Wk̇∈SWa
n
θa
k̇
, ωa
n,k+1
}
× θa
k . (13)
The value of f a
n,k is irrelevant to ba
n,k, thus Wk has no
incentive to misreporting bids, which could further adversely
influence its probability of being selected. In addition, f a
n,k
is positively correlated with θa
k for motivating high-grade
workers.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
LIANG et al.: GAIMMO: GRADE-DRIVEN AUCTION-BASED INCENTIVE MECHANISM 17497
Algorithm 3: Payment of Workers
Input: Cn, W , tan, {τ a
n,k}, {θa
k }, {ba
n,k}
Output: {f a
n,k}
1 for a ∈ {c, p, s} do
2 for k = 1 to K do
3 if τ a
n,k = 1 then
4 calculate f a
n,k according to (13);
5 else
6 f a
n,k = 0;
7 end
8 end
9 end
D. Incentive of Miners
For reducing the reward variance of miners, we borrow the
idea from mining pools and distribute the rewards among min-
ers. Considering that only sharing rewards to the high-grade
miners will cause centralization, we regulate that only the first
several miners that involve all the transactions of Cn in their
blocks will be rewarded by Cn.
We set that the first several miners, the sum of whose grade
values exceeds �, can share the rewards from Cn for motivat-
ing high-speed transaction verification and block generation.
Any miner has the same probability to be rewarded by the
same crowdsourcer when the miners have the same network
and communication environment, that is not influenced by
their grade values.
As explained in Section IV-B, we consider the reward to
miners paid by Cn is a fraction of the total payments to
workers. Therefore, the miners are motivated to verify the
transactions related to high-grade workers as the high-grade
workers are more likely to obtain high profits. Denoting the
fraction as γn, the utility function of Ml can be formulated as
follows:
Ul =
∑
n
⎛
⎝g
(
θl, τ
n
l
)
γn
∑
k
∑
a={c,p,s}
τ a
n,kf a
n,k − cn
l
⎞
⎠. (14)
Herein, g() is a grade-based reward-sharing function; there-
fore, the high-grade miners are motivated to participate.
Besides, we provide Algorithm 4 to compute the reward to
each miner based on the FGSGRS method. SMn illustrates
the set of miners that have found the blocks with Tn and these
miners are organized in chronological order. We first initialize
the parameter ξn as 0, which denotes the accumulated grade
value of the miners that have verified all the transactions of
Cn, and the qualification of all miners to share the reward {τ n
l }
as 0. We find the first several members in SMn that make
ξn exceeds �. After identifying the order of these miners in
M, we assign {τ n
l } as 1 to the corresponding Ml. The shared
reward of each miner in M is calculated according to (4).
V. EXPERIMENT EVALUATION
We conducted several experiments based on simulation-
based data sets to evaluate the effectiveness of GAIMMO and
Algorithm 4: Reward Allocation of Miners (FGSGRS)
Input: Cn, {f a
n,k}, {τ a
n,k}, γn, M, {θl}, SMn, �
Output: {τ n
l }, {g(θl)}
1 Initialization: ξn = 0, set all τ n
l = 0;
2 Rn = γn
∑
k
∑
a={c,p,s} τ a
n,kf a
n,k;
3 for i = 1 to | SMn | do
4 while ξn < � do
5 find l such that SMn(i) is Ml;
6 τ n
l = 1;
7 ξn ← ξn + θl;
8 end
9 end
10 for l = 1 to L do
11 g(θl, τ
n
l )← τ n
l θl∑
τ n
l θl
;
12 Cn pays g(θl, τ
n
l )Rn to miner Ml;
13 end
compared our methods with some borderline methods. This
section first describes our experiment settings, followed by the
experiment results of GAIMMO. We also compared our three
auxiliary algorithms with borderline methods, respectively, to
evaluate the superiority of GAIMMO.
The experiment results of GAIMMO are presented in terms
of the utilities of all system entities, the average grade, and
average premium of the selected workers in the crowdsourcers
with different grade values.
First, we compared our GTS algorithm with a random task
sorting algorithm (borderline method 1) [37], [39], [40], which
simulates the first-come–first-serve scenario for the service
priority arrangement of crowdsourcers. The purpose of this
comparative experiment is to evaluate the effectiveness of
our grade-based service priority method in motivating high-
grade crowdsourcers. Therefore, we documented the utility of
crowdsourcers, the average grade of workers, and the average
premium of workers in each crowdsourcer as the evaluation
metrics.
Second, we measured our premium-based worker selection
method with a grade-based worker selection method (bor-
derline method 2) and a cost-based worker selection method
(borderline method 3) [31], [33]. Borderline method 2 is
widely applied when a grade mechanism exists while the other
one is the method adopted in auction theory. Notably, the
other methods, including the task sorting method and the pay-
ment allocation method, remain the same as in GAIMMO.
We employed the utilities of crowdsourcers, social welfare,
social cost, and social grade in each crowdsourcer as the eval-
uation metrics, which are the parameters to be optimized in
Section IV-C.
Third, we analyzed the effectiveness of our FGSGRS
method by comparing the utility of miners with that in
a fixed-grade-sum and average reward-sharing (FGSARS)
method (borderline method 4) and a fixed-miner-number
and grade-based reward-sharing (FMNGRS) method (bor-
derline method 5). We merely took the utility of min-
ers as the evaluation metric, since it was the only
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
17498 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 18, 15 SEPTEMBER 2022
TABLE III
PARAMETER SETTINGS
parameter that was influenced by these reward-sharing
methods.
A. Experimental Settings
We simulated a crowdsourcing system1 as follows. The
parameter settings are concluded in Table III.
We considered a system with ten crowdsourcers, 100 work-
ers, and 100 miners. The grade values of each kind of system
entity are uniformly distributed between 0.5 and 1. The value
of 0.5 is typically the baseline. The entities with grade values
that are below 0.5 behave badly and will hardly be selected
by rational crowdsourcers. Therefore, they will be excluded
from the system gradually and we do not consider them in our
system. The capability of a worker is between 5 and 9. The
values of �a
n(a = c, p, s) are the same for all crowdsourcers;
therefore, we can evaluate the influence of the grade val-
ues of the crowdsourcers by comparison easily. We regarded
�s
n > �
p
n > �c
n to represent that the security of stored
data is more important than the accuracy of data processing
results while the quality of the collected data is the compara-
tively least important element. We can change the relationships
among �a
n to represent other scenarios. In our experiment, the
primary difference between crowdsourcers is their grade val-
ues so that we can discover the influence of grade values of
crowdsourcers on evaluation metrics.
Furthermore, we scheduled that the costs of the workers
with the same grade for each subtask vary from 1 to 2. We
configured this setting to involve the workers with different
grade values and different costs, thus with different premiums.
We assigned budgets ψc
n, ψ
p
n , and ψ s
n with the value 40, 30,
and 30 and set αn as 2. The value of αn only influences the
task-completion profit of crowdsourcers, which should be the
same when other incentive mechanisms are applied. Based on
the values of these parameters, we can further calculate pa
n
according to (2).
We determined γn is 0.2 and set the value to be the
same for every crowdsourcer since its value has little influ-
ence on our experimental results. We designed that the
miners were equipped with the same mining cost but dif-
ferent grade values, therefore, we can identify the influence
of their grade. The required accumulated grade of miners
for generating a new block, �, is a system default param-
eter and we considered it as 20. We instantiated v(θa
k ) as
1The data sets can be found here: https://drive.google.com/drive/folders/
1CVKEwiWzjkABDZ_e3HV9iVSFF4CXxMZt?usp=sharing.
(a) (b)
(c) (d)
(e) (f)
Fig. 3. Results of GAIMMO. (a) Average utilities of crowdsourcers.
(b) Average utilities of miners. (c) Average utilities of workers for perform-
ing every subtask. (d) Total number of assigned subtasks to the workers.
(e) Average worker grade of different subtasks in different crowdsourcers.
(f) Average worker premium of every subtask in different crowdsourcers.
follows:
v
(
θa
k
) =
{
1+ (θa
k −�a
n
) 1
2 , θa
k ≥ �a
n
1− (�a
n − θa
k
) 1
2 , θa
k < �a
n.
(15)
B. Experimental Results of GAIMMO
We first deployed the auxiliary algorithms of our incentive
mechanism with the above parameter settings. The evalua-
tion metrics in this experiments are the utilities of all system
entities, the average grade, and average premium of selected
workers in each crowdsourcer.
Fig. 3(a)–(c) shows the average utilities of all system enti-
ties. Specifically, the red dots in Fig. 3(b) represents the utility
of each miner while the blue line is the fitted function curve of
miners’ utilities. We can find that a high-grade value enables
each system entity to roughly obtain a high utility; therefore,
our incentive mechanism can motivate them to behave coop-
eratively for keeping the grade value at a high level. Fig. 3(d)
implies that normally a high-grade value means a large num-
ber of assigned subtasks. Combined with Fig. 3(c), we can
conclude that a high-grade worker will obtain a high total
utility. The average worker grade for each subtask generally
increases with the rise of the crowdsourcer grade, as plotted
in Fig. 3(e). Therefore, our GTS algorithm guarantees that a
high-grade crowdsourcer can obtain services from high-grade
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
LIANG et al.: GAIMMO: GRADE-DRIVEN AUCTION-BASED INCENTIVE MECHANISM 17499
(a) (b) (c)
Fig. 4. Experimental results of borderline method 1. (a) Average utility of crowdsourcer. (b) Average worker grade of different subtasks in different
crowdsourcers. (c) Average worker premium of every subtask in different crowdsourcers.
workers. Despite some downward trends in Fig. 3(e), the util-
ities of crowdsourcers never drop and the average premium
of workers linearly decreases with the rise of the grade of
crowdsourcers, as shown in Fig. 3(a) and (f), respectively.
To sum up, our incentive mechanism can successfully moti-
vate system entities to behave cooperatively for maintaining
their grade values at a high level. In the following sections, we
will further compare these experimental results of GAIMMO
with those of borderline methods to illustrate the advantages
of our methods in achieving multiple objectives.
C. Comparison With Borderline Method 1
We compared the borderline method 1 with our grade-based
service priority method, while keeping the other methods the
same as in Section V-B. The evaluation metrics include the
average utility of crowdsourcers, the average grade value, and
the premium of selected workers.
Fig. 4 illustrates that these metrics fluctuate with the growth
of the grade values of crowdsourcers. The reason is that the
service is arranged to the crowdsourcers randomly while the
crowdsourcers that are served earlier can have more choices
so that they can select the most economical workers. By
comparing Fig. 4 with Fig. 3(a), (e), and (f), we found that
our incentive mechanism holds the advantages in promot-
ing the crowdsourcers to maintain their grade values, which
contributes to building a reliable system environment.
D. Comparison With Borderline Methods 2 and 3
The borderline methods 2 and 3 refer to two kinds of
worker selection methods. The evaluation metrics are the
parameters to be optimized by the worker selection method
in Section IV-C.
Fig. 5(a) presents the utilities of crowdsourcers with dif-
ferent grade values. GAIMMO provides the highest utilities
among these three methods when the grade of crowdsourcers
is higher then 0.7. In addition, GAIMMO performs better
than the cost-based worker selection method with regard to
the crowdsourcer utility. Fig. 5(b) shows the social welfare in
the crowdsourcers with different grade. In general, GAIMMO
provides the highest social welfare for the participants in
crowdsourcers with grade values higher than 0.65 and the
grade-based worker selection method performs the best when
the grade value is lower than 0.6. Fig. 5(c) demonstrates the
social cost in each crowdsourcer. The social costs are relatively
(a) (b)
(c) (d)
Fig. 5. Comparative results of our method and borderline methods 2 and 3.
(a) Utilities of crowdsourcers. (b) Social welfare in crowdsourcers. (c) Social
cost in crowdsourcers. (d) Social grade in crowdsourcers.
constant parameters with regard to the rise of the crowdsourcer
grade since the budgets of the crowdsourcers are constant.
The cost-based worker selection works best for each crowd-
sourcer as it is designed to select workers with small costs.
Unfortunately, the social costs are the highest in almost all
crowdsourcers when GAIMMO is applied. Fig. 5(d) displays
the social grade in the crowdsourcers with different grade. We
identified that the social grades of all crowdsourcers when the
cost-based worker selection method is adopted are the smallest
among all methods. Although the grade-based worker selection
method assigns high-grade workers to each subtask, it fails to
consider the cost of workers and cannot recruit more work-
ers than GAIMMO. Consequently, GAIMMO accumulates a
larger social grade for each crowdsourcer than the grade-based
worker selection method.
To clearly compare the overall performance of our method
and the comparative methods, we introduced a parameter
OP = β1Un + β2SW+ β3SG− β4SC (16)
where β1 + β2 + β3 + β4 = 1 and Un,SW,SG,SC
are the normalized values. We assigned the value of
[β1, β2, β3, β4] as [0.25, 0.25, 0.25, 0.25], [0.3, 0.3, 0.2, 0.2],
[0.3, 0.25, 0.25, 0.2], and [0.4, 0.3, 0.2, 0.1] to represent four
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
17500 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 18, 15 SEPTEMBER 2022
(a) (b)
(c) (d)
Fig. 6. Overall performance of our method and borderline
methods 2 and 3. (a) [β1, β2, β3, β4] = [0.25,0.25,0.25,0.25].
(b) [β1, β2, β3, β4] = [0.3,0.3,0.2,0.2]. (c) [β1, β2, β3, β4] =
[0.3,0.25,0.25,0.2]. (d) [β1, β2, β3, β4] = [0.4,0.3,0.2,0.1].
(a) (b)
Fig. 7. Comparative results in terms of the utility of miners. (a) Between
our method and borderline method 4. (b) Between our method and borderline
method 5.
kinds objectives of the crowdsourcers and plotted the cor-
responding results in Fig. 6. We discovered that the over-
all performance of our method was generally better than
the grade-based worker selection method when the grade
of crowdsourcer is higher than 0.65. while the cost-based
selection method performed worst under our system settings.
E. Comparison With Borderline Methods 4 and 5
The borderline methods 4 and 5 refer to two kinds
of reward-sharing methods for the miners. Specifically, we
employed the FGSARS method and the FMNGRS method
as the borderline methods 4 and 5 and compared their
performance in the utility of miners with our FGSGRS
method, respectively.
Fig. 7(a) shows that the grade-based reward-sharing method
(i.e., the line with diamonds) guarantees that a high-grade
miner can obtain a high profit while the average sharing
method (i.e., the line with vertical bars) has the opposite
effect, when we consider to reward the first several min-
ers when the sum of their grade values reaches a threshold.
Fig. 7(b) depicts the results of grade-based reward-sharing
methods in the contexts of fixed grade sum (i.e., the line with
diamonds) and fixed miner number (i.e., all the other lines
except the one with diamonds), respectively. The utilities of
high-grade miners decrease with the rise of the fixed num-
ber of miners � to be rewarded. Similarly, the utilities of
low-grade miners increase with the rise of the fixed number
of miners, since the total rewards to the miners are stable
and the small � means a large share. Furthermore, under
our parameter settings, the high-grade miners can obtain more
profits in our method (fixed grade sum) than in the fixed-
miner-number method when � < 30. Therefore, our method
performs well in motivating the participation of the high-grade
miners.
F. Discussion
The time complexity of Algorithm 1 is related to the num-
ber of crowdsourcers and the time complexity of the applied
sorting algorithm, which is not specified in Algorithm 1. If the
merge sort algorithm is applied, then the time complexity of
Algorithm 1 becomes O(N log N), where N stands for the num-
ber of crowdsourcers. Algorithm 2 assigns 3N subtasks to K
workers. The time complexity for the task assignment of each
subtask is O(K + k log k), where k is the number of selected
workers. Therefore, the time complexity of Algorithm 2 is
O(NK + Nk log k). Algorithm 3 outputs the payments to all
workers, the time complexity of which is O(K). Algorithm 4
needs to find the order of rewarded miners, the time com-
plexity of which is O(lL). Herein, l refers to the number of
rewarded miners. Algorithm 4 calculates the rewards to each
miner with a time complexity is O(L). Therefore, the overall
time complexity of Algorithm 4 is O(lL). In the future, we
will continue to consider how to improve the efficiency of our
algorithms and produce near-optimal task assignment results
with formal proof.
This article focuses on discussing a crowdsourcing sce-
nario that all subtasks can be completed. In the future, we
will further investigate a more complicated scenario with
scarce workers and mutual restriction among different subtasks
during the fulfillment of a whole task.
VI. CONCLUSION
In this article, we proposed GAIMMO, which is a
novel grade-driven auction-based incentive mechanism for
BCS with heterogeneous system entities. GAIMMO aims
to achieve multiple objectives, including crowdsourcer util-
ity maximization, social welfare maximization, social grade
maximization, and social cost minimization. Considering the
dominance of crowdsourcers in BCS, we took crowdsourcer
utility maximization as our primary objective. Specifically,
we proposed the grade-based service priority method to
motivate high-grade crowdsourcers and carefully designed
the utility functions of other system entities for avoiding
profit losses of the crowdsourcers as well as guarantee-
ing the truthfulness of bids. Then, we selected workers for
each subtask according to the requirements of crowdsourcers
and the capability of the workers. Meanwhile, we adopted
the hierarchical PTA algorithm to balance the objectives of
social welfare maximization, social grade maximization, and
social cost minimization. We associated the utilities of miners
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
LIANG et al.: GAIMMO: GRADE-DRIVEN AUCTION-BASED INCENTIVE MECHANISM 17501
with grade values for motivating them to behave coopera-
tively and proposed the FGSGRS method to encourage quick
block generation without sacrificing the profits of crowd-
sourcers. The experimental results illustrated the effectiveness
of our incentive mechanism in motivating all system entities
to gain high-grade values and the achievement of multiple
objectives.
REFERENCES
[1] W. Feng, Z. Yan, H. Zhang, K. Zeng, Y. Xiao, and Y. T. Hou, “A survey
on security, privacy, and trust in mobile crowdsourcing,” IEEE Internet
Things J., vol. 5, no. 4, pp. 2971–2992, Aug. 2018.
[2] Y. Wang, Z. Yan, W. Feng, and S. Liu, “Privacy protection in mobile
crowd sensing: A survey,” World Wide Web, vol. 23, no. 1, pp. 421–452,
2020.
[3] H. Wang, S. Guo, J. Cao, and M. Guo, “Melody: A long-term dynamic
quality-aware incentive mechanism for crowdsourcing,” IEEE Trans.
Parallel Distrib. Syst., vol. 29, no. 4, pp. 901–914, Apr. 2018.
[4] Z. Wang, J. Li, J. Hu, J. Ren, Z. Li, and Y. Li, “Towards privacy-
preserving incentive for mobile crowdsensing under an untrusted plat-
form,” in Proc. IEEE INFOCOM Conf. Comput. Commun., 2019,
pp. 2053–2061.
[5] L. Gao, F. Hou, and J. Huang, “Providing long-term participation incen-
tive in participatory sensing,” in Proc. IEEE Conf. Comput. Commun.
(INFOCOM), 2015, pp. 2803–2811.
[6] Q. Ma, L. Gao, Y.-F. Liu, and J. Huang, “Incentivizing Wi-Fi network
crowdsourcing: A contract theoretic approach,” IEEE/ACM Trans. Netw.,
vol. 26, no. 3, pp. 1035–1048, Jun. 2018.
[7] Y. Zhang, C. Jiang, L. Song, M. Pan, Z. Dawy, and Z. Han, “Incentive
mechanism for mobile crowdsourcing using an optimized tournament
model,” IEEE J. Sel. Areas Commun., vol. 35, no. 4, pp. 880–892,
Apr. 2017.
[8] X. Liu, H. He, and J. S. Baras, “Trust-aware optimal crowdsourcing
with budget constraint,” in Proc. IEEE Int. Conf. Commun. (ICC), 2015,
pp. 1176–1181.
[9] Y. Wang, Z. Cai, X. Tong, Y. Gao, and G. Yin, “Truthful incentive
mechanism with location privacy-preserving for mobile crowdsourcing
systems,” Comput. Netw., vol. 135, pp. 32–43, Apr. 2018.
[10] K. Wang, X. Qi, L. Shu, D.-J. Deng, and J. J. P. C. Rodrigues,
“Toward trustworthy crowdsourcing in the social Internet of Things,”
IEEE Wireless Commun., vol. 23, no. 5, pp. 30–36, Oct. 2016.
[11] H. Xie, J. C. Lui, J. W. Jiang, and W. Chen, “Incentive mechanism
and protocol design for crowdsourcing systems,” in Proc. 52nd Annu.
Allerton Conf. Commun. Control Comput. (Allerton), 2014, pp. 140–147.
[12] Y. Wang, Z. Cai, G. Yin, Y. Gao, X. Tong, and G. Wu, “An incentive
mechanism with privacy protection in mobile crowdsourcing systems,”
Comput. Netw., vol. 102, pp. 157–171, Jun. 2016.
[13] M. Allahbakhsh, B. Benatallah, A. Ignjatovic, H. R. Motahari-Nezhad,
E. Bertino, and S. Dustdar, “Quality control in crowdsourcing systems:
Issues and directions,” IEEE Internet Comput., vol. 17, no. 2, pp. 76–81,
Mar./Apr. 2013.
[14] L. Pu, X. Chen, J. Xu, and X. Fu, “Crowdlet: Optimal worker recruit-
ment for self-organized mobile crowdsourcing,” in Proc. 35th Annu.
IEEE Int. Conf. Comput. Commun., 2016, pp. 1–9.
[15] Y. Zhao, X. Gong, and X. Chen, “Privacy-preserving incen-
tive mechanisms for truthful data quality in data crowdsourc-
ing,” IEEE Trans. Mobile Comput., early access, Nov. 24, 2020,
doi: 10.1109/TMC.2020.3040138.
[16] M. Li et al., “CrowdBC: A blockchain-based decentralized framework
for crowdsourcing,” IEEE Trans. Parallel Distrib. Syst., vol. 30, no. 6,
pp. 1251–1266, Jun. 2019.
[17] X. Xu, Q. Liu, X. Zhang, J. Zhang, L. Qi, and W. Dou, “A
blockchain-powered crowdsourcing method with privacy preservation in
mobile environment,” IEEE Trans. Comput. Social Syst., vol. 6, no. 6,
pp. 1407–1419, Dec. 2019.
[18] Z. Yan, L. Peng, W. Feng, and L. T. Yang, “Social-Chain: Decentralized
trust evaluation based on blockchain in pervasive social networking,”
ACM Trans. Internet Technol., vol. 21, no. 1, p. 17, Jan 2021.
[19] W. Feng, Z. Yan, L. T. Yang, and Q. Zheng, “Anonymous authentica-
tion on trust in blockchain-based mobile crowdsourcing,” IEEE Internet
Things J., early access, Aug. 24, 2020, doi: 10.1109/JIOT.2020.3018878.
[20] W. Feng and Z. Yan, “MCS-Chain: Decentralized and trustworthy
mobile crowdsourcing based on blockchain,” Future Gener. Comput.
Syst., vol. 95, pp. 649–666, Jun. 2019.
[21] J. Hu, K. Yang, K. Wang, and K. Zhang, “A blockchain-based reward
mechanism for mobile crowdsensing,” IEEE Trans. Comput. Social Syst.,
vol. 7, no. 1, pp. 178–191, Feb. 2020.
[22] W. Chen, Y. Chen, X. Chen, and Z. Zheng, “Toward secure data
sharing for the IoV: A quality-driven incentive mechanism with on-
chain and off-chain guarantees,” IEEE Internet Things J., vol. 7, no. 3,
pp. 1625–1640, Mar. 2020.
[23] L. Wei, J. Wu, and C. Long, “A blockchain-based hybrid incen-
tive model for crowdsensing,” Electronics, vol. 9, no. 2, p. 215,
2020.
[24] B. Yin, Y. Wu, T. Hu, J. Dong, and Z. Jiang, “An efficient collaboration
and incentive mechanism for Internet of Vehicles (IoV) with secured
information exchange based on blockchains,” IEEE Internet Things J.,
vol. 7, no. 3, pp. 1582–1593, Mar. 2020.
[25] J. Wang, X. Feng, T. Xu, H. Ning, and T. Qiu, “Blockchain-based
model for nondeterministic crowdsensing strategy with vehicular team
cooperation,” IEEE Internet Things J., vol. 7, no. 9, pp. 8090–8098,
Sep. 2020.
[26] J. Kang, Z. Xiong, D. Niyato, S. Xie, and J. Zhang, “Incentive mech-
anism for reliable federated learning: A joint optimization approach
to combining reputation and contract theory,” IEEE Internet Things J.,
vol. 6, no. 6, pp. 10700–10714, Dec. 2019.
[27] J. An, D. Liang, X. Gui, H. Yang, R. Gui, and X. He, “Crowdsensing
quality control and grading evaluation based on a two-consensus
blockchain,” IEEE Internet Things J., vol. 6, no. 3, pp. 4711–4718,
Jun. 2019.
[28] F. Basik, B. Gedik, H. Ferhatosmanoǧlu, and K.-L. Wu, “Fair task allo-
cation in crowdsourced delivery,” IEEE Trans. Services Comput., vol. 14,
no. 4, pp. 1040–1053, Jul./Aug. 2021.
[29] J. Wang, M. Li, Y. He, H. Li, K. Xiao, and C. Wang, “A blockchain based
privacy-preserving incentive mechanism in crowdsensing applications,”
IEEE Access, vol. 6, pp. 17545–17556, 2018.
[30] J. Huang et al., “Blockchain-based mobile crowd sensing in industrial
systems,” IEEE Trans. Ind. Informat., vol. 16, no. 10, pp. 6553–6563,
Oct. 2020.
[31] D. Chatzopoulos, S. Gujar, B. Faltings, and P. Hui, “Privacy preserving
and cost optimal mobile crowdsensing using smart contracts on
blockchain,” in Proc. IEEE 15th Int. Conf. Mobile Ad Hoc Sensor Syst.
(MASS), 2018, pp. 442–450.
[32] C. Huang, H. Yu, J. Huang, and R. Berry, “Eliciting information
from heterogeneous mobile crowdsourced workers without verifica-
tion,” IEEE Trans. Mobile Comput., early access, Feb. 26, 2021,
doi: 10.1109/TMC.2021.3062425.
[33] C. Lai, M. Zhang, J. Cao, and D. Zheng, “SPIR: A secure
and privacy-preserving incentive scheme for reliable real-time map
updates,” IEEE Internet Things J., vol. 7, no. 1, pp. 416–428,
Jan. 2020.
[34] S. Gao, X. Chen, J. Zhu, X. Dong, and J. Ma, “TrustWorker: A trust-
worthy and privacy-preserving worker selection scheme for blockchain-
based crowdsensing,” IEEE Trans. Services Comput., early access,
Aug. 10, 2021, doi: 10.1109/TSC.2021.3103938.
[35] M. Xiao, W. Jin, M. Li, L. Yang, A. Thapa, and P. Li,
“Collusion-resistant worker recruitment in crowdsourcing systems,”
IEEE Trans. Mobile Comput., early access, Apr. 6, 2021,
doi: 10.1109/TMC.2021.3071093.
[36] M. B. Krishna and P. Lorenz, “Collaborative participatory crowd sens-
ing using reputation and reliability with expectation maximization
for IoT networks,” in Proc. IEEE Int. Conf. Commun., 2021,
pp. 1–6.
[37] H. Yu, Y. Yang, H. Zhang, R. Liu, and Y. Ren, “Reputation-based reverse
combination auction incentive method to encourage vehicles to partic-
ipate in the VCS system,” IEEE Trans. Netw. Sci. Eng., vol. 8, no. 3,
pp. 2469–2481, Jul.–Sep. 2021.
[38] X. Wang, W. Tushar, C. Yuen, and X. Zhang, “Promoting users’ par-
ticipation in mobile crowdsourcing: A distributed truthful incentive
mechanism (DTIM) approach,” IEEE Trans. Veh. Technol., vol. 69, no. 5,
pp. 5570–5582, May 2020.
[39] M. Zhang, P. Yang, C. Tian, S. Tang, X. Gao, B. Wang, and
F. Xiao, “Quality-aware sensing coverage in budget-constrained mobile
crowdsensing networks,” IEEE Trans. Veh. Technol., vol. 65, no. 9,
pp. 7698–7707, Sep. 2016.
[40] P. Cheng, X. Lian, L. Chen, and C. Shahabi, “Prediction-based task
assignment in spatial crowdsourcing,” in Proc. IEEE 33rd Int. Conf.
Data Eng. (ICDE), 2017, pp. 997–1008.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TMC.2020.3040138
http://dx.doi.org/10.1109/JIOT.2020.3018878
http://dx.doi.org/10.1109/TMC.2021.3062425
http://dx.doi.org/10.1109/TSC.2021.3103938
http://dx.doi.org/10.1109/TMC.2021.3071093
17502 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 18, 15 SEPTEMBER 2022
Xueqin Liang received the D.Tech. degree in
networking technology from Aalto University,
Espoo, Finland, in 2020, and the Ph.D. degree from
Xidian University, Xi’an, China, in 2021.
She is currently a Lecturer with Xidian University.
Her research interests are in game-theory-based
security solutions, cloud computing, blockchain, and
mechanism design.
Dr. Liang served/serves as the Publication Chair
of IEEE Blockchain 2022 and the Publicity Chair
of several international conferences, including IEEE
Blockchain from 2018 to 2021 and IFIP Networking 2021.
Zheng Yan (Senior Member, IEEE) received the
D.Sc. degree in technology from the Helsinki
University of Technology, Espoo, Finland, in 2007.
She is currently a Professor with the School of
Cyber Engineering, Xidian University, Xi’an, China,
and a Visiting Professor and Finnish Academy
Research Fellow with the Aalto University, Espoo.
Her research interests are in trust, security, privacy,
and security-related data analytics.
Dr. Yan received several awards in recent years,
including the Distinguished Inventor Award of
Nokia, the Aalto ELEC Impact Award, the Best Journal Paper Award issued
by IEEE Communication Society Technical Committee on Big Data, and
the Outstanding Associate Editor of 2017 and 2018 for IEEE ACCESS. She
is an Area Editor or an Associate Editor of IEEE INTERNET OF THINGS,
Information Fusion, Information Sciences, IEEE ACCESS, and Journal of
Network and Computer Applications. She served as the General Chair or
the Program Chair for numerous international conferences, including IEEE
TrustCom 2015 and IFIP Networking 2021. She is the Founding Steering
Committee Co-Chair of IEEE Blockchain conference.
Raimo Kantola (Member, IEEE) received the
Doctor of Science degree in technology in 1995.
He was with Nokia Networks, Espoo, Finland,
holding positions in research and development and
marketing for 15 years. He joined the Helsinki
University of Technology, Espoo as a Professor in
1996 and was tenured in 2006. He is currently a
Full Tenured Professor of Networking Technology
with the Department of Communications and
Networking, Aalto University, Espoo. His recent
research is in trust in networks and customer
edge switching.
Dr. Kantola has held many positions of trust with Helsinki University of
Technology and Aalto University and acted/acts as the General Chair of sev-
eral conferences, including the TrustCom 2015, the NSS 2017, and the IFIP
Networking 2021.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:34:46 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice