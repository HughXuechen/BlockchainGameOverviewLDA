Incentives Against Power Grabs or How to Engineer the Revolution in a Pooled Proof of Stake System
2021 IEEE International Conference on Decentralized Applications and Infrastrnctures (DAPPS)
Incentives Against Power Grabs
or How to Engineer the Revolution in a Pooled Proof of Stake System
Aggelos Kiayias
School of Informatics
University of Edinburgh €3 IOHK
Edinburgh, United Kingdom
akiayias@inj.ed.ac.uk
Elias Koutsoupias
Computer Science
University of Oxford
Oxford, United Kingdom
elias.koutsoupias@cs.ox.ac.uk
Aikaterini-Panagiota Stouka
School of Informatics
University of Edinburgh €3 IOHK
Edinburgh, United Kingdom
astouka@exseed.ed.ac.uk
stake-pools; blockchain; game-theory
1. INTRODUCTION
Decentralisation is one of the fundamental character­
istics of the blockchain and distributed ledger space ­
arguably it might be the most essential one. For this
reason, it is rather striking that many deployed systems
exhibit a rather small level of decentralisation. 1 While
surprising at first, this current state of affairs is less so
when put under scrutiny. Recent works such as [1]-[4]
showed that various classes of mechanisms that organize
a set of rational stakeholders around a common goal
can easily lead to centralized dictatorial solutions or a
low degree of centralization. In terms of their design
approach, there are two major methods in building large
scale distributed ledgers. The first one suggested by
Bitcoin [5] and followed by a large number of other
projects relies on the concept of proof-of-work (PoW)
[6], [7] to coordinate participation in ledger maintenance.
The main criticism against Bitcoin is its high-energy
expenditure. To address the problem of energy expendi­
ture, a second method has been proposed early on that
employs proof-of-stake (PoS), see e.g., [8]-[11]; in a PoS
system participants engage in the protocol based on the
amount of stake recorded in the ledger. While energy
expenditure is minimal, the problem of incentivising
decentralized operation in PoS systems remains an active
area of research and it is also the focus of the present
work. The flipside of the above line of reasoning that
advocates for decentralization is the realization that
some degree of centralized operation can be beneficial in
a distributed ledger. The main rationale is that offering a
minimum level of quality of service (QoS), requires effort
and a highly decentralized system, be it PoW-based
or PoS-based, may not attract sufficiently equipped or
knowledgeable participants to deliver the level of QoS
that would make the system useful to the participants.
For this reason the vast majority of PoW and PoS
Abstraet-Proof-of-Stake (PoS) blockchain sys­
tems, especially those that allow stakeholders to orga­
nize themselves in "stake-pools", have emerged as a
compelling paradigm for the deployment oflarge scale
distributed ledgers. A stake-pool operates a node that
engages in the PoS protocol and potentially repre­
sents a large number of smaller stakeholders. While
such pooled PoS operation is attractive from various
angles, it also exhibits a significant shortcoming that,
so far and to the best of our knowledge, has not been
sufficiently understood or investigated. Pooled PoS
operation, to be effective and not lead to sub-optimal
dictatorial or cartel-like configurations, should en­
able the stakeholders to revoke and re-delegate their
stake in a way that is aligned with their incentives.
However, given that stake-pool operators are exactly
those entities who determine what transactions are to
be recorded in the ledger, they are quite likely to form
a cartel and censor any transaction they want, such
as those that attempt to adjust the current stake­
pool lineup. In this way, a power grab takes place,
where the stake-pool cartel perpetuates its control
over the PoS system. We first model and observe for­
mally the emergence of the above problem in pooled
PoS systems. Then, we describe an anti-censorship
mechanism that takes advantage of the underlying
cryptographic functions of the ledger and the nature
of peer-to-peer networks to diffuse information with­
out suppression. Specifically, the mechanism exploits
digital signatures which can endorse messages that
are censored and bind them to delegation transac­
tions, as well as the ability of the underlying ledger
to produce unpredictable randomness which can be
used to randomly "audit" the suitability of a stake­
pool by forcibly expiring it. Upon such expiration,
members can evaluate their membership taking into
account what information is available, including in­
formation potentially not recorded in the ledger but
diffused in the peer-to-peer network. We provide a
thorough game-theoretic analysis of this mechanism
discovering various types of Nash equilibria which
demonstrate that the "revolution", I.e., the strategic
decision of pool members to withdraw support from
a censoring cartel as well as the pool operators to
step down, can be Incentdvized, under suitable and
plausible conditions in the utility functions of the
involved participants.
Keywords-reward-schemes; censorship; delegation;
978-1-6654-3485-0/21/$31.00 ©2021 IEEE
DOl 10.1109IDAPPS52256.2021.00006
1For instance, refer
arewedecentralizedyet/ for
cryptocurrency systems.
to https://www.bitcoinera.app/
a comparison between popular
20
21
 IE
EE
 In
te
rn
at
io
na
l C
on
fe
re
nc
e 
on
 D
ec
en
tr
al
ize
d 
Ap
pl
ic
at
io
ns
 a
nd
 In
fr
as
tr
uc
tu
re
s (
DA
PP
S)
 |
 9
78
-1
-6
65
4-
34
85
-0
/2
1/
$3
1.
00
 ©
20
21
 IE
EE
 |
 D
O
I: 
10
.1
10
9/
DA
PP
S5
22
56
.2
02
1.
00
00
6
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
syste ms have mechanisms , either built- in or as overlays ,
tha t ena ble pa rt ies to aggregate themse lves into groups
and eithe r work togethe r formi ng mining pools, or vote
with th eir stake to elect some well equip ped pa rt icipa nt s
to perform th e protocol on their behalf.
In the PoW sett ing, by the very natu re of the protocol
and the und erlying PoW mechani sm, min ing pools a re
typ ically not recorded in t he ledger i.e. , th ey a re realized
by "off-cha in" prot ocol int eract ions. Furthermore, t hey
ty pically do not bind members to specific condit ions
upon entry a nd members are rewarded per unit of work
completed using a suita ble measurement prot ocol; t his
typ e of open orga nizat ion has lead to various typ es
of attacks such as block witholding a nd pool hopping
[121 , [131 . In contras t to the ab ove, in the PeS set­
tin g, stakeholde rs of the ledger can organize themselves
in block prod ucing entit ies (hereinafter referr ed to as
"stake-pools") by simply issuin g a cert ificate recording
the details of th eir pool and then record it on the ledger.
Et hereum- 2.0's "valida tors" is an exa mple of such an
app roach.f Given that not all nodes ar e willing or a ble to
setup a block producing ent ity, many PeS syste ms a llow
for "delega ting" one's stake to an already regist ered pool
so that the pool can represent them in block pr oduction;
this gives rise to what we call a Pooled PaS system. Such
a syst em simplifies coordination between st akeholders,
who oth erwise would have to organize themselves via an
off-chain pro to col. The act of delegation it self can be also
very simp le, merely adding a certi ficate to the blockchain
with t he details of the stake-pool receiving the stake;
once the delegation cert ifica te is deposited , there is no
need for stakeholde rs to engage in th e protocol and
they may be offline except for periodically checking
the syste m to obta in th eir rewards. Most major PaS
syste ms adopt this delega ted approach ; we mention a
few exa mples that have been widely discussed in pub lic
forums and includ e Bitshares' "witnesses" [14], Tezos'
"bakers" [15J, EOS's "block-producers" [16J , Qtum's
"offline st aking" [17], and Cardano's "st ake-pools" [18).
Despite t he ad vantages of delegation in t he PaS sett ing,
one ca nnot fail t o observe a maj or sho rt coming they
possess. The pr ocess of vetting stake-poo l proposals will
inevitably lead to delegation revoca tions a nd subsequent
reassignment of delegate sta ke to a lternat ive and more
competi t ive sta ke-poo l proposa ls. It is in th is way that
the syste m is expected to evolve over t ime and ma intain
an approximately efficient operat ion conti nuously. Bu t if
the current line-up of stake-pools is the one responsible
for recording such delegated sta ke reassignments and
new pool registrations, what is to prevent stake-pools to
form a cartel and censor all attempts to change the block-
2P lease refer to htt ps :j/ git hub. com / et hereum / et h2.O- specs for
more detail s.
2
producing entities? After a ll, it is the stake-pool oper­
ators themselves who decide what t ra nsact ions a re to
be recorded in the blocks that comprise the dist rib ut ed
ledger, and thus t hey would have no incentive to add
a transact ion that removes them from power or allows
a competit ive pool to be regist ered. Th is seemingly
unsolvable conundrum is the focus of the present pa per.
In our analysis we assume that the players are rational,
wh ich means th at they act in a way t ha t maximizes their
utility that is a quantity they find imp ortant such as
their rewards. The actions that they choose a re ca lled
strategies. A joint strategy or a strategy profile is a vecto r
wit h the strategies of all the players. A strategy profile
is a Nash equilibrium when th e following holds for every
player i: if all th e players exce pt i follow th e stra tegy
that is indicated by the st rategy profile, player i cannot
increase its utility by choosing a stra tegy differen t from
th e indicated.
Our Results: We initiate the ga me-t heoret ic study of
censoring t ransactions in pooled PoS syste ms, with a
pa rt icula r focus on transactions th at mod ify the dele­
gation of stake or register new pools. In more details,
our results are as follows.
(I) We formalize t he pr oblem of censorship in pooled
Po S systems and int roduce th e concept of (strong)
incentive-consistency for transacti ons. We observe that
for st rongly incentive-consist ent t ran sactions, liveness
holds even in a mixed Byzantine/ Rational set t ing (wit h­
out any altruistic participants, cf. [19]). On the other
hand , we show that there are classes of tra nsact ions that
a re not incenti ve consiste nt : such transact ions rela te to
stake re-delega tion or pool regist ra tion, and t here is a
Nash equilibrium where th ey a re censored ind efinitely
by a ca rte l of sta ke-pools which is in power. (II) We
put for th an an ti- censorship mechanism for such trans­
acti ons that is moti vated by the ab ove resu lts. Ou r
mechan ism combines two core ideas. First , a ran domized
pool dissolvin g event t hat happens regularl y in the
system's opera t ion in an unp redict ab le fashion, enforced
by the ledger ru les, capit alizing on the ability of t he
underlying blockchain to d raw unpredictable random­
ness. Second, the cryptog ra phic compounding of stake
delegation transaction s which can be strongly incent ive
consis tent with transactions that a re non-incentive con­
siste nt. T his compounding effect offers an opportunity to
"break" a stake-poo l carte l by challenging its members
with the question : do they prefer to leave some stake
und elegated (act ing as "censors") or include a non­
incentive com patible t ran sacti on to the ledger? At th e
sa me time, it offers t he opportunity to the recently dis­
solved pool members, to eithe r "rebel" aga inst th e car tel
(a nd compound a new pool registration transaction that
is circulat ing in t he peer- to-peer network t o their st ake
delegat ion transact ion by cryptogra phically signing it )
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
or "capitulate" and re-delegate their stake to the status­
quo operators. (III) Does the above mechanism actually
work? We analyze our anti-censorship mechanism from
a game-theoretic perspective. First we provide a single
round analysis which reveals the equilibria of the game
between the stake-pool operators and their members.
It turns out that two distinct equilibria are possible.
In the first one, transaction censorship and capitulation
takes place, while in the other, assuming the utility of
participants aligns properly, facilitates a "revolution",
where some pool members choose to rebel and force the
stake-pool operator to stop censoring the new stake-pool
registration transactions. We subsequently examine how
the basic game unfolds over a number of rounds as well
as in the setting of adaptive strategies in two or more
rounds, where decision-making in one round is adaptive
to past game actions. In this setting we show a richer
set of equilibria where more players rebel in a round
if in a previous round a player has rebelled but was
censored. The above results in the multi-round setting
are obtained when a single pool is pitted against its
pool members. Applying this in practice, will require
the multi-round execution to take place in long intervals
since in each round a stake-pool is selected at random,
thus two rounds pitting the same pool with its members
may take an expected O(k) rounds to occur where k is
the total number of pools that run the PoS protocol. Mo­
tivated by this, we remove this inefficiency, by studying
the multi-round setting in the scenario where different
pools are assigned to each round.
Other related work: We remark that the central
game-theoretic problem faced by pool members that
prefer the formation of a new pool is how to coordinate.
Coordination of players to select an appropriate equilib­
rium is a vast topic in game theory. More relevant to our
approach is the investigation of effects of "cheap talk"
(see for example [20]-[23]) in coordination games [24]'
[25].
II. PaS SYSTEMS AND STAKE POOLS
A PoS system is a system supporting a transaction
ledger that relies on a PoS mechanism for consensus.
Specifically, player Pi has some recorded stake Si in the
system that is associated with a public-key pk, and a
corresponding secret-key Ski. In PoS system, at any given
time in the protocol execution, parties can determine
whether they have to participate in the protocol by
using their secret-key Ski. The information recorded in
the ledger is described by a language E. Players issue
transactions tx that interact with the state of the ledger
x E £ in some way and following a publicly known
transition function 0 result in an updated state Xl, i.e.,
o(x, tx) = c', Given that a PoS system is supposed to
continuously process transactions, at any given time,
3
in the view of a player Pi there is a ledger Xi that is
considered "settled", as well as a sequence of transac­
tions tXI, ... , tXq for which it holds that they extend the
. 8,tX1 8,tx qsettled state III some way Xi ----+ Xi,l ... ----+ Xi,q, and
are pending. We say that x :::::; Xl when there is a valid
sequence of transactions that under 0 transitions x to
c', Not all transactions are admissible for a given ledger
state; when a transaction is inadmissible, the state of the
ledger remains identical, i.e., o(x, tx) = x.
A PoS system provides the following two properties.
Definition 1: Consistency. At any two times t :s; t'
during the course of the system's operation and any two
players P, P' with ledger states x, r' respectively at times
I I I 8,t X1... tXq It, t, it holds that X :::::; x q , where X ; x q and
tXI, ... , tXq are the pending transactions in the view of
P' at time t', i.e., ledger state x~ is a valid extension of
ledger state x.
Liveness. If a transaction tx is given as input to all
honest players at a certain time t, then at time t + u,
any honest player, is at a state x for which it holds that
there exists some z i :::::; X2 :::::; X and Xl 8,tx; X2, i.e.,
transaction tx has been processed and its results are
incorporated in ledger state x. We call u the Byzantine
liveness parameter of the PoS system.
Aside of the above two properties, the exact syntax of
transactions, their generation mechanism as well as the
specifics of the transition function 0 are not important
in the present exposition and we will not constrain
them further except that we will make the assumption
that each player can use their secret key Ski to issue
a special transaction denoted by {M}z for some string
M E {O, I}' that results in the public state updated with
in such a way that the message M is recorded in the
ledger. Note that writing the message M in the ledger
will incur a cost (typically proportional to the length
of the message IMI) and will thus affect the stake of
the player (albeit in a certain minor way). Being online,
in general, incurs a cost and as a result it cannot be
expected that players will be online all the time. For
this reason it has been suggested and deployed in a few
different systems (see e.g., [1] and references therein,
notably EGS [16]' Tezos [15]' and Cardano [18]) , that
the ledger is used to record "stake pool" registration
messages, that record a message as follows:
Gi,pname = {New pool with parameters pnarne, pk},
that associates a public-key pk with a name pname
(possibly other pool related data are added to this record
- we omit them in this simplified exposition). This
registration mechanism enables parties to delegate their
stake (or part of it) to pools they desire by issuing
messages of the form Di,a--+pname =
{I delegate a of my stake to pool pnamejlnonce},
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
where nonce is a unique identifier for the stake-pool
delegation message. We note that the (pk.sk) pair em­
ployed by a stake-pool would be of the same form
as the keys used for regular accounts in the system.
A delegation message can be subsequently revoked by
issuing a message of the form Ri,nonce =
{I revoke my delegation corresponding to nonceh
The above modifications imply a pooled version of the
proof-of-stake protocol that operates as follows. First of
all, each player that has delegated their stake can be
offline. A stake pool operator will engage in the protocol
using their stake delegated to their pool as opposed
to the stake they actually possess. The protocol now
can operate in a number of different ways: (i) in the
strict pool setting, only pools with delegated stake are
allowed to engage in the protocol, (ii) in the mixed
setting, players and stake pools are allowed to operate
concurrently. In more details, each player (stakeholder
or stake pool operator) parses the state x E £ for
messages of the form Di,a--+pname and organizes them
in a stake-pool lookup table. The table is continuously
updated as the state evolves. At any time, when a
protocol message arrives that is associated with a stake
pool operator or player it is verified with respect to the
stake-pool lookup table and the stakeholder distribution.
Stakeholders whose stake is delegated are not permitted
to participate (up until the moment they revoke their
delegation message).
III. THE CENSORSHIP PROBLEM
The censorship problem in a pooled proof-of-stake
system refers to the attack scenario where pool operators
filter incoming transactions and in this way control the
evolution of the ledger both in terms of what is admis­
sible into the ledger state but also in terms of changing
the composition of the running pools. This is a serious
consideration for the following reason: PoS protocols
are typically shown to satisfy consistency and liveness
as long as a Byzantine adversary controls a certain
amount of stake below a certain threshold (typically this
threshold is 1/2 - E or 1/3 - E where E > 0 is a small
constant depending on the network characteristics). In a
pooled PoS system the responsibility is transfered to the
pool operators and hence it can be significantly easier
to create a coalition that deviates from the protocol
in a way that consistency, and most importantly (for
the issue of censorship) liveness is violated. For regular
transactions the above problem is typically mitigated
via a simple incentive mechanism that somehow in­
corporates transaction fees into rewards given to the
operators. In order to make this explicit consider the
following setting. Each rational player Pi in the system
is associated with a utility function that it tries to
4
maximize. The utility function Ui : £ -----+ R maps ledger
states to a particular real value. We remark that there
are typically more factors that influence the utility of a
player but, for simplicity, and without loss of generality
for our exposition we will just compound all to the ledger
state.
When a transaction tx is considered by a PoS player
who maintains the ledger and is about to issue a block, a
two option strategy is at play, either include tx or censor
tx. If a player has a certain ledger x for which it holds
that Ui(X) < Ui(X I) where x 8,tx; Xl then the transaction
could be possibly included. We remark that censoring is
merely postponing a transaction and a PoS player may
want to reconsider it at some later time. It is easy to
see that the above condition on the utility of a player is
not sufficient to establish a formal anti-censorship result.
The reason is that while momentarily a transaction may
be beneficial to the player (e.g., because it offers some
fee), the transaction (i) may not be beneficial in the long
run and as a result a non-myopic player (a player that
tries to maximize its utility in the long term) will decide
to censor it, (ii) it may be more beneficial to postpone it
in favor of other transactions that increase the utility
even higher. We introduce the following concept to
classify transactions from the players' perspective.
Definition 2: A transaction tx is strongly incentive­
consistent (resp. incentive-consistent) if it holds that
at any time t of an execution of a PoS system, it
holds that for all players Pi, and all z j , X2, r' such that
8, ... ;iHx 8, ... tx... I d 8, ... tx... 8,... I
X -----'-------'- z i ; X an X ; X2 -----'------+ X , we
have that Ui(Xl) < Ui(X2) (resp. Ui(X) ~ Ui(XI)), i.e.,
including the transaction tx sooner than later makes
player Pi strictly better off in terms of utility in any
possible extension of its present settled ledger x, (resp.
including the transaction tx reduces no-one's utility).
Based on strong incentive-consistency, liveness can be
derived as follows.
Theorem 1: Any PoS system, if it is maintained by
a population of rational stakeholders, satisfies liveness
for strongly incentive-consistent transactions as a Nash
equilibrium, even in the presence of a Byzantine adver­
sary below the system's Byzantine threshold.
It may come as a surprise that incentive-consistence by
itself is not enough to provide liveness. The reason is
that merely assuming the monotonicity of the utility
function is not enough to incentivize the inclusion of a
transaction; for instance, the utility may be such that
it favors the delay of a transaction and it grows more
steeply as long as a transaction is not included up to
a certain delay window. To make matters worse some
transactions may not even be incentive-consistent. In
particular, transactions that revoke a stake-pool dele­
gation or register a new pool can be arguably seen to be
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
inherently no t incentive-consistent. T he reason is tha t
being a sta ke-poo l enables th e ope ra to r to wield a cert a in
power over th e sys tem's operat ion th at could mak e his
utility to drop when th eir pool has some delegated
st ake removed or a comp et it ive pool is regist ered. We
formulat e th is as the incumbency property below.
Inc umbency Property. In a PaS system, there ex­
ist stake pool delegation revocation tra nsacti ons and
pool registrat ion transactions that ar e inherently non­
incentive-consist ent.
In pa rt icular, regarding the revoca tion t ran sact ions ,
for any ledger st ate x there exists a E (0, I) , such
that x ca n include {(pk, pname)} i , Dj ,a--+ Pflame, for some
pnarne.pk E {G,l}' and i, j E {I , .. . ,n} and in such
case, it holds that the ut ility of the op erator P; of pool
pnarne satisfies u;(x) > u.(x/) for any ledger state x' such
" x hore nonce Id ti fthat x ---2........t x ' and tx = R j ,nonce w ere nonce I en I es
transaction Dj,a--+pname.
The above pr operty suggests that t ransact ions that
revoke a delegation inst ruction for a certa in a mount of
st ake a will always have one di ssenter among the st ake
pool operators (the operator whose pool is "hurt" by
having some of it s delegated stake removed) . T his opera­
tor will prefer to postpone that transacti on; in fact , t hey
will want to postpone it indefinitely. Wh ile the above
argument points to the existence of a single dissent er ,
it is plausib le in a real-world setting that a coa lit ion of
all pools will be formed which, act ing as a ca rtel, will
collectively reject all revocation messages submitted by
st akeholde rs , hence perpet uating their custody over th e
PoS sys te m in defiance to the will of th e stakeholders.
Pool regist ra t ion t ransact ions a re also not incentive­
consiste nt ; all th e exist ing sta ke pool opera to rs have
incentives t o postpone these transactions, as th eir ut ility
will decrease if they include them du e to competit ion.
For exa mple, according to the reward sharing mechanism
proposed in [1], in an equ ilibrium the k players with the
best cha racte rist ics in terms of cost effi ciency and stake
open a pool and choose their m argin (the fract ion of
the pool' s profit they charge their members for their
service), so that their pool is more competi ti ve th an
an y other pool th at can be registered . However , if t he
st ake pool opera to rs a re t he ones who register new
pools by incl uding pool registrat ion transactions in t heir
blocks, t hen they have incentives t o post pone all the
pool regist ra tion transacti ons. This happens because if
they post pone all these tra nsactions, th en they ca n set a
very high margin that increases their u ti lity, as t hey are
not a fraid of losing members du e to competi t ion. This
reasonin g proves t hat there is a Nash equilibrium where
no operato r includes pool regist ration transactions a nd
the liveness is get hurt even with no Byzanti ne players.
IV . OUR A NTI- C ENSORSHIP M ECH A NI SM
The core idea behind our mechan ism is as follows:
based on Theorem 1 we have liveness for st rongly
incentive-consist ent transacti ons. A candidat e class of
t ran sactions for st rong incentive-consistency in a PoS
system a re delegation transact ions Di,a-tpname that del­
egat e some st ake tha t was und elegated in ledger state
x . Any delay in processing such a t ransaction ca n be
assumed to be det riment al to all players due to loss of
rewards.P With this as a st arting point , we will exp lore
how we ca n ca pita lize on such tra nsact ions to ensure live­
ness for t ransact ions that are not incenti ve-consistent.
Motivated by th e incumb ency property, we will focus
on transact ions of the form R j,nOflce and Gj,pname. In
more det ails, we will take ad vantage of the ability of the
dist ributed ledger to prod uce unpred ictable ran domn ess
in regula r int erva ls (we will call them rounds) . In each
round the ledger is assumed to produce an unpredictable
nu mber pout of which, a single ra ndom stake pool can be
select ed uniformly and indep endently. We will dissolve
this stake pool as a form of "randomized audit " and
will invite its former members to join it. The members
will have to come online and engage in delegation , for
otherwise they risk loosing rewards.
In addition to the ab ove ra ndomized audit , our mech­
a nism introduces compounding st ake delega tion transac­
tions wit h t ransactions that are possibly not incenti ve­
consistent for the stake-poo l operators , in particular
revocation a nd pool registration t ransact ions. Sp ecif­
ically, we allow delegat ion transactions to include a
registration certificat e of a new pool, not necessarily
th e pool in wh ich t he stake is delegated , as well as a
delegation revocation transa ction which is supposed to
be processed before the delegation act ion takes place
(hence, someone ca n revoke and re-d elegate their stake
in one transacti on) .
[Di,a--+PfldmeIR i,noncel IGj ,Pfldme/] =
{I delegat e a of my stake t o pool pnarne llnonce (1)
II I revoke my delegation corresponding to nonce'
II {New pool with parameters pnarne, pk}j};
It is imp or ta nt to note that although we a llow i = j
a nd pname = pname', this is not necessar y; in fact , t he
mechanism allows a sta ke delega t ion message t o carry
a po ol registration cert ificat e that was issued separa te ly
by a different stakeholder. We note that th e same mech­
a nism would apply to a ny other type of transaction that
is at risk of censorship, nevertheless, we focus on the
above type of transactions since th ey const itu te a most
obvious t arget of censorship. The ma in int uiti on behind
3T his ca n b e facilitated by e.g., cal cula t ing t he t otal rewards
ava ila ble as a linea r funct ion of t ota l sta ke delegated .
5
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
the mechanism is the following. By dissolving a stake-pool
and subsequently allowing the stake delegation messages
to carry new pool registration messages, an opportunity
is created to circumvent the incumbency property. In
particular consider a stake pool operated by player Pi,
which is dissolved for a randomized audit in ledger state
x. We observe that processing a delegation revocation
transaction over x which removes stake from the pool
of Pi, does not reduce the utility of Pi (since the pool
is dissolved at that point and receives no rewards),
and moreover, new delegation transactions can be con­
ditional to the introduction to new pools that create
new opportunities for delegation. As a result, there exist
possible extensions of the ledger state z , where another
player Pj introduces a new pool, which may be more
profitable for a coalition of members that includes Pi.
Given this possibility, the question faced by pool
operator Pi is whether to censor stake delegation trans­
actions that carry P/s pool registration certificate, in
an attempt to prevent the creation of the new more
attractive pool, or to accept the transaction and either
join the new (or some other) pool as a member or retain
its pool and adapt its parameters such as its margin
[1]. When the pool operator Pi decides to censor the
transaction, it essentially rejects all its members that
delegate stake to Pi and try to register Pj . As a result,
Pi'S utility is reduced, but it achieves to prevent the
creation of the new pool. At the same time, the members
that try to register Pj will fail to delegate their stake
and will lose some income, hence this action of rebellion
against the old stake-pool leader will come with the
possibility of a penalty in terms of their utility.
To summarize the game-theoretic issues, we observe
that pool operator Pi has to decide whether to censor
all transactions that register a competing pool Pj and
the pool members have to decide whether to include
such registration with their delegation transaction. This
game is at the heart of our considerations in this work.
However, the situation is significantly more complicated
for the following reasons: First, the utilities of both the
pool operator and the pool member depend on many
other factors. Second, the game is played repeatedly in a
potentially dynamic environment. Third, operators and
members of the remaining pools can affect dramatically
the outcome. Specifically, it takes a single pool operator
to accept the registration of a new pool. Finally, there
are multiple equilibria in general, and the equilibrium
selection process is greatly affected by the socially ac­
ceptable behavior. For example, a reasonable social pol­
icy would ask players, when indifferent, to include some
new pool registration in their delegation transaction."
4 An analogous soc ial advice for block mining is to mine at the
deepest branch in the setting of "longest chain wins" blockchain
protocols.
6
While it is beyond the scope of the current exposition to
provide explicit reward mechanisms for pools to receive
rewards, recall that several recent works have done so
already, cf. [1], [2], and can be used to support the above
reasoning. To analyze our mechanism we will consider an
abstract game that possibly carries over multiple rounds
with players choosing whether they want to comply with
the existing PoS system configuration into stake pools or
support its evolution as resulting from the introduction
of new stake pool registrations. Observe that this is
inline with a PoS system operation where transactions
are assumed to be communicated in an underlying peer­
to-peer network and are thus accessible to all players
despite the fact that the players that operate the current
set of stake pools may choose to censor them and
postpone their inclusion into the ledger state. In our
analysis we will consider two simplified utility notations,
u, u t , that capture respectively the utility of a player
under the current stake pool status and the one that
is emerging from the PoS system after the new pool
registrations are included in the ledger. Our objective is
to analyze the conditions on u, ut under which including
the transactions (and as a result evolving the system)
is an equilibrium, as well as studying the equilibrium
strategies themselves and their viability.
v. SINGLE ROUND GAME
In this section we consider a simplest case of the game­
theoretic situation, in which we focus on a single pool
and a single round. The game is played between a pool
leader and the members of the pool. The interesting case
arises when one of the members or somebody else wants
to create a new pool, which is potentially more profitable
for the members of the existing pool. Therefore, the
members would prefer to abandon the current pool and
join the new pool. However, the current pool leader may
try to resist the creation of the new pool by blocking
its registration. We consider the worst case that every
other pool operator also blocks the registration of the
new pool, which is a reasonable assumption given that
a more competitive pool can only reduce their reward
in general. The pool leader has two possible strategies:
censor and notcensor, that is whether to accept some ~
arguably all-> stake delegation transactions that register
the new pool or to reject all of them. On the other
hand, each pool member has two strategies: capitulate,
in which case it posts a transaction for delegating its
stake to the old pool without including the registration
of the new pool, or rebel, in which case it adds the
registration of the new pool (and possibly changes its
delegation preference). In effect, the pool leader poses
the following dilemma to its members: (i) to include
the new pool registration in their delegation certificate
and risk rejection, which means that their stake will
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
In this section we extend the game to multiple rounds.
The strategy of each member is to choose capitulate
or rebel for each round and the strategy of the pool
leader to choose notcensor or censor for each round. We
will assume that when the pool leader chooses notcensor
or a member chooses rebel in one round then in the
following rounds they are restricted to do the same.
In the following section we remove this assumption.
The utility of a player i for a game with m rounds is
Ui = Ui,l + ... + Ui,rn where Ui,j the utility of player
i in round j. If the pool leader chooses notcensor in a
round and there exists a player with rebel then in all
the following rounds the utility of the members will be
u~ and the utility of the pool leader ui P . Otherwise the
utilities of each player during each round are defined
as in the one shot game. The players decide in the
beginning their strategies for all the rounds. In the next
section we will examine also adaptive strategies.
Definition 3: Let Si,j be the strategy of player i ~
1, ... , n for round j = 1, ... , m. Let Sf be the vector
The utility of the pool member i denoted by U, in a joint
strategy (S" S2, ... , Sn, Sp) will be
1
0 if Sp ~ censor A s, ~ rebel
--I- u~ if S p = censor A Si = capitulate
Ui(S) ~
u~ if S p = notcensor A :::Ji Si = rebel
u;if S p = notcensor A Vi Si = capitulate
Note that when the pool leader chooses notcensor and
all the players capitulate, the outcome is that, indepen­
dently of the presence of the new pool, pool members
will remain with the old pool and hence the utility of a
player i will be u; not u~.
The following theorem characterizes the equilibria of
this game. It states that there are two types of equilibria:
a unique equlibrium in which censor is successful and
every member capitulates, and a class of equilibria in
which members with sufficient stake can manage to force
the pool leader not to censor.
Theorem 2: Let F = KIn K 2 where K 1 is the event
that there exists unique i such that Si = rebel and K 2
is the event that (Si ~ rebel) =? (ui ;:> uD.
Let J be the event that there exist more than one player
with rebel. Assuming that (i) Vi it holds u~ > 0 for x ;:>
Si + S P and (ii) there exists a player i for whom it holds
u~ > u; all the equilibria of our game are the following:
• A = (Sl' ... , Sn, notcensor) such that
(uiP;:> u~ where o ~ L Sj) n (J U F)
j:Sj=capltulate
such
temporarily remain undelegated and get no income or
(ii) to not include it and continue getting income from
delegation, but lose a higher income in the long run from
the new pool. We assume that if the pool leader selects
notcensor and the new pool is created, all members will
have sufficient time to change their delegation and join
the new pool independently of whether they rebel or not.
Based on the above reasoning we define the strategies
and the utilities of the players and we also find all the
pure Nash equilibria of this game. Recall that a utility
function takes as input the joint strategy (a vector with
the strategies of all the players) and outputs the quantity
that the players want to maximize such as profit.
Strategies of the players: The set of strategies for the pool
leader is {censor, notcensor} and the set of strategies for
the pool members is {capitulate, rebel}. The strategy of
the pool leader will be denoted by S p and the strategy
of a pool member i will be denoted by Si.
Utilities: Suppose that 0: is the stake of the pool mem­
bers that select capitulate. The utility of the pool leader
is uI:, when it plays censor, and ul P when it plays
notcensor and at least one member chooses rebel. The
first case captures the setting when the pool leader
censors all the stake delegation transactions that register
the new pool, so the new pool is not registered, and it
loses all the members who chose rebel. The latter case
captures the setting when revolution takes place, the new
pool registration is installed and the stake-pool line up
of the system is modified. The case of playing notcensor
when all members choose capitulate is captured by the
first case (for 0: that is equal to the total stake of the
pool), as the new pool is not registered and no player
is censored. Similarly, let u~ be the utility of member
i when (i) the pool leader chooses censor (ii) i chooses
capitulate, and let u~ be the utility of pool member i
when the pool leader selects notcensor and at least one
player chooses rebel. The first case gives the utility that
member i obtains by being a member of a pool that has
total delegated stake 0:, as the members that chose rebel
have been censored. The latter case captures the setting
when the revolution takes place, a new pool is registered
and a pool member can benefit from the new stake-pool
lineup.
Let n be the number of players, Si the stake of member
i: Sp the stake of the pool leader and y = sr + ...+sn+sp.
Using the above notation we define the utility of the pool
leader and the pool members in our game as follows:
The utility of the pool leader Up in a joint strategy § =
(S"S2, ... ,Sn,Sp) will be
{
uI: if S p = censor
Up(S) ~ d P if Sp ~ notcensor A ~i Si ~ rebel
u; if S p = notcensor A Vi Si = capitulate
7
• B (Sl, ... , Sn, censor)
(Vi Si ~ capitulate) .
VI. EXTENSION TO MULTIPLE ROUNDS
that
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
wit h th e st rategies of player i unt il round r (includ­
ing r) and Si r be th e vector with the st ra teg ies of
player i a fter roun d T . Let §r = (§p,§r, ..., §~) be
th e vector with th e joint st rat egy until round r and
§- r = (S"i/ ,SI T,...,s;;r) th e vect or with the joint
st ra tegy after round T .
Definition 4: A subgame r will be a game as described
above beginning from round r-t- I and ending afte r round
m .
Definition 5: A joint st rategy §m will be a Sub} ame
Perfect Nash Equilibrium if for every subgame T s-r is
a Nas h Equilibrium.
The following theorem describes a class of joint st rate­
gies that a re Subgame Perfect Nash Equilibria a nd
extensions of the single-round eq uilib ria. Specifica lly th e
class conta ins a ll equilibria in which during an initial
phase everyone stays in the old pool (i.e. , th e pool leader
chooses censor and all the members capit ulate) and at
some point th e "revolution" succeeds a nd everyone joins
the new pool {i.e., th e pool leader chooses notcensor
while some members rebel). This class of joint st rateg ies
that a re Subgame Perfect Nash Equilibr ia include a lso
the ext reme cases where t he init ial pha se is em pty or
covers a ll rounds.
Th eorem 3: Assume that every member has st rict ly
posit ive utility when it stays in the old pool, i.e, u~ > 0,
wh ere x 2:: Si + S P, an d that the pool leader prefers to
keep it s pool int act than dissolve it , i.e., u' P :::; ufo
The following joint st rat egies for th e game of m
rounds are Subga me Perfect Nash Equilibria for every
1 E { L,..., m}: The pool leader selects SP.i = censor ,
at every time step i :::; l , a nd 8 P,j = notcensor for
j > I. All pool members select Si,j = ca pitu late for
j S I. At time i = 1 + 1, th ere exis t eithe r two or
more members that select rebel or a uniqu e player i th at
selects rebel; in th e latter case, player i must prefer the
new pool from the current sit uat ion, i.e. , u~ 2:: u~ , where
y is t he total stake of the old pool. Furthermore, th e
t otal sta ke of rebel membe rs at time l + 1 must make
the current pool unattract ive to t he pool leader, i.e.,
IP > P h - '\"U _ Uo: were Q - L..,.i :S .., l + 1 -eca pitulat e Sj.
VII. ADAPTIVE S TRATEGI ES
In th e previous sect ions we conside red non-adapt ive
st ra teg ies and now we tu rn our attention to a more inter­
est ing and realist ic set t ing in which players adapt their
st ra teg ies based on the situa t ion of previous rounds.
The moti vati on for adapt ive st ra tegies is to ca pture t he
following scenario: Members of t he pool may hesitate
to choose rebel beca use of the th reat th at the pool
leader will select censor a nd , as a result , th ey will lose
the rewards of the next round. Ca n the situat ion be
improved by conununicat ion? This is a "cheap-ta lk" sit u­
a tion, in which pre-play communicat ion be tween players
8
- with no direct affect on the players utili ties- does
not necessa rily lead to a good equilibrium. \Ve assume
that before every roun d members ca n freely conunu­
nicate off-chain and then simultaneously commi t to a
st rategy for the coming round. If members could provide
a commitment that they will select the rebel st rat egy,
they could coordina te a nd "force" the pool leader t o
select notcensor. But such commitment is impossible t o
be enforced on chain, as t he pool operators would censo r
them, so membe rs have to rely on "cheap-talk" (with no
direct effect on utility) or signals (Wit h some direct effect
on utility) to coordina te. A signal that a member can
give to ot hers is to select rebel and forfeit the income of
the next round . When this happens a nd the pool lead er
censors it , the player 's cho ice does not appea r on-chain.
Still, other players learn about the suppressed stra tegy
from off-chain conununicat ion a nd by chec king th at it
d id not appear on-chain. We extend the strategies of
the previous sect ion to a llow for communicat ion and
signaling. Now t he strategy of the second round can
depend on the st rategies selected in the first round.
Stratecies. T he strategy of a memb er i is Sj
(Si, l , Si,2(S"I, ... , Sn.l , Sp,I )) . The stra tegy of the pool
leader is Sp = (SP.I , SP., (S" " ... , Sn,I)) . We now define
a nat ura l set of strategies X t hat allow t he members to
coordinate in the second round by resp onding to choice s
of the first round. Let X be t he st rategy of pool members
in which they rebel in th e second round whe n they see
some member rebel in the first round , i.e. , X = rebel
if t here exis ts i such that S i ,l = rebel, and capitulate
ot herwise. Let Y be t he st ra tegy of th e pool leader in
which they select notcensor in the second round , when
they see a rebel in th e first rou nd , i.e. , Y = notcensor
if there exists i such that S i ,l = rebel, a nd censor
otherwise.
Th eorem 4: Assuming that for a ll i , u~ and u~ is
increasing in x and for a ll i and z , u~ 2: 0, th en the
following joint st rateg ies are Nash equilibria :
• T he st ra tegy of t he pool lead er is Sp = (censor, Y ) ,
wh en u'P 2: U:_l' where y is the to tal st ake of
pool members (including pool leader) and I =
Li:S..,2= X s, is t he stake of pool members that select
st ra tegy X .
• T he stra tegy of t he pool members sa tisfy L n J n F ,
where J is t he event th at 3i , j such that 8 i ,2 =
8j ,2 = X , L is the event tha t th ere ex ists unique
i such that Si I = rebel and F the event th at Si I ~
rebel =? (u' P '< u P ) n (u~ > 2u i ) . '_ y- B. ~ _ y
Rem ark 1: The equilibria described in Theorem 4
hold even without the assumpt ion tha t if th e pool leader
has chosen notcensor t hey will choose notcensor aga in
and if a pool member ha s chose n rebel they will choose
rebel again .
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
Next we argue that if there is a signal and enough
players who follow the signal the revolution will happen.
Intuitively according to the following theorem if there is
a player with rebel in the first round and enough players
with X in the second round which means that they
follow the signal then there is no equilibrium where the
pool leader chooses to censor in the second round and
prevents the revolution.
Theorem 5: (I) Assuming that u; is increasing in x,
if up > u;_z, where l = Li:S
i
2=X Si and :::J i such that
Si ,l = rebel then there is no equilibrium where S P,l =
censor and Sp,2 = censor or the pool leader chooses a
strategy that ends up to censor in the second round. (II)
Assuming that u~ is increasing in x, if there is a player
for whom it holds ui > 2ut and there is a player j for
whom it holds Sj,2 = X and S P,2 = notcensor or the
pool leader chooses a strategy that ends up to notcensor
then there is no equilibrium where in the second round
the utility of a member i is not ui.
Extension to multiple rounds: We can extend the­
orem 4 so that it captures the above game extended in
multiple rounds. If the game lasts k rounds then we can
adapt theorem 4 so that (i) the revolution happens in
round j + 1 (ii) for the player who chooses rebel it holds
Dj,k = ui 2: -,!!:yut (instead of ui 2: 2ut) and (iii) X, Y
strategies are adapted as follows:
X j = rebel if :::J i such that Si ,l = Si,2 = ... = Si,j
rebel and capitulate otherwise.
lj = notcensor if :::Ji such that Si ,l = Si,2 =
Si,j = rebel and censor otherwise.
Note that Dj,k represents the fact that it is more
profitable for a player to rebel for some rounds and get
zero rewards compared to capitulating if at the end they
manage to transform the system to a new state with a
new pool.
Two round game-two pools: We extend the previous
two round game as follows: There are two pools with n
players each one active in the first and second round
respectively. This captures the scenario where a player
of the first pool gives a signal by choosing rebel and in
the second round the players of the second pool follow
the signal, choose rebel and the revolution takes place.
Let PI,P2 the pool leaders of the pools and Y I,Y2 the
sums of the stake that belong to all the members and the
pool leader of the first and the second pool respectively.
The utilities of the players are defined as follows: a) The
utility of a player i of the first pool during the first round
is defined in the same way as the previous game and in
the second round is either uti or ui. In the second round
the utility of player i becomes ui if (i) the pool leader of
the second pool chooses notcensor and there is a player
of the second pool that chooses rebel (ii) the utility of
player i in the first round is ui. b) The utility of the
players of the second pool during the first round is ut2.
9
The utility of the players of the second pool during the
second round is defined as before except when during
the first round PI chose notcensor and there was a player
of the first pool with rebel. In that case the utility will
be ui Let X be the strategy of the second pool's pool
members where they choose rebel if there exists i such
that Si, l = rebel n D and capitulate otherwise. Let Y the
strategy of the second pool's pool leader where it chooses
notcensor if there exists i such that Si, l = rebel n D and
censor otherwise. Let D be the event that ui 2: 2uti.
Theorem 6: Assuming that for all i u; and u~ is
increasing in x and for all i and x it holds u~ 2: 0
then the following are Nash equilibria: SPi = censor,
Sp, = Y and K n L n J n F where K is the event that
UP2 2: u::_z, where l = L i:S
i
,2= X Si, J is the event that
:::J i , j such that Si,2 = Sj,2 = X, L is the event that
there exists unique i such that Si I = rebel and F is the, P
event that (Si, 1 = rebel) =? ((u IP
! ~ uy:_,J n D).
VIII. DEPLOYMENT CONSIDERATIONS
Evaluation of our assumptions: (i) There exists
a player i for whom it holds ui > ut (Theorem 2):
this means that there exists a player who can increase
its utility if the new pool is registered. Actually we
are interested in preventing censoring new pools which
are competitive and can contribute to the health of
the system. (ii) Vi it holds u~ > 0 for x 2: Si + S P
(Theorem 2,3): this means that every member has
strictly positive utility when it stays in the old pool. Note
that we need this assumption to exclude equilibria where
the pool operator chooses censor and some members rebel
because even if they had chosen capitulate they would
have zero utility. (iii) up :s; u; (Theorem 3) : this means
that the pool operator has incentives to censor the new
pool if it can retain all its members. If this assumption
does not hold then the pool operator can increase its
utility by allowing the new pool to get registered; so
there is no need for the members to take action. (iv) For
all i and x it holds u~ 2: 0 (Theorem 4,6) : this means
that the pool members cannot have negative utility. This
is true when the cost of the pools is paid by the pool
operators as happens in Cardano [18]. (v) For all i u{:
and u~ is increasing in x (Theorem 4,6): this means that
the more members the pool retains the more profitable
it is for its members. Note that according to the reward
mechanism for stake pools proposed in [1], this holds for
the pools formed at an equilibrium.
Determining the length of a round and minimizing
the time a delegator needs to be online: In order to mini­
mize the time a delegator should be online in order not to
lose its rewards in case its pool is dissolved, we propose
the following: when a pool is selected to be dissolved,
then there is a period between its delegators are notified
and the pool is dissolved so that the delegators have
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
enough time to redelegate even if they are not constantly
online. Moreover the length of the regular intervals
(rounds) during which one pool is selected at random to
be dissolved should be selected so that each pool needs
in expectation enough time to be selected again. This
allows the delegators to be offline for long intervals. We
leave as future work a concrete suggestion for the length
of a round and the period between the notification and
the time the pool is dissolved. In addition, we leave as
future work the adaptation of our mechanism so that it
captures also mining games [26].
ACKNOWLEDGMENT
The first author was partially supported and the third
author was supported by H2020 project PRIVILEDGE
#780477.
REFERENCES
[1] L. Brunjes, A. Kiayias, E. Koutsoupias, and
A. Stouka, "Reward sharing schemes for stake
pools," in 2020 IEEE European Symposium on Security
and Privacy. Los Alamitos, CA, USA: IEEE
Computer Society, sep 2020, pp. 256-275. [On­
line]. Available: https://doLieeecomputersociety.org/10.
1109jEuroSP48549. 2020.00024
[2] Y. Kwon, J. Liu, M. Kim, D. Song, and Y. Kim,
"Impossibility of full decentralization in permissionless
blockchalns," CoRR, vol. abs/1905.0515S, 2019.
[Online]. Available: http://arxiv.orgjabsj1905.05158
[3] N. Arnosti and S. M. Weinberg, "Bltcoln: A natural
oligopoly," CaRR, vol. absj1811.08572, 2018. [Online].
Available: http://arxiv.orgjabsj1811.08572
[4] N. Leonardos, S. Leonardos, and G. Piliouras, "Oceanic
games: Centralization risks and incentives in blockchain
mining," CaRR, vol. absj1904.02368, 2019. [Online].
Available: http://arxiv.orgjabsj1904.02368
[5] S. Nakamoto, "Bltcoln: A peer-to-peer electronic cash
system." http://bitcoin.org/bitcoin.pdf, 200S.
[6] C. Dwork and M. Naor, "Prlclng via processing or
combatting junk mail," in CRYPTO, ser. Lecture Notes
in Computer Science, E. F. Brickell, Ed., vol. 740.
Springer, 1992, pp. 139-147.
[7] A. Back, "Hashcash," http://VITWW.cypherspace.org/
hashcash, 1997.
[S] S. Micali, ((ALGORAND: The efficient and democratic
ledger," 2016. [Online]. Available: http://arxiv.orgjabsj
1607.01341
[9] A. Kiayias, A. Russell, B. David, and R. Oliynykov,
"Ouroboros: A provably secure proof-of-stake blockchain
protocol," Cryptology ePrint Archive, Report 2016/SS9,
2016, http://eprint.iacr.orgj2016j889.
10
[10] B. David, P. Gazi, A. Kiayias, and A. Russell,
"Ouroboros praos: An adaptively-secure, semi­
synchronous proof-of-stake protocol," Cryptology
ePrint Archive, Report 2017/573, 2017,
http://eprint.iacr.org/2017/573. To appear at
EUROCRYPT 2018.
[11] V. Buterin and V. Griffith, "Casper the friendly finality
gadget," CaRR, vol. absj1710.09437, 2017. [Online].
Available: http://arxiv.orgjabsjl710.09437
[12] M. Rosenfeld, "Analysis of bitcoin pooled mining reward
systems," CoRR, vol. abs/1112.49S0, 2011. [Online].
Available: http://arxiv.orgjabsjl112.4980
[13] 1. Eyal, ((The miner's dilemma," CoRR, vol.
absj1411.7099, 2014. [Online]. Available: http:
j jarxiv.orgjabsj1411. 7099
[14] "Bltshares blockchaln," https://bitshareshub.io/
delegated- proof-of-stake- consensus[,
[15] "Tezos," https://tezos.comj.
[16] (( Eos," https:/ / eos.lc/eos-public-blockchainj.
[17] "Qtum," https:jjqtum.orgjen.
[18] "Iohk," https:jjiohk.io;'
[19] A. S. Aiyer, L. Alvisi, A. Clement, M. Dahlin, J. Martin,
and C. Porth, (( BAR fault tolerance for cooperative
services," in Proceedings of the 20th ACM Symposium
on Opemting Systems Principles 2005, SOSP 2005,
Brighton, UK, October 23-26, 2005, A. Herbert and
K. P. Birman, Eds. ACM, 2005, pp. 45-58. [Online].
Available: https:jjdoiorgj10.1145j109581O.1095816
[20] V. P. Crawford and J. Sobel, "Strategic information
transmission," Econometrica: Journal of the Economet­
ric Society, pp. 1431-1451, 19S2.
[21] D. Austen-Smith and J. S. Banks, "Cheap talk and
burned money," Journal of Economic Theory, vol. 91,
no. 1, pp. 1-16, 2000.
[22] J. Farrell and M. Rabin, "Cheap talk," Journal of Eco­
nomic perspectives, vol. 10, no. 3, pp. 103-11S, 1996.
[23] J. Farrell, "Cheap talk, coordination, and entry," The
RAND Journal of Economics, pp. 34-39, 19S7.
[24] R. Cooper, D. V. Dejong, R. Forsythe, and T. W. Ross,
"Communlcatlon in coordination games," The Quarterly
Journal of Economics, vol. 107, no. 2, pp. 739-771,1992.
[25] J. B. Van Huyck, R. C. Battalio, and R. O. Beil,
"Tacit coordination games, strategic uncertainty, and
coordination failure," The American Economic Review,
vol. SO, no. 1, pp. 234-24S, 1990.
[26] A. Kiayias, E. Koutsoupias, M. Kyropoulou, and
Y. Tselekounis, "Blockchain mining games," in
Proceedings of the 2016 ACM Conference on Economics
and Computation, EC '16, Maastricht, The Netherlands,
July 24-28, 2016, V. Conitzer, D. Bergemann, and
Y. Chen, Eds. ACM, 2016, pp. 365-382. [Online].
Available: http://doiacm.orgjlO.1145j2940716.2940773
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:54:19 UTC from IEEE Xplore.  Restrictions apply. 
		2022-08-24T20:49:56-0400
	Preflight Ticket Signature