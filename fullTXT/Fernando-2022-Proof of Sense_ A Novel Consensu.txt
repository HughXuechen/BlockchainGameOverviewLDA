Proof of Sense: A Novel Consensus Mechanism for Spectrum Misuse Detection
9206 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 12, DECEMBER 2022
Proof of Sense: A Novel Consensus Mechanism
for Spectrum Misuse Detection
Pramitha Fernando , Student Member, IEEE, Keshawa Dadallage, Tharindu Gamage ,
Chatura Seneviratne, Member, IEEE, Arjuna Madanayake , Member, IEEE,
and Madhusanka Liyanage , Senior Member, IEEE
Abstract—Optimal use of scarce radio spectrum is
essential in the proliferation of beyond 5G networks,
and promising blockchain technology offers various ben-
efits for the spectrum management. However, existing
blockchain-based solutions are expensive, nonoptimized,
and lack spectrum fraud detection. This article proposes
a novel consensus mechanism for a blockchain-based
dynamic spectrum access (DSA) system. The proposed
“Proof-of-Sense” consensus mechanism operates based
on spectrum sensing procedures rather than cryptographic
calculations. It is specially designed to address fraudu-
lent/unauthorized access to the spectrum by analyzing the
sensed spectrum data. The core of the consensus mecha-
nism is a cryptographic key sharing mechanism inspired by
Shamir’s secret sharing scheme. Moreover, the proposed
DSA system can enable different microservices, such as
automated spectrum auctions, payment and penalty han-
dling, and spectrum fraud detection. A proof of concept
based on experimental approaches coupled with Matlab
simulations is presented to analyze the performance of the
proposed consensus mechanism.
Index Terms—Blockchain, consensus algorithm, dy-
namic spectrum access (DSA), spectrum management,
spectrum misuse, spectrum sensing, smart contracts (SC).
Manuscript received 29 December 2021; revised 16 March 2022;
accepted 12 April 2022. Date of publication 25 April 2022; date of current
version 30 September 2022. This work was supported by the framework
of 6Genesis Flagship under Grant 318927. Paper no. TII-21-5844. (Cor-
responding author: Madhusanka Liyanage.)
Pramitha Fernando is with the Faculty of Engineering, Vrije
Universiteit Brussel, 1050 Brussels, Belgium (e-mail: Warnakula-
suriya.Pramitha.V.Fernando@vub.be).
Keshawa Dadallage, Tharindu Gamage, and Chatura Senevi-
ratne are with the Department of Electrical and Information
Engineering, University of Ruhuna, Galle 80000, Sri Lanka
(e-mail: keshawa.dadallage@eie.ruh.ac.lk; tharindu@eie.ruh.ac.lk;
chatu111@gmail.com).
Arjuna Madanayake is with the Department of Electrical and Com-
puter Engineering, Florida International University (FIU), Miami, FL
33199 USA (e-mail: amadanay@fiu.edu).
Madhusanka Liyanage is with the School of Computer Science, Uni-
versity College Dublin, D04V1W8 Dublin 4, Ireland, with the Centre
for Wireless Communications, University of Oulu, 90570 Oulu, Finland,
and also with the Department of Electrical and Information Engineer-
ing, University of Ruhuna, Galle 80000, Sri Lanka (e-mail: madhu-
sanka@ucd.ie).
Color versions of one or more figures in this article are available at
https://doi.org/10.1109/TII.2022.3169978.
Digital Object Identifier 10.1109/TII.2022.3169978
I. INTRODUCTION
THE electromagnetic radio spectrum is a valuable and scarce
natural resource in wireless communication. The popu-
larity of telecommunication services causes increased capacity
needs, leading to a rapid increase in bandwidth. Furthermore, bil-
lions of connected Internet of Things (IoT) devices and massive
growth of services in 5G/6G wireless networks fuel the need for
efficient, robust, and secure spectrum management mechanisms
to prevent interference and offer guaranteed network conditions.
In today’s wireless world, spectrum allocation is based on
the static assignment of the spectrum controlled by regulatory
bodies, for example, the Federal Communications Commission
(FCC) in the United States. Static assignments often lead to an
underutilized spectrum. Therefore, several dynamic spectrum
access (DSA) concepts have been proposed to mitigate these
issues in conventional spectrum allocation systems.
Cognitive radio (CR) is an emerging technology that relies on
DSA principles. CR proposes to manage the licensed spectrum
dynamically by allowing unlicensed secondary users (SU) to
opportunistically access the licensed spectrum that belongs to
primary users (PU) without causing harmful interferences [1].
Spectrum access system (SAS) is an example of a DSA system.
In SAS, an automated frequency coordinator entity manages the
spectrum sharing on a dynamic, as-needed basis across three
tiers: 1) incumbent access, 2) priority access, and 3) general
authorized access. The idea of SAS was sustained in 2015 when
the FCC adopted rules for shared commercial use of the 3.5-GHz
band (3550–3700 MHz) [2].
Co-primary spectrum sharing (CoPSS) is a dynamic spectrum
sharing method in which the regulator allocates a nonexclusive
band of the spectrum to several potential operators for shared
use [3]. Multiple operators jointly use the allocated spectrum
under rules and conditions (policies) laid down in a mutual
agreement between all the parties. The allocation of the 3.5-GHz
band for fixed broadband wireless access (BWA) in 2004/5 by
the German Regulator (REGTP) is an example for the CoPSS
model [4].
A. Limitations of Existing Dynamic Spectrum Sharing
Systems
Today, a trustworthy third party (i.e., a mediator) must man-
age the sharing management systems as the stakeholders may
likely not trust each other. Moreover, this process costs extra
This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 License. For more information, see
https://creativecommons.org/licenses/by-nc-nd/4.0/
https://orcid.org/0000-0001-6127-0571
https://orcid.org/0000-0002-9770-7795
https://orcid.org/0000-0003-3478-6702
https://orcid.org/0000-0003-4786-030X
mailto:Warnakulasuriya.Pramitha.V.Fernando@vub.be
mailto:Warnakulasuriya.Pramitha.V.Fernando@vub.be
mailto:keshawa.dadallage@eie.ruh.ac.lk
mailto:tharindu@eie.ruh.ac.lk
mailto:chatu111@gmail.com
mailto:amadanay@fiu.edu
mailto:madhusanka@ucd.ie
mailto:madhusanka@ucd.ie
https://doi.org/10.1109/TII.2022.3169978
FERNANDO et al.: PROOF OF SENSE: A NOVEL CONSENSUS MECHANISM FOR SPECTRUM MISUSE DETECTION 9207
money for the operators and indirectly for customers due to
third-party commissions and fees. Spectrum fraud detection
is essential to maintaining a reliable DSA system. Spectrum
fraud refers to unlawful access to licensed radio spectrum with
intentional or unintentional harmful interference to rightful
spectrum users by violating agreements. Spectrum violations
significantly affect the quality of service (QoS) in the PUs’ sys-
tems and ultimately discourage operators from using dynamic
spectrum sharing. However, the existing DSA approaches still
do not support the automatic detection of unauthorized spectrum
usage.
Detecting spectrum violations is always challenging because
deploying sensors for mobile network operators (MNOs) and
spectrum regulators is difficult and expensive. With demanding
requirements of highly localized services to meet the ultralow la-
tency, high-speed requirements of critical IoT services, such as in
healthcare [5], telecommunication service providers need to use
local network operators. With arising local operator concepts,
such as local 5G operators (L5GOs), local mobile network op-
erators (LMNOs), mobile virtual network operators (MVNOs),
there will be more spectrum tradings. Furthermore, DSA could
have potential applications for wireless sensors networks, IoT
data transmissions, device-to-device (D2D) communications.
Since most of the mentioned entities do not have an exclusive
right to the spectrum, they can rent frequency bands via the DSA
system to transmit data to another location. All these potential
use cases highlight the possibility of more frequent spectrum
violations and the need for a superior DSA system.
B. Role of Blockchain for Dynamic Spectrum Sharing
Blockchain is a time-stamped series of immutable data
records managed by a cluster of distributed computers not
owned by a single entity. Blockchain offers several advantages,
such as decentralization, transparency, and immutability, which
are useful in many applications, including dynamic spectrum
sharing [6]. Recently, blockchain and smart contracts (SC) have
been regarded as an emerging key enabler in the IoT ecosystem
to provide a trusty system [7]. In DSA, blockchain can primarily
store data securely with nonrepudiation and automate complex
activities, such as conducting automated, fast spectrum auctions
using SCs. SCs is a small self-executable application that runs
on a blockchain similar to microservices. When the conditions
defined in an SC are met, the code inside the contract will
be executed automatically. The introduction of a marketplace
to exchange the spectrum is the most intended use case of
blockchain in the DSA domain [8], [9]. SCs can automate the
auctioning functions and establish fair and dynamic agreements
between stakeholders in such spectrum exchange marketplaces.
Stakeholders can directly use the blockchain because of its inher-
ent properties that make the need for trust obsolete. As a result,
it vastly reduces the operation cost of the system. Moreover, the
lack of transparency can be solved as all the stakeholders can
check the history of spectrum usage and agreements from the
immutable ledger records.
Several blockchain-based DSA systems have been developed
in the literature. Weiss et al. in [6] proposed utilization of
blockchain for spectrum sharing and discussed its benefits and
limitations, such as massive energy expenditures, scalability,
governance, and interoperability are the major challenges in
blockchain systems. Maksymyuk et al. [10] discussed the
opportunities and challenges of the integration of blockchain
into 6G mobile networks in terms of spectrum and infrastructure
sharing. The authors highlighted tokenization of spectrum and
infrastructure and implementing SCs for service provisioning
with intelligent spectrum trading as key implementation aspects
of blockchain for 6G. Khan et al. in [11] proposed a secondary
spectrum market (SSM) with an automated pricing model using
a blockchain token called spectrum dollar. The authors claimed
that by applying the floor-and-trade rule, the system could reg-
ulate the token pricing based on the performance of the overall
trades in SSM, and this methodology minimized the monitor-
ing overhead. Huang et al. [12] proposed a network functions
virtualization (NFV) and blockchain-enabled 5G architecture
for ultra-eliable and low-latency (URLLC) communications.
The authors discussed a spectrum sharing mechanism built on
NFV, blockchain, and software-defined networking. In [13],
authors proposed an interference-based consensus mechanism
for blockchain-based spectrum management. It is based on com-
paring aggregated interference experienced by each node. The
node that suffers the most aggregated interference will obtain
the accounting right as a compensation.
In most of the existing blockchain-based DSA approaches,
multipurpose consensus mechanisms, such as proof of work
(PoW) and proof of stake (PoS) operate as a separate service.
Such consensus mechanisms-based DSA systems suffer from
excessive and additional energy utilization for the computation
heavy mining process. The lack of a suitable and tailored con-
sensus mechanism is the main limitation of existing blockchain-
based spectrum sharing systems. Moreover, none of the existing
blockchain or nonblockchain solutions offer automatic spectrum
fraud detection and mitigation.
C. Our Contribution and Outline
This article proposes a new consensus mechanism for a
blockchain-based DSA system to mitigate the limitations in
existing DSA systems. The new “Proof-of-Sense” consensus
mechanism can eliminate the additional cost of unnecessary
computational overhead and motivates the miner to collect
helpful spectrum sensing information for spectrum management
and fraud detection. This article explains the operation of the
Proof-of-Sense consensus mechanism, such as cryptographic
key sharing mechanism, the key recovery process, block gener-
ation and verification process, and collection of spectrum data.
Moreover, the performance of the proposed solution is analyzed
using MATLAB simulations and hardware implementation. We
compare the performance of the new consensus mechanism with
existing schemes.
The rest of this article is organized as follows. Section II
introduces the proposed Proof-of-Sense consensus mechanism
and the DSA system. Section III describes the testbed and simu-
lations used to evaluate performance of the proposed mechanism
and it further discuss the simulation results. Section IV compares
9208 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 12, DECEMBER 2022
the proposed system with related works. Finally, Section V
concludes this article.
II. OPERATION OF THE PROPOSED PROOF-OF-SENSE
CONSENSUS MECHANISM
This section presents the design of the proposed consensus
mechanism, which combines DSA and spectrum sensing with
blockchain to create a new paradigm of spectrum management.
A. Stakeholders of the Proposed System
There are several stakeholders in the DSA ecosystem, such
as MNOs, SUs, spectrum regulators, and third-party spectrum
sensors. Note that not all the stakeholders have the same func-
tionalities/responsibilities in the network. MNOs are the entities
that lease spectrum chunks to the SUs. An MNO can also be an
SU that buys spectrum from another MNO. A spectrum regu-
lator is usually a government entity that governs the spectrum
regulation within the country. The regulator sells the licenses for
the spectrum to the MNOs, which give exclusive rights to use
the particular spectrum. The spectrum regulator also can lease
spectrum chunks for SUs. However, the most crucial role of the
regulator is to monitor the spectrum transactions that happen in
the network via the blockchain. Furthermore, the regulator can
have higher authority than other nodes when imposing penalty
fees after detecting a spectrum violation as it represents an
independent government body. Finally, the third-party spectrum
sensors are non-MNO individual miners in the network. They do
not sell, lease, or buy spectrum and their functionality is limited
to collecting spectrum data and analyzing them.
B. Spectrum Sensing Process
The proposed DSA system contains the spectrum sensors
deployed by MNOs and other third-party miners. These spec-
trum sensors continuously sense the radio spectrum and capture
whitespace information. This spectrum sensing process is mo-
tivated by a reward scheme, and the sensors act as the miners of
the blockchain network.
The “regulator” transmits a secret key called random cryp-
tographic key (RCK) in a randomly selected frequency band.
All the sensors try to capture this key by sensing the spectrum.
The first miner who successfully recovers the RCK can create
the next block, receiving the mining reward. While continuously
monitoring the spectrum, the sensors also collect spectrum us-
age information. The system uses such information to identify
spectrum violations (i.e., fraud). Miners can obtain additional
rewards for their sensed data if fraud is detected based on that.
Thus, the system encourages spectrum sensors to collect and
store information, such as transmitter characteristics, the geo-
graphical location of the transmission, timestamps, frequency
ranges, transmit power, and modulation rates [14]. Moreover,
sensors can capture some upper layer details, such as protocol,
wavelength, and waveform standard (i.e., 4G/5G).
C. Deployment of the Blockchain Nodes
In the proposed system, the “regulator” is the entity that
transmits the session key in a randomly selected frequency band,
which may be narrow or wide, inside the total licensed spectrum
without interfering with the regular operation. All the mining
nodes (MNO and non-MNO) must have radio-frequency (RF)
spectrum sensors with wideband, high-sensitivity, multibeam
receivers, and additional capabilities, such as waveform detec-
tion, running AI/ML algorithms and modulation recognition
to perform the mining function of the proposed blockchain
system. Since specific hardware resources are needed from the
participating spectrum miners, it is not practical to deploy the
proposed DSA system as a public blockchain network. There-
fore, we propose to use a private blockchain for the proposed
DSA system.
D. Operation of the Proposed DSA System
Fig. 1 presents the high-level deployment view of the pro-
posed architecture. Here, the spectrum sensing and block gen-
eration process can be explained in four steps.
Step 1: Regulator transmits the RCK and an encrypted mes-
sage in a randomly selected frequency band selected
within the range of interest.
Step 2: Miners scan the spectrum and try to capture the
transmitted key by analyzing the sensed data.
Step 3: The miner who captures the RCK creates a new block
and multicast it to the network.
Step 4: Other miners verify the block and add it to the
blockchain. The winner miner is entitled to any block
rewards. The miner adds a pointer (e.g., IPFS hash)
to its sensed data stored in off-chain storage in the
block.
E. Proof of Sense: Novel Consensus Algorithm
Based on the literature, we noticed that the consensus algo-
rithms, such as PoW, are based on cryptographic hashing func-
tions (Ex: Bitcoin cryptocurrency uses an SHA-256 hashing-
based puzzle), which are costly to operate in DSA systems. There
are also growing concerns about the impact of energy usage of
blockchains on the global carbon footprint. On the other hand,
consensus mechanisms like PoS need premined coins or start
with PoW. Since we expect to trade only using spectrum, and
the primary purpose is to develop a mechanism to detect fraud,
none of the existing mechanisms is cost-effective and efficient.
Therefore, we propose a new consensus mechanism based on
spectrum sensing (i.e., Proof of Sense). In this mechanism,
nodes have to perform a challenging process of precise spectrum
sensing across many directions across a wide band to recover
the RCK. RCK uses a symmetric key to encrypt the regulator’s
message and acts as a session key. A session is the time duration
between the generation of two adjacent blocks. Once a particular
session is expired, the corresponding session key gets invalid.
The process of creating a new block dictates the expiration time
of the session key. Once the network verifies the block, the
regulator transmits a new message encrypted using a new RCK.
Simultaneously, the regulator transmits an encrypted mes-
sage in a known channel. Therefore, every node can capture
it. The regulator’s encrypted message contains a “CODE,” a
sequence number, and a hash-based message authentication
code (HMAC). Proof of Sense uses this encrypted message for
FERNANDO et al.: PROOF OF SENSE: A NOVEL CONSENSUS MECHANISM FOR SPECTRUM MISUSE DETECTION 9209
Fig. 1. High-level view of the proposed architecture.
Fig. 2. Workflow of the proposed Proof of Sense.
the verification process. CODE is the hash of the RCK signed
with the regulator’s private key. Since all the nodes have the
regulator’s public key, nodes can verify the ownership. Along
with a CODE, a sequence number, and an HMAC are sent to
avoid reply attacks and protect the content’s integrity. The miners
scan the spectrum to capture the transmitted encrypted message
and the RCK. Whoever captures the RCK first becomes the
winner and can mine the next block. The nodes can maintain
more than one spectrum sensor to increase the probability of
finding the RCK. Fig. 2 further describes the workflow of the
proposed Proof-of-Sense algorithm.
As an aside, note how, unlike hashing-based PoW, the pro-
posed spectrum sensing Proof of Sense achieves the additional
useful function of detecting whitespace, while powering the
blockchain, thereby better justifying its energy usage for ap-
plications beyond the distribution of trust.
1) Cryptographic Key Sharing: For the RCK sharing process,
we propose using a key sharing scheme presented in [15], com-
monly known as Shamir’s secret-sharing scheme. Shamir intro-
duced the concept of secret sharing through threshold schemes,
and his model is based on polynomial interpolation: given a set
of t points (x1, y1),..., (xt, yt), where the xis are all distinct, in a
2-D plane, there is one and only one polynomial f(x) of degree
t− 1 such that f(xi) = yi for all i [15]. To divide the data K
(secret) into pieces Ki we can use a random polynomial f(x)
of degree t− 1 in which a0 = K and evaluate
K1 = f(1), . . .,Ki = f(i), . . .,Kn = f(n) (1)
f(x) = a0 + a1x+ a2x
2 + · · ·+ at−1x
t−1. (2)
If some node has t shares (i, f(i)), the node can reconstruct
the f(x) using Lagrange polynomial interpolation in (3), and
finda0, which is the secret. However, since we are only interested
ina0, there is a computationally efficient approach to calculatea0
without reconstructing f(x). We can substitute x = 0 in (3) and
get (4). Although the original method uses integer arithmetic, the
security can further be improved by using finite field arithmetic
(a field of size p ∈ P )
f(x) =
t−1∑
j=0
yi
t−1∏
m=0
m �=j
x− xm
xj − xm
(3)
f(0) =
t−1∑
j=0
yi
t−1∏
m=0
m �=j
xm
xm − xj
. (4)
Therefore, a t-out-of-n threshold scheme is a method in which
n pieces of information, known as shares, in a secret key K are
9210 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 12, DECEMBER 2022
Algorithm 1: Generating Transmission Information.
Input: Secret key (a0), Total shares (n), Threshold (t)
Output: n information pieces, Encrypted message
1: CODE ← hash of the secret key (a0)
2: Generate the message with CODE, Sequence no. and
HMAC
3: Encrypt the message using secret key
4: Generate t− 1 random integer numbers
5: for i = 1 to t− 1 do
6: ai ← random integer
7: end for
8: Generate the polynomial f(x)
9: f(x) = a0 + a1x+ a2x
2 + · · ·+ at−1x
t−1
10: Generate n points κx−1 = (x, f(x)) from the
polynomial
11: for j = 0 to n− 1 do
12: κj ← (xj , f(xj))
13: end for
14: Transmit encrypted message in a known frequency
15: Transmit n key parts (κ0, κ1, . . ., κn−1) in random n
frequency bands within a agreed range
Algorithm 2: Key Reconstruction.
Input: t information pieces, Encrypted message
Output: Reconstructed key
1: Received: (x0, y0), (x1, y1), . . ., (xt, yt)
2: p = 1, s = 0
3: for j = 0 to t− 1 do
4: for m = 0 to t− 1 do
5: if j! = m then
6: p = p ∗ (xm)/(xm − xj)
7: end if
8: end for
9: s = s+ (p ∗ yj), p = 1
10: end for
11: Secret key (a0)← s
distributed so that the secret can be reconstructed from any t or
more shares and otherwise not. The parameter t is known as the
threshold of the scheme.
We use Shamir’s concept to control the capturing difficulty of
the key. The regulator transmits the n pieces of information of
the session key (RCK) in multiple frequency bands, and miners
need to collect t pieces to recover the session key. Algorithm 1
shows the pseudo code for generating transmission information.
The recovery difficulty of the key depends on many variables,
such as the key length, shares, threshold, transmitter and receiver
characteristics, and wireless channel characteristics. Once the
regulator transmits the key, it waits for a specific interval and then
retransmits it until at least one node recovers the key. Since the
regulator is also a miner node in the blockchain network, it will
know when a node successfully recovers the key via blockchain.
Algorithm 2 shows the pseudo code for reconstructing the RCK
using t pieces of information.
TABLE I
EFFECT OF DIFFERENT PARAMETERS ON KEY RECOVERY DIFFICULTY
In a consensus mechanism, there should be a method to
control the block time. In Proof of Sense, the recovery of RCK
is directly impacting the block time. In the proposed system, the
RCK can be embedded with or without a degree of obfuscation,
using a multitude of modulation and coding schemes, across
multiple bandwidths with parameters depend on the level of
spectrum mining difficulty desired across the network. We quan-
titatively analyze the impact of some parameters on key recovery
difficulty in Section III-B. Table I provides an estimation of the
impact of several parameters on recovery difficulty.
The effect of RCK on recovery difficulty depends on three
main features, namely, key length, total shares (n), and threshold
(t). When we increase the size of the key, the receiver needs
to recover additional data bits. Also, when we increase the t
(keeping n and key length as constants), the receiver needs
to recover additional key shares. Therefore, recovery difficulty
increases with both key length and threshold. If we increase n
(keeping t and key length as constants), the receiver needs fewer
data bits to reconstruct the key. Therefore, recovery difficulty
decreases with n. The effect of the wireless channel is mainly
based on different types of losses and interference in the channel.
All these qualities of wireless channels cause losses in data
transmission [16], and, therefore, recovery difficulty increases
with free space losses, fading, diffraction, absorption, reflection,
atmospheric losses, and interferences. We investigate the effect
of some of these features in Section III-B3. Finally, transmit-
ter and receiver characteristics, such as modulation, coupling
losses, and error correction mechanisms also affect the recovery
difficulty. Coupling losses increase the recovery difficulty as
they cause losses in the data being transmitted or received.
Error correction mechanisms can improve the system’s ability
to self-correct error bits without retransmissions, decreasing
recovery difficulty. The effect of modulation is dependent on
the modulation technique. In Section III-B2, we investigate the
effect of two modulation schemes on the recovery probability.
The system can adjust some of these parameters to complicate
the recovery process sufficiently, and at the same time, it is not
computationally challenging.
2) Block Generation: As per our consensus algorithm, the
miner that recovers the RCK first becomes the winning node.
The winning node can create the next block of the blockchain and
FERNANDO et al.: PROOF OF SENSE: A NOVEL CONSENSUS MECHANISM FOR SPECTRUM MISUSE DETECTION 9211
Algorithm 3: Verification.
Input: Reconstructed Key
Output: True or False
1: Decrypt the message with the prover’s key
2: K ← CODE inside the message
3: H ← hash of the prover’s key
4: if K == H then
5: True �Key is verified
6: else
7: False �Key is not verified
8: end if
earn a reward for that. While creating the block, the miner put the
spectrum trade data and sensed data into the new block. Instead
of storing sensed data into the blockchain, the node stores data in
off-chain storage and stores a pointer to the data in the block. The
block header contains the hash values, version, timestamp, and
CODE (from the decrypted message). The proposed structure
of a block is presented in Fig. 2. Then, the node broadcasts the
newly mined block to the network for verification.
3) Verification: When a miner receives a new block from the
winner node, it initiates the verification process. The miner first
verifies the cryptographic key. Since every other node in the
network has the regulator’s encrypted message, they can decrypt
the message with the winner node’s key and verify the solution.
The hash of RCK sent by the winner node should be equivalent
to the hash of RCK in the encrypted message (CODE) sent by
the regulator. Since the hash of RCK in the encrypted message
is signed by the regulator, the winner node cannot claim victory
with a fake RCK. This proposed process is cost-effective as
there are no computationally challenging puzzles to solve. In
addition, sensing measurements in the block must match up with
the other miner nodes’ measurements. This process is equivalent
to transaction validation, and it ensures the integrity of the sensed
data. Only the verified blocks will be added to the blockchain.
Algorithm 3 shows the pseudo code of verification.
F. Database for Spectrum Sensing Data
Apart from the keys, spectrum sensors collect an enormous
amount of other spectrum data in the key capturing process.
Nodes store these spectrum data locally until they can create the
next block. Once a node becomes the winner, the node adds a
pointer for these data in the generated block. The sensed data is
stored off-chain [e.g., InterPlanetary file system (IPFS)] to avoid
the excessive growth of the chain
G. Spectrum Fraud Detection
The fraud detection mechanism focuses on detecting the
unauthorized (i.e., fraudulent) use of the licensed spectrum.
Miners in the network store sensed data in the blockchain during
block generation. The system analyzes this data to identify spec-
trum violations using yet-to-be-determined machine learning
(ML) algorithms. The system can use SCs to automatically
trigger fraud detection and ensure the integrity of used ML
algorithms. The fraud detection system checks both MNO level
sharing agreement and spectrum regulation on restricted spec-
trum bands. Thus, the proposed DSA system with Proof of Sense
can potentially detect unauthorized use of the restricted spectrum
as well. Guaranteeing the accuracy and trustworthiness of the
sensed data is one of the major challenges in the system. We
propose to achieve this by cross-validating results with nearby
sensors. The system will only take action against the discovered
frauds if discoveries can be verified with cross-validation. In the
literature, there are several approaches to ensure the efficiency,
trustworthiness, and security of IoT/WSN data collection [17].
This article does not intend to investigate such aspects of data
collection.
Identifying the transmitter ID is very important as authorities
can use it to trace fraud into the origin. However, it is challenging
to capture the transmitter’s ID by monitoring the spectrum data
when the transmitter does not broadcast its ID. However, it
is possible to use radio fingerprint-based identification mech-
anisms [18], [19] to identify the transmitter’s ID. Due to the
electronic level imperfections of transmitters semiconductor
electronics, even though they are made of nominally identical
components, there are differences in their radio fingerprints that
have been detected using ML methods. The system can possibly
use such radio fingerprints based identification mechanisms on
identifying the devices [18], [19]. However, it is out of the scope
of this article, and it is left for future work.
H. Patently Payment and Rewards for Miner
Once the system identifies a spectrum violation, the particular
transmitter will be fined based on predefined criteria according
to the degree of a breach. Then, the system pays compensation
to the spectrum owner, whose spectrum was accessed in an
unauthorized manner. In addition, the system will use a part of
the penalty to pay the block generation rewards and pay for the
miners who contributed (i.e., by providing sensing information)
to detect that particular infringement. The system can automate
the compensation process by using SCs. When the number of
frauds decreases, the available revenue to maintain the system
will also decrease. Thus, it is necessary to implement a subscrip-
tion fee for MNOs, or the regulators should pay a fee to maintain
the system. The penalties may also scale, perhaps exponentially,
with the severity of the fraud.
I. Role of Smart Contracts
Overall, SCs handle all payment instances of the proposed
system, such as subscription fees, penalties, compensation, and
block rewards. Apart from financial aspects, SCs can conduct
spectrum auctions, sublet spectrum, analyze stored spectrum
data, detect infringements, rate users, and other functionalities.
Because they inherit blockchain properties, SCs add autonomy,
trust, safety, and efficiency to the network.
III. PERFORMANCE ANALYSIS
This section presents the performance evaluation of the Proof-
of-Sense consensus mechanism. First, we measure the energy
9212 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 12, DECEMBER 2022
TABLE II
ENERGY CONSUMPTION IN DIFFERENT PHASES OF PROOF OF SENSE FOR
DIFFERENT THRESHOLDS
TABLE III
ENERGY CONSUMPTION COMPARISON OF DIFFERENT CONSENSUS
MECHANISMS
usage of the proposed consensus mechanism using a testbed
and compare it with some of the existing consensus mecha-
nisms. Then, we use MATLAB to evaluate the difficulty of
reconstructing the key under different characteristics of the key
sharing scheme and the wireless channel. Finally, we calculate
the average block time under different noise conditions using
MATLAB.
A. Energy Usage Comparison
We evaluate the performance of the proposed system using the
experimental testbed comprised of two Raspberry Pi 3 modules
connected with nRF24L01 transceivers, two ESP32 Microcon-
troller Units (MCUs), and two bidirectional current/power mon-
itor modules (INA226). The Raspberry Pi 3 module performed
the computational tasks at both transmitter’s and receiver’s end.
The nRF24L01 is a transceiver with a maximum transmission
distance of 1 km and operates in the 2.4–2.5-GHz band. During
the experiment, the air data rate was set to 250 kbps. The INA226
bidirectional current/power monitor IC is a current shunt and
power monitor with an I2C interface.
Table II presents the power consumption of the processing unit
(i.e., Raspberry Pi 3 module) for different steps of the Proof-of-
Sense mechanism. In the experiment, we set the total shares as
six (n = 6) and the threshold as three (t = 4) and four (t = 4).
The values in Table II are averaged by taking 100 samples. The
spectrum scanning and key capturing consume the most energy
in Proof of Sense as it takes more time to sweep the interested
frequency range. During this time transceiver is listening to the
spectrum, consuming a considerable amount of energy. When
t = 4, it consumes more energy than t = 3 as it needs to scan
for one additional key share to reconstruct the key. On the other
hand, the verification process consumes the lowest energy as it
simply compares the hash values. The energy consumption for
this step is equal in both t = 3 and t = 4 as the hash values of
both cases are equal in size. In key generation and reconstruction
steps, the t = 4 case consumes slightly higher energy due to the
involvement of one additional key share.
Table III shows the power consumption of different consensus
mechanisms. It is important to note that it is not the energy
for a fully operational blockchain network. We measure only
the energy of a single node to run the underlying consensus
algorithm. The results presented in the Table III are averaged by
taking 100 samples. For PoW, we use SHA-256 as the hashing
algorithm with a 32-bit nonce. The difficulty of the network
is set to six zeros. The testbed measures the time and energy
needed for the processing unit to calculate the target hash value.
For PoS, we take the amount of sensed data as the stake instead
of a cryptocurrency asset. The more data a node captured, the
higher the chance of creating the next block. However, in such
an approach, we need to develop sophisticated mechanisms to
verify the credibility of the sensed data, which is out of the scope
of this article. We also consider the coin age in selecting the
winner node, apart from the stake weight. The testbed measures
the time and energy needed to select the node with the highest
coin age * stake weight value. For the proposed Proof-of-Sense
mechanism, we set n = 6 and t = 4 for these measurements.
The testbed measures the time and energy needed to capture the
key parts, reconstruct the key and verify it.
According to Table III, PoW needs the highest energy to
achieve the consensus because it involves solving hash puzzles
that consume many computational resources. On the other hand,
PoS has the lowest execution time because of the algorithm’s
simplicity. In the testbed, we consider the time needed to select
the node with the highest coin age * stake weight value as
the execution time. Note that in a real PoS-based blockchain
network, several other parameters affect the final block time of
the network. The energy of PoS is the summation of algorithm
execution energy and energy to create the sensed data-based
stake. Moreover, even we implement a DSA system with PoW
or PoS, the system still consumes additional energy for spectrum
sensors. With Proof of Sense, we can get an additional advan-
tage of using the same infrastructure (i.e., spectrum sensors) to
support the blockchain.
B. Difficulty Analysis of Consensus Algorithm
The performance of the proposed Proof-of-Sense consensus
algorithm depends on the RCK recovery probability, which is
calculated by counting the number of successful RCK recoveries
against the total number of RCK transmissions. The RCK recov-
ery probability heavily relies on the factors given in Table I. Here,
we use MATLAB to investigate the impacts of these factors on
the RCK recovery probability.
In our simulations, we use Shamir’s secret sharing
scheme [15] to generate a total number of six shares (i.e., n = 6)
for RCK in key distribution and to recover RCK from t number
of shares (threshold). A 16-bits binary code represents each of
these shares. Therefore, we need to transmit 96 information
bits corresponding to an RCK. For this purpose, we adopt an
orthogonal frequency division multiplexingm (OFDM) trans-
mission scheme having 64 subcarriers. Here, we use 48 data
subcarriers (out of 64 subcarriers) to transmit binary phase shift
keying (BPSK)/quadrature phase shift keying (QPSK) symbols
over different channel conditions. Fig. 3 illustrates the effects
of threshold (t), modulation, and channel conditions on the key
recovery probability. The results are averaged over 1000 random
realization of AWGN, Rayleigh, and Rician channels.
FERNANDO et al.: PROOF OF SENSE: A NOVEL CONSENSUS MECHANISM FOR SPECTRUM MISUSE DETECTION 9213
Fig. 3. Key recovery probability under different conditions.
1) Effects of Threshold: We observe that the RCK recovery
probability increases at lower t values for a given signal to noise
ratio (Eb/N0) as it is required a lesser number of shares for the
recovery. When we increase the threshold, the receivers need to
accurately collect more shares of the key at the given Eb/N0.
Although this can delay the successful key recovery, the security
of the RCK can greatly increase. Further research should be
conducted to determine the best n (shares) and t (threshold)
values to optimize recovery time and security.
2) Effects of Modulation: The results in Fig. 3 show that
the OFDM system with QPSK modulation has a higher RCK
recovery probability in both t = 2 and t = 3 cases. It is known
that QPSK modulation encodes two bits per symbol and uses
gray coding to reduce the bit error rate, while BPSK only encodes
a single bit per symbol. Therefore, it is possible to assign all
96 information bits corresponding to all six RCK shares to one
OFDM symbol when QPSK modulation is used. Hence, there is a
better chance to correctly recover the required number of shares
from all six shares in one OFDM symbol duration. However,
we can assign only three shares (48 information bits) to one
OFDM symbol when we use BPSK modulation. This reduces
the recovery probability as it requires to correctly recover the
required number of shares from three shares during one OFDM
symbol duration. Therefore, there is a clear effect from the
modulation for the RCK recovery probability.
3) Effects of Wireless Channel: When considering the effect
of the wireless channel, the recovery probability is much higher
when we only use AWGN channel conditions. This occurs due
to the absence of the fading effects. Then, we consider the RCK
recovery probability under the fading conditions by considering
Rician and Rayleigh fading channel models. Here, we consider
the Rician model with a Rician K-factor of 0.6. Since there is
a strong dominant component (e.g., line of sight, ground re-
flection) in Rician fading, it shows a higher recovery probability
than Rayleigh fading. Rayleigh fading is a special case of Rician
fading where there is no line-of-sight (LOS) signal. Due to the
absence of a LOS signal, the RCK recovery probability is lower
Fig. 4. End-to-end delay for different Eb/N0 values.
under Rayleigh fading channel conditions. We also consider
the effects of threshold t (t = 2 and t = 3) for these channel
conditions, and it is clear that in every scenario, the more shares
required, the lower the recovery probability. It is important to
mention that we have not used any error correction mechanism in
simulations, which will further increase the recovery probability.
C. End-to-End Delay
We implement the proposed system in software by using
Ganache (an Ethereum blockchain), Python, and Matlab. We use
Ganache to upload the dummy sensed data to the IPFS network
and measure the time for that process, Python to construct a
small blockchain network with ten mining nodes to measure
the time for verification process, and MATLAB to simluate
the key transmission and receiving process. In particular, we
consider OFDM-based QPSK symbol transmission scheme un-
der Rayleigh fading channel conditions for RCK distribution.
Here, the RCK is retransmitted until a successful RCK recovery
occurs at a miner node. We take the OFDM symbol duration as
3.2 μs (IEEE 802.11) [20], and we set the interval between two
successive RCK transmissions to 200 ms. After miners verify
the key, winner node uploads the sensory data to the off-chain
IPFS network and hash it. In our simulations, we assume the
sensory data collection rate as 0.5 MB/s to create dummy data.
The End-to-End (E2E) delay of the system is the summation
of key recovery time, time to get the IPFS hash, and verification
time. Fig. 4 depicts the E2E delay variations for different Eb/N0
values. Here, we carry out 25 tests for each Eb/N0. The dotted
lines in Fig. 4 show the average E2E delay values. Since the
key recovery time varies according to the wireless channel
conditions, the E2E delay varies at different Eb/N0 values.
In particular, the average E2E delay is 1.99 s when Eb/N0 is
8 dB, and it is the smallest among all others due to the low
noise level. When Eb/N0 is 4, 2, and 0 dB, the average E2E
delays are increased to 2.12, 2.72, and 4.13 s, respectively. This
shows exponential growth in the E2E delay with the decrement
of Eb/N0 values. The variances of the E2E delays for four
cases are 0.07s2, 0.22s2, 0.67s2 and 4.95s2, respectively, and,
therefore, we can conclude that the inconsistency of the E2E
delay increases with the decrement of Eb/N0 value. It is further
9214 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 12, DECEMBER 2022
TABLE IV
FEATURES COMPARISON WITH KEY RELATED WORKS
important to note that the time it takes to get the IPFS hash (i.e.,
a pointer to off-chain sensed data) also increases with the RCK
recovery time because it collects more data with time.
IV. DISCUSSION
A. Feature Comparison
Table IV summarizes a feature comparison between existing
blockchain-based and nonblockchain-based spectrum sharing
systems with the proposed system. (Here, L → Low, M →
Medium, H→ High, -→ Not Relevant/Not Available)
Most blockchain-based systems outrun the nonblockchain
system by providing the features like spectrum sharing mar-
ketplace and automated services. Blockchain-based systems
can enable these features using SCs. Still, most blockchain-
based systems suffer from limitations, such as high computa-
tional complexity and the extra cost of mining. The proposed
DSA system eliminates some of these limitations in existing
blockchain-based systems by introducing the specially tailored
Proof-of-Sense consensus mechanism.
B. Complexity and Performance Comparison
The consensus mechanism plays a vital role in determining
the performance of a blockchain, and security bound, scalability,
transaction throughput, and latency are four of the most essen-
tial performance metrics [21]. Table V presents a performance
comparison of blockchain consensus mechanisms considering a
wireless blockchain network [21]. Here,N is the total nodes, f is
malicious nodes, and n is the total key shares in Shamir’s secret
sharing scheme. The value n is far less the N . Therefore, we
can assume that the scalability of the network is high because
the effect of n is minimal in both communication complexity
and spectrum requirement. The security bound of the proposed
consensus mechanism is as same as in the PoW.
1) Security Bound: Security bound can be defined as the
maximum number of faulty nodes tolerated by the consensus
mechanism. In general, the security bound for PoW is considered
as 2f + 1. Therefore, a blockchain network implemented with
PoW will compromise if a single entity possesses more than 50%
of the resources in the network. The proposed blockchain with
Proof of Sense achieves consensus if more than 50% of the nodes
verify the RCK. Therefore, Proof of Sense has the same security
bound as PoW. However, voting-based consensus mechanisms,
such as practical Byzantine fault tolerance (PBFT) and Raft
define the number of faulty nodes as inactive or malicious
nodes in the network [21]. These nodes send misinformation
to jeopardize the healthy operation of the network. Typically,
PBFT has a security bound of 3f + 1 (allowing 1/3 of faculty
nodes), and Raft has 2f + 1.
2) Scalability: Scalability indicates the ability of the con-
sensus mechanism to handle the increasing number of nodes.
In theory, PoW has excellent scalability and can hold as many
users within the network. However, it is impossible to keep as
many users considering the spectrum requirements in a wireless
blockchain network. On the other hand, voting-based mecha-
nisms heavily rely on inter-node communications. Therefore,
both PBFT and Raft have poor scalability. The Proof-of-Sense
mechanism has higher scalability because the number of total
shares (n) is independent of the number of nodes in the network.
3) Transaction Throughput: Transaction throughput indi-
cates the transaction per second (TPS) in the system. PoW has
a low throughput due to its computationally hard hash puzzles.
Proof of Sense is not computationally hard as in PoW and is
based on spectrum sensing. However, the verification process
takes some extra time. Therefore, we can conclude it has a
medium throughput. On the other hand, voting-based mecha-
nisms like PBFT and Raft have a greater throughput (in the
range of 100 to 1000 TPS) [21].
4) Communication Complexity: The communication com-
plexity refers to the number of communications between trans-
mitter and receiver nodes. Table V presents the communication
complexity of different consensus mechanisms for a wireless
blockchain network. PBFT requires 2N 2 +N communications
and it is the highest communication complexity shown in the
Table V as all nodes have to communicate to all other nodes in
all three stages (preprepare, prepare, and commit). In Raft, the
communication complexity 2N represents the communication
between the head and follower nodes (uplink) and again from
follower nodes and head (uplink). In PoW, 2N comes from
broadcasting client request to all other nodes and broadcasting
the winner miner’s hash in the verification process. In Proof
of Sense, N × n term represents the key shares received by
the nodes, and 2N represents the encrypted message and the
winner’s key broadcast message. Therefore, proposed consensus
mechanism has a communication complexity of N(n+ 2).
5) Spectrum Requirement: The spectrum requirement of a
wireless blockchain network refers to the spectrum require-
ment for communication in the network. While communica-
tion complexity is made of the number of receiver processes,
spectrum requirement is the number of transmitter processes in
the wireless blockchain network [21]. Since PoW consists of
two broadcast messages (broadcast transactions and broadcast
hash result of the winner node), and it is independent of the
nodes in the network, PoW has a constant spectrum requirement.
Proof of Sense also has a spectrum requirement independent
of the total nodes in the network. The total number of shares
(n) is a characteristic of the RCK and does not relate to the
total nodes in the network. In PBFT, 2N spectrum resources are
needed to communicate among nodes in prepare and commit
stages. In the preprepare stage, the leader node broadcasts a
FERNANDO et al.: PROOF OF SENSE: A NOVEL CONSENSUS MECHANISM FOR SPECTRUM MISUSE DETECTION 9215
TABLE V
PERFORMANCE COMPARISON WITH COMMONLY USED CONSENSUS MECHANISMS [21]
Note: f = Number of faulty nodes, N = Total nodes, n = Total key shares.
message to the rest of the nodes. Therefore, PBFT has a total of
2N + 1 spectrum requirement. For Raft, spectrum resources are
required for the broadcast message in downlink communication
from head to followers and the uplink communication from
each follower node to the head. Therefore, Raft has an N + 1
spectrum requirement.
V. CONCLUSION
This article presented Proof of Sense, a new consensus mech-
anism for a blockchain-based DSA system. Proof-of-Sense con-
sensus mechanisms can address the efficiency issues in existing
consensus mechanisms and detect unauthorized spectrum access
frauds. The proposed mechanism is built based on a wireless
spectrum sensing process rather than resource-consuming math-
ematical puzzles. Furthermore, we have adopted Shamir’s secret
sharing scheme to be used in the key sharing process of the
proposed system. The performance of the proposed system is
examined using thorough simulations and implementations. The
results verify that the key recovery probability, which corre-
sponds to the block time of the Proof-of-Sense mechanism, can
be changed by modifying the wireless channel and transmitter
and receiver characteristics. The results verify that the proposed
mechanism is more efficient in terms of energy consumption.
Additionally, the proposed mechanism provides a more DSA
friendly consensus mechanism, while collecting spectrum data
to detect spectrum violations. The scope of this article is limited
only to the evaluation of the proposed consensus mechanism.
Developing a DSA system with the proposed mechanism with
features, such as analyzing the collected sensed data and de-
veloping required microservices (e.g., spectrum auctions, pay-
ments) based on SCs is left for future work.
REFERENCES
[1] S. K. Jayaweera and T. Li, “Dynamic spectrum leasing in cognitive radio
networks via primary-secondary user power control games,” IEEE Trans.
Wireless Commun., vol. 8, no. 6, pp. 3300–3310, Jun. 2009.
[2] M. D. Mueck, S. Srikanteswara, and B. Badic, “Spectrum Sharing: Li-
censed shared access (LSA) and spectrum access system (SAS),” Intel,
Santa Clara, CA, USA, Intel White Paper, 2015.
[3] B. Cho, K. Koufos, R. Jantti, and S. Kim, “Co-primary spectrum sharing
for inter-operator device-to-device communication,” IEEE J. Sel. Areas
Commun., vol. 35, no. 1, pp. 91–105, Jan. 2017.
[4] Y. Teng, Y. Wang, and K. Horneman, “Co-primary spectrum sharing for
denser networks in local area,” in Proc. 9th Int. Conf. Cogn. Radio Oriented
Wireless Netw. Commun., 2014, pp. 20–124.
[5] T. Wang, L. Qiu, A. K. Sangaiah, A. Liu, M. Z. A. Bhuiyan, and
Y. Ma, “Edge-computing-based trustworthy data collection model in the
Internet of Things,” IEEE Internet Things J., vol. 7, no. 5, pp. 4218–4227,
May 2020.
[6] M. B. Weiss, K. Werbach, D. C. Sicker, and C. E. C. Bastidas, “On the
application of blockchains to spectrum management,” IEEE Trans. Cogn.
Commun. Netw., vol. 5, no. 2, pp. 193–205, Jun. 2019.
[7] B. Cao, M. Li, L. Zhang, Y. Li, and M. Peng, “How does CSMA/CA
affect the performance and security in wireless blockchain networks,”
IEEE Trans. Ind. Informat., vol. 16, no. 6, pp. 4270–4280, Jun. 2020.
[8] T. Ariyarathna, P. Harankahadeniya, S. Isthikar, N. Pathirana, H. D. Ban-
dara, and A. Madanayake, “Dynamic spectrum access via smart contracts
on blockchain,” in Proc. IEEE Wireless Commun. Netw. Conf., 2019,
pp. 1–6.
[9] K. Kotobi and S. G. Bilen, “Secure blockchains for dynamic spectrum
access: A decentralized database in moving cognitive radio networks
enhances security and user access,” IEEE Veh. Technol. Mag., vol. 13,
no. 1, pp. 32–39, Mar. 2018.
[10] T. Maksymyuk et al., “Blockchain-empowered framework for decentral-
ized network management in 6G,” IEEE Commun. Mag., vol. 58, no. 9,
pp. 86–92, Sep. 2020.
[11] M. Khan, M. Jamali, T. Maksymyuk, and J. Gazda, “A blockchain token-
based trading model for secondary spectrum markets in future genera-
tion mobile networks,” Wireless Commun. Mobile Comput., vol. 2020,
Aug. 2020, Art. no. 7975393.
[12] H. Huang, W. Miao, G. Min, J. Tian, and A. Alamri, “NFV and blockchain
enabled 5G for ultra-reliable and low-latency communications in industry:
Architecture and performance evaluation,” IEEE Trans. Ind. Informat.,
vol. 17, no. 8, pp. 5595–5604, Aug. 2021.
[13] Y. Liang, C. Lu, Y. Zhao, and C. Sun, “Interference-based consensus
and transaction validation mechanisms for blockchain-based spectrum
management,” IEEE Access, vol. 9, pp. 90757–90766, 2021.
[14] Y. Arjoune and N. Kaabouch, “A comprehensive survey on spectrum
sensing in cognitive radio networks: Recent advances, new challenges,
and future research directions,” Sensors, no. 1, 2019, Art. no. 126.
[15] A. Shamir, “How to share a secret,” Commun. ACM, vol. 22, no. 11,
pp. 612–613, Nov. 1979.
[16] S. Salous et al., “Chapter 3—IRACON channel measurements and mod-
els,” in Inclusive Radio Commun. for 5G and Beyond, C. Oestges and
F. Quitin, Eds. New York, NY, USA: Academic Press, 2021, pp. 49–105.
[17] T. Wang, L. Qiu, A. K. Sangaiah, G. Xu, and A. Liu, “Energy-efficient
and trustworthy data collection protocol based on mobile fog comput-
ing in Internet of Things,” IEEE Trans. Ind. Informat., vol. 16, no. 5,
pp. 3531–3539, May 2020.
[18] A. Al-Shawabka et al., “Exposing the fingerprint: Dissecting the impact of
the wireless channel on radio fingerprinting,” in Proc. IEEE Conf. Comput.
Commun., 2020, pp. 646–655.
[19] K. Sankhe et al., “No radio left behind: Radio fingerprinting through deep
learning of physical-layer hardware impairments,” IEEE Trans. Cogn.
Commun. Netw., vol. 6, no. 1, pp. 165–178, Mar. 2020.
[20] E. Khorov, A. Kiryanov, A. Lyakhov, and G. Bianchi, “A tutorial on IEEE
802.11ax high efficiency WLANs,” IEEE Commun. Surv. Tut., vol. 21,
no. 1, pp. 197–216, Jan./Mar. 2019.
[21] L. Zhang, H. Xu, O. Onireti, M. A. Imran, and B. Cao, “How much
communication resource is needed to run a wireless blockchain network?,”
IEEE Netw., vol. 36, no. 1, pp. 128–135, Jan./Feb. 2022.
[22] M. Castro and B. Liskov, “Practical byzantine fault tolerance,” in Proc.
3rd Symp. Operating Syst. Des. Implementation, 1999, pp. 173–186.
[23] D. Ongaro and J. Ousterhout, “In search of an understandable consensus
algorithm,” in Proc. 2014 USENIX Conf. USENIX Annu. Tech. Conf., 2014,
pp. 305–320.
[24] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” Mar. 2008.
[Online]. Available: https://bitcoin.org/bitcoin.pdf
https://bitcoin.org/bitcoin.pdf
9216 IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, VOL. 18, NO. 12, DECEMBER 2022
Pramitha Fernando (Student Member, IEEE)
received the B.Sc. degree in electrical and in-
formation engineering from the University of
Ruhuna, Galle, Sri Lanka in 2020. He is cur-
rently working toward the M.Sc. degree in ap-
plied computer science with Vrije Universiteit
Brussel, Brussel, Belgium.
His research interests include information se-
curity, blockchain, and wireless communication.
Keshawa Dadallage received the B.Sc. degree
in electrical and information engineering from
the University of Ruhuna, Galle, Sri Lanka, in
2017.
He is currently working as a Teaching Assis-
tant with the Department of Electrical and Infor-
mation Engineering, University of Ruhuna, and
as an external Project Consultant. His research
interests include wireless communication, sen-
sors and transducers, IoT, blockchain, and net-
work security.
Tharindu Gamage received the first degree
in computer science and engineering and the
M.Sc. degree in electronics and telecommu-
nication engineering from the University of
Moratuwa, Moratuwa, Sri Lanka, in 2009 and
2014, respectively.
He was a Research Assistant for several
years with the University of Moratuwa. He is cur-
rently a Lecturer with the Department of Elec-
trical and Information Engineering, University of
Ruhuna, Matara, Sri Lanka. His research inter-
ests include IoT, embedded systems, high performance computing, and
medical image processing.
Chatura Seneviratne (Member, IEEE) received
the B.Sc. degree in electrical and information
engineering from the University of Ruhuna,
Galle, Sri Lanka, in 2006, and the M.Eng. de-
gree in information and communications tech-
nologies from the Asian Institute of Technology,
Pathum Thani, Thailand, in 2009, and the Ph.D.
degree in electrical and computer engineering
from the University of Calgary, Calgary, AB,
Canada in 2015.
He subsequently completed a Postdoctoral
Fellowship with the University of Calgary and worked on a chaos-based
covert signaling project funded by the Office of Naval Research (ONR),
USA. He is currently working as a Senior Lecturer with the Depart-
ment of Electrical and Information Engineering, University of Ruhuna.
His research interests include signal processing, data aggregation, and
wireless communications.
Arjuna Madanayake (Member, IEEE) received
the Ph.D. degree in electrical engineering from
the University of Calgary, Calgary, AB, Canada,
in 2008.
He is an Associate Professor of Electrical and
Computer Engineering with Florida International
University (FIU), Miami, FL, USA, since 2018.
He was with the University of Akron, OH, USA,
between 2010 and 2015. He leads the RF, Ana-
log, and Digital (RAND) laboratory for Advanced
Signal Processing Circuits (ASPC) at FIU. He
has been recently supported by US National Science Foundation, Of-
fice of Naval Research, Defense Advanced Research Projects Agency,
National Institute of Health, and NASA for scientific work in multiple
areas of his interests. His research interests include wireless communi-
cations, spectrum, radar and phased-arrays, electronic systems includ-
ing FPGAs and VLSI, digital signal processing, algorithms, mm-wave
receivers, antenna array processing, and analog CMOS computing.
Madhusanka Liyanage (Senior Member, IEEE)
received the doctor’s of technology degree in
communication engineering from the University
of Oulu, Oulu, Finland, in 2016.
He is currently an Assistant Professor/Ad As-
tra Fellow and the Director of Graduate Re-
search with the School of Computer Science,
University College Dublin, Dublin, Ireland. He
is also acting as a Docent/Adjunct Professor
with the Center for Wireless Communications,
University of Oulu, and an Honorary Adjunct
Professor with the Department of Electrical and Information Engineer-
ing, University of Ruhuna, Galle, Sri Lanka. His research interests in-
clude 5G/6G, SDN, IoT, blockchain, MEC, mobile, and virtual network
security.
Dr. Liyanage was the recipient of the prestigious Marie Skłodowska-
Curie Actions Individual Fellowship and Government of Ireland Post-
doctoral Fellowship, during 2018 to 2020, and the “2020 IEEE ComSoc
Outstanding Young Researcher” award by IEEE ComSoc EMEA.
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice