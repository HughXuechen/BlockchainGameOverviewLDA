Multi-Layered Blockchain Governance Game
����������
�������
Citation: Kim, S.-K. Multi-Layered
Blockchain Governance Game.
Axioms 2022, 11, 27. https://
doi.org/10.3390/axioms11010027
Academic Editors: Ana Meca and
Carlos Gutierrez-Hita
Received: 11 November 2021
Accepted: 6 January 2022
Published: 9 January 2022
Publisher’s Note: MDPI stays neutral
with regard to jurisdictional claims in
published maps and institutional affil-
iations.
Copyright: © 2022 by the author.
Licensee MDPI, Basel, Switzerland.
This article is an open access article
distributed under the terms and
conditions of the Creative Commons
Attribution (CC BY) license (https://
creativecommons.org/licenses/by/
4.0/).
axioms
Article
Multi-Layered Blockchain Governance Game
Song-Kyoo (Amang) Kim
School of Applied Sciences, Macao Polytechnic Institute, R. de Luis Gonzaga Gomes, Macao; amang@ipm.edu.mo;
Tel.: +853-8599-6455
Abstract: The research designs a new integrated system for the security enhancement of a decen-
tralized network by preventing damages from attackers, particularly for the 51 percent attack. The
concept of multiple layered design based on Blockchain Governance Games frameworks could handle
multiple number of networks analytically. The Multi-Layered Blockchain Governance Game is an
innovative analytical model to find the best strategies for executing a safety operation to protect
whole multiple layered network systems from attackers. This research fully analyzes a complex
network with the compact mathematical forms and theoretically tractable results for predicting
the moment of a safety operation execution are fully obtained. Additionally, simulation results
are demonstrated to obtain the optimal values of configuring parameters of a blockchain-based
security network. The Matlab codes for the simulations are publicly available to help those whom
are constructing an enhanced decentralized security network architecture through this proposed
integrated theoretical framework.
Keywords: blockchain governance game; mixed game; stochastic model; fluctuation theory; network
security; 51 percent attack; IoT; network architecture
1. Introduction
The blockchain is a hashed digital ledger by accomplishing authenticity of all nodes in
a typical peer-to-peer decentralized network which could remove various security threats
caused by a centralized network [1–3]. The basic blockchain data structure could evaluate
data transactions in each chain which grows in an append-only permission on the top of
latest verified blocks [1,4]. This mechanism is secure because a single node cannot govern
more than half of the computational power in the network [5–8]. Through the distributed
consensus of networks nodes, the blockchain network security is enhanced. If an attacker
invests more than 50 percent of the computational power (i.e., governs more than half
of the total nodes), he could conquer a whole blockchain network. To avoid majority
matters, Verifiable Random Functions (VRFs) are adapted into blockchain-based security
applications to remove heavy computation power for mining [9,10]. The VRF is capable
to select a miner randomly, and each node has the same chance to be a miner [9]. This
technique has been adapted for selecting a miner to map inputs to verifiable pseudorandom
outputs [10].
Blockchain technologies have been widely adapted into cyber-security matters including
the Internet of Things [11,12], the Internet of Vehicles [13–19] and Edge-Fog computing [20–22]
because blockchain-based network architectures (i.e., decentralized networks) are secured
to avoid practically any attacks which are dedicated on conventional network architectures
(i.e., centralized networks). These attacks on centralized networks include DoS (Denial-
of-Service), phishing, spoofing and server hacking attacks. Therefore, the securities based
on the blockchain protocol level have been widely studied [2,4,23], but these studies are
limited because the configuring parameters for security protocols are arbitrarily chosen.
Hence, the Blockchain Governance Game (BGG) and the Strategic Alliance for Blockchain
Governance Game (SABGG) are alternatively designed to break through the limitations by
constructing a new network architecture. On the other hand, game theoretic approaches
Axioms 2022, 11, 27. https://doi.org/10.3390/axioms11010027 https://www.mdpi.com/journal/axioms
https://doi.org/10.3390/axioms11010027
https://doi.org/10.3390/axioms11010027
https://creativecommons.org/
https://creativecommons.org/licenses/by/4.0/
https://creativecommons.org/licenses/by/4.0/
https://www.mdpi.com/journal/axioms
https://www.mdpi.com
https://orcid.org/0000-0003-4856-8247
https://doi.org/10.3390/axioms11010027
https://www.mdpi.com/journal/axioms
https://www.mdpi.com/article/10.3390/axioms11010027?type=check_update&version=2
Axioms 2022, 11, 27 2 of 17
for improving securities have also been widely applied into various telecommunication
networks [24,25], communication protocols [26] and trustworthy data [27,28]. It is even
applied into designing blockchain-based services and securities [29]. The stochastic game
executes stochastic transitions among the states of the game, and players in a stochastic
game could change their strategies based on the past actions and randomness of behaviors
of the other players. Several kinds of stochastic games have been adapted to avoid the
51 percent attack, and a stochastic game has been used for analyzing the selection between
honest mining and making the decision of the proper time for adding and releasing mined
blocks [2]. The BGG and the SABGG are the mixed model of the fluctuation and the mixed
strategy game for analyzing a single layered network to provide the decision making
moment for taking preliminary security actions before attacks [30,31]. The SABGG is
a variant of BGG, which is designed for strategically allying nodes instead of keeping
hidden nodes [31]. These BGG frameworks find optimal decision-making parameters
and the strategic choices of a defender are either taking a preliminary action (i.e., a safety
mode) or doing nothing. Taking a preliminary action for security operations shall not be
optimal until the game reaches one step prior to pass the Nash equilibrium [29]. Once
corrupted blocks are generated, all models independently predict the number of blocks to
be generated and the moment until more than half of the total nodes are corrupted by an
attacker. The techniques deliver the results under a composition of the D–operator and its
inverse D–operator, which have been introduced in the BGG models [30,31]. In this paper,
the extended blockchain governance game framework is newly designed for improving
complex decentralized network securities. The Multi-Layered Blockchain Governance Game
(MLBGG) is a combined stochastic game model based on the BGG frameworks. The main
contributions of this research are the following:
• Mathematically analyzing a complex network management;
• An analytical solution that can support optimal values of configuring parameters for
network securities;
• A complicated decentralized network can be securely designed and managed by using
this innovative theoretical framework.
The layer 1 is a set of multiple BGG-based networks, and the other layer (i.e., layer 0)
is single SABGG-based network (see Figure 1). This multiple layer framework makes
the BGG more flexible to applying various hierarchical system architectures, including
Edge-Fog computing [20,21], hierarchical network systems [18,22] and IoT-Server networks
(see Section 3).
Figure 1. Multi-Layered Blockchain Governance Game structure.
Axioms 2022, 11, 27 3 of 17
The paper is organized as follows: Stochastic models of MLBGG architecture with
some key analytical techniques are introduced in Section 2. This section also explains how
the multi-layered model is connected with the BGG for layer 1 and the SABGG for layer
0. The modeled processes of the accumulated corrupted blocks of each node mathemat-
ically predict both the time and size of the nodes and which are governed by attackers.
In Section 3, the MLBGG framework is applied into a practical IoT (Internet of Things) net-
work architecture. This section shows how the MLBGG could be adapted into an IoT-Server
combined network system. This is a typical way to construct a blockchain-based network
architecture by adapting the MLBGG. Various simulations for the MLBGG determine
configuring parameters in Section 4. Although theoretical approaches without simulated
results still helps computer programming, these simulation are practically optimizing
configuring parameters of an IoT-Server combined network system.
2. Multi-Layered Blockchain Governance Game
A multi-layered blockchain governance game (MLBGG) combines a set of multiple
BGG networks and single SABGG network which are hierarchically connected. Each system
in layer 1 is exactly mapped with the BGG, and layer 0 is mapped with the SABGG (see
Figure 2).
Figure 2. BGG and SABGG mapping into MLBGG.
2.1. Layer 1: BGG Stochastic Modelling
Layer 1 is a set of η + 1 BGG networks, and the l-th BGG network has Ml nodes with
B0 (≤ η) reserved nodes for executing a safety operation. In layer 1 (i.e., the second layer),
each BGG network between an attacker and a defender are described the antagonistic game.
Two players (A: an attacker, H: a defender) in the l-th BGG network in layer 1 compete to
build the blocks either for honest or false ones. It is noted that one particular BGG network
in layer 1 (i.e., l-th network) is firstly analyzed and combining whole BGG networks as a
single set will be covered later in this section.
Let (Ω,F (Ω), P) be probability space FAl , FHl ,Fτ ⊆ F (Ω) and layer 1 be indepen-
dent σ-subalgebras in the l-th network (l = 0, 1 . . . , η). Let us consider FAl -measurable and
FHl -measurable marked Poisson processes as follows:
Al := ∑
k≥0
Xl
kεsl
k
, sl
0(= 0) < sl
1 < sl
2 < · · · , (1)
Hl := ∑
j≥0
Yl
j εtl
j
, tl
0(= 0) < tl
1 < tl
2 < · · · , (2)
where l = 0, 1, . . . , η with respective intensities λl
A and λl
H of l-th network in layer 1 and εa
is a point mass at a. These two values are related with block generating performances of an
Axioms 2022, 11, 27 4 of 17
attacker and a defender [30]. In the l-th BGG network in layer 1, the processes Al andHl
are specified by their transforms:
E
[
gA
l(s)
]
= eλl
A(s)(g−1), l = {0, 1, . . . , η}, (3)
E
[
zH
l(t)
]
= eλl
H(t)(z−1), l = {0, 1, . . . , η}, (4)
where η is the total number of allied nodes in layer 0, and the observation process for all
systems in layer 1 is:
T := ∑
i≥0
ετi , τ0(> 0), τ1, . . . , (5)
which is assumed to be delayed renewal process. If(
Al(t), Hl(t)
)
:= Al ⊗Hl
([
0, τl
k
])
, k = 0, 1, . . . , (6)
forms an observation process upon Al ⊗Hl embedded over T , with respective increments(
Xl
k, Yl
k
)
:= Al ⊗Hl([τk−1, τk]), k = 1, 2, . . . , (7)
and
Xl
0 = Al
0, Yl
0 = Hl
0, l = {0, 1, . . . , η}. (8)
The observation process of the l-th BGG network could be formalized as
Al
τ ⊗Hl
τ := ∑
k≥0
(
Xl
k, Yl
k
)
ετk , l = {0, . . . η}, (9)
with position-dependent marking in the l-th blockchain network and with Xl
k and Yl
k could
be defined with the notation
∆k := τk − τk−1, k = 0, 1, . . . , τ−1 = 0, (10)
and
γl(g, z) = E
[
gXl
k · zYl
k
]
, ‖g‖ ≤ 1, ‖z‖ ≤ 1. (11)
Due to the double expectation,
γl(g, z) = δ
(
λl
a(1− g) + λl
h(1− z)
)
, l = {0, 1, . . . , η}, (12)
and
γl
0(g, z) = δ0
(
λl
a(1− g) + λl
h(1− z)
)
, (13)
where
δ(θ) = E
[
e−θ∆1
]
, δ0(θ) = E
[
e−θτ0
]
(14)
are the marginal transform of increments ∆1, ∆2, . . .. In the l-th system, the stochastic
process Al
τ ⊗Hl
τ analyzes a conflict between players with an observation process for the
l-th system in the layer 1. This game is over when the collateral building blocks by either
one of player exceeds the threshold (> Ml
2 ) on the k-th observation epoch τk. The exit indices
for each network are:
νl := in f
{
k : Al
k = Al
0 + Xl
1 + · · ·+ Xl
k ≥
(
Ml
2
)}
, (15)
µl := in f
{
j : Hl
j = Hl
0 + Yl
1 + · · ·+ Yl
j ≥
(
Ml
2
)}
, (16)
Axioms 2022, 11, 27 5 of 17
where l = {0, 1, . . . , η}, and η is the number of backup nodes, which are equivalent with
the number of nodes in layer 0. Player A (an attacker) wins at time τνl ; otherwise, player H
(a defender) generates the correct blocks. At this moment, the confined game in the view
point of player Al for each BGG network in layer 1 is targeted. The Formula (6) will be
modified as:
Al
τ ⊗Hl
τ
:=
νl
∑
k≥0
(
Xl
k, Yl
k
)
ετk (17)
which is the path of the game from F (Ω) ∩
{
νl < µl
}
, which gives an exact definition
of the model observed until τνl . The joint functional of the l-th BGG model in layer 1 is
as follows:
Φl⌈Ml
2
⌉ = Φl⌈Ml
2
⌉(ξ, g0, g1, z0, z1)
= E
[
ξνl · g
Al
νl−1
0 · g
Al
νl
1 · z
Hl
νl−1
0 · z
Hl
νl
1 1{νl<µl}
]
, l = {0, . . . , η}.
(18)
This functional represents the status of an attacker and honest nodes upon the exit
time τl
ν, l = {0, 1, . . . , η}. For the BGG-1 theorem [30], the operators for the first exceed
model [32,33] are defined as follows:
D(x,y) [ f (x, y)](u, v) := (1− u)(1− v) ∑
x≥0
∑
y≥0
f (x, y)uxvy, ||u|| < 1, ||v|| < 1, (19)
where { f (x, y)} is a sequence, with the inverse:
D
(m,n)
(u,v) (•) =
(
1
m! · n!
)
lim
(u,v)→0
∂m∂n
∂um∂vn
1
(1− u)(1− v)
(•), m ≥ 0, n ≥ 0. (20)
Additionally, the new operators for dealing with the matrix calculations are introduced.
Let us consider the matrix of a function set f (x,y) as follows:
f (x,y) =

f0(x, y)
f1(x, y)
...
...
fn(x, y)
 (21)
and the matrix operations for D(x,y){•} and D
(m,n)
(u,v) {•} are defined as follows:
D� f (x,y) := D(x,y){ f} =

(1− u)(1− v)∑ ∑ f0(x, y)uxvy
(1− u)(1− v)∑ ∑ f1(x, y)uxvy
...
(1− u)(1− v)∑ ∑ fl(x, y)uxvy
...
(1− u)(1− v)∑ ∑ fn(x, y)uxvy

(22)
Axioms 2022, 11, 27 6 of 17
and
D−1
Mr
�G(u,v) :=

D
(m0,n0)
(u,v) {G0(u, v)}
D
(m1,n0)
(u,v) {G1(u, v)}
...
D
(ml ,nl)
(u,v) {Gl(u, v)}
...
D
(mn ,nn)
(u,v) {Gr(u, v)}

, (23)
where
Mr =

m0 n0
m1 n1
...
...
...
...
mr nr
 (24)
From the BGG-1 Theorem [30], we can set up the matrix of the functional and the
functional matrix for all blockchain networks in layer 1 as follows:
Φ1
Mη
= D−1
Mη
�G(u,v), (25)
where
G(u,v) =

G0(u, v)
...
Gl(u, v)
...
Gη(u, v)
, Mη =

⌈
M0
2
⌉ ⌈
M0
2
⌉
...
...⌈
Ml
2
⌉ ⌈
Ml
2
⌉
...
...⌈
Mη
2
⌉ ⌈
Mη
2
⌉

, (26)
and Mη indicates the vector form of all blockchain networks in layer 1. From (18):
Φl⌈Ml
2
⌉ = D
(⌈Ml
2
⌉
,
⌈Ml
2
⌉)
(u,v) [Gl(u, v)], l = {0, . . . , η}, (27)
where
Gl(u, v) =
[
Γ1
0 − Γ0 +
ξ · γ0
1− ξγ
(
Γ1 − Γ
)]
,
and
γ := γl(g0g1u, z0z1v), (28)
γ0 := γl
0(g0g1u, z0z1v), (29)
Γ := γl(g1u, z1v), (30)
Γ0 := γl
0(g1u, z1v), (31)
Γ1 := γl(g1, z1v), (32)
Γ1
0 := γl
0(g1, z1v). (33)
From (18) and (27), the probability generating functions (PGFs) for Al
νl−1 (and also
Al
νl ) and the exit index νl of the l-th BGG network in the layer 1 are determined as follows:
E
[
ξνl
]
= Φl⌈Ml
2
⌉(ξ, 1, 1, 1, 1), (34)
Axioms 2022, 11, 27 7 of 17
E
[
g
Al
νl−1
0
]
= Φl⌈Ml
2
⌉(1, g0, 1, 1, 1), (35)
E
[
g
Al
νl
1
]
= Φl⌈Ml
2
⌉(1, 1, g1, 1, 1), l = {0, . . . , η}. (36)
From (5), (10) and (34), the moments of making a decision τν−1 are:
E
[
νl
]
=
∂
∂ξ
Φl
dM
2 e
(ξ, 1, 1, 1, 1)
∣∣∣
ξ=1
, (37)
E
[
τνl−1
]
= E[τ0] +E[∆1]
(
E
[
νl
]
− 1
)
, l = {1, . . . , η}. (38)
In a conventional BGG [30], the probability of bursting the l-th blockchain network
ql(sH) is determined as follows:
ql(sH) =
E
[
1{Al
ν≥M
2 }
]
, sH = {DoNothing},
E
[
1{Al
ν≥(M
2 +B1)}
]
, sH = {Action}
(39)
where B1(≤ η) is the number of backup nodes, which are hooked as in layer 0 (see Figure 2),
and the reserved nodes depend on the availability of other blockchain networks in the same
layer. When the reserved nodes are realized during a safety mode, the bursting probability
of the l-th blockchain network in the layer 1 is revised as follows:
E
[
1{
Al
ν≥
(Ml
2 +B1
)}] = E
[
E
[
1{
Aν≥
(Ml
2 +B1
)}∣∣B1
]]
(40)
where
P
{
B1
η = j
}
=
(
η
j
)(
ρ1
)j(
1− ρ1
)η−j
, (41)
ρ1 =
(
1
η + 1
)
E
[
η
∑
k=0
1{
Hk
ν≥
Mk
2
}]. (42)
2.2. Layer 0: SABGG Stochastic Modelling
The SABGG network with η + 1 nodes are considered in the layer 0 (i.e., the first layer)
and two persons (called “Corrupted” and “Genuine”) play a game by governing blocks
which are either genuine or corrupted ledgers. For layer 0, let us assume:
C := ∑
j≥0
Jjεuj , u0(= 0) < u1 < u2 < · · · , (43)
G := ∑
k≥0
Kkεvk , v0(= 0) < v1 < v2 < · · · , (44)
are also marked Poisson processes (i.e., F c and Fg measures) and position-independent
marking with respective intensities λc and λg. Similar to (5), a third-party observation
point process is determined as follows:
U := ∑
i≥0
εti , t0(> 0)), t1, . . . . (45)
Similarly, player C (corrupted; a layer 0 attacker) builds the blocks which contain false
transactions at the times u1, u2, . . .. In the other hand, player G (genuine; a layer 0 defender)
generates the blocks which contain the correct transactions. The transforms of the processes
C and G are:
E
[
yC(u)
]
= eλc(u)(y−1),E
[
zG(v)
]
= eλg(v)(z−1). (46)
Axioms 2022, 11, 27 8 of 17
Unlike layer 1, layer 0 has one single SABGG network. The observation process upon
C ⊗ G with respective increments:
(Ji, Ki) := C ⊗ G([ti−1, ti]), i = 1, 2, . . . , (47)
and
J0 = C0, K0 = G0. (48)
The observation process of layer 0 is formalized as:
Ct ⊗ Gt := ∑
i≥0
(Ji, Ki)εti , (49)
where
Ct = ∑
i≥0
Jiεti , Gt = ∑
i≥0
Kiεti , (50)
with position-dependent marking. We can find the functional
α(y, z) = E
[
yJi · zKi
]
, ‖y‖ ≤ 1, ‖z‖ ≤ 1 (51)
with the notation
Ui := ti − ti−1, i = {0, 1, . . .}, t−1 = 0. (52)
Similarly, from the previous section, we have:
α(y, z) = α
(
λc(1− y) + λg(1− z)
)
, (53)
α0(y, z) = α0
(
λc(1− y) + λg(1− z)
)
, (54)
where
α(θ) = E
[
e−θU1
]
, α0(θ) = E
[
e−θt0
]
. (55)
The exit indices are formalized as follows:
ν := in f
{
j : Cj (= C0 + J1 + · · ·+ Jj) ≥
(η
2
)}
, (56)
ν2 := in f
{
j : Cj (= C0 + J1 + · · ·+ Jj)− B0 ≥
(η
2
)}
, (57)
µ := in f
{
l : Gl(= G0 + K1 + · · ·+ Kl) ≥
(η
2
)}
, (58)
where B0 (≤ η) is the number of available nodes by the strategic alliance. The game in the
layer 0 is over at min{ν, ν2, µ}. The first passage time tν is the associated exit time from the
confined game, and Formula (49) is modified as:
C t ⊗ G t :=
ν
∑
n≥0
(Jn, Kn)εtn , (59)
which gives an exact definition of the model observed until tν without the strategic alliance
action. The explicit formula of the SABGG [31] is as follows:
Θ η
2
= Θ{ν,ν2,µ}(ζ, y0, y1, b, z0, z1)
= E
[
ζν · yCν−1
0 · yCν
1 · b
Cν−Bη · zGµ−1
0 · zGµ
1 1{ν<ν2<µ}
]
,
(60)
and the extended first exceed theory [32,33] has been applied, and the operator D(q,r,s)
(a,b,c) is
defined as:
Axioms 2022, 11, 27 9 of 17
D(q,r,s)
(a,b,c) [g(a, b, c)] := (1− q)(1− r)(1− s) ·
{
∑
a≥0
∑
b≥0
∑
c≥0
g(a, b, c)qarbsc
}
, (61)
and ||q|| < 1, ||r|| < 1, ||s|| < 1. Then, we have:
g(a, b, c) = D
(a,b,c)
(q,r,s)
[
D(a,b,c) {g(a, b, c)}(q, r, s)
]
, (62)
where {g(a, b, c)} is a sequence, with the inverse:
D
(a,b,c)
(q,r,s) (•) =
(
1
a! · b! · c!
)
lim
(q,r,s)→0
{ ∂a∂b∂c
∂qa∂rb∂sc
1
(1− q)(1− r)(1− s)
(•)
}
. (63)
From the BGG-2 Theorem [31]:
Θd N
2 e = D
(d η
2 e,d η
2 e,d η
2 e)
(q,r,s)
{
ση · β
(
1− β1
1− β
)
·
(
α1
0 − α0 +
ζΦ0
1− ζΦ
(
α1 − α
))}
, (64)
where
Φ := α(y0y1bqr, z0z1s), (65)
Φ0 := α0(y0y1bqr, z0z1s), (66)
α := α(y1bq, z1), (67)
α0 := α0(y1bq, z1), (68)
α1 := α(y1b, z1), (69)
α1
0 := α0(y1b, z1), (70)
β := α(br, s), (71)
β1 := α(r, 1), (72)
ση := E
[
b−Bη
]
. (73)
The moment of making a decision tν−1 could be found as follows:
E[ν] = ∂
∂ζ
Θd η
2 e(ζ, 1, 1, 1, 1,1)
∣∣∣
ζ=1
, (74)
E[tν−1] = E[t0] +E[U1](E[ν]− 1). (75)
In layer 0, the probability of bursting the blockchain network q0(sH) is determined
as follows:
q0(sg
)
=

E
[
1{Cν≥ η
2}
]
, sg = {DoNothing},
E
[
1{
Cν≥ η(1+α)
2
}], sg = {Action}.
(76)
where α is an overhead portion for protecting the layer 0 (i.e., B0 =
( η
2
)
· α). The probability
of bursting a SABGG network by an attacker is as follows:
q
(
sg
)
=
∑k> η
2
E
[
1{Cν=k}
]
, sg = {DoNothing},
E
[
∑k> η
2 +B0 E
[
1{Cν=k}
]]
, sg = {Action},
(77)
where
E
[
1{Cν=k}
]
= E
[
E
[
(λctν)
k
k!
· e−λctν
∣∣∣tν
]]
. (78)
Axioms 2022, 11, 27 10 of 17
3. Multiple Layered IoT-Server Network Design
The MLBGG framework is suitable to adapt any type of hierarchical networks, in-
cluding computer networks and management systems. A typical IoT-Server network
architecture is connected cars (i.e., IoT connection) which are controlled by agent servers
which are decentralized and equally contributed. The Internet of Vehicles or EBIoV (En-
hanced Blockchain-based Internet of Vehicles) [19] are widely known frameworks for
connecting smart components in each car. Although the application in this paper deals with
smart components in a connected car as IoT elements, this model could be applied to drones
as IoT elements for improving their security. Basically, any IoT component could consider
the MLBGG model for enhancing its security without centralized authentication systems.
3.1. Multiple Layered IoT-Server Network Architecture
The networks which combines IoT networks and a server network could adapt the
MLBGG. The set of IoT networks is one layer and one set with management servers is the
other layer. The BGG is adapted into IoT networks as layer 1 and the SABGG is applied
into the network of management servers (see Figure 3).
Figure 3. IoT-Server network architecture in the MLBGG. Mk (k = 0, 1, 2, . . . N) is the index which is
started from 0 and N + 1 is the total count of cars.
Layer 1 contains η + 1 IoT systems, and each IoT system has Ml , l = {0, 1, . . . , η}
components which are fully connected. The l-th IoT system should have at least one (agent)
server as a component within Ml components. These servers, which have higher control
levels, become the components in layer 0, and the η + 1 elements in layer 0 are the backup
nodes for all IoT systems in layer 0 (i.e., shared backup nodes). Since η + 1 servers in layer
0 can keep multiple ledgers, each server has all ledgers from the IoT systems in layer 0. It is
noted that up to η nodes might allay one node in layer 0. The blockchain ledger for the
agent system (i.e., layer 0) is different than the ledgers for IoT systems (i.e., layer 1) and is
only shared within layer 0.
3.2. Stochastic Optimization
In layer 1, the reserving costs for backup nodes (i.e., “Action” strategy of a defender
in layer 1) should be cheaper than the network bursting costs; otherwise, player H would
choose the other strategy (“DoNothing” strategy). The number of nodes for protecting
η + 1 BGG networks in layer 1 depends on the cost function. Available reserved nodes
are equally applied to every BGG networks in layer 1, and the optimal portion for the
blockchain governance B1 could be found as follows:
B1 = inf
{
η ≥ 0 : C1
(
B1
)}
, B1 ≤ η, (79)
where
C1
(
B1
)
=
η
∑
l=0
E
[
Cl
1
(
B1
η
)
Total
]
. (80)
Axioms 2022, 11, 27 11 of 17
The governance cost function for governance for the l-th BGG networks in the layer 1
is as follows:
Cl
1(B)Total = Cl
Act(B) ·E
[
1{
Al
ν−1<
Ml
2
}]+ Cl
NoA ·E
[
1{
Al
ν−1≥
Ml
2
}] (81)
and
ρ1 =
(
1
η + 1
)
E
[
η
∑
l=0
1{
Hl
ν≥
Ml
2
}], l = {0. . . . , η}. (82)
For each blockchain network in layer 1, no action for the l-th blockchain network
will be taken until the moment τνl−1. If the attacker catches less than half of all nodes at
τl
ν−1 (i.e.,
{
Al
ν−1 < Ml
2
}
), then the defender could take the action to avoid the attack at τl
ν,
l = 0, 1, . . . , η.
In layer 0, the acceptance rate of a strategic alliance in a blockchain network α depends
on the cost function and the optimal portion α0 for the SABGG could be found as follows
(where B := B0
η =
( η
2
)
· α):
α0 = inf
{
α ≥ 0 : C0
NoA
(
r0
)
≥ C0
Act(α)
}
, (83)
where (at the moment tν−1)
C0
NoA
(
r0
)
= U0 · r0, (84)
C0
Act(α, η) = c0
η(α)
(
1− r1
α
)
+
(
c0
η(α) + U0
)
r1
α, (85)
r0 = E
[
1{Cν≥ η
2}
]
, r1
α = E
[
1{Cν≥ η
2 +B}
]
. (86)
From (82) and (83), the optimal acceptance rate for layer 0 is determined as follows:
α∗ = min
{
ρ1, α0
}
, (87)
and the defender will not take any action until the time tν−1 for layer 0. If the attacker
catches less than half of all nodes at tν−1 (i.e., Cν−1 <
⌈ η
2
⌉
), then the defender could take
the action to avoid the attack at tν. The total cost for developing the enhanced blockchain
network is as follows:
C0(α, η)Total = C0
Act(B) ·E
[
1{Cν−1<
η
2}
]
+ C0
NoA ·E
[
1{Cν−1≥B}
]
, (88)
and the optimal portion for the blockchain governance η0 could be found as follows:
η0 = inf
{
η ≥ 0 : C0(η)
}
. (89)
Since Θd η
2 e(1, y0, 1, 1, 1, 1) from (2.64) is the probability generating function of Cν−1,
the probability mass could be found as follows:
P{Cν−1 = k} = lim
y0→0
1
k!
∂k
∂yk
0
Θd N
2 e(1, y0, 1, 1, 1, 1), k = 0, . . . ,
⌊η
2
⌋
. (90)
From (79) and (89), the optimal number of the reserved nodes for layer 0 in layer 1
could be found as follows:
η∗ = max
{
B1, η0
}
. (91)
Based on the conditions, the LP (Linear Programming) model could be described
as follows:
Axioms 2022, 11, 27 12 of 17
Objective:
minG = E
[
C0
(
B0
)
Total
+ C1
(
B1
)
Total
]
(92)
Subject to:
α∗ ≥
cη
U0 · r0 − cη
. (93)
4. Model Simulations
The safety mode is considered for protecting a network. Theoretically, the BGG-
based network takes a preliminary action to avoid a 51 percent attack by an attacker. The
simulations in this section are targeted to find optimal values of the configuring parameters,
including an optimal number of reserved nodes in the layer 1 and the acceptance rate for
the SABGG-based network in layer 0. The first simulation is finding the optimal value of
reserved nodes for IoT networks in layer 1 (Section 4.2). The second one is designed to
evaluate the optimal acceptance rate of the SABGG which is adapted in layer 0 (Section 4.3).
Lastly, an overall cost comparison with a conventional network without adapting the BGG
is discussed on Section 4.4.
4.1. Preliminaries
The safety mode is considered for protecting a multi-layered network. Theoretically, a
BGG based network takes a preliminary action to avoid a 51 percent attack by an attacker.
The action may actually happen before governing more than half of the nodes by an attacker
or after. Two points of the Proof-Of-Work (POW) are considered as action points: One is
the moment that passes more than a half of the nodes in the networks which are more than
Ml
2 , l = 0, 1, . . . η for layer 1 and more than η
2 for the layer 0. The other is one step prior to
passing more than half the nodes in both layers. The best situation shall be that the safety
mode is executed when an attacker takes more than half of the nodes, but the network is
protected by releasing additional backup nodes. However, it is noted that attempting to
govern more than a half of the nodes may happen even after exiting the safety mode (see
Figure 4).
Figure 4. Operation of the safety mode of layer 0 (top) and layer 1 (bottom).
Axioms 2022, 11, 27 13 of 17
The simulation is processed by the following strategies:
• Two cases (one is with the BGG, the other is without the BGG) per each layer
are simulated;
• Simulating the 51 percent attack to evaluate whether the nodes in the network are
protected by the BGG or not;
• If the number of nodes governed by the attack is more than half at τl
ν (i.e., Al
ν ≥
Ml
2 ,
l = {0, 1, . . . , η}), the networks in layer 1 are burst;
• If the number of nodes governed by the attack is more than half at tν (i.e., Cν ≥ η
2 ), the
network of layer 0 is burst;
• The safety modes for each layer are randomly executed based on the Binomial
random variables;
• The observation (i.e., the duration of the proof-of-work) are the same within the
same layer.
The strategy for protecting each network in layer 1 is for supporting the additional
nodes to give the less chance that an attacker catches blocks with false control requests.
The IoT-connected network is considered as a BGG network in the layer, and the estimated
mean value of each network in layer 1 is around USD 10,000 each. The reserved nodes for a
safety mode are the same for main nodes in the layer 0. All nodes in the layer 0 contains
multiple ledgers of all network in the layer 1 (i.e., the number of reserved nodes η for a
safety mode is same for all network in the layer 1). The details of other setups are described
in Table 1.
Table 1. Initial conditions for layer 1.
Name Value Description
E
[
Ml
]
250 Average number of nodes of each network in layer 1
(l = {1, . . . , N})
E[Vl ] 10,000 [USD] Average value of each network in layer 1
c1(B) − The cost for reserving nodes to avoid attacks in layer 1
λl
A − The rate of attacking in layer 1
B − The number of backup nodes supported from layer 0 (B ≤ η)
The setups for layer 0 could be similarly described in Table 2. It is noted that the
overall loss value by the burst layer 0 network is higher than the average loss values of
networks in layer 1 because the components in layer 1 are mainly IoT sensors, which are
cheaper than the components in layer 0, which are typically servers and workstations.
Table 2. Initial conditions for layer 0.
Name Value Description
α (or p) − Acceptance rate for strategic alliance in layer 0
U0 120,000 [USD] Total value of the layer 0 network
c0(α) − The cost for reserving nodes to avoid attacks in layer 0
λc − The rate of governing nodes by attackers in layer 0
N 41 [Nodes] Total number of nodes in layer 0 (N = η + 1)
4.2. Optimizing Backup Nodes for the Layer 1
This simulation considers that 41 (i.e., η + 1) IoT networks (as layer 1) are hooked
up as a single network (as layer 0), and each IoT network has up to 40 backup nodes for
security modes. The simulation goes for 1000 trials and finds the optimal number of backup
nodes based on the cost efficiency. It has been executed 4 times with 1000 trials, and the
optimal values vary (see Figure 5).
Axioms 2022, 11, 27 14 of 17
It shows that the optimal number of backup nodes are ranged between 35 and 45 nodes.
The cost efficiency is around 46 percent, which indicates 250 BGG-based IoT networks are
46 percents cheaper than conventional IoT networks in terms of overall operating costs.
Figure 5. Simulation results to find the optimal value of the backup node.
4.3. Acceptance Rate of Strategic Alliance in the Layer 0
In layer 0, the acceptance rate is a vital matter because the layer 0 network adapts the
SABGG [31]. This simulation robustly finds the optimal acceptance rate with correspond to
number of nodes in layer 0. The simulation shows that around a 46 percent acceptance rate
will give the best effort regardless of the number of nodes in layer 0 (see Figure 6).
Figure 6. Acceptance rate optimization in layer 0.
Axioms 2022, 11, 27 15 of 17
4.4. Overall Performance Discussion of a Multi-Layered BGG
This session shows the comparison between a Multi-Layered BGG (MLBGG) and a
blockchain network without BGG. The simulation calculates the average operating costs of
both networks (layer 0 and 1) based on 1000 trials with the given conditions (Tables 1 and 2).
The result shows that the average operating costs for the safety mode are USD 286,916 for
the MLBGG adapted network (USD 115,400 in layer 0 and USD 171,516 in layer 1) and the
network without the MLBGG costs USD 520,000 (i.e., USD 120,000 + USD 400,000).
The average cost efficiency of the MLBGG-adapted network ε that compares to the
safety operation cost of conventional IoT networks can be solved as follows [34]:
ε =
|Cb − Cr|
Cr
(94)
where Cb (=USD 286,916) is the average safety operation costs with the MLBGG and Cr
(=USD 520,000) is the cost of an atypical IoT network without the BGG adaptation. From
(94), the MLBGG cost efficiency is 0.4482 (in Figure 7), which means that about 45 percent of
the costs are saved by adapting an MLBGG. Since the testing values are randomly generated
in each simulation, the results from other trials might not be the same as the current ones
in this section.
Figure 7. Performance comparison graph.
5. Conclusions
The major target of this paper has established explicit formulas of the Multi-Layered
Blockchain Governance Game, and the set of IoT networks are combined with secure
management network systems as a higher hierarchy. This hybrid network architecture
directly adapts the blockchain governance game for enhancing the security. An analytic
approach supports the theoretical background of decision-making factors to design the
enhanced network architecture. The several simulations are executed to find various hyper-
parameters, which also impacts the network performance. This innovative architecture is
targeted to improve the security only based on network architectural perspectives. This
new proposed model is still theoretical, and actual implementations on real blockchain
networks shall be developed to see how this theory is actually working. Other technical
perspectives for improving blockchain security are out of scope in this paper, but combining
these technical perspectives and the MLBGG might be considered as future research topics.
The MLBGG model shall be extended to various blockchain-based cybersecurity network
frameworks for connected cars and smart drone swarms.
Funding: This research received no external funding.
Institutional Review Board Statement: Not applicable.
Informed Consent Statement: Not applicable.
Data Availability Statement: Not applicable.
Axioms 2022, 11, 27 16 of 17
Acknowledgments: Special thanks to the Guest Editor, Ana Meca, who has guided the author to
submit the proper topic of the journal. The Matlab codes for the simulations are publicly available on
GitHub (https://github.com/amangkim/mlbgg (accessed on 10 November 2021)) for users to try
the demonstrations of the Multi-Layered Blockchain Governance Game.
Conflicts of Interest: The author declares no conflict of interest.
References
1. Nakamoto, S. Bitcoin: A Peer-to-Peer Electronic Cash System. 2009. Available online: http://www.bitcoin.org (accessed on 10
November 2021).
2. Beikverdi, A.; Song, J. Trend of centralization in Bitcoin’s distributed network. In Proceedings of the 2015 IEEE/ACIS 16th
International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing
(SNPD), Takamatsu, Japan, 1–3 June 2015; pp. 1–6.
3. Yli-Huumo, I.; Ko, D.; Choi, S.; Park, S.; Smolander, K. Where Is Current Research on Blockchain Technology? A Systematic
Review. PLoS ONE 2016, 11, e0163477. [CrossRef] [PubMed]
4. Decker, C.; Wattenhofer, R. Information propagation in the Bitcoin network. In Proceedings of the IEEE P2P 2013 Proceedings,
Trento, Italy, 9–11 September 2013; pp. 1–10.
5. Kim, W. Bitcoin, Blockchain Mechanism and Its Evolution. 2018. Available online: http://www.itfind.or.kr/publication/
(accessed on 10 November 2021). (In Korean)
6. Narayanan, A.; Clar, J. Bitcoin’s Academic Pedigree. Mag. Commun. ACM 2017, 60, 36–45. [CrossRef]
7. Weiss, M.; Corsi, E. Bitfury: Blockchain for Government. HBP Case 2018, 12, 818-031.
8. Armknecht, F.; Karame, G.O.; Mandal, A.; Youssef, F.; Zenner, E. Ripple: Overview and Outlook. In Lecture Notes in Computer
Science; Springer: Cham, Switzerland, 2015; Volume 9229, pp. 163–180.
9. Micali, S.; Rabin, M.O.; Vadhan, S.P. Verifiable random functions. In Proceedings of the 40th IEEE Symposium on Foundations of
Computer Science, New York, NY, USA, 17–18 October 1999; pp. 120–130.
10. Goldberg, S.; Reyzin, L.; Papadopoulos, D.; Vcelak, J. Verifiable Random Functions. IETF. 2021. Available online: https:
//datatracker.ietf.org/doc/draft-irtf-cfrg-vrf/09/ (accessed on 10 November 2021).
11. Restuccia, F.; D’Oro, S.; Kanhere, S.S.; Melodia, T.; Das, S.K. Blockchain for the Internet of Things: Present and Future. 2018.
Available online: https://arxiv.org/abs/1903.07448 (accessed on 1 May 2019).
12. Bolton, T.; Dargahi, T.; Belguith, S.; Al-Rakhami, M.S.; Sodhro, A.H. On the Security and Privacy Challenges of Virtual Assistants.
Sensors 2021, 21, 2312. [CrossRef] [PubMed]
13. Rouse, M. Internet of Vehicles. 2018. Available online: https://whatis.techtarget.com/definition/Internet-of-Vehicles (accessed
on 1 May 2019).
14. Dandala, T.T.; Krishnamurthy, V.; Alwan, R. Internet of Vehicles (IoV) for traffic management. In Proceedings of the 2017
International Conference on Computer, Communication and Signal Processing (ICCCSP), Chennai, India, 10–11 January 2017;
pp. 1–4.
15. Conoscenti, M.; Vetro, A.; De Martin, J.C. Blockchain for the Internet of Things: A systematic literature review. In Proceedings
of the 13th IEEE/ACS International Conference of Computer Systems and Applications (AICCSA 2016), Agadir, Morocco,
29 November–2 December 2016.
16. Haig, S. Ford to Use Cryptocurrency for Inter-Vehicle Communication System. 2017. Available online: https://news.bitcoin.com/
ford-cryptocurrency-inter-vehicle-communication-system/ (accessed on 1 May 2019).
17. Hamid, U.Z.A.; Zamzuri, H.; Limbu, D.K. Internet of Vehicle (IoV) Applications in Expediting the Implementation of Smart
Highway of Autonomous Vehicle: A Survey. In Performability in Internet of Things; Springer: Cham, Switzerland, 2018; pp. 137–157.
18. Dorri, A.; Steger, M.; Kanhere, S.S.; Jurdak, R. BlockChain: A Distributed Solution to Automotive Security and Privacy. IEEE
Commun. Mag. 2017, 55, 119–125. [CrossRef]
19. Kim, S.-K. Enhanced IoV Security Network by Using Blockchain Governance Game. Mathematics 2021, 9, 109. [CrossRef]
20. Baker, J. Edge Computing—The New Frontier of the Web. 2017. Available online: https://hackernoon.com/edge-computing-a-
beginners-guide-8976b6886481 (accessed on 10 November 2021).
21. ERPINNEW. Fog Computing vs. Edge Computing. 2017. Available online: https://erpinnews.com/fog-computing-vs-edge-
computing (accessed on 1 May 2019).
22. Cisco Networking Academy. Connecting Networks Companion Guide; Cisco Press: Indianapolis, IN, USA, 2014.
23. Eyal, I.; Sirer, E. Majority Is Not Enough: Bitcoin Mining Is Vulnerable. In Lecture Notes in Computer Science; Springer: Berlin,
Germany, 2014; Volume 8437, pp. 436–454.
24. Abdalzaher, M.S.; Seddik, K.; Elsabrouty, M.; Muta, O.; Furukawa, H.; Abdel-Rahman, A. Game Theory Meets Wireless Sensor
Networks Security Requirements and Threats Mitigation: A Survey. Sensors 2016, 16, 1003. [CrossRef]
25. Hu, J.; Reed, M.; Thomos, N.; AI-Naday, M.F.; Yang, K. Securing SDN-Controlled IoT Networks Through Edge Blockchain. IEEE
Internet Things 2021, 8, 2102–2115. [CrossRef]
26. Wang, T.; Bai, X.; Wang, H.; Liew, S.C.; Zhang, S. Game-Theoretical Analysis of Mining Strategy for Bitcoin-NG Blockchain
Protocol. IEEE Syst. 2021, 15, 2708–2719. [CrossRef]
https://github.com/amangkim/mlbgg
http://www.bitcoin.org
http://doi.org/10.1371/journal.pone.0163477
http://www.ncbi.nlm.nih.gov/pubmed/27695049
http://www.itfind.or.kr/publication/
http://dx.doi.org/10.1145/3132259
https://datatracker.ietf.org/doc/draft-irtf-cfrg-vrf/09/
https://datatracker.ietf.org/doc/draft-irtf-cfrg-vrf/09/
https://arxiv.org/abs/1903.07448
http://dx.doi.org/10.3390/s21072312
http://www.ncbi.nlm.nih.gov/pubmed/33810212
 https://whatis.techtarget.com/definition/Internet-of-Vehicles
https://news.bitcoin.com/ford-cryptocurrency-inter-vehicle-communication-system/
https://news.bitcoin.com/ford-cryptocurrency-inter-vehicle-communication-system/
http://dx.doi.org/10.1109/MCOM.2017.1700879
http://dx.doi.org/10.3390/math9020109
https://hackernoon.com/edge-computing-a-beginners-guide-8976b6886481
https://hackernoon.com/edge-computing-a-beginners-guide-8976b6886481
https://erpinnews.com/fog-computing-vs-edge-computing
https://erpinnews.com/fog-computing-vs-edge-computing
http://dx.doi.org/10.3390/s16071003
http://dx.doi.org/10.1109/JIOT.2020.3017354
http://dx.doi.org/10.1109/JSYST.2020.3004468
Axioms 2022, 11, 27 17 of 17
27. Abdalzaher, M.S.; Muta, O. A Game-Theoretic Approach for Enhancing Security and Data Trustworthiness in IoT Applications.
IEEE Internet Things 2020, 7, 11250–11261. [CrossRef]
28. Abdalzaher, M.S.; Seddik, K.; Muta, O. An effective Stackelberg game for high-assurance of data trustworthiness in WSNs.
In Proceedings of the 2017 IEEE Symposium on Computers and Communications (ISCC), Heraklion, Greece, 3–6 July 2017;
pp. 1257–1262.
29. Liu, Z.; Luong, N.C.; Wang, W.; Niyato, D.; Wang, P.; Liang, Y.C.; Kim, D.I. A Survey on Applications of Game Theory in
Blockchain. arXiv 2019, arXiv:1902.10865.
30. Kim, S.-K. Blockchain Governance Game. Comput. Ind. Eng. 2019, 136, 373–380. [CrossRef]
31. Kim, S.-K. Strategic Alliance for Blockchain Governance Game. Probab. Eng. Inf. Sci. 2021, 1–17. [CrossRef]
32. Dshalalow, J.H.; Ke, H.-J. Layers of noncooperative games. Nonlinear Anal. 2009, 71, 283–291. [CrossRef]
33. Dshalalow, J.H. First Excess Level Process, Advances in Queueing; CRC Press: Boca Raton, FL, USA, 1995; pp. 244–261.
34. Kim, S.-K. Design of stochastic hitless-prediction router by using the first exceed level theory. Math. Methods Appl. Sci. 2003, 28,
1481–1490. [CrossRef]
http://dx.doi.org/10.1109/JIOT.2020.2996671
http://dx.doi.org/10.1016/j.cie.2019.07.004
http://dx.doi.org/10.1017/S0269964820000406
http://dx.doi.org/10.1016/j.na.2008.10.072
http://dx.doi.org/10.1002/mma.626
	Introduction
	Multi-Layered Blockchain Governance Game
	Layer 1: BGG Stochastic Modelling
	Layer 0: SABGG Stochastic Modelling 
	Multiple Layered IoT-Server Network Design
	Multiple Layered IoT-Server Network Architecture
	Stochastic Optimization
	Model Simulations
	Preliminaries
	Optimizing Backup Nodes for the Layer 1
	Acceptance Rate of Strategic Alliance in the Layer 0
	Overall Performance Discussion of a Multi-Layered BGG
	Conclusions
	References