PETS: P2P Energy Trading Scheduling Scheme for Electric Vehicles in Smart Grid Systems
IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 23, NO. 9, SEPTEMBER 2022 14361
PETS: P2P Energy Trading Scheduling Scheme for
Electric Vehicles in Smart Grid Systems
Shubhani Aggarwal and Neeraj Kumar , Senior Member, IEEE
Abstract— Due to the lack of improper access control policies
and decentralized access controllers, security and privacy-aware
peer-to-peer (P2P) energy trading among electric vehicles (EVs)
and the smart grid is challenging. Most of the solutions reported
in the literature for P2P energy trading are based upon cen-
tralized controllers having various security flaws resulting in
their limited applicabilities in real-world scenarios. To handle
these issues, in this paper, we propose a P2P energy trading
scheduling scheme called as P2P Energy Trading Scheduling
(PETS) using blockchain technology. PETS is based on real-time
energy consumption monitoring for balancing the energy gap
between service providers (SPs), i.e., smart grids and service con-
sumers, i.e., EVs. In PETS, the Stackelberg game theory-based
1-leader multiple-followers scheme is proposed to depict the
interactions between EVs and the SP. The selection of the
leader among all SPs is made using a second-price reverse
auction. As per the announced energy price by the leader, EVs
manage energy consumption by minimizing their energy bills.
In PETS, on the leader’s side, we propose the Genetic algorithm
to maximize its profit. In contrast, on the followers’ side, i.e., EVs,
we use the Stackelberg Equilibrium to minimize their energy
bills. Simulation results demonstrate that the proposed PETS
scheme outperforms the existing state-of-the-art schemes using
various performance evaluation metrics. Specifically, it reduces
the peak-to-average ratio (PAR) by 12.5% of EVs’ energy load
in comparison to the existing state-of-the-art scheme.
Index Terms— P2P energy trading, scheduling, Stackelberg
game, genetic algorithm, electric vehicles, real-time pricing.
NOMENCLATURE
EVj Electric vehicles.
S PL Service provider as leader.
N Number of SPs.
ni Number of EVs.
ph Energy price in h hours.
pmin,max Minimum and maximum price by the S PL .
h ∈ H Time in hours.
Manuscript received 25 July 2021; revised 20 October 2021; accepted
9 November 2021. Date of publication 30 November 2021; date of current
version 12 September 2022. This work was supported by the TCS Innovation
Laboratory, New Delhi. The Associate Editor for this article was Z. Wei.
(Corresponding author: Neeraj Kumar.)
Shubhani Aggarwal is with the Department of Computer Science and
Engineering, Thapar Institute of Engineering and Technology, Patiala 147004,
India (e-mail: saggarwal20_phd17@thapar.edu).
Neeraj Kumar is with the Department of Computer Science and Engineering,
Thapar Institute of Engineering and Technology, Patiala 147004, India, also
with King Abdul Aziz University, Jeddah 21589, Saudi Arabia, also with the
School of Computer Science, University of Petroleum and Energy Studies,
Dehradun, Uttarakhand 248007, India, and also with the Department of
Computer Science and Information Engineering, Asia University, Taichung
41354, Taiwan (e-mail: neeraj.kumar@thapar.edu).
Digital Object Identifier 10.1109/TITS.2021.3127577
X j,EV Scheduling vector of energy consumption
of each EV .
γ j,EV ∈ H Beginning time.
β j,EV ∈ H End time.
αmin,max
j,EV Minimum and maximum energy needed
for consumption.
Bidi Auction bid price by S Pi .
Bidlowest Choose lowest bid from all S Ps.
E j,EV Total energy consumption.
Price() Energy pricing scheduling for charging
the EVs.
Energymax
h Maximum load capacity of S PL .
Ph Amount of energy provided in time “h”.
Costh Cost of giving energy by S PL .
SL Strategy space of S PL .
SFj Strategy space of EVj .
RFj Best response of EVs.
JL Pay function of S PL .
JFj Utility function for EVs.
f (x̄) Penalty function.
lengthb Length of binary bits.
Rc Crossover rate.
Rn Real numbers.
m Total constraints.
s Non-violated constraints.
PPeak Peak load of EVs.
PAvg Average load of EVs.
I. INTRODUCTION
THE traditional electric grids face several challenges such
as increased energy demands, limited energy resources,
expensive energy-generating processes, environmental pollu-
tion by the emission of C O2, and grid instability [1]. These
challenges create issues on the power grid’s scalability and
reliability, which in turn have Quality-of-Service (QoS) and
Quality-of-Experience (QoE) degradation for the end-users.
However, this conventional power grid system is improved
by the integration of distributed energy resources (DERs)
with efficient demand-side management (DSM) programs [2].
DSM programs are used for planning and monitoring the
activities of electric utilities to control and manage the energy
consumption at the end-users side [3], [4]. These programs
have reliable, secure, and efficient grid operations for the
future smart grid [5]. For example, real-time pricing changes
quickly in the energy trading market. Also, the usage and
1558-0016 © 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-3020-3947
14362 IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 23, NO. 9, SEPTEMBER 2022
deployment of EVs in the smart grid can increase the impor-
tance of DSM programs because EVs consume and store
energy in their batteries to share with the other EVs or the
grid to create an eco-friendly environment. They operate on an
electric motor, which needs energy generated from renewable
resources instead of an internal combustion engine that needs
fuel and coal (non-renewable). As mentioned in the report [6],
J.P. Morgan estimates that approximately 8.4 million EVs
will be on road across the globe by 2025. Therefore, it is
challenging to balance the energy demands of EVs in peak
hours with the existing DSM programs in the smart grid
systems [7]. Hence, there is a requirement of a reliable energy
trading scheme between EVs and the SPs to furnish the future
energy demands of EVs.
There are direct and indirect methods to control the energy
demands of EVs [8]. In the direct method, SPs control and
maintain the energy load based on the contract with the end-
users. It is the easiest method to control and manage the
energy demands, but there are some security and privacy issues
in it. In contrast, the indirect method is applied to different
energy prices during a particular day. In this method, EVs can
reduce their energy demands by deviating their negotiated load
into lower energy price hours such as time-of-use (ToU) and
real-time pricing. However, it is difficult to handle the negoti-
ated load of EVs in off-peak hours with current energy trading
scheduling schemes. So, in such a scenario, peer-to-peer (P2P)
energy trading scheduling can provide a unique solution to buy
and sell energy between EVs and the SPs in this scenario [9].
It consists of direct energy trading between EVs and the SPs
such that energy from DER is traded between EVs and the SPs.
However, sometimes EVs may not participate in buying energy
in the P2P network due to leakage of their private information
among peers in the network, which may create imbalance
of the energy gap. Moreover, the security and privacy of
the existing DSM programs is critical as energy exchanges
between EVs and the SPs are affected by cyber-attacks such as
false data injections, manipulation of load profiles of EVs, and
energy losses in smart grid systems [10]. Several researchers
discussed the security and privacy issues of EVs in smart
grid systems. Hence, they classified attacks based on integrity,
availability, accountability, and confidentiality. Moreover, the
existing proposals mainly focus on cyber-attacks or protecting
some particular components in smart grid systems based on
various centralized controllers having single point of fail-
ure. So, to handle the security and privacy preservation of
EVs in smart grid systems, there is a need to design a
distributed mechanism to provide efficient energy exchanges
between EVs and the SPs. In addition, P2P energy trading
must meet the requirements for security (prevent from adver-
saries, identity-preservation of EVs), reliability (preventing
data manipulation, no information leakage), and scalability
(to participate more EVs in the P2P energy trading). Hence,
designing a distributed P2P energy trading scheduling ensures
privacy and security to EVs can be possible by the usage of
“Blockchain Technology” [11]. It provides a secure platform
for EVs in P2P energy trading without the intervention of
centralized controllers. Also, EVs can directly connect with
Fig. 1. Schematic overview of PETS scheme.
the SPs for energy exchanges with privacy preservation to
ensure data immutability and transparency [12], [13]. From
the aforementioned discussions, in this paper, we propose
the PETS scheme between EVs and the SP using blockchain
technology.
A. Motivation
EVs play a vital role to balance the demand and supply for
energy trading in smart grid systems. While several conven-
tional energy trading solutions are present, such as centralized
key management schemes but a key limitation in many of these
solutions is the single point of failure. The trusted third party
can be targeted and successfully compromised by the attacker,
including a malicious insider. To address these challenges,
we state the potential of distributed secure energy trading
scheme in smart grid systems. The benefits of blockchain
technology are low transaction costs, faster transactions, trans-
parency, and immutability that have attracted attention from
researchers in different domains and for different applica-
tions. It provides a transparent solution, where any changes
to the blockchain or the transaction received in the public
wallet address are globally displayed by all communication
parties. Such changes are immutable, which means that the
transactions cannot be deleted or changed. Hence, we propose
a decision-making scheme based on Stackelberg game theory
for EVs and the SPs using blockchain technology. We propose
a second-price reverse auction to select the leader among all
SPs and model the interactions with EVs using the Stackelberg
game as 1-leader, multi-follower. In addition, we present the
analytical solution for payment minimization of EVs and the
Genetic algorithm for profit maximization of SPs. Fig. 1
outlines the schematic overview used to reach the objectives
of PETS scheme.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
AGGARWAL AND KUMAR: PETS: P2P ENERGY TRADING SCHEDULING SCHEME FOR EVs 14363
B. Contributions
Following are the main contributions of this paper.
• We propose a P2P energy trading scheduling, i.e., PETS
framework using blockchain for real-time energy con-
sumption between EVs and the SPs.
• A theoretical game-based model is proposed to explore
the interactions between EVs and the SP in smart grid
systems. We used a second price reverse auction to
select the leader among all SPs. Then, we presented
the Stackelberg game theory scheme as a 1-leader, multi-
followers, where S P is the leader and EV s are followers.
• Lastly, we use the Genetic algorithm to find the Stack-
elberg solution in smart grid systems. Simulation results
show the reduced energy bills of EVs and profit maxi-
mization of SPs.
C. Organization of the Paper
Rest of the paper is organized as follows. Section II dis-
cusses the summary of related work. The system model is
discussed in Section III. Section IV presents the proposed
PETS scheme. Simulation results and performance evaluation
are discussed in Section V. Finally, the paper is concluded in
Section VI.
II. RELATED WORK
In this section, we review the related work for P2P energy
trading in smart grid systems. Many research articles proposed
by the researchers for P2P energy trading into several sectors
[14]–[19] such as micro-grid [20], EVs [21], and distribution
networks [22].
Alam et al. [23] proposed a P2P energy trading model for
smart homes in the smart grid. They considered the Pareto
optimality to optimize and minimize the total energy cost
of the system. Aznavi et al. [24] proposed a P2P energy
trading model between EVs and the entities equipped with
solar energy generation. They used the dynamic pricing mech-
anism to increase the owner’s profit. Their simulation results
show a reduction of 23.24% in the total cost of prosumers.
Nguyen et al. [25] proposed a decentralized P2P energy
trading mechanism having EV-wireless charging-discharging
lanes. They described a privacy-preserving consensus protocol
for desired energy price and amount of EVs. Zhang et al. [26]
proposed joint energy trading and uncertainty in the energy
market. Their simulation results balance the photovoltaic
forecast error by 55.3% locally. Tushar et al. [27] proposed
a coalition game-based P2P energy trading and mid-market
rate pricing mechanism to ensure stability in the smart grid.
Similarly, Tushar et al. [28] proposed a P2P auction mecha-
nism for energy trading where the authors shared the storage
of energy between the shared facility controllers and the
community. Leong et al. [29] proposed a bidding strategy
based on a Bayesian game to ensure fair bidding in P2P energy
trading. Similarly, Faqiry et al. [30] proposed a double auction
mechanism to protect users’ private information in P2P energy
trading. They optimized the social welfare problem where
buyers aim to minimize their energy price and sellers aim to
maximize their energy consumption. Chai et al. [31] proposed
a Stackelberg game for P2P energy trading to maximize the
participants’ benefits. Similarly, Paudel et al. [32] proposed
a Stackelberg game model to find the interaction between
the utility companies and end-users to maximize the benefits
of both. Zhou et al. [33] proposed a pricing methodology
for electric vehicle chargig stations for the consumption of
renewable energy. The selection of Charging stations by the
EVs is based on charging price, distance and traffic congestion
information. Similarly, Amini et al. [34] proposed a distributed
consensus and innovations approach for optimal charging of
plug-in EVs in transportation electrification networks. Aggar-
wal et al. proposed a demand-response management scheme
for energy trading between EVs and the SPs to maximize the
social welfare maximization [35].
However, despite using P2P energy trading, the above-
mentioned implementations [29], [31], [32], [36] do not
provide a secure platform to share data and energy among
peers. Therefore, there is a possibility of leaking peers’
personal information and compromising the system’s reliabil-
ity. To address these security problems, we propose a P2P
energy trading scheduling, i.e., PETS scheme using blockchain
technology. It is a distributed ledger technology (DLT) where
transactions are recorded securely in a decentralized way.
It provides immutability, transparency, privacy, and security
to smart grid systems. Once the transactions are recorded on a
blockchain, there is no possibility of tampering with the trans-
actional data secured by cryptographic primitives [37]. From
these advantages, researchers have used this technology in P2P
energy trading in various sectors [12] such as intelligent trans-
portation [38], [39], vehicle-to-grid (V2G) [40], [41], smart
grid [42], [43], and smart homes [44] to maintain transparency
and trust in energy trading [45]. They designed the smart con-
tracts on the Ethereum platform for defining the energy trading
logic, including the auction mechanism [46], [47], game
theory [48]–[53], bargain theory [54], and incentive contract
theory [55]. Li et al. used the improved krill herd algorithm
to solve a mixed-integer programming-based problem between
EVs and power grids in energy trading. They implemented
the proposed model on Hyperledger Fabric and evaluated the
scalability and performance of the model [56], [57].
From the literature study, we have observed that blockchain
technology in P2P energy trading between EVs and the SPs
having game theory had not been widely used. Hence, we pro-
pose the PETS scheme between EVs and the SPs in smart grid
systems. It uses real-time pricing, game theory, and blockchain
to manage and optimise P2P energy trading. None of the
existing proposals have addressed the real-time pricing of EVs’
energy consumption in P2P energy trading. In contrast to the
existing proposals, the proposed PETS scheme mainly resolves
the following issues (i) minimization of EVs’ energy bills, (ii)
profit maximisation for SPs, (iii) improvement in scalability
issues, and (iv) balance the EVs’ energy load with a low PAR
value to provide security and privacy the energy transactions
between EVs and the SP. The comparative analysis of the
proposed PETS scheme with the existing schemes is described
as shown in Table I.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
14364 IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 23, NO. 9, SEPTEMBER 2022
TABLE I
COMPARATIVE ANALYSIS OF PETS SCHEME WITH THE EXISTING SCHEMES
III. SYSTEM MODEL
We have divided this section into two parts (i) Blockchain-
based P2P energy trading scheduling architecture and
(ii) problem formulation.
A. Blockchain-Based P2P Energy Trading
Scheduling Architecture
Fig. 2 presents the blockchain-based P2P energy trading
scheduling model in smart grid systems, where N is the
number of SPs as S P = (S Pi : ∀i ∈ N) and ni is the
number of EVs as EV = (EVj : ∀ j ∈ ni ); whereas, ni ⊆ N
and i, N = (1, 2, . . . , N). The energy information processing
network has data processors (DPs) to collect and transmit
energy data and act as distribution of nodes on the blockchain
network. In the system model, DPs are joined as point-to-point
communication in a distributed shared information node and
maintain the distributed ledger. Digital signatures are used
to provide security and privacy in a real-time P2P energy
trading interaction system on a blockchain [37]. It not only
assure effective and secure energy trading but also verifies
whether the energy trading between EVs and the SP is legal
and efficient.
In this model, EVj wants to buy an energy for charging
the battery from SPs. Firstly, SPs, i.e., S Pi submitted a
sealed-bid on a blockchain for selling the energy to EVs or
to take charge of EVs. Then, using a second-price reverse
auction based smart contract [58], the SP having lowest
bid among all SPs is selected to make it as the leader,
i.e., S PL is as shown in Algorithm 1. Secondly, to design
the energy trading interactions between EVj and the S PL ,
we use Stackelberg game theory having 1-leader (S PL ) and
multi-followers (EVj ).
Here, we define S PL strategy space, i.e., SL =
(p1, p2, . . . , ph), where ph represents the energy price in h
hours. We also define the pmin ≤ ph ≤ pmax , where pmin is
the minimum price that can be offered by the S PL and pmax is
the maximum price that S PL can offer in h ∈ H time. On the
Algorithm 1 Selection of the Leader
Input: N : The number of SPs requests for giving the energy
to EVs.
Output: S PL .
1: procedure FUNCTION(N)
2: for (i = 1; i ≤ N; i ++) do
3: Select the S Pi
4: Submit the auction bid price Bidi on the blockchain
network
5: Select the lowest bid, i.e., Bidlowest value using
second-price reverse auction
6: end for
7: Make S Pi corresponding to Bidlowest as Leader, i.e.,
S PL
8: end procedure
other hand, the price announced by S PL must be less than all
the other SPs on a blockchain (see Algorithm 1).
B. Problem Formulation
1) Optimal Real-Time Pricing Consumption for EVs- At Fol-
lower Level: In this section, we define an energy consumption
scheduling vector for each EV, i.e., EV ∈ EVj , j ⊆ N . Using
this, we can control the hourly use of energy of each EV by
defining the energy price. The scheduling vector of energy
consumption for each EV is as follows:
X j,EV = [x1
j,EV , x2
j,EV , . . . .., xh
j,EV ] (1)
where, h ∈ H j,EV = (1, 2, . . . , 24) and xh
j,EV ≥ 0 is the
j th EVs’ energy consumption at time h. So, the total energy
consumption of this EVj is represented as E j,EV . For a valid
scheduling interval, an EV needs h j,EV = (γ j,EV , . . . , β j,EV ),
where γ j,EV ∈ H is the beginning time and β j,EV ∈ H is the
end time. So, to satisfy the energy needs of EVs, we define
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
AGGARWAL AND KUMAR: PETS: P2P ENERGY TRADING SCHEDULING SCHEME FOR EVs 14365
Fig. 2. Blockchain-based P2P energy trading scheduling scenario.
the following:
β j,EV�
h=γ j,EV
xh
j,EV = E j,EV (2)
xh
j,EV = 0, ∀h ∈ H j,EV (3)
After determining the minimum energy needed αmin
j,EV and
the maximum energy needed αmax
j,EV of EVs, the energy con-
sumption for each EVs is between:
αmin
j,EV ≤ xh
j,EV ≤ αmax
j,EV , ∀h ∈ H j,EV (4)
So, the price optimization of all EVs is computed as follows:
min EV = min
H�
h=1
ph ×
⎛
⎝ �
EV∈EVj
xh
j,EV
⎞
⎠
s.t . C1 :
β j,EV�
h=γ j,EV
xh
j,EV = E j,EV ,
C2 : xh
ni ,EV = 0, ∀h ∈ H j,EV ,
C3 : αmin
j,EV ≤ xh
j,EV ≤ αmax
j,EV , ∀h ∈ H j,EV (5)
2) Profit Maximization Model for SPs- At Leader Level:
In this section, we define the model for profit maximization
of S PL by using the funds by subtracting the cost of energy
charged on S PL . Firstly, we discuss the cost model and then,
profit maximization is discussed. To determine the energy
price, we define the cost function of S PL as Costh(Ph) where,
Costh represents the cost of giving energy by S PL at time
h ∈ H and Ph represents the amount of energy provided to
all EVs in h hour. This function is a convex increasing function
for each h in Ph . So, the cost function is defined as follows:
Costh(Ph) = mh P2
h + qh Ph + rh (6)
where, mh ≥ 0, qh ≥ 0, rh ≥ 0 at each period of hour
time h ∈ H .
For each hour h ∈ H , the minimum price and maximum
price of the energy that S PL can offer is represented as
pmin ≤ ph ≤ pmax and the maximum load capacity of S PL
is ‘Energymax
h ’ defined on a blockchain network in h hour is
defined as follows:�
n∈N
�
a∈EVj
xh
j,a ≤ Energymax
h , ∀h ∈ H (7)
Then, the profit maximization problem of S PL is defined as:
max
� �
h∈H
ph ×
�
n∈N
�
a∈EVj
xh
j,a
−
�
h∈H
Costh
⎛
⎝�
n∈N
�
a∈EVj
xh
j,a
⎞
⎠�
s.t . C1 : pmin ≤ ph ≤ pmax
C2 :
�
n∈N
�
a∈EVj
xh
j,a ≤ Energymax
h , ∀h ∈ H, i, j ∈ N
(8)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
14366 IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 23, NO. 9, SEPTEMBER 2022
3) Stackelberg Game Model: In this section, we modeled
the interaction of EVs and S PL using Stackelberg game theory
as 1-leader, multi-followers. The S PL , i.e., leader’s strategy is
sL and its space is SL where as the strategy of EVs, i.e.,
follower’s is sFj and its space is SFj , where as j ⊆ N .
The S PL pay-off function is JL
	
sL , sF1 , sF2 , . . . , sFj
and
the utility function for EVs is JFj
	
sL , sFj
. Following steps
describe the Stackelberg game model in P2P energy trading
scheme.
1) For each strategy of S PL is sL ∈ SL N , EVs try to
minimize the payment function to get the best response
RFj (sL) as follows:
min
sFj ∈SFj
JFj (sL , sFj )=min
H�
h=1
ph×
⎛
⎝ �
a∈EVj
xh
j,a
⎞
⎠ (9)
where, sL , i.e., the strategy of S PL is given.
2) For S PL , it tries to maximize its objective function based
on the response from the EVs as follows:
max
sL∈SL
JL
	
sL , RF1(sL), . . . , RFj (sL)
= max
� �
h∈H
ph ×
�
n∈N
�
a∈EVj
xh
j,a
−
�
h∈H
Costh
⎛
⎝�
n∈N
�
a∈EVj
xh
j,a
⎞
⎠�
(10)
3) Let s∗L be the optimal strategy solution for P2P
energy trading problem and s∗Fj
= RFj (s
∗
L).	
s∗L , s∗F1
, s∗F2
, . . . , s∗Fj
.
It is called as Stackelberg game strategy (Equilibrium)
and the structure of Stackelberg game model is as shown
in Fig. 3.
IV. PETS: P2P ENERGY TRADING SCHEDULING SCHEME
The Stackelberg game has two sides: one is the follower
side and the other is the leader side. S PL represents the
leader and EVs represent the followers on the blockchain
network. Firstly, we find the best energy consumption using
the followers’ response function under the price given by
S PL . Secondly, we find the leader’s strategy by maximizing
the pay-off function based on the reaction function by EVs.
If the rational solution exists on both sides then, we can
find an optimal strategy for the Stackelberg game. But in
the proposed system, the response function of the followers
neither continuous nor differentiable. So, there is no systematic
solution exists on the leader side. Hence, we propose Genetic
algorithm instead of gradient-based algorithm to design a
decision-making process to get the Stackelberg solution.
A. Optimal Real-Time Energy Consumption
Scheduling for EVs
For all EVs, the payment minimization problem is defined
in Eq. 5, which is a linear programming problem. We design
a systematic solution for this payment minimization problem
as follows.
Fig. 3. The Stackelberg game model.
The payment minimization of problem Eq. 5 is redefined as
follows:
min
�
EV∈EVj
�
H�
h=1
ph × xh
j,EV
�
(11)
For this linear programming problem, the optimization
problem is calculated as follows:
min
�
EV∈EVj
fEV (xEV )
s.t . C1 : a ≤ gEV (xEV ) ≤ b. ∀EV ∈ EVj
C2 : hEV (xEV ) = c, ∀EV ∈ EVj (12)
and the optimal solution for this optimization problem is same
as Eq. 12 and is computed as:
min fEV (xEV )
s.t . C1 : a ≤ gEV (xEV ) ≤ b. ∀EV ∈ EVj
C2 : hEV (xEV ) = c, ∀EV ∈ EVj (13)
We decompose the payment minimization problem Eq. 11
of |EVj | into small problems, such that |EVj | is the number
of EVs used in EVj and is computed as follows:
min
H�
h=1
ph × xh
j,EV
s.t . C1 :
β j,EV�
h=γ j,EV
xh
j,EV = Eni ,EV , ∀EV ∈ EVj
C2 : xh
j,EV = 0, ∀h ∈ H j,EV , ∀EV ∈ EVj
C3 : αmin
j,EV ≤ xh
j,EV ≤ αmax
j,EV , ∀h ∈ H j,EV ,
∀EV ∈ EVj (14)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
AGGARWAL AND KUMAR: PETS: P2P ENERGY TRADING SCHEDULING SCHEME FOR EVs 14367
After that H = (γ j,EV , . . . , β j,EV ), xh
ni ,EV = 0, ∀h ∈
H j,EV , and ∀EV ∈ EVj , we represent the Eq. 14 as follows:
min
β j,EV�
h=γ j,EV
ph × xh
j,EV
s.t . C1 :
β j,EV�
h=γ j,EV
xh
j,EV = E j,EV , ∀EV ∈ EVj
C2 : αmin
j,EV ≤ xh
j,EV ≤ αmax
j,EV , ∀h ∈ H j,EV ,
∀EV ∈ EVj (15)
To solve the Eq. 15, the following steps are used.
• Step I: Assume Price(γ j,EV : β j,EV ) =
(pγ j,EV , . . . , pβ j,EV ) denotes the energy prices scheduling
for charging the EVs by S PL and M = γ j,EV - β j,EV +
1 represents the number of hours in the scheduling time
interval.
• Step II: Sort Price(γ j,EV : β j,EV ) in an ascending order
to get Price�(γ j,EV : β j,EV ). When energy prices are
low then, EVs consume more energy and vice-versa. So,
it is important to find an optimal energy consumption
scheduling for EVs under the Price�(γ j,EV : β j,EV ),
which is computed as follows:
x �j,EV (γ j,EV : β j,EV )
= 
αmax
j,EV , . . . , αmax
j,EV , x∗j,EV , αmin
j,EV , . . . , αmin
j,EV
�
,
whereas, αmin
j,EV ≤ x∗j,EV ≤ αmax
j,EV ,
If αmax
j,EV , . . . , αmax
j,EV = m then,
αmin
j,EV , . . . , αmin
j,EV = M − m − 1
Substitute, x �j,EV (γ j,EV : β j,EV ) into C1 of Eq. 15 to
compute the following:
m.αmax
j,EV + x ∗ j,EV+M − m − 1.αmin
j,EV = E j,EV (16)
By using, αmin
j,EV ≤ x∗j,EV ≤ αmax
j,EV , we have,
m = E j,EV − M.αmin
j,EV
αmax
j,EV − αmin
j,EV
(17)
whereas, [.] means capturing the nearest integer value.
Adding the value m to the Eq. 16, we get x∗ j,EV .
To get x j,EV (γ j,EV : β j,EV ) by using Price(γ j,EV :
β j,EV ), we sort the x �j,EV (γ j,EV : β j,EV ) inversely on
the basis of map between the Price(γ j,EV : β j,EV ) and
Price�(γ j,EV : β j,EV ). From this, we get the optimal
scheduling vector such as x j,EV =
	
x1
j,EV , x2
j,EV , . . . , xh
j,EV
,
whereas, h ∈ H j,EV and xh
j,EV = 0.
Algorithm 2 presents the analytical solution for payment
minimization problem.
B. Profit Maximization for the Leader SP
For S PL profit maximization, we use search-based Genetic
algorithm that includes selection, crossover, and mutation
operations on a present population and create an optimal or
near-optimal solution [59]. The profit maximization problem
Algorithm 2 Payment Minimization Problem
Input:
The energy prices for 24 hours: Price = (p1, p2, . . . , ph).
The minimum and maximum energy: αmin
j,EV and αmax
j,EV ,
respectively.
The daily energy consumption for EVs: E j,EV .
The time interval EVs are scheduled: H j,EV .
Output:
Optimal scheduling vector x j,EV
1: procedure FUNCTION(Price, αmin
j,EV , αmax
j,EV ,E j,EV ,H j,EV )
2: As per H j,EV , we get Price(γ j,EV : β j,EV ),
3: Sort Price(γ j,EV : β j,EV ) to get Price�(γ j,EV :
β j,EV ),
4: As per the Eqs. 16 and 17, we get x∗ j,EV and
x �j,EV (γ j,EV : β j,EV ),
5: Sort inversely x �j,EV (γ j,EV : β j,EV ) to get
x j,EV (γ j,EV : β j,EV ),
6: Using h ∈ H j,EV , we have xh
j,EV = 0 and then, we find	
x1
j,EV , x2
j,EV , . . . , xh
j,EV
,
7: return x j,EV
8: end procedure
for S PL is presented in Eq. 8, which is constrained optimiza-
tion so we use penalty function [60] as follows:
min f (x̄) x̄ ∈ Feasible ⊂ Rn
s.t . C1 : ai (x̄) = 0, i = 1, 2, . . . , m
C2 : b j (x̄) ≤ 0 j = m + 1, . . . , p (18)
There is a finite number of penalty functions used in Genetic
algorithms but we use the fitness evaluation function, which
provides an efficient solution as follows:
Evaluation(x̄) =
⎧⎪⎨
⎪⎩
f (x̄) i f x̄ ∈ Feasible
K −
s�
i=1
K
m
otherwise
(19)
whereas, m is the total constraints, s is non-violated con-
straints, and K is a constant with value 1 × 109 [60].
As defined in the Eq. 8, the profit maximization problem
is solved by the Genetic algorithm. The five phases of the
Genetic algorithm, i.e., (i) population (ii) fitness evaluation,
(iii)selection, (iv) crossover, and (v) bit flip mutation, which
finds an optimal solution for profit maximization problem
for S PL . A brief description of each phase of the Genetic
algorithm is described as follows.
1) Population: In this phase, we use a binary-coded rep-
resentation of the population in the PETS scheme.
As defined in Eq. 8, we set the parameters, i.e., 8 ≤
ph ≤ 14 cents and length of binary digits after the
decimal point is up to two places related to the values
and precision of the variables, i.e., 102. The length of
the binary bits is represented as lengthb and is set as 10.
Hence, we compute the pmax − pmin , which is defined
as follows:
2lengthb−1≤ pmax − pmin × 1/10−2 ≤ 2lengthb (20)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
14368 IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 23, NO. 9, SEPTEMBER 2022
So, for the PETS scheme, the value is defined as follows:
29 ≤ (14− 8)× 102 ≤ 210
29 ≤ 600 ≤ 210 (21)
In the PETS scheme, to handle the values and precision
of the variables up to two decimal point, the binary
representation of 10 bits is crucial. However, since
the interval of [8.00 14.00] only requires a maximum
of 600 numbers, employing the 10-bits representation
unavoidably results in, for a significant portion of the
samples.
2) Fitness Evaluation: In this phase, we evaluate the
objective function defined in Eq. 6 for each chromosome
produced in the population phase, which is defined as
follows.
Costh(Ph) = mh P2
h + qh Ph + rh (22)
3) Selection: In this phase, we use tournament selection
process for the binary representation based population
defined in the PETS scheme. First, we choose two
random individuals from the population and then, select
the better one into the mating pool. The steps involved in
the selection process is defined in the Algorithm 3. After
Algorithm 3 Selection Process
Input: Population (Pop1, Pop2, . . . , PopN ).
Size of tournament t = 2.
Output: Pop�1, Pop�2, . . . , Pop�N .
1: procedure FUNCTION(N)
2: for (i = 1; i ≤ N; i ++) do
3: Pop�i ← best individual chosen from
(Pop1, Pop2, . . . , PopN ) by picking ‘t’ individuals
randomly
4: end for
5: Return (Pop�1, Pop�2, . . . , Pop�N )
6: end procedure
the selection of the best individuals, we use elitism to
make a copy of these individuals in the next generation.
The steps involved for elitism in the selection process is
described in the Algorithm 4.
4) Crossover: In this phase, we describe the crossover
operation working in the PETS scheme. We set the
crossover rate ‘Rc’ is 0.25. The description of the
uniform crossover is described in the Algorithm 5.
5) Mutation: In this phase, we use bit-flip mutation for
binary representation of genes in the PETS scheme. It is
defined as one or more random bits are selected and flip
them.
Algorithm 6 describes the payment bill minimization by
maximizing the profit of the S PL . It is the main algorithm
of this paper where steps 2-6 show the interactions between
a leader, i.e., S PL and the followers, i.e., EV s. In step 3,
the S PL sets the 24-hour energy prices to the EVs having
strategy sL ,i . In step 4, EVs react to the prices by minimizing
the payment bill. Then, in step 5, based on the information of
Algorithm 4 Elitism Process
1: procedure FUNCTION(P)
2: Generate a random P population.
3: Evaluate the P population and choose the Cbest
chromosome.
4: Apply the operations, i.e., selection, crossover, and
mutation to get new P � population.
5: Then, choose the C �best and C �worst chromosome repre-
sents the best and worst, respectively.
6: if C �best ≤ Cbest then
7: C �worst = Cbest
8: else
9: No replacement
10: end if
11: Repeat from the step 2.
12: end procedure
Algorithm 5 Uniform Crossover
Input: Parent1 and Parent2 two given parents.
L represents the chromosome length.
Rc represents the crossover rate.
Output: Parent �1 and Parent �2 off springs.
1: procedure FUNCTION(L)
2: for (i = 1; i ≤ L; i ++) do
3: Choose a random number ‘m’ in the interval [0,1].
4: if m ≤ Rc then
5: Parent �1(i) = Parent2(i)
6: Parent �2(i) = Parent1(i)
7: else
8: Parent �1(i) = Parent1(i)
9: Parent �2(i) = Parent2(i)
10: end if
11: end for
12: Return (Parent �1 and Parent �2)
13: end procedure
energy consumption scheduling, S PL finds an optimal solution
to maximize the profit using fitness evaluation. Lastly, after
the finite number of iterations, an optimal profit price for S PL
and minimized payment bill having best response for EVs is
obtained.
C. Complexity Analysis
In this subsection, we discuss the time and space complexity
of the proposed Algorithms 1, 2, 3, 5 and 6.
1) Time Complexity: In Algorithm 1, there is one “for” loop
that contains N number of steps and takes O(N) time. All other
operations take O(1) time. So, the total time computation of
Algorithm 1 is O(N) + O(1) = (O(N)).
In Algorithm 2, all the operations and mathematical cal-
culations take O(1) time. So, the total time computation of
Algorithm 2 is O(1).
In Algorithm 3, there is one “for” loop that contains N
number of steps and takes O(N) time. All other operations
take O(1) time. So, the total time computation of Algorithm 3
is O(N) + O(1) = (O(N)).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
AGGARWAL AND KUMAR: PETS: P2P ENERGY TRADING SCHEDULING SCHEME FOR EVs 14369
Algorithm 6 Profit Maximization Problem
Input: N : The number of chromosomes in a population.
sL N : The strategy of the S PL denoted by each chromosome.
Output: Solve Profit maximization.
1: procedure FUNCTION(N)
2: for (i = 1; i ≤ N; i ++) do
3: The S PL plays a strategy sL and set the prices of
24-hour time by solving the ith chromosome.
4: The EVs EVj react on S PL ’s strategy, i.e., sL ,i by a
best response sFj,i = RFj (sL ,i ) and solve a payment min-
imization problem to find an optimal energy consumption
scheduling as in Eq. 5.
5: By fitness evaluation based on sL ,i and sFj,i , we find
to solve profit maximization problem as in Eq. 8.
6: end for
7: By using Selection, Crossover, and Mutation operations,
created a population of new chromosomes.
8: Goto steps 2 to 7 until the problem solves.
9: end procedure
In Algorithm 5, there is one “for” loop that contains L
number of steps and takes O(L) time. All other operations
take O(1) time. So, the total time computation of Algorithm 5
is O(L) + O(1) = (O(L)).
In Algorithm 6, there is only one “for” loop to evaluates the
fitness function and find profit maximization that takes O(N)
time. All other operations take O(1) time. So, the total time
computation of Algorithm 6 is O(N) + O(1) = (O(N)).
2) Space Complexity: In Algorithm 1, the “for” loop takes
O(N) space to compute the auction bid for S PL . All other
operations take O(1) space to compute. So, the total space
complexity of Algorithm 1 is O(N) + O(1) = (O(N)).
In Algorithm 2, all the operations and mathematical cal-
culations take O(1) space. So, the total space complexity of
Algorithm 2 is O(1).
In Algorithm 3, the “for” loop takes O(N) space to compute
the new individuals. All other operations take O(1) space to
compute. So, the total space complexity of Algorithm 3 is
O(N) + O(1) = (O(N)).
In Algorithm 5, the “for” loop takes O(L) space to compute
the off springs. All other operations take O(1) space to
compute. So, the total space complexity of Algorithm 5 is
O(L) + O(1) = (O(L)).
In Algorithm 6, the “for” takes O(N) space to find profit
maximization by minimizing the payment bills by EVs. All
other operations take O(1) space. So, the total space complex-
ity of Algorithm 6 is O(N) + O(1) = (O(N)).
V. PERFORMANCE EVALUATION
In this section, we discuss the numerical settings and
simulation results of the proposed PETS scheme.
A. Numerical Settings
In this section, we describe the simulation settings and para-
meters to evaluate the proposed PETS scheme. For simulation,
we considered the EVs charging data having 113 customers for
TABLE II
SIMULATION PARAMETERS
the period of January 2013 to June 2014 [61]. From this data
set, we received half-hourly KWh measurements from the EV
chargers. The scheduling period for the EVs are from 8 AM
to 8 AM the next day.
For the price of the energy given to the EVs by the SP,
we proposed a scheduling scheme having a cost function
of quadratic nature (Costh(Ph) = mh P2
h + qh Ph + rh ) is
redefined as in Eq. 6. Let us assume the values, i.e., qh = 0
and rh = 0 to evaluate the cost function for maximizing
the profit for SPs by minimizing the payment bills by EVs.
Also, we use mh = 5.5 × 10−4 cents during the day (8 AM
to 12 AM) and mh = 4.0 × 10−4 cents at night time (12 AM
to 8 AM the next day). In order to test the performance of the
proposed PETS scheme, we have used the Python program-
ming. The other parameters used for simulation are shown
in Table II.
B. Results and Discussions
In this section, we evaluate the proposed PETS scheme
in comparison to the existing state-of-the-art proposals using
various performance evaluation parameters.
1) Impact on EVs Energy Load: In this section, we have
observed that peak-to-average ratio (PAR) in the EVs load
using the proposed PETS scheme. It is clear from the solution
that the EV users are interested to reduce the payment bills
while the SP wants to balance the energy load with a low PAR
value.
Peak-to-average ratio (PAR): It is defined as the daily
energy load for EVs as EVj = (EV 1
j , EV 2
j , . . . , EV h
j ),
whereas h ∈ H = 24 hours. So, the total workload for all
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
14370 IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 23, NO. 9, SEPTEMBER 2022
Fig. 4. PAR of the EVs load.
Fig. 5. Convergence of best response in PETS.
EVs at each hour is calculated as follows:
Ph =
�
j=N
EV h
j (23)
Then, the peak and average load of EVs are computed as
follows [62]:
PPeak = max
h∈H
Ph (24)
PAvg = 1
H
	 �
h∈H
Ph
(25)
Hence, PAR is defined as follows:
P AR = PPeak
PAvg
= H ×maxh∈H Ph�
h∈H Ph
(26)
From Fig. 4, we have observed that in the proposed PETS
scheme, the average PAR in energy load of EVs reduces by
12.5% as compared to the existing scheme [51].
2) Impact on Energy Pricing: This section describes the
impact of the proposed PETS scheme on the optimal energy
pricing of SPs. Fig. 5 shows the concurrence of best response
Fig. 6. Optimal pricing at different periods of PETS with the existing scheme.
Fig. 7. Transaction matching rate of PETS with the existing scheme.
Fig. 8. Transaction efficiency curve of PETS with the existing scheme.
and the convergence of optimal energy pricing of SPs in the
proposed PETS scheme. It clearly shows that the proposed
scheme converges after ten iterations to one equilibrium
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
AGGARWAL AND KUMAR: PETS: P2P ENERGY TRADING SCHEDULING SCHEME FOR EVs 14371
Fig. 9. Average latency of PETS with the existing scheme.
Fig. 10. Throughput of PETS with the existing scheme.
point compared to the existing schemes, i.e., converges
within 15 iterations [49] and after 15 iterations [50]. Fig. 6
shows the prices decrease as the trading period increases. EVs
consume more energy at lower prices while SP sells more
at a higher price. This figure shows the equilibrium point
of price where both EVs and the SP found an acceptable
price. In comparison to the existing scheme [52], the proposed
PETS scheme have an unique equilibrium point with respect
to time as shown in Fig. 6. Hence, the evaluation based
on the proposed PETS scheme declares the capability and
better convergence in optimal pricing for SPs compared to
the existing schemes.
3) Impact on Transactions: This section describes the
impact of the proposed PETS scheme on energy transactions.
The comparison of two schemes for the transaction success
rate is as shown in Fig. 7. It shows that the transaction
rate is high when less number of EVs participate in P2P
energy trading scheduling. Compared to the existing scheme
[47], the proposed PETS scheme have a superior transaction
success rate. Also, in Fig. 8, when less number of EVs
Fig. 11. Energy consumption for different EVs using PETS.
have participated in P2P energy trading, the time taken to
complete the transaction is less in both the schemes. However,
with an increase in EVs, the transaction completion time
is also increasing. Compared to the existing scheme [47],
the proposed PETS scheme takes less time to complete the
transactions, which improves the transaction efficiency. From
the results obtained, it can be inferred that the proposed PETS
scheme supports fast and secure P2P energy trading.
4) Impact on Scalability: This section describes the impact
of the proposed PETS scheme on the scalability of the
system model. We simulated PETS at different transaction
rates from 100 to 700 tps with a message count of 50 and
batch processing time of 0.5 seconds. Compared to the existing
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
14372 IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 23, NO. 9, SEPTEMBER 2022
TABLE III
TIME-OF-USE TARIFF TIME BANDS
scheme [53], the proposed PETS scheme performs better in
scalability metrics, i.e., average latency and throughput, are
shown in Fig. 9 and Fig. 10, respectively.
5) Impact of Scheduling: In this section, we use ToU price
for EVs where we partition the time, i.e., 24 hours into three
different bands such as peak, off-peak and day for every
weekday [61]. The structure of ToU tariff bands is shown
in Table III.
We have tested the genetic algorithm on three test cases,
i.e., Case 1: 24, Case 2: 90, and Case 3: 91 EVs are reported
for evaluation. Fig. 11 clearly shows the daily payment of
EVs. It shows that with the deployment of the proposed PETS
scheme, the energy consumption of EVs is deviated from high
prices to low in comparison to non-scheduling EVs.
VI. CONCLUSION
This paper proposes the PETS scheme based on energy
consumption real-time pricing using blockchain technology
in smart grid systems. We have considered EVs to minimize
their energy payment bills and the SPs to maximize their
profit. The interactions between EVs and the SP have been
modelled using the Stackelberg game theory-based 1-leader,
multi-followers, where S PL is the leader and EVs are fol-
lowers. Firstly, we select the leader among all SPs using
a second-price reverse auction. Then, we used the Genetic
algorithm to obtain the Stackelberg solution. Simulation results
show that the proposed PETS scheme outperforms the existing
scheme with respect to the various performance evaluation
metrics. Currently, the PETS scheme focuses on one SP
serving multiple EVs. In future work, a competitive energy
market will be considered. Then, the Stackelberg game model
will be modified into a multi-leader, multi-follower game.
Moreover, we can consider a multi-stage Stackelberg game,
where EVs and SPs are the players. Moreover, we will also
explore the security and privacy issues with respect to the
energy trading between EVs and the SPs.
ACKNOWLEDGMENT
The authors would like to thank all the anonymous review-
ers for the valuable comments and suggestions that helps to
improve the article’s quality and presentation. They would also
like to thank TCS.
REFERENCES
[1] V. C. Gungor et al., “A survey on smart grid potential applications and
communication requirements,” IEEE Trans. Ind. Informat., vol. 9, no. 1,
pp. 28–42, Feb. 2012.
[2] X. Fang, S. Misra, G. Xue, and D. Yang, “Smart grid—The new and
improved power grid: A survey,” IEEE Commun. Surveys Tuts., vol. 14,
no. 4, pp. 944–980, Dec. 2011.
[3] J. S. Vardakas, N. Zorba, and C. V. Verikoukis, “A survey on demand
response programs in smart grids: Pricing methods and optimization
algorithms,” IEEE Commun. Surveys Tuts., vol. 17, no. 1, pp. 152–178,
Mar. 2014.
[4] A. Jindal, M. Singh, and N. Kumar, “Consumption-aware data analytical
demand response scheme for peak load reduction in smart grid,” IEEE
Trans. Ind. Electron., vol. 65, no. 11, pp. 8993–9004, Nov. 2018.
[5] M. Joung and J. Kim, “Assessing demand response and smart metering
impacts on long-term electricity market prices and system reliability,”
Appl. Energy, vol. 101, pp. 441–448, Jan. 2013.
[6] J. P. Morgan. Driving into 2025: The Future of Electric
Vehicles. Accessed: May 10, 2020. [Online]. Available:
https://www.jpmorgan.com/insights/research/electric-vehicles
[7] G. S. Aujla, N. Kumar, M. Singh, and A. Y. Zomaya, “Energy trading
with dynamic pricing for electric vehicles in a smart city environment,”
J. Parallel Distrib. Comput., vol. 127, pp. 169–183, May 2019.
[8] S.-G. Yoon, Y.-J. Choi, J.-K. Park, and S. Bahk, “Stackelberg-game-
based demand response for at-home electric vehicle charging,” IEEE
Trans. Veh. Technol., vol. 65, no. 6, pp. 4172–4184, Jun. 2015.
[9] A. Esmat, M. de Vos, Y. Ghiassi-Farrokhfal, P. Palensky, and
D. Epema, “A novel decentralized platform for peer-to-peer energy
trading market with blockchain technology,” Appl. Energy, vol. 282,
Jan. 2021, Art. no. 116123.
[10] K. Hatalis, C. Zhao, P. Venkitasubramaniam, L. Snyder, S. Kishore, and
R. S. Blum, “Modeling and detection of future cyber-enabled DSM data
attacks,” Energies, vol. 13, no. 17, p. 4331, Aug. 2020.
[11] S. Aggarwal and N. Kumar, “History of blockchain-blockchain
1.0: Currency,” Adv. Comput., vol. 121, pp. 147–169, 2021, doi:
10.1016/bs.adcom.2020.08.008.
[12] S. Aggarwal, R. Chaudhary, G. S. Aujla, N. Kumar, K.-K. R. Choo, and
A. Y. Zomaya, “Blockchain for smart communities: Applications, chal-
lenges and opportunities,” J. Netw. Comput. Appl., vol. 144, pp. 13–48,
Oct. 2019.
[13] S. Aggarwal and N. Kumar, “Basics of blockchain,” Adv. Comput.,
vol. 121, pp. 129–146, 2021, doi: 10.1016/bs.adcom.2020.08.007.
[14] K. Anoh et al., “Virtual microgrids: A management concept for peer-to-
peer energy trading,” in Proc. 2nd Int. Conf. Future Netw. Distrib. Syst.,
Jun. 2018, pp. 1–5.
[15] W. Tushar, T. K. Saha, C. Yuen, D. Smith, and H. V. Poor, “Peer-to-peer
trading in electricity networks: An overview,” IEEE Trans. Smart Grid,
vol. 11, no. 4, pp. 3185–3200, Jul. 2020.
[16] Z. Qiao et al., “Energy trading between microgrids individual cost min-
imization and social welfare maximization,” 2017, arXiv:1702.02748.
[17] T. Morstyn, A. Teytelboym, and M. D. McCulloch, “Bilateral contract
networks for peer-to-peer energy trading,” IEEE Trans. Smart Grid,
vol. 10, no. 2, pp. 2026–2035, Mar. 2018.
[18] Z. Li, J. Kang, R. Yu, D. Ye, Q. Deng, and Y. Zhang, “Consortium
blockchain for secure energy trading in industrial Internet of Things,”
IEEE Trans. Ind. Informat., vol. 14, no. 8, pp. 3690–3700, Aug. 2017.
[19] S. Aggarwal, N. Kumar, S. Tanwar, and M. Alazab, “A survey on energy
trading in the smart grid: Taxonomy, research challenges and solutions,”
IEEE Access, vol. 9, pp. 116231–116253, 2021.
[20] C. Zhang, J. Wu, M. Cheng, Y. Zhou, and C. Long, “A bidding system
for peer-to-peer energy trading in a grid-connected microgrid,” Energy
Proc., vol. 103, pp. 147–152, Dec. 2016.
[21] J. Kang, R. Yu, X. Huang, S. Maharjan, Y. Zhang, and E. Hossain,
“Enabling localized peer-to-peer electricity trading among plug-in hybrid
electric vehicles using consortium blockchains,” IEEE Trans. Ind. Infor-
mat., vol. 13, no. 6, pp. 3154–3164, Dec. 2017.
[22] F. Luo, Z. Y. Dong, J. Murata, Z. Xu, and G. Liang, “A distributed
electricity trading system in active distribution networks based on multi-
agent coalition and blockchain,” IEEE Trans. Power Syst., vol. 34, no. 5,
pp. 4097–4108, Sep. 2018.
[23] M. R. Alam, M. St-Hilaire, and T. Kunz, “An optimal P2P energy trading
model for smart homes in the smart grid,” Energy Efficiency, vol. 10,
no. 6, pp. 1475–1493, 2017.
[24] S. Aznavi, P. Fajri, M. B. Shadmand, and A. Khoshkbar-Sadigh, “Peer-
to-peer operation strategy of PV equipped office buildings and charging
stations considering electric vehicle energy pricing,” IEEE Trans. Ind.
Appl., vol. 56, no. 5, pp. 5848–5857, Sep. 2020.
[25] D. H. Nguyen, “Electric vehicle–wireless charging-discharging lane
decentralized peer-to-peer energy trading,” IEEE Access, vol. 8,
pp. 179616–179625, 2020.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1016/bs.adcom.2020.08.008
http://dx.doi.org/10.1016/bs.adcom.2020.08.007
AGGARWAL AND KUMAR: PETS: P2P ENERGY TRADING SCHEDULING SCHEME FOR EVs 14373
[26] Z. Zhang, R. Li, and F. Li, “A novel peer-to-peer local electricity market
for joint trading of energy and uncertainty,” IEEE Trans. Smart Grid,
vol. 11, no. 2, pp. 1205–1215, Mar. 2020.
[27] W. Tushar, T. K. Saha, C. Yuen, P. Liddell, R. Bean, and H. V. Poor,
“Peer-to-peer energy trading with sustainable user participation: A game
theoretic approach,” IEEE Access, vol. 6, pp. 62932–62943, 2018.
[28] W. Tushar et al., “Energy storage sharing in smart grid: A modi-
fied auction-based approach,” IEEE Trans. Smart Grid, vol. 7, no. 3,
pp. 1462–1475, May 2016.
[29] C. H. Leong, C. Gu, and F. Li, “Auction mechanism for P2P local
energy trading considering physical constraints,” Energy Proc., vol. 158,
pp. 6613–6618, Feb. 2019.
[30] M. N. Faqiry and S. Das, “Double auction with hidden user information:
Application to energy transaction in microgrid,” IEEE Trans. Syst., Man,
Cybern. Syst., vol. 49, no. 11, pp. 2326–2339, Nov. 2018.
[31] B. Chai, J. Chen, Z. Yang, and Y. Zhang, “Demand response manage-
ment with multiple utility companies: A two-level game approach,” IEEE
Trans. Smart Grid, vol. 5, no. 2, pp. 722–731, Mar. 2014.
[32] A. Paudel, K. Chaudhari, C. Long, and H. B. Gooi, “Peer-to-peer energy
trading in a prosumer-based community microgrid: A game-theoretic
model,” IEEE Trans. Ind. Electron., vol. 66, no. 8, pp. 6087–6097,
Aug. 2018.
[33] S. Zhou et al., “Dynamic EV charging pricing methodology for facilitat-
ing renewable energy with consideration of highway traffic flow,” IEEE
Access, vol. 8, pp. 13161–13178, 2019.
[34] M. H. Amini, J. Mohammadi, and S. Kar, “Distributed holistic frame-
work for smart city infrastructures: Tale of interdependent electri-
fied transportation network and power grid,” IEEE Access, vol. 7,
pp. 157535–157554, 2019.
[35] S. Aggarwal and N. Kumar, “A consortium blockchain-based energy
trading for demand response management in Vehicle-to-Grid,” IEEE
Trans. Veh. Technol., vol. 70, no. 9, pp. 9480–9494, Sep. 2021.
[36] N. Liu, X. H. Yu, C. Wang, C. J. Li, L. Ma, and J. Y. Lei, “Energy-
sharing model with price-based demand response for microgrids of
peer-to-peer prosumers,” IEEE Trans. Power Syst., vol. 32, no. 5,
pp. 3569–3583, Sep. 2017.
[37] S. Aggarwal and N. Kumar, “Cryptographic consensus mech-
anisms,” Adv. Comput., vol. 121, pp. 211–226, 2021, doi:
10.1016/bs.adcom.2020.08.011.
[38] R. Chaudhary, A. Jindal, G. S. Aujla, S. Aggarwal, N. Kumar, and
K. K. R. Choo, “BEST: Blockchain-based secure energy trading in
SDN-enabled intelligent transportation system,” Comput. Secur., vol. 85,
pp. 288–299, Aug. 2019.
[39] S. Aggarwal and N. Kumar, “Transportation system,” Adv. Comput.,
vol. 121, pp. 431–454, 2021, doi: 10.1016/bs.adcom.2020.08.022.
[40] S. Aggarwal, N. Kumar, and P. Gope, “An efficient blockchain-based
authentication scheme for energy-trading in V2G networks,” IEEE
Trans. Ind. Informat., vol. 17, no. 10, pp. 6971–6980, Oct. 2021.
[41] J. Anish, A. G. Singh, and K. Neeraj, “SURVIVOR: A blockchain based
edge-as-a-service framework for secure energy trading in SDN-enabled
vehicle-to-grid environment,” Comput. Netw., vol. 153, pp. 36–48,
Apr. 2019.
[42] S. Aggarwal and N. Kumar, “Smart grid,” Adv. Comput., vol. 121,
pp. 455–481, 2021, doi: 10.1016/bs.adcom.2020.08.023.
[43] A. Jindal, G. S. S. Aujla, N. Kumar, and M. Villari, “GUARDIAN:
Blockchain-based secure demand response management in smart grid
system,” IEEE Trans. Services Comput., vol. 13, no. 4, pp. 613–624,
Jul./Aug. 2019.
[44] S. Aggarwal, R. Chaudhary, G. S. Aujla, A. Jindal, A. Dua, and
N. Kumar, “EnergyChain: Enabling energy trading for smart homes
using blockchains in smart grid ecosystem,” in Proc. 1st ACM MobiHoc
Workshop Netw. Cybersecurity Smart Cities, Jun. 2018, pp. 1–6.
[45] A. Sadiq, M. U. Javed, R. Khalid, A. Almogren, M. Shafiq, and
N. Javaid, “Blockchain based data and energy trading in internet of
electric vehicles,” IEEE Access, vol. 9, pp. 7000–7020, 2021.
[46] N. Lasla, M. Al-Ammari, M. Abdallah, and M. Younis, “Blockchain
based trading platform for electric vehicle charging in smart cities,”
IEEE Open J. Intell. Transp. Syst., vol. 1, pp. 80–92, 2020.
[47] H. Liu, Y. Zhang, S. Zheng, and Y. Li, “Electric vehicle power trading
mechanism based on blockchain and smart contract in V2G network,”
IEEE Access, vol. 7, pp. 160546–160558, 2019.
[48] V. Hassija, V. Chamola, S. Garg, N. G. K. Dara, G. Kaddoum, and
D. N. K. Jayakody, “A blockchain-based framework for lightweight data
sharing and energy trading in V2G network,” IEEE Trans. Veh. Technol.,
vol. 69, no. 6, pp. 5799–5812, Jun. 2020.
[49] X. Zhang and S. Zhu, “Distributed energy trading with transmission
cost: A Stackelberg game approach,” Sci. China Inf. Sci., vol. 64, no. 2,
pp. 1–3, Feb. 2021.
[50] A. G. Jember, W. Xu, C. Pan, X. Zhao, and X.-C. Ren, “Game and
contract theory-based energy transaction management for internet of
electric vehicle,” IEEE Access, vol. 8, pp. 203478–203487, 2020.
[51] T. Ma, J. Wu, L. Hao, H. Yan, and D. Li, “A real-time pricing scheme for
energy management in integrated energy systems: A Stackelberg game
approach,” Energies, vol. 11, no. 10, p. 2858, 2018.
[52] K. Anoh, S. Maharjan, A. Ikpehai, Y. Zhang, and B. Adebisi,
“Energy peer-to-peer trading in virtual microgrids in smart grids: A
game-theoretic approach,” IEEE Trans. Smart Grid, vol. 11, no. 2,
pp. 1264–1275, Mar. 2020.
[53] H. T. Doan, J. Cho, and D. Kim, “Peer-to-peer energy trading in
smart grid through blockchain: A double auction-based game theoretic
approach,” IEEE Access, vol. 9, pp. 49206–49218, 2021.
[54] J. Ping, Z. Yan, and S. Chen, “A two-stage autonomous EV charging
coordination method enabled by blockchain,” J. Modern Power Syst.
Clean Energy, vol. 9, no. 1, pp. 104–113, 2021.
[55] X. Chen and X. Zhang, “Secure electricity trading and incentive contract
model for electric vehicle based on energy blockchain,” IEEE Access,
vol. 7, pp. 178763–178778, 2019.
[56] S. Aggarwal and N. Kumar, “Hyperledger,” Adv. Comput., vol. 121,
pp. 323–343, 2021, doi: 10.1016/bs.adcom.2020.08.016.
[57] Y. Li and B. Hu, “A consortium blockchain-enabled secure and privacy-
preserving optimized charging and discharging trading scheme for elec-
tric vehicles,” IEEE Trans. Ind. Informat., vol. 17, no. 3, pp. 1968–1977,
Mar. 2021.
[58] S. Aggarwal and N. Kumar, “Blockchain 2.0: Smart con-
tracts,” Adv. Comput., vol. 121, pp. 301–322, 2021, doi:
10.1016/bs.adcom.2020.08.015.
[59] D. Whitley, “A genetic algorithm tutorial,” Statist. Comput., vol. 4, no. 2,
pp. 65–85, Jun. 1994.
[60] A. F. Kuri-Morales and J. Gutiérrez-García, “Penalty function meth-
ods for constrained optimization with genetic algorithms: A statistical
analysis,” Math. Comput. Appl., vol. 10, no. 1, pp. 45–56, 2005.
[61] CLNR Customer Trials A guide to the Load & Generation
Profile Datasets August 2014. Accessed: May 10, 2021. [Online].
Available: https://www.networkrevolution.co.U.K./resources/project-
library/?find=A+guide+to+the+load+%26+generation+profile+datasets
[62] A.-H. Mohsenian-Rad, V. W. S. Wong, J. Jatskevich, R. Schober,
and A. Leon-Garcia, “Autonomous demand-side management based
on game-theoretic energy consumption scheduling for the future
smart grid,” IEEE Trans. Smart Grid, vol. 1, no. 3, pp. 320–331,
Dec. 2010.
Shubhani Aggarwal received the B.Tech. degree
in computer science and engineering from Punjabi
University, Patiala, India, in 2015, and the M.E.
degree in computer science from Panjab University,
Chandigarh, India, in 2017. She is currently pursu-
ing the Ph.D. degree with the Thapar Institute of
Engineering and Technology (Deemed to be Uni-
versity), Patiala. Some of her research findings are
authored or coauthored in top-cited journals, such
as the IEEE INTERNET OF THINGS, IEEE TRANS-
ACTIONS ON VEHICULAR TECHNOLOGY, Journal
of Network and Computer Applications (Elsevier), Computers and Security,
Mobile Networks and Applications, and Computer Communications. Her
research interests include blockchain, cryptography, the Internet of Drones,
and information security.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1016/bs.adcom.2020.08.011
http://dx.doi.org/10.1016/bs.adcom.2020.08.022
http://dx.doi.org/10.1016/bs.adcom.2020.08.023
http://dx.doi.org/10.1016/bs.adcom.2020.08.016
http://dx.doi.org/10.1016/bs.adcom.2020.08.015
14374 IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 23, NO. 9, SEPTEMBER 2022
Neeraj Kumar (Senior Member, IEEE) is cur-
rently working as a Full Professor with the Depart-
ment of Computer Science and Engineering, Thapar
Institute of Engineering and Technology (Deemed
to be University), Patiala, India. He is also an
Adjunct Professor with Newcastle University, U.K.;
Asia University, Taiwan; King Abdulaziz University,
Jeddah, Saudi Arabia; Charles Darwin University,
Australia; and the University of Petroleum and
Energy Studies, Dehradun, India. He has published
more than 400 technical research articles (DBLP:
https://dblp.org/pers/hd/k/Kumar_0001:Neeraj) in top-cited journals and con-
ferences which are cited more than 19000 times from well-known researchers
across the globe with current H-index of 76 (Google Scholar). He has guided
many research scholars leading to Ph.D. and M.E./M.Tech. degrees. His
research was supported by funding from various competitive agencies across
the globe. He has also edited/authored ten books with international/national
publishers, such as IET, Springer, Elsevier, and CRC. His research interests
include green computing and network management, the IoT, big data analytics,
deep learning, and cyber-security. He has received the Best Paper Award from
IEEE SYSTEMS JOURNAL in 2018 and 2021, IEEE ICC 2018, Kansas City,
in 2018, and the Best Researcher Award from Parent Organization every
year from last eight consecutive years. He has been the Workshop Chair
at IEEE GLOBECOM 2018, IEEE INFOCOM 2020, and IEEE ICC 2020,
and the Track Chair of Security and Privacy of IEEE MSN 2020. He is
also the TPC Chair and a member for various international conferences,
such as IEEE MASS 2020 and IEEE MSN2020. He is serving as an
Editor for ACM Computing Survey, IEEE TRANSACTIONS ON NETWORK
AND SERVICE MANAGEMENT, IEEE TRANSACTIONS ON SUSTAINABLE
COMPUTING, IEEE SYSTEMS JOURNAL, IEEE Network Magazine, IEEE
Communication Magazine, Journal of Networks and Computer Applications
(Elsevier), Computer Communication (Elsevier), and International Journal of
Communication Systems (Wiley). He has organized various special issues of
journals of repute from IEEE, Elsevier, Wiley, and Springer. He is a Highly
Cited Researcher in 2019 and 2020 in the list released by Web of Science
(WoS).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:06:20 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Black & White)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Tags
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 524288
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments true
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /AdobeArabic-Bold
    /AdobeArabic-BoldItalic
    /AdobeArabic-Italic
    /AdobeArabic-Regular
    /AdobeHebrew-Bold
    /AdobeHebrew-BoldItalic
    /AdobeHebrew-Italic
    /AdobeHebrew-Regular
    /AdobeHeitiStd-Regular
    /AdobeMingStd-Light
    /AdobeMyungjoStd-Medium
    /AdobePiStd
    /AdobeSansMM
    /AdobeSerifMM
    /AdobeSongStd-Light
    /AdobeThai-Bold
    /AdobeThai-BoldItalic
    /AdobeThai-Italic
    /AdobeThai-Regular
    /ArborText
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /BellGothicStd-Black
    /BellGothicStd-Bold
    /BellGothicStd-Light
    /ComicSansMS
    /ComicSansMS-Bold
    /Courier
    /Courier-Bold
    /Courier-BoldOblique
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /Courier-Oblique
    /CourierStd
    /CourierStd-Bold
    /CourierStd-BoldOblique
    /CourierStd-Oblique
    /EstrangeloEdessa
    /EuroSig
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Helvetica
    /Helvetica-Bold
    /Helvetica-BoldOblique
    /Helvetica-Oblique
    /Impact
    /KozGoPr6N-Medium
    /KozGoProVI-Medium
    /KozMinPr6N-Regular
    /KozMinProVI-Regular
    /Latha
    /LetterGothicStd
    /LetterGothicStd-Bold
    /LetterGothicStd-BoldSlanted
    /LetterGothicStd-Slanted
    /LucidaConsole
    /LucidaSans-Typewriter
    /LucidaSans-TypewriterBold
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MinionPro-Bold
    /MinionPro-BoldIt
    /MinionPro-It
    /MinionPro-Regular
    /MinionPro-Semibold
    /MinionPro-SemiboldIt
    /MVBoli
    /MyriadPro-Black
    /MyriadPro-BlackIt
    /MyriadPro-Bold
    /MyriadPro-BoldIt
    /MyriadPro-It
    /MyriadPro-Light
    /MyriadPro-LightIt
    /MyriadPro-Regular
    /MyriadPro-Semibold
    /MyriadPro-SemiboldIt
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /Symbol
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Webdings
    /Wingdings-Regular
    /ZapfDingbats
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 600
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 600
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 300
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 900
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.33333
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /Unknown
  /CreateJDFFile false
  /Description <<
    /ENU ()
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice