TIPS: Transaction Inclusion Protocol With Signaling in DAG-Based Blockchain
IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022 3685
TIPS: Transaction Inclusion Protocol With
Signaling in DAG-Based Blockchain
Canhui Chen, Xu Chen , and Zhixuan Fang
Abstract— Directed Acyclic Graph (DAG) is a popular
approach to achieve scalability of blockchain networks. Due to
its high efficiency in data communication and great scalability,
DAG has been widely adopted in many applications such as
Internet of Things (IoT) and Decentralized Finance (DeFi).
DAG-based blockchain, nevertheless, faces the key challenge of
transaction inclusion collision due to the high concurrency and
the network delay. Particularly, the transaction inclusion collision
in DAG-based blockchain leads to the revenue and throughput
dilemmas, which would greatly degrade the system performance.
In this paper, we propose “TIPS”, the Transaction Inclusion
Protocol with Signaling, which broadcasts a signal indicating
the transactions in the block. We show that with the prompt
broadcast of a signal, TIPS substantially reduces the transaction
collision and thus resolves these dilemmas. Moreover, we show
that TIPS can defend against both the denial-of-service and the
delay-of-service attacks. We also conduct intensive experiments to
demonstrate the superior performance of the proposed protocol.
Index Terms— Blockchain, game theory, performance analysis.
I. INTRODUCTION
BLOCKCHAIN plays an important role in many fields
such as finance, supply chain, and IoT services, thanks to
its advantages of decentralization, persistence, pseudonymity,
and auditability [1], [2], [3]. However, the poor performance of
(mostly) linear blockchains (e.g., Bitcoin, Ethereum) severely
limits the possible large-scale applications in practice [4].
To address this challenge, Directed Acyclic Graph (DAG) [5]
is introduced as an alternate structure to address the issue of
the scalability of blockchain. DAG-based blockchain allows
multiple blocks or transactions to be appended concurrently
without solving the forks, which achieves high efficiency
in data communication and great scalability. Due to these
Manuscript received 16 March 2022; revised 17 June 2022; accepted
30 June 2022. Date of publication 10 October 2022; date of current version
22 November 2022. This work was supported in part by the National Science
Foundation of China under Grant 61972432 and Grant U20A20159 and in
part by the Guangdong Basic and Applied Basic Research Foundation under
Grant 2021B151520008. (Corresponding author: Zhixuan Fang.)
Canhui Chen is with the Institute for Interdisciplinary Information Sciences
(IIIS), Tsinghua University, Beijing 100084, China (e-mail: chen-ch21@
mails.tsinghua.edu.cn).
Xu Chen is with the School of Computer Science and Engineering,
Sun Yat-sen University, Guangzhou 510275, China (e-mail: chenxu35@
mail.sysu.edu.cn).
Zhixuan Fang is with the Institute for Interdisciplinary Information Sci-
ences (IIIS), Tsinghua University, Beijing 100084, China, and also with
the Shanghai Qi Zhi Institute, Shanghai 200232, China (e-mail: zfang@
mail.tsinghua.edu.cn).
Color versions of one or more figures in this article are available at
https://doi.org/10.1109/JSAC.2022.3213357.
Digital Object Identifier 10.1109/JSAC.2022.3213357
properties, DAG-based blockchain has been widely adopted
in many IoT scenarios [6], [7], [8], [9], [10]. DAG-based
blockchain, nevertheless, faces the key challenge of transaction
inclusion collision [5]. Due to the high concurrency and the
network delay, miners usually do not have complete informa-
tion of the updated blockchain. Thus, miners often include
the same transactions in concurrent blocks, generating redun-
dant records in the blockchain. The collision in transaction
inclusion wastes the block capacity and severely degrades the
system performance [11].
Though DAG-based blockchain systems admit high concur-
rency in transaction process, the risk of transaction collision
indeed induces dilemmas on miners’ revenue and system
throughput. The revenue dilemma indicates the difficult sit-
uation in improving miners’ revenue, or, in achieving higher
transaction fees per block. When miners are packing transac-
tions into a block, the intuitive strategy is to select transactions
with high rewards (fees). But concurrent blocks with the
same set of high-fee transactions lead to the split of reward
among miners, which discourages miners from including these
transactions. Indeed, the theoretical analysis in [5] has verified
that miners would avoid transaction collision by choosing
transactions with lower fees. Such a negative impact would
also degenerate the profit efficiency and the quality of service
of the system, as the high value transactions will not be
processed with priority.
On the system level, the throughput dilemma also arises
and implies the difficulty in scaling up the system. Since the
network propagation delay is positively correlated with the
block size in the current DAG-based blockchain, packing more
transactions in a single block leads to a larger network propa-
gation delay. The increased network propagation time induces
more collisions and thus wastes the system throughput. In fact,
a similar dilemma in increasing block size has been observed
in linear blockchain systems where network propagation delay
leads to forking [12].
To tackle these issues, in this paper, we propose the Trans-
action Inclusion Protocol with Signaling (TIPS), where we
introduce a lightweight “signal” mechanism in the DAG-based
blockchain. In TIPS, when a miner mines a new block, he will
first broadcast a “signal” before broadcasting the block. The
other miners will adjust their transaction inclusion strategies
reacting to the “signal”. A signal has the following two
properties: (i) The size of the signal is small enough for quick
propagation in the network. (ii) The signal provides informa-
tion about transactions included in the corresponding block.
0733-8716 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-9943-6020
https://orcid.org/0000-0001-7979-4269
3686 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Specifically, we use a Bloom filter [13] to generate the
“signal” in the block header. The Bloom filter can indicate
whether a transaction is in the block. When a miner mines a
new block, it should first broadcast the block header as a signal
to the whole network. Since the size of the signal is small,
other miners can receive the signal in a short time. Based
on the signal, other miners can infer which transactions are
included in the new block with high probability. Thus, other
miners are able to avoid the transaction inclusion collision.
The introduction of TIPS can break down the revenue
dilemma and throughput dilemma. We show this by analyz-
ing the miners’ transaction inclusion strategy under TIPS.
We model the transaction inclusion process as a non-
cooperative game and investigate the equilibrium strategy.
We show that with the signal information, miners are able to
select high value transactions in equilibrium, which dissolves
the revenue dilemma. In the meantime, the signal in TIPS
effectively reduces the network propagation time, which allows
the implementation of a huge block size, and thus, breaks
the throughput dilemma. These results are supported by both
theoretical analysis and experimental validation. Beyond the
discussion on performance, we also investigate the security of
TIPS and show that TIPS can defend against existing classic
attacks.
The key contributions of the paper are listed as follows:
• We characterize the revenue dilemma and the throughput
dilemma of DAG-based blockchain systems. Specifically,
miners are suffering from low revenue no matter the
transaction inclusion strategy, while the system through-
put does not increase in the block size. We show this
is due to the transaction collisions in the DAG-based
blockchain system, and that a low network propagation
delay is the key to breaking the dilemmas.
• We propose a novel Transaction Inclusion Protocol with
Signaling (TIPS) in the DAG-based blockchain. TIPS
includes a Bloom filter in the block header, which serves
as a signal in the mining process and can indicate the
transaction included in the newly-mined block. By sepa-
rating the propagation/verification processes of the block
header and block body, TIPS can broadcast the block
header (signal) as soon as possible, which significantly
lowers the effective network propagation delay.
• We provide a thorough theoretical analysis of the perfor-
mance and security of TIPS. We adopt a game-theoretic
framework to show that at the Nash equilibrium, with the
prompt signal from TIPS, the system effectively lowers
the network propagation delay, and thus reduces trans-
action collisions. Besides, we also develop a DAG-based
blockchain simulator and conduct intensive experiments.
Both the theoretical analysis and experiment results show
that TIPS can substantially resolve both the revenue and
the throughput dilemmas.
The rest of the paper is organized as follows. In Section II,
we introduce the miners’ transaction inclusion game and
characterize the two dilemmas, namely, the revenue dilemma
and the throughput dilemma. In Section III, we introduce
TIPS, the transaction inclusion protocol with signaling in the
DAG-based blockchain. In Section IV, we show that TIPS
TABLE I
SUMMARY OF NOTATIONS
can break down the aforementioned dilemmas. In Section V,
we conduct intensive experiments to demonstrate the efficiency
of TIPS. In Section VI, we discuss the possible security threats
in the TIPS. In Section VII, we review related literature.
Section VIII concludes the paper with final remark.
II. TRANSACTION INCLUSION GAME AND THE DILEMMAS
In this section, we first investigate the system model and
the transaction inclusion game. We next show that there
are two dilemmas in the DAG-based blockchain, namely,
the revenue dilemma and the throughput dilemma. From the
miners’ perspective, the revenue dilemma indicates the difficult
situation in improving the miners’ revenue. From the system
perspective, the throughput dilemma reveals the difficulty in
scaling up the system. We list the key notations in Section II
and Section IV in Table I.
A. Transaction Inclusion Game
In this paper, we consider a DAG-based blockchain, where
the block generation process follows the Poisson process
with a rate λ. Following the common assumption in previous
literature (e.g., [5], [15]), we denote the maximum network
propagation delay for a block as Δ, which means all nodes
in the blockchain network can receive the newly-mined block
after Δ. Moreover, similar to [5], [15], we assume that miners
in the system are homogeneous in mining power and share
the identical transaction pool. The transaction pool includes
at most m transactions. Due to the block size limit, each
block can contain at most n transactions.1 To maximize
the mining revenue, the miner will decide his transaction
inclusion strategy and pick up some transactions from the
transaction pool and pack them into the mining block to earn
the transaction fees.
We denote a miner’s transaction inclusion strategy as p ∈ P.
Here P = {p|0 ≤ pi ≤ 1 and
∑m
i=1 pi = n} denotes
the set of transaction inclusion strategies, and pi denotes the
probability of including the transaction i in the new block.
Without loss of generality, we sort the transactions in the
1Without loss of generality, we can always assume that there are m
transactions in the pool and each block will contain n transactions. Practically,
if the transactions are insufficient, we can assume that there are dummy
transactions with zero transaction fees, which does not affect our analysis.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN 3687
transaction pool in descending order by their transaction fees,
where the transaction fee of the transaction i is denoted as fi.
Then we have f1 ≥ f2 ≥ · · · ≥ fm. As examples, we show
below three typical transaction inclusion strategies:
• Random inclusion (prand): p1 = p2 = · · · = pm = n
m .
• Random inclusion with priority (ppriority): p1 ≥ p2 ≥
· · · ≥ pm and p1
f1
= p2
f2
= · · · = pm
fm
.
• Top n (ptop): p1 = p2 = · · · = pn = 1 and pn+1 =
pn+2 = · · · = pm = 0.
Following the similar setting in [5], we model the miners’
transaction selection as a single-shot transaction inclusion
game [15], where each miner adopts his transaction inclusion
strategy to maximize his revenue. Since the coinbase transac-
tion reward is independent of the miner’s transaction selection,
for simplicity, we only consider the transaction fee reward in
the miner’s revenue.
The miner’s revenue is analyzed as follows. Consider a
miner A that finds and propagates a block, which includes
a transaction i. If ι more miners have successfully mined
a block with the same transaction i during the network
propagation period of miner A’s block, we assume that this
miner’s expected reward from this transaction i is fi/(ι + 1),
i.e., assuming an equal network advantage for all miners. Note
that such a model of probabilistic and homogeneous network
advantage during the propagation period is common in the
previous study (e.g., [5], [16]). Then the miner’s expected
reward is analyzed in the following lemma.
Lemma 1: The miner’s revenue on one block with transac-
tion inclusion strategy p given that all the other miners adopt
the strategy p′ is
R(p|p′) =
m∑
i=1
pifir(p′i|Δ),
where
r(p′i|Δ) =
(
1 − e−λΔp′
i
)
λΔp′i
.
The proof of Lemma 1 is shown in Appendix A. Besides,
we postpone all proofs of this paper into the Appendix. The
term fi · r(p′i|Δ) in Lemma 1 reflects the expected reward for
a miner to include transaction i when all other miners include
transaction i in their blocks with probability p′i, given network
propagation delay being Δ. Specially, when all miners adopt
the same transaction inclusion strategy p (i.e., the symmetric
case) and there is no futher confusion, we denote the miner’s
revenue as R(p) = R(p|p) for simplicity.
To study the stable transaction inclusion behavior of miners,
we first define the Nash equilibrium and approximate Nash
equilibrium of the transaction inclusion game below.
Definition 1: The transaction inclusion strategy p∗ is a
ξ-approximate Nash equilibrium of the transaction inclusion
game if
R(p∗) ≥ max
p∈P
R(p|p∗) − ξ.
Specially, when ξ = 0, i.e., R(p∗) ≥ maxp∈P R(p|p∗), the
transaction inclusion strategy p∗ is a Nash equilibrium.
The symmetric equilibrium in the single-shot transaction
inclusion game has been analyzed in [5], which is shown in
the following theorem.
Theorem 1 [5]: With the network propagation delay for the
whole block as Δ, the symmetric equilibrium strategy of the
transaction inclusion game is p∗(Δ), where
p∗i (Δ) =
⎧⎪⎨
⎪⎩
min{r−1
(
cl∗
fi
|Δ
)
, 1}, 1 ≤ i ≤ l∗,
0, l∗ < i ≤ m.
Also, we have
Fl(c) =
l∑
i=1
min{r−1(c/fi|Δ), 1} − n, ∀1 ≤ l ≤ m,
l∗ = max{l ≤ m|∀i ≤ l : Fi (fi) ≤ 0},
cl∗ is the root of Fl∗ .
B. Revenue Dilemma Analysis
As discussed in Section I, to achieve a high revenue,
miners are supposed to include transactions with high fees,
i.e., to adopt the “top n” strategy. However, as DAG-based
blockchain allows high concurrency of block generation, every
miner choosing high-fee transactions will result in severe
transaction inclusion collision, which will degrade miners’
revenue. This is the revenue dilemma due to the collision of
included transactions.
The equilibrium strategy in Theorem 1 is highly related to
the network propagation delay and is indeed a compromised
solution facing the revenue dilemma. We can find that the
equilibrium transaction inclusion strategy can be considered
as the “soft top n strategy”, since only the transaction with
top l∗ transaction fees might be included in a new block.
A large network propagation delay Δ in Theorem 1 will result
in a large l∗. Besides, when the l∗ is large, for example,
l∗ = m, the “soft top n strategy” performs like the random
strategy prand. Below, we show that the random strategy is a
ξ-approximate Nash equilibrium strategy, and ξ represents the
gap between the random strategy and the equilibrium strategy.
Theorem 2: The random strategy, i.e., prand is a
ξ-approximate Nash equilibrium, where
ξ = n
1 − e−λΔ n
m
λΔ n
m
(
1
n
n∑
i=1
fi − 1
m
m∑
i=1
fi
)
.
Specially, when Δ → ∞, the random strategy is the Nash
equilibrium.
For convenience, we denote y(Δ) = 1−e−λΔ n
m
λΔ n
m
. Note that
y(Δ) is monotonically decreasing in Δ, which implies that
the extra revenue from deviating from the random strategy
will decrease as the network propagation delay becomes larger.
Thus the equilibrium transaction inclusion strategy will lean
towards the random strategy. Since broadcasting the whole
block in the blockchain network takes a long time, the equilib-
rium strategy in the practical scenario is similar to the random
strategy. However, the random strategy ignores the difference
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
3688 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
between different levels of the transaction fees, resulting in the
dilemma where miners can not include transactions with high
transaction fees. This is the revenue dilemma in DAG-based
blockchain.
C. Throughput Dilemma Analysis
In this section, we study the throughput dilemma. The
system throughput is measured by transaction per second
(TPS). Intuitively, to achieve high throughput, the block
size should be as large as possible so as to include more
transactions in a block. However, a large block size will lead
to a large network propagation delay and result in lots of
transaction inclusion collisions, which will limit the system
throughput. This is the throughput dilemma in DAG-based
blockchain.
Here, we first analyze the block capacity utilization and
system throughput, and further characterize the throughput
dilemma in DAG-based blockchain We define the block capac-
ity utilization as the ratio of the number of unique transactions
included in the blocks and the number of total transactions
included in the blocks in long term. The system throughput is
measured by transaction per second (TPS). Then the system
throughput of the DAG-based blockchain is analyzed in the
following theorem.
Theorem 3: The block capacity utilization and the through-
put of the DAG-based blockchain with the transaction inclu-
sion strategy p and the network propagation delay Δ are
U(p) =
m −∑m
i=1(1 − pi)e−λΔpi
n(λΔ + 1)
, TPS(p) = λnU(p),
respectively.
From Theorem 3, we can find that to achieve a higher
system throughput, we should enlarge the block size so as
to include more transactions. However, if the block size is
increased, the corresponding network propagation delay Δ will
also increase, leading to a lower block capacity utilization,
which will further degrade the system throughput. On the
other hand, though decreasing the block size can reduce
the network propagation delay and thus increase the block
capacity utilization, there is only a small amount of transac-
tions can be included in one block, which limits the system
throughput. This is the throughput dilemma in DAG-based
blockchain.
III. TRANSACTION INCLUSION PROTOCOL
WITH SIGNALING
To tackle the dilemmas in DAG-based blockchain, we intro-
duce “TIPS”, i.e., the Transaction Inclusion Protocol with
Signaling. The key features of TIPS are (1) TIPS introduces
a signal to indicate the transactions included in the block.
(2) TIPS broadcast the signal earlier than the whole block.
As a baseline, we will compare TIPS with the standard
DAG-based blockchain protocol (i.e., without TIPS), where the
miners do not obtain any information of the newly-generated
block until they receive the whole block.
Fig. 1. Block propagation model in TIPS and the standard protocol.
A. Bloom Filter in Block Header
A Bloom filter [13] is a probabilistic data structure that
answers the query of “whether an element is a member of
a set”. It returns a binary answer, i.e., either “True” or “False”.
If the Bloom filter returns “False”, the element is definitely
not in the set. However, if the Bloom filter returns “True”, the
element is a member of the set with high probability.
As the most important feature, TIPS introduces a Bloom
filter in the header of each block to maintain the information
of transactions in this block. Thus, the Bloom filter can answer
the query of whether a transaction is in the corresponding
block quickly and with high probability.
Next, we examine the performance of a Bloom filter. The
key metric is the false positive rate of a Bloom filter, i.e., the
probability that the Bloom filter returns “True” but the element
is not a member of the set. Consider a Bloom filter with b bits
and h different hash functions. We assume that the block size
limit is n transactions per block. Thus, we can insert at most
n transactions into the Bloom filter associated with the block.
The probability of false positives of the Bloom filter with n
transactions is
ε =
(
1 − e−hn/b
)h
. (1)
It is worth mentioning that the representation of one
transaction in the Bloom filter always takes a fixed space
(i.e., b bits) regardless of the size of the transactions. The size
of a Bloom filter is drastically smaller than the size of the
original block body, due to the property of hash functions.
In the current Bitcoin network, the average block size is
1.2MB, the average transaction size is 500B, and the average
number of transactions in a block is 2500. As an example, for
a Bloom filter with b = 20000 bits and h = 5 hash functions,
the false positive probability is 2.17%, which is low enough
for practice. Meanwhile, the total size of the signal is only
2.5KB, which is less than 1% of the original block size and
is small enough to propagate through the whole network in a
short time.
B. Header-First Block Propagation
To broadcast the signal to the whole network as soon
as possible, we improve the block propagation model.
Figure 1 shows the block propagation model in TIPS and the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN 3689
standard protocol. We can find that in the standard protocol,
the node will start the propagation of a block (including the
block header and the block body) only after it receives and
verifies the whole block. On the contrary, TIPS decouples the
propagation/verification processes of the block header and the
block body. In TIPS, the node will broadcast the received
header once the verification is complete, without waiting to
receive the whole block body. Therefore, TIPS can broadcast
the block header to the whole network in a short time.
We explain the detailed block propagation model of TIPS
as follows. For a node A, upon receiving a message, there are
two possible cases:
1) When node A receives a new block header BHc of
block Bc, it validates BHc and checks whether the hash
value of the block header satisfies the PoW puzzle. If the
block header BHc is valid, node A should broadcast
BHc as soon as possible. Note that the validation
process for the block header is not time-consuming and
the size of the block header is small. Therefore, the block
header BHc can be propagated to the whole network in
a short time.
2) When node A receives a new block body BBc of block
Bc, it validates BBc as follows:
• Block Header Existence: If the miner did not
receive the corresponding block header BHc before,
he should reject the block body immediately since
he can not validate the PoW of the block.
• Bloom filter Validation: If the Bloom filter in the
block header does not match the transactions in the
block body, the block will be marked as “invalid”
and be rejected.
If the block body is valid, node A should broadcast BBc
as soon as possible.
Besides, TIPS also helps to optimize the block transmission
process from the following perspectives. (i) In TIPS, the
received signal can indicate the transactions in the newly-
mined but unreceived block. Therefore, TIPS allows the miners
to pre-verify the transactions that the signal indicates when
receiving the signal. In this way, the miners can speed up
the verification process when receiving the whole block, and
therefore speed up the block transmission process. (ii) TIPS
separates the verification/propagation processes of the block
header and the block body. Since the block header is an
identification of the whole block, the miners that received the
block header without the block body can try to pull the block
body from the connected neighbors instead of just passively
waiting for the block propagation, which can also speed up the
block transmission process. (iii) The independent header-first
propagation in TIPS also slightly accelerates the broadcast of
the block body, as the block body broadcast does not need to
wait for the neighbor’s confirmation of the received header.
C. Mining Process in TIPS
We denote the set of transactions hitting the Bloom filter
of block Bc, i.e., transactions that are reported to be included
in the block by the Bloom filter, as THc. We denote the set
of transactions that are actually included in the block body
Algorithm 1 Mining Process in TIPS
1 on Receive a block header BHc
2 if the block header BHc is valid then
3 Extract Bloom filter BLc from BHc
4 Select the transactions hitting BLc from transaction
pool, i.e., THc
5 Update the expected value of the transaction in THc.
Specifically, the expected value of transaction txi will be
εfi.
6 on Receive a block body BBc
7 if the block body BBc is valid and matches the block
header BHc then
8 Remove the transactions that are included in the block
body, i.e., TBc, from the transaction pool.
9 Update the expected value of the transactions that hit the
Bloom filter in block header but are not included in the
block body. Specifically, ∀i ∈ (THc/TBc), the expected
value of transaction i should be updated to fi/ε.
10 else
11 update the expected values of all the transactions that hit
the Bloom filter of the block header BHc to their
original transaction fee, that is, ∀i ∈ THc, the expected
value of transaction i should be updated to fi/ε.
12 on The block header BBc is expired
13 Mark the block header as “expired”.
14 Update the expected values of all the transactions that hit
the Bloom filter of the block header BHc to their original
transaction fee, that is, ∀i ∈ THc, the expected value of
transaction i should be updated to fi/ε.
15 on Mine a new block Bc
16 Broadcast the block header BHc to all nodes in the
blockchain network
17 Broadcast the block body BBc to all nodes in the
blockchain network
18 Remove the transactions in Bc, i.e., TBc, from the
transaction pool.
19 on Receive a transaction tx
20 Initiate the expected value of the transaction to be its
transaction fee
21 Add the transaction into the transaction pool.
22 if the transaction pool exceeds it limit then
23 Drop the transaction with the lowest expected value.
of block Bc as TBc. Since all included transactions will be
confirmed by the Bloom fitler, we have that TBc ⊂ THc.
Specifically, we have that E(|TBc|)/E(|THc|) = 1− ε, where
ε is the false positive probability of the Bloom filter in (1).
In this paper, we consider the following mining reward rule,
which is common in practices (e.g., [16]). If there are k miners
that include the same transaction i with fee fi in their blocks,
the transaction fee will be rewarded to the miner who first
mines the block. Note that our analysis technique applies to
more complicated rules.
The mining process is shown in Algorithm 1, visualized
in Figure 2. We use Δ to denote the propagation time of a
block, and τ to denote the propagation time of a block header
(in which the signal is included). Since the size of Bloom filter
is much smaller than a block body, we have τ 	 Δ. BLc is
the Bloom filter in BHc, THc is the set of transactions hitting
BLc in transaction pool, and TBc is the set of transactions
included in BBc.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
3690 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Fig. 2. Mining process in TIPS.
In the following, we specify the mining process, espe-
cially the transaction selection. In general, a miner maintains
an expected value for each transaction in his transaction
pool, and selects transactions for mining according to some
specific transaction inclusion strategies. In TIPS, fi denotes
the expected value of transaction i instead of its original
transaction fee. The expected value of the transaction reflects
the expected reward that a miner can obtain from including
this transaction in his block and will change during the mining
process. Specially, the initial expected value of the transaction
is exactly the corresponding transaction fee. The miner updates
his transaction pool and the expected value of transactions in
the following two cases.
The first case happens when the miner receives a block
header BHc (after the signal propagation delay τ ). If the block
header BHc is valid, the miner should update the expected
value of the transactions in THc. If a transaction i hits the
Bloom filter of a valid signal, its expected value should be
multiplied by ε, i.e., updated to εfi, because the Bloom filter
implies that the probability that the transaction i is not included
in the new block is only ε.
The second case happens when the miner receives a block
body BBc (after the block propagation delay Δ). If the block
body is valid and matches the block header, the miner should
remove the transactions that are included in the block body
from the transaction pool. Then, the miner needs to recover
the expected value of transactions due to false positive results
from the Bloom filters, i.e., transactions that hit the Bloom
filter but are not included in the block body. Denote U\V =
{x ∈ U and x /∈ V }, then for all transactions i ∈ THc\TBc,
the expected value of transaction i should be update to fi/ε.
However, if the block body is invalid, we should update the
expected values of all the transactions that hit the Bloom filter
of the block header BHi by dividing the false positive rate,
i.e., ∀i ∈ THi, the expected value of transaction i should be
updated to fi/ε.
There exists a hard-coded timeout for the block header [17].
When receiving a block header BHc, a miner updates the
expected transaction values accordingly, and starts a time
counting. If the miner has not received the corresponding block
body until a certain timeout period, the block header will be
marked as “expired”. Then, the miner will recover the expected
values of all the transactions that hit the Bloom filter of the
block header BHi, that is, ∀i ∈ THi, the expected value of
transaction i should be updated to fi/ε.
To mine a new block, the miner will select a subset of trans-
actions from the transaction pool based on certain transaction
inclusion strategies, which is mentioned in Section II-A and
will be further discussed in the following section.
D. Potential Cost of TIPS
In this section, we will discuss the potential cost of intro-
ducing TIPS in the DAG-based blockchain and show that the
extra computation overhead and the communication overhead
are insignificant.
1) Computation Overhead: In TIPS, the extra computation
overhead for the miners is from (i) maintaining the expected
value for the transactions in the pool, and (ii) constructing
and validating the Bloom filter in the block header. We will
then show that the computation overhead is negligible. First,
to maintain the expected value for the transactions, the miners
can use some lookup data structure, such as the hash map,
to update the transaction’s expected value in O(1). Second,
when mining a new block, the miners need to construct the
Bloom filter in the block header. When receiving a newly-
mined block, the miners also need to validate the Bloom filter,
and this validation can be done by constructing the Bloom
filter based on the transactions in the block body. We next
show that constructing the Bloom filter is computationally
cheap. For a block including 2000 transactions, the extra time
for constructing the Bloom filter with n = 20000 bits and
h = 5 hash functions, and validating it is only 6μs on a
PC with a CPU of Intel i7-1165G7. Therefore, we can claim
that the extra computation overhead for introducing TIPS is
insignificant.
2) Communication Overhead: In TIPS, the miners need to
broadcast the block header including the Bloom filter as the
signal before broadcasting the block body, which will result
in extra communication overhead. As shown in Section III-A,
the total size of the signal is only 2.5KB, which is less than
1% of the original block size. Besides, in practice, we can use
blockchain relay networks to further accelerate the propagation
of the block header [18]. Therefore, the extra communication
overhead for introducing TIPS is also insignificant.
IV. TIPS BREAKS DOWN THE DILEMMAS
In this section, we first the equilibrium of the transaction
inclusion game with TIPS and show that TIPS can lower
the effective network delay and thus make the equilibrium
transaction inclusion strategy approach to the top n strategy.
In this way, we show that TIPS can break the revenue and
throughput dilemma.
A. Lowering Effective Network Delay
We first study the equilibrium of the transaction inclusion
game with TIPS. The following theorem shows an interesting
result that when the false positive rate of the Bloom filter is low
enough, the equilibrium is similar to the case in Theorem 1,
but with the effective network delay drastically decreased to τ ,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN 3691
where τ is the network propagation delay for the signal in
TIPS.
Theorem 4: If the false positive probability of the Bloom
filter satisfies ε < fm
f1
, the symmetric equilibrium in TIPS is
p∗(τ), where
p∗i (τ) =
⎧⎨
⎩min{r−1
(
cl∗
fi
|τ
)
, 1}, 1 ≤ i ≤ l∗,
0, l∗ < i ≤ m.
Also, we have
Fl(c) =
l∑
i=1
min{r−1(c/fi|τ), 1} − n, ∀1 ≤ l ≤ m,
l∗ = max{l ≤ m|∀i ≤ l : Fi (fi) ≤ 0},
cl∗ is the root of Fl∗ .
Proof: As shown in Figure 2, once a miner successfully
mines a new block including a set of transactions T, he will
broadcast the signal immediately. Other miners will receive the
signal after the signaling propagation delay τ . If other miners
would not include any transaction in T after receiving the
signal, then Theorem 2 can be proved. Consequently, to prove
the above theorem, it is sufficient to show that when ε < fm
f1
,
it is not rational for other miners to include any transaction in
T after receiving the signal.
We consider the opposite holds, that is, other miners will
include at least one of the transactions in T in their block
with a a positive probability, even after they have received
the corresponding signal but not received the whole block
yet. In this situation, we denote the expected reward for
a miner to include transaction i given that other miners
include transaction i in their blocks with probability pi is
fi ·r̃∗(pi). Then we have r̃∗(p) < r(p|τ). Besides, r̃∗(·) is also
monotonically decreasing, so is its inverse function r̃∗−1(·).
We analyze the situations before receiving the signal (Situation
A) and after receiving the signal (Situation B) as follows.
1) Situation A: Before Receiving the Signal: The transac-
tions in the pool are sorted in descending order of their fees,
i.e., SA = {tx1, tx2, . . . , txm} with the corresponding sub-
script indexs of sA = {1, 2, . . . , m}. According to Theorem 1,
we know that pA is a symmetric equilibrium, where
pA
i =
⎧⎨
⎩min{r̃−1
(
cl∗
fsA(i)
)
, 1}, 1 ≤ i ≤ l∗A,
0, l∗A < i ≤ m,
and we have
FA
l (c) =
l∑
i=1
min{r̃−1(c/fsA(i)), 1} − n, ∀1 ≤ l ≤ m,
l∗A = max{l ≤ m|∀i ≤ l : FA
i
(
fsA(i)
) ≤ 0},
cl∗A is the root of FA
l∗ .
Therefore, a transaction i will be included only when i ≤ l∗A.
2) Situation B: After Receiving the Signal: The correspond-
ing signal will be broadcast to the whole network. Without
loss of generality, we consider transaction txĩ, where ĩ ≤ l∗A.
After the miner includes txĩ in its block and the corresponding
signal has been received by other miners, the expected value
of txĩ, i.e., eĩ, will be εfĩ. Since ε < fm/f1, we have
εfĩ ≤ εf1 < fm ≤ fl∗A+2.
Then the transactions in the pool sorted in descending order
of their expected values will be
SB = {tx1, ··, txĩ−1, txĩ+1, ··, txl∗ , txl∗+1, ··, txĩ, ··, txm},
with the corresponding subscript indexs of
sB = {1, 2, ··, ĩ − 1, ĩ + 1, ··, l∗A, l∗A + 1, ··, ĩ, ··, m}.
According to Theorem 1, we know that pB is a symmetric
equilibrium, where
pB
i =
⎧⎨
⎩min{r̃−1
(
cl∗
fsB(i)
)
, 1}, 1 ≤ i ≤ l∗,
0, l∗ < i ≤ m,
and we have
FB
l (c) =
l∑
i=1
min{r̃−1(c/fsB(i)), 1} − n, ∀1 ≤ l ≤ m,
l∗B = max{l ≤ m|∀i ≤ l : Fi (fi) ≤ 0},
cl∗B is the root of FA
l∗ .
Then we have
FB
l∗A+1(fsB(l∗A+1)) − FA
l∗A+1(fsA(l∗+1))
=
l∗A+1∑
i=1
min{r̃−1
(
fl∗A+1
fsA(i)
)
, 1} −
l∗B+1∑
i=1
min{r̃−1
(
fl∗B+1
fsB(i)
)
, 1}
= min{r̃−1
(
fl∗A+2
fl∗A+2
)
, 1} − min{r−1
(
fl∗A+1
fĩ
)
, 1}
= 1 − min{r̃−1
(
fl∗A+1
fĩ
)
, 1} ≥ 0
Therefore, we have FB
l∗A+1(fsB(l∗A+1)) > 0, which implies that
Index(txĩ) > l∗A + 1 > l∗B.
Thus, transaction txĩ would not be included in any block
after receiving the corresponding signal, which contradicts the
previous assumption. The proof is thus completed. �
In the condition ε < fm/f1 in Theorem 4, ε denotes the
false positive probability of the Bloom filter, f1 denotes the
highest transaction fee, and fm denotes the lowest transaction
fee. This condition implies that when the spread of the trans-
action fee is large, we need a Bloom filter with high precision,
i.e., low false positive probability, to achieve the equilibrium
strategy in Theorem 4. Intuitively, when ε < fm/f1, once a
transaction i with fee fi(fm ≤ fi ≤ f1) hits the Bloom filter,
its expected value will be updated to εfi, where εfi < fm.
In this case, other miners would avoid including transaction
i in their newly-mined block, and thus the equilibrium strat-
egy in Theorem 4 holds.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
3692 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Fig. 3. Distribution of transaction fees in Bitcoin.
Remark (TIPS Shortens Effective Network Delay): Com-
pared with the equilibrium in Theorem 1, we find that in
TIPS, after the time period τ of the signal propagation, the
transactions included in the newly-mined block will not be
included by any rational miner. Therefore, TIPS shortens the
effective network propagation delay from the block broadcast
time Δ to the drastically smaller signal broadcast delay τ
(τ 	 Δ), because as mentioned in Section III-A, the size
of the signal can be smaller than 1/100 the size of the whole
block. The equilibrium in Theorem 4 holds in TIPS when the
Bloom filter’s false positive is small enough, i.e., ε < fm/f1.
This implies that when the Bloom filter’s false positive is small
enough, the signal in TIPS can provide information which
is precise enough for miners to avoid transaction collisions.
We will next show that this condition on the Bloom filter is
not restrictive in real-world blockchain systems.
To see that the condition of ε < fm/f1 is practical,
we collect the data from Bitcoin [19] and investigate the
distribution of the transaction fees. Bitcoin admits one of the
most popular blockchain transaction markets, thus, we believe
that the transaction fee statistics in Bitcoin is representative
enough. We find that in realistic blockchain systems like
Bitcoin, there exist few transactions with unnecessarily high
transaction fees and few transactions with extremely low trans-
action fees. To avoid the impact of this abnormal transaction
fee, we focus on the 90th percentile and the 10th percentile
for transaction fees of the transactions included in the block,
which is visualized in Figure 3. We have that
ω = min
10th percentile
90th percentile
= 0.0304.
As mentioned in Section III-A, if we allocate 8 bits in the
Bloom filter for a transaction in the pool, i.e., b/n = 8,
the false positive probability ε = 0.0217, which is smaller
than ω defined above. This implies that the condition that the
false positive probability of the Bloom filter should be small
enough, i.e., ε < fm/f1, in Theorem 4, is almost always
satisfied in real-world blockchain systems. Hence, we consider
a scenario where the condition ε < fm/f1 is always satisfied
in the following discussions.
B. Approaching Top n Strategy
Here, we will show that by lowering the effective network
delay, the equilibrium transaction inclusion strategy in TIPS
approaches to the top n strategy, which makes it possible for
TIPS to break down the dilemmas in DAG-based blockchain.
We first show that the top n strategy in TIPS is an
η-approximate Nash equilibrium strategy, and η represents the
gap between the top n strategy and the equilibrium strategy.
Theorem 5: The top n strategy, i.e., ptop is an
η-approximate Nash equilibrium, where
η ≤
∣∣∣∣n
(
1 − 1 − e−λτ
λτ
)
fn
∣∣∣∣ .
The equation holds if and only if the transactions are homo-
geneous, that is, the transaction fees are the same. Specially,
when τ → 0, the top n strategy is the Nash equilibrium.
For convenience, we denote that g(τ) = 1 − 1−e−λτ
λτ . Note
that g(τ) is monotonically increasing in τ , which implies
that the extra revenue from deviating from the top n strategy
will decrease as the effective propagation delay becomes
smaller and the equilibrium transaction inclusion strategy will
gradually converge to the top n strategy. The effective network
propagation delay in TIPS is τ , which is drastically small
enough. Therefore, the top n strategy in TIPS is a good
approximation equilibrium strategy. Besides, we show that
when the effective network propagation delay τ is smaller
enough, the top n strategy in TIPS can be the unique equilib-
rium strategy, which is shown in the following theorem.
Theorem 6: The top n strategy, i.e., ptop is the unique Nash
equilibrium when
τ ≤ 1
λ
ϕ−1
(
fn+1
fn
)
, (2)
where ϕ(x) = 1−e−x
x , and ϕ−1(x) is its inverse function.
Theorem 5 and Theorem 6 show that the top n strategy is
very possible to be the equilibrium strategy in TIPS, and is
at least a good approximation transaction inclusion strategy,
because the effective network propagation delay in TIPS τ is
drastically small enough since we only need to broadcast a
small-size signal. Therefore, we adopt the top n strategy in
TIPS in the following analysis.
C. Breaking Down the Revenue Dilemma
The analysis above shows that breaking down the revenue
dilemma, i.e., achieving the top n strategy, is difficult, because
the top n strategy is the Nash equilibrium strategy only
if the network delay is very small. This is not practical in
the standard protocol (i.e., without TIPS) since broadcasting
the whole block in the blockchain network takes a long
time. However, TIPS drastically lowers the effective network
propagation delay, making the top n strategy feasible, which
breaks down the revenue dilemma.
Figure 4 shows the comparison of equilibrium strategies
with TIPS and the standard protocol, under a moderate para-
meter τ = 0.01Δ, while the Bloom filter is usually much
less than 1% of the size of the block body (See Section V
for detailed experiment set up). Figure 4 greatly supports
that the top n strategy is a good approximation transaction
inclusion strategy in TIPS, while the equilibrium strategy in
the standard protocol (i.e., without TIPS) gradually converges
to the random strategy when the network propagation delay is
large.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN 3693
Fig. 4. Equilibrium strategy with different network propagation delay.
To demonstrate the efficiency of TIPS under the revenue
dilemma, we investigate the performance of the equilibrium
strategy under TIPS as follows.
Definition 2: The efficiency of the equilibrium strategy of
the transaction inclusion game in the DAG-based blockchain
under the revenue dilemma is defined as the ratio of the
miners’ revenue R under the equilibrium strategy of the
transaction inclusion game and the highest miners’ revenue
achieved by any transaction inclusion strategy, which is shown
as follows:
Efficiency(R) =
Revenue of Equilibrium
Revenue of optimal strategy
. (3)
Then we have the following result, which can demonstrate
the high efficiency of TIPS.
Theorem 7: The efficiency of the equilibrium strategy of the
transaction inclusion game in the DAG-based blockchain with
TIPS under the revenue dilemma is
Efficiency(R) ≥ (1 − e−λτ )(
m
n � −∑�m
n �
k=0
(λτ)k
k! e−λτ
) .
According to Theorem 7, we have that limτ→0
Efficiency(R) = 1. This is because when τ → 0, the
top n strategy ptop is the unique Nash equilibrium as
shown in Theorem 6. Besides, based on Lemma 1, we have
limΔ=τ→0 R(ptop) =
∑n
i=1 fi, which implies that the miner
can also obtain the highest transaction fee reward. Thus TIPS
can achieve a near-optimal miners’ revenue, and therefore can
efficiently break down the revenue dilemma.
D. Breaking Down the Throughput Dilemma
TIPS breaks the throughput dilemma by avoiding collision
through quickly delivering a small signal to the network.
As mentioned in Section III-A, the size of the Bloom filter is
much smaller compared to the block size, and it is independent
to the transaction size. In this case, we can increase the block
size, while the broadcast time of the signal remains almost the
same. Since TIPS greatly shortens the effective network delay,
according to Theorem 3, a smaller network effective delay Δ
contributes to a high block capacity utilization and thus a high
system throughput. This makes it possible to contain more
transactions in the block (i.e., a larger n) without significantly
sacrificing the block capacity utilization. Thus, TIPS can break
down the throughput dilemma.
From Theorem 3, we know that the system throughput
increases with a large block size n. To further observe the
impact of TIPS on the system throughput, we consider the
limit of throughput, that is, the maximum throughput that
the system can achieve by increasing the block size, i.e.,
limn→∞ TPS(p, n). We denote Δ(n) as the network propa-
gation delay for a block of size n. As discussed in Section IV-
B, with the introduction of TIPS, the equilibrium transaction
inclusion strategy approach to the top n strategy, i.e., ptop.
Thus, we consider the limit of throughput when the miners
take the top n transaction inclusion strategy in the following
lemma.
Lemma 2: The limit of throughput of the DAG-based
blockchain with the top n transaction inclusion strategy ptop is
lim
n→∞ TPS(ptop, n) = lim
n→∞
1
dΔ(n)
dn
,
where dΔ(n)
dn is the derivative of Δ(n).
In Lemma 2, dΔ(n)
dn denotes the marginal network propaga-
tion time due to an extra transaction in the block. Empirical
results show that the marginal network propagation time for
each KB of data is a constant, e.g., 80ms for each extra KB
of Bitcoin block [20]. We compared the limit of throughput
of TIPS and the standard protocol below.
limn→∞ TPSTIPS(ptop, n)
limn→∞ TPSStandard(ptop, n)
=
limn→∞ 1
dτ(n)
dn
limn→∞ 1
dΔ(n)
dn
= lim
n→∞
dΔ(n)
dn
dτ(n)
dn
=
transaction size
ς bits
, (4)
where ς denotes the number of bits per transaction in the
Bloom filter. In (4), we see that the throughput ratio between
the standard protocol and TIPS is essentially the ratio between
the size of the needed broadcast for a marginal transaction.
Thus, the standard protocol is limited by the broadcast of the
additional transaction, while TIPS is limited only by the broad-
cast of its signal (with a much smaller data size). Practically,
a Bloom filter with ς = b/n = 8 can achieve a false positive
probability of 2.17%, which is practical enough in TIPS. While
the average transaction size in Bitcoin is 500 KB. Therefore,
theoretically, the ratio of the limit of throughput in TIPS and
the standard protocol can be as large as 5 × 105. This huge
ratio shows the potential of TIPS in breaking the throughput
dilemma.
Figure 5 shows that increasing the block size will drastically
reduce the block capacity utilization due to the increasing
transaction inclusion collision and that the low utilization
further limits the system throughput. However, by broadcasting
the almost accurate signal from the most recent header in
a short time, TIPS efficiently avoids transaction inclusion
collision, contributing to a high utilization, and thus greatly
boosts the system throughput.
To further demonstrate the efficiency of TIPS under the
throughput dilemma, we investigate the performance of the
equilibrium strategy of the transaction inclusion game with
TIPS as follows.
Definition 3: The efficiency of the equilibrium strategy of
the transaction inclusion game in the DAG-based blockchain
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
3694 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Fig. 5. Breaking down the throughput dilemma with TIPS.
under the throughput dilemma is defined as the ratio of the
TPS under the equilibrium strategy of the transaction inclu-
sion game and the highest TPS achieved by any transaction
inclusion strategy, which is shown as follows:
Efficiency(TPS) =
TPS of Equilibrium
TPS of optimal strategy
. (5)
Then we have the following results.
Theorem 8: The efficiency of the equilibrium strategy of the
transaction inclusion game in the DAG-based blockchain with
TIPS under the throughput dilemma is
Efficiency(TPS) ≥ (1 − e−λτ )(
m
n � −∑�m
n �
k=0
(λτ)k
k! e−λτ
) .
According to Theorem 8, we have that limτ→0
Efficiency(TPS) = 1, which is consistent with Theorem 3.
In Theorem 3, we have limΔ=τ→0 U(p) = 1, which implies
that TIPS can achieve an extremely high block capacity
utilization. Thus, TIPS can achieve near-optimal TPS, and
therefore can efficiently break down the throughput dilemma.
V. EXPERIMENT RESULTS
In this section, we conduct experiments to demonstrate the
performance of TIPS and validate our analysis.
We develop a DAG-based blockchain simulator in Python
using SimPy [21]. We implement the basic inclusive proto-
col [5] in the simulator, which is one of the most famous DAG-
based blockchain protocols. The implementation is sufficiently
representative because TIPS is a robust “add-on” design, which
can be applied to most of the current DAG-based blockchain
protocols, such as Conflux [22] and CDAG [11]. We have real-
ized all designed protocols in TIPS in the simulator, including
the block propagation model, the construction and validation
of the Bloom filter, the operation of maintaining the expected
value of the transactions in the transaction pool, and different
transaction inclusion strategies. We use a Python package
“pybloom-live” [23] as the implementation of the Bloom filter
Fig. 6. Utilization of different transaction inclusion protocols.
Fig. 7. TPS of different transaction inclusion protocols.
data structure in the TIPS. There are 10 homogeneous miners
in the simulators, which are connected to a P2P network.
Each miner will maintain a local version of the transaction
pool and will select some transactions in the pool based on
the given transaction inclusion strategy. With this simulator,
we will compare the system performance of the standard
inclusive protocol (without TIPS), and protocol with TIPS
under different transaction inclusion strategies.
The experimental configuration is as follows. We set the
block size to be 1MB, which is the current block size limitation
in Bitcoin. With the average transaction size being 500 bytes,
we put 2000 transactions in one block, i.e., n = 2000.
Besides, we assume the size of the transaction pool to be
m = 10000. The propagation delay for the whole block is
a random variable following the normal distribution with the
expectation as Δ = 10, and the propagation delay for the
signal is a random variable following the normal distribution
with the expectation as τ = 0.1. The block generation rate
of the DAG-based blockchain system λ ranges from 0.1 to 1.
The arrival of the transaction follows the Poisson process with
the transaction fee drawn uniformly from [0, 1].
In Figure 6 to Figure 9, results of ptop, ppriority, prand and
p∗ correspond to the cases when all miners adopt strategies
ptop, ppriority, prand and the equilibrium strategy in the
standard protocol, respectively. Meanwhile, results of p∗signal
and ptop
signal represent the cases when all miners adopt the equi-
librium strategy and the ptop strategy in TIPS, respectively.
From Figure 6, we can find that TIPS always achieves high
utilization and the utilization in TIPS is not sensitive to the
increase of the block generation rate. This is because in the
standard protocol, a higher block generation rate means that
more blocks will be generated during the network propagation
delay Δ, leading to more transaction inclusion collisions
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN 3695
Fig. 8. Miners’ revenue of different transaction inclusion protocols.
Fig. 9. Average transaction confirmation time under different transaction
inclusion protocols.
and lower block capacity utilization. This phenomenon is
also consistent with Theorem 3, where the utilization U is
monotonically decreasing with the generation rate λ when
other parameters are fixed. On the contrary, since TIPS
drastically lowers the effective network propagation delay,
it efficiently avoids the transaction inclusion collision and
greatly improves the utilization.
Figure 7 shows the system throughput (TPS) of different
transaction inclusion protocols, from which we find that the
throughput increases with the block generation rate. This is
consistent with Theorem 3, i.e., the system throughput (TPS)
is monotonically increasing with the block generation rate λ.
Besides, from Figure 7, we can also find that TIPS can always
achieve a higher system throughput compared to the standard
protocol, which demonstrates that TIPS effectively breaks
down the throughput dilemma. This is because TIPS greatly
improves the block capacity utilization as shown in Figure 6,
and therefore can process more distinct transactions than the
standard protocol.
Figure 8 shows that TIPS can achieve a significantly higher
miners’ revenue compared to the standard protocol. This is
because transaction inclusion collision will split the transaction
fee reward and thus lower the miners’ revenue. Besides, the
miners’ collision-avoiding transaction inclusion strategies in
the standard protocol tend to include cheap transactions, which
also hurts miners’ revenue. In the meantime, TIPS avoids
the transaction inclusion collision and encourages miners to
include the transactions with the highest fees, which improves
the miners’ revenue. This validates the claim that TIPS can
effectively break down the revenue dilemma.
Figure 9 shows the average transaction confirmation time
for transactions with different transaction fees. Firstly, the
average transaction confirmation time in TIPS is significantly
shorter than that of other protocols. This is because TIPS can
achieve a higher system throughput, which means that more
transactions can be processed in a short time. Secondly, TIPS
Fig. 10. Experimental results with different Bloom filters’ false positive
probabilities.
guarantees that the transactions with higher transaction fees
can be confirmed in a shorter time, since TIPS encourages the
miners to include the transactions with the highest fees. The
above two properties of TIPS together guarantee a good user
experience.
Besides, we further investigate the impact of the Bloom
filter’s false positive probability, which is shown in Figure 10.
We can find that a small Bloom filter has a high probability
of false positive, and can be broadcast to the network in a
short time, but will lead to the following drawbacks: (1) When
the false positive probability is high, there are a number of
transactions that hit the Bloom filter but are not included in
the block. These transactions need to wait for a long time
to be included in a block, so as some transactions with high
transaction fees, which will degrade the system performance
with lower miners’ revenue; (2) When the false positive
probability is high, the expected value of the transactions with
high transaction fee may be still high, and therefore, other
miners are motivated to include these transactions, which will
increase the transaction inclusion collision and degrade the
system throughput. This is the reason why the miners’ revenue
decreases gradually with the increase of the Bloom filter’s false
positive probability.
On the other hand, a Bloom filter with a low false positive
probability will correspondingly have a large size, leading
to a long time to broadcast the signal. Thus, it may have
a higher probability of transaction inclusion collision, which
will degrade the system throughput. Therefore, it is important
to figure out the optimal configuration of the Bloom filter.
As shown in Figure 10, the Bloom filter with false positive
probability as “0.02” can achieve the good performance.
VI. SECURITY DISCUSSIONS
In this section, we consider several possible security threats
caused by TIPS in DAG-based blockchain and show that TIPS
can maintain the system security in long term. Based on
the aforementioned design, we know that the miner can not
construct a misleading signal easily since each signal contains
a PoW in the block header. We are going to analyze two
possible security threats including the denial of service attack
and the delay of service attack.
A. Denial of Service Attack
There are two types of denial of service attacks in TIPS.
1) BDoS: [24]. BDoS is an incentive attack where an
adversary can manipulate miners’ incentives by broadcasting
the block header without publishing the block. However, the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
3696 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
“BDoS” attack is infeasible in TIPS due to the following
reason. Miners can still obtain a high reward without referring
to the latest block. Furthermore, there is a hard-coded timeout
for the block header, which can further defend against the
BDoS attack.
2) Signal Flood: Another possible attack is that the attacker
can broadcast a signal with lots of bits of Bloom filter set to 1
to lower the expected value of transactions, which can reduce
the miners’ expected reward (even less than the mining cost),
and motivate other miners to stop mining.
Luckily, we can defend against this attack efficiently by
checking the number of bits set to 1 in the Bloom filter and
rejecting the Bloom filter with too many bits set to 1 when
receiving the block header. To see this, we propose a detection
indicator of the Bloom filter, which is analyzed as follows.
After n transactions have been added to the Bloom filter, let q
be the fraction of the b bits that are set to 0, i.e., the number of
bits still set to 0 is qb. The probability that all h hash functions
find that their bits are set to 1 is (1 − q)h. Therefore, the
expectation of q is
E(q) =
(
1 − 1
b
)hn
.
According to [25], we have
P
(
E(q)−q ≥ ξ
m
)
≤ exp(−2ξ2/kn).
A Bloom filter with too many bits set to 1 will be rejected. Let
η be the probability of rejecting a valid Bloom filter. Let X be
the number of bits that are set to 1 in the Bloom filter. Then
the Bloom filter will be rejected if the following condition
holds:
X ≥ b − b
(
1 − 1
b
)hn
+
√
−1
2
hn ln η. (6)
As an example, for a Bloom filter with b = 20000 bits,
k = 5 hash functions and n = 2000 transactions included,
if the probability of rejecting a valid Bloom filter is 0.01%,
a Bloom filter will be rejected if the number of bits that are
set to 1 is greater than 9535, while the expectation of the
number of bits that are set to 1 for a valid Bloom filter is 7869,
which indicates the high sensitivity and accuracy of detection
indicator (6). Besides, this extra validation is computationally
cheap. Condition (6) can be pre-computed and store in the
memory. Even with simple implementation on a PC, the time
to check the validation of Bloom filter is 1 μs (i.e., 0.99ms
per 1000 Bloom filters on a single core). Therefore, TIPS can
efficiently defend against this attack.
B. Delay of Service Attack
The traditional delay of service attack in DAG-based
blockchain has been discussed in [5]. Different from the
traditional attack, there exists another delay of service attack
in TIPS.
In TIPS, the attacker can delay the successful record of
a transaction txi by continuously mining a valid block that
includes this transaction, but only broadcast the signal without
the whole block. This attack will motivate other miners to
avoid including the transaction txi in their blocks because
the signal sent by the attacker will lower the expected value
of transaction txi. However, once the signal is expired, other
miners will have the motivation to include the transaction txi
in the block again. Once other miners include the transaction
txi, this delay of service attack is terminated.
To achieve tractable analysis, we consider the following
scenario. The expiration time for a block header is T . The
fraction of the computing power of the attacker is α. To delay
the transaction as long as possible, the attacker needs to keep
mining new blocks containing the same transaction before the
signal is expired. Denote the expected delay time after the
attacker initiates this attack as E(D). If the attacker mines a
new block at time t < T before the previous signal is expired,
he can delay the transaction with extra E(D) time. Otherwise,
he can only delay at most the expiration time T . Then we have
E(D) =
∫ T
0
(t + E(D))αλe−αλtdt +
∫ ∞
T
Tαλe−αλtdt.
Solving the above equation, we have E(D) = (eαλT −1)
αλ .
Therefore, the expected delay time is
Delay(α) = αE(D) =
1
λ
(
eαλT − 1
)
,
which implies that the expected delay time for this attack is
limited, because generally the expiration time for the block
header T is small. From the attacker’s perspective, the attacker
can never profit from this delay of service attack. Besides,
the longer the attack goes on, the greater its cost. From the
user’s perspective, if a user finds his transaction delayed by this
attack, he can increase the transaction fee using the replace-
by-fee mechanism [26]. A higher transaction fee will motivate
other miners to include this transaction and compete against
the attacker. Therefore, we can conclude that this attack has an
insignificant impact and can be defended against efficiently.
VII. RELATED WORK
A. Transaction Inclusion Protocol
In the inclusive protocols [5], the authors model the trans-
action inclusion as a non-cooperative game with imperfect
information, and propose a myopic strategy, which can achieve
both high throughput and high quality of service levels.
Conflux [22] models the transaction inclusion as a cooperative
game and distributes the transaction fee based on Shapley
value [27]. The existing transaction inclusion protocols can be
considered as the compromise solution facing the dilemmas
in DAG-based blockchain. Along a different line, we propose
the novel protocol, TIPS, which can make a breakthrough in
these dilemmas and achieve near-optimal performance.
B. Header First Propagation
In the current blockchain systems like Bitcoin and
Ethereum, miners generally broadcast the block header before
broadcasting the whole block, which can help to avoid the
repeated propagation for the same block and thus speed
up the propagation process [20]. However, this header first
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN 3697
propagation might lead to the SPV mining, which will threaten
the system security [24]. In TIPS, we also propagate the
block header first but for different purposes. We embedded
the “signal” in the block header to avoid transaction inclusion
collision and boost the system performance. We also show that
TIPS can maintain system security in long term.
C. Bloom Filter in Blockchain
Bloom filter and its variant have been previously adopted
in the blockchain system as auxiliaries, especially in log
check-up. [28], [29]. In Bitcoin [30], the SPV node can help
to limit the amount of transaction data they receive from
full nodes to those transactions that affect their wallet while
maintaining privacy. In Ethereum [31], the Bloom filter of the
receipt logs can help nodes to access log data efficiently and
securely. Besides, Bloom filter and its variant like invertible
bloom lookup table [17] can help to compress the block size.
To compress the block in blockchain system, the false positive
probability of the Bloom filter in [17] and [32] should be small
enough, which will lead to a large size of Bloom filter. For
example, Graphene’s block announcements are 1/10 the size
of the whole blocks [32].
Different from previous work, the Bloom filter plays a
crucial role in the protocol, serving as a signal in TIPS. Given
the compact size of the Bloom filter-based signal, we can
broadcast the necessary information to the whole network in
a much shorter time. As mentioned in Section III-A, the size
of the signal in our protocol can be smaller than 1/100 the
size of the whole block. Furthermore, the mitigation of block
propagation mentioned in Section III-B also helps to broadcast
the signal faster.
D. Block Transmission Optimization
TIPS improves the system performance through drastically
shortening the effective network delay with the signaling
approach. There are several works focusing on optimizing
the block transmission delay, which also helps to shorten the
network delay. In [18], the authors propose an accelerated
method for block propagation by selecting proper neigh-
bors. [33] boosts blockchain broadcast propagation with tree
routing. Coded design [34] and compacting technology [32]
are also used to speed up the block propagation. In fact, TIPS
can be used along with these approaches to improve the system
performance of the DAG-based blockchain.
VIII. CONCLUSION
In this paper, we proposed a novel Transaction Inclusion
Protocol with Signaling, TIPS, which can explicitly resolve the
dilemmas in DAG-based blockchain and achieve near-optimal
performance while maintaining system security. Both the
theoretical analysis and the experimental results significantly
demonstrate the high efficiency of TIPS.
There are several interesting directions to explore in the
future, such as how to simplify the “signal” and make the
“signal” broadcast to the whole network faster. Besides, it is
interesting to analyze the dynamic game between different
miners with repeated interaction in the long run considering
the tit-for-tat property. Moreover, it is meaningful to provide
theoretical analysis for the challenging scenario where the
network is asynchronous and the miners are heterogeneous.
APPENDIX A
PROOF OF LEMMA 1
Proof: Since the block generation process follows the
Poisson process with rate λ, the probability of generating
k more blocks during the block propagation duration is
(λΔ)k
k! e−λΔ. Because other miners include transaction i in
their block with a marginal probability pi, the probability
that there are ι more miners including the transaction i is(
k
ι
)
pι
i(1 − pi)k−ι. Therefore, we have
r(pi|Δ)
=
∞∑
k=0
(
(λΔ)k
k!
e−λΔ
) k∑
ι=0
(
k
ι
)
pι
i(1 − pi)k−ι 1
ι + 1
=
∞∑
k=0
(
(λΔ)k
k!
e−λΔ
)
fi
pi(k + 1)
×
k∑
ι=0
(k + 1)!
(ι + 1)!(k − ι)!
pι+1
i (1 − pi)k−ι
=
∞∑
k=0
(
(λΔ)k
k!
e−λΔ
)
fi
pi(k + 1)
(
1 − (1 − pi)k+1
)
=
1
pi
∞∑
k=0
(
(λΔ)k
(k + 1)!
e−λΔ − (λΔ)k(1 − pi)k+1
(k + 1)!
e−λΔ
)
=
1
pi
(
1 − e−λΔ
λΔ
− e−λΔpi − e−λΔ
λΔ
)
=
(
1 − e−λΔpi
)
λΔpi
.
Then given that other miners include transaction i in
their blocks with the probability p′i, the miner’s revenue on
one block with strategy p is R(p|p∗) =
∑m
i=1 pifir(p∗i ).
Therefore, when all the miners adopt the symmetric transaction
inclusion strategy p, we know that the miners’ revenue is
R(p) = R(p|p) =
∑m
i=1 pifir(pi|Δ). The proof is thus
completed. �
APPENDIX B
PROOF OF THEOREM 2
Proof: Based on Lemma 1, the expectation of total
transaction fee reward of a miner who adopts inclusion strategy
p given that other miners adopt the strategy prand is
R(p|prand) =
m∑
i=1
pifir, where r =
1 − e−λΔ n
m
λΔ n
m
.
Then we have
max
p∈P
R(p|prand) − R(prand)
= R(ptop|prand) − R(prand)
= r
n∑
i=1
fi − n
m
r
m∑
i=1
fi
=
1 − e−λΔ n
m
λΔ n
m
(
1
n
n∑
i=1
fi − 1
m
m∑
i=1
fi
)
.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
3698 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Besides, we denote h(Δ) = 1−e−λΔ n
m
λΔ n
m
. Note that h(Δ)
is monotonically decreasing in Δ. Specially, we have that
limΔ→∞ h(Δ) = 0. Therefore, when Δ → ∞, the ran-
dom strategy is the Nash equilibrium. The proof is thus
completed. �
APPENDIX C
PROOF OF THEOREM 3
Proof: During the propagation time Δ, the miner who
mines the new block will broadcast it to the network, with
other miners keep mining without any notification of the latest
block. The probability of other miners to mine k more blocks
during the block propagation time is
P (k, Δ) =
(λΔ)k
k!
e−λΔ. (7)
For convenience, we define that
δi =
⎧⎪⎨
⎪⎩
1, the i-th transaction is included in one of
the blocks,
0, otherwise.
Then the probability that the i-th transaction in the transaction
pool is included by k + 1 miners in their blocks is
P (δi = 1, k + 1) = 1 − (1 − pi)
k+1
.
Therefore, the expected number of transactions included
during the propagation time with additional k blocks
emerging is
E(X, k) = E
(
m∑
i=1
P (δi, k)
)
=
m∑
i=1
(
1 − (1 − pi)
k+1
)
.
Therefore, the average block capacity utilization in long
term is
U(p) =
∑∞
k=0
(
(λΔ)k
k! e−λΔ
)
E(X, k)∑∞
k=0
(
(λΔ)k
k! e−λΔ
)
(k + 1)n
=
∑∞
k=0
(
(λΔ)k
k! e−λΔ
)∑m
i=1
(
1 − (1 − pi)
k+1
)
∑∞
k=0
(
(λΔ)k
k! e−λΔ
)
(k + 1)n
=
e−λΔ
∑m
i=1
∑∞
k=0
(
(λΔ)k
k! − (1−pi)(λΔ(1−pi))
k
k!
)
n(λΔ + 1)
=
m −∑m
i=1(1 − pi)e−λΔpi
n(λΔ + 1)
.
Thus, the throughput of the DAG-based blockchain is
TPS(p) = λnU(p) =
λ
(
m −∑m
i=1(1 − pi)e−λΔpi
)
(λΔ + 1)
.
The proof is thus completed. �
APPENDIX D
PROOF OF THEOREM 5
Proof: Based on Lemma 1, the expectation of total
transaction fee reward of a miner with transaction inclusion
strategy p, given other miners adopt the strategy ptop, is
R(p|ptop) =
1 − e−λτ
λτ
n∑
i=1
pifi +
m∑
i=n+1
pifi.
If the miner adopts the top n strategy, his expected
reward is
R(ptop) = R(ptop|ptop) =
1 − e−λτ
λτ
n∑
i=1
fi.
Therefore, the extra reward that miner can obtain from devi-
ation is
max
p∈P
R(p|ptop) − R(ptop)
≤ max
{
nfn+1−n
1 − e−λτ
λτ
fn, 0
}
≤ max
{
n
(
1 − 1 − e−λτ
λτ
)
fn, 0
}
.
We denote that g(τ) = 1 − 1−e−λτ
λτ . Note that g(τ)
is monotonically increasing in τ . Thus we have limτ→0
g(τ) = 0. Therefore, when τ → 0, the top n strategy is the
Nash equilibrium. The proof is thus completed. �
APPENDIX E
PROOF OF THEOREM 6
Proof: To prove that the top n strategy is the equilibrium
strategy, we only need to prove that given that other miners
adopt the top n strategy, the best response of the miner is
exactly the top n strategy. Besides, when fixing other miners’
strategies, there exists a pure strategy that can be the best
response. Without loss of generality, we consider the scenario
where one miner deviates from the top n strategy, and selects
the transaction set B, while other miners adopt the top n
strategy and select the transaction set A = {1, 2, . . . , n}. Then
we have |A| = |B| = n. Besides, we denote that n1 = |A∩B|,
and n2 = |A/ (A ∩ B)|. Thus, we have n1 + n2 = n. Then
the expected total transaction fee reward for the miner who
deviates from the top n strategy and includes the transaction
set B is
Reward(B) = Tx(B/(B ∩ A))
+
∞∑
k=0
(
(λτ)k
k!
e−λτ
)
Tx(B ∩ A)
k + 1
= Tx(B/(B ∩ A)) + Tx(B ∩ A)
1 − e−λτ
λτ
≤
n2∑
i=1
fn+i +
1 − e−λτ
λτ
n1∑
i=1
fi,
and the equality holds when S ∩ P = {1, 2, . . . , n1} and
S/(S ∩ P) = {n + 1, n + 2, . . . , n + n2}.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN 3699
Since ϕ(x) is monotonically decreasing, when condition (2)
holds, we have
1 − e−λτ
λτ
≥ fn+1
fn
.
Besides, since fi+1 ≤ fi, ∀i ∈ {1, 2, . . . , m − 1}, we have
max
n1=0,1,2,...,n
∑n−n1
i=1 fn+i∑n−n1
i=1 fn1+i
=
fn+1
fn
.
Therefore, when condition (2) holds, we have
n2∑
i=1
fn+i ≤ 1 − e−λτ
λτ
n2∑
i=1
fn1+i,
which implies that
n2∑
i=1
fn+i +
1 − e−λτ
λτ
n1∑
i=1
fi ≤ 1 − e−λτ
λτ
n∑
i=1
fi.
Therefore, we have Reward(B) ≤ Reward(A), which
implies that R(ptop) ≥ maxp∈P R(p|ptop). Thus, the top
n strategy is a Nash equilibrium under the condition (2).
Furthermore, we can find that the top n strategy strictly
dominates other strategies. Therefore, it is the unique Nash
equilibrium. �
APPENDIX F
PROOF OF THEOREM 8
Proof: For convenience, we denote p∗ as the equilibrium
strategy in the transaction inclusion game. Since the utiliza-
tion of blocks could not greater than 1, i.e., Uoptimal ≤ 1,
we have
TPSoptimal = λnUoptimal ≤ λn.
Besides, the TPS of the equilibrium strategy is greater or equal
to the TPS of the top n strategy, ptop, then we have
TPS(p∗) ≥ TPS(ptop) =
λn
λτ + 1
.
Therefore, we have
Efficiency(TPS) =
TPS(p∗)
TPSoptimal
≥
λn
λτ+1
λn
=
1
λτ + 1
.
The proof is thus completed. �
APPENDIX G
PROOF OF LEMMA 2
Proof: For the top n transaction inclusion strategy,
we have that p1 = p2 = · · · = pn = 1 and pn+1 = pn+2 =
· · · = pm = 0. According to Theorem 3, we have
lim
n→∞TPS(ptop, n)
= lim
n→∞
λ
(
m −∑m
i=1 λ(1 − pi)e−λΔ(n)pi
)
(λΔ(n) + 1)
= lim
n→∞λ
(
m −
m∑
i=1
λ(1 − pi)e−λΔ(n)pi
)
/(λΔ(n) + 1)
= lim
n→∞
λ
(λΔ(n) + 1)
(
m −
n∑
i=1
λ(1 − 1)e−λΔ(n)1
−
m∑
i=n+1
λ(1 − 0)e−λΔ(n)0
)
= lim
n→∞
λn
λΔ(n) + 1
=
1
dΔ(n)
dn
(Using the L’Hospital’s rule)
The proof is thus completed. �
APPENDIX H
PROOF OF THEOREM 7
Before proving Theorem 7, we first introduce a new metric
“Fee Service Rate” (FSR), and then show the relation between
the miners’ revenue and FSR, finally we can prove Theorem 7
through the analysis of FSR.
Fee service rate (FSR) is defined as the total transaction fee
that the blockchain system processes per second. A high FSR
implies a high system profit and a good market efficiency in
the blockchain system.
Proposition 1: The fee service rate of the DAG-based
blockchain given the transaction inclusion strategy being p
and the network propagation delay of a block being Δ is
FSR(p) =
1
Δ
m∑
i=1
fi
(
1 − e−λΔpi
)
, (8)
where λ is the block generation rate in the blockchain system.
Proof: The expectation of the total transaction fees of the
transactions included in blocks on the condition that there are
k blocks emerging during the network propagation duration is
E(Y, k) = E
(
m∑
i=1
P (δi, k)fi
)
=
m∑
i=1
(
1 − (1 − pi)
k
)
fi.
Since the block generation process follows the Poisson process
with rate λ, the probability that there are k blocks emerging
during the network propagation duration is (λΔ)k
k! e−λΔ. There-
fore, the fee service rate (FSR) is
FSR(p) =
1
Δ
∞∑
k=0
(
(λΔ)k
k!
e−λΔ
)
E(Y, k)
=
e−λΔ
Δ
m∑
i=1
∞∑
k=0
(
(λΔ)k
k!
− (λΔ(1 − pi))k
k!
)
fi
=
e−λΔ
Δ
m∑
i=1
fi
(
eλΔ − eλΔ(1−pi)
)
=
1
Δ
m∑
i=1
fi
(
1 − e−λΔpi
)
.
The proof is thus completed. �
Combining Proposition 1 and Lemma 1, we can find that
the miners’ revenue is proportional to the FSR, i.e., R(p) =
FSR(p)/λ, where λ is the block generation rate. Therefore,
to prove Theorem 7, we only need to prove that
Efficiency(FSR) ≥ (1 − e−λτ )(
m
n � −∑�m
n �
k=0
(λτ)k
k! e−λτ
) .
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
3700 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
where Efficiency(FSR) = FSR of Equilibrium
FSR of optimal strategy . The proof
goes as follows.
Proof: For convenience, we denote p∗ as the equilibrium
strategy in the transaction inclusion game. We consider the
total transaction fees of transactions included in blocks dur-
ing the network propagation delay of signal τ . The highest
possible FSR can be achieved when there is no transaction
inclusion collision and the included transactions have the
highest transaction fees. Therefore, we have
FSRoptimal ≤ 1
τ
∞∑
k=0
⎛
⎝(λτ)k
k!
e−λτ
max{kn,m}∑
i=1
fi
⎞
⎠
=
1
τ
((
n∑
i=0
fi
) ∞∑
k=0
(λτ)k
k!
e−λτ
+
(
2n∑
i=n+1
fi
) ∞∑
k=1
(λτ)k
k!
e−λτ
+ · · ·+
⎛
⎝ m∑
i=n�m
n �
fi
⎞
⎠ ∞∑
k=�m
n �
(λτ)k
k!
e−λτ
⎞
⎠
≤ 1
τ
n∑
i=0
fi
⎛
⎝
m
n
� −
�m
n �∑
k=0
(λτ)k
k!
e−λτ
⎞
⎠ .
Besides, since p∗ is the equilibrium strategy, we have
R(p∗|p∗) =
m∑
i=1
p∗i fir(p∗i ) ≥ R(p′|p∗)
=
m∑
i=1
p′ifir(p∗i ), ∀p′ ∈ P.
Without loss of generality, we have
R(p∗|p∗) =
m∑
i=1
p∗i fir(p∗i ) ≥ R(ptop|p∗) =
n∑
i=1
fir(p∗i ).
Since r(p∗i ) is monotonically decreasing, we have that
r(pi) ≥ r(1). Therefore, we have
R(ptop|p∗) =
n∑
i=1
fir(p∗i ) ≥ R(ptop|ptop) =
n∑
i=1
fir(1).
Thus we have that
R(p∗) ≥ R(ptop) =
n∑
i=1
fir(1) =
(1 − e−λτ )
λτ
n∑
i=1
fi.
Besides, we have proved that
FSR(p′) = λR(p′), ∀p′ ∈ P.
Thus, we have
FSR(p∗) ≥ λR(ptop) =
(1 − e−λτ )
τ
n∑
i=1
fi.
Therefore, we have
Efficiency(FSR)=
FSR(p∗)
FSRoptimal
≥ (1 − e−λτ )(
m
n � −∑�m
n �
k=0
(λτ)k
k! e−λτ
) .
The proof is thus completed. �
REFERENCES
[1] M. Swan, J. Potts, S. Takagi, F. Witte, and P. Tasca, Blockchain
Economics: Implications of Distributed Ledgers: Markets, Communi-
cations Networks, and Algorithmic Reality. Singapore: World Scientific,
2019.
[2] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for blockchain
networks,” IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600,
Jun. 2019.
[3] J. Kang, Z. Xiong, D. Ye, D. I. Kim, J. Zhao, and D. Niyato, “Toward
secure blockchain-enabled Internet of Vehicles: Optimizing consensus
management using reputation and contract theory,” IEEE Trans. Veh.
Technol., vol. 68, no. 3, pp. 2906–2920, Mar. 2019.
[4] Q. Zhou, H. Huang, Z. Zheng, and J. Bian, “Solutions to scalability of
blockchain: A survey,” IEEE Access, vol. 8, pp. 16440–16455, 2020.
[5] Y. Lewenberg, Y. Sompolinsky, and A. Zohar, “Inclusive block chain
protocols,” in Proc. Int. Conf. Financial Cryptogr. Data Secur. Berlin,
Germany: Springer, 2015, pp. 528–547.
[6] T. Wang, Q. Wang, Z. Shen, Z. Jia, and Z. Shao, “Understanding
characteristics and system implications of DAG-based blockchain in IoT
environments,” IEEE Internet Things J., vol. 9, no. 16, pp. 14478–14489,
Aug. 2022.
[7] B. Cao et al., “When Internet of Things meets blockchain: Challenges
in distributed consensus,” IEEE Netw., vol. 33, no. 6, pp. 133–139,
Nov./Dec. 2019.
[8] H. Zhang, S. Leng, F. Wu, and H. Chai, “A DAG blockchain-enhanced
user-autonomy spectrum sharing framework for 6G-enabled IoT,” IEEE
Internet Things J., vol. 9, no. 11, pp. 8012–8023, Jun. 2022.
[9] W. Yang, X. Dai, J. Xiao, and H. Jin, “LDV: A lightweight DAG-based
blockchain for vehicular social networks,” IEEE Trans. Veh. Technol.,
vol. 69, no. 6, pp. 5749–5759, Jun. 2020.
[10] Y. Li et al., “Direct acyclic graph-based ledger for Internet of Things:
Performance and security analysis,” IEEE/ACM Trans. Netw., vol. 28,
no. 4, pp. 1643–1656, Aug. 2020.
[11] H. Gupta and D. Janakiram, “CDAG: A serialized blockDAG for
permissioned blockchain,” 2019, arXiv:1910.08547.
[12] J. Gobel and A. E. Krzesinski, “Increased block size and bitcoin
blockchain dynamics,” in Proc. 27th Int. Telecommun. Netw. Appl. Conf.
(ITNAC), Nov. 2017, pp. 1–6.
[13] B. H. Bloom, “Space/time trade-offs in hash coding with allowable
errors,” Commun. ACM, vol. 13, no. 7, pp. 422–426, Jul. 1970.
[14] A. Hari, M. Kodialam, and T. Lakshman, “ACCEL: Accelerating the
bitcoin blockchain for high-throughput, low-latency applications,” in
Proc. IEEE Conf. Comput. Commun., Apr. 2019, pp. 2368–2376.
[15] L. Chen, L. Xu, Z. Gao, A. Sunny, K. Kasichainula, and W. Shi,
“Nonlinear blockchain scalability: A game-theoretic perspective,” 2020,
arXiv:2001.08231.
[16] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is
vulnerable,” in Proc. Int. Conf. Financial Cryptogr. Data Secur. Cham,
Switzerland: Springer, 2014, pp. 436–454.
[17] G. Andresen. (2014). O(1) Block Propagation. [Online]. Available:
https://gist.github.com/gavinandresen/e20c3b5a1d4b97f79ac2
[18] W. Bi, H. Yang, and M. Zheng, “An accelerated method for message
propagation in blockchain networks,” 2018, arXiv:1809.00455.
[19] Fees Per Tx (BTC) in Bitcoin Visuals. Accessed: Feb. 10, 2022. [Online].
Available: https://bitcoinvisuals.com/chain-fees-tx-btc
[20] C. Decker and R. Wattenhofer, “Information propagation in the bitcoin
network,” in Proc. IEEE P2P, Sep. 2013, pp. 1–10.
[21] N. Matloff, “Introduction to discrete-event simulation and the simpy
language,” Dept. Comput. Sci., Univ. California Davis, Davis, CA, USA,
Tech. Rep., Aug. 2008, pp. 1–3.
[22] C. Li et al., “A decentralized blockchain with high throughput and fast
confirmation,” in Proc. USENIX Annu. Tech. Conf., 2020, pp. 515–528.
[23] Pybloom-Live 3.1.0. Accessed: Feb. 10, 2022. [Online]. Available:
https://pypi.org/project/pybloom-live/
[24] M. Mirkin, Y. Ji, J. Pang, A. Klages-Mundt, I. Eyal, and A. Juels,
“BDoS: Blockchain denial-of-service,” in Proc. ACM SIGSAC Conf.
Comput. Commun. Secur., Oct. 2020, pp. 601–619.
[25] M. Mitzenmacher and E. Upfal, Probability and Computing: Random-
ization and Probabilistic Techniques in Algorithms and Data Analysis.
Cambridge, U.K.: Cambridge Univ. Press, 2017.
[26] E. Elrom, “Bitcoin wallets and transactions,” in The Blockchain Devel-
oper. New York, NY, USA: Springer, 2019, pp. 121–171.
[27] A. E. Roth, The Shapley Value: Essays in Honor of Lloyd S. Shapley.
Cambridge, U.K.: Cambridge Univ. Press, 1988.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
CHEN et al.: TIPS: TRANSACTION INCLUSION PROTOCOL WITH SIGNALING IN DAG-BASED BLOCKCHAIN 3701
[28] T. Wang, W. Zhu, Q. Ma, Z. Shen, and Z. Shao, “ABACUS: Address-
partitioned Bloom filter on address checking for UniquenesS in IoT
blockchain,” in Proc. 39th Int. Conf. Comput.-Aided Design, Nov. 2020,
pp. 1–7.
[29] X. Ma, L. Xu, and L. Xu, “Blockchain retrieval model based on elastic
Bloom filter,” in Proc. Int. Conf. Web Inf. Syst. Appl. Cham, Switzerland:
Springer, 2019, pp. 527–538.
[30] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,”
Manubot, Tech. Rep., 2019.
[31] G. Wood, “Ethereum: A secure decentralised generalised transaction
ledger,” Ethereum Project Yellow Paper, vol. 151, pp. 1–32, Apr. 2014.
[32] A. P. Ozisik, G. Andresen, B. N. Levine, D. Tapp, G. Bissias, and
S. Katkuri, “Graphene: Efficient interactive set reconciliation applied
to blockchain propagation,” in Proc. ACM Special Interest Group Data
Commun., 2019, pp. 303–317.
[33] J. Kan, L. Zou, B. Liu, and X. Huang, “Boost blockchain broadcast
propagation with tree routing,” in Proc. Int. Conf. Smart Blockchain.
Cham, Switzerland: Springer, 2018, pp. 77–85.
[34] L. Zhang, T. Wang, and S. C. Liew, “Speeding up block propa-
gation in blockchain network: Uncoded and coded designs,” 2021,
arXiv:2101.00378.
Canhui Chen received the B.Eng. degree in soft-
ware engineering from Sun Yat-sen University,
Guangzhou, China, in 2021. He is currently pursuing
the master’s degree in computer science with the
Institute for Interdisciplinary Information Sciences
(IIIS), Tsinghua University. His current research
interests include blockchain system and game theory.
Xu Chen received the Ph.D. degree in informa-
tion engineering from The Chinese University of
Hong Kong in 2012. He has worked as a Post-
doctoral Research Associate at Arizona State Uni-
versity, Tempe, AZ, USA, from 2012 to 2014,
and a Humboldt Scholar Fellow at the Institute
of Computer Science, University of Goöttingen,
Germany, from 2014 to 2016. He is currently a Full
Professor with Sun Yat-sen University, Guangzhou,
China, and the Vice Director of the National and
Local Joint Engineering Laboratory of Digital Home
Interactive Applications. He received the prestigious Humboldt Research
Fellowship awarded by the Alexander von Humboldt Foundation of Germany,
the 2014 Hong Kong Young Scientist Runner-Up Award, the 2017 IEEE
Communication Society Asia–Pacific Outstanding Young Researcher Award,
the 2017 IEEE ComSoc Young Professional Best Paper Award, the Honorable
Mention Award of the 2010 IEEE International Conference on Intelligence
and Security Informatics (ISI), the Best Paper Runner-Up Award of the 2014
IEEE International Conference on Computer Communications (INFOCOM),
and the Best Paper Award of the 2017 IEEE International Conference on
Communications (ICC). He is an Area Editor of the IEEE OPEN JOURNAL
OF THE COMMUNICATIONS SOCIETY and an Associate Editor of the IEEE
TRANSACTIONS ON WIRELESS COMMUNICATIONS, the IEEE INTERNET
OF THINGS JOURNAL, and the IEEE JOURNAL ON SELECTED AREAS IN
COMMUNICATIONS Series on Network Softwarization and Enablers.
Zhixuan Fang received the B.S. degree in physics
from Peking University, Beijing, China, in 2013,
and the Ph.D. degree in computer science from
Tsinghua University, Beijing, in 2018. He is cur-
rently a Tenure-Track Assistant Professor at the
Institute for Interdisciplinary Information Sciences
(IIIS), Tsinghua University. He mainly focuses on
the design and analysis of multiagent systems and
networked systems.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:02:33 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Black & White)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Tags
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 524288
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments true
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /AdobeArabic-Bold
    /AdobeArabic-BoldItalic
    /AdobeArabic-Italic
    /AdobeArabic-Regular
    /AdobeHebrew-Bold
    /AdobeHebrew-BoldItalic
    /AdobeHebrew-Italic
    /AdobeHebrew-Regular
    /AdobeHeitiStd-Regular
    /AdobeMingStd-Light
    /AdobeMyungjoStd-Medium
    /AdobePiStd
    /AdobeSansMM
    /AdobeSerifMM
    /AdobeSongStd-Light
    /AdobeThai-Bold
    /AdobeThai-BoldItalic
    /AdobeThai-Italic
    /AdobeThai-Regular
    /ArborText
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /BellGothicStd-Black
    /BellGothicStd-Bold
    /BellGothicStd-Light
    /ComicSansMS
    /ComicSansMS-Bold
    /Courier
    /Courier-Bold
    /Courier-BoldOblique
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /Courier-Oblique
    /CourierStd
    /CourierStd-Bold
    /CourierStd-BoldOblique
    /CourierStd-Oblique
    /EstrangeloEdessa
    /EuroSig
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Helvetica
    /Helvetica-Bold
    /Helvetica-BoldOblique
    /Helvetica-Oblique
    /Impact
    /KozGoPr6N-Medium
    /KozGoProVI-Medium
    /KozMinPr6N-Regular
    /KozMinProVI-Regular
    /Latha
    /LetterGothicStd
    /LetterGothicStd-Bold
    /LetterGothicStd-BoldSlanted
    /LetterGothicStd-Slanted
    /LucidaConsole
    /LucidaSans-Typewriter
    /LucidaSans-TypewriterBold
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MinionPro-Bold
    /MinionPro-BoldIt
    /MinionPro-It
    /MinionPro-Regular
    /MinionPro-Semibold
    /MinionPro-SemiboldIt
    /MVBoli
    /MyriadPro-Black
    /MyriadPro-BlackIt
    /MyriadPro-Bold
    /MyriadPro-BoldIt
    /MyriadPro-It
    /MyriadPro-Light
    /MyriadPro-LightIt
    /MyriadPro-Regular
    /MyriadPro-Semibold
    /MyriadPro-SemiboldIt
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /Symbol
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Webdings
    /Wingdings-Regular
    /ZapfDingbats
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 600
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 600
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 300
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 900
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.33333
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /Unknown
  /CreateJDFFile false
  /Description <<
    /ENU ()
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice