Joint Optimization of Edge Computing Resource Pricing and Wireless Caching for Blockchain-Driven Networks
IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 6, JUNE 2022 6661
Joint Optimization of Edge Computing Resource
Pricing and Wireless Caching for
Blockchain-Driven Networks
Yi Yang, Zijian Liu, Zhixin Liu , Senior Member, IEEE, Yuan’ai Xie, Kit Yan Chan , Member, IEEE,
and Xinping Guan , Fellow, IEEE
Abstract—In wireless communication networks, traffics of base
stations (BS) can be effectively offloaded by sharing the cached
content between mobile devices through wireless device-to-device
(D2D) communication. To encourage the content caching of D2D
users, a blockchain incentive scheme is proposed; the game theory
is introduced to optimize the benefits for both the edge comput-
ing server (ECS) and D2D users in the blockchain network. In
Stackelberg game, D2D users act as followers. After the successful
implementation of the cache strategy, D2D users are rewarded by
the system, which is a new block mining process. In this process,
the required computing power is provided by the ECS. Therefore,
D2D cache users need to pay the cost to purchase computing power
from the ECS. As the game leader, the ECS prices the computing
resources, and D2D users adjust their caching strategies based
on the price. In this paper, we propose four algorithms based on
different pricing methods and different cache reward methods.
Simulations are performed to compare the cache quality and cache
content dispersion of the four algorithms. The results show that
the uniform pricing scheme with a linear reward relationship is
more suitable for the scenarios that require higher cache quality,
and the discriminatory pricing scheme with a nonlinear reward
relationship is more suitable for the scenarios that require more
evenly cache content distribution.
Index Terms—Resource allocation, D2D communications,
blockchain, cache strategy, Stackelberg game, pricing.
I. INTRODUCTION
W ITH the rapid development of technology, the storage
space of smart mobile devices is increased greatly to
cache and share popular content files between smart mobile de-
vices [1], [2]. However, data service demand also grows rapidly.
Manuscript received September 22, 2021; revised January 13, 2022; accepted
March 20, 2022. Date of publication March 24, 2022; date of current version
June 24, 2022. This work was supported in part by the National Natural Science
Foundation of China under Grant 61873223 and in part by the Natural Science
Foundation of Hebei Province under Grant F2019203095. The review of this
article was coordinated by Prof. Dania Marabissi. (Corresponding authors:
Zhixin Liu; Yi Yang.)
Yi Yang, Zijian Liu, Zhixin Liu, and Yuan’ai Xie are with the
School of Electrical Engineering, Yanshan University, Qinhuangdao 066004,
China (e-mail: yyi@ysu.edu.cn; 15028596795@163.com; lzxauto@ysu.edu.cn;
15030515930@163.com).
Kit Yan Chan is with the School of Electrical Engineering, Computing and
Mathematical Sciences, Curtin University, Bentley, WA 6102, Australia (e-mail:
kit.chan@curtin.edu.au).
Xinping Guan is with the School of Electronic, Information, and Electrical
Engineering, Shanghai Jiao Tong University, Shanghai 200240, China (e-mail:
xpguan@sjtu.edu.cn).
Digital Object Identifier 10.1109/TVT.2022.3162075
Data service can only be provided by the base station (BS) in
the cellular network when a mobile user sends requests. In hot
spots, it will greatly increase the data traffic of the BS, resulting
in network congestion. The mobile devices can directly share
the cache without passing through the BS via device-to-device
(D2D) wireless communication. Therefore, sharing the cached
files through D2D communication is a promising approach to
offload the data traffic of the BS [3], [4]. Recent approaches have
been developed to optimize the cache of mobile devices. Chen
et al. [5] proposed an optimization algorithm for different cache
sizes and content sizes of D2D users. The approach is able to
achieve the highest cache hit probability and the best cache-aided
throughput. Yu et al. [6] proposed a strategy which utilized the
D2D users’ preference list as the ratio of content popularity to
cache probability, in order to improve cache hit rates and reduce
latencies. Li et al. [7] proposed a systematical survey of the
state-of-the-art caching techniques that were recently developed
in cellular networks. Zhang et al. [8] proposed a user preference
aware caching deployment algorithm for D2D caching networks,
in order to achieve significant improvement on cache hit ratio,
content access delay, and traffic offloading gain. Motivated by
the D2D users to cache content files, we propose an incentive
scheme based on blockchain. The transactions of each node
in the network are recorded in the block data structure, and
multiple blocks constitute the blockchain. Blockchain has a
distributed structure, where the data in the block cannot be
tampered. Hence, the data security can be ensured [9], [10]. The
process of D2D users caching content files has to approved by
other consensus users as a new mining block. Block mining is a
complex computational process, since the distributed consensus
has to be satisfied based on Proof-of-Work (POW). After a new
block is mined in a node, the corresponding reward is granted by
the blockchain. However, the computational cost of this mining
process is demanding [11]–[13]. D2D devices have to purchase
sufficient computational resources from the edge computing
server (ECS), in order to generate new blocks [14]. Therefore, it
is necessary to study the joint optimization of edge computing
resource pricing and wireless caching.
A. Related Works
In order to obtain the high computation capacity of wire-
less networks, mobile edge computing technology has been
0018-9545 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0003-1638-7118
https://orcid.org/0000-0003-4949-7647
https://orcid.org/0000-0003-1858-8538
mailto:yyi@ysu.edu.cn
mailto:15028596795@163.com
mailto:lzxauto@ysu.edu.cn
mailto:15030515930@163.com
mailto:kit.chan@curtin.edu.au
mailto:xpguan@sjtu.edu.cn
6662 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 6, JUNE 2022
developed. With the cloud computing services provided by the
ECS, mobile devices can offload their tasks to the edge cloud
for processing. By offloading computing-intensive tasks, the
hardware limitations of mobile devices can be significantly
alleviated [15], [16]. In addition, edge cloud computing services
can effectively alleviate mobile network congestion and reduce
communication delay [17]. In recent years, edge computing
technologies have been developed to provide auxiliary facilities
to the mobile blockchain. Xiong et al. [18] proposed a game the-
oretic approach based on the interaction between the cloud/fog
providers and the miners in a POW-based blockchain network.
Jiao et al. [19] has studied the trading characteristics between
the cloud/fog computing service provider and miners, and an
auction-based market model was proposed for efficient com-
puting resource allocation. Wang et al. [20] proposed a content
selection algorithm for edge cache nodes, where the Markov
chain model is introduced to improve the utilization of cache
space and reduce the delay of content transmission. Liu et al. [21]
proposed a novel mobile edge computing enabled wireless
blockchain framework where the computation-intensive mining
tasks can be offloaded to nearby edge computing nodes and
the cryptographic hashes of blocks can be cached in the edge
computing server. Huang et al. [22] proposed a blockchain
system to adapt the limitation of edge devices, in order to
improve the allocation fairness and effectiveness of the storage
resources.
However, none of the aforementioned methods have taken
the utility of the leader into account. Since the cooperative
relationship between the ECS and D2D devices, game theory has
commonly been used to solve the wireless cache optimization
problem. Zou et al. [23] proposed a joint video pricing and
cache placement strategy by considering the heterogeneity of
video file sizes and exploiting the classic law of demand from
the field of economics. In [24], the Stackelberg game is used
to model the interaction between content providers and edge
caching devices, in order to motivate the participation of edge
caching devices. Zhang et al. [25] formulated the cost reduction
problem as a local cooperative game, and also proved that the
problem was an exact potential game. Shi et al. [26] proposed
a preference-aware caching based on the Stackelberg game,
which attempted to resolve the conflict of interests between the
operator and D2D transmitters and maximize the total cache
utility by allocating cache space. Wu et al. [27] proposed a
dynamic coalition algorithm based on the Hedonic game theory,
which guided each member to join or leave the coalition at each
time slot out of its profits. Nie et al. [28] applied a two-stage
Stackelberg game to analyze the participation level of the mobile
users and the optimal incentive mechanism of the crowdsensing
service provider using backward induction. Compared with the
traditional methods, we introduce D2D communication from
the perspective of blockchain and edge computing. Then the
utility of the D2D mobile user and the ECS is further opti-
mized. In addition, we have further classified reward methods of
block and pricing methods of computing power, which provides
more choices for the ECS and mobile users, and makes mobile
user communication and the operation modes of ECS more
diversified.
In this paper, we propose the Stackelberg game method to
solve the joint optimization problem which attempts to optimize
the edge computing resource pricing and blockchain-driven
wireless cache. The D2D user and the ECS are acting as the
follower and the leader, respectively. The pricing of computing
power is treated as the link between the leader and the follower.
The utility of the follower is involved with the return of mining
a new block and the cost of purchasing computing power. The
utility of the leader is the profit from selling computing power.
Solving the joint optimization problem attempts to determine
the optimal response for both leader and follower.
B. Contributions
The contributions of this paper are summarized as follows:
� It is proposed that the interaction between the blockchain
miner (the D2D user) and the ECS can be modeled as a
Stackelberg game. Solving the convex optimization prob-
lem of the leader and the follower attempts to determine
the Stackelberg Equilibrium. The utility of both the D2D
user and the ECS can be optimized.
� The game models using different pricing methods are
formulated, in order to divide uniform pricing and discrim-
inatory pricing. Reward relationships of mining blocks can
be classified as linear and nonlinear forms. It motivates us
to propose four different algorithms. The discriminatory
pricing model formulates different computing power prices
according to the popularity of content, which is a more
flexible pricing method in practice.
� The optimal caching and pricing solutions are derived and
the practical execution algorithms are developed. The four
algorithms are evaluated by simulation. It is found through
simulations that discriminatory pricing is more beneficial
to maximize the revenue of the ECS. The results also show
that each algorithm has its advantages and limitations.
UPLR algorithm is more effective when a higher cache
quality is required. DPNR algorithm is more effective when
a uniform cache content distribution is required.
The rest of this paper is organized as follows: A blockchain-
driven D2D network and caching model is established in Sec-
tion II. In Section III, four joint optimization algorithms are
developed, and the optimal strategies of Stackelberg game is de-
duced. Section V presents the simulation results and analyzes the
system performance. Finally, a conclusion is drawn in Section .
II. SYSTEM MODEL
In the traditional cellular network mode, the content require-
ments of mobile users need to be provided by BS. In hot spots,
it will greatly increase the data traffic of the BS, resulting
in network congestion. However, sharing the cached content
through wireless D2D communication can effectively reduce the
data traffic of the BS. Therefore, we consider a D2D network
scenario that supports wireless caching, including a BS and
a pair of D2D users (DU1 and DU2). Fig. 1 shows that the
computing resources required by DU1 for mining new blocks
are provided by the ECS. The file library of wireless cache
containing N contents is denoted as N = {1, 2, . . ., N}. DU1
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
YANG et al.: JOINT OPTIMIZATION OF EDGE COMPUTING RESOURCE PRICING AND WIRELESS CACHING 6663
Fig. 1. System model.
partially caches these contents in advance. When DU2 sends a
request, there are two options: one is to provide content by the
BS (cellular communication) and the other is to provide content
by DU1 (D2D communication). If DU1 has cached the content
in advance, DU2 can directly share the cache of DU1 without
passing through the BS, which is regarded as an effective way
to unload the data traffic of the BS. Due to the limitation of
memory capacity, DU1 is not able to cache all content data.
p = [p1, p2, . . ., pN ] donotes the popularity of the content file,
where pi (i ∈ N ) is the probability of the ith content being
requested. pi is in the Zipf distribution [29], which is defined
as
pi =
1/iγ∑N
j=1 1/jγ
, (1)
where γ is the index of preference. The popularity of p is ranked
so that the popularity of p1 is the highest and pN is the lowest.
The content is allowed to be partially cached. Denote fi as
the actual data size of the ith file cached by DU1, where 0 ≤
fi ≤ fmax
i , and fmax
i (i ∈ N ) is the total size of the ith file.
In order to encourage DU1 to cache the content and share the
cache with DU2, the system grants reward to DU1 when DU1
caches. Therefore, we use the wireless blockchain application.
If DU1 caches the content and is successfully recognized by
other consensus users, DU1 is assumed to have been mined a
new block, and is rewarded by the system. In order to obtain
the reward of blockchain, it must be proved that DU1 has paid
a corresponding cost (computational power). DU1 is limited
by memory and other devices, which makes it necessary for
DU1 to purchase computing resources from the ECS to test the
hash value of the new block, so as to ensure the POW of DU1.
The computational power required for the ith content cache is
denoted as ci, and the computational power is related to the size
of the content. In this paper, we define ci = αfi, where α is
a constant coefficient. µ = [μ1, μ2, . . ., μN ] is denoted as the
price vector, where μi denotes the pricing of ci. C denotes the
edge computing power required for mining work except for ci.
Referring to [30], in the mining blocks, C is a constant, and the
relative computing power of caching the ith content is defined as,
REi =
αfi
C + αfi
. (2)
The reward of mining a new block can be divided into two
parts: the fixed reward R and the variable reward rti, where ti is
the number of transactions in the block corresponding to ci and r
is the variable reward factor. ti follows the normal distribution,
R is regarded as a constant parameter, the block mining time
follows the Poisson distribution, referring to [31], [32]. Thus
the orphaning probability of new block can be approximated as,
ph(ti) = 1 − e−λzti , (3)
where z > 0 is the linear delay factor, λ = 1/600. Hence, the
probability that the miner can be rewarded is (1 − ph(ti)) =
e−λzti .
III. PROBLEM FORMULATION
In this section, we propose four different schemes based on
the Stackelberg game. There are two pricing modes that can
be selected by the ECS: uniform pricing and discriminatory
pricing. In practice, the discriminatory pricing model formulates
different computing power prices according to the popularity
of content. It is a more flexible pricing method. It is verified
in the following simulations that the discriminatory pricing
is more beneficial to maximize the revenue of the ECS. The
uniform pricing model focuses on the revenue of DU1. Al-
though the uniform pricing model is less flexible, it is fairer
for caching strategies of different contents. Uniform pricing
is more favorable to maximize the revenue of DU1. On the
other hand, the caching strategies of DU1 are also constructed
into two forms: linear reward relationship and nonlinear reward
relationship. From the perspective of DU1, the benefit of the
linear reward relationship algorithm will be higher. However, the
nonlinear reward relationship algorithm can improve the price
of computing power, which is beneficial from the perspective of
the ECS. The game with the best response is used to optimize
the utility of DU1 and the ECS.
A. Stackelberg Game Formulation
Stackelberg game is a strategic game in which leaders and
followers compete with each other on specific resources [33].
In this formulation, the ECS is the leader of the upper game
and DU1 is the follower of the lower game. The reward of DU1
caching and the sharing for the ith content is related to REi.
We can formulate the relationship between the reward of DU1
caching for the ith content andREi in two different forms: linear
relationship and nonlinear relationship.
For the linear relationship, the utility function of DU1 is
defined as
U1(µ,f) =
N∑
i=1
(
pi(R+ rti)
eλzti
REi − αfiμi
)
, (4)
where f = [f1, f2, . . ., fN ]. The utility function of DU1 con-
sists of two parts: the reward of caching and sharing content,∑N
i=1
pi(R+rti)
eλzti
REi, and the cost of purchasing computing
power,
∑N
i=1 αfiμi. Based on (4), the optimal cache problem to
maximize the total profit of DU1 can be formulated as
P1 : max U1(µ,f),
s.t.
{
0 ≤ fi ≤ fmax
i ,∑N
i=1 αfi ≤ Q.
(5)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
6664 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 6, JUNE 2022
where Q denotes the maximum computing resources that the
ECS can provide to DU1. Hence, the total computing power
purchased by DU1 cannot exceed Q.
The reward to DU1 has a limit, although REi increases.
Therefore the utility function is integrated with a logarithmic
function which attempts to decrease the growth rate. The utility
function for the nonlinear relationship is formulated as
U2(µ,f) =
N∑
i=1
(
pi(R+ rti)
eλzti
ln(1 +REi)− αfipiμi
)
,
(6)
In (6), the request probability pi is valid on both the reward
part and the cost part, which is different from (4). It attempts
to make sure that the performance of the algorithm with the
nonlinear relation is better than the linear one. We will discuss
the two algorithms in Section V. To maximize the total profit,
the optimal cache problem (7) is formulated by integrating (6)
as,
P2 : max U2(µ,f),
s.t.
{
0 ≤ fi ≤ fmax
i ,∑N
i=1 αfi ≤ Q.
(7)
Both P1 and P2 are formulated as the lower-level optimization
problem of the Stackelberg game.
As the leader of the game, the computing resources are priced
by the ECS. Many pricing methods divide the pricing as either
the discriminatory (non-uniform) pricing or the uniform pricing.
For the discriminatory pricing, the utility function of the ECS
can be expressed as follows.
U3(µ,f) =
N∑
i=1
αfiμi. (8)
(8) represents the sum of the benefits obtained by the ECS
for selling computing resources. We set the price as μi ≥ 0,
∀i. Therefore, the optimal price problem (9) is formulated to
maximize the total profit of the ECS.
P3 : max U3(µ,f),
s.t. μi ≥ 0, ∀i. (9)
For the uniform pricing, the prices of different ci are the same,
i.e. μi = μ, ∀i. Therefore, P3 can be reformulated as,
P4 : max U4(µ,f),
s.t. μ ≥ 0, ∀i. (10)
P3 and P4 are formulated as the upper optimization problem
of the Stackelberg game. We develop four algorithm: uniform
pricing scheme with linear reward relationship (UPLR), discrim-
inatory pricing scheme with linear reward relationship (DPLR),
uniform pricing scheme with nonlinear reward relationship
(UPNR), and discriminatory pricing scheme with nonlinear
reward relationship (DPNR). They are denoted as UPLR (P1,
P4), DPLR (P1, P3), UPNR (P2, P4), and DPNR (P2, P3),
based on the four combination of upper game (P3 and P4) and
lower game (P1 and P2).
B. Optimal Cache and Optimal Pricing
The reverse induction is used to analyze the Stackelberg
game [34]. Therefore, it first needs to solve the optimization
problem of the lower game. The partial derivative of P1 with
respect to fi is given as
∂U1(µ,f)
∂fi
= piAi
αC
(αfi+ C)2
− αμi, (11)
∂2U1(µ,f)
∂f 2
i
= −2piAi
α2C
(αfi+ C)3
< 0, (12)
∂2U1(µ,f)
∂fi∂fj
= 0. (13)
where Ai =
pi(R+rti)
eλzti
.
It is easy to prove that the Hessian matrix of the objective
function is negative definite. Hence,P1 is a convex optimization
problem. According to the Karush-Kuhn-Tucker (KKT) condi-
tions, we can obtain the optimal cache strategy for P1 as,
f ∗
i = min
[
max
[
0,
1
α
(√
AiC
μi + β1
− C
)]
, fmax
i
]
, ∀i,
(14)
where β1 is the Lagrangian multiplier that satisfies∑N
i=1 αfi ≤ Q. In order to determine β1, the dual function is
constructed. Let
D(β1) = max
(
U1(µ,f)− β1
(
N∑
i=1
αfi −Q
))
. (15)
The following dual problem is formulated,
min D(β1).
s.t. β1 > 0, ∀i. (16)
Then β1 is updated iteratively according to the following
expression.
β1(t+ 1) = β1(t) + σ
∂D(β1)
∂β1
. (17)
The step size factor σ is determined by the Armijo method [35].
The analysis of optimal cache strategy for P2 is similar to that
for P1. The partial derivative of P2 with respect to fi is given
as
∂U2(µ,f)
∂fi
=
piAiαC
(αfi + C)(2αfi + C)
− αpiμi, (18)
∂2U2(µ,f)
∂f 2
i
= − piAiαC(4α2fi + 3αC)
(αfi + C)2(2αfi + C)2
< 0, (19)
∂2U2(µ,f)
∂fi∂fj
= 0. (20)
The Hessian matrix of the objective function of P2 is also
negative definite. Hence, it concludes that P2 is a convex opti-
mization problem. Similarly, according to the KKT conditions,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
YANG et al.: JOINT OPTIMIZATION OF EDGE COMPUTING RESOURCE PRICING AND WIRELESS CACHING 6665
we can obtain the optimal cache strategy of P2 as follows.
f ∗
i = min
⎡
⎣max
⎡
⎣0,
√
C2 + 8piAiC
μi+β2
− 3C
4α
⎤
⎦ , fmax
i
⎤
⎦ , ∀i,
(21)
whereβ2 is the Lagrangian multiplier satisfying
∑N
i=1 αfi ≤ Q,
and the calculation process of β2 is the same as that of β1, which
is omitted due to the space limit.
The ECS of the upper game calculates the optimal price based
on the optimal cache strategy of the lower game. To execute the
DPLR algorithm, P3 can be reformulated as follows.
max
∑N
i=1
(√
AiC
μi+β1
− C
)
μi,
s.t. μi ≥ 0, ∀i.
(22)
The partial derivative of P3 with respect to μi is given as
∂
∑N
i=1
(√
AiC
μi+β1
− C
)
μi
∂μi
=
√
AiC(μi + β1)
− 1
2
(
1 − μi
2(μi + β1)
)
− C, (23)
∂2∑N
i=1
(√
AiC
μi+β1
− C
)
μi
∂μ2
i
=
√
AiC(μi + β1)
− 3
2
(
3μi
4(μi + β1)
− 1
)
< 0, (24)
∂2∑N
i=1
(√
AiC
μi+β1
− C
)
μi
∂μi∂μj
= 0. (25)
Therefore, problem (22) is a convex optimization problem.
When the DPNR algorithm is used, P3 can be reformulated
as follows.
max
N∑
i=1
√
C2 + 8piAiC
μi+β2
− 3C
4
μi.
s.t. μi ≥ 0, ∀i. (26)
The partial derivative of P3 with respect to μi is given as
∂
∑N
i=1
√
C2+
8piAiC
μi+β2
−3C
4 μi
∂μi
=
1
4
(
C2 +
8piAiC
μi + β2
) 1
2
− μi
8
(
C2 +
8piAiC
μi + β2
)− 1
2 8piAiC
(μi + β2)2
, (27)
∂2∑N
i=1
√
C2+
8piAiC
μi+β2
−3C
4 μi
∂μ2
i
= −1
4
(
C2 +
8piAiC
μi + β2
)− 1
2 8piAiC
(μi + β2)2
β2
μi + β2
− μi
16
(
C2 +
8piAiC
μi + β2
)− 3
2
(
8piAi
(μi + β2)2
)2
< 0, (28)
∂2∑N
i=1
√
C2+
8piAiC
μi+β2
−3C
4 μi
∂μi∂μj
= 0. (29)
Therefore, problem (26) is a convex optimization problem.
In order to obtain the optimal price, the following expression
can be obtained:
max U =
∑N
i=1 αfiμi. (30)
The partial derivative of U with respect to μi is given as
∂U
∂μi
= αfi + αμi
∂fi
∂μi
= 0. (31)
By sorting out (31), the optimal price can be obtained as
μ∗
i = − fi
∂fi
∂μi
. (32)
Then, the iterative formula of price update is given as
μi(t+ 1) = I(μi(t)) = − fi
∂fi
∂μi(t)
. (33)
The uniqueness of the algorithm is proved by the following
theorem.
Theorem 1: When the price update function I(μi(t)) is a stan-
dard interference function, it converges to the unique equilibrium
solution.
Proof: When positivity, scalability and monotonicity are sat-
isfied, function I(μi(t)) is called standard interference function.
When linear reward relation algorithm is adopted, fi =
1
α
(√
AiC
μi+β − C
)
. Three properties are proved as follows.
1) Positivity: The partial derivative of fi with respect to μi
given as
∂fi
∂μi
= −
√
AiC(μi + β)−
3
2
2α
< 0, (34)
fi is positive, so I(μi(t)) = − fi
∂fi
∂μi(t)
> 0 holds, and the
positivity is proved.
2) Scalability: To verify scalability, I(aμi(t)) and aI(μi(t))
will be compared when a > 1.
aI(μi(t))− I(aμi(t)) =
fi(aμi)
∂fi(aμi)
∂μi
− a
fi
∂fi
∂μi(t)
=
2√
AiC
[
√
AiC(a− 1)β + C(aμi + β)
3
2
− C(μi + β)
3
2 ] > 0. (35)
Therefore, aI(μi(t)) > I(aμi(t)) holds, and the scalabil-
ity of I(μi(t)) is proved.
3) Monotonicity: The partial derivative of I(μi) with respect
to μi given as
∂I(μi)
∂μi
=
∂[2(μi + β)− 2C√
AiC
(μi + β)
3
2 ]
∂μi
= 2 − 3
√
C√
A
(μi + β)
3
2 , (36)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
6666 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 6, JUNE 2022
where Ai =
pi(R+rti)
eλzti
and Ai � 3
√
C(μi + β)
3
2 . There-
fore, ∂I(μi)
∂μi
>0 holds and I(μi(t)) is monotonically in-
creasing.
To sum up, when linear reward relation algorithm is adopted,
I(μi(t)) is the standard interference function and converges to
the unique equilibrium point.
When nonlinear reward relation algorithm is adopted, fi =√
C2+
8piAiC
μi+β2
−3C
4α . Three properties are proved as follows
1) Positivity: The partial derivative of fi with respect to μi
given as
∂fi
∂μi
= −piAiC
α
(
C2 +
8piAiC
μi + β
) 1
2
(μi + β)−
3
2 < 0,
(37)
fi is positive, so I(μi(t)) = − fi
∂fi
∂μi(t)
> 0 holds, and the
positivity is proved.
2) Scalability: To verify scalability, I(aμi(t)) and aI(μi(t))
will be compared when a > 1.
aI(μi(t))− I(aμi(t)) =
fi(aμi)
∂fi(aμi)
∂μi
− a
fi
∂fi
∂μi(t)
= C2(
√
μi + β −
√
aμi + β)
+ 3C2[(aμi + β +
8piAi
C
)
1
2 − (μi + β +
8piAi
C
)
1
2 ]
> 2C2(
√
aμi + β −
√
μi + β) > 0. (38)
Therefore, aI(μi(t)) > I(aμi(t)) holds, and the scalabil-
ity of I(μi(t)) is proved.
3) Monotonicity: The partial derivative of I(μi) with respect
to μi given as
∂I(μi)
∂μi
=
1
4piAi
[
C
√
μi + β + 8piAi
− 3
√
C2(μi + β) + 8piAiC
+
C
2
⎛
⎝ 1√
μi + β
− 3√
μi + β + 8piAi
C
⎞
⎠
⎤
⎦ ,
(39)
whereAi =
pi(R+rti)
eλzti
andAi � C. Therefore, ∂I(μi)
∂μi
>0
holds and I(μi(t)) is monotonically increasing.
To sum up, when nonlinear reward relation algorithm is
adopted, I(μi(t)) is the standard interference function and con-
verges to the unique equilibrium point. �
For the uniform pricing, the calculation process of the optimal
price is the same as that of discriminatory pricing. Since the
calculation process is the same, it is not described in this article.
IV. ALGORITHM CONSTRUCTION
Since the four algorithms presented in Section III are similar
to solve the optimal response, this section presents the DPLR
algorithm as an example to describe the Stackelberg game as
follows:
Algorithm 1: DPLR Algorithm to Determine the Stackel-
berg Equilibrium.
1: Input: N , C, ε, α, r, R, Q, λ and z. Initialize µ(0),
p(0) and β1(0).
2: For i = 1 : N
3: Update the cache strategy f ∗
i based on (14).
4: Update the Lagrange multiplier β1 based on (17).
5: Update the pricing strategy μ∗
i based on (33).
6: End
7: If f(t+ 1) = f(t) and µ(t+ 1) = µ(t).
8: Return f = f(t+ 1), µ = µ(t+ 1)
9: Else
10: Set t = t+ 1 and go to Step 2.
11: End
TABLE I
SIMULATION PARAMETERS
Step 1: The price of the ECS computational resources and the
cache strategies of DU1 are initialized. The initial price vector
is denoted as µ(0), and the initial cache vector is denoted as
f(0), where μi(0) > 0, fi(0) > 0, ∀i and β1(0) > 0.
Step 2: DU1 adjusts the cache strategies based on the updated
price of the ECS. In addition to the price of computing power,
DU1 also needs to collect the information of content popularity
p from the BS. Other parameters are determined by the system.
After the information is exchanged, we can calculate f ∗
i based
on (14).
Step 3: Determine the dual function D(β1) by substituting f ∗
i
into the Lagrange function. Use the Armijo line search method
to determine the step size factor σ. Update β1 according to (17).
Step 4: After β1 is determined, the price is updated based
on (33) until μi(t+ 1)− μi(t) < ε, where ε is the precise
threshold.
Step 5: Determine whether µ and f are the identical in the
last iteration. If not, return to Step2. Otherwise, end the loop
and return µ and f .
The proposed DPLR algorithm is summarized in Algorithm 1.
V. SIMULATION RESULTS AND ANALYSIS
In this section, we first verify the convergence of the proposed
algorithms. Second, the performance of the algorithms is com-
pared with respect to DU1 and the ECS. Finally, the application
scenarios of different algorithms are analyzed in terms of the
cache quality and discreteness of the cache. Table I shows the
simulation parameters.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
YANG et al.: JOINT OPTIMIZATION OF EDGE COMPUTING RESOURCE PRICING AND WIRELESS CACHING 6667
Fig. 2. Convergence performance of the cache strategies (DPLR).
Fig. 3. Convergence performance of the pricing strategies (DPLR).
Fig. 4. Convergence performance of the cache strategies (DPNR).
Fig. 2 and Fig. 3 verify the convergence of the DPLR al-
gorithm, where fi is sorted by the popularity. The popularities
of caches f1 and fN are the highest and lowest for p1 and pN
respectively. Fig. 4 and Fig. 5 verify the convergence of the
DPNR algorithm. Fig. 6 and Fig. 7 verify the convergence of the
cache strategies of the two uniform pricing algorithms(UPLR
and UPNR). Fig. 8 verifies the convergence of the unified pricing
strategies. The figures show that the four algorithms can be
converged to the Stackelberg Equilibrium. Therefore, the four
algorithms are effective. In addition, these price convergence
graphs show that the optimal price of the nonlinear reward
relationship algorithm (DPLR, UPLR) is much higher than that
of the linear reward relationship algorithm (DPNR, UPNR).
Fig. 5. Convergence performance of the pricing strategies (DPNR).
Fig. 6. Convergence performance of the cache strategies (UPLR).
Fig. 7. Convergence performance of the cache strategies (UPNR).
Therefore, the nonlinear reward relationship algorithm is more
effective when the algorithm is implemented in the ECS.
Fig. 9 shows the relationship between the actual cache size and
the original size of the four algorithms. The four algorithms tend
to cache the content with higher popularity. The cache concen-
tration of the UPLR algorithm is the highest, and all the first three
contents are cached. Hence the UPLR algorithm is capable to
share more content for users who request hot content. However,
compared with other algorithms, the caching strategies of the
UPLR algorithm cannot cover all files but only cache the first
ten files. All the contents are partially cached by the other three
algorithms. In these three algorithms, DU1 can share content
with the requesting user when the content with low popularity
is requested. Compared with the other algorithms, the cache
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
6668 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 6, JUNE 2022
Fig. 8. Convergence performance of the pricing strategies (UPLR,UPNR).
Fig. 9. Local caching size with different content popularity.
Fig. 10. Revenue of DU1 with different algorithms.
strategies of the DPNR algorithm have the minimum dispersion.
Hence the accessibility to unpopular content is higher.
Fig. 10 shows the revenue of DU1 for the four algorithms.
When the linear reward relationship algorithm is executed, the
DU1 receives more benefits compared to the nonlinear reward
relationship algorithm. This is because the reward of DU1 is
relevant to the size of cached data. If the algorithm with the
nonlinear reward relationship is adopted, when the cache size
increases, the growth rate of reward will decrease, and the
reward obtained by DU1 will decrease compared with the linear
algorithm. But this does not mean that the algorithm of nonlinear
reward relationship is meaningless. The nonlinear reward rela-
tionship is conducive to improving the price of computing power,
which is beneficial from the perspective of the ECS. When
Fig. 11. Revenue of the ECS with different algorithms.
Fig. 12. Quality and discreteness of cache with different algorithms.
the uniform pricing algorithm is executed, the DU1 receives
more benefits compared to the discriminatory pricing algorithm.
Therefore, DU1 receives more benefits when UPLR is executed.
Fig. 11 shows the revenue of the ECS for the four algorithms. For
the ECS, the nonlinear reward relationship algorithm is better
than the linear reward relationship algorithm. The discriminatory
pricing algorithm is better than the uniform pricing algorithm.
Therefore, the DPNR algorithm is the most favorable for the
ECS.
We also propose two performance indexes of the algorithms
namely cache quality q and cache dispersion s. the cache quality
q is expressed as follows
q =
N∑
i=1
pifi. (40)
(31) indicates that the quality of cache is higher when more
contents of DU1’s cache are focused on hot content. The disper-
sion of the cache s can be expressed as follows.
s =
√
D(f), (41)
where D(f) represents the standard deviation of f . When
s is large, DU1 prefers to cache popular content rather than
unpopular content under the constraint of Q, which is conducive
to improve the quality of cache. When s is small, DU1 allocates
the cache space to different contents as much as possible under
the constraint of Q, which is conducive to improve the diversity
of cache contents.
Fig. 12 shows the correlation of the dispersion of cache and
the quality of cache is positive. The cache quality of the UPLR
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
YANG et al.: JOINT OPTIMIZATION OF EDGE COMPUTING RESOURCE PRICING AND WIRELESS CACHING 6669
algorithm is the highest. Hence, the UPLR algorithm is more
suitable for hot scenes but the cache strategy cannot cover all
the contents. The DPNR algorithm has the lowest dispersion of
cache. Hence, the DPNR is suitable for scenarios with diverse
content requirements. The other two algorithms are eclectic. The
DPLR algorithm is more inclined to cache popular content, and
the UPNR algorithm is more inclined to cache different content.
VI. CONCLUSION
In this paper, a blockchain-driven incentive mechanism is
developed based on Stackelberg game theory for D2D support-
ing wireless caching. The approach attempts to encourage D2D
users to share content and offload traffic from the BS. The BS
uses the mining profits to reward D2D users. When different
reward methods for mining blocks are considered, the linear
reward relation and the nonlinear reward relation are proposed.
On the other hand, discriminatory pricing and uniform pricing
are presented when different pricing methods of computing
power are considered by the ECS. Therefore, the four algorithms
are developed for the upper game and the lower game. The
optimal cache strategies of DU1 are determined by solving the
optimization problem of the lower game, and the optimal price
of computing power is determined by the gradient method and
the Armijo line search method. Finally, the convergence of the
proposed algorithms is verified by simulation. The quality and
dispersion of the cache are compared for these four algorithms.
The results show that the UPLR algorithm is more suitable for
hot scenes, while the DPNR algorithm is more suitable for the
scenes with diverse content requirements.
REFERENCES
[1] M. Mozaffari, W. Saad, M. Bennis, and M. Debbah, “Unmanned aerial ve-
hicle with underlaid device-to-device communications: Performance and
tradeoffs,” IEEE Trans. Wireless Commun., vol. 15, no. 6, pp. 3949–3963,
Jun. 2016.
[2] Y. Xie, Z. Liu, K. Y. Chan, and X. Guan, “Energy-spectral efficiency
optimization in vehicular communications: Joint clustering and pricing-
based robust power control approach,” IEEE Trans. Veh. Technol., vol. 69,
no. 11, pp. 13 673–13 685, Nov. 2020.
[3] M. Ji, G. Caire, and A. F. Molisch, “Wireless device-to-device caching
networks: Basic principles and system performance,” IEEE J. Sel. Areas
Commun., vol. 34, no. 1, pp. 176–189, Jan. 2016.
[4] Y. Xu, G. Gui, H. Gacanin, and F. Adachi, “A survey on resource allo-
cation for 5G heterogeneous networks: Current research, future trends,
and challenges,” IEEE Commun. Surv. Tut., vol. 23, no. 2, pp. 668–695,
Apr.–Jun. 2021.
[5] Z. Chen, N. Pappas, and M. Kountouris, “Probabilistic caching in wireless
D2D networks: Cache hit optimal versus throughput optimal,” IEEE
Commun. Lett., vol. 21, no. 3, pp. 584–587, Mar. 2017.
[6] K. Yu, Z. Ma, R. Ni, and T. Zhang, “A caching strategy based on many-to-
many matching game in D2D networks,” Tsinghua Sci. Technol., vol. 26,
no. 6, pp. 857–868, 2021.
[7] L. Li, G. Zhao, and R. S. Blum, “A survey of caching techniques in cellular
networks: Research issues and challenges in content placement and deliv-
ery strategies,” IEEE Commun. Surv. Tut., vol. 20, no. 3, pp. 1710–1732,
Jul.–Sep. 2018.
[8] T. Zhang, H. Fan, J. Loo, and D. Liu, “User preference aware caching
deployment for device-to-device caching networks,” IEEE Syst. J., vol. 13,
no. 1, pp. 226–237, Mar. 2019.
[9] K. Zhang, Y. Zhu, S. Maharjan, and Y. Zhang, “Edge intelligence and
blockchain empowered 5G beyond for the industrial Internet of Things,”
IEEE Netw., vol. 33, no. 5, pp. 12–19, Sep./Oct. 2019.
[10] L. Jiang, S. Xie, S. Maharjan, and Y. Zhang, “Joint transaction relay-
ing and block verification optimization for blockchain empowered D2D
communication,” IEEE Trans. Veh. Technol., vol. 69, no. 1, pp. 828–841,
Jan. 2020.
[11] Y. Xu, Z. Gao, Z. Wang, C. Huang, Z. Yang, and C. Yuen, “RIS-enhanced
WPCNs: Joint radio resource allocation and passive beamforming op-
timization,” IEEE Trans. Veh. Technol., vol. 70, no. 8, pp. 7980–7991,
Aug. 2021.
[12] Z. Liu, C. Liang, Y. Yuan, K. Y. Chan, and X. Guan, “Resource allo-
cation based on user pairing and subcarrier matching for downlink non-
orthogonal multiple access networks,” IEEE/CAA J. Automatica Sinica,
vol. 8, no. 3, pp. 679–689, Mar. 2021.
[13] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Distributed
resource allocation in blockchain-based video streaming systems with
mobile edge computing,” IEEE Trans. Wireless Commun., vol. 18, no. 1,
pp. 695–708, Jan. 2019.
[14] Z. Xiong, S. Feng, D. Niyato, P. Wang, A. Leshem, and Z. Han, “Joint
sponsored and edge caching content service market: A game-theoretic
approach,” IEEE Trans. Wireless Commun., vol. 18, no. 2, pp. 1166–1181,
Feb. 2019.
[15] Z. Xiong, J. Kang, D. Niyato, P. Wang, and H. V. Poor, “Cloud/edge com-
puting service management in blockchain networks: Multi-leader multi-
follower game-based ADMM for pricing,” IEEE Trans. Serv. Comput.,
vol. 13, no. 2, pp. 356–367, Mar./Apr. 2020.
[16] Z. Liu, L. Gao, Y. Liu, X. Guan, K. Ma, and Y. Wang, “Efficient QoS
support for robust resource allocation in blockchain-based femtocell
networks,” IEEE Trans. Ind. Informat., vol. 16, no. 11, pp. 7070–7080,
Nov. 2020.
[17] Y. He, J. Ren, G. Yu, and Y. Cai, “D2D communications meet mobile edge
computing for enhanced computation capacity in cellular networks,” IEEE
Trans. Wireless Commun., vol. 18, no. 3, pp. 1750–1763, Mar. 2019.
[18] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han, “Cloud/fog
computing resource management and pricing for blockchain networks,”
IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600, Jun. 2019.
[19] Y. Jiao, P. Wang, D. Niyato, and K. Suankaewmanee, “Auction mechanisms
in cloud/fog computing resource allocation for public blockchain net-
works,” IEEE Trans. Parallel Distrib. Syst., vol. 30, no. 9, pp. 1975–1989,
Sep. 2019.
[20] H. Wang, Y. Li, X. Zhao, and F. Yang, “An algorithm based on Markov
chain to improve edge cache hit ratio for blockchain-enabled IoT,” China
Commun., vol. 17, no. 9, pp. 66–76, Sep. 2020.
[21] M. Liu, F. R. Yu, Y. Teng, V. C. M. Leung, and M. Song, “Computation
offloading and content caching in wireless blockchain networks with
mobile edge computing,” IEEE Trans. Veh. Technol., vol. 67, no. 11,
pp. 11 008–11 021, Nov. 2018.
[22] Y. Huang, J. Zhang, J. Duan, B. Xiao, F. Ye, and Y. Yang, “Re-
source allocation and consensus of blockchains in pervasive edge com-
puting environments,” IEEE Trans. Mobile Comput., to be published,
doi: 10.1109/TMC.2021.3053230.
[23] J. Zou, C. Li, C. Zhai, H. Xiong, and E. Steinbach, “Joint pricing and
cache placement for video caching: A game theoretic approach,” IEEE J.
Sel. Areas Commun., vol. 37, no. 7, pp. 1566–1583, Jul. 2019.
[24] Q. Xu, Z. Su, and R. Lu, “Game theory and reinforcement learning based
secure edge caching in mobile social networks,” IEEE Trans. Inf. Forensics
Secur., vol. 15, pp. 3415–3429, Mar. 2020.
[25] Y. Zhang, Y. Xu, Q. Wu, X. Liu, K. Yao, and A. Anpalagan, “A game-
theoretic approach for optimal distributed cooperative hybrid caching in
D2D networks,” IEEE Wireless Commun. Lett., vol. 7, no. 3, pp. 324–327,
Jun. 2018.
[26] L. Shi, L. Zhao, G. Zheng, Z. Han, and Y. Ye, “Incentive design for cache-
enabled D2D underlaid cellular networks using Stackelberg game,” IEEE
Trans. Veh. Technol., vol. 68, no. 1, pp. 765–779, Jan. 2019.
[27] R. Wu, G. Tang, T. Chen, D. Guo, L. Luo, and W. Kang, “A profit-aware
coalition game for cooperative content caching at the network edge,” IEEE
Internet Things J., vol. 9, no. 2, 2022, Art. no. 13611373.
[28] J. Nie, J. Luo, Z. Xiong, D. Niyato, and P. Wang, “A Stackelberg game
approach toward socially-aware incentive mechanisms for mobile crowd-
sensing,” IEEE Trans. Wireless Commun., vol. 18, no. 1, pp. 724–738,
Jan. 2019.
[29] M. Gregori, J. Gmez-Vilardeb, J. Matamoros, and D. Gndz, “Wireless
content caching for small cell and D2D networks,” IEEE J. Sel. Areas
Commun., vol. 34, no. 5, pp. 1222–1234, May 2016.
[30] H. Cui, Z. Chen, N. Liu, and B. Xia, “Blockchain-driven contents sharing
strategy for wireless cache-enabled D2D networks,” in Proc. IEEE Int.
Conf. Commun. Workshops, 2019, pp. 1–5.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
https://dx.doi.org/10.1109/TMC.2021.3053230
6670 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 71, NO. 6, JUNE 2022
[31] Q. Xu, Z. Su, and Q. Yang, “Blockchain-based trustworthy edge caching
scheme for mobile cyber-physical system,” IEEE Internet Things J., vol. 7,
no. 2, pp. 1098–1110, Feb. 2020.
[32] Y. Dai, D. Xu, K. Zhang, S. Maharjan, and Y. Zhang, “Deep reinforcement
learning and permissioned blockchain for content caching in vehicular
edge computing and networks,” IEEE Trans. Veh. Technol., vol. 69, no. 4,
pp. 4312–4324, Apr. 2020.
[33] X. Kang, R. Zhang, and M. Motani, “Price-based resource allocation
for spectrum-sharing femtocell networks: A Stackelberg game approach,”
IEEE J. Sel. Areas Commun., vol. 30, no. 3, pp. 538–549, Apr. 2012.
[34] S. Maharjan, Q. Zhu, Y. Zhang, S. Gjessing, and T. Basar, “Dependable
demand response management in the smart grid: A Stackelberg game
approach,” IEEE Trans. Smart Grid, vol. 4, no. 1, pp. 120–132, Mar. 2013.
[35] K. Fujiwara, Y. Okamoto, A. Kameari, and A. Ahagon, “The newton-
raphson method accelerated by using a line search - comparison between
energy functional and residual minimization,” IEEE Trans. Magn., vol. 41,
no. 5, pp. 1724–1727, May 2005.
Yi Yang received the B.S. and M.S. degrees in
management science and engineering from Yanshan
University, Qinhuangdao, China, in 2006 and 2009,
respectively. She is currently an Assistant Researcher
with the School of Electrical Engineering, Yanshan
University. Her research interests include optimiza-
tion theory and application in wireless networks.
Zijian Liu received the B.S. degree in automation in
2019 from Yanshan University, Qinhuangdao, China,
where he is currently working toward the master’s
degree in control science and engineering. His cur-
rent research focuses on resource allocation in D2D
communications.
Zhixin Liu (Senior Member, IEEE) received the
B.S., M.S., and Ph.D. degrees in control theory and
engineering from Yanshan University, Qinhuangdao,
China, in 2000, 2003, and 2006, respectively. He is
currently a Professor with the School of Electrical
Engineering, Yanshan University. In 2009 to 2010,
he visited the University of Alberta, Edmonton, AB,
Canada. His current research interests include perfor-
mance optimization and energy-efficient protocol de-
sign in wireless sensor networks, resource allocation
in cognitive radio networks, and vehicular network.
Yuan’ai Xie received the B.S. degree in automation
from the North China University of Science and Tech-
nology, Tangshan, China, in 2016. He is currently
working toward the Ph.D. degree in control science
and engineering with Yanshan University, Qinhuang-
dao, China. His current research interests include
wireless resource optimization, vehicular network,
and D2D communication.
Kit Yan Chan (Member, IEEE) received the Ph.D.
degree in computing from London South Bank Uni-
versity, London, U.K., in 2006. He is currently a
Senior Lecturer with the Department of Electrical
and Computer Engineering, Curtin University, Perth,
WA, Australia. He was a full time Researcher with
The Hong Kong Polytechnic University, Hong Kong,
during 2004–2009 and Curtin University, Perth, WA,
Australia, during 2009–2013. His research interests
include machine learning, pattern recognition, and
algorithm design. He was the Guest Editor of the
IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, Applied Soft Computing,
Neurocomputing, and Engineering Applications of Artificial Intelligence.
Xinping Guan (Fellow, IEEE) received the B.S. de-
gree in mathematics from Harbin Normal University,
Harbin, China, in 1986, and the M.S. degree in ap-
plied mathematics and the Ph.D. degree in electrical
engineering from the Harbin Institute of Technology,
Harbin, China, in 1991 and 1999, respectively. He
is currently a Professor with the Department of Au-
tomation, Shanghai Jiao Tong University, Shanghai,
China. His current research interests include wireless
sensor networks, networking control system, and ro-
bust control.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:09:24 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice