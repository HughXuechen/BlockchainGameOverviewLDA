A Blockchain based approach for multimedia privacy protection and provenance
A Blockchain based approach for multimedia 
privacy protection and provenance 
 
Alka Vishwa  
School of Software and Centre for 
Artificial Intelligence 
University of Technology Sydney, 
Australia  
 alka.vishwa@student.uts.edu.au 
 
 
 
Farookh Khadeer Hussain 
School of Software and Centre for 
Artificial Intelligence 
University of Technology Sydney, 
Australia 
Farookh.Hussain@uts.edu.au 
 
 
 
Abstract - There has been a vast increase in incidents related to 
multimedia copyright and security breaches in the past few 
years, compromising users’ privacy. One such breach involved 
the seventh season of the TV series “Game of Thrones”, where 
episodes were illegally downloaded before the official release 
date etc. Such security breaches raise questions about the 
approaches and models that currently apply to data privacy and 
security, where the user saves and distributes his data personally 
or depends on a third party or stakeholder to manage the 
distribution rights of sensitive data. When it comes to 
multimedia, many companies or multimedia owners rely on third 
parties, distributors and sales persons to monitor their publicity, 
maintain their popularity and sell their multimedia content. 
Blockchain technology, which was originally devised for the 
digital currency (cryptocurrency), has distinct features such as 
distributed networking, data privacy, trust less computing etc. 
This technology attracts great interest from the research 
community due to its innovative properties which can be applied 
to many business applications, one being access control over 
data. 
 
In this paper, we present a decentralized data management 
framework that ensures user data privacy and control. We 
propose a protocol that uses blockchain technology to take 
control of the user’s data. This protocol enables the user to have 
full control over his multimedia files and he doesn’t need to trust 
a third party. The framework allows the user to not only store 
data but also to query and share data as well as auditing. Finally, 
we discuss possible future extensions of blockchain technology as 
a medium to ensure privacy, data control, auditing and trust 
management in different areas. 
 
Keywords – Blockchain, Smart Contracts, Privacy, Multimedia 
 
I. Introduction 
Multimedia safety, content copyright and the secure distribution of 
audio and music files, images and video/movies is becoming a 
concern for distributors, producers and artists [4]. Media collection 
and distribution is usually facilitated by a physical medium such as 
papers, CDs, DVDs, pen drives or network sharing such as emails. 
One of the best-known examples of a security breach is the 
unauthorized online release of the seventh season of “Game of 
Thrones” before its official release date which resulted in a huge loss 
to the show’s producers and distributors [9]. To stop such incidences 
and to expose and punish the real culprits, it is important that the 
creator of media files should have complete access, authorization and 
a secure medium in which to share his data [1]. If data is leaked, the 
owner should be able to prove his copyright over his content. Online 
mediums, such as Internet-based cloud services like Dropbox or 
peer-to-peer communication is the best available medium in which to 
share data fast and effectively and to ensure privacy [4]. In recent 
years, multimedia copyright breaches have raised privacy concerns 
in this area. But whenever a concern is raised, this is followed by 
new ideas and research to alleviate it. So, copyright breaches in the 
multimedia sector provide an opportunity for the development of 
new platforms which enable the user to safely store and share his 
data. The platform should also provide the owner with authorization 
and safety measures to monitor the activity of a third party. These 
platforms need to be developed in such a way that the user has a 
choice in relation to which part of the data he will share and which 
part he will hide [5]. However, having user control alone over data 
cannot solve the privacy breach problem, as, once the user authorizes 
access to a third party, the third party can do whatever he wants with 
the data. Several studies are currently being undertaken in this area 
and they came up with different opinions and solutions. Many 
studies concluded with the intentional disclosure of specific 
information by the owner [6]. Even though cloud storage is very 
influential and is more trustworthy than devices, there is an extensive 
array of external and internal risks to the integrity of data. From time 
to time, there are occurrences of data leakages from the Cloud.  In 
the Cloud, the client stores his data on cloud servers which are 
maintained by the cloud provider. The data partitioning technique 
increases data security and the user can avoid having a local copy of 
the data thereby reducing data duplication. Data partitioning splits 
large data into smaller blocks and stores it on the Cloud. It assists in 
the fine-grained updates carried out by the user and integrity 
verification of large data is carried out through a trusted third-party 
auditor [7]. 
  
The existing articles discuss either the central storage of data on the 
Cloud or distributed storage on blockchain. But, the real challenge is 
how to protect data from unauthorized access and if a data breach 
occurs by authorized personnel how to prove the user’s authority on 
his data. 
 
In this paper, we present a blockchain-based architecture and 
protocol for data protection [1]. We define the framework which 
includes personal data storage and management functionalities on a 
distributed blockchain-based network with secure access that 
considers everyone’s opinion and is concerned about privacy. In this 
paper, we provide a general architecture, protocol, briefly describe 
different building blocks from the background of blockchain, the 
problems and the solution design. 
   
II. Background about Blockchain 
 
Blockchain technology is commonly described as a distributed 
ledger which was originally devised for the financial sector where 
every transaction is stored and replicated on every connected node of 
the network [2]. Whether an initiated transaction will be added to the 
network or not is decided and validated by the majority consent of 
1941978-1-5386-9276-9/18/$31.00 c©2018 IEEE
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:10 UTC from IEEE Xplore.  Restrictions apply. 
the current ruling nodes. An example of the blockchain working 
principle is shown in Fig. 1 where a payment is sent from user A to 
user B, and when this transaction is initiated by one node, it is 
redirected to other nodes to verify and give their consent for this 
transaction. In case of a duplicate or fake transaction, other nodes do 
not acknowledge it and reject it. Eventually, the transaction will be 
added to a block only when it passes the majority consensus after 
verification by the current nodes.  
 
 
Figure 1: Basic working of the Blockchain network 
A blockchain is a peer-to-peer network, where every node has the 
same right. Each record or block is timestamped and linked to a 
previous block using a hash and it is impossible to delete or modify 
the data. Hence, this technology proved to be trusted when it comes 
to the efficient, secure and auditable storage of transactions. The 
connection of nodes is random, and one cannot predict the 
connection topology, so a network breach is not possible. The 
blockchain network is dynamic as nodes are continuously coming 
and participating in transactions, so there is no specific way for a 
node to leave a network except by not acknowledging consensus or 
responding.  
Joining the Blockchain Network: To join a blockchain network, a 
node must send a message to one existing node with the user’s 
identity, which is called seeding. Once the node knows the user’s 
network ID, it will broadcast this information to the other nodes if 
the user wants to join the network, and once the other nodes register 
the user’s network ID, the user becomes part of the existing 
blockchain network [3].  
 
Figure 2: Blockchain transaction 
There are many ways to find a seed node. This can be done by 
looking up a list of seed nodes if one exists, or by the random 
selection of a node by sending messages. However, it is important to 
select the node which first broadcasts the user’s identity and 
authorised the user to join the blockchain network. 
Publishing new transaction: A blockchain runs on a distributed 
network so if a new transaction needs to be added to a block, every 
node should be aware of it [1]. There is a simple broadcast protocol 
by which this happens. Once a new transaction is broadcast to every 
node, it is added to the nodes’ pending transaction array. As soon as 
the next block is mined, all the transactions residing in the pending 
transaction array are added to the newly mined block. So, assume 
that node 4 (Figure 2) has a new transaction, “A paid B some 
money”, A creates a transaction and submits it to node 4. Node 4 
registers this transaction and broadcasts it to all the other nodes in 
the network and these nodes will add it to their array of pending 
transactions, so each node maintains an array of transactions that 
they have heard about, but they have not been put into the blockchain 
until a new block is mined. 
Race Condition: When two transactions occur simultaneously on 
different nodes or within a very small time difference, it is called a 
race condition. The following methods can be applied to solve this 
[2]: 
1. Nodes may accept the transaction which happens first. 
2. Network position can be a deciding factor, for example, 
which node has a better position on the network. 
Minors (users providing processing power) may implement 
their own logic to resolve this conflict. 
 
Privacy Solutions using Secret Keys: The stored content in the 
blockchain can be kept safe by keeping the secret key safe. This can 
be done in the following ways [3]: 
1. Use of blockchain software: A piece of software that 
remembers an individual's Bitcoin addresses and keys. This 
piece of software can be an application or a program code 
which can be kept either in the user’s mobile or on the cloud.  
2. Hot and cold storage: Hot storage is online when which can 
be dynamically accessed by the user, whereas cold storage is 
offline. Please clearly explain in 1-2 lines the difference 
between cold storage and hot storage. [3] Problem occurs 
when cold storage goes offline. To store information in cold 
storage it can be stored on device, brain wallet (encrypted 
using passphrase which remember by user), paper wallet or 
tamperproof device. 
3. Hierarchical Key generation: This is a solution when cold 
storage is offline. 
4. Splitting and sharing keys: The key is split into N pieces (to 
keep it safe) such that for any given K pieces, the key is 
reconstructed and if there are fewer than K, you can construct 
the original. For example, if you split the key into ten parts 
and if there are less than ten parts you are getting during 
reconstruction you won’t be able to get the original key and so 
the access. 
5. Multi-signature: This is a process where each of the 
participants generate a key pair, so they require multiple 
signatures. For example, if there are four participants all of 
them will generate a key pair with three out of the four keys 
signing.  The result of that is that they are relatively secure if 
the four of them keep their keys separately and secure them 
differently. But if someone (or the hacker) would have to 
compromise three out of the four keys, or if some employee 
or even two employees go rogue, those rogue employees 
cannot steal all the company's coins. 
 
 
III. Overview of Solution for Multimedia provenance and 
privacy protection 
In addition to keeping the secret key safe, there are multiple concerns 
relating to data integrity and the management of data while it is on 
the blockchain. We begin with an overview of our proposed system 
which is a framework for data protection as well as control. The 
designed framework focuses on ensuring data privacy and the user’s 
1942 IEEE Symposium Series on Computational Intelligence SSCI 2018
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:10 UTC from IEEE Xplore.  Restrictions apply. 
control over his data. The system authorizes the user as the owner of 
the data and consider services or third party as guests with 
delegated/granted permissions. Every user has full authority over 
which part of data is shared to whom and the system maintains 
complete transparency in this matter. 
 
Figure 3: Overview of System Architecture 
The four entities comprising the system are as follows:  
a) Users/Artists(U):  They are interested only in uploading and 
using applications to share their data;  
b) User/services(S): They query the required data for 
distribution or sales purposes (e.g., advertising companies, 
distributors or sales service);  
c) Smart contracts: These are automated programs entrusted 
with maintaining privacy on the blockchain and provide 
access to information only to authorized persons; and 
d) Data-lake: This is used to store all the transaction details 
added on blockchain.  
Our proposed system functions as follows: the blockchain accepts 
two new types of users: T(U) which uses blockchain for access as a 
node; and T(S) for data retrieval as a stakeholder. To illustrate, 
consider the following example: a multimedia owner installs a 
blockchain application to preserve data privacy. When the user signs 
up for the first time by broadcasting his identity, he will be accepted 
by the consent of the majority of nodes and he will be provided with 
keys as his new identity and access permissions. When the second 
user or stakeholder arrives with request of any specific data on block, 
his authenticity is verified by his digital signature. Then the smart 
contract is run to verify his access permission and to determine if the 
owner of the information is willing to transfer data or not. Finally, if 
everything goes well, the smart contract gives the stakeholder access 
permission to the required data. Here we use a centralized data 
storage solution (on a cloud) known as the data lake to store the 
transaction details of all the data added on the blockchain. The 
benefit of using a centralized data storage solution is that the actual 
data will be stored on the data lake and uses no space on the 
blockchain. To ensure data security in the centralized cloud location, 
we use data partitioning and user authentication techniques [7]. The 
data stored on the data lake can only be accessed by authorised users 
after verification of their digital signatures and access rights. No trust 
is required in the third party as everything is checked and verified by 
the smart contract and data is stored in the data lake. 
 
Smart contracts included in the design of the proposed solution 
ensure the user is in control of his data. Whenever a third party 
requires access to any data stored on the blockchain, the smart 
contract is executed to ensure his rights based on the pre-determined 
rules. Only when the third-party user is verified is he provided with 
the required data. 
 
 
IV. Algorithmic detailed working of the system 
To detail the system and its processes, it is important to discuss its 
building blocks. These elements are based on the framework 
requirements of our proposed design as previously discussed. 
 
1) Key Identity: Cryptography relies on pair of public and private 
keys. Blockchain uses this technique where the network is aware of 
the public keys of every node and the private key is kept secret by its 
owner. Blockchains utilize a pseudo-random-number-generation 
mechanism for key generation. This mechanism is used to generate 
the private/secret key. A user can generate and change his public 
keys, but he has to broadcast it to the network to make everyone else 
aware about this development whenever he wants to a be a part of 
any transaction. So, the combined identity of a user is its compound 
identity which comprises a public and private key. It is a shared 
identity for two or more parties, where one party owns the secret key 
(owners), and the rest have restricted /authorized/no access to the 
other key called the pubic key (guests).  Algorithm 1 illustrates the 
working for a single owner (the user) and a single guest (the service). 
As illustrated, the key identity is comprised of public and private 
key-pairs for the owner and guest, as well as a symmetric key used to 
encrypt (and decrypt) the data to ensure the data protection of all the 
players involved in the blockchain. Formally, a compound identity is 
made up of three elements (as per the network as follows): 
 
Compound (u; gpublic) = (pksigu;g; sksigs;g; ) Compound(u) = 
(pksigu; sksigu; ) 
 
So, the key identity during any transaction between the data owner 
and the stakeholder comprises 5 tuples: 
 
Key identities(u;g) =( pksigu; pksigg; sksigu; sksigg; ) 
 
 
Algorithm 1: Generating a Key Identity 
 
  
1. Procedure Key Identity (u;g) 
2. u and g form a secure channel 
3. u executes  
a. generate public key(pksigu)  
b. Sign (Message, Private Key) -> Digital Signature 
c. User share , pksigu and message signed with digital 
signature 
4. Stakeholder verifies 
a. Verify (Message, Public Key, Signature)  True/False 
b. Decrypt  
5. End Procedure 
 
 
2) Protocol: A set of permissions a user (u) grants guest (g), 
denoted by PROTOCOL (u;g). For example, if a guest g requires 
access to the user’s multimedia data and publication rights, then 
PROTOCOL (u;g) will be decided and programmed by the smart 
contracts. It is important to note that the smart contact protocol 
should be written and verified by the authorised user. The protocol 
document is automatically cancelled after specific time and neither 
of the two parties can interfere with the code without the other 
knowing since all the participants are simultaneously alerted.  
 
3) Data Lake: As multimedia data is large enough to store on blocks 
and it might impact the speed of the transaction, a framework is 
proposed to store it on cloud. This centralized repository to store data 
is known as the data lake and it is a cloud-based centralized storage 
facility. Data security on the data lake can be ensured by a password 
IEEE Symposium Series on Computational Intelligence SSCI 2018 1943
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:10 UTC from IEEE Xplore.  Restrictions apply. 
protection mechanism which helps them store a wide variety of data, 
from images to documents to key-value stores. Data lakes can also 
be used for analysis on stored data. For example, the success ratings 
of artists quality and trend analysis. The information stored on the 
data lake can also be encrypted and digitally signed to ensure the 
privacy and authenticity of the information [9].  
 
Algorithm 2: Data storage and retrieval in the data lake   
 
1.  procedure DataLake () 
2.  block(B) and DataLake (D) form a secure channel 
3.  create table for D 
4.  if Verify (Message, Public Key, Signature)  True 
5.  Message[u]  block[i], TranDetail[u] block[i] 
6. (Message, Signature)  table[D] 
7. When user wants to retrieve the information 
a. Sign (message, Public Key, signature)  D 
b. Verify (Message, Public Key, Signature)                      
True/False 
c. Return Information block[i] 
8. end if  
9. end procedure  
 
 
4) Smart Contract: A smart contract is a special protocol 
intended to contribute, verify or implement the negotiation or 
performance of the contract. Smart contracts allow credible 
transactions to be performed without third parties. These transactions 
are trackable and irreversible. Smart contracts contain all the 
information about the contract terms and execute all the envisaged 
actions automatically. They can also take information as input, 
process this information through the rules set out in the contract, and 
take any action required as a result. 
Algorithm 3: Permissions check against smart contract  
 
1. procedure CheckPermission (pksigg; p) 
2. g wants to access information on block[i] 
3. g sends (Message, Public Key, Signature) to block[i] 
4. smart contract execute against policies p 
a. verify (Message, public key, Signature)  true 
b. check g against all policies p 
c. if p  true 
5. return info (block [i] ) 
6. End Procedure 
 
 
V. Result and Discussion 
This paper presented the initial design and algorithmic working of 
the platform that uses blockchain as a privacy-aware distrusted data 
storage network. Blockchain itself is a trustless medium where data 
cannot be removed or modified once added. We use this feature of 
blockchain to add privacy to stored data. Data cannot be trusted in 
the hands of third-party entities when there is a risk of a breach of 
copyright. Instead, the user should have the authority to control his 
data. The protocol discussed in the paper describes how to secure 
user data over blockchain using smart contracts. The smart contract 
should be written and agreed upon by the owner and the third party. 
The contract executes whenever the third party asks for permission 
for user data. In this way, the owner will always be aware of when 
and who is accessing his data. 
 
 
 
 
 
Pseudocode 1: Smart contact pseudocode  
 
 
contract Copyright { 
    mapping (string => string) Item;  // key and value mapping 
    address public ownerbc;              // Owner wallet address  
 
    constructor () public { 
        ownerbc = msg.sender;               // setting Owner’s address 
    } 
 
    modifier restrictedOwner { 
        require (msg.sender == ownerbc);  // Access rights that checks 
if the address is owner or not; 
    } 
    function setItem (string key, string value) public 
restrictedOwner()   // Set Item and only owner can do it      
       { 
        Item[key] = value; 
         } 
   function getItemdata (string arg) public constant returns      
(string)   // can see the value if they know key 
   {      
       return Item[arg]; 
    } 
} 
 
Furthermore, blockchain provides a decentralized platform that 
makes storing, managing and sharing sensitive data with the owner’s 
control and permission simpler. Moreover, smart contracts can be 
programmed in the blockchain to follow relevant laws and 
regulations.  The smart contract, once agreed upon, can be enforced 
automatically whenever required. In other situations, such as 
copyright violence, the entries in the ledger can be used as evidence 
to prove ownership. 
 
The pseudocode 1 above shows part of the code used for executing 
smart contracts in our proposed approach. 
 
 
VI. Conclusion and Future Work 
Multimedia data, which is very sensitive, should not be trusted in the 
hands of third parties as it may be stolen and copied. Instead of 
trusting a third party to store and distribute data, a user should own 
and control their data without compromising security. The proposed 
platform enables this by combining a blockchain, encryption 
mechanism with an off-blockchain storage solution called the data 
lake. This ensures that multimedia owners are aware of the data that 
is being collected from them and how it is used, hence, they are not 
required to trust a third party. In addition, the blockchain recognizes 
the users as the owners of their personal data. A stakeholder, after 
being verified by a smart contract, can focus on best utilizing data 
such as sales and distribution data and analyses as they have the 
owner’s permission and there is no need for concern over security 
and copyright. 
 
Furthermore, with a decentralized platform including the cloud 
storage, makes it a proof that can be provided in case of any conflict 
Moreover, rules for authenticity checks and authorization can be 
programmed into the blockchain using a smart contract, so that these 
can be enforced automatically whenever a data request comes in. In 
other situations, the distributed ledger due to its temper-proof nature 
can be presented as an evidence. 
 
1944 IEEE Symposium Series on Computational Intelligence SSCI 2018
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:10 UTC from IEEE Xplore.  Restrictions apply. 
 
References 
[1] G. Zyskind, O. Nathan, and A. S. Pentland, “Decentralizing Privacy: 
Using Blockchain to Protect Personal Data,” IEEE Symposium on 
Security and Privacy, pp. 180-184, 20 July, 2015. 
[2] L. A. Linn, and M. B. Koo, “Blockchain For Health Data and Its 
Potential Use in Health IT and Health Care Related Research,” white 
paper. 
[3] A. Nayak, and K. Dutta, "Blockchain: The perfect data protection 
tool," 2017 International Conference on Intelligent Computing and 
Control (I2C2), pp. 1-3, 24 June, 2017. 
[4] D. Bhowik, and T. Feng, “The Multimedia Blockchain: A Distributed 
and Tamper-Proof Media Transaction Framework,” 22nd 
International Conference on Digital Signal Processing (DSP), 
London, pp. 1-5, 2017. 
[5] I. Torre, F. Koceva, O. R. Sanchez, and G. Adorni, “A Framework for 
Personal Data Protection in the loT,” The 11th International 
Conference for Internet Technology and Secured Transactions , pp. 
384-391, 2016. 
[6] C. Farkas and A.G Stoica, "Correlated Data Inference," Data and 
Applications Security XVII. Springer US, pp. 119132,  2004. 
[7] Y. Shinde, and A. Vishwa, “Privacy Preserving using Data 
Partitioning Technique for Secure Cloud Storage”, International 
Journal of Computer Applications(IJCA) ,Vol. 116(16),pp. 0975 - 
8887,  April 2015. 
[8] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” 2008. 
[9]   https://en.wikipedia.org/wiki/Game_of_Thrones_(season_7) Retrieved 
: june, 2018 
 
 
 
 
 
IEEE Symposium Series on Computational Intelligence SSCI 2018 1945
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:58:10 UTC from IEEE Xplore.  Restrictions apply.