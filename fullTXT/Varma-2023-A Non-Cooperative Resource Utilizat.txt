A Non-Cooperative Resource Utilization Game Between Two Competing Malware
IEEE CONTROL SYSTEMS LETTERS, VOL. 7, 2023 67
A Non-Cooperative Resource Utilization Game
Between Two Competing Malware
Vineeth S. Varma , Yezekayel Hayel , and Irinel-Constantin Morărescu
Abstract—In this letter, we consider a population of
digital nodes (such as phones, computers, etc.) that are
under the attack of two competing malware. These mal-
ware infect the nodes in order to exploit their compu-
tational resources for specific purposes such as min-
ing crypto-currency, cloud computing, etc. We suppose
that each virus spreads following the susceptible-infected-
susceptible (SIS) compartmental model. Additionally, we
assume that the malware designers can tune the percent-
age of resource utilization from their host nodes. A higher
resource utilization implies a higher instantaneous profit
but will also lead to faster detection and elimination (node
recovery) of the malware. Once the malware is detected,
complete protection of the infected node by means of anti-
malware software is also possible at a smaller rate. The
proposed setup results in a non-cooperative game between
the two players (the malware designers) trying to maximize
their profit i.e., the resources utilized from the infected
nodes. We characterize and analyze the Nash equilibrium
for such a game using a time-scale separation approxima-
tion. Finally, we numerically validate the approximation and
we compute the price of anarchy.
Index Terms—Computer networks, game theory,
compartmental models.
I. INTRODUCTION
W ITH the ever-growing importance of networked or
cloud computing, crypto-mining, and other applica-
tions, the computational resources available on a network have
become an important target for malicious software, known
as malware. Malware is often built by cyber-criminals, and
it typically aims to compromise target computers with the
ultimate goal of stealing sensitive data or gaining access to
private systems. However, in this letter, we focus on mal-
ware that desires to exploit the computational resources for
the profit of their creator, such as by mining crypto-currency.
Defense mechanisms such as firewalls and anti-viruses have
Manuscript received 21 March 2022; revised 28 May 2022; accepted
21 June 2022. Date of publication 27 June 2022; date of current
version 11 July 2022. This work was supported by the ANR under
Grant NICETWEET ANR-20-CE48-0009. Recommended by Senior
Editor M. Guay. (Corresponding author: Vineeth S. Varma.)
Vineeth S. Varma and Irinel-Constantin Morărescu are with
the Université de Lorraine, CNRS, CRAN, 54000 Nancy,
France (e-mail: vineeth.satheeskumar-varma@univ-lorraine.fr;
constantin.morarescu@univ-lorraine.fr).
Yezekayel Hayel is with the Department of Computer Science,
University of Avignon, 84911 Avignon, France.
Digital Object Identifier 10.1109/LCSYS.2022.3186620
been developed in order to defend against malicious software
but the powerful ones often require investment from the end-
users. Moreover, most defense techniques are focused on
intrusion detection systems (IDS) [1] and not on supervision
systems.
To the best of our knowledge, no work has studied the
problem of smart malware that tries to maximize resource
utilization without being detected. Specifically, in our setup,
a high computational resource utilization will result in large
instantaneous profits for the malware designer but will slow
the infected targets. Consequently, the owner will be able to
easily detect that the device is corrupted. Understanding this
trade-off and its impact is essential to design anti-malware
strategies from the network point of view. To study this trade-
off, we need to analyze the impact of resource utilization in
the spread and persistence of the malware on the network.
Epidemiological models have been widely and efficiently used
to describe the dynamics of malware proliferation over a com-
puter network as seen from [2], [3]. Game theoretical models
have also been used to study how the defending nodes may
utilize their resources and invest in securing their device or
not [4], [5], [6].
Since we consider that the network is under attack by two
(competing) malware, classical 1-virus models are insufficient,
and we need to look at bi-virus models. In the literature on SIS
epidemiological models, a very well known result for the two
(competing) virus case is that of the “Winner takes all” [7].
In this case, depending on the initial conditions and the con-
tamination rates of the viruses, one of them becomes extinct
and the other propagates all over the network. Note that the
term competing here implies that the presence of one virus
on a node makes it inaccessible to the other virus. This is the
case for some biological viruses. This model has been well
studied in the SIS literature and control strategies for reaching
the disease-free equilibrium have been proposed in [8].
Unlike the above mentioned works, which study protec-
tion strategies with the network agents as the decision makers
against an epidemic with fixed parameters, what we study in
our paper is the interaction framework between two malware
designers in a game-theoretic setting. The decision makers
(players) in our work are the malware designers, who, before
releasing the malware to infect the network, are able to tune
the resource utilization parameter which impacts their instan-
taneous profits from an infected node, but also increases the
chance for the malware to be detected and removed. Note
that similar problem formulations can be encountered in other
2475-1456 c© 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:35 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-8762-2790
https://orcid.org/0000-0003-3891-3916
https://orcid.org/0000-0002-8950-8112
68 IEEE CONTROL SYSTEMS LETTERS, VOL. 7, 2023
application domains. For instance, we can consider the opin-
ion dynamics over a social network under the influence of
competing marketers. While the SIS model is geverned by
nonlinear dynamics, in [9] and [10], the authors consider a
very basic linear opinion dynamics model [11] under the influ-
ence of competing entities. They used game-theoretical tools
to characterize the Nash equilibrium of the network and the
resource allocation in terms of the initial conditions and the
node centrality of each individual.
To analyze the game we first emphasize that under a realistic
assumption, the overall dynamics evolves on two time scales.
Consequently, we first use a rather classical result (see [12]
for instance) to decouple the slow and fast dynamics lead-
ing to good approximations of the original states. With this
decoupling the analysis of the game is easier to analyze. The
methodology is numerically validated.
The rest of this letter is organized as follows. In Section II,
we provide the epidemiological model for the malware spread
and the framework for the game between the two competing
malware. In Section III, we apply time-scale separation (TSS)
on the malware spread to approximate and derive closed-form
expressions for the utilities. Next, in Section IV we analyze the
resulting non-cooperative game between the two malware and
under certain assumptions, provide a characterization of the
Nash equilibrium. In Section V numerical examples justify the
TSS and demonstrate the feasible utilities, Nash equilibrium,
and the price of anarchy for the game. Finally, we provide
concluding remarks and perspectives for future research in
Section VI.
Notation: Let R≥0 = [0,∞) denote the set of non-negative
real numbers. For the ease of exposition, when k ∈ {1, 2} is a
player index, to refer to the index of the other player as −k,
i.e., −k := 3−k. We say that a function f : R �→ R is of order
ε and denote this by O(ε) if there exist a constant M ∈ R≥0
such that |f (x)| < Mε,∀x.
II. PROPOSED PROBLEM FORMULATION
A. Malware Infection Model
Our model is inspired by the well-known compartmental
epidemic modeling in [13]. In particular two types of infection
are considered, which are not often studied in such mod-
els and for this feature, we refer to the model in [7]. We
use S(t) ∈ [0, 1] to denote the population fraction of sus-
ceptible nodes in the network, I1(t), I2(t) ∈ [0, 1] to denote
nodes infected with the first and second malware respectively
and finally we use P(t) ∈ [0, 1] to denote the population
of fully protected nodes at any given t ∈ R≥0. As all
these variables denote the population fractions, we must have
S(t) + I1(t) + I2(t) + P(t) = 1 at any time t ≥ 0. For ease of
exposition, we will skip explicitly denoting the time depen-
dence for the rest of this letter. The two (competing) malware
“susceptible-infected-susceptible-protected” (SISP) model is
written as follows.
Ṡ = −γ1SI1 − γ2SI2 + δ1(u1)I1 + δ2(u2)I2
İ1 = +γ1SI1 − δ1(u1)I1 − μ1(u1)I1
İ2 = +γ2SI2 − δ2(u2)I2 − μ2(u2)I2
Ṗ = μ1(u1)I1 + μ2(u2)I2. (1)
Here, γ1, γ2 ∈ R≥0 are the infection rates of malware one
and two respectively. The resource utilization by malware
k ∈ {1, 2} is given by uk ∈ U , which is the decision variable for
malware k. We consider |U | < ∞ and U ⊂ R>0 (a finite dis-
crete set with positive real elements), with umin = min(U) > 0
the minimum amount of resources that must be utilized for
a malware to be useful. The functions δk : U → R≥0 and
μk : U → R≥0 denote the recovery rate and protection rates,
respectively. A higher resource utilization implies a higher
chance of the malware being detected and therefore being
purged from the host or for the host to install powerful anti-
malware software, making it permanently free of infection
from all malware. Thus, δk and μk are strictly increasing
functions.
B. Non-Cooperative Game Model
The revenue (or profit/utility) accumulated by each malware
k after it’s deployment at time t = 0 is given by
Rk(u1, u2) =
∫ ∞
0
ukIk(t)dt. (2)
This expression corresponds to the total amount of compu-
tational resources exploited by malware k from the population
of nodes over an infinite horizon of time. Clearly, malware
interact through the number of infected devices. We define the
non-cooperative game G := ({1, 2}, {U ,U}, {R1, R2}) where
1) The set of players (malware designers) is given by {1, 2},
2) the action set for each player is U and
3) the utility function for each player k is Rk(u1, u2).
Our objective is to characterize the Nash equilibrium (NE)
of this game and to numerically study the price of anarchy, i.e.,
the loss of total revenue at the social optimum when compared
to the NE. To recall, a strategy (u∗
1, u∗
2) is said to be a pure
NE if and only if
Rk(uk, u∗−k) ≤ Rk(u
∗
1, u∗
2) (3)
for all uk ∈ U and for all k ∈ {1, 2}. That is, no player
can increase its revenue by unilaterally deviating from the NE
strategy.
III. REVENUE APPROXIMATION UNDER
TIME-SCALE SEPARATION
Evaluating Rk(u1, u2) analytically is challenging due to the
non-linear dynamics (1). Thus, we apply TSS in order to
approximate the revenue under the following assumption.
Assumption 1: There exists a small ε ∈ R≥0 (we write
ε << 1) such that for all k ∈ {1, 2} and uk ∈ U one has
μk(uk) ≤ εδk(uk) (4)
The practical meaning of Assumption 1 is that deleting a
detected malware is free of cost as the host can uninstall or
delete the associated program (at rate δk) as soon as it is
detected. On the other hand, installing a powerful anti-malware
software (at rate μk) as soon as a malware is detected is rare
since it is not free. Thus, we typically have that μk(uk) is
much smaller than δk(uk).
Now, we denote the winning malware by
k∗(u1, u2) =
{
k ∈ {1, 2}
∣∣∣ δk(uk)
γk
< min
{
δ−k(u−k)
γ−k
, 1
}}
(5)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:35 UTC from IEEE Xplore.  Restrictions apply. 
VARMA et al.: NON-COOPERATIVE RESOURCE UTILIZATION GAME 69
For convenience, we will drop the dependence of k∗ on
(u1, u2) and we will simply call it k∗. Note that k∗ becomes
an empty set (no winner or loser) if δ1(u1)
γ1
= δ2(u2)
γ2
. We use
φk(u1, u2) to denote the success of malware k given by
φk(u1, u2) =
⎧⎨
⎩
1 if k∗ = k
0.5 if k∗ = ∅ and δk(uk)
γk
< 1
0 otherwise.
(6)
Theorem 1: Under Assumption 1, we have
Rk(u1, u2) = φk(u1, u2)
(
1 − δk(uk)
γk
)
uk
μk(uk)
+ O(ε) (7)
for any I1(0) > 0, I2(0) > 0.
Proof: First, note that we consider δk(uk) < γk for at least
one k ∈ {1, 2} as otherwise both the malware will die out
quickly, making it a trivial case resulting in almost zero rev-
enue for both. This implies that for any u1, u2, we can write
γk := ε−1μkgk and δk := ε−1μkdk where gk, dk are functions
of O(1) under Assumption 1. We omit the dependence on
actions (u1, u2) for ease of exposition for the rest of the proof
as they do not change during the course of the dynamics.
We apply time-scale separation according to methodology
described in the chapter on singular perturbations in [12].
Since O(γ ) = 1, we say that tf = t is the fast time scale and
ts = εt is the slow time scale. This allows us to rewrite (1) in
the slow time scale as follows.
ε
dS
dts
= −μ1g1SI1 − g2μ2SI2 + d1μ1I1 + d2μ2I2
ε
dI1
dts
= μ1I1(g1S − d1) − εμ1I1
ε
dI2
dts
= μ2(g2SI2 − d2I2) − εμ2I2
dP
dts
= μ1I1 + μ2I2. (8)
We can similarly rewrite (1) in the fast time scale as
dS
dtf
= −γ1SI1 − γ2SI2 + δ1μ1I1 + δ2μ2I2
dI1
dtf
= I1(γ1S − δ1) − ε
γ1
g1
I1
dI2
dtf
= μ2(g2SI2 − d2I2) − ε
γ2
g2
I2
dP
dtf
= ε
γ1
g1
I1 + ε
γ2
g2
I2. (9)
It is noteworthy that the dynamics of the fast states S, I1, I2
do not depend on the slow state P. This simplifies the expres-
sion of the slow and fast approximations. In the sequel we use
Sf , If
1, If
2 and Ps to denote the approximations of S, I1, I2 and
P after the decoupling of the slow and fast dynamics.
Fast dynamics: Setting ε → 0 in (9), we have the following
dynamics.
dSf
dtf
= −γ1SI1 − γ2SI2 + δ1I1 + δ2I2
dIf
1
dtf
= +γ1SI1 − δ1I1
Fig. 1. Phase portrait, i.e., the vector field associated to (İ1, İ2) for each
value of (I1, I2), of (1) with γ1 = γ2 = 0.1, δ1 = 0.05, δ2 = 0.03 and
μ1 = μ2 = 0.
dIf
2
dtf
= +γ2SI2 − δ2I2
dPs
dtf
= 0 (10)
This dynamics corresponds to the classical two competing-
virus SIS model studied in [7, Sec. 4.2], which has exactly one
stable equilibrium at Sf = δk∗
γk∗ , If
k∗ = 1−Sf −Ps and If
−k∗ = 0
when k∗ = ∅ (there is a clear winner). We illustrate this result
with a phase portrait of the fast dynamics in Figure 1. On
the other hand, if there is no clear winner, i.e., k∗ = ∅, co-
existence of the two malware becomes possible. In this case,
we will assume symmetric initial conditions which results in
an equilibrium of the fast dynamics at If
k(T) = 0.5−0.5 δ1
γ1
for
both players and Ss = δ1
γ1
.
Slow dynamics: Without any loss of generality, let’s consider
that k∗ = 1. Setting ε → 0 in (8), we obtain Sf = δ1
γ1
= g1/d1
and If
2 = 0 to satisfy the first three lines. All that remains is
the slow dynamics
dIf
1
dts
= −μkIf
1 = −dPs
dts
(11)
Since P(0) = 0, applying the results in [12], we obtain
Ik∗(t) = If
k∗(t) + O(ε) =
(
1 − δk∗(uk∗)
γk∗
)
exp(−μk∗ t) + O(ε)
for all t > 0. Additionally as Ik(t) is exponentially converging
to 0, even the integral of the approximation term should be
bounded and of the order of ε. Thus, we have
R̃k∗(u1, u2) =
∫ ∞
0
uk∗
(
1 − δk∗(uk∗)
γk∗
)
exp(−μk∗ t)dt (12)
with R̃k∗(u1, u2) − Rk∗(u1, u2) = O(ε). Thus results in (7) for
all cases with a clear winner and half of this expression in
case of a tie.
Indeed, it is clear that when the two malware do not co-exist
on the same host, the analysis is much simpler as the only
stable equilibrium is that of the one with the smaller recov-
ery rate for the reduced-order dynamics. On the other hand,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:35 UTC from IEEE Xplore.  Restrictions apply. 
70 IEEE CONTROL SYSTEMS LETTERS, VOL. 7, 2023
when both malware may co-exist, there are two (locally) stable
equilibria for the reduced-order dynamics and thus the equilib-
rium reached depends a lot on the initial conditions as will be
demonstrated in Section V-D. Since I1(0), I2(0) are assumed
to be non-controllable, we consider that I1(0) = I2(0) when
we evaluate the revenue during a “tie” (both malware have the
same ratio between their recovery and spreading rates). Next,
we study the game G when the revenue function is given by
the results in Theorem 1.
IV. NON-COOPERATIVE GAME ANALYSIS
In this section, we characterize the NE of the non-
cooperative game G defined in Section II. The results from
Theorem 1 provide a closed-form expression for the utility
functions, and this allows us to write the best response of
player k to an action u−k by the other player as
BRk(u−k) = arg max
U
{(
1 − δk(uk)
γk
)
uk
μk(uk)
φk(u1, u2)
}
.
Next, we characterize the NE of the game G as stated in
the following.
A. Existence of Pure NE
The existence of pure NE is usually not guaranteed in non-
cooperative games, whereas in our setting we have the proof of
its existence. Additionally, for some cases, the non-cooperative
game may have several pure NE.
Proposition 1: The game G admits at least one pure NE
given by
1) (umin, umin) if δ1(umin)
γ1
= δ2(umin)
γ2
,
2) All (BR1(umin), u2) with u2 ∈ U such that
k∗(BR1(umin), u2) = 1, when δ1(umin)
γ1
<
δ2(umin)
γ2
,
3) All (u1, BR2(umin)) with u1 ∈ U such that
k∗(umin, BR2(umin)) = 2 otherwise.
Furthermore, any additional NE (u1, u2) if they exist, must
satisfy δ1(u1)
γ1(u1)
= δ2(u2)
γ2(u2)
.
Proof: We prove this case by case. First, if δ1(umin)
γ1
= δ2(umin)
γ2
we have that δk(uk)
γk
>
δ−k(umin)
γ−k
for any uk > umin as δk is a
strictly increasing function. This implies that Rk(uk; u−k =
umin) = 0 for all uk > umin, proving that (umin, umin) is a NE
for this case.
In the second case, player 1 is playing its best response
to player 2 and so by definition can not improve his util-
ity by deviating. On the other hand, player 2 is losing and
has 0 revenue for all u2 ∈ U as umin is already the small-
est action playable. Thus, it can not improve its utility either.
Thus, (BR1(umin), umin) is a NE if k∗(BR1(umin), umin) = 1.
Similar arguments hold for case 3.
Next, consider that there exists some NE (u1, u2) such that
δ1(u1)
γ1(u1)
= δ2(u2)
γ2(u2)
. This excludes the additional NE case men-
tioned in the proposition statement. Without loss of generality
let’s say δ1(u1)
γ1(u1)
>
δ2(u2)
γ2(u2)
. This means that player 2 is the winner
of the epidemic and thus R1(u1, u2) = 0. If, u1 = umin, then
BR2(umin) is by definition the best choice for player 2 and so
all the NE are fully captured by case 3).
Otherwise, if u1 > umin and u2 /∈ BR2(umin), and (u1, u2)
is an NE, then u2 ∈ BR(u1) by definition of the NE and the
best response. This implies that δ1(umin)
γ1
<
δ2(u2)
γ2
as the best
responses must match otherwise. Then player 1 can deviate to
umin and improve his utility as u2 = BR2(umin), and (u1, u2)
is therefore not an NE by contradiction.
The previous proposition shows the existence of at least
one pure NE, but non-cooperative games generally allow for
multiple Nash equilibria [14]. In next section, we are able
to determine them explicitly by assuming linear recovery and
protection rates.
B. Special Cases for the Recovery and Protection Rates
Consider two adjacent elements of U (recall that U is a
finite discrete set), i.e., any U1, U2 ∈ U with U1 < U2 such
that there exists no other U ∈ U such that U1 < U < U2.
Now, we say that the action set is dense with order α > 1 if
U2 ≤ αU1 for all U1, U2 adjacent.
Assumption 2:
δk(uk) := ak + bkuk (13)
and μk(uk) = εδk(uk) with ak, bk ∈ R≥0, ε ∈ (0, 1) and small.
Since ε is taken to be small, Assumption 2 automatically
implies that Assumption 1 is satisfied. Now, we have the
following result for the uniqueness of the NE.
Proposition 2: Under Assumption 2, the only pure NE for
game G are the ones stated in Proposition 1 items (1)-(3) if U
is of order α ≤ 2.
Proof: Consider that there exists some NE (u1, u2) other
than the ones described in Proposition 1 items 1)-3). That is
consider that (u1, u2) is an NE with δ1(u1)
γ1(u1)
= δ2(u2)
γ2(u2)
. Due to
there being no winner, the utility for player 1 is given by
R1(u1, u2) = (1 − a1 + b1u1
γ1
)
u1
2ε(a1 + b1u1)
(14)
Now, consider that player 1 deviates his strategy to u′
1 = u1 −
�. His new utility is given by
R1(u1 − �, u2) = (1 − a1 + b1u1 − �
γ1
)
u1 − �
ε(a1 + b1u1 − b1�)
(15)
as he wins. We have
R1(u1 − �, u2) − R1(u1, u2)
> C
(
u1 − �
(a1 + b1u1 − b1�)
− 0.5
u1
(a1 + b1u1)
)
> C
(
u1 − �
(a1 + b1u1)
− 0.5
u1
(a1 + b1u1)
)
(16)
where C = ε−1(1− a1+b1u1−�
γ1
) which is positive if � ≤ u1/2.
Since u1 ≤ 2u′
1 for any u1, u′
1 adjacent, (u1, u2) can not be an
NE, resulting in a contradiction.
V. NUMERICAL PERFORMANCE ANALYSIS
A. Validity of TSS Approximation
First, we demonstrate that (1) is well approximated by the
TSS done in Theorem 1. For this purpose, we take γ1 = γ2 =
0.1, δ1(u1) = 0.01 + 0.05u1, δ2(u2) = 0.01 + 0.03u2 with
u1 = u2 = 1. We then take μk(uk) = 0.1δk(uk) in the first
figure and μk(uk) = 0.02δk(uk) in the second figure, i.e., the
TSS factor ε = 0.1 and 0.02 respectively to represent relatively
higher and lower protection rates.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:35 UTC from IEEE Xplore.  Restrictions apply. 
VARMA et al.: NON-COOPERATIVE RESOURCE UTILIZATION GAME 71
Fig. 2. The first malware is seen to die out faster than the second but
still gains some revenue due to ε being not so small.
Fig. 3. The first malware dies out rapidly and gains very little revenue
and the TSS approximation is quite good for the infected population of
the second malware.
Fig. 4. All the feasible utilities with the NE marked in red.
In the simulation for Figure 2, we compute that R1(u1, u2) =
10.5 and R2(u1, u2) = 134 versus R̂2(u1, u2) = 150, where R̂
denotes the TSS approximation from Theorem 1. This indi-
cates a relative error, i.e., R̂2(u1,u2)−R2(u1,u2)
R̂2(u1,u2)
of 11%. On the
other hand, in Figure 3, we observe R1(u1, u2) = 13 and
R2(u1, u2) = 727 with the TSS approximation R̂2(u1, u2) =
750 indicating a relative error of around 3%. Simulations with
other values of ε ∈ {0.005, 0.01, 0.05, 0.2} suggest that the
relative error is of the order of ε.
B. NE Analysis of the Game G
Next, we will take γ1 = γ2 = 0.1, δ1 = δ2 = 0.01 +
0.03u1, μk = 0.02δk(uk), U = {0.1, 0.2, . . . , 1} and plot all
the feasible utilities in Figure 4, with the NE marked in red.
Note that these rate functions satisfy Assumption 2. Indeed,
as proven in Proposition 1, (umin, umin) is a NE and is in fact
the only NE as proven in 2 for this case as U is of order 2.
Next, we remove some of the elements of the action set
and demonstrate that when the order of the set is higher than
TABLE I
(REVENUE 1, REVENUE 2) WITH SEVERAL CHOICES OF ACTIONS.
THE ONLY PURE NE STRATEGY IS (0.1, 0.1)
TABLE II
(REVENUE 1, REVENUE 2) FOR A SMALLER SET OF ACTIONS
two, multiple NE may exist. First, we look at all the result-
ing utilities with U = {0.1, 0.2, 0.7} in Table I, which allows
exactly one pure NE at (0.1, 0.1). However, removing the ele-
ment 0.2 from the action set results in multiple NE as can
be seen from Table II with (0.7, 0.7) being an additional NE.
The two tables above highlight an effect similar to the famous
Braess’ Paradox, allowing additional options results in a poor
NE for both players. In the second case, if both malware play
uk = 1 they don’t gain anything by deviating. On the other
hand, allowing the action 0.2 as in Table I allows either player
to deviate and improve their utility.
C. Interpretation and Discussion
Typically in game theory, the “social optimum” is defined
as the strategy profile maximizing the sum of the individual
utilities. Then, the price of anarchy compares the sum of the
utilities at the NE to that at the social optimum. However,
in this context, where the players are malicious entities, the
objective of the network and of the public, in general, is to
minimize the profits earned by the malware. In this sense,
anarchy is something desired.
In the example studied in Table I, (0.7, 0.7) is the strategy
maximizing the sum utility of the two players which results
in R1 = R2 = 390. However, due to the competition between
the malware, the only NE is one with R1 = R2 = 167. In
a broader sense, the implication here is that when multiple
malware or viruses compete on a common network, the one
utilizing the least resources “wins” as it is harder to detect
or is not worth it for the users to be protected against. If
the software or hardware allows for a much smaller umin and
the malware can be tuned well (U is of sufficiently small
order), the NE will be correspondingly worse. For exam-
ple, if U = {0.05, 0.1, 0.2, 0.7} the NE utility becomes 96
for both players. Therefore, allowing malware more free-
dom in their choice of creating codes that utilize a smaller
value of resources may result in intensifying the competition
between the malware, resulting in them earning smaller profits,
consequently improving the end-user welfare.
D. Alternate Virus Model
The model (1) assumes that the two malware can not
co-exist on the same computer. This kind of epidemiological
model is perfectly suited for certain virus strains but may not
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:35 UTC from IEEE Xplore.  Restrictions apply. 
72 IEEE CONTROL SYSTEMS LETTERS, VOL. 7, 2023
Fig. 5. Phase portrait of (17) with γ1 = γ2 = 0.1, δ1 = 0.05, δ2 = 0.03
and μ1 = μ2 = 0.
always be suitable for computer viruses and malware. Thus,
we will also provide a brief analysis of the two non-interacting
virus SISP model written as follows.
Ṡ = −γ1SI1 − γ2SI2 + δ1(u1)I1 + δ2(u2)I2
+ δM(u1, u2)IM
İ1 = +γ1SI1 − γ2I1I2 − δ1(u1)I1 − μ1(u1)I1
İ2 = +γ2SI2 − γ1I1I2 − δ2(u2)I2 − μ2(u2)I2
İM = (γ1 + γ2)I1I2 − (δ1(u1) + δ2(u2))IM
− (μ1(u1) + μ2(u2))IM
Ṗ = μ1(u1)I1 + μ2(u2)I2 + μM(u1, u2)IM (17)
This model allows for both malware to co-exist on the same
computer, however, the presence of the two malware will
imply a higher recovery and protection rate as the user will
easily detect the presence of malware. The TSS approximation
for (17) can be done in a similar fashion as in Theorem 1 to
obtain the fast dynamics
Ṡ = −γ1SI1 − γ2SI2 + δ1(u1)I1 + δ2(u2)I2 + δMIM
İ1 = +γ1SI1 − δ1(u1)I1 − γ2I1I2
İ2 = +γ2SI2 − δ2(u2)I2 − γ1I1I2
İM = (γ1 + γ2)I1I2 − (δ1 + δ2)IM
Ṗ = 0 (18)
First, note that S = δk
γk
, Ik = 1 − S, I−k = 0, IM = 0 are
two equilibria for this dynamics. However, unlike the previous
system, when δk
γk
< 1 for both the malware, the two endemic
equilibria are locally stable as seen from the phase portrait
in Figure 5 obtained by setting IM → 0. While this is not
the main focus of this letter, it is interesting to note that even
in the case where both malware may co-exist in the same
computer, there is still a clear “winner takes all” behavior,
with the winner being decided by both the epidemiological
parameters as well as the initial conditions.
Thus, to simplify, we assume that I1(0) = I2(0). Now, if
δ1
γ1
< δ2
γ2
, for any I1 ≥ I2, I1 < 1 − δ1
γ1
, we have
İ1 − İ2 = +γ1SI1 − δ1(u1)I1 − (γ2SI2 − δ2(u2)I2) (19)
which is positive as I1(t) ≥ I2(t) inductively and δ1
γ1
< δ2
γ2
.
Therefore, the equilibrium with I1 = 0 is never reached
and since the only other stable equilibrium is the one with
S = δ1
γ1
, I1 = 1 − S, I2 = 0, this equilibrium is reached.
Similar arguments hold for the winner being player 2 when
δ1
γ1
> δ2
γ2
. Thus, the results of this case correspond with that
of Theorem 1 when the initial conditions are symmetric and
maybe obtained in a similar fashion following the proof of
Theorem 1.
VI. CONCLUSION
In this letter, we study a game model which characterizes
the competition between two malware trying to take over a
network. We use an epidemiological model to characterize the
spread of each malware as a function of their resource utiliza-
tion rate and then provide a closed-form expression for the
malware revenue using time-scale separation. We are then able
to characterize the Nash equilibrium for the resulting game
under the assumption that both malware starts with the same
number of infected nodes. Numerical simulations demonstrate
the validity of the time-scale approximation and the features
of the game such as the price of anarchy. In future works,
we would like to consider several regions or clusters in the
network with a given interaction graph between these regions
to have a more realistic model of the network as studied
in [8].
REFERENCES
[1] R. A. Kemmerer and G. Vigna, “Intrusion detection: A brief history and
overview,” Computer, vol. 35, no. 4, pp. 27–30, Apr. 2002.
[2] S. Peng, S. Yu, and A. Yang, “Smartphone malware and its propaga-
tion modeling: A survey,” IEEE Commun. Surveys Tuts., vol. 16, no. 2,
pp. 925–941, 2nd Quart., 2014.
[3] S. Yu, G. Gu, A. Barnawi, S. Guo, and I. Stojmenovic, “Malware propa-
gation in large-scale networks,” IEEE Trans. Knowl. Data Eng., vol. 27,
no. 1, pp. 170–179, Jan. 2015.
[4] T. Spyridopoulos, G. Oikonomou, T. Tryfonas, and M. Ge, “Game
theoretic approach for cost-benefit analysis of malware proliferation
prevention,” in Proc. IFIP Int. Inf. Security Conf., 2013, pp. 28–41.
[5] Y. Hayel, S. Trajanovski, E. Altman, H. Wang, and P. Van Mieghem,
“Complete game-theoretic characterization of SIS epidemics protec-
tion strategies,” in Proc. 53rd IEEE Conf. Decis. Control, 2014,
pp. 1179–1184.
[6] A. R. Hota and S. Sundaram, “Game-theoretic vaccination against
networked SIS epidemics and impacts of human decision-making,”
IEEE Trans. Control Netw. Syst., vol. 6, no. 4, pp. 1461–1472,
Dec. 2019.
[7] B. A. Prakash, A. Beutel, R. Rosenfeld, and C. Faloutsos, “Winner takes
all: Competing viruses or ideas on fair-play networks,” in Proc. 21st Int.
Conf. World Wide Web, 2012, pp. 1037–1046.
[8] J. Liu, P. E. Paré, A. Nedić, C. Y. Tang, C. L. Beck, and T. Başar,
“Analysis and control of a continuous-time bi-virus model,” IEEE Trans.
Autom. Control, vol. 64, no. 12, pp. 4891–4906, Dec. 2019.
[9] A. M. Masucci and A. Silva, “Strategic resource allocation for compet-
itive influence in social networks,” in Proc. 52nd Annu. Allerton Conf.
Commun. Control Comput. (Allerton), 2014, pp. 951–958.
[10] V. S. Varma, I.-C. Morărescu, S. Lasaulce, and S. Martin, “Marketing
resource allocation in duopolies over social networks,” IEEE Contr. Syst.
Lett., vol. 2, pp. 593–598, 2018.
[11] M. H. DeGroot, “Reaching a consensus,” J. Amer. Stat. Assoc., vol. 69,
no. 345, pp. 118–121, 1974.
[12] H. K. Khalil, Nonlinear Systems, 2nd ed. Philadelphia, PA, USA: Soc.
Ind. Appl. Math., 1996.
[13] N. Bailey, The Mathematical Theory of Infectious Diseases and Its
Applications. New York, NY, USA: Hafner Press, 1975.
[14] J. T. D. Fudenberg, Game Theory. Cambridge, MA, USA: MIT Press,
1991.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:35 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice