Edge Computing Resource Allocation for Unmanned Aerial Vehicle Assisted Mobile Network With Blockchain Applications
IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS, VOL. 20, NO. 5, MAY 2021 3107
Edge Computing Resource Allocation for Unmanned
Aerial Vehicle Assisted Mobile Network With
Blockchain Applications
Haitao Xu , Member, IEEE, Wentao Huang, Yunhui Zhou, Dongmei Yang, Ming Li , Member, IEEE,
and Zhu Han , Fellow, IEEE
Abstract— Mobile edge computing is becoming a major trend
in providing computation capacities at the edge of mobile
networks. Meanwhile, unmanned aerial vehicles (UAVs) have
been considered as distinctly important integrated components
to extend services coverage. In order to provide users with
higher and satisfied quality of services, edge computing resources
need to be allocated between edge computing stations (ECSs)
and UAVs in mobile networks. However, there are significant
security and privacy problems due to the open environments of
ECSs and UAVs. In this paper, we propose a resource pricing
and trading scheme based on Stackelberg dynamic game to
optimally allocate edge computing resources between ECSs and
UAVs, and blockchain technology is applied to record the entire
resources trading process to protect the security and privacy.
The ECSs control the resources price of the allocated edge
computing resources, where the UAVs follow the price announced
by the ECSs and make optimal decisions on the edge computing
resources demands. Blockchain is integrated in the resource
trading process to ensure the security and privacy. Numerical
simulations are given to show the effectiveness of the proposed
scheme.
Index Terms— Edge computing, unmanned aerial vehicles,
resource pricing, resource allocation, blockchain, Stackelberg
game.
I. INTRODUCTION
RECENTLY, with the rapid development of mobile net-
work, people’s life has become more convenient. Mobile
Manuscript received July 1, 2020; revised October 22, 2020; accepted
December 20, 2020. Date of publication January 8, 2021; date of current
version May 10, 2021. This work was supported in part by the National
Science Foundation Project of China under Grant 61873026, Grant 61971032,
and Grant 61931001 and in part by NSF under Grant EARS-1839818, Grant
CNS1717454, Grant CNS-1731424, and Grant CNS-1702850. The associate
editor coordinating the review of this article and approving it for publication
was L. Wang. (Corresponding author: Haitao Xu.)
Haitao Xu, Wentao Huang, Yunhui Zhou, and Dongmei Yang are
with the Department of Communication Engineering, University of Sci-
ence and Technology Beijing (USTB), Beijing 100083, China (e-mail:
alex_xuht@hotmail.com).
Ming Li is with the Department of Computer Science and Engineering,
The University of Texas at Arlington, Arlington, TX 76019 USA (e-mail:
ming.li@uta.edu).
Zhu Han is with the Department of Electrical and Computer Engineering,
University of Houston, Houston, TX 77004 USA, and also with the Depart-
ment of Computer Science and Engineering, Kyung Hee University, Seoul
446-701, South Korea (e-mail: zhan2@uh.edu).
Color versions of one or more figures in this article are available at
https://doi.org/10.1109/TWC.2020.3047496.
Digital Object Identifier 10.1109/TWC.2020.3047496
networks can provide a variety of customized services accord-
ing to user needs. However, with the advances of Internet of
Things (IoT), and the increase of big data, mobile network
is facing a lot of new demands and challenges. The types
of mobile terminals and the quantity of data traffic have
been greatly raised. Even the scenarios of mobile services are
gradually diversified [1], [2]. The traditional mobile network
is not sufficient in supporting the increasing services require-
ments, and cannot support the demands of high bandwidth,
low latency, and real-time communication [3], [4]. Although,
cloud computing has been considered as an effective solution
to deal with the problems brought by the increasing services
requirements [5]–[7], there are still lots of challenges need
to be solved, especially the data transfer latency problem and
the energy consumption problem. As an extension of cloud
computing, mobile edge computing (MEC) can be applied
to mobile networks for data computation and communication
[8], [9]. Compared to the other computing paradigms, MEC
can provide services environment and computation capabilities
at the edge of mobile networks [10]. MEC can transfer the
caching data and computation tasks to the edge computing
stations (ECSs) [11], [12], to make the bandwidth pressure
relieved and the data processing efficiency greatly improved
[13], [14]. Moreover, there is no need to transmit the services
requests to the central computing stations, where it is more
convenient to access the local computation and communication
resources [15]–[17].
Particularly, the existing MEC based mobile networks are
not applicable to the situation where the mobile users are
sparely distributed. In addition, it is hoped that the MEC
based mobile networks can provide assured communication
in some special environments. However, under the extreme
environments, such as typhoon, earthquake and other natural
disasters, the MEC based mobile network will be destroyed
and the communication services will be interrupted. Thus, the
emergency communication techniques are needed [18], [19].
Among the various emergency communication technologies,
unmanned aerial vehicles (UAVs) are becoming a widely
utilized solution to improve the connectivity of mobile users,
and to provide mobile services under the extreme situations,
where the UAVs can solve the communication assurance issues
facing the complex and changeable environments [20]–[22].
Moreover, the UAVs-assisted MEC networks can provide
1536-1276 © 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-3664-3097
https://orcid.org/0000-0002-4303-2438
https://orcid.org/0000-0002-6606-5822
3108 IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS, VOL. 20, NO. 5, MAY 2021
caching and computation services for mobile users, to support
the increasing traffic requirements and the explosively increas-
ing number of mobile users [23]–[25]. UAVs can obtain edge
computing resources from the edge computing stations (ECSs)
to complete more complex computation and communication
tasks for mobile users, to provide mobile users with better
services. The UAV-assisted MEC networks will be more broad,
fast and convenient than the previous networks [26], [27].
Lots of works have been done in resource allocation prob-
lem of ECSs and UAVs [28]–[30]. However, due to the open
characteristics of UAV communication and MEC paradigm,
there are serious security and privacy issues in achieving
edge computing resources allocation between ECSs and UAVs
[31], [32]. How to maximally protect the security during the
resource allocation is a secure problem needs to be solved.
In the UAV-assisted MEC networks, the UAVs are always
scattered distributed. Then it will be difficult to protect the
security during the resource allocation using the traditional
methods. The distributed digital cryptocurrency, such as the
blockchain [33], can be used to protect the security and
privacy for these kinds of distributed security problems. The
blockchain technology has the characteristics of decentraliza-
tion, unchangeable data, and high transparency, which can
ensure the credibility and traceability of data information [34],
[35], which has significant effect on network security and has
attracted many scholars to conduct extensive research in recent
years [36]–[38]. The emergence of blockchain technology
provides new ideas and directions for effectively solving the
security problems in the UAV-assisted MEC networks.
In this paper, we construct a UAV-assisted MEC network
with blockchain applications. We mainly study the resource
trading interactions between ECSs and UAVs to achieve opti-
mal edge computing resources allocation. The ECSs allocate
the edge computing resources and receive profits from the
UAVs. The UAVs request the edge computing resources from
the ECSs to provide mobile users with satisfied QoS. The edge
computing resources trading interactions will be formulated as
a Stackelberg game. Specially, using the blockchain technol-
ogy to protect the security and privacy, the ECSs should pay
rewards to issue the mining tasks in the blockchain, to record
the trading interactions between ECSs and UAVs. The main
contributions are as follows,
• We formulate the trading interactions between ECSs and
UAVs as a Stackelberg game, where the ECSs are the
leaders and the UAVs are the followers. The ECSs control
the unit price of edge computing resources to maximize
the profits earned from the UAVs. The UAVs control
the amount of requested edge computing resources to
maximize their objectives.
• We propose a blockchain based secure resources trading
scheme in the proposed network. The ECSs work as
the edge computing resources providers and the mining
tasks issuers in the blockchain based network, where
the UAVs are the edge computing resource requesters.
The transactions information about the edge computing
resources trading, including the resources demands and
resources price, would be recorded in the blockchain.
• We formulate the objectives of ECSs as utility maxi-
mization problems. We employ the Lagrangian to obtain
the equilibrium solutions of ECSs for resources pricing
problem.
• We formulate the optimal resources demands problem of
UAVs using differential game. We employ the Bellman
dynamic programming to obtain the equilibrium solutions
of UAVs under two situations, open loop situation and
feedback situation, respectively.
• We conduct numerical simulations to evaluate the per-
formance of the proposed scheme. The results show that
the objectives optimization of ECSs and UAVs can be
achieved.
The remainder of the paper is organized as follows.
Section II presents a brief review of related works. System
model is given in Section III, and resource allocation scheme is
given in Section IV. In Section V, we analyze the solutions of
the proposed Stackelberg game model. Numerical simulations
are given in Section VI. Finally we conclude the work in
Section VII.
II. RELATED WORK
With lower cost and higher mobility, UAVs are playing an
important role in auxiliary mobile networks. Meanwhile, rea-
sonable resource allocation of UAV-assisted mobile networks
is becoming a key role in improving the quality of communi-
cations [39]–[41]. In [39], a drone-assisted cellular network is
proposed where every users can share UAVs to improve their
individual uplink rates. Uplink resource allocation in terms
of power and time allocation among users is investigated to
optimize the uplink sum-rate. However, it is assumed that the
AG channel experiences quasi-static flat fading and does not
consider subcarrier allocation. In [40], a joint subcarrier and
power allocation algorithm is given to solve the resource allo-
cation problem of OFDMA uplink in UAV-assisted emergency
communications. The subcarriers can be allocated among users
according to the optimal solutions. However, it does not take
latency and consumption into consideration. In [41], a fog
computing-based drone cluster (FCSD) structure is investi-
gated. Considering the energy consumption of UAVs, a task
allocation problem that minimizes FCSD energy consumption
under the constraints of delay and reliability is defined. But
the algorithm does not take into account information security
issues.
Now, the researchers pay attentions to the UAV-assisted
MEC networks, because the UAVs can act as computation
and communication relays for mobile users [28], [42], [43].
In [42], the UAV can collect and process the computation
tasks of users. Given the services requirements of users,
the energy efficiency of UAV is maximized and the energy
consumption of UAV is maximized. In [28], a UAV is properly
deployed to facilitate the MEC service provisioning to a set
of IoT devices. Service delay of all IoT devices and UAV
energy consumption are jointly optimized. However, most
of the current works did not consider the security issues
while deploying the UAV-assisted mobile networks. Due to
the open environment of wireless transmission, the security
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
XU et al.: EDGE COMPUTING RESOURCE ALLOCATION FOR UNMANNED AERIAL VEHICLE ASSISTED MOBILE NETWORK 3109
performance in UAV-assisted MEC is important and needs to
be considered [43], [44]. In [43], a secure UAV-enabled MEC
system is proposed and a low-complexity iterative algorithm is
designed to maximize the minimum secrecy capacity subject
to latency, minimum offloading and total power constraints.
In [44], the security problems for dual UAV-assisted MEC sys-
tems are investigated, where one UAV works as the offloading
node to provide computing services to the devices, and the
other UAV is a jammer to suppress the vicious eavesdroppers.
The communication and computation resources are jointly
optimized based on the proposed minimum secure computing
capacity maximization problems.
Recently, there are several works attempting to apply
blockchain into UAV-assisted MEC networks [45]–[47].
In [45], a blockchain based secure spectrum trading system
is proposed. A pricing-based mechanism is given to moti-
vate the spectrum trading between mobile network opera-
tors and UAVs, and blockchain is utilized to improve the
security and privacy during the trading process. In [46], a
blockchain based data acquisition process is proposed in the
UAV-enabled MEC networks. The collected data is stored
securely in blockchain at mobile edge computing servers.
In [47], the pricing and resource management in IoT system
with blockchain-as-a-service (BaaS) and MEC is studied.
A stochastic Stackelberg game with multiple leaders is pro-
posed to the resource management and pricing problems.
However, secure resource trading between the ECSs and
UAVs based on blockchain technology is not considered in
all the previous works. In addition, there are few researches
considering the dynamic variations of users services demands
in modeling the secure resources trading problem. Then,
in this paper, we try to construct a blockchain based secure
edge computing resources allocation scheme for the edge
computing station and UAVs using Stackelberg dynamic game,
considering the users services demands as the system state.
III. SYSTEM MODEL
In this section, we firstly give out the system model in
Section III-A. Then we analyze the security threats in the
proposed system in Section III-B. Finally, we propose a
blockchain based security framework in Section III-C.
A. System Model
We consider a UAV-assisted mobile edge computing net-
work consisting of a number of ECSs and UAVs. The set of
the ECSs is denoted by M, M = {1, 2, . . . ,M}, and the
set of the UAVs served by ECS m is denoted by Nm, Nm =
{1, 2, . . . , Nm}, as shown in Figure 1. The whole network can
be divided into three layers, ECS layer, UAV layer, and user
layer, respectively. In ECS layer, there are multiple ECSs that
are responsible for allocating edge computing resources for
UAVs. They can control the trading price of the allocated edge
computing resources. In UAV layer, each UAV can provide
computation services for mobile users. In order to improve
the quality of services (QoS) provided to mobile users, the
UAVs with limited on-board resources should request edge
computing resources from the ECSs. In user layer, each mobile
Fig. 1. System model.
user would upload the services requirements to the UAVs.
The services requirements include the computation tasks, the
communication requests, and so on. Assuming every UAV
accesses to its nearest ECS, and every mobile user accesses
to its nearest UAV. Then all the services requirements of
mobile users can be transmitted to the UAVs, and all the UAVs
can provide satisfied services to mobile users using the edge
computing resources obtained from the ECSs.
In the proposed system, since the UAVs should use the
obtained resources from ECSs to provide the computation ser-
vices to mobile users, we assume there are enough resources
available in the ECSs for resources allocation. In the com-
munication model, we assume that the up-link and down-link
channels between ECSs and UAVs are symmetrical. The avail-
able transmission capacity calculated by the Shannon theorem
for the allocated resources is assumed to be enough. Each
UAV is responsible for gathering users services requirements
from its coverage. Then, according to the amount of the
services requirements gathered from the mobile users, UAVs
make decisions on the edge computing resources require-
ments to the ECSs. In order to obtain the edge computing
resources from the ECSs, the UAVs have to pay a certain
amount revenue to the ECSs, The ECSs can earn profit
by allocating the edge computing resources to the UAVs,
through setting a appropriate trading price for the allocated
edge computing resources. In the above process, the trading
price of edge computing resources is an important factor in
determining the resources trading behaviors and is controlled
by ECSs.
B. Security Analysis
In the proposed system, we mainly focus on the edge com-
puting resources trading between ECSs and UAVs. However,
there are security and privacy issues that needs to be consid-
ered. The UAVs need to upload the resources requestments
to the ECSs, which may cause security issues due to the
open environment of UAVs. Meanwhile, some of the ECSs
may refuse to acknowledge the receipt of the requests, which
will lead to serious privacy issues. In addition, some UAVs
may pretend that they haven’t obtained the edge computing
resources from the ECSs. In order to guarantee the security and
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
3110 IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS, VOL. 20, NO. 5, MAY 2021
privacy in resources trading process between UAVs and ECSs,
the blockchain technology is utilized in this paper. With the
blockchain technology, the resources trading between UAVs
and ECSs can be written to the blockchain. Then the UAVs
can obtain the edge computing resources from the ECSs in
a decentralized but trustful way. Simultaneously, when the
trading occurs, the optimal trading price for the allocated
resources and the optimal amount of requested resources
would be executed.
Based on the blockchain technology, a trusted scheme is
designed for the edge computing resources trading between
ECSs and UAVs. Integrated with the blockchain function into
the proposed system, a “transaction" will be posted to the
blockchain to announce that the trading relations are existing
between ECSs and UAVs. However, as there are no sufficient
resources with the UAVs to run the blockchain applications,
the ECSs are chosen to run the blockchain functions. The
ECSs are considered as the consensus nodes in the proposed
network to run the blockchain applications, and they will
record the resources trading transactions. The ECSs in the
blockchain check the trading actions between ECSs and UAVs,
update the transaction records, and share the transactions over
the blockchain. Based on the blockchain, the system does not
require a centralized process or a central unit for the resource
trading between the ECSs and UAVs.
C. Blockchain Based Resources Trading
Integrated the blockchain function, there will be four roles
in the proposed system, i.e., the edge computing resources
requesters, the edge computing resources allocators, the min-
ing tasks publishers and the trading block miners. The UAVs
are the edge computing resources requesters in the proposed
system, which control the resources requirements and obtain
the edge computing resources from the ECSs. The ECSs are
the edge computing resources allocators to control the trading
price and to allocate the edge computing resources to the
UAVs. The ECSs also work as the mining tasks publishers
and the trading block miners in the blockchain system. In the
blockchain based system, after controlling the resources prices
and allocating the edge computing resources, the ECSs act as
the blockchain nodes, submitting the trading information to the
blochchain system. Based on the consensus mechanisms, the
blockchain nodes verify the trading information and record the
unchanged trading information in the system. The computation
tasks for blockchain mining are only executed by the ECSs,
because of the high computing power requirements. More
details of the blockchain based resources trading scheme are
given as follows.
1) Step 1: As the resources requesters, UAVs generate the
edge computing resources demands di(t). Given an initial
resources price, UAVs generate the resources demands based
on the services requirements from mobile users, and upload
the resources demands message to ECSs.
2) Step 2: Received the resources demands from UAVs,
ECSs control the resources price pi(t) to optimize the profit
earned from edge computing resources allocation. ECSs
Fig. 2. Blockchain structure.
broadcast the resources price and allocate the requested edge
computing resources to UAVs.
3) Step 3: ECSs collect all the resources trading information
{d(t), p(t), N} at time t and issue mining tasks on the
blockchain. All the transactions are structured into blocks.
Each block contains a cryptographic hash to the prior blocks
in the blockchain.
4) Step 4: A public blockchain among ECSs under the
proof of work (PoW) based Nakamoto consensus protocol
is considered. The ECSs use the credits coins to release the
mining tasks, and the other ECSs in the blockchain compete
to accomplish the mining tasks to write a “transaction" into
the blockchain. The credits coins can be obtained from the
successful mining tasks.
Based on blockchain, distributed consensus can be estab-
lished before the trading records between ECSs and UAVs
are written into a digital ledger. It is executed by all the
collaborative ECSs based on timestamps and hash algorithms.
The structure of the proposed blockchain is given in Figure 2.
Each block in the proposed blockchain system contains a
cryptographic hash value to the prior block. To participate in
the consensus process, the ECSs are working as the miners
in the proposed blockchain system. Following the works in
[4], [33], [35], [47], the PoW based Nakamoto consensus
protocol is considered and achieved based on the block mining
of ECSs. Here, credits coins are defined as new cryptocur-
rency for the edge computing resources trading. Once the
ECSs successfully solve the PoW puzzle, they will win the
credits coins. During edge computing resources pricing and
allocation, the trading records are stored in the blockchain,
and the blockchain-inspired distributed consensus mechanisms
are achieved. The edge computing resources trading records
will be encrypted and structured into the blocks based on
distributed consensus mechanisms.
IV. RESOURCES ALLOCATION SCHEME
In this section, we firstly propose a resources leasing
mechanism for ECSs and UAVs in Section IV-A. Then we give
out the dynamic state of services demand from mobile users
in Section IV-B. Finally, a blockchain based framework is
proposed for secure resources trading problem in Section IV-C
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
XU et al.: EDGE COMPUTING RESOURCE ALLOCATION FOR UNMANNED AERIAL VEHICLE ASSISTED MOBILE NETWORK 3111
and a Stackelberg dynamic game framework is presented for
resources allocation problem in Section IV-D.
A. Resources Leasing Mechanism
In this section, we will design a resources leasing mech-
anism to motivate the ECSs to allocate the edge computing
resources to the UAVs. Based on the proposed scheme, the
UAVs can obtain the edge computing resources form the ECSs
to provide mobile users with enhanced QoS, and the ECSs can
obtain a certain amount of profit from the allocated resources.
Here, the UAVs, which are responsible for the payments
of edge computing resources, are stands for the UAVs, the
UAV operators or the operators. Then we can say that the
UAVs should pay the ECSs for the allocated edge computing
resources. Therefore, a mechanism is given in this section to
facilitate the trading of edge computing resources between
ECSs and UAVs.
For the ECSs, they can receive the edge computing
resources requirements from the UAVs. The ECSs provide the
edge computing resources to the UAVs based on requirements,
and obtain the payments for the allocated resources from the
UAVs. Let pi(t) denote the unit price of the edge computing
resources provided to UAV i at time t, di(t) denote the
resources demands from UAV i ∈ N at time t. Then, the
objective of each ECS is to maximize the profit obtained from
the edge computing resources trading, which can be denoted
by the following function,
UECS(t) =
N∑
i=1
γipi(t)di(t), (1)
where γi is the possibility that the resources trading between
UAVs and ECSs can be written into a valid block. Through
setting an appropriate trading price pi(t) for UAV i ∈ N
at time t, each ECS can attract more UAVs to require edge
computing resources.
For the UAVs with limited on-board resources, they require
the edge computing resources from the ECSs based on the
services requirements of mobile users. They can earn revenue
for the services provided to the mobile users. The revenue
function of UAV i at time t is given as follows,
Ui(t) = ri(t)xi(t) − γipi(t)di(t). (2)
Based on (2), we can find that the revenue function of
each UAV is composed by two parts. The fist part is given
by ri(t)xi(t), which is the revenue earned from the provided
services, where ri(t) is the price of services, and xi(t) is the
services requirements of mobile users. The services require-
ments are the services demands of mobile users that need
to be completed by the UAVs, which include the computing
tasks, communication requests, and so on. The second part of
revenue function is pi(t)di(t), which is the payments for the
allocated edge computing resources from ECSs.
As the UAVs use the edge computing resources from the
ECSs to provide services to the users, the UAVs should
increase the edge computing resources requirements as the
users’ demands increase. The payments of the allocated edge
computing resources will become very high for UAVs, if there
are massive demands need to be satisfied. Then, the objective
function of UAV i during the observation time [0, T ] can be
expressed as,
max
di(t)
Ji(t) = max
di(t)
{∫ T
0
[ri(t)xi(t) − γipi(t)di(t)]e−τtdt
+ gixi(T )
}
, (3)
where gixi(T ) is the terminal cost of each UAV at the final
observation time T . e−τt is the discount factor, and τ is the
discount rate.
B. Dynamic Services Requirements of Mobile Users
As given in the above subsection, we use xi(t) to denote
the services requirements of mobile users. For each UAV
i ∈ N , it trys to provide the services to mobile users with the
edge computing resources from the ECSs. The UAVs which
have more computing resources can served more mobile users.
Meanwhile, the services requirements of mobile users will be
affected by the unit price of services. Based on the above
assumptions, we use a differential equation to describe the
evolution of users services demands in UAV i [48], which is
given as follows,
dxi(t) =
[
μir
αi
i (t) + υid
βi
i (t) + δixi(t)
]
dt, (4)
where ri(t) is the unit price of services, with the weighted
parameter μi. As the linear pricing mechanism is an effective
policing mechanism that influences users’ behaviors towards
a more efficient operating point, we use the linear pricing
mechanism to formula the relationship between the unit price
ri(t) and the services requirements xi(t). Then the unit price
of services could be a linear function of services requirements
xi(t), i.e., ri(t) = ϕixi(t). Based on the linear pricing
relationship, the method of income calculation is more simple,
intuitive and convenient. di(t) is the edge computing resources
of UAV i obtained from ECS, with the weighted parameter
υi, which can be considered as the resources capacity of
UAV i at time t. The users services demands are defined
referring to the Cobb-Douglas function [48] that models well
these elasticity aspects. It is assumed that mobile users can
obtain the information of services price ri(t) and services
capacity di(t) provided by UAV i. Compared to the UAV
with lower resources capacity, there will be more mobile users
accessing the UAV with larger resources capacity. δi is the
users departure rate. αi and βi are elasticity coefficient of
services demands state. Based on (4), the evolution of users
services demands are mainly influenced by two factors, the
unit price ri(t) of the provided services and the capacity di(t)
of edge computing resources.
C. Miners Cost
In this subsection, we will discuss the blockchain-based
framework for the proposed system, as given in Figure 2.
In order to motivate the ECSs to run the mining function
and to execute the blockchain application, mining rewards are
given to the ECSs. The ECSs compete against each other in the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
3112 IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS, VOL. 20, NO. 5, MAY 2021
mining to be the first one to solve the PoW puzzle and receive
the mining rewards. Based on the blockchain technology, if the
transaction is validated and written into a block, the ECS
that firstly completes the mining task can obtain the mining
rewards. The ECS that firstly mines the mining tasks collects
the real-time information of transactions between ECSs and
UAVs. It records the payments given by the UAVs, the price
of allocated resources and the amount of allocated resources by
the ECSs. It transmits the trading-related information among
all the nodes in the blockchain. Then, the transaction is written
into the blockchain, and the ECS that successfully mines
the mining tasks can win the mining rewards. Meanwhile,
the ECS winning the mining rewards can also obtain some
transaction coins, which can be considered as credits coins in
the blockchain system. The ECSs need to pay a certain amount
of credits coins to publish the mining tasks every time. Without
the credits coins, the ECSs cannot publish the mining tasks in
the blockchain and the transactions between ECSs and UAVs
cannot be conducted. Let φ(t) denote the cost of ECS for
publishing the mining tasks in the blockchain, which is given
as follows,
φ(t) =
N∑
i=1
[
ψ + πi
di(t)
pi(t)
]
. (5)
In (5), the cost function is composed by two components.
The first component is the mining rewards denoted by ψ.
The second part, πi
di(t)
pi(t)
, is the payment of credits coins
for publishing the mining tasks, where πi is the coefficient
between the credits coins and task scale, and di(t)
pi(t)
is the
task scale of ECS for the transactions with UAV i. During
the trading process, if the price is high, the willingness to
require the edge computing resources of ECSs will be reduced
and the transactions need to be recorded will be decreased.
Meanwhile, if more resources are purchased by the UAVs,
more transactions need to be recorded in the blockchain.
Then we use di(t)
pi(t)
to denote the task scale of ECS for the
transactions with UAV i. Then the objective function of ECS
given in (1) should be changed to a function of profit minus
payment, as follows,
U �
ECS(t) =
N∑
i=1
γipi(t)di(t) −
N∑
i=1
[
ψ + πi
di(t)
pi(t)
]
. (6)
In (6), the objective function of ECS mainly consists of two
parts. One part is the profit obtained from the allocated edge
computing resources, which is denoted by (1). The second
part is the cost of ECS for publishing the mining tasks in
the blockchain, as given in (5). As the control variable for (1)
and (5) are both the unit price pi(t), the control variable of (6)
is the same.
D. Stackelberg Game Framework
In Section IV-A, a resources leasing mechanism to motivate
the ECSs to allocate the edge computing resources to the
UAVs. Based on the proposed scheme, the ECSs can obtain
a certain amount of profit from the allocated resources, and
the UAVs can obtain the edge computing resources form the
ECSs to provide mobile users with enhanced QoS. Setting
an appropriate resources price, the ECSs try to optimize
their profits from the allocated resources. With the allocated
edge computing resources, the UAVs try to optimize their
utilities earned from the provided services. It is obvious that
game theory can be used to analyze the optimized problems
of ECSs and UAVs, where ECSs and UAVs can be both
considered as rational game players during the resources
trading process. During the trading process, the ECSs firstly
broadcast the resources price to the UAVs, and the UAVs
control their resources requirements according to the price.
Thus, the resources trading between ECSs and UAVs can be
formulated using Stackelberg game.
In this paper, the resources trading between ECSs and UAVs
is modeled as a two-stage Stackelberg game, where the ECSs
are the leaders, which control the unit price of the edge
computing resources provided to the UAVs. The ECSs also
work as the mining tasks publishers and the trading block
miners in the blockchain system. The UAVs are the followers,
which optimize the resources requests to the ECSs, limited
by resources price controlled by the ECSs. The optimization
problems for ECSs and UAVs are given as follows.
1) Optimization Problems of ECSs: For the ECSs, they
should make decisions on the resources price pi(t) to max-
imize the profit function, which is given as follows,
U �
ECS(t) = UECS(t) − φ(t), (7)
where the unit price pi(t) is the control variable for the ECSs.
The game problem of ECSs can be written as follows,
Problem 1 (Leader’s Game):
max
pi(t)
U �
ECS(t)
s. t. 0 ≤ pi(t) ≤ p̃i. (8)
2) Optimization Problems of UAVs: For the UAVS, they
should control their edge computing resources demands di(t)
to optimize their objectives. The objectives of the UAVs are
given by (3), with a dynamic system state given by (4).
Therefore, the game problem for UAVs can be given as
follows,
Problem 2 (Follower’s Game):
max
di(t)
Ji(t)
s. t. dxi(t) = fi(t, x)dt, (9)
where fi(t, x) = μir
αi
i (t) + υid
βi
i (t) + δixi(t).
UAVs tend to achieve their maximum utilities while ECSs
focus on getting the most profits. Hence, to adjust the demand
of edge computing resources and the price for the allocated
edge computing resources, a Stackelberg dynamic game can
be formed. The ECSs who are the leaders first announce the
unit price of the allocated edge computing resources to the
UAVs (followers). Based on the price declared by the ECSs,
the followers make decisions on the expected edge computing
resources. After the demands are uploaded to the ECSs,
the ECSs decide the optimal price to obtain the maximum
profit. The Stackelberg equilibrium ensures the utilities of
ECSs are maximized given that the UAVs generate their
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
XU et al.: EDGE COMPUTING RESOURCE ALLOCATION FOR UNMANNED AERIAL VEHICLE ASSISTED MOBILE NETWORK 3113
resources requirements to maximize the profit. The objectives
of the proposed Stackelberg game are to find Stackelberg
equilibriums for both ECSs and UAVs. The UAVs can find
their optimal resources demands and the ECSs can optimally
set a proper resources price. The Stackelberg equilibrium can
be written as follows.
Definition 1: For the edge computing station, the service
price p∗i (t) is the Stackelberg equilibrium, if the following
inequality holds for all service price pi(t) �= p∗i (t),
U �
ECS(p∗i (t), d
∗
i (t), t) ≥ U �
ECS(pi(t), d∗i (t), t). (10)
Definition 2: For the UAV i, the resource demands d∗i (t) is
the Stackelberg equilibrium, if the following inequality holds
for all service price di(t) �= d∗i (t),
Ji(d∗i (t), p
∗(t), t) ≥ Ji(di(t), p∗(t), t). (11)
V. EQUILIBRIUM ANALYSIS
In this section, on the basis of the Stackelberg game model
proposed in Section IV-D, we analyze the performance of the
game model and calculate the Stackelberg equilibriums for
ECSs and UAVs to obtain the optimal resources price and
demands between ECSs and UAVs. Based on the proposed
framework, we will firstly analyze the equilibrium of UAVs
in Section V-A, then the optimal resources price will be given
to maximize the ECSs utilities in Section V-B.
A. Equilibrium of UAVs
We first consider the equilibrium solutions of UAVs,
in which the UAVs pay the ECSs for the allocated edge
computing resources at a price level p(t) to maximize their
own individual utilities non-cooperatively. In this section, the
resources price is uniform, which means the ECSs charge
the UAVs with the same price. Given the resources price
p(t), we can find the optimal resources demands of UAVs
using Bellman dynamic programming. Before analyzing the
equilibrium solutions, one definition is first given for Bellman
dynamic programming, as follows.
Definition 3: The optimal resource demand {d∗i (t)} of UAV
i is an open-loop equilibrium to the problem in (3), and
{x∗i (t), 0 ≤ t ≤ T } is the corresponding optimal trajectory
of users’ demand, if there exists a costate function Λi(t) such
that the following equations are satisfied,
d∗i (t) = argmax {Ji(t) + Λi(t)ẋi(t)} , (12)
Λ̇i(t) = −∂ [Ji(t) + Λi(t)ẋi(t)]
∂xi(t)
, (13)
where ẋi(t) = dxi(t)
dt and Λ̇i(t) = dΛi(t)
dt .
In order to simplify the expression of Definition 3,
we replace (12) with Hamiltonian function as follows,
d∗i (t) = arg max{Hi(t, xi(t))}, (14)
Λ̇i(t) = −Hi(t, xi(t))
∂xi(t)
, (15)
where,
Hi(t, xi(t)) = Ji(t) + Λi(t)ẋi(t). (16)
Based on Definition 3, each UAV controls its resources
demands to maximize its individual utility function. Next,
we analyze the existence and uniqueness of the open-loop
equilibrium for each UAV.
Theorem 1: There exists a unique open loop equilibrium for
each UAV in Problem 2.
Proof: Based on Definition 3, in order to get the open
loop equilibrium solutions for UAVs, we first need to calculate
the partial derivative to the Hamiltonian function, and let the
partial derivative to be zero. We have the partial derivative of
Hamiltonian function as follows,
∂Hi(t, xi(t))
∂di(t)
= −γipi(t) + Λi(t)βiνid
βi−1
i (t). (17)
Based on (15) and (16), Λi(t) can be given by the following
differential equation,
−Λ̇i(t) = 2ϕixi(t) + Λi(t)
[
αiμiϕ
αi
i xαi−1
i (t) + δi
]
. (18)
Then the optimal resources demands of UAVs can be
obtained using the above differential equations (17) and (18).
The optimal resources demands of each UAV is controlled
by the resources price announced by the ECS. The optimal
resources demands of each UAV is also a function of users
services requirements. Especially, under the open-loop situa-
tion, the optimal resources demands of each UAV depend on
the initial services requirements of mobile users xi(t = 0) and
vary with the time t. Now we have proved that there exists a
unique open loop equilibrium for each UAV.
Further, based on the partial derivative of the Hamiltonian
function, we have,
−γipi(t) + Λi(t)βiνid
βi−1
i (t) = 0, (19)
and we can obtain the equilibrium solutions for UAVs to con-
trol their resources demands by solving (19). The unique equi-
librium solution for UAV i to control its resources demands
is given as follows,
di(t) =
[
γipi(t)
Λi(t)βiνi
] 1
βi−1
. (20)
To eliminate information non-uniqueness in the derivation of
Nash equilibrium, we can also obtain the equilibrium solutions
of UAVs to satisfy the feedback equilibrium property. In the
feedback situation, the information structures of UAVs follow
closed-loop perfect state pattern, and the optimal strategies of
UAVs become the functions of initial users services demands
xi(t = 0), the current users services demands xi(t) at time
t, and the current time t. A definition of value function for
analyzing the equilibrium solutions of UAVs under feedback
situation is given as follows.
Definition 4: The optimal resource demand {d̃∗i (t)} of UAV
i is a feedback equilibrium to the problem in (3), if there exists
a continuously differentiable value function Vi(t, x) such that
the following equations are satisfied,
−∂Vi(t, x)
∂t
=
[
ϕix
2
i (t) − γipi(t)d̃∗i (t)
]
e−τt +
∂Vi(t, x)
∂x
×
[
μir
αi
i (t) + υi(d̃∗i (t))
βi + δixi(t)
]
. (21)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
3114 IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS, VOL. 20, NO. 5, MAY 2021
Calculating the partial derivative for d̃i(t) in (21), we can
obtain the optimal resource demands of UAV i under feedback
situation as follows,
d̃∗i (t) =
[
γipi(t)
∂Vi(t,x)
∂x eτtβiνi
] 1
βi−1
. (22)
The existence and uniqueness of equilibrium solutions under
feedback situation for the proposed game can be given as
follows.
Theorem 2: The value function Vi(t, x) admits a solution
that satisfies,
Vi(t, x) = [Ai(t)x +Bi(t)] e−τt, (23)
where Ai(t) and Bi(t) are given by,
dAi(t)
dt
=
[
1 + δi + μiϕ
α
i x
α−1
i (t)
]
Ai(t) + ϕixi(t), (24)
dBi(t)
dt
=
γipi(t)(βiAi(t) − 1)
βiAi(t)
(
γipi(t)
βiνiAi(t)
)
1
βi−1
+ τBi(t). (25)
Proof: Based on the value function given in (23), we have,
∂Vi(t, x)
∂t
eτt =
dAi(t)
dt
x− τAi(t)x
+
dBi(t)
dt
− τBi(t), (26)
∂Vi(t, x)
∂x
eτt = Ai(t). (27)
Then, we have the optimal resources demands of UAV i
under feedback situation as follows,
d̃∗i (t) =
[
γipi(t)
βiνiAi(t)
] 1
βi−1
. (28)
and the differential value function in (21) can be given as
follows,
−dAi(t)
dt
xi(t) + τAi(t)xi(t) − dBi(t)
dt
+ τBi(t)
= Ai(t)
[
μir
αi
i (t) + υi(
γipi(t)
βiνiAi(t)
)
βi
βi−1 + δixi(t)
]
+
[
ϕix
2
i (t) − γipi(t)(
γipi(t)
βiνiAi(t)
)
1
βi−1
]
= Ai(t)
[
μiϕix
αi
i (t) + υi(
γipi(t)
βiνiAi(t)
)
βi
βi−1 + δixi(t)
]
+
[
ϕix
2
i (t) − γipi(t)(
γipi(t)
βiνiAi(t)
)
1
βi−1
]
. (29)
If the above equation is satisfied, we have,
dAi(t)
dt
=
[
1+δi+μiϕ
α
i x
α−1
i (t)
]
Ai(t)+ϕixi(t),
(30)
τBi(t) − dBi(t)
dt
= Ai(t)υi(
pi(t)
βiνiAi(t)
)
βi
βi−1
− γipi(t)(
γipi(t)
βiνiAi(t)
)
1
βi−1 , (31)
Hence, Theorem 2 follows.
Algorithm 1: Dynamic Resource Demands Control
Algorithm
Input: Unit price pi(t) for the allocated edge computing
resources controlled by ECSs
Output: The optimal resources demands di(t) of each
UAV
1 Initialization: The initialization parameters in objective
function (3) and system state function (4);
2 The ECSs set the initial price for the allocated edge
computing resources, and send the price for all UAVs in
its coverage;
3 The UAVs compute the resources demands based on the
initial price set by the ECSs;
4 for j ∈ M do
5 for i ∈ N do
6 Obtain the optimal resources demands under
open-loop situation using (20);
7 Obtain the optimal resources demands under
feedback situation using (28);
8 end
9 end
10 Return the optimal resources demands of UAVs;
Based on the outcome of Theorems 1 and 2 obtained
above, we present a dynamic game based algorithm for UAVs
to control their resources demands, which is sketched in
Algorithm 1. The proposed algorithm returns the open-loop
equilibrium solutions and feedback equilibrium solutions for
UAVs on the basis of resources demands as their output.
First, we initialize and calculate all the necessary parameters.
Then, we compute the optimal resources demands in terms
of open-loop solutions and feedback solutions according to
the proposed game framework. Finally, the optimal resources
demands for UAVs under two kinds of situations are obtained.
The main computational complexity of Algorithm 1 lies in
obtaining the open loop equilibrium solutions and feedback
equilibrium solutions for UAVs. The total number of oper-
ations for obtaining the optimal strategies under open-loop
situation and feedback situation is both MN . Thus, the
complexity order is calculated as O(MN).
B. Equilibrium of ECSs
In this section, the equilibrium solutions to Problem 1
will be discussed. As the optimal strategies to Problem (1),
p∗(t) are a set of resources price for UAVs to control their
resources demands. Every UAVs will be announced an rational
price for the allocated edge computing resources controlled
by the ECSs. In order to find the equilibrium solutions of
ECSs, we first try to prove the optimization problem given in
Problem 1 is a concave function.
Theorem 3: The objective function for ECSs in Problem 1
is a concave function.
Proof: Please refer to Appendix.
We consider the uniform pricing model for ECSs. Based on
the uniform pricing model, the resources price is uniform, and
the ECSs charge the UAVs with the same price. Therefore, the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
XU et al.: EDGE COMPUTING RESOURCE ALLOCATION FOR UNMANNED AERIAL VEHICLE ASSISTED MOBILE NETWORK 3115
purchase of each ECS is to set up an optimal resources price
for UAVs to maximize its profit. The optimal resources price
of each ECS can be given as follows.
Theorem 4: A set of control vectors p∗(t) for ECSs in
Problem 1 exists.
Proof: Based on Theorem 3 given in the above, the
optimization problem in Problem 1 is a convex optimization
problem. Thus, we can deal with the optimization problem by
solving its dual problem. The Lagrangian for the optimization
problem in Problem 1 can be written as,
L(t)=
N∑
i=1
γip
∗(t)di(t)−
N∑
i=1
[
ψ + πi
di(t)
p∗(t)
]
−λ [p∗(t)−p̃] ,
(32)
where λ is the dual variable associated with the constraint
0 ≤ p∗(t) ≤ p̃. By taking the derivative of (32), we have,
∂L(t)
∂p∗(t)
=
N∑
i=1
γidi(t) +
N∑
i=1
[
πi
di(t)
(p∗(t))2
]
− λ = 0. (33)
Let the partial derivative to be zero, we have,
p∗(t) =
[ ∑N
i=1 πidi(t)
λ− ∑N
i=1 γidi(t)
] 1
2
. (34)
Substituting the constraint 0 ≤ p∗(t) ≤ p̃ into the above
equation, we can find that the dual variable follows the below
equation,
λ =
N∑
i=1
(
πi
p̃2
+ γi
)
di(t). (35)
Substituting (35) into the partial derivative of Lagrangian,
we can find the optimal price for the allocated edge computing
resources, which is denoted as follow,
p∗(t) =
[ ∑N
i=1 πidi(t)∑N
i=1(
πi
p̃2 + γi)di(t) −
∑N
i=1 γidi(t)
] 1
2
. (36)
Hence Theorem 4 follows.
Based on Theorems 3 and 4, we present a dynamic optimal
price control algorithm for ECSs to maximize the profit
function given in (8). Given the dynamic resources demands of
UAVs based on Algorithm 1, the ECS can control the resources
price for the allocated edge computing resources to maximize
its profit earned from UAVs. As every UAV has two kinds
of resources demands, the open-loop situation and feedback
situation, respectively, there will also be two optimal price
for ECSs to allocate the edge computing resources. The main
computational complexity of Algorithm 2 lies in obtaining the
optimal pricing strategies for the allocated edge computing
resources using (36). The total number of operations for
obtaining the optimal price is M . Thus, the complexity order
is calculated as O(M).
Algorithm 2: Dynamic Optimal Price Control Algorithm
Input: The optimal resources demands di(t) of each
UAV;
Output: The optimal price pi(t) for the allocated edge
computing resource controlled by ECSs;
1 Initialization: The initialization parameters in objective
function (8);
2 The ECSs receive the resources demands from all UAVs
in its coverage;
3 The ECSs compute the optimal price for the allocated
edge computing resources with the resource demands
from all UAVs;
4 for j ∈ M do
5 Obtain the optimal price for the allocated edge
computing resources using (36);
6 end
7 After that, the ECSs send the optimal price to the miners.
The miners update the price and broadcasts the price to
the UAVs. The transactions information between ECSs
and UAVs are recorded on the blockchain.
Fig. 3. Users demands variations with 3 UAVs under open-loop situation.
Fig. 4. Users demands variations with 3 UAVs under feedback situation.
VI. NUMERICAL SIMULATIONS
In this section, we conduct simulation experiments and
evaluate the performance of the proposed dynamic resource
allocation scheme. Firstly, we introduce the simulation scene
and specific experimental parameters. Then, the optimal solu-
tions for UAVs to control their resources demands are analyzed
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
3116 IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS, VOL. 20, NO. 5, MAY 2021
Fig. 5. Users demands variations with 6 UAVs under open-loop situation.
Fig. 6. Users demands variations with 6 UAVs under open-loop situation.
under open-loop situation and feedback situation, respectively.
And the optimal strategy of ECS to control the price for the
allocated edge computing resources is also discussed.
A. Simulation Setting
A UAV-assisted mobile network with one ECS and multiple
UAVs is considered in this section. In the proposed system,
the UAVs require the edge computing resources from the
ECS to provide mobile users with satisfied services. The
ECS allocates the edge computing resources to the UAVs
to earn profit. Meanwhile, the ECS should pay the mining
reward for the transactions between ECS and UAVs. The
optimal strategies of requested resources for UAVs will be
given under two different situations, open-loop situation and
feedback situation, respectively, which are mainly affected by
the services demands from mobile users. As the followers
of the Stackelberg game, the optimal strategies for requested
resources of UAVs will be analyzed with a initial price of
edge computing resources announced by the ECS, where
the resources price is assumed to be constant and same for
all UAVs. In this simulations, the resources price is set to
be 2 unit/resources. After the UAVs make decisions on the
required resources, the ECS will control the resources price
to maximize its profit, where the possibility that the resource
transactions between ECS and UAVs can be written into a
valid block is assumed to be 100%. The other parameters
setting for simulations are given in Table I.
Fig. 7. Required resources of 3 UAVs under open-loop situation.
Fig. 8. Required resources of 3 UAVs under feedback situation.
TABLE I
SIMULATION PARAMETERS SETTING
B. Performance Discussion
Firstly, we investigate the variations of users services
demands under two kinds of situations, open-loop situation
and feedback situation, respectively. The variations of users
services demands are given by the state variable xi(t), and
are shown in Figures 3, 4, 5, and 6. The services demands
under open-loop situation are given in Figures 3 and 5, where
Figures 4 and 6 are the services demands under feedback
situation. Figures 3 and 4 are the services demands in the
proposed UAV-assisted MEC network with 3 UAVs. We can
find that, at the beginning of the game, the mobile users
increase their services demands to obtain the relevant services
from UAVs. As more and more users services are satisfied,
the services demands decrease and converge to an equilibrium
value. Under the feedback situation, the services demands first
increase and then quickly drop to zero. In Figures 5 and 6,
we double the number of UAVs from 3 to 6, and obtain
the services demands under open-loop situation and feedback
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
XU et al.: EDGE COMPUTING RESOURCE ALLOCATION FOR UNMANNED AERIAL VEHICLE ASSISTED MOBILE NETWORK 3117
Fig. 9. Required resources of 6 UAVs under open-loop situation.
Fig. 10. Required resources of 6 UAVs under feedback situation.
situation, respectively. We can find that the number of UAVs
will not affect the services demands in the proposed system,
where the services demands of UAV1, UAV2 and UAV3 are
the same with the previous results.
Next, we analyze the strategies of UAVs for the required
edge computing resources. Because the unit price for the
allocated edge computing resources is assumed to be a fixed
value, the impact of price on UAVs decision-making is tem-
porarily ignored. Based on the services demands, the UAVs
would require the edge computing resources from the ECS to
provide satisfied services to mobile users. The variations of
required resources for each UAV are shown in Figures 7, 8, 9
and 10, respectively. Figures 7 and 9 show the required
edge computing resources of UAVs under open loop situation,
where Figures 8 and 10 are the equilibrium strategies under
feedback situation. Since the UAVs don’t know how much
resources are needed to meet the services demands from
mobile users at the beginning of the game, each UAV requires
a large amount of edge computing resources from the ECS
to meet the possible services demands. As the game goes
on, the amount of the required edge computing resources by
each UAV would be decreased to a stable equilibrium value
based on the actual needs of mobile users. The amount of
required edge computing resources vary according to the users
services demands. More edge computing resources are needed
by the UAVs with more users services demands. As we assume
there is enough edge computing resources in the ECS for
resource allocation, when we double the number of UAVs in
the proposed system, we can find that the number of UAVs will
Fig. 11. Optimal pricing strategy of ECS under open-loop situation.
Fig. 12. Optimal pricing strategy of ECS under feedback situation.
Fig. 13. Objective of 3 UAVs under open-loop situation.
not affect the amount of required edge computing resources,
as given in Figures 9 and 10.
As the leader of the proposed Stackelberg dynamic game,
after the UAVs make decisions on the requirements of edge
computing resources, the ECS would re-allocate the unit price
of the allocated edge computing resources to maximize its
profit based on (8). The equilibrium solutions of ECS are
shown in Figures 11 and 12, which are the optimal pricing
strategies under open-loop situation and feedback situation,
respectively. For the optimal pricing strategy of ECS under
open loop situation, the price goes down at the beginning.
After 5 iterations, the unit price increases and converges to
a stable value. Because the number of UAVs can affect the
profit obtained from the allocated edge computing resources
and the payments for the miners, the number of UAVs could
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
3118 IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS, VOL. 20, NO. 5, MAY 2021
Fig. 14. Objective of 3 UAVs under feedback situation.
Fig. 15. Objective of 6 UAVs under open-loop situation.
Fig. 16. Objective of 6 UAVs under feedback situation.
affect the pricing strategies of ECS, as shown in Figure 11.
When the number of UAVs are doubled, the unit price given
in the blue line is higher than the unit price in red line, which
means the ECS would set a higher price for the allocated
edge computing resources, when the number of UAVs are
increased. Under the feedback situation, the optimal pricing
strategies of ECS with 3 UAVs keeps going down until it
converges. When the number of UAVs is doubled to 6, the
ECS reduces the unit price at the beginning. After 5 iterations,
the ECS’ strategy is to raise the resources price to earn more
profit.
Given the equilibrium strategies of UAVs and ECS, we can
obtain the optimal objectives of UAVs, and the optimal profit
Fig. 17. Profit of ECS with different ψ under open-loop situation.
Fig. 18. Profit of ECS with different ψ under feedback situation.
Fig. 19. Payments to the miners with different ψ under open-loop situation.
of ECS, respectively. Figures 13 and 14 are the objectives
of UAVs under open-loop situation and feedback situation,
where the number of UAVs is 3. Under open loop situation,
it is shown that the objectives of UAVs can quickly converge
to a stable value. Under the feedback situation, the objectives
can keep steady at the beginning, and then quickly increase
to a maximum value. When the number of UAVs is increased
from 3 to 6, the objectives of UAVs are decreased, as shown
in Figures 15 and 16. When the number of UAVs is increased,
the ECS will set a higher price value for the allocated edge
computing resources, then the UAVs would cost more for the
same amount of edge computing resources and the objectives
would be decreased.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
XU et al.: EDGE COMPUTING RESOURCE ALLOCATION FOR UNMANNED AERIAL VEHICLE ASSISTED MOBILE NETWORK 3119
Fig. 20. Payments to the miners with different ψ under feedback situation.
The profit of ECS for allocating the edge computing
resources are given in Figures 17 and 18. As shown in the
Figures, the profit of ECS would converge to a stable value
quickly under two kinds of situations. But under the feedback
situation, the profit would decrease to zero, because the UAVs
decrease their resources demands to zero. The value of rewards
paid for the miners would also affect the profit of ECS. If the
ECS set a larger value for the rewards, the profit earned by
the ECS would be lower. We can also find that the number of
UAVs in the system will affect the profit of ECS. When the
number of UAVs is increased, the ECS can obtain more profit
from the UAVS.
Finally, we show the convergence of payments to the
miners under two kinds of situations. For different payments,
we consider that the reward ψ paid for the miners are 1,
10, 20. From Figure 19, we first observe that the payments
to the miners with different reward under open-loop situation.
We can observe that the payment to the miners after the con-
vergence is larger when the reward is higher. The payment with
reward value 20 is the highest as it has the largest reward value
compared with other situations. From Figure 20, we can also
observe the same phenomenon. Under the feedback situation,
as the reward value is higher, the payment to the miners is
greater.
VII. CONCLUSION
In this paper, a UAV assisted mobile edge computing net-
work is researched, and a novel resource pricing and allocation
scheme is proposed to solve the edge computing resource
allocation problem in the proposed network. The resource
pricing and allocation problem is formulated as a Stackelberg
game, where the leader is the ECS and the followers are
the UAVS. Based on the proposed framework, the ECS can
achieve optimal edge computing resource pricing, where the
resources can be optimally allocated among the UAVS. The
security problem during the resource allocation process is also
considered and solved through the blockchain techniques.
APPENDIX
PROOF OF THEOREM 3
Assuming there are two sets of resources price that can
satisfy the objective function given in Problem 1, which are
denoted by {pi(t)} and {qi(t)} respectively. For a constant
λ, (0 < λ < 1), we have,
U �
ECS(λpi(t) + (1 − λ)qi(t))
=
N∑
i=1
[λpi(t) + (1 − λ)qi(t)] γidi(t)
−
N∑
i=1
[
ψ + πi
di(t)
λpi(t) + (1 − λ)qi(t)
]
. (37)
Substituting {pi(t)} and {qi(t)} into the objective function,
we have,
λU �
ECS(pi(t)) = λ
N∑
i=1
γipi(t)di(t)
−λ
N∑
i=1
[
ψ + πi
di(t)
pi(t)
]
, (38)
(1 − λ)U �
ECS(qi(t)) = (1 − λ)
N∑
i=1
γiqi(t)di(t)
− (1 − λ)
N∑
i=1
[
ψ + πi
di(t)
qi(t)
]
. (39)
Then we have,
λU �
ECS(pi(t)) + (1 − λ)U �
ECS(qi(t))
= λ
N∑
i=1
γipi(t)di(t) − λ
N∑
i=1
[
ψ + πi
di(t)
pi(t)
]
+ (1 − λ)
N∑
i=1
γiqi(t)di(t)
− (1 − λ)
N∑
i=1
[
ψ + πi
di(t)
qi(t)
]
. (40)
Calculating (37) and (40), we have,
U �
ECS(λpi(t) + (1 − λ)qi(t))
− [λU �
ECS(pi(t)) + (1 − λ)U �
ECS(qi(t))]
=
N∑
i=1
[λpi(t) + (1 − λ)qi(t)] γidi(t)
−
N∑
i=1
[
ψ + πi
di(t)
λpi(t) + (1 − λ)qi(t)
]
−λ
N∑
i=1
γipi(t)di(t) + λ
N∑
i=1
[
ψ + πi
di(t)
pi(t)
]
− (1 − λ)
N∑
i=1
γiqi(t)di(t)
+ (1 − λ)
N∑
i=1
[
ψ + πi
di(t)
qi(t)
]
> 0, (41)
which means the objective function is a concave function.
Hence, Theorem follows.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
3120 IEEE TRANSACTIONS ON WIRELESS COMMUNICATIONS, VOL. 20, NO. 5, MAY 2021
REFERENCES
[1] M. Chen, Z. Yang, W. Saad, C. Yin, H. V. Poor, and S. Cui, “A
joint learning and communications framework for federated learning
over wireless networks,” IEEE Trans. Wireless Commun., early access,
Oct. 2020, doi: 10.1109/TWC.2020.3024629.
[2] B. P. Rimal, D. P. Van, and M. Maier, “Mobile edge computing empow-
ered fiber-wireless access networks in the 5G era,” IEEE Commun. Mag.,
vol. 55, no. 2, pp. 192–200, Feb. 2017.
[3] Z. Xiong, Y. Zhang, D. Niyato, R. Deng, P. Wang, and L.-C. Wang,
“Deep reinforcement learning for mobile 5G and beyond: Fundamentals,
applications, and challenges,” IEEE Veh. Technol. Mag., vol. 14, no. 2,
pp. 44–52, Jun. 2019.
[4] Z. Xiong, J. Kang, D. Niyato, P. Wang, and H. V. Poor, “Cloud/edge
computing service management in blockchain networks: Multi-leader
multi-follower game-based ADMM for pricing,” IEEE Trans. Services
Comput., vol. 13, no. 2, pp. 356–367, Apr. 2020.
[5] W. Xia and L. Shen, “Joint resource allocation using evolutionary
algorithms in heterogeneous mobile cloud computing networks,” China
Commun., vol. 15, no. 8, pp. 189–204, Aug. 2018.
[6] J. Zhang, Q. Li, X. Wang, B. Feng, and D. Guo, “Towards fast and
lightweight spam account detection in mobile social networks through
fog computing,” Peer-to-Peer Netw. Appl., vol. 11, no. 4, pp. 778–792,
Jul. 2018.
[7] M. Satyanarayanan, P. Bahl, R. Caceres, and N. Davies, “The case for
VM-based cloudlets in mobile computing,” IEEE Pervasive Comput.,
vol. 8, no. 4, pp. 14–23, Oct. 2009.
[8] N. Abbas, Y. Zhang, A. Taherkordi, and T. Skeie, “Mobile edge com-
puting: A survey,” IEEE Internet Things J., vol. 5, no. 1, pp. 450–465,
Feb. 2018.
[9] S. Sardellitti, G. Scutari, and S. Barbarossa, “Joint optimization of radio
and computational resources for multicell mobile-edge computing,”
IEEE Trans. Signal Inf. Process. over Netw., vol. 1, no. 2, pp. 89–103,
Jun. 2015.
[10] A. U. R. Khan, M. Othman, S. A. Madani, and S. U. Khan, “A survey of
mobile cloud computing application models,” IEEE Commun. Surveys
Tuts., vol. 16, no. 1, pp. 393–413, Jul. 2013.
[11] Z. Xiong, S. Feng, D. Niyato, P. Wang, A. Leshem, and Z. Han,
“Joint sponsored and edge caching content service market: A game-
theoretic approach,” IEEE Trans. Wireless Commun., vol. 18, no. 2,
pp. 1166–1181, Feb. 2019.
[12] B. Liu, H. Xu, and X. Zhou, “Resource allocation in wireless powered
mobile-edge computing systems for Internet-of-Thing applications,”
Electronics, vol. 8, no. 2, p. 206, Feb. 2019.
[13] A. Waqas, Z. Muhammed, and A. Shah, “A security-based survey and
classification of cloud architectures, state of art and future directions,”
in Proc. Int. Conf. Adv. Comput. Sci. Appl. Technol., Kuching, Malaysia,
Dec. 2013, pp. 284–289.
[14] Z. Yiqing and L. I. Guojie, “Convergence of communication and
computing in future mobile communication systems,” Telecommun. Sci.,
vol. 34, no. 3, pp. 1–7, Mar. 2018.
[15] E. Panaousis, E. Karapistoli, H. Elsemary, T. Alpcan, M. Khuzani, and
A. A. Economides, “Game theoretic path selection to support security
in device-to-device communications,” Ad Hoc Netw., vol. 56, pp. 28–42,
Mar. 2017.
[16] T. Taleb, S. Dutta, A. Ksentini, M. Iqbal, and H. Flinck, “Mobile edge
computing potential in making cities smarter,” IEEE Commun. Mag.,
vol. 55, no. 3, pp. 38–43, Mar. 2017.
[17] Y. He, F. R. Yu, N. Zhao, V. C. M. Leung, and H. Yin, “Software-defined
networks with mobile edge computing and caching for smart cities:
A big data deep reinforcement learning approach,” IEEE Commun. Mag.,
vol. 55, no. 12, pp. 31–37, Dec. 2017.
[18] F. J. Martinez, C.-K. Toh, J.-C. Cano, C. T. Calafate, and P. Manzoni,
“Emergency services in future intelligent transportation systems based
on vehicular communication networks,” IEEE Intell. Transp. Syst. Mag.,
vol. 2, no. 2, pp. 6–20, Oct. 2010.
[19] E. Demir, T. J. Chaussalet, H. Xie, and P. H. Millard, “Emergency
readmission criterion: A technique for determining the emergency read-
mission time window,” IEEE Trans. Inf. Technol. Biomed., vol. 12, no. 5,
pp. 644–649, Sep. 2008.
[20] B. Liu, H. Xu, and X. Zhou, “Resource allocation in unmanned aerial
vehicle (UAV)-assisted wireless-powered Internet of Things,” Sensors,
vol. 19, no. 8, pp. 1908–1920, Apr. 2019.
[21] J. Qiu, D. Grace, G. Ding, M. D. Zakaria, and Q. Wu, “Air-ground
heterogeneous networks for 5G and beyond via integrating high and
low altitude platforms,” IEEE Wireless Commun., vol. 26, no. 6,
pp. 140–148, Dec. 2019.
[22] Z. Yang et al., “Joint altitude, beamwidth, location, and bandwidth
optimization for UAV-enabled communications,” IEEE Commun. Lett.,
vol. 22, no. 8, pp. 1716–1719, Aug. 2018.
[23] S. Wang, D. Ye, X. Huang, R. Yu, Y. Wang, and Y. Zhang, “Consortium
blockchain for secure resource sharing in vehicular edge computing: A
contract-based approach,” IEEE Trans. Netw. Sci. Eng., early access,
Jun. 23, 2020, doi: 10.1109/TNSE.2020.3004475.
[24] Y. Liu, K. Xiong, Q. Ni, P. Fan, and K. B. Letaief, “UAV-assisted
wireless powered cooperative mobile edge computing: Joint offloading,
CPU control, and trajectory optimization,” IEEE Internet Things J.,
vol. 7, no. 4, pp. 2777–2790, Apr. 2020.
[25] W. Chen, B. Liu, H. Huang, S. Guo, and Z. Zheng, “When UAV
swarm meets edge-cloud computing: The QoS perspective,” IEEE Netw.,
vol. 33, no. 2, pp. 36–43, Mar. 2019.
[26] H. Wang, J. Wang, G. Ding, J. Chen, F. Gao, and Z. Han, “Completion
time minimization with path planning for fixed-wing UAV communica-
tions,” IEEE Trans. Wireless Commun., vol. 18, no. 7, pp. 3485–3499,
Jul. 2019.
[27] X. Chen, C. Wu, M. Bennis, Z. Zhao, and Z. Han, “Learning to
entangle radio resources in vehicular communications: An oblivious
game theoretic perspective,” IEEE Trans. Veh. Technol., vol. 68, no. 5,
pp. 4262–4274, May 2019.
[28] Z. Yu, Y. Gong, S. Gong, and Y. Guo, “Joint task offloading and
resource allocation in UAV-enabled mobile edge computing,” IEEE
Internet Things J., vol. 7, no. 4, pp. 3147–3159, Apr. 2020.
[29] Y. Liu, S. Xie, and Y. Zhang, “Cooperative offloading and resource
management for UAV-enabled mobile edge computing in power IoT
system,” IEEE Trans. Veh. Technol., vol. 69, no. 10, pp. 12229–12239,
Oct. 2020.
[30] Y. K. Tun, Y. M. Park, N. H. Tran, W. Saad, S. R. Pandey,
and C. S. Hong, “Energy-efficient resource management in UAV-
assisted mobile edge computing,” IEEE Commun. Lett., early access,
Sep. 23, 2020, doi: 10.1109/LCOMM.2020.3026033.
[31] A. Sharma, A. Jain, and I. Sharma, “Exposing the security weaknesses
of fifth generation handover communication,” in Proc. 10th Int. Conf.
Comput., Commun. Netw. Technol. (ICCCNT), Kanpur, India, Jul. 2019,
pp. 1–6.
[32] S. M. Errapotu, J. Wang, Y. Gong, J. H. Cho, M. Pan, and Z. Han,
“SAFE: Secure appliance scheduling for flexible and efficient energy
consumption for smart home IoT,” IEEE Internet Things J., vol. 5, no. 6,
pp. 4380–4391, Dec. 2018.
[33] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for blockchain
networks,” IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600,
Jun. 2019.
[34] Y. Huang, J. Zhang, J. Duan, B. Xiao, F. Ye, and Y. Yang, “Resource
allocation and consensus on edge blockchain in pervasive edge comput-
ing environments,” in Proc. IEEE 39th Int. Conf. Distrib. Comput. Syst.
(ICDCS), Dallas, TX, USA, Jul. 2019, pp. 1476–1486.
[35] Z. Xiong, Y. Zhang, N. C. Luong, D. Niyato, P. Wang, and N. Guizani,
“The best of both worlds: A general architecture for data management
in blockchain-enabled Internet-of-Things,” IEEE Netw., vol. 34, no. 1,
pp. 166–173, Jan. 2020.
[36] A. Kosba, A. Miller, E. Shi, Z. Wen, and C. Papamanthou, “Hawk:
The blockchain model of cryptography and privacy-preserving smart
contracts,” in Proc. IEEE Symp. Secur. Privacy (SP), San Jose, CA,
USA, May 2016, pp. 839–858.
[37] K. Christidis and M. Devetsikiotis, “Blockchains and smart contracts for
the Internet of Things,” IEEE Access, vol. 4, pp. 2292–2303, May 2016.
[38] T. Salman, M. Zolanvari, A. Erbad, R. Jain, and M. Samaka, “Security
services using blockchains: A state of the art survey,” IEEE Commun.
Surveys Tuts., vol. 21, no. 1, pp. 858–880, 1st Quart., 2019.
[39] S. Yin, Z. Qu, and L. Li, “Uplink resource allocation in cellular networks
with energy-constrained UAV relay,” in Proc. IEEE 87th Veh. Technol.
Conf. (VTC Spring), Porto, Portugal, Jun. 2018, pp. 1–5.
[40] J. He, J. Wang, H. Zhu, W. Cheng, P. Yue, and X. Yi, “Resource
allocation in drone aided emergency communications,” in Proc. IEEE
Int. Conf. Commun. (ICC), Shanghai, China, May 2019, pp. 1–6.
[41] X. Hou, Z. Ren, J. Wang, S. Zheng, W. Cheng, and H. Zhang,
“Distributed fog computing for latency and reliability guaranteed swarm
of drones,” IEEE Access, vol. 8, pp. 7117–7130, Jan. 2020.
[42] M. Li, N. Cheng, J. Gao, Y. Wang, L. Zhao, and X. Shen, “Energy-
efficient UAV-assisted mobile edge computing: Resource allocation and
trajectory optimization,” IEEE Trans. Veh. Technol., vol. 69, no. 3,
pp. 3424–3438, Mar. 2020.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TWC.2020.3024629
http://dx.doi.org/10.1109/TNSE.2020.3004475
http://dx.doi.org/10.1109/LCOMM.2020.3026033
XU et al.: EDGE COMPUTING RESOURCE ALLOCATION FOR UNMANNED AERIAL VEHICLE ASSISTED MOBILE NETWORK 3121
[43] Y. Zhou et al., “Secure communications for UAV-enabled mobile edge
computing systems,” IEEE Trans. Commun., vol. 68, no. 1, pp. 376–388,
Jan. 2020.
[44] Y. Xu, T. Zhang, D. Yang, Y. Liu, and M. Tao, “Joint resource
and trajectory optimization for security in UAV-assisted MEC sys-
tems,” IEEE Trans. Commun., early access, Sep. 22, 2020, doi:
10.1109/TCOMM.2020.3025910.
[45] J. Qiu, D. Grace, G. Ding, J. Yao, and Q. Wu, “Blockchain-based
secure spectrum trading for unmanned-aerial-vehicle-assisted cellular
networks: An operator’s perspective,” IEEE Internet Things J., vol. 7,
no. 1, pp. 451–466, Jan. 2020.
[46] A. Islam and S. Y. Shin, “BUAV: A blockchain based secure UAV-
assisted data acquisition scheme in Internet of Things,” J. Commun.
Netw., vol. 21, no. 5, pp. 491–502, Oct. 2019.
[47] A. Asheralieva and D. Niyato, “Distributed dynamic resource manage-
ment and pricing in the IoT systems with blockchain-as-a-service and
UAV-enabled mobile edge computing,” IEEE Internet Things J., vol. 7,
no. 3, pp. 1974–1993, Mar. 2020.
[48] M. Taghavi, J. Bentahar, H. Otrok, and K. Bakhtiyari, “Cloudchain:
A blockchain-based coopetition differential game model for cloud com-
puting,” in Proc. Int. Conf. Service-Oriented Comput., Hangzhou, China,
Oct. 2018, pp. 146–161.
Haitao Xu (Member, IEEE) received the B.S. degree
in communication engineering from Sun Yat-sen
University, China, in 2007, the M.S. degree in com-
munication system and signal processing from the
University of Bristol, U.K., in 2009, and the Ph.D.
degree in communication and information system
from the University of Science and Technology
Beijing, Beijing, China, in 2014.
From 2014 to 2016, he was with the Department
of Communication Engineering, University of Sci-
ence and Technology Beijing, as a Post-Doctoral
Researcher. He is currently an Associate Professor with the Department of
Communication Engineering, University of Science and Technology Beijing.
He has co-edited a book titled Security in Cyberspace and coauthored
over 50 technical articles. He has been serving in the organization teams of
some international conferences, e.g., CCT2014 and CCT2015. His research
interests include wireless resource allocation and management, wireless com-
munications and networking, dynamic game and mean field game theory, big
data analysis, and security.
Wentao Huang was born in Chengdu, China,
in 1988. He received the bachelor’s degree from
Sichuan Normal University in 2010 and the master’s
degree from the Beijing University of Aeronautics
and Astronautics in 2015. He is currently pursuing
the Ph.D. degree with the University of Science and
Technology Beijing. His research interests include
optical fiber communications and computers.
Yunhui Zhou was born in Sichuan, China, in 1993.
She is currently pursuing the Ph.D. degree with the
University of Science and Technology Beijing. Her
research interests include satellite network, artificial
intelligence, and the IoT.
Dongmei Yang was born in Handan, China, in 1974.
She is currently pursuing the Ph.D. degree with the
University of Science and Technology Beijing. She
is also working with World Telecom Satellite Tech-
nology Limited as the CEO and a Senior Software
Engineer. Her research interests include application
of artificial intelligence in self-organizing low-orbit
constellation, satellite communication, the IoT, and
5G technology.
Ming Li (Member, IEEE) received the B.E. degree
in electrical engineering from Sun Yat-sen Univer-
sity, China, in 2007, the M.E. degree in electrical
engineering from the Beijing University of Posts
and Communications, China, in 2010, and the Ph.D.
degree in electrical and computer engineering from
Mississippi State University, Starkville, in 2014.
She is currently an Assistant Professor with the
Department of Computer Science and Engineering,
The University of Texas at Arlington. Her research
interests include mobile computing, the Internet of
Things, security, and privacy-preserving computing. She is also a member of
ACM. Her work won best paper awards in Globecom 2015 and DASC 2017,
respectively. She received the NSF CAREER Award in 2020.
Zhu Han (Fellow, IEEE) received the B.S. degree
in electronic engineering from Tsinghua University,
in 1997, and the M.S. and Ph.D. degrees in elec-
trical and computer engineering from the Univer-
sity of Maryland, College Park, in 1999 and 2003,
respectively.
From 2000 to 2002, he was a Research and
Development Engineer with JDSU, Germantown,
MD, USA. From 2003 to 2006, he was a
Research Associate with the University of Maryland.
From 2006 to 2008, he was an Assistant Professor
with Boise State University, Idaho. He is currently a John and Rebecca
Moores Professor with the Electrical and Computer Engineering Department
and the Computer Science Department, University of Houston, Houston,
TX, USA. His research interests include wireless resource allocation and
management, wireless communications and networking, game theory, big
data analysis, security, and smart grid. He received an NSF Career Award
in 2010, the Fred W. Ellersick Prize of the IEEE Communication Society
in 2011, the EURASIP Best Paper Award for the EURASIP Journal on
Advances in Signal Processing in 2015, IEEE Leonard G. Abraham Prize in
the field of Communications Systems (Best Paper Award in IEEE JOURNAL
ON SELECTED AREAS IN COMMUNICATIONS (JSAC)) in 2016, and several
best paper awards in IEEE conferences. He was an IEEE Communications
Society Distinguished Lecturer from 2015 to 2018, an AAAS Fellow since
2019, and an ACM Distinguished Member since 2019. He has been the 1%
highly cited Researcher since 2017 according to Web of Science. He is also
the winner of 2021 IEEE Kiyo Tomiyasu Award, for outstanding early to
mid-career contributions to technologies holding the promise of innovative
applications, with the following citation: “for contributions to game theory
and distributed management of autonomous communication networks.”
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:17:35 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TCOMM.2020.3025910
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Black & White)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Tags
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 524288
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments true
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /AdobeArabic-Bold
    /AdobeArabic-BoldItalic
    /AdobeArabic-Italic
    /AdobeArabic-Regular
    /AdobeHebrew-Bold
    /AdobeHebrew-BoldItalic
    /AdobeHebrew-Italic
    /AdobeHebrew-Regular
    /AdobeHeitiStd-Regular
    /AdobeMingStd-Light
    /AdobeMyungjoStd-Medium
    /AdobePiStd
    /AdobeSansMM
    /AdobeSerifMM
    /AdobeSongStd-Light
    /AdobeThai-Bold
    /AdobeThai-BoldItalic
    /AdobeThai-Italic
    /AdobeThai-Regular
    /ArborText
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /BellGothicStd-Black
    /BellGothicStd-Bold
    /BellGothicStd-Light
    /ComicSansMS
    /ComicSansMS-Bold
    /Courier
    /Courier-Bold
    /Courier-BoldOblique
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /Courier-Oblique
    /CourierStd
    /CourierStd-Bold
    /CourierStd-BoldOblique
    /CourierStd-Oblique
    /EstrangeloEdessa
    /EuroSig
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Helvetica
    /Helvetica-Bold
    /Helvetica-BoldOblique
    /Helvetica-Oblique
    /Impact
    /KozGoPr6N-Medium
    /KozGoProVI-Medium
    /KozMinPr6N-Regular
    /KozMinProVI-Regular
    /Latha
    /LetterGothicStd
    /LetterGothicStd-Bold
    /LetterGothicStd-BoldSlanted
    /LetterGothicStd-Slanted
    /LucidaConsole
    /LucidaSans-Typewriter
    /LucidaSans-TypewriterBold
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MinionPro-Bold
    /MinionPro-BoldIt
    /MinionPro-It
    /MinionPro-Regular
    /MinionPro-Semibold
    /MinionPro-SemiboldIt
    /MVBoli
    /MyriadPro-Black
    /MyriadPro-BlackIt
    /MyriadPro-Bold
    /MyriadPro-BoldIt
    /MyriadPro-It
    /MyriadPro-Light
    /MyriadPro-LightIt
    /MyriadPro-Regular
    /MyriadPro-Semibold
    /MyriadPro-SemiboldIt
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /Symbol
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Webdings
    /Wingdings-Regular
    /ZapfDingbats
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 600
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 600
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 300
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 900
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.33333
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /Unknown
  /CreateJDFFile false
  /Description <<
    /ENU ()
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice