BSIF: Blockchain-Based Secure, Interactive, and Fair Mobile Crowdsensing
3452 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
BSIF: Blockchain-Based Secure, Interactive, and
Fair Mobile Crowdsensing
Weizheng Wang , Graduate Student Member, IEEE, Yaoqi Yang , Zhimeng Yin,
Kapal Dev , Senior Member, IEEE, Xiaokang Zhou , Member, IEEE, Xingwang Li , Senior Member, IEEE,
Nawab Muhammad Faseeh Qureshi , Senior Member, IEEE, and Chunhua Su
Abstract— Given the explosive growth of portable devices,
mobile crowdsensing (MCS) is becoming an essential approach
that fully utilizes pervasive idle resources to accomplish sensing
tasks. The traditional MCS relies on the centralized server
for task handle is susceptible to a single point of failure.
Targeting this security issue, researchers have proposed a series of
blockchain-based MCS. However, nodes in the blockchain suffer
from high computation cost for data processing. Simultaneously,
most blockchain-based MCS systems lack an efficient incentive
mechanism for service requesters and workers. In this work,
we integrate the smart contract and mobile devices to establish
a secure, interactive, and fair blockchain-based MCS system
called BSIF. To prevent illegitimate participants, BSIF requests
all users to verify their identities using private keys from
the registration phase. In the case of worker location privacy
leakage, the location-based symmetric key generator is adopted
to coordinate a session key for target range worker selection.
Besides, we transfer the data evaluation process to the requester
side (e.g., a personal computer), reducing computation cost in the
blockchain nodes. Due to the homomorphic feature of the Paillier
Cryptosystem and common interest, the requester cannot violate
the directives from the blockchain. Subsequently, the Stackelberg
Manuscript received 16 March 2022; revised 15 June 2022; accepted
30 June 2022. Date of publication 17 October 2022; date of current version
22 November 2022. This work was supported in part by NSFC under Project
62102332 and Project CityU APRC 9610491 and in part by the Project of
Zhejiang Lab under Project 119001-AC2202. (Corresponding authors: Yaoqi
Yang; Zhimeng Yin; Xiaokang Zhou; Nawab Muhammad Faseeh Qureshi.)
Weizheng Wang is with the Department of Computer Science, City Univer-
sity of Hong Kong, Hong Kong SAR, China, and also with the Zhejiang Lab,
Hangzhou, Zhejiang 310000, China (e-mail: weizheng.wang@ieee.org).
Yaoqi Yang is with the Graduate School, Army Engineering University of
PLA, Nanjing 210000, China (e-mail: yaoqi_yang@yeah.net).
Zhimeng Yin is with the Department of Computer Science, City University
of Hong Kong, Hong Kong SAR, China (e-mail: zhimeyin@cityu.edu.hk).
Kapal Dev is with the Department of Computer Science, Munster Tech-
nological University, Cork, T12 P928 Ireland, and also with the Institute of
Intelligent Systems, University of Johannesburg, Johannesburg 2006, South
Africa (e-mail: kapal.dev@ieee.org).
Xiaokang Zhou is with the Faculty of Data Science, Shiga University,
Hikone 522-8522, Japan, and also with the RIKEN Center for Advanced
Intelligence Project, RIKEN, Tokyo 103-0027, Japan (e-mail: zhou@biwako.
shiga-u.ac.jp).
Xingwang Li is with the Department of Physics and Electronic Information
Engineering, Henan Polytechnic University, Jiaozuo 454000, China (e-mail:
lixingwang@hpu.edu.cn).
Nawab Muhammad Faseeh Qureshi is with the Department of Computer
Education, Sungkyunkwan University, Seoul 16419, South Korea (e-mail:
faseeh@skku.edu).
Chunhua Su is with the Division of Computer Science, The University of
Aizu, Fukushima 965-8580, Japan (e-mail: chsu@u-aizu.ac.jp).
Color versions of one or more figures in this article are available at
https://doi.org/10.1109/JSAC.2022.3213306.
Digital Object Identifier 10.1109/JSAC.2022.3213306
game is adopted to investigate the participation level of the
workers and the fair reward mechanism for the requesters to
achieve a dynamic balance. Finally, the security analysis and
performance evaluation demonstrate that our BSIF can defend
against possible adversaries while significantly cutting overhead
and giving participants the utmost incentive.
Index Terms— Mobile crowdsensing (MCS), security and
privacy, blockchain, Stackelberg game.
I. INTRODUCTION
MOBILE crowdsensing (MCS) proposed by
Ganti et al. [1] in 2011, leverages a large number of
individual mobile devices (e.g., smartphones, wearables , and
tablet computers) owned by individuals to capture and share
surrounding data based on sensing task content. As the statistic
data provided by the International Telecommunications Union
(ITU),1 the total number of mobile cellular subscriptions
has reached 7.325 billion at the end of 2020. Moreover, the
computational performance of mobile devices has obtained
remarkable improvement benefiting from the emergence of
AI-based chips [2]. Given these two trends, MCS plays an
essential role in mobile resource coordination and utilization
to outsource sensing tasks for cost-effective impact. In the
example of the real-time traffic monitoring system, vehicles
can upload their current GPS locations and running speeds
to the cloud server through nearby roadside units (RSUs),
thus generating a traffic condition map for congestion allevi-
ation [3]. Besides, a model of city area can also be efficiently
reconstructed in terms of photos collected by the tourists [4].
Although MCS brings great convenience to all walks of life,
some security and privacy issues also rise to the surface. First
and foremost, as shown in Fig. 1, the centralized server is
responsible for task publishing and collected data processing
between task requesters and mobile workers in the traditional
MCS scenario. However, once the adversaries compromise the
central server, all the task contents and sensory data will be
leaked without suspense. Especially in the healthcare scenario,
this potential risk discourages the positive attitude of all
participants since their private health status can be disclosed,
such as the health status and blood pressure recorded in
the iWatch [5]. Therefore, to tackle the above-centralized
challenge, blockchain-based MCS systems have emerged in
recent years. Decentralized network, transparency transaction,
1https://data.worldbank.org/indicator/IT.CEL.SETS?end=2020&start=2020
0733-8716 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-5879-585X
https://orcid.org/0000-0003-1262-8594
https://orcid.org/0000-0003-3488-4679
https://orcid.org/0000-0002-0907-6517
https://orcid.org/0000-0002-5035-2640
https://orcid.org/0000-0002-6461-9684
https://orcid.org/0000-0002-2039-7506
WANG et al.: BSIF: BLOCKCHAIN-BASED SECURE, INTERACTIVE, AND FAIR MCS 3453
Fig. 1. Traditional MCS framework.
and unalterable record are the three prominent features of
blockchain, which establishes trust for all parts, following
with the single point of failure defense. Particularly, the
smart contract attached to the blockchain can be used to
automatically form a confident agreement between requesters
and workers with the aid of lines of code.
Despite some MCS frameworks built on blockchain have
been implemented [6], [7], [8], the data evaluation process is
usually handled by the access nodes. The low throughput and
slow transaction processing period of most blockchains hinder
this preference. For example, Bitcoin takes 10 minutes to form
a block and Ethereum takes about 14 seconds to form a block.
During peak times, it may take longer for these blocks to form.
Hence, as long as the task requesters are willing to undertake
some verification operation, the computation pressure can be
lightened in the blockchain.
Other than the centralized server issue in the MCS, commu-
nication data amid nodes should also be protected appropri-
ately, owning to the insecure channel. For instance, if nodes
submit the unmodified coordinates to an untrusted service
provider, the node location will be tracked, leading to a
potential leakage of more sensitive information such as name,
address and password. As usual, the privacy-preserving MCS
is divided into two categories: tasking and reporting process.
Regarding tasking process, pseudonymity and obfuscation are
the two common methods to conceal the real identity of
participants by adopting pseudo ID or adding some data
scrambling for the current location. For the reporting process,
the privacy of transmitted data needs to be guarded by
using cryptographic techniques, selective sensing, and patch
cloaking algorithms [9]. Nevertheless, the communication
and computation costs are the two crucial indicators when
designing the privacy-preserving MCS.
Fairness is another challenge that needs to be well
addressed. Specifically, existing systems aim to achieve a
dynamic equilibrium between offered rewards given by the
task requesters and participation level of mobile workers,
suggesting that service providers acquire accurate sensing data
at a minimum cost and workers receive the high return by
contributing the least efforts. Although a few works [10], [11]
have studied the incentive mechanism and privacy protection
for MCS separately, the joint game theory-based incentive
design and security enhancement of MCS is still absent.
In this paper, in order to tackle the above-mentioned posers,
we propose a blockchain-based secure, interactive, and fair
MCS called BSIF. The traditional centralized server has been
replaced by the blockchain, which can decrease unnecessary
risks such as single point of failure and server compromised
attack in the MCS. On the other hand, we also consider
the costly computation resource of blockchain node, so a
portion of data evaluation process has been migrated into
task requesters benefiting from the homomorphic encryption
of Paillier Cryptosystem. Simultaneously, without the location
report requirements, a novel location-based symmetric key
generator is introduced to search workers in a target range
so that the location exposure issue can be eliminated. Further-
more, to filter unqualified workers, task requesters are also
able to set the reputation threshold for the published task.
Finally, based on the incentive mechanism in the Stackelberg
game, we establish the dynamic reward and participation
level determination models, which aim at forming an optimal
incentive strategy. The contributions of this paper are listed as
follows:
1) To alleviate centralized issues caused by the traditional
MCS server, we integrate smart contracts and sensor
nodes to construct a blockchain-based MCS framework
that strengthens the storage security of sensory data.
Moreover, task requesters undertake the data evaluation
process in order to shorten the entire period.
2) To achieve the privacy-preserving task allocation and
reaction, we utilize a location-based symmetric key
generator and task reputation threshold setting to encrypt
task content and select qualified workers in the target
area, respectively.
3) We model the interaction process between the ser-
vice provider (SP) and mobile workers (MWs) as a
two-stage Stackelberg game and analyze each stage
systematically through backward induction. And we also
investigate two types of incentive mechanisms for the
crowdsensing platform, i.e., the Stackelberg game-based
discriminatory incentive mechanism and the Stackelberg
game-based uniform incentive mechanism, respectively.
4) To verify the reliability and effectiveness of our pro-
posed BSIF, we conduct the elaborate security analysis
and experiment evaluation. The outcome presents our
BSIF can meet both requirements.
The remainder of this article is organized as follows.
In Section II, we discuss related work about blockchain,
privacy-preservation and fairness-oriented MCS, respectively.
In Section III, we introduce our proposed BSIF overview,
threat model and design goal. The details of secure and inter-
active task allocation for BSIF are illustrated in Section IV.
In Section V, we design a Stackelberg game-based incentive
scheme for our BSIF. The correctness and security for our
proposed protocol is analyzed in Section VI. In Section VII,
we evaluate the performance of our proposed BSIF in terms of
computational/communication overhead and on-chain perfor-
mance. The fairness of our proposed protocol is discussed in
Section VIII. Finally, we conclude this article in Section IX.
II. RELATED WORK
A. Blockchain-Oriented MCS and Federated Learning (FL)
Decentralization, traceability, and immutability are the three
most attractive characteristics, which can tackle unreliable
central server issues in the traditional MCS. Moreover, the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
3454 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
blockchain-based MCS is able to take the identical responsi-
bilities as centralized ones do. For example, Huang et al. [12]
proposed a blockchain-based MCS system called BMCS,
which drives miners to confirm the validity of collected data
and stimulate workers’ participation depending on a flexible
reward ranking incentive scheme. To protect privacy of task
content and participants, Hu et al. [13] built the blockchain
on the basis of base station miner, which can efficiently
verify the identities of task requesters and mobile nodes.
Kadadha et al. [14] developed an integral blockchain-based
MCS platform, which includes three smart contracts (i.e.,
task deployment contract, task manager contract and task
detailed contract) for user information maintenance, requester
task publish and sensory data upload. Cai et al. [15] uti-
lized zero-knowledge range proofs (ZKRPs) to design a
privacy-preserving MCS on blockchain, where nodes can rent
out their computation power to conduct MCS tasks. Based
on the blockchain and trusted hardware (i.e., Intel SGX),
Duan et al. [16] established a decentralized and robust MCS,
which can avoid the single point of failure and non-transparent
operation. Focusing on fair trade, Liang et al. [17] utilized
the Intel SGX and blockchain to prevent the requesters from
issuing the spiteful MCS tasks, which aims to tease mobile
workers without payment. Although the blockchain-based
crowdsensing which applies Intel SGX [16], [17] can achieve
less centralized compared with works using smart contracts,
the inaccurate threat model and attack-proof cannot prove
other potential attacks (e.g., unauthorized communication,
unreliable payment and worker location privacy) also can be
prevented. The recently emerging distributed machine learning
framework–FL has similar mechanisms to MCS, which out-
sources data processing tasks to workers without data privacy
leaks. However, the FL also meets the centralized and single-
point-of-failure issues for the data aggregation at the server
side, so the blockchain-based FL seems to be a good solution
that can provide decentralized and robust data collection for FL
training with the aid of immutable block ledgers. For example,
Rehman [18] proposed a blockchain-based reputation-aware
FL, which can obtain a personalized and fine-grained training
model for task requesters and some malicious nodes can be
excluded by trustworthy collaboration between edges. Toyoda
et al. [19] proposed an incentive mechanism for the FL nodes
on a public blockchain network, which can motivate more
workers to participate in the training process and audit all the
behaviors. Besides, a decentralized AI-market that combines
blockchain with FL called SingularityNET2 also becomes
popular. In SingularityNET, users can utilize digital currency
to buy AI services, and some developers are available to
sell the corresponding services to users. Although MCS and
FL share similar mechanisms, MCS pays more attention to
outsourcing data collection tasks to participants and the main
focus for FL is to outsource data processing tasks.
B. Privacy-Oriented MCS
Privacy preservation is also a dispensable factor that cannot
be overlooked in the MCS. For instance, if the location privacy
2https://singularitynet.io/
of worker cannot be ensured, the mobile nodes may become
unwilling to share sensory data. To prevent the occurrence
of this situation, Pournajaf et al. [20] utilized a cloaking
strategy to mix up the real locations of participants while
keeping the efficiency of management. K-anonymity is also
widely-used to conceal worker location. Based on this method,
Wang et al. [21] proposed an incentive mechanism with
k-anonymity location-privacy preserving for MCS, where not
only the location can be protected but also the activeness of
worker can be stimulated. To alleviate the data processing
load for the participants, Zhang et al. [22] leveraged the
proxy re-encryption to guarantee sensitivity of sensing task
content and delegate the decryption process to the fog-
computing servers. To achieve a balance between data quality
assurance and privacy preservation, Zhao et al. [10] combined
a novel reward distribution mechanism with zero-knowledge
to construct a novel MCS model, which can meet expected
data requirement and does not disclose any data. Given
the accurate and efficient task allocation, Jiang et al. [23]
proposed a reduced-dimensionality enabled Q-learning for
MCS task interaction meanwhile the communication privacy
is assured by the location-based symmetric key generator.
Despite numerous privacy-preserving incentive mechanisms
for MCS have been proposed, few works are concentralized
on issues of decentralized server, secure data transmission and
optimal incentive solution concurrently.
C. Fairness-Oriented MCS
In order to improve the performance of the MCS, fairness
is one of the premises to be ensured. Up to now, some
attention has been paid to the fairness-oriented MCS system.
Nie et al. [24] proposed the socially-aware incentive mecha-
nism to recruit and pay for the MWs, where the multiple SRs
are modeled as the leaders in the established Stackelberg game.
As for the scenarios under vehicle networks-based MCS,
Xiao et al. [25] formulated the participation and reward-based
MCS game, where the server chooses the vehicle reward
strategy based on the sensing accuracy, and the vehicle takes
actions according to the transmission costs and expected costs.
Tembine et al. [26] investigated the participation level of
the users under three typical kinds of network, public good,
information sharing, and resource sharing, where Bayesian
game is used to derive the optimal strategy for the user. In [27],
Gao et al. aimed to jointly protect the sensing data privacy
and enhance the data quality, in which the trade-off problem
between the data utility and privacy-preservation is modeled
with game theory, and derived the Nash equilibrium solutions
by the dynamic programming methods. To solve the problems
of users’ selfishness, limited resources, and data authenticity,
Cao et al. [28] designed different game models to derive the
optimal strategies for users and servers in the MCS system,
where multi-stage stochastic programming-based approaches
are adopted. Under the unstable social network scenario,
Nie et al. [29] designed a two-stage Stackelberg game (i.e.,
Bayesian Stackelberg game) to explore the activeness of the
mobile users for the optimal incentive mechanism design.
In general, current efforts in fairness-oriented MCS focus less
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: BSIF: BLOCKCHAIN-BASED SECURE, INTERACTIVE, AND FAIR MCS 3455
TABLE I
A SUMMARY OF MCS SECURITY, INTERACTION AND FAIRNESS ISSUE
on jointly enhancing user security, optimizing the user reward,
and ensuring the SR utility simultaneously.
Table. I offers a comprehensive comparison between exist-
ing literature and our BSIF. Although many security-oriented
MCS techniques adopt blockchain, trusted execution
environment (TEE), different privacy, or some techniques
for constructing a secure framework, they commonly lack a
comprehensive threat model and security proof. Regarding
the interaction, existing approaches’ data is evaluated at
blockchain nodes with limited computation resources.
Regarding fairness, although existing literature considers the
incentives, they largely overlook essential security aspects.
To mitigate the above issues, our proposed BSIF aims to
construct a secure, interactive, fair MCS based on blockchain.
III. SYSTEM FORMULATION
In this section, we give brief introduction of our proposed
BSIF system, and then the threat model and design goal are
illustrated.
A. System Overview
Our BSIF MCS system is identical to the traditional MCS
system, which owns four roles: mobile workers (MWs), ser-
vice provider (SP), mining nodes (MNs) and service requester
(SR). The comprehensive description of four parts is presented
as follows.
1) MWs: Smartphones, wearables and vehicles equipped
with GPS, camera, IMU and other functional sensors
can serve as the MWs, which participate in the sensing
task and collect the data from their surroundings.
2) SP: SP in our proposed scheme is not only a sole
server, which consists of a large number of MNs
in the blockchain. In the blockchain-based SP, task
publish and allocation rules are programmed into a
smart contract, whose interfaces are publicized for easy
invocation.
3) MNs: The MNs maintain smooth execution of
blockchain system, where new transactions are validated
and recorded in the blockchain. Besides, MNs not only
can negotiate the interaction with all participants but
also can contribute to some storage and computation
resource. As a return, MNs have the chance to gain
transaction fees and rewards.
4) SR: Any organization, group, company and individ-
ual can serve as the SR, which outsources some
data-intensive or location-specific tasks to MWs for
information collection and analysis. Moreover, in our
proposed BSIF, SR has an obligation to undertake
encrypted data evaluation to alleviate the pressure from
the blockchain.
The architecture of our BSFI is presented in Fig. 3, which
consists of four parts: MWs, SP, MNs and SR. From this
figure, we can also see eleven steps in our crowdsensing
system. The detailed process of BSIF is presented as follows:
1) Requester registration: SR calls SRRegister function
defined in the smart contract, aka SP, to register its
identity information in order to acquire public/private
keys for further authenticated communication through a
MN.
2) Worker registration: The MWs call the MWRegister
function in the SP for registration.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
3456 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Fig. 2. System framework of BSIF.
3) Requester key distribution: According to security
parameters provided in the SP, the public/private keys for
SR/NWs are also generated in the registration process.
Note that since the relevant public/private keys can be
referred in the SP directly, a blind factor uploaded by
SR is used to perturb the original private keys.
4) Worker key distribution: The key distribution for
worker is identical to requester key distribution process.
5) Money deposit: SR needs to transfer the money to the
SP as deposit.
6) Task release: SR is permitted to release the task to the
SP once deposit is received by the SP.
7) Task allocation: MWs which are in the target range can
decode the task published by the SP.
8) Data upload: MWs collect required data and submit
them to the SP.
9) Encrypted data evaluation: SP outsources the
encrypted sensing data to the SR for data quality
evaluation.
10) Data quality report: SR assesses the data quality and
reports result to the SP.
11) Reward delivery: SP distributes the reward to the MWs
and then calculates the latest reputation.
B. Threat Model
In this subsection, we consider the possible threats for our
BSIF in terms of mobile workers (MWs), service provider
(SP), mining nodes (MNs) and service requester (SR). The
elaborate discussion is stated as follows.
1) MWs are assumed untrusted since MWs may not follow
the directives of the task to upload some contributed-less
sensing data or submit erroneous information directly,
which intends to deviate real data estimation. Moreover,
MWs out of the target range or whose reputation are
below the threshold may participate in sensing tasks
due to monetary reward temptation. Besides, MWs may
change their identities to report sensory data many times.
2) Although SP is considered fully trusted, MWs and SR
are curious about the security parameters defined in
the contract for key generation. Moreover, the sensitive
data in the communication channel faces many unknown
attackers who may eavesdrop and tamper with them.
3) MNs is considered honest-but-curious. MNs cannot
collude with the MWs and SP, since MNs serve as
the intermediary between them. However, MNs are
curious about the content in the communication process.
Moreover, MNs have the chances to be compromised.
4) SR is semi-honest. On the one hand, SR does not have to
release false tasks since this action requires non-trivial
cost. On the other hand, SR is likely to get sensing data
but declines to pay the money for sensing data.
C. Design Goal
In this subsection, in terms of the above-mentioned potential
threats, we define the design goal for our proposed BSIF,
whose details are presented as follows:
1) Authenticated Communication: The identity for mobile
workers (MWs) and service requester (SR) should be
verified for each communication process. In other words,
unregistered users cannot participate in our MCS system.
2) Encrypted Task Content: Regarding task privacy, the task
is encrypted by location-based symmetric key, only the
SR and MWs in the target range are able to decode task
content.
3) Privacy-Preserving Location: The real location of min-
ing nodes (MNs) cannot be leaked to anyone.
4) Reliable Payment: The SR cannot refuse to pay the
reward to the service provider (SP) once the sensing
task is finished.
5) Accurate Task Allocation: The task is allocated to
the MWs whose reputation are over the pre-defined
threshold and locate in the target area.
6) Efficient and Secure Data Evaluation: The data quality
evaluation period should be speeded up with low cost
and the sensing data cannot be leaked until sensing task
is completed.
7) Reasonable Reward Distribution: Each MW is able to
get a rational reward which depends on the sensing data
quality and participation level.
8) Real-Time Reputation Update: Since the eligibility of
MWs for sensing task is determined by their reputation,
this value should be updated at the first time.
9) Fair Reward and Incentive Mechanism: SR and MWs
need to achieve a dynamic equilibrium between offered
rewards and participation level.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: BSIF: BLOCKCHAIN-BASED SECURE, INTERACTIVE, AND FAIR MCS 3457
TABLE II
NOTATIONS
IV. SECURE AND INTERACTIVE
TASK ALLOCATION
To achieve the above-mentioned design goals, we propose
a blockchain-based secure, interactive and fair MCS called
BSIF. In this section, we mainly implement the first goal,
which protects the security and privacy of sensing task release
and allocation. The notation used in the section is illus-
trated in Table II. The details for key generation, encryption
and decryption for Paillier Cryptosystem can be referred to
Appendix A.
A. Location-Based Key Generation
In our proposed BSIF, service requester (SR) and mobile
workers (MWs) cannot negotiate a secret key with each other
through direct communication. Moreover, the location of MWs
should be preserved. Hence, we propose a location-based
symmetric key generator based on previous work in [30].
LABE proposed in [30] requires the service provider (SP)
to design the access policy including location attributes and
privacy of mobile nodes in advance. Once data privacy are
leaked to the SP, the task content and node security cannot
be guaranteed. The other technique Geohash proposed in [30]
can generate a secret key according to the a specified coor-
dinate. However, Geohash cannot generate a uniform value
for multiple nodes in a range area. Compared with LABE
and Geohash proposed in [30], our protocol do not need
the MWs to disclose their location attributes or privacy to
the SP for secret key generation. Moreover, using a simple
binary search, our proposed location key-based generation can
generate a secret key for multiple MWs in a range area. The
comprehensive location conversion details for longitude and
latitude can be referred to Algorithm 1 and Appendix B,
respectively.
Algorithm 1 Location-Based Key Generation for BSIF
Input: longmax = 180, longmin = −180, latimax =
90, latimin = −90, longMW , latiMW , i, j.
Output: sk.
1: longmed ← (longmin+longmax)
2 .
2: latimed ← (latimin+latimax)
2 .
3: for k = 1 to i do
4: if longMW ≤ longmed then
5: longmin ← longmed;
6: x← x||1.
7: else
8: longmax ← longmed;
9: x← x||0.
10: end if
11: longmed ← (longmin+longmax)
2 .
12: end for
13: for k = 1 to j do
14: if latiMW ≤ latimed then
15: latimin ← latimed;
16: y ← y||1.
17: else
18: latimax ← latimed;
19: y ← y||0.
20: end if
21: latimed ← (latimin+latimax)
2 .
22: end for
23: return sk = H(x||y).
B. Detailed Procedures
In this subsection, we present the detailed procedures of
the secure and interactive task allocation for our BSIF. In our
BSIF, firstly service requester (SR) and mobile workers (MWs)
should register in the blockchain network. After successful
registration, they will get corresponding pairs of private and
public key issued by the service provider (SP). Subsequently,
SR releases the task once the money is transferred to the smart
contract in the SP. Since the task content is encrypted, only
the MWs in the target area and with the expected reputation
can conduct the sensing task. MWs collect the surrounding
environmental data and submit them to the SP, which then
outsources encrypted sensing data to the SR for data quality
evaluation. When SP receives the data quality report from SR,
the reward will be distributed to the MWs depending on their
contribution. The details of BSIF are presented as follows:
1) The SR initiates a transaction with its address AddrSR
and a blind factor σSR to trigger the SRRegister
function defined in the smart contract through SP. Sub-
sequently, the KeyGen function of Paillier cryptosystem
is invoked to generate pkSR = (nSR, gSR) and sk∗
SR =
(λSR, μSR)⊕ σSR for SR.
2) The registration process of MW is similar to SR, where
the MWRegister function is called with MW’s address
AddrMW and its blind factor σMW . Then the pkMW =
(nMW , gMW ) and the perturbed secret key sk∗
MW =
(λMW , μMW )⊕ σMW are provided for MW.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
3458 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Fig. 3. Proposed protocol for secure and interactive task allocation in BSIF.
3) Since the pkSR and sk∗
SR are accessible in the SP,
SR can obtain corresponding pkSR and sk∗
SR from
SRRegister function in the smart contract. Then using
the known σSR, SR can restore the skSR = sk∗
SR⊕σSR
for further use.
4) MWs can execute the similar process to acquire pkMW
and sk∗
MW by calling MWRegister function in the
smart contract.
5) The SR determines the sensing task content T
and selects a random location (longMW , latiMW ) in
the target range. Then the SR encrypts the T as
EncAES(T, LSK) with the symmetric key LSK gener-
ated by LSKenGen(longMW , latiMW ), where the full
name for EncAES(T, LSK) is the advanced encryption
standard encryption algorithm.
6) SR launches a transaction which owns AddrSR,
encrypted task content EncAES(T, LSK), precision
i, j, reputation threshold RT ∈ [0, 1] and prospective
reward M to invoke TaskRelease function in the smart
contract. Note that these communication messages are
encrypted by pkSR.
7) The SP accepts the task request as long as M > 0 and
publicizes related information.
8) The MWs who are interested in the sensing task can
download the EncAES(T, LSK), i, j, RT, pkSR and an
one-time blind factor σrandom from the smart contract.
Simultaneously, the MWs can look up their reputation
RMW to confirm the eligibility. If RMW ≤ RT ,
the MWs in the target area (i.e., (longMW1 , latiMW1 )
– (longMW1 , latiMW2 )) are qualified to decrypt task
content by computing
T = DecAES(EncAES(T, LSK), LKS�), (1)
where LSK � is derived from LSKenGen
(longMW , latiMW ) and DecAES is advanced
decryption standard decryption algorithm.
9) Each MW collects the surrounding environmental data
di such as temperature, noise intensity and pressure.
di is encrypted by modified pk∗
SR = (n∗
SR = nSR +
σrandom, gSR) as
Enc(di, pk∗
SR) = gdi
SR · σn∗
SR
random mod n∗
SR
2. (2)
The encrypted data set Enc(Enc(D, pk∗
SR), pkMW ) =
Enc(Enc(d1, pk∗
SR), pkMW1), Enc(Enc(d2, pk∗
SR),
pkMW2) . . . , Enc(Enc(di, pk∗
SR), pkMWi ) is uploaded
to the SP by calling DataUpload function defined
in the smart contract. Note that only the MW whose
reputation is over the threshold can submit the data.
Otherwise, the unauthorized operation will be informed.
10) Since the smart contract needs to filter some sensing
data submitted by the malicious MWs, a trusted MWt
is set in advance. According to the encrypted data
Enc(dt, pk∗
SR) from the MWt, the smart contract can
obtain the variance vari between trusted data and the
remaining ones by computing vari = d2
i − d2
t , where
di and dt are decrypted by pk∗
SR, respectively. Finally,
the smart contract will remove some sensing data whose
vari is large. Note that though there is a trusted MWt
can provide some reliable data, the accurate baseline
data still needs to be obtained from all the filtered data.
11) The SR obtains Enc(D, pk∗
SR)D from the smart contract
and then evaluate the quality of sensing data, whose
baseline value Enc(do, pk∗
SR)do is calculated as
arg min
Enc(do,pk∗
SR)do
�
Enc(di, pk∗
SR)di − Enc(do, pk∗
SR)do .
(3)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: BSIF: BLOCKCHAIN-BASED SECURE, INTERACTIVE, AND FAIR MCS 3459
Algorithm 2 Smart Contract Serves as the Service
Provider (SP)
Function SRRegister(AddrSR, σSR)
1: pSR, qSR ← PrimeGen(k)
2: nSR ← pSR · qSR, λSR ← lcm(pSR − 1, qSR − 1)
3: gSR ← ZSR
∗
nSR
2
4: μSR ←
�
L
�
g
λSR
SR mod n2
SR
��−1
mod nSR
5: pkSR ← (nSR, gSR), skSR ← (λSR, μSR)
6: Publish pkSR, sk∗
SR = skSR ⊕ σSR
Function MWRegister(AddrMW , σMW )
7: pMW , qMW ← PrimeGen(k)
8: nMW ← pMW · qMW , λMW ← lcm(pMW − 1, qMW − 1)
9: gMW ← ZMW
∗
nMW
2
10: μMW ←
�
L
�
g
λMW
MW mod n2
MW
��−1
mod nMW
11: pkMW ← (nMW , gMW ), skMW ← (λMW , μMW )
12: Publish pkMW , sk∗
MW = skMW ⊕ σMW
Function TaskRelease(Enc(AddrSR||EncAES(T, LSK =
LSKenGen(longMW , latiMW ))||i||j||RT ||M ||, pkSR))
13: if M ≥ 0 then
14: Dec((Enc(AddrSR||EncAES(T, LSK =
LSKenGen(longMW , latiMW ))||i||j||RT ||M,pkSR)), skSR)
15: Publish EncAES(T, LSK)||i||j||RT ||pkSR||σrandom||RMW
16: else
17: Exit
18: end if
Function DataUpload(Enc(Enc(di, pk∗
SR), pkMWi
))
19: if RMW ≥ RT then
20: Dec(Dec(Enc(Enc(di, pk∗
SR), pkMWi
), skMWi
))
21: vari = di
2 − dt
2
22: if vari is large then
23: Drop di
24: else
25: Publish Enc(Enc(D,pk∗
SR), pkSR) to SR
26: end if
27: else
28: Exit
29: end if
Function DataReport(Enc(Enc(qD, pk∗
SR), pkSR))
30: Dec(Enc(qD, pk∗
SR), skSR)
31: TransferMoney(qdi
·M )
32: Publish Enc(σrandom, pkSR)
Note that do ∈ D. Then the quality of data can be
measured as
qdi =
Enc(di, pk∗
SR)di − Enc(do, pk∗
SR)do�n
i=1(Enc(di, pk∗
SR)di − Enc(do, pk∗
SR)do)
.
(4)
The quality of each data also represent the reputation of
each MW RMW = qdi in the next turn [31]. Finally,
SR submits the encrypted quality evaluation result set
Enc(qD, pkSR) to the SP through DataReport function
in the smart contract.
12) SP distributes reward M to the corresponding MWs in
terms of their data quality, where the money each MW
can receive is determined by stackelberg game analysed
in the Section V.
13) SR obtains the one-time blind factor σrandom which
mixes its public key pkSR. Then SR can infer its new
private key as sk∗
SR = (λSR, μ∗
SR), where μ∗
SR is
calculated as
μ∗
SR = (L(gλSR
SR mod n∗
SR
2))−1
=
n∗
SR
(gλSR
SR mod n∗
SR
2)− 1
mod n∗
SR. (5)
The previous sensory data value can be restored as
di = L
�
Enc(di)λSR mod n∗
SR
2
�
· μ∗
SR mod n∗
SR
=
�
(Enc(di)λSR mod n∗
SR
2 − 1) · μ∗
SR mod n∗
SR
�
n∗
SR
.
(6)
Finally, SR obtains the result of sensing task success-
fully.
Note that all the communication messages between SR/MWs
and SP are encrypted by their public keys pkSR and pkMW ,
respectively. Fig. 3 presents the comprehensive workflow
for the above-mentioned interaction. Furthermore, the exe-
cution logic of MCS smart contract is briefly illustrated
in Algorithm 2.
V. STACKELBERG GAME-BASED FAIR
REWARD AND INCENTIVE DESIGN
A. Notation for Fair Reward and Incentive Design
As shown in Fig. 3, in our considered BSIF-based MCS
system, the mobile workers (MWs) set is denoted by M =
{1, 2, . . . , M}, where M means the number of the MWs,
and the reputation value set is S = {S1, S2, . . . , SM}. When
performing the MCS tasks, each MW participates with certain
level, which are represented by P = {P1, P2, . . . , PM},
and PM is the participant level of the m-th MW. After
finishing the MCS tasks, the service requester (SR) would
give rewards to each MW, and it can be represented by set
R = {R1, R2, . . . , RM}. Note that the reputation values of
MWs depend on the observation from SR, i.e., the calculation
of reputation is based on the degree of deviation from the per-
ception center data. Without loss of generality, the observation
error set for each MW is defined as O = {O1, O2, . . . , OM}.
For ease of presentation, the notations for the symbols used
in this section are listed in Table III.
B. Problem Formulation
To formulate the fair MCS for the MWs and the SR, the
participation level-based utility function fMWi of the i-th MW,
and the reward-based utility function fSR of SR need to be
defined, respectively. Firstly, as for the i-th MW, following
the similar baselines in [29], its utility includes four parts,
mathematically,
fMWi = Si
�
αiPi− βiP
2
i +
	j �=i
j∈M γijPiPj + RiPi− ηPi
.
(7)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
3460 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
TABLE III
NOTATIONS
where αiPi − βiP
2
i represents the private utility for per-
forming the MCS tasks of i-th MW, and αi, βi are both
positive coefficients, which can determine the intrinsic value
of the participation to different MWs with heterogeneity [29].�j �=i
j∈M γijPiPj is the mutual effect for the participation utility
among the MWs, and γij is the influence effect for j-th MW,
which results from the participation level of i-th MW. RiPi
denotes the utility obtained from the SR, and η is the cost
for each MW to perform the MCS tasks called joining cost.
Besides, the reputation value Si has the direct and positive
influence for the MW’s utility. Hence, the total utility of the
MW is the sum value of αiPi − βiP
2
i ,
�j �=i
j∈M γijPiPj , RiPi
and minus ηPi.
As far as the SR is concerned, its utility is the total utility
which produced minus the cost paid for employing the MWs.
Tthe mathematical expression is [29]:
fSR = ζ
	M
i=1
�
sPi − tP 2
i
�−	M
i=1
RiPiSiOi, (8)
where ζ is the parameter which indicates the equivalent
monetary worth of MWs’ participation level, and s, t are
the positive coefficients that represent the concavity of the
function [29].
Note that the participation strategy of the MW depends
on the reward paid from the SR, i.e., the MWs changes the
participation level after the SR adjusts the reward strategies.
Hence, the Stackelberg game model is adopted here, where the
SR acts as the leader and the MWs play the role of follower.
Especially, based on the defined utility function for MWs and
SR, the optimization goal can be expressed as follows:⎧⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩
max
Ri
fSR (Pi, Ri)
subject to : 0 ≤ Ri ≤ Ri_ max
The optimal solution : (Pi_opt, Ri)�
max
Pi
fMWi (Pi, Ri)
subject to : 0 ≤ Pi ≤ 1
. (9)
C. Detailed Strategy
In this section, the Backward Induction (BI) analysis
and Lagrange dual optimization approaches are adopted.
Specifically, we firstly derive the optimal strategy of the
follower, MWs, where the participation level-based convex
optimization issue is addressed. Then, based on the optimal
strategy of the MWs, the optimal value of the reward is also
determined by deriving the extreme value of SR’s reward
function.
1) Follower-Sub Game: Theorem 1: The optimal participa-
tion level strategy Pi_opt for the i-th MW can be determined as:
Pi_opt =
�
Pi
∗,
�
1
0,
�
2
, (10)
where Pi
∗ is defined in Eq. 35,
�
1 and
�
2 are determined
in Eq. 11 and Eq. 12, shown at the bottom of the page,
respectively.
Proof: Please refer to Appendix C.
2) Leader-Sub Game:
Theorem 2: The optimal reward strategy Ri_opt for the SR
can be determined as:
Ri_opt =
⎧⎨
⎩
Ri
∗,
�
1 ∩
�
3
0,
�
2 ∪
�
4
Ri_ max,
�
1 ∩
�
5
, (14)
where
�
3 is defined in Eq. 17, shown at the bottom of the
next page,
�
4 and
�
5 are defined in Eq. 18, and Eq. 19,
shown at the bottom of the next page, respectively.
Proof: Please refer to Appendix D.
D. Sub-Gradient Update-Based Fairness Optimization
Algorithm
In order to derive the values of the dual variable μ, following
the similar sub-gradient update method in [32], we propose
the sub-gradient update-based fairness optimization algorithm
for the considered MCS, where the dual variable and optimal
strategy for MWs and SR are determined through iterations.
As shown in Algorithm 3, during the iteration process,
we firstly update the iteration index in step 1. Then,
�
1
: Pi
∗ ∈ (0, 1) ⇔ η − αi − μ/Si −
	j �=i
j∈M γijPj < Ri < 2βi + η − αi − μ/Si −
	j �=i
j∈M γijPj , (11)
�
2
: Pi
∗ /∈ (0, 1) ⇔
�
η − αi − μ/Si −
	j �=i
j∈M γijPj ≥ Ri
�
∪
�
Ri ≥ 2βi + η − αi − μ/Si −
	j �=i
j∈M γijPj
�
, (12)
LMWi (Pi, Ri, μ) = Si
�
αiPi − βiP
2
i +
	j �=i
j∈M γijPiPj + RiPi − ηPi
− μ (Pi_ max − Pi) . (13)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: BSIF: BLOCKCHAIN-BASED SECURE, INTERACTIVE, AND FAIR MCS 3461
Algorithm 3 Sub-Gradient Update-Based Fairness Optimiza-
tion algorithm
Input: K = {0, 1, . . . , kmax}, M, P , R, S, O, αi, βi, γij ,
η, ζ, s and t.
Output: μ, Pi_opt, and Ri_opt.
Step 1) Update k = k + 1.
Step 2) Determine Pi_opt (k + 1) based on Eq. (10).
Step 3) Determine Ri_opt (k + 1) based on Eq. (14).
Step 4) Determine μ based on
μ (k + 1) =
�
μ (k)− gk
μ (Pi_ max − μ (k + 1))
�+
. (20)
Step 5) When k ≥ kmax, iterations end. Moreover, the
value of Pi_opt, and Ri_opt are returned.
in step 2–3, we determine the values for Pi_opt and Ri_opt
with Eq. 10 and Eq. 14 respectively. Next, the dual variable μ
is updated with Eq. 20. Finally, after the iterations, the optimal
strategies for participation level and reward are derived.
E. Existence and Uniqueness of SE
Theorem 3: Stackelberg Equilibrium (SE) exists for the
formulated fairness optimization problem of the MCS.
Proof: According to proof analysis for Theorem 1 and
Theorem 2, the utility functions for the MW fMWi and
fSR all are concave functions with respect to participation
degree Pi and reward Ri. Based on the conclusions in [33],
there exists SE for the fairness-oriented participation-reward
incentive design problem.
Theorem 4: For the existing SE of the fairness-oriented
participation-reward incentive design problem, it is unique.
Proof: Based on the defined utility function fMWi of
MW, it is a concave function for variable participation degree
Pi. According to the duality optimization theory, once upon
the other parameters are determined, the optimal participation
degree strategy Ri_opt is unique in the established Stackelberg
model. Besides, following the similar above analysis, the
utility function of the reward function can also prove to be
concave, so the SE Ri_opt is also unique. Therefore, for
the existing SE of the fairness-oriented participation-reward
incentive design problem, it is unique.
VI. CORRECTNESS AND SECURITY ANALYSIS
In this section, we firstly prove the correctness of our
BSIF regarding encrypted communication and data quality
evaluation processes. Then we analyze the security of task
release and allocation.
Theorem 5: SP can restore the encrypted task content
c = Enc(AddrSR||EncAES(T, LSK)||i||j||RT ||M, pkSR)
from the SR in the task release process successfully:
Proof: Since the skSR is recorded in the smart contract,
SP can decrypt the ciphertext as:
mTaskRelease
SR = L
�
gλmTaskRelease
SR · rλSRnSR
SR mod n2
SR
�
·μSR mod nSR
= λSRmTaskRelease
SR · μSR mod nSR
= λSRmTaskRelease
SR · 1
λSR
mod nSR
= AddrSR||EncAES
(T, LSK||i||j||RT ||M, pkSR). (21)
Theorem 6: Only MWs in the target area can obtain the
task content correctly:
Proof: Assume the coordinate of MWi is
{longMWi , latiMWi}, so the location-based symmetric
key can be generated as
LKS� = LSKenGen(longMW , latiMW ). (22)
Then the task content T can be decrypted if MWi in the
target area [longMW1 , latiMW1 ] – [longMW1 , latiMW2 ] as:
T = DecAES(EncAES(T, LSK), LKS�). (23)
Theorem 7: SR can decode encrypted sensing data set
Enc(Enc(D, pk∗
SR), pkSR) and an one-time blind factor
fSR (Pi_opt, Ri) =
⎧⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩
−
	M
i=1
�
ξt
4β2
i
+
SiOi
2βi
· R2
i +
	M
i=1
�
sξ − 2tξΔ
2βi
− SiOiΔ
·Ri
+
	M
i=1
ξ
�
sΔ− tΔ2
�
,
�
1
0,
�
2
,
(15)
∂fSR (Pi_opt, Ri)
∂Ri
= −2
	M
i=1
�
ξt
4β2
i
+
SiOi
2βi
·Ri +
	M
i=1
�
sξ − 2tξΔ
2βi
− SiOiΔ
= 0, (16)
�
3
: Ri
∗ ∈ (0, Ri_ max) ⇔ 0 ≤
�M
i=1
�
sμ−2tμΔ
2βi
− SiOiΔ
�
2
�M
i=1
�
μt
4β2
i
+ SiOi
2βi
� ≤ Ri_ max, (17)
�
4
: Ri
∗ ∈ (−∞, 0) ⇔
	M
i=1
�
sξ − 2tξΔ
2βi
− SiOiΔ
< 0, (18)
�
5
: Ri
∗ ∈ (Ri_ max, +∞)⇔
	M
i=1
�
sξ − 2tξΔ
2βi
− SiOiΔ
> 2Ri_ max
	M
i=1
�
ξt
4β2
i
+
SiOi
2βi
. (19)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
3462 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Enc(σrandom, pkSR) from the SP in the encrypted data
evaluation and quality report processes, respectively.
Proof: Since the proof of Theorem 7 is similar to
Theorem 5, we omit the detailed process here.
Theorem 8: The baseline value Enc(D, pkSR∗) can well
reflect the quality of sensory data set D.
Proof: Due to the homomorphic properties of the Paillier
cryptosystem, the di and do can be decrypted as:
Dec(Enc(di, pk∗
SR)di) = d2
i . (24)
Dec(Enc(do, pk∗
SR)di) = d2
o. (25)
Hence, the calculation of baseline value Enc(do, pk∗
SR) is
arg min
Enc(do,pk∗
SR)
�
Enc(di, pk∗
SR)di − Enc(do, pk∗
SR)do (26)
can be seen as
do = arg min
do
�
d2
i − d2
o, (27)
which can well represent the variance between each sensing
data di and the baseline value do.
Theorem 9: Based on the decisional composite residuosity
assumption (DCRA), our proposed BSIF is proved secure
against chosen-plaintext attacks (IND-CPA)
Proof: We model the interaction between an adversary A
and challenger C as a game to prove Theorem 9.
Attacker’s ability: A can conduct the following queries to
the C:
• Public key query Qpk: C holds a list LQpk
that consists of
tuples (pki, ski), where i is the index of the tuple. When
Qpk is called by A with input i, C firstly checks whether
the tuple (pki, ski) exist in LQkey
. If (pki, ski) already
exist, C returns corresponding pki to A. Otherwise, C
generates a new pair of {pki, ski} and adds this tuple
into the LQkey
, where pki is returned to A.
• Private key query Qsk: A inputs pki to invoke this query.
If LQkey
contains pki, the corresponding ski will be
returned to A. Otherwise, the Qpk will be called firstly.
• Encryption query QEnc: A inputs a plaintext m and pki
to the QEnc. If pki ∈ LQkey
, C will generate a ciphertext
c = gm · rn mod n2 back to A. Otherwise, the Qpk and
Qsk will be invoked firstly.
Challenge: After numerous queries, A decides to challenge
the game. A picks up two messages m1, m2 with the same
length and two public keys pk1, pk2 to the C. Note that m1 �=
m2 and pk1 �= pk2. Then according to a random bit b ∈ {0, 1},
C generates a ciphertext cb = gmb · rn, which will be sent
back to the A. Furthermore, A should also comply with the
following rules.
• A cannot conduct Qsk query with input pk1 or pk2.
• A cannot conduct QEnc query with input m1 or m2.
Guess: A guesses the result of b� based on the received cb.
If b� = b, C outputs 1 which means A wins the game. Other-
wise, C outputs 0 and A loses the game. The advantage that A
can win the game is defined as ε(n) = Pr
�
PubKeav
A,Π(n) = 1
�
,
where eav means the existence of an eavesdropper. Since the
ciphertext is calcualted as c = gm · rn mod n2, we can get
ε(n) = Pr [PubKeav
A.Π(n) = 1]
= Pr
�
Dec
�
g,
�
rg mod g2
��
= 1
�
= AdvIND−CPA
C , (28)
due to the hardness of DCRA, AdvINDCPA
C is negligible.
Hence, our proposed BSIF is secure against IND-CPA.
Theorem 10: Our proposed BSIF can prevent single-point-of-
failure attacks
Proof: In our BSIF protocol, the used blockchain tech-
nique helps us convert a centralized SP into a smart contract
which is maintained by many decentralized mining nodes
MNs. If an adversary A would like to intrude or compromise
the whole SP network, which requires him to seize more than
one half computation power in the blockchain network. Hence,
the successful attack threshold can be computed as:
HA
Ht
≥ 51%. (29)
Note that HA, Ht means A’s computation power and total
computation power, respectively. Since our protocol is planned
to be established in some open blockchain platforms such as
Ethereum or EOS, A is tough to compromise these systems at
present due to the unreachable computation power. Hence, our
proposed BSIF can mitigate single-point-of-failure attacks.
Theorem 11: Our proposed BSIF can achieve the correct-
ness and trustness of off-blockchain computation on the SR
side.
Proof: The SR takes the responsibilities
of data evaluation, which finally figure out
a encrypted baseline value Enc(do, pk∗
SR) =
arg min
Enc(do,pk∗
SR)
�
Enc(di, pk∗
SR)di − Enc(do, pk∗
SR)do within
the sensing dataset. Moreover, this optimal data is returned
back to the SP for data filtration, which means the bad
sensing data far away from the optimal data will be
excluded. Hence, the SR owns the common interest with
the SP. Once the SR provides a falsified baseline, then
the SP will give back the inaccurate sensing data which
may lead to the ultimate failure for mobile crowdsensing
task. Starting from the self-interest, the SP will provide
the correct baseline data in possible. The computation
correctness of this off-blockchian computation is ensured
by the homomorphic multiplication provided by the Paillier
Cryptosystem. Since the decryption of Enc(di, pk∗
SR)di
and Enc(do, pk∗
SR)do are Dec(Enc(di, pk∗
SR)di) = d2
i and
Dec(Enc(do, pk∗
SR)di) = d2
o, the encrypted baseline value
Enc(do, pk∗
SR) can also represent the centroid of the original
sensing data do = arg min
do
�
d2
i − d2
o. According to this
baseline, the SP can evaluate the data quality and MW
reputation as qdi = Enc(di,pk∗
SR−Enc(do,pk∗
SR)
�n
i=1(Enc(di,pk∗
SR)di−Enc(do,pk∗
SR)do )
and
RMW = qdi , respectively. In conclusion, the correctness and
trustness of this off-blockchain computation can be guaranteed
by the common interest and homomorphic multiplication,
respectively.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: BSIF: BLOCKCHAIN-BASED SECURE, INTERACTIVE, AND FAIR MCS 3463
Fig. 4. Comparison about computational overhead.
VII. SECURITY PERFORMANCE EVALUATION
In this section, we evaluate the performance of our proposed
BSIF in terms of computational/communication overhead and
security features. We implement a prototype of BSIF based
on Ganache,3 a personal Ethereum blockchain platform for
smart contract test and development. The operations of SR,
SP and MW are executed on a laptop with Intel(R) Core(TM)
i5-8250U CPU @ 1.60GHz, 8.0 GB memory and Windows
10 home operation system.
A. Computational Overhead
Regarding the computational overhead evaluation, the total
number of the time-consuming cryptographic operations is
a common metrics to measure the computational cost.
We choose two random prime numbers p, q of 256 bits and
a random 160 bit integer g of multiplicative group Z∗
n2
as our system initial parameters. The cryptographic oper-
ations that are composed of our protocol include modular
exponentiation TExp, modular multiplication TM , modular
inverse TInv, homomorphic multiplication THM , and AES
encryption/decryption TAESEnc/TAESDec . Note that com-
pared with the above mentioned cryptographic operations,
the computation cost of point addition and integer multipli-
cation can be omitted. The cryptographic operations TExp,
TM , TInv, THM , TAESEnc , and TAESDec measured in the
above-mentioned desktop are 0.010ms, 0.004ms, 0.066ms,
0.095ms, 0.017ms and 0.007 ms at the service requester
(SR) and mobile worker (MW) side. Since SR executes
three modular exponentiation operations TExp, three modular
multiplication operations TM , n homomorphic multiplication
operations THM (e.g., n depends on the number of MWs),
and one AES encryption operation TAESEnc , the total running
time for SR is 3TExp + 3TM + nTHM + TAESEnc =
(0.059 + 0.095n)ms. The number of modular exponentia-
tion operations TExp, modular multiplication operations TM
and modular inverse TInv executed by SP are six plus n,
six plus n and two, respectively. Hence, the computational
cost for SP is (6 + n)TExp + (6 + n)TM + 2TInv =
(0.216 + 0.014n)ms. The computational overhead for MW
is 2TExp + 2TM + TAESDec = (0.035n)ms due to the two
modular exponentiation operations TExp, two modular mul-
tiplication operations TM and one AES decryption operation
TAESEnc . We compare BSIF with several privacy-preserving
3https://trufflesuite.com/ganache/
MCS protocols such as P 2AE [23] and PACE [10], which
are simulated under the identical setting. Furthermore, the
number of the crytographic operations and execution time
for the above-mentioned schemes are calcualted in Table IV.
To evaluate the performance of three schemes, we assume the
number of MW is dynamically changed. Fig. 4(a) presents the
trend of computational overhead for SR with the increasing
number of users. It is clear that the time cost of our proposed
BSIF is much low even if the number of users reaches 23.
In Fig. 4(b) and Fig. 4(c), the computational cost of BSIF
is also lower than other two schemes. Hence, BSIF achieves
the least computational overhead compared with P 2AE and
PACE as shown in Fig. 4(d).
B. Communication Overhead
In our proposed BSIF, since the key generation process
requires the participant to transmit its personal information
firstly and then computes pk = (n = p · q, g), sk =
(λ = lcm(p − 1, q − 1), μ =
�
L
�
gλ mod n2
��−1 mod n),
we conclude the communication cost for registration as (n +
1)·(||m||+||g||) bits, where ||m||means the length of plaintext.
Besides, service provider (SP) exchanges the ciphertext with
service requester (SR) and mobile worker (MW) six times,
which can be calculated as (4 + 2n) · ||c||. Note that ||c||
denotes the length of ciphertext. Hence, we can conclude the
total communication cost for our scheme is 2 · (n+1)(||m||+
||g||) + (4 + 2n) · ||c||.
C. Feature Comparison
As can be seen from the Table. V, though P 2AE [23]
and PACE [10] both adopt the cryptographic primitives
(i.e., zero-knowledge proof and proxy re-encryption) to
achieve the identity authentication, encrypted task content
and worker location privacy preservation, the single-point-of-
failure (SPOF) resulted from the centralized server has not
been well addressed. In our proposed BSIF, we introduce the
blockchain-based MCS framework that combines the Paillier
Cryptosystem and location-based key generation algorithm can
achieve all the security and decentralized features mentioned
above. Regarding task allocation, BSIF and P 2AE [23] utilize
the reputation threshold and reduced-dimensionality enabled
Q-Learning to select the qualified MWs for accurate task
allocation. Moreover, the reward deposited in the SP in
advance can guarantee the reliable payment in BSIF and
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
3464 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
TABLE IV
COMPARISON FOR COMPUTATIONAL OVERHEAD
TABLE V
FEATURE COMPARISON
TABLE VI
EXPENSE FOR DIFFERENT BLOCKCHAIN EXECUTION PHASES
PACE [10]. However, P 2AE [23] and PACE [10] figure
out the reward just depending on the data variance compared
with the baseline value, which cannot motivate the activeness
of SP and SR at the utmost. BSIF designs a fair reward
and incentive mechanism by using multi-leader and multi-
follower Stackelberg. Finally, one striking feature is that
BSIF constructs an interative MCS, which offloads the data
evaluation to the SR with the aid of homomorphic multiplica-
tion feature provided by Paillier Cryptosystem. In conclusion,
our proposed BSIF achieves security, interaction and fairness
requirements compared with two recent representative MCS
work.
D. BSIF On-Chain Performance
We implement our BSIF MCS framework on the Ethereum
smart contract to evaluate the on-chain performance. Our
blockchain execution phases mainly consider three operations
(i.e., contract deployment, data collection and data evaluation),
which corresponds to the settings in previous work [15] for
comparison. Note that the gas cost in “Select” and “Submit”
phases in [15] are added as gas cost for data collection phase,
the “Commit” and “Harvest” phases in [15] are concluded
as data evaluation phase in our BSIF. As can been from
Fig. 5, though the gas cost for our contract deployment (i.e.,
1723560 gas) is nearly 2.5 times larger than the same phase
in Cai et al.’s work [15] (i.e., 686882 gas), our deployed
smart contract can be applied to various MCS tasks without
re-deployment. For the data collection and data evaluation
processes, our BSIF has remarkable advantages that the
gas cost is 71881 and 59098 gas, respectively. Due to the
zero-knowledge range proofs and off-chain data validity check
adopted in [15], the complicated interaction and computation
Fig. 5. Transaction cost for on-chain performance evaluation.
process lead to higher gas cost (i.e., 1028324 and 185678 gas)
in the corresponding phases for [15]. Hence, our BSIF can
achieve the similar functions and security guarantees with
a little lower total cost (i.e., 1854539 gas) compared with
cost (i.e., 1900884 gas) in [15]. Moreover, the gas cost also
can be converted into the USD for more direct economic
effects. As indicated by the ethereumprice,4 the gas price
equals to 1.88 ∗ 10−9 ether and 1 ether is USD. Subsequently,
we can figure out expenses for each operation in our BSIF:
contract deployment≈ 4.37 USD, data collection ≈ 0.18 USD
and data evaluation ≈ 0.15 USD. As we have mentioned
before, our deployed MCS contract can handle multiple tasks
rather than once time. For example, there are 100 MCS tasks
need to be deployed, the contract deployment takes 437 USD
and 174 USD in BSIF and [15], respectively. Finally, we can
see from Table. VI that the total expenses for BSIF (i.e.,
4.70 USD) is also lower than (i.e., 4.81 USD) in [15].
VIII. FAIRNESS PERFORMANCE EVALUATION
In this section, to evaluate the performance of the proposed
fairness-oriented algorithm, various experiments are conducted
under different parameters settings. At first, the simulation
settings and the compared baselines for the MCS are intro-
duced. Then, the correctness of the proposal is verified by the
convergence behavior of the service requester (SR) and mobile
workers (MWs). Finally, the participation level and reward
payoff are presented under different joining costs, reputation
values, and observation errors, which evaluate the effectiveness
of the proposal.
4https://ethereumprice.org/gas/
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: BSIF: BLOCKCHAIN-BASED SECURE, INTERACTIVE, AND FAIR MCS 3465
Fig. 6. Convergence behavior evaluation.
TABLE VII
SIMULATION PARAMETER SETTINGS
A. Parameter Settings and Baselines
In this subsection, we firstly set the simulation parameter
settings, which are presented in Table VII. Then, to evaluate
the performance of the proposal, following the benchmark
in [29], the baseline for MW’s reward is introduced as well.
1) Parameter Settings: The detailed parameter settings are
shown in Table VII. For ease of presentation, we set the
number of the MWs is 3, and α, β, γij all are random variables
with the normal distributions.
2) Compared Baselines: Based on [29], there are two kinds
of reward payment schemes for SR, i.e., the discriminatory
incentive mechanism and uniform incentive mechanism. To be
specific, under the discriminatory incentive mechanism, the
reward paid by the SR to different MWs are different, while for
uniform incentive mechanism, all MWs gain the same reward
after participating the MCS tasks, mathematically,
Rave
i_opt =
1
M
	M
i=1
Ri_opt, (30)
Rcus
i_opt =
Pi_opt�M
i=1 Pi_opt
·
	M
i=1
Ri_opt, (31)
where Rave
i_opt is the reward under discriminatory incentive
mechanism, and we call it the average reward. For Rcus
i_opt,
it is defined as the customized reward, which is calculated
under the uniform incentive mechanism.
B. Convergence Behavior Evaluation
Fig. 6 is the convergence behavior of Pi_opt, Rave
i_opt and
Rcus
i_opt. As shown in Fig. 6, in order to increase the utility of
the MW, the participation level of the MW increases. At this
time, the SR chooses to decrease the reward paid to the MWs
TABLE VIII
REPUTATION VALUES SETTINGS
to maximize its utility. On the contrary, if the reward obtained
by the MW is always decreasing, the MW would refuse to
perform the MCS tasks, and the SR needs to adjust the reward
value to ensure the achievement of the tasks. In general, when
the number of iteration increases, the value of Pi_opt, Rave
i_opt
and Rcus
i_opt are converged gradually. Hence, the correctness of
the proposed algorithm is verified, and the proposed scheme
is feasible.
C. Performance Under Different Joining Costs
Fig. 7 is the proposal’s performance under different join-
ing costs. As shown in Fig. 7(a), when the values of the
joining cost decrease, the MW would choose to participate
in the MCS tasks more actively, which aims to maintain
its own utility fMWi . In Fig. 7(b) and Fig. 7(c), the SR
also decreases the reward paid to the MWs with the value
of joining cost decreasing. Further speaking, the detailed
reasons are shown in Fig. 7(d)–Fig. 7(e), if the value of
the joining cost decreases, the utility for the MW will
decrease. According to Eq. 13, in order to maximize the
MW’s own utility, the MW should enhance its participation
level. At this time, based on Eq. 15, the SR can decrease
the reward which is paid to the MWs to maximize its
own utility. In addition, Fig. 7(f) also indicates that the
proposed approach, which is equal to the average incentive
mechanism, is more effective than the customized incentive
mechanism.
D. Performance Under Different Reputation Values
In this subsection, 6 different kinds of reputation values are
considered, which are defined in Table VIII.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
3466 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
Fig. 7. Performance under different joining costs.
Fig. 8. Performance under different reputation values.
Fig. 8 is the proposal’s performance under different reputa-
tion values. As can be seen from Fig. 8(a), when the reputation
values decrease, the participant level increases. For Fig. 8(b)
and Fig. 8(c), the SR also decreases the reward when the
value of reputation decreases. The reasons are presented in
Fig. 8(d)–Fig. 8(f), when the value of the reputation decreases,
the utility for the MW will decrease. Based on Eq. 13,
to maximize the utility fMWi , the MW should increase the
participation level. Besides, according to Eq. 15, the SR needs
to decrease the reward for maximizing its own utility. At last,
under different reputation values, Fig. 8(f) evaluates that the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: BSIF: BLOCKCHAIN-BASED SECURE, INTERACTIVE, AND FAIR MCS 3467
Fig. 9. Performance under different observation errors.
TABLE IX
OBSERVATION ERROR CASES AND VALUES
proposed approach can achieve better performance and higher
utility than the customized incentive mechanism.
E. Performance Under Different Observation Errors
In this subsection, 6 different kinds of observation errors
are considered, which are defined in Table IX.
Fig. 9 is the proposal’s performance under different obser-
vation errors. As shown in Fig. 9(a), if the values of the
observation errors decreases, the MW cannot adjust the par-
ticipation level, which focuses on maintaining its own utility
fMWi . For Fig. 9(b) and Fig. 9(c), the SR would increase the
reward when the value of observation errors decreases. To be
specific, the reasons are shown in Fig. 9(d)–Fig. 9(f), when
the value of the observation errors decreases, the utility for
the MW will increase. By Eq. 13, to maximize the utility
fMWi , the MW does not need to change the participation
level. Hence, according to Eq. 15, the SR would increase the
reward for maximizing its own utility. Besides, under different
observation errors, Fig. 9(f) also evaluates that the proposed
approach is more effective than the customized incentive
mechanism.
IX. CONCLUSION
In this paper, we propose a blockchain-based secure, inter-
active and fair MCS framework called BSIF, which is able to
solve the over-centralized server issue and privacy-preserve the
task allocation process with the aid of decentralized ledge tech-
nique and Paillier Cryptosystem. Moreover, the location-based
key generator is utilized to select mobile workers (MWs) in the
target area without coordinate privacy leakage. Unlike other
blockchain-based MCS frameworks, BSIF transfers data evalu-
ation process to the service requester (SR)’s side, which means
to alleviate the pressure and excessive cost from blockchain
platform. The economic effective cost is also considered here,
so we introduce the Stackelberg game to find the balance
between participant level of MWs and fair reward for the SR.
Finally, we also illustrate the security and efficiency of BSIF
through theoretical analysis and experiment evaluation.
APPENDIX A
The comprehensive procedures for Location-based Key
Generation are presented as follows:
1) Key Generation (KeyGen): Let p, q be two large primes
which are selected from a security parameter k. The
modulus of the cryptosystem n and the first part of secret
key sk are calculated as n = p · q and λ = lcm(p− 1,
q − 1), respectively. Note that lcm stands for least
common multiple. Subsequently, this algorithm selects
a random integer g as the generator for multiplica-
tive group Z∗
n2 . Finally, the last part of sk can be
computed as μ =
�
L
�
gλ mod n2
��−1 mod n, where
L(x) = x−1
n . The generated public key pk is (n, g)
and sk is (λ, μ).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
3468 IEEE JOURNAL ON SELECTED AREAS IN COMMUNICATIONS, VOL. 40, NO. 12, DECEMBER 2022
TABLE X
EXAMPLE FOR LONGITUDE CONVERSION
2) Encryption (Enc): Input a message m, pk = (n, g) and
a random number r, where 0 ≤ m < n and 0 < r < n.
Then, the encrypted message c can be calculated c =
gm · rn mod n2.
3) Decryption (Dec): Given the c and sk = (λ, μ), the
message can be decoded as m = L
�
cλ mod n2
�·μ mod
n.
4) Homomorphic Multiplication (HM): Due to the
homomorphic properties of Paillier Cryptosystem,
a ciphertext raised to the power of a plaintext can be
decrypted to the sum of their corresponding plaintexts:
Dec(Enc(m1, pk)m2 mod n) = m1m2 mod n.
APPENDIX B
The computation process for Location-based Key Genera-
tion are illustrated as follows:
1) Longitude Conversion: (LongCon): Firstly, input the
maximum and minimum longitude (i.e., longmax and
longmin) for the MW such as 180 and -180. Then
calculate the median latitude longmed for the MW.
Note that the longmed for the MW is 0 at the initial
iteration. Assume the target longitude for the MW is
longMW . If longMW > longmid, the bit result is set
as 1. longmin and longmid are replaced by longmid
and (longmin+longmax)
2 in sequence for the next turn.
Otherwise, the bit result x is set as 0. longmax and
longmid are updated to longmid and (longmin+longmax)
2
in order. By repeating this process, the latitude can be
converted to a series of bit sequence with i precision.
For example, assume the longitude area for the sensing
task is [32.0000000, 32.0900000], we can obtain x =
100101101100 as shown in Table X, whose i is 11. Note
that SR can set the required precision at the beginning.
2) Latitude Conversion: (LatiCon): The latitude conver-
sion is similar to the above-mentioned LongCon. If the
input longitude area for the sensing task is [52.5100000,
52.5180000], we can obtain y = 11001010101, whose
precision j is 11.
3) Symmetric Key Generation: (SKeyGen): Calculate
the hash value of x and y as a location-based secret
key LSK = H(x||y), where H(·) is a hash function
with 256 bits.
APPENDIX C
For the defined participation level-based utility function
fMWi , its concavity or convexity are determined by the
positive or negative of the second derivation. Mathematically,
∂2fMWi
∂Pi
2 = −2Siβi < 0. (32)
Since the value of second derivation of fSR is less than 0,
the utility function fMWi is concave. At this time, the
convex optimization approach, Lagrange dual optimization,
is adopted. To be specific, based on the dual variable μ, the
Lagrange function LMWi is denoted as Eq. 13.
At this time, the optimization problem can be rewritten as
follows:
D (μ) = max
Pi
LMWi (Pi, Ri, μ) , (33)
where the dual problem is d∗ = min
μ>0
D (μ).
Based on the Karush-Kuhn-Tucker (KKT) conditions [34],
we let
∂LMWi
∂Pi
= 0, i.e.,
∂LMWi
∂Pi
= Si
�
αi − 2βiPi +
	j �=i
j∈M γijPj + Ri − η
+μ = 0. (34)
Then we can get the participation level strategy Pi
∗ of the
i-th MW, which is expressed as:
Pi
∗ =
αi +
�j �=i
j∈M γijPj + Ri − η + μ/Si
2βi
=
αi
2βi
+ Δ,
(35)
where Δ is denoted as Eq. 36 for ease of presentation.
Δ =
�j �=i
j∈M γijPj + Ri − η + μ/Si
2βi
. (36)
Based on the above analysis, we can obtain the optimal
value of the participation level strategy Pi_opt. To be specific,
in case
�
1, Pi
∗ ∈ (0, 1) is ensured, and Pi_opt = Pi
∗,
otherwise, Pi_opt = 0 in case
�
2.
APPENDIX D
As shown in Eq. 9, when determining the value of Ri_opt,
the value of the Pi_opt should be brought at first, and the
expression of fSR (Pi_opt, Ri) is presented in Eq. 15.
Note that the value of the second derivation for fSR is less
than 0, i.e.,
∂2fSR (Pi_opt, Ri)
∂Ri
2 = −2
	M
i=1
�
ξt
4β2
i
+
SiOi
2βi
< 0. (37)
At this time, based on [29], the reward paid by the SR can
be solved by letting ∂fSR(Pi_opt,Ri)
∂Ri
= 0, which is expressed
in Eq. 16.
Hence, the mathematical expression of reward Ri
∗ is
Ri
∗ =
�M
i=1
�
sμ−2tμΔ
2βi
− SiOiΔ
�
2
�M
i=1
�
μt
4β2
i
+ SiOi
2βi
� . (38)
Based on the above derivation, the optimal value Ri_opt is
determined under three following cases:
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: BSIF: BLOCKCHAIN-BASED SECURE, INTERACTIVE, AND FAIR MCS 3469
1) case 1:
�
1 ∩
�
3. Under this circumstance, the value of
Pi_opt is Pi
∗. Besides, owing to the range value of Ri
∗
is within (0, Ri_ max). Hence, the optimal value Ri_opt
can be obtained at Ri
∗.
2) case 2:
�
2 ∪
�
4. In this case, the value of Pi_opt is 0.
At this time, taking Pi_opt = 0 into Eq. 15, the optimal
value Ri_opt is 0.
3) case 3:
�
1 ∩
�
5. In this situation, on the one hand, the
value of Pi_opt is Pi
∗. On the other hand, the range value
of Ri
∗ is within (Ri_ max, +∞). And the optimal value
Ri_opt can be obtained at Ri_ max. Therefore, according
to the above analysis, the optimal reward strategy Ri_opt
can be determined with Eq. 14.
REFERENCES
[1] R. K. Ganti, F. Ye, and H. Lei, “Mobile crowdsensing: Current state and
future challenges,” IEEE Commun. Mag., vol. 49, no. 11, pp. 32–39,
Nov. 2011.
[2] K. B. Letaief, W. Chen, Y. Shi, J. Zhang, and Y. A. Zhang, “The roadmap
to 6G: AI empowered wireless networks,” IEEE Commun. Mag., vol. 57,
no. 8, pp. 84–90, Aug. 2019.
[3] M. Li, L. Zhu, and X. Lin, “Privacy-preserving traffic monitoring with
false report filtering via fog-assisted vehicular crowdsensing,” IEEE
Trans. Serv. Comput., vol. 14, no. 6, pp. 1902–1913, Nov. 2021.
[4] E. Wang, Y. Yang, J. Wu, K. Lou, D. Luan, and H. Wang, “User recruit-
ment system for efficient photo collection in mobile crowdsensing,”
IEEE Trans. Human-Mach. Syst., vol. 50, no. 1, pp. 1–12, Feb. 2020.
[5] X. Yan et al., “Verifiable, reliable, and privacy-preserving data aggre-
gation in fog-assisted mobile crowdsensing,” IEEE Internet Things J.,
vol. 8, no. 18, pp. 14127–14140, Sep. 2021.
[6] Z. Ning et al., “Blockchain-enabled intelligent transportation systems:
A distributed crowdsensing framework,” IEEE Trans. Mobile Comput.,
early access, May 13, 2021, doi: 10.1109/TMC.2021.3079984.
[7] Y. Hui et al., “BCC: Blockchain-based collaborative crowdsensing in
autonomous vehicular networks,” IEEE Internet Things J., vol. 9, no. 6,
pp. 4518–4532, Mar. 2022.
[8] Q. Hu, Z. Wang, M. Xu, and X. Cheng, “Blockchain and federated edge
learning for privacy-preserving mobile crowdsensing,” IEEE Internet
Things J., early access, Nov. 16, 2021, doi: 10.1109/JIOT.2021.3128155.
[9] F. Khan, A. U. Rehman, J. Zheng, M. A. Jan, and M. Alam, “Mobile
crowdsensing: A survey on privacy-preservation, task management,
assignment models, and incentives mechanisms,” Future Gener. Comput.
Syst., vol. 100, pp. 456–472, Nov. 2019.
[10] B. Zhao, S. Tang, X. Liu, and X. Zhang, “PACE: Privacy-preserving
and quality-aware incentive mechanism for mobile crowdsensing,” IEEE
Trans. Mobile Comput., vol. 20, no. 5, pp. 1924–1939, May 2021.
[11] A. Singla and A. Krause, “Truthful incentives in crowdsourcing tasks
using regret minimization mechanisms,” in Proc. 22nd Int. Conf. World
Wide Web, 2013, pp. 1167–1178.
[12] J. Huang et al., “Blockchain-based mobile crowd sensing in industrial
systems,” IEEE Trans. Ind. Informat., vol. 16, no. 10, pp. 6553–6563,
Oct. 2020.
[13] J. Hu, K. Yang, K. Wang, and K. Zhang, “A blockchain-based reward
mechanism for mobile crowdsensing,” IEEE Trans. Computat. Social
Syst., vol. 7, no. 1, pp. 178–191, Feb. 2020.
[14] M. Kadadha, H. Otrok, R. Mizouni, S. Singh, and A. Ouali, “Sensechain:
A blockchain-based crowdsensing framework for multiple requesters and
multiple workers,” Future Gener. Comput. Syst., vol. 105, pp. 650–664,
2020.
[15] C. Cai, Y. Zheng, Y. Du, Z. Qin, and C. Wang, “Towards private,
robust, and verifiable crowdsensing systems via public blockchains,”
IEEE Trans. Depend. Sec. Comput., vol. 18, no. 4, pp. 1893–1907,
Jul./Aug. 2019.
[16] H. Duan, Y. Zheng, Y. Du, A. Zhou, C. Wang, and M. H. Au,
“Aggregating crowd wisdom via blockchain: A private, correct, and
robust realization,” in Proc. IEEE Int. Conf. Pervasive Comput. Commun.
(PerCom, Mar. 2019, pp. 1–10.
[17] Y. Liang, Y. Li, and B.-S. Shin, “FairCs—Blockchain-based fair crowd-
sensing scheme using trusted execution environment,” Sensors, vol. 20,
no. 11, p. 3172, Jun. 2020.
[18] M. H. U. Rehman, K. Salah, E. Damiani, and D. Svetinovic, “Towards
blockchain-based reputation-aware federated learning,” in Proc. IEEE
Conf. Comput. Commun. Workshops (INFOCOM WKSHPS), Jul. 2020,
pp. 183–188.
[19] K. Toyoda, J. Zhao, A. N. S. Zhang, and P. T. Mathiopoulos,
“Blockchain-enabled federated learning with mechanism design,” IEEE
Access, vol. 8, pp. 219744–219756, 2020.
[20] L. Pournajaf, L. Xiong, V. Sunderam, and S. Goryczka, “Spatial task
assignment for crowd sensing with cloaked locations,” in Proc. IEEE
15th Int. Conf. Mobile Data Manage., vol. 1, Jul. 2014, pp. 73–82.
[21] X. Wang, Z. Liu, X. Tian, X. Gan, Y. Guan, and X. Wang, “Incentivizing
crowdsensing with location-privacy preserving,” IEEE Trans. Wireless
Commun., vol. 16, no. 10, pp. 6940–6952, Oct. 2017.
[22] Y. Zhang and C. L. P. Chen, “Secure heterogeneous data deduplication
via fog-assisted mobile crowdsensing in 5G-enabled IIoT,” IEEE Trans.
Ind. Informat., vol. 18, no. 4, pp. 2849–2857, Apr. 2022.
[23] Y. Jiang, K. Zhang, Y. Qian, and L. Zhou, “P2AE: Preserving privacy,
accuracy, and efficiency in location-dependent mobile crowdsensing,”
IEEE Trans. Mobile Comput., early access, Sep. 14, 2021, doi:
10.1109/TMC.2021.3112394.
[24] J. Nie, J. Luo, Z. Xiong, D. Niyato, P. Wang, and H. V. Poor, “A multi-
leader multi-follower game-based analysis for incentive mechanisms in
socially-aware mobile crowdsensing,” IEEE Trans. Wireless Commun.,
vol. 20, no. 3, pp. 1457–1471, Mar. 2021.
[25] L. Xiao, T. Chen, C. Xie, H. Dai, and V. Poor, “Mobile crowdsensing
games in vehicular networks,” IEEE Trans. Veh. Technol., vol. 67, no. 2,
pp. 1535–1545, Feb. 2017.
[26] H. Tembine, “CrowdSensing games,” in Proc. 29th Chin. Control Decis.
Conf. (CCDC), May 2017, pp. 4660–4665.
[27] H. Gao, H. Xu, L. Zhang, and X. Zhou, “A differential game model
for data utility and privacy-preserving in mobile crowdsensing,” IEEE
Access, vol. 7, pp. 128526–128533, 2019.
[28] B. Cao, S. Xia, J. Han, and Y. Li, “A distributed game methodology
for crowdsensing in uncertain wireless scenario,” IEEE Trans. Mobile
Comput., vol. 19, no. 1, pp. 15–28, Jan. 2020.
[29] J. Nie, J. Luo, Z. Xiong, D. Niyato, and P. Wang, “A Stackelberg game
approach toward socially-aware incentive mechanisms for mobile crowd-
sensing,” IEEE Trans. Wireless Commun., vol. 18, no. 1, pp. 724–738,
Jan. 2018.
[30] I. Denisow, S. Zickau, F. Beierle, and A. Küpper, “Dynamic loca-
tion information in attribute-based encryption schemes,” in Proc. 9th
Int. Conf. Next Gener. Mobile Appl., Services Technol., Sep. 2015,
pp. 240–247.
[31] Y. Yu, L. Guo, X. Wang, and C. Liu, “Routing security scheme based on
reputation evaluation in hierarchical ad hoc networks,” Comput. Netw.,
vol. 54, no. 9, pp. 1460–1469, Jun. 2010.
[32] G. Ding, Q. Wu, and J. Wang, “Sensing confidence level-based joint
spectrum and power allocation in cognitive radio networks,” Wireless
Pers. Commun., vol. 72, no. 1, pp. 283–298, Jan. 2013.
[33] J. B. Rosen, “Existence and uniqueness of equilibrium points for concave
n-person games,” Econometrica: J. Econ. Soc., pp. 520–534, 1965.
[34] S. Boyd, S. P. Boyd, and L. Vandenberghe, Convex Optimization.
Cambridge, U.K.: Cambridge Univ. Press, 2004.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:01:35 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/TMC.2021.3079984
http://dx.doi.org/10.1109/JIOT.2021.3128155
http://dx.doi.org/10.1109/TMC.2021.3112394
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Black & White)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Tags
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 524288
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments true
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /AdobeArabic-Bold
    /AdobeArabic-BoldItalic
    /AdobeArabic-Italic
    /AdobeArabic-Regular
    /AdobeHebrew-Bold
    /AdobeHebrew-BoldItalic
    /AdobeHebrew-Italic
    /AdobeHebrew-Regular
    /AdobeHeitiStd-Regular
    /AdobeMingStd-Light
    /AdobeMyungjoStd-Medium
    /AdobePiStd
    /AdobeSansMM
    /AdobeSerifMM
    /AdobeSongStd-Light
    /AdobeThai-Bold
    /AdobeThai-BoldItalic
    /AdobeThai-Italic
    /AdobeThai-Regular
    /ArborText
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /BellGothicStd-Black
    /BellGothicStd-Bold
    /BellGothicStd-Light
    /ComicSansMS
    /ComicSansMS-Bold
    /Courier
    /Courier-Bold
    /Courier-BoldOblique
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /Courier-Oblique
    /CourierStd
    /CourierStd-Bold
    /CourierStd-BoldOblique
    /CourierStd-Oblique
    /EstrangeloEdessa
    /EuroSig
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Helvetica
    /Helvetica-Bold
    /Helvetica-BoldOblique
    /Helvetica-Oblique
    /Impact
    /KozGoPr6N-Medium
    /KozGoProVI-Medium
    /KozMinPr6N-Regular
    /KozMinProVI-Regular
    /Latha
    /LetterGothicStd
    /LetterGothicStd-Bold
    /LetterGothicStd-BoldSlanted
    /LetterGothicStd-Slanted
    /LucidaConsole
    /LucidaSans-Typewriter
    /LucidaSans-TypewriterBold
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MinionPro-Bold
    /MinionPro-BoldIt
    /MinionPro-It
    /MinionPro-Regular
    /MinionPro-Semibold
    /MinionPro-SemiboldIt
    /MVBoli
    /MyriadPro-Black
    /MyriadPro-BlackIt
    /MyriadPro-Bold
    /MyriadPro-BoldIt
    /MyriadPro-It
    /MyriadPro-Light
    /MyriadPro-LightIt
    /MyriadPro-Regular
    /MyriadPro-Semibold
    /MyriadPro-SemiboldIt
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /Symbol
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Webdings
    /Wingdings-Regular
    /ZapfDingbats
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 600
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 600
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 300
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 900
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.33333
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /Unknown
  /CreateJDFFile false
  /Description <<
    /ENU ()
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice