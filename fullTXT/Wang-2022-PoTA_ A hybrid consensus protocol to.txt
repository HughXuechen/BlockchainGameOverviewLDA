PoTA: A hybrid consensus protocol to avoid miners’ collusion for BaaS platform
Vol.:(0123456789)1 3
https://doi.org/10.1007/s12083-022-01337-0
PoTA: A hybrid consensus protocol to avoid miners’ collusion for BaaS 
platform
Kaiyu Wang1 · Zhiying Tu1 · Zhenzhou Ji1 
Received: 24 December 2021 / Accepted: 11 May 2022 
© The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature 2022
Abstract
The emergence of the blockchain-as-a-service (BaaS) platform reduces the application barrier of blockchain technology. 
However, in BaaS, the transaction processing demand generated by BaaS users is continuous isolating from the transaction 
processing capability that comes from blockchain miner community. This results in the phenomenon that miner community 
spontaneously reduces the transaction processing capacity to obtain higher revenue, which is called the miners’ collusion. 
The BaaS platform requires a new consensus protocol that prevent the miners’ collusion while remain the security and 
immutability of blockchain. Based on this challenge, in this article, we propose a hybrid consensus protocol for BaaS called 
the Proof-of-Transaction Amount (PoTA). First, we theoretically analyze and formally define the miners’ collusion. The 
existence of Nash-equilibrium collusion strategy has been proven. Second, the calculation method of the miner’s effective 
collusion strategy space is provided to help determine whether the BaaS is facing the threat of collusion. Third, by organizing 
a transaction packaging committee (TPC) based on transaction amount, PoTA successfully avoids single-identity miners 
who have greater effective collusion strategy space obtaining the authority of transaction packaging. In the meanwhile, we 
redefine the reference relationship of blocks to enable cross-verification of PoW and PoS consensus. Finally, we prove our 
protocol can effectively avoid the occurrence of the miners’ collusion. Control experiments prove the outperforms security 
and performance of PoTA in the comparison with PoW, PoS and other hybrid protocols.
Keywords Blockchain-as-a-Service · Miners’ collusion · Game theory · Consensus protocol
1 Introduction
Blockchain technology is being widely used in scenarios 
that were originally difficult to reach services due to data 
synchronization difficulties and trust absence between users. 
However, deploying and maintaining a complete blockchain 
node or even an entire chain requires expensive cost. As 
a result, Blockchain-as-a-service (BaaS) platform [1] has 
been proposed to solve these problems and improve the 
productivity of blockchain technology. The BaaS platform 
is intended for users to develop, deploy, host, manage and 
maintain their blockchain nodes, decentralized applications 
and smart contracts on the blockchain in a cloud environ-
ment. The emergence of BaaS platform significantly lowers 
the application barrier of blockchain, and enables more users 
to receive decentralized services with a relatively cheaper 
cost. Compared to traditional blockchain system, this also 
makes the transaction processing demand come not just from 
blockchain miners, but more from BaaS users. Blockchain 
miners, as direct participants in the consensus provide and 
monopolize the transaction processing capability.
According to the theory of microeconomics [2], when 
the supply side is in a monopoly state, the price of a com-
modity is negatively related to the supply quantity. With 
the isolation of transaction processing demand and capabil-
ity, the miner community have the ability to optimize their 
revenue through manipulating the transaction processing to 
Zhiying Tu and Zhenzhou Ji are authors contributed equally to this 
work.
 * Zhenzhou Ji 
 jizhenzhou@hit.edu.cn
 Kaiyu Wang 
 wang_kaiyu2103@126.com
 Zhiying Tu 
 tzy_hit@hit.edu.cn
1 Department of Computer Science and Technology, 
Harbin Institute of Technology, Xidazhi Street No.92, 
Harbin 150001, Heilongjiang, China
/ Published online: 10 June 2022
Peer-to-Peer Networking and Applications (2022) 15:2037–2056
http://orcid.org/0000-0001-6686-3819
http://crossmark.crossref.org/dialog/?doi=10.1007/s12083-022-01337-0&domain=pdf
1 3
force BaaS users bidding higher price for their transactions. 
In other words, the miner community may be able to receive 
higher revenue by colluding with together to reduce the sup-
ply of transaction processing to force BaaS users raise their 
bids for transactions. In this article, we call this phenomenon 
the miners’ collusion.
As a widely used blockchain system and infrastructure of 
many BaaS platforms, we use the Ethereum as an example 
to introduce the miners’ collusion. In Fig. 1, we collect the 
block utilization rate [3], average transaction fee [4], and 
average gas fee per block [5] between 01.2021 and 10.2021. 
With the decreasing block utilization, the declining trans-
action processing supply forces users to keep raising bids 
on transaction fees. By reducing the transaction processing 
supply, the highest transaction fees per block is manipulated 
to the highest value in the last 10 months. Therefore, it is 
reasonable to believe that the miner community will sponta-
neously collude to reduce the whole blockchain’s transaction 
handling capacity to obtain a higher revenue. In addition, the 
miner’s collusion phenomenon may also highly likely occurs 
in other blockchain systems and BaaS platforms.
The occurrence of the miners’ collusion is because of 
the contradiction of the isolation of transaction processing 
demand and capability in BaaS, and the union of the authori-
ties of block generation and transaction packaging in cur-
rent blockchain consensus protocol. The current state-of-art 
consensus protocols are mainly a series of PoX, such as PoW 
[6] and PoS [7], which were not originally designed for BaaS 
platforms. These protocols give the miner who succeeds 
in the consensus both the block generation authority and 
transaction packaging authority. For blockchain systems, this 
design is conducive to maintain the security and immutabil-
ity due to the transaction processing demand and capacity all 
come from the miner community. However, in BaaS, current 
blockchain consensus protocols may lead to the emergence 
of miners’ collusion. Therefore, it is necessary to study a 
novel consensus protocol that is suitable for the BaaS plat-
form to avoid the miners’ collusion. For the new protocol, 
the better option is to establish a committee to exercise the 
packaging authority. With a reasonable formation of the 
committee, we can avoid miners’ collusion without sacri-
ficing the excellent features of blockchain. To achieve this 
target, 4 challenges need be addressed:
CH1: How to determine whether the BaaS platform is 
facing the threat of miners’ collusion?
CH2: How to guarantee the blockchain’s security and immu-
tability when the packaging authority is stripped from miners?
CH3: How can a committee be formed to avoid its mem-
bers from benefiting by participating in collusions?
CH4: How to avoid the security reduction due to the for-
mation of the committee?
To overcome the aforementioned four challenges in a 
decentralized way, in this paper, we propose a novel PoW-
PoS hybrid consensus protocol for BaaS platform called the 
Proof-of-Transaction Amount (PoTA) which can protect the 
BaaS platform from the threat of the miners’ collusion while 
remaining the security and immutability. To the best of our 
knowledge, this is the first such work in this literature. We 
first theoretically define and analyze the miners’ collusion 
phenomenon. The method of computing miner’s collu-
sion strategy space is provided. This will help to determine 
whether the BaaS platform is facing the threat of miners’ 
collusion. In PoTA, blocks are divided into beacon blocks 
and data blocks generated by PoW method and PoS method, 
respectively. Then, the transaction packaging committee 
(TPC) is organized to exercise the transaction packaging 
authority instead of miners. The TPC members are elected 
based on historical transaction amount contained in valid 
blocks by PoS method. Furthermore, we introduce trans-
action packaging rules that TPC members are not allowed 
to package their own transactions to avoid them benefiting 
from collusion. Finally, by redefining the block reference 
Fig. 1  Ethereum data from 2021.01-2021.10
Peer-to-Peer Networking and Applications (2022) 15:2037–20562038
1 3
relationship, PoTA achieves cross-verification of PoW and 
PoS consensus. The security and immutability features of 
blockchain are ensured. The contributions of this article are 
summarized as follows: 
1. We are the first to theoretically define and analyze the 
miners’ collusion phenomenon in which the miner com-
munity chases optimal revenue by reducing the transac-
tion processing supply of the BaaS platform.
2. We prove that the collusion strategy space exists Nash-
equilibrium strategy for miners and provide a method to 
compute the collusion strategy space. This will help to 
determine whether the BaaS platform is facing the threat 
of miners’ collusion;
3. We propose the PoTA consensus protocol for the BaaS 
platform to avoid miners’ collusion. A transaction pack-
aging committee is formed to execute the authority of 
transaction packaging while preserving the security and 
immutability of blockchain;
4. Finally, we conduct experiments to compare our protocol 
with other consensus protocols. We demonstrate that our 
protocol outperforms those consensus protocols and has 
sound performance and security.
2  Related work
2.1  Blockchain‑as‑a‑service platform
Blockchain-as-a-service is the new generation of cloud 
service. It is a fusion of blockchain technology and the 
cloud computing model. BaaS implies building, managing, 
hosting, and using various aspects of blockchain technol-
ogies on the cloud. On-premise blockchain implementa-
tion is very expensive. To deploy the infrastructure and 
maintain the performance of the blockchain, users of local 
implementation must incur significant capital expendi-
tures. BaaS provides an alternative economic approach in 
which users can enjoy full service of blockchain technol-
ogy with less investments. BaaS can manage blockchain 
consensus, forking, node validity, commodity exchange, 
and other operations while avoiding technical and resource 
costs. The structure of BaaS platform is shown in Fig 2.
BaaS Users just need to pay for the blockchain service 
provided by the BaaS platform [8]. Consequently, BaaS 
has the potential to reduce the barriers of the applica-
tion of blockchain technology and makes it accessible to 
a broader audience. The current mainstream BaaS plat-
forms are Microsoft Azure BaaS [9], Amazon AWS BaaS 
[10], IBM BaaS [11], Oracle BaaS and SAP BaaS. Since 
the BaaS platform lowers the barrier to blockchain utili-
zation, more transactions will be generated compared to 
normal blockchain systems. In addition, with the support 
of blockchain based decentralized applications (Dapps) 
[12] and smart contracts [13] deployment, the variety and 
fee of transactions increase. This means that more and 
more transactions will be generated by BaaS users rather 
than blockchain miners. The role of blockchain miners will 
gradually become more homogeneous and more responsi-
ble for the task of maintaining and operating blockcahin 
systems. The apparent isolation of transaction processing 
demand and capacity make the miner community more 
likely to benefit from collusion.
Fig. 2  Structure of BaaS 
platform
Peer-to-Peer Networking and Applications (2022) 15:2037–2056 2039
1 3
2.2  Blockchain consensus protocol
Proof of Work (PoW) [6] and Proof of Stake (PoS) [7] are 
the two most typical consensus protocols of blockchain. 
As the consensus protocol of Bitcoin, the first blockchain 
system, PoW has also been used by many other blockchain 
systems. PoW creatively ties the computing power to the 
accounting rights of blockchain to avoid Sybil attacks [14]. 
Participants in PoW compete for the accounting right by 
calculating a proper nonce that satisfies the difficulty con-
straint with SHA-256 algorithm. This process is similar to 
gold mining. Therefore, the process of PoW is called min-
ing, and participants are called miners. In the rest of this 
paper, we ignore the difference between different consen-
sus protocols and uniformly refer to the participants who 
are involved in blockchain consensus as miners. In PoW, 
the successful miner obtains the accounting right, which 
includes the authorities of block generation and packing 
transactions. Because the Merkle root of the packaged trans-
actions is needed in mining process, miners need to deter-
mine the packaged transactions before mining a new block. 
Besides, blocks are connected with each other by hash func-
tion. So, tampering a single block requires forging a whole 
chain behind it which provides the excellent immutability 
of blockchain.
PoS is an alternative consensus protocol to reduce the 
high energy consumption and consensus efficiency of PoW. 
The consensus of PoS is based on the abstraction of the PoW 
protocol. In PoW, the miner with higher computing power 
has a greater probability to successfully mine a block. The 
competition based on computing power is actually financial 
competition. Accordingly, the PoS protocol ties the success 
probability of mining to the number of tokens held by miner. 
The PoS protocol can accomplish consensus in a more effi-
cient and energy-saving manner. However, PoS is easier to 
be centralized than PoW because buying tokens has a much 
smaller cost than buying mining equipment. In the mean-
while, in the early stage of a PoS blockchain, tokens are 
more likely to be concentrated by a small number of min-
ers, which is a great break to the decentralization. The PoS 
consensus relies on voting. If a block receives a majority of 
votes, it is considered valid. This makes the cost of miner’s 
malicious behaviors under PoS protocol is relatively small, 
compared to PoW.
Recently, the hybrid consensus protocol has drawn 
attention, as it may obtain advantages from both PoW, PoS 
and other consensus protocols. Bentov et al. [15] proposed 
a hybrid consensus protocol called the Proof-of-Activity 
(PoA) that extends Bitcoin’s PoW via PoS to reduce the 
penalty of network communication and storage space. Liu 
et al. [16] proposed a fork-free and fair committee election 
protocol by combining PoW and PoS to enhance efficiency 
and applicability. Huang et al. [17] designed a PoW-PoS 
hybrid protocol implemented in the edge environment to 
enhance the security of transactions and proposed a fair 
incentive allocation mechanism for miners. Gupta et al. 
[18] proposed a PoW-PoS hybrid protocol against a 51% 
attack in a cryptocurrency system without voting and vali-
dating committees. Sun and Rajasekaran [19] proposed an 
interleaving hybrid consensus protocol for public block-
chains that improves security while maintaining fairness 
and scalability. Santos and Swan [20] discussed the meas-
urement of the complexity of different consensus proto-
cols, including the PoW-PoS hybrid protocol. The main 
research direction of consensus protocols focuses on how 
to reach consensus in a high-efficiency and low resource 
requirement way. To the best of our knowledge, we have 
not seen any formal research on avoiding security risks 
generated by the phenomenon of isolation of transaction 
processing demand and capacity in BaaS platform.
3  Miners’ collusion on BaaS
3.1  Model description
3.1.1  BaaS model
We consider a BaaS platform with a user set N =
{
n1, n2, ..., nj
}
 
and a miner community M =
{
m1,m2, ...,mi
}
 where N ≠ M . 
BaaS users generate transactions from deployed smart con-
tracts and decentralized applications for achieving services. We 
define � =
∑
n∈N �j as the BaaS transaction process demand 
and �j as the individual demand for user nj . For miner set M, 
we define P =
∑
mi∈M
pi as the total computing power of the 
blockchain, and pi is the individual computing power for miner 
mi . We normalize the total computing power of the blockchain 
as hash power with a value of 1. The normalized value of the 
individual computing power of miner mi is the proportion of 
pi in P. The hash power of miner mi is expressed as follows:
We divide the miner community into two categories, and the 
specific definitions are as follows:
Definition 1. Single-identity miner. For a miner mi , if 
he belongs to M − N  , he is a single-identity miner.
Definition 2. Dual-identity miner. For a miner mi , if 
he belongs to M ∩ N  , he is a dual-identity miner.
We use a tuple to describe a dual-identity miner, 
mi < ai, 𝜌i > . For the single-identity miner, the individual 
transaction process demand �i = 0.
(1)ai =
pi
P
,A =
∑
mi∈M
ai = 1.
Peer-to-Peer Networking and Applications (2022) 15:2037–20562040
1 3
3.1.2  Transaction supply model
According to microeconomics, the commodity price is nega-
tively linearly related to the supply quantity in the monopoly 
market [2]. Obviously, the miner community monopolizes 
transaction processing in the BaaS platform. The transaction 
processing supply is decided by the number of transactions 
packaged in blocks. We abstract the number of transactions 
contained in a block as the strategy that miners can choose, 
which we denote as s. According to [2], the function of aver-
age transaction fee Q varies with the number of transactions 
contained in a block and can be defined as:
in which C is the theoretical maximum value of the transac-
tion fee, and � represents the extent that Q(s) is affected by 
the miner’s strategy. The function is shown in Fig. 3. The 
function of average transaction fee Q is strategy-driven. We 
assume that Q has a �-round gradual cycle from one strategy 
to another with a positive variable factor � . The transaction 
fee of a collusion strategy s∗ , Q(s∗) , can be expressed in 
terms of the current strategy transaction fee Q(s) as:
in which ℚ is the price gap of strategy s∗ and s. Usually we 
set � = 0.5 , the optimal bidding value for miners, according 
to the first-price sealed-bid auction model in game theory 
[21] (the detailed derivation process is shown in Appen-
dix). To verify the correctness of Q, we collect block data 
(2)Q(s) = C − � × s
(3)Q(s∗) = Q(s) +
t=1∑
�
��−t ×ℚ
from 1500 consecutive blocks in Ethereum (from height 
12854641 to 12856140). We divide the blocks into seg-
ments according to the number of transactions contained in 
them (see Fig. 3). By averaging sampling in each segment, 
we fit the transaction fee as a function of the number of 
transactions contained in each block. The function is shown 
in Fig. 4. By performing a linear regression on the sample 
data, we have Q(s) = −3.2E(−6)s + 0.002 with a correla-
tion coefficient R2=0.8109. Thus, it can be concluded that 
the average transaction fee is a negative-linear function of 
the number of transactions per block. We define the average 
number of transactions per block from samples as miners’ 
current strategy, s = 354 . The theoretical maximum value is 
the upper bound of the miner’s strategy, smax=625. Thus the 
correctness of function Q is proved.
4  Collusion condition and miners’ effective 
strategy space
In this section, we give the formal definitions of the collu-
sion forming conditions and the miner’s strategy space space 
for the miners’ collusion. By proposing three theorems, we 
complete the proof of the existence of Nash-equilibrium 
strategies in the miners’ collusion. The evaluation method 
of whether the BaaS platform receives the threat of the min-
ers’ collusion is also provided.
4.1  Miners’ collusion condition and strategy
Since miners are in a community, if there is a strategy that 
allows them to form collusion, it must satisfy the miner’s 
principle of rationality which includes community rationality 
and individual rationality.
Definition 3. Community rationality. For a strategy that 
miners are willing to form a collusion, it must be able to 
provide higher revenue for the miner community than the 
current strategy.
Definition 4. Individual rationality. For a strategy that 
miners are willing to form a collusion, it must be able to 
provide higher revenue for each miner in the community 
than the current strategy.
Definition 5. Miner’s collusion strategy space. For 
a strategy, if it satisfies both community rationality and 
individual rationality, it can be defined as a miners’ col-
lusion strategy, which we denoted as s∗ . The collusion 
strategy space is consisted of the set of all collusion strate-
gies:� =
{
s∗
1
, s∗
2
, ..., s∗
i
, ...
}
.
Definition 6. Miner’s effective collusion strategy space. 
For a miners’ collusion strategy s∗ , if s∗ ∈ (0, �) , then s∗ is 
an effective collusion strategy. The set of effective collusion 
strategies constitutes the effective collusion strategy space 
�̂ = � ∩ (0, 𝜌).
Fig. 3  Illustration of the miners optimal revenue strategy and the 
BaaS actual demand
Peer-to-Peer Networking and Applications (2022) 15:2037–2056 2041
1 3
4.2  The existence of nash‑equilibrium strategy
According to our definition, a collusion strategy can bring 
higher revenue for both the individual miner and the miner 
community. Therefore, a collusion strategy s∗ is a Nash-
equilibrium strategy comparing with the current strategy s 
in the game of miners’ strategy selection.
Theorem 1. When � ≠ ∅ , there exists Nash-equilibrium 
strategy in �.
Proof. Since � ≠ ∅ , we assume that there exists at least 
one strategy s∗ ∈ � that satisfies miner’s principle of ration-
ality. The mining process can be seen as a multi-player 
infinitely repeated game between miners in which miners 
play each other for the accounting right. For simplicity, we 
abstract the model of miners strategy selection as a two-
player infinitely repeated game with miner mi and the rest 
of miners except mi expressed as m−i . Each player has two 
strategies, the current strategy s and the collusion strategy s∗ . 
The illustration of the two players’ game is shown in Fig 5.
We use 
√
 to represent that the miner chooses the col-
lusion strategy, and × to represent miner remains with the 
current strategy. We denote r(⋅) as the revenue of the cor-
responding strategy. In a non-collusion game, the strategy 
portfolio (
√
,
√
) will lead to the formation of collusion. In 
a collusion game, the strategy portfolios (×,×) , (×,
√
) and 
(
√
,×) will cause the break of the collusion. The expected 
revenue in one-round mining for mi and m−i with strategies 
s and s∗ can be expressed as follows:
(4)rmi
(s) = s × Q(s) × ai, rm−i
(s) = s × Q(s) × (1 − ai)
According to miner’s principle of rationality, we have 
rs∗ > rs in a collusion. In the infinitely repeated game, it is 
impossible to compare the merits of strategies by simply 
adding up revenue (both strategy s and s∗ have infinite val-
ues). Therefore, we introduce the discounting factor � = 1
/(1 + �) with � ∈ R+ which represents the discounting degree 
for revenue over time. Then, the overall revenue for miner 
mi with the current strategy in an infinitely repeated game is 
obtained as follows:
The expected revenue for miner mi that the miner community 
forms collusion in nth round is:
Regardless of the value of n, there is always ℝmi
(s∗) > ℝmi
(s) . 
Strategy s∗ is strictly better than strategy s for both mi and 
m−i . Therefore, the individual miner can always obtain a 
higher revenue with s∗.
In the extreme case when ∣ M ∣= 2 , it is obvious that both 
sides of the game obtain a higher revenue with s∗ . The strat-
egy s∗ is a Nash-equilibrium strategy. For the case that 
∣ M ∣> 2 , we can perform the subgame refinement [21]. 
Through continuously iterating the above process, the miner 
m−i can be repeatedly splitting into a individual miner and 
the miner group of the remaining miners. According to our 
definition, the collusion needs to satisfy both individual 
rationality ( mi ) and community rationality ( m−i ). Therefore, 
for each iteration, the strategy s∗ meets the requirements of 
miners’ collusion. Therefore, the whole game process can 
be subgame refined. By repeated splitting m−i , we can finally 
have ∣ m−i ∣= 1 . We successfully transfer the community 
rationality into each miner’s individual rationality, and in the 
(5)rmi
(s∗) = s × Q(s∗) × ai, rm−i
(s∗) = s × Q(s∗) × (1 − ai)
(6)ℝmi
(s) =
∞∑
t=1
�t−1rmi
(s)
(7)
ℝmi
(s∗) =
n−1∑
t=1
�t−1rmi
(s) +
n+�−1∑
t=n
{�t−1�(t−n)
(ℚ(s, s∗)) + rmi
(s)} +
∞∑
t=n+�
�t−1rmi
(s∗)
Fig. 4  Linear regression func-
tion of ETH average transaction 
fees
Fig. 5  Two players game in miners’ collusion
Peer-to-Peer Networking and Applications (2022) 15:2037–20562042
1 3
transformation process the miner’s principle rationality is 
always satisfied. Then, we successfully describe a multi-
player game in terms of an iterative two-player game. Then, 
we prove that the strategy portfolio (
√
,
√
, ...,
√
)
⏟⏞⏞⏞⏞⏞⏟⏞⏞⏞⏞⏞⏟
m
 satisfies 
miner’s principle of rationality. The strategy s∗ is a Nash-
equilibrium strategy. Hence, if � ≠ ∅ , there exists Nash 
equilibrium strategy in � . The proof is complete.
According to theorem 1, we prove the existence of the 
Nash-equilibrium strategy in � . By repeatedly removing the 
inferior strategies, we can obtain the final collusion strategy 
under the Nash-equilibrium condition.
Theorem 2. The strategy with the optimal revenue is the 
final collusion strategy under the Nash-equilibrium in �
Proof. For a collusion strategy s∗
k
 , the miner mi has expected 
revenue rs∗
k
(mi) . The miner community with strategy portfolio 
(s∗
k
, s∗
k
, ..., s∗
k
)
⏟⏞⏞⏞⏞⏟⏞⏞⏞⏞⏟
m
 has expected revenue ℝM(s
∗
k
) =
∑
mi∈M
rs∗
k
(mi) . 
Suppose there exists a strategy s∗
j
 such that rs∗
j
(mi) > rs∗
k
(mi) . 
The strategy portfolio (s∗
j
, s∗
j
, ..., s∗
j
)
⏟⏞⏞⏞⏞⏟⏞⏞⏞⏞⏟
m
 can provide expected rev-
enue ℝM(s
∗
j
) =
∑
mi∈M
rs∗
j
(mi) that is higher than ℝM(s
∗
k
) . 
Then, the miner community has the motivation to shift from 
s∗
k
 to s∗
j
 . According to the definition of Nash-equilibrium, the 
strategy that satisfies max(ℝM(s
∗)) is the Nash-equilibrium 
strategy. Therefore, we have argmax(ℝM(s
∗)) , the strategy 
with optimal revenue, as the final collusion strategy in � . The 
proof is complete.
4.3  The determination of miners’ collusion
For a BaaS platform in which M ∩ N = ∅ , � is the set of all 
s∗ that satisfy ∀mi ∈ M, rmi
(s∗) > rmi
(s) ∧ℝM(s
∗) > ℝM(s):
In equation (8), we define the optimal collusion strategy as s∗
op
 ,  
whose value isC
2�
 . The radius of � is E△ =
√
C2 + 4�(�s2 − Cs) . 
The effective collusion strategy space is �̂ = � ∩ (0, 𝜌) . For a 
dual-identity miner, participating in a collusion may lead to rev-
enue loss because his own transactions may not be processed in  
a timely manner due to the collusion. Therefore, dual-identity 
miners have a smaller or even empty effective collusion strategy 
space. We denote △rs
∗
i
 as the collusion loss for a dual identity 
miner mi < ai, 𝜌i > with collusion strategy s∗:
(8)
� = (
C
2�
−
√
C2 + 4�(�s2 − Cs),
C
2�
+
√
C2 + 4�(�s2 − Cs))
(9)
△rs
∗
i
= (1 − ai)�i[
s∗
s
× (Q(s∗) − Q(s)) +
s − s∗
s
× Q(s)]
△rs
∗
i
 contains the revenue losses due to the increased trans-
action fee and transaction processing delay. The effective 
collusion strategy �dual is the set of strategies that satisfies 
∀mi ∈ M, rmi
(s∗) −△ri > rmi
(s) ∧ℝM(s
∗) > ℝM(s) , which 
can be expanded as follows:
We use Edual
△
 to represent the radius of the dual-identity 
miner’s collusion strategy space, Edual
△
=
√
b2 − 4ac . The 
collusion strategy space for dual-identity miner mi is:
The effective collusion strategy space for dual-identity min-
ers is ̂�dual = �dual ∩ (0, 𝜌) . Obviously, ̂�dual for a dual-iden-
tity miner mi decreases with increasing �i and decreasing 
ai . For a BaaS platform with M ∩ N ≠ ∅ , we define � as the 
proportion of dual-identity miners’ hash power in the over-
all miner community, � ∈ [0, 1] . In a �-miner collusion, the 
effective collusion strategy space �̂𝜀 is the intersection of �̂ 
and ̂�dual , �̂𝜀 = �̂ ∩ ̂�dual.
Theorem 3. In an �-miners’ collusion, ̂�dual is the subset 
of �̂ , �̂ ∩ ̂�dual =
̂�dual.
Proof. According to equation (8), the single-identity miner’s 
effective strategy space �̂ is not affected by the miner’s indi-
vidual hash power ai . Hence, regardless of the value of ai , all 
single-identity miners have the same �̂ . We can consider a 
single-identity miner as a special kind of dual-identity miner 
with �i = 0 . The revenue loss △rs
∗
i
 increases monotonically 
with the increase of �i . Therefore, for the dual-identity miner 
whose �i ≠ 0 , the collusion strategy space radius is always 
smaller than the single-identity miner’s, Edual
△
< E△ . In addi-
tion, with the increase in �i , the optimal collusion strategy for 
the dual identity s∗
op
 gradually converges to s. From equation 
(11), when the �i = 0 , we have s∗
op
=
C
2�
 . With the increase in 
�i , the numerator part of s∗
op
 , −ai
C
�
s + (1 − ai)�i(2s −
C
�
) , grad-
ually increases. The denominator part, 2[−(1 − ai)�i + ais] , 
decreases. Therefore, we have ̂�dual ⊂ �̂ , �̂ ∩ ̂�dual =
̂�dual . 
Furthermore, for dual-identity miners mi and mj , if 
(10)
−(1 − ai)𝜌i + ais
s𝛽
���������������������
a
×(s∗)2 +
ai
C
𝛽
s + (1 − ai)𝜌i(
C
𝛽
− 2s)
s𝛽
�����������������������������������
b
×s∗
−
−(1 − ai)𝜌i(
C
𝛽
− s) + ais(
C
𝛽
− s)
𝛽
�����������������������������������������������
c
> 0.
(11)
�
i
dual
= (
−ai
C
�
s + (1 − ai)�i(2s −
C
�
)
2[−(1 − ai)�i + ais]
− Edual
△
,
−ai
C
�
s + (1 − ai)�i(2s −
C
�
)
2[−(1 − ai)�i + ais]
+ Edual
△
).
Peer-to-Peer Networking and Applications (2022) 15:2037–2056 2043
1 3
(ai < aj ∧ 𝜌i > 𝜌j) is true, we have ̂
�i
dual
∩
̂
�
j
dual
= ̂
�i
dual
 . The 
proof is complete.
According to theorem 3, the effective collusion strategy 
space for an �-miners’ collusion is the intersection of all 
dual-identity miners’ effective strategy space, which can be 
expressed as follows:
For a BaaS platform, when �̂M
𝜀
= ∅ , the platform has no risk 
of facing the threats of miners’ collusion. However, when 
�̂M
𝜀
≠ ∅ , the BaaS platform may suffer from miners’ collu-
sion. So far, the CH1 has been addressed.
5  The proof‑of‑transaction‑amount 
consensus protocol
5.1  Block structure
To avoid miners’ collusion in the BaaS platform, we pro-
pose the Proof-of-Transaction Amount (PoTA) consensus 
protocol, which is a PoW-PoS hybrid protocol. In PoTA, 
we introduce two types of blocks: beacon blocks gener-
ated in the PoW method and data blocks generated in the 
PoS method. The consensus process of PoTA is divided 
into epochs. Beacon blocks are responsible for protect-
ing blockchain from forking and verifying the data blocks 
of the previous epoch. Data blocks are responsible for 
containing transactions and verifying the current epoch’s 
beacon block. Each epoch contains one beacon block and 
� data blocks, where � is the number of transaction pack-
aging committee (TPC) members. An illustration of the 
PoTA consensus protocol is shown in Fig. 6.
(12)�̂M
𝜀
=
�
�̂ , ifM ∩ N = ∅;⋂
mi∈M∩N
̂
�
mi
dual
, ifM ∩ N ≠ ∅.
A new epoch begins with the generation of the beacon 
block. The miner who mines a beacon block can receive 
several tokens as the mining reward. Since we separate 
the transaction packaging authority from miners, they 
cannot mine blocks with the Merkel root of transactions 
generated in the current epoch as part of the blockhead, 
thus completing the verification of transactions and guar-
anteeing immutability as the PoW blockchain. To address 
CH2, we change the transaction validation relation of the 
PoW protocol from post-order to pre-order. Specifically, 
the beacon block in epoch t + 1 is responsible for validat-
ing data blocks in epoch t. The algorithm of beacon block 
generation is shown as follows.
The beacon block is constituted by a blockhead and 
blockbody. The blockhead contains the time stamp, diffi-
culty factor, a nonce and the Merkel root of the blockbody. 
The structure of the blockbody is the same as PoW block, 
which contains the Merkel tree consisting of verified data 
Fig. 6  The epoch in PoTA con-
sensus protocol
Peer-to-Peer Networking and Applications (2022) 15:2037–20562044
1 3
blocks’ hash in the previous epoch. The block structure of 
the beacon block is shown in Fig. 7.
Data blocks are generated after the beacon block. TPC 
members generate data blocks according to the order in 
which they were elected through the PoS protocol. Each 
member is allowed to generate one data block that contains 
unprocessed transactions. Then, the data block is broadcast 
to all BaaS users and blockchain miners to be verified by 
voting. We adopt the PoS protocol’s voting mechanism that 
uses tokens as votes. A TPC candidate or a data block should 
have a number of votes over the threshold � (the propor-
tion of all tokens),� ≥ 0.5 , to become a TPC member or a 
valid block. Data blocks in the same epoch are not refer-
enced to each other in a linear structure as in a traditional 
blockchain. Data blocks in the same epoch all reference the 
current epoch’s beacon block after verifying its validity. At 
the same time, we eliminate the post-order reference rela-
tionship in the traditional PoS blockchain. The parallelism 
between data blocks allows the beacon block to verify each 
data block independently. The blockhead of the data block 
contains the current epoch’s beacon hash, the Merkel root of 
the blockbody, and the signature of voters. The blockbody 
has the same structure as the PoW block, which contains 
the Merkel tree consisting of the packaged transactions. The 
structure of the data block is shown in Fig. 8.
5.2  Transaction packaging committee election
In PoTA, we form a transaction packaging committee (TPC) 
to package transactions instead of the miners. As analyzed in 
Sect. 4, the single-identity miner has a greater effective collusion 
strategy space than the dual-identity miner. In addition, for the 
dual-identity miner, the higher the individual transaction process 
demand is, the smaller the effective collusion strategy space he 
has. The individual transaction processing demand can influence 
the occurrence of the collusion. Besides, we believe the users’ 
demand for transaction process is continuous and obeys some 
distributions. The higher historical demand a user has, the higher 
demand he should have in the future. Therefore, we select TPC 
members according to the PoS protocol by using the product of 
users’ historical transaction amounts and corresponding transac-
tion fees as stakes from all valid blocks to prevent single-identity 
miners from being a TPC member. After the current epoch’s 
beacon block is generated, BaaS users execute the PoS proto-
cols to elect � TPC candidates. The more transaction processing 
demand a BaaS user has, the higher the probability he will be 
elected as a TPC candidate. Then, a TPC candidate becomes a 
TPC member after receiving votes over � . Each TPC member 
is authorized to generate a data block. The detailed process of 
TPC member election is shown in Fig. 9.
In phase 1, the stakes of all BaaS users are calculated based 
on local transaction records of all verified historical data 
blocks. We define the stake for user i as �i =
∑
��(1 − �)� 
in which � is the number of all historical valid transactions 
generated by user i, and � is the sum of corresponding trans-
action fees (transaction fees are paid by tokens). In addition, 
� is the weighting factor of � in the calculation of stakes.
In phase 2, the TPC member election is executed by rounds. 
In each round, one TPC candidate is elected. Then, the candi-
date is voted by all token holders. A TPC candidate becomes 
a TPC member after receiving more than � of the total votes. 
Phase 2 continues until � TPC members have been elected.
In phase 3, each TPC members generates a data block 
in the order in which the member was elected. Thus � data 
blocks are generated in phase 3. All data blocks are verified 
by all BaaS users and blockchain miners and voted by all 
token holders. The data block that receives no less than the 
threshold � fraction of the votes becomes a valid block.Fig. 7  The structure of beacon block
Peer-to-Peer Networking and Applications (2022) 15:2037–2056 2045
1 3
In phase 4, if � valid data blocks have been generated, 
the current epoch’s TPC member election is complete. Oth-
erwise, TPC members who generate the invalid data block 
will be deprived of the authority of being TPC member. In 
this case, the TPC election process will return to phase 2 
and repeats until the current epoch has � members that each 
generates a valid data block.
In the generation of data blocks, TPC members are not 
allowed to package their own transactions in their data block 
to prevent them from benefiting through participating in col-
lusion. If a TPC member generates a valid data block, he 
receives the overall transaction fees contained in it. This 
addresses CH3. The algorithms of TPC member election 
and data block verification are as follows.
5.3  Fork verification mechanism
Our hybrid consensus protocol uses the heavist chain verifi-
cation mechanism, which is similar to the GHOST protocol 
[22] and the Bitcoin-NG [23] protocol. In our protocol, only 
the beacon block has weight, which is the sum of all previ-
ous epoch’s data blocks it references and the current epoch’s 
data blocks that reference it. When there is a fork, the heavi-
est beacon block is determined to be valid. For simplicity, 
we set � = 6 in the following three figures to illustrate our 
mechanism. There are three cases in the fork verification. In 
case A, two beacon blocks are mined in the same epoch with 
different weights. The beacon block with a higher weight 
wins the competition when no invalid data block is referenced 
by it. Because the current epoch’s data blocks are verified by 
the next epoch’s beacon block, the weight generated by the 
current epoch’s data blocks’ reference will be directly added 
to the same epoch’s beacon block regardless of whether the 
data blocks are valid or not. For two or more beacon blocks 
with the same weight, the block with the smallest blockhead 
hash will be considered valid. Figure 10 illustrates the veri-
fication of beacon blocks with different weights.
In case B, more than one beacon block is mined in the same 
epoch, and some beacon blocks contain invalid data blocks. 
The beacon block that references the invalid data block will 
be directly considered to be invalid. In our protocol, miners 
verify the validity of data blocks independently of the voting 
results to prevent the collaboration of a small group of token 
holders who possess more tokens than the vote threshold. The 
data block that contains invalid transactions, conflict transac-
tions, or transactions initiated by the owner of this data block 
itself is considered to be invalid. In addition, data blocks that 
reference the invalid beacon block will not be referenced by 
the next epoch’s beacon block. Case B is illustrated in Fig. 11.
In case C, the only beacon block contains invalid data 
blocks. When there is no fork, the unique beacon block refer-
encing invalid data blocks will cause all blocks in this epoch 
to be invalid. As illustrated in Fig. 12, there is an invalid data 
block in epoch t − 1 , and the unique beacon block in epoch 
t refers to all the data blocks, including this invalid block. 
This makes the entire epoch t invalid. The beacon block 
generated in epoch t + 1 will re-verify and reference data 
blocks in epoch t − 1 . Then, we complete the deterministic 
verification of forking. This addresses the CH4.
6  Protocol analysis
6.1  Validity
In PoTA, a valid data block needs to satisfy two condi-
tions, namely, receive votes more than the threshold, and 
be referenced by the beacon block in the next epoch. Since 
Fig. 8  The structure of data block
Peer-to-Peer Networking and Applications (2022) 15:2037–20562046
1 3
the transaction fees contained in a data block belong to the 
user who generates it, each TPC member will try to prefer-
entially package transactions with higher transaction fees. 
Then, transactions with higher fees can be prioritized. In 
addition, TPC members are elected based on historical 
transaction amount in the PoS way. BaaS users who have 
higher transaction processing demand will have a greater 
probability of being elected. Because none of the members 
can package their own transactions, TPC members can 
only package as many valid transactions as they can in the 
expectation that their own transactions will be packaged 
by other members. For invalid transactions, blockchain 
miners and BaaS users verify each transaction contained in 
data blocks independently. Even if a small group of users 
holds a majority of tokens that can dominate the all voting 
in PoTA, invalid transactions still cannot be verified. Our 
protocol provides effective and relatively fair transaction 
processing for all users on the BaaS platform.
6.2  Agreement
There are three different roles in our consensus protocol: 
the BaaS user, the blockchain miner, and the TPC mem-
ber. The agreement requires all honest participants from 
three roles to achieve consensus on the same set of blocks, 
which means the blockchain will not permanently fork.
The consensus process starts with miners mining the 
beacon block. In the previous section, we propose a fork 
verification mechanism. Only one valid beacon block will 
be generated in one epoch. Therefore, the valid beacon 
block is unique in each epoch. All TPC members are 
elected based on historical transactions from valid data 
blocks through the PoS protocol. All BaaS users will have 
a global consensus TPC member list for each epoch. After 
the election, each TPC member generates a data block 
which is voted by all token holders. A unique data block 
sequence for this epoch is thus generated. Finally, the bea-
con block of the next epoch will reference all the valid data 
blocks after independent verification. Consequently, all 
honest participants from three roles are achieving agree-
ment on the block set of one epoch.
6.3  Performance
There are three phases of message exchange in one epoch: the 
broadcast of the beacon block, the voting of TPC candidates, 
and the voting of data blocks. From the perspective of commu-
nication overhead, the time complexity and the total number of 
message transmissions are computed as follows:
Phase 1. Broadcast the beacon block: The blockchain 
uses the peer-to-peer (P2P) network to transmit data. P2P net-
work transmission protocols differ across implementations. 
For example, the Gossip protocol used by Bitcoin and the 
Kademlia protocol used by Ethereum are different in terms of 
the maximum number of linked neighbors. However, when the 
network is sufficiently complex, these protocols have the same 
time complex. The beacon block is broadcast to all BaaS users 
and all blockchain miners. Therefore, the time complexity for 
broadcasting the beacon block is O(log(M ∪ N)) , and the mes-
sage will be transmitted (M ∪ N)2 times.
Phase 2. The voting of TPC candidates: The informa-
tion concerning the TPC candidates is broadcast between 
BaaS users for voting. Each epoch needs to elect at least 
� TPC candidates, and each candidate is voted on by all 
token holders. Therefore, the time complexity for Phase 2 
is O(logN), and the voting message will be transmitted �N2 
times.
Phase 3. The voting of data blocks: The message for 
voting data blocks is also broadcast between BaaS users 
and blockchain miners. Phase 3 has a time complexity of 
O(log(M ∪ N)) , and the voting message will be transmitted 
�(M ∪ N)2 times.
From the perspective of consensus efficiency, our pro-
tocol has an approximate performance of the PoS protocol, 
which is much better than the PoW protocol. We define the 
average time for miners to complete a PoW mining process 
as ���� and the time for broadcasting a message to all BaaS 
users and blockchain miners as ��� . The time for packaging 
transactions is negligible, and all blocks have the same size. 
PoW blockchains such as Bitcoin use the longest-chain veri-
fication mechanism. The ���� should be much longer than 
��� to avoid forking. The time consumption for the PoW 
protocol, PoTA protocol and PoS protocol in an epoch are 
�(���� +���) , ���� + �(���) and �(���) , respectively. 
The average time consumption for one data block for three 
protocols is ���� +��� , 
1
�
���� +��� and ��� . As � grows, 
PoTA’s consensus efficiency converges to PoS and much 
smaller than PoW.
6.4  Security
6.4.1  Avoid miners’ collusion
According to our previous analysis, single-identity min-
ers have the greatest collusion strategy space. Therefore, 
avoiding single-identity miners from obtaining the trans-
action packaging authority can effectively avoid miners’ 
collusion. In our protocol, TPC members are elected in 
the PoS way based on historical transactions. Therefore, 
single-identity miners have no chance to be elected as 
TPC members. The occurrence of miners’ collusion is 
avoided when M ∩ N = ∅ . In addition, we believe that a 
BaaS user’s transaction processing demand is continuous 
and obeys some specific distributions. The more histori-
cal transactions a BaaS user has, the larger transaction 
Peer-to-Peer Networking and Applications (2022) 15:2037–2056 2047
1 3
processing demand he will have in the future. Therefore, 
even if the TPC member elected by our protocol is a dual-
identity miner, his effective collusion strategy space is 
relatively smaller than single-identity miners. Although 
there exists a very small probability that all TPC mem-
bers are dual-identity miners and their effective collusion 
strategy space is not empty. The negative impact of the 
collusion remains far less than other blockchain consensus 
protocols. The miners’ collusion is effectively prevented.
The transaction packaging rules can further shrink the 
dual-identity miners’ strategy space. Since TPC members 
are not allowed to package their own transactions, dual-
identity miners still have nonzero collusion revenue loss 
even if they are elected into TPC. The expected collusion 
loss for dual-identity miner mi < ai, 𝜌i > with collusion 
strategy s∗ in PoTA is:
(13)△rs
∗
i
= �i[
s∗
s
× (Q(s∗) − Q(s)) + si ×
s − s∗
s
× Q(s)]
Compared to the PoW and PoS protocols, the dual-identity 
miner’s effective collusion strategy space is independent of 
ai and decreases as �i increases. In our protocol, the effective 
collusion strategy space determination condition is the same 
as Eq. (8), which can be expressed as follows:
The collusion strategy space for dual-identity miner mi < ai, 𝜌i > 
in the hybrid protocol with radius Edual
△
=
√
b2 − 4ac is:
Dual-identity miners have smaller Edual
△
 in PoTA. which 
means even if TPC members collude with each other, it is 
still difficulty to profit from the collusion. the negative 
impact of the collusion remains far less than other 
(14)
−𝛽
���
a
s∗
2
+
(s + 𝜌i)C
s
�������
b
×s∗ + 𝛽s2 − (s + 𝜌i)C
�����������������
c
> 0.
(15)�
i
dual
= (
(s + �i)C
2s�
− Edual
△
,
(s + �i)C
2s�
+ Edual
△
).
Fig. 9  The process of TPC 
member election and data block 
generation
Fig. 10  Verification of beacon 
blocks with different weights
Peer-to-Peer Networking and Applications (2022) 15:2037–20562048
1 3
blockchain consensus protocol, as dual-identity miners who 
are elected as TPC members have less collusion strategy 
space and more demanding profit conditions. Besides, TPC 
only contains � members, which is a small fraction of all 
BaaS users and blockchain miners. The collusion between 
TPC members is not satisfy the community rationality. Fur-
thermore, as we described in Sect. 3.1.2, the strategy transfer 
is a gradual process. One success collusion cannot force 
BaaS users to immediately raise their bids. For BaaS users 
and miners whose individual transaction processing demand 
is not zero, the probability of successfully elected as TPC 
members is far less than the probability of failure. Therefore, 
in terms of the expectation of probability, TPC members 
receive more negative impact from the TPC collusion than 
Fig. 11  Verification of the 
beacon block with invalid data 
blocks
Fig. 12  Verification of the 
beacon block with invalid data 
blocks
Peer-to-Peer Networking and Applications (2022) 15:2037–2056 2049
1 3
positive impact. Therefore, PoTA can effectively avoid the 
miners’ collusion no matter the TPC election results and 
whether they are colluding with each other.
6.4.2  Defend blockchain attacks
Sybil attack: The Sybil attack [14] is a typical attack on the 
blockchain. When blockchains or distributed systems rely on 
voting to achieve consensus, the Sybil attacker can create a 
large number of accounts at a very low cost to control the 
entire voting mechanism. In our protocol, voting is based on 
tokens. Both beacon blocks and data blocks require a certain 
cost to be generated. The acquisition channels of tokens are 
mining beacon blocks or buying from other users/miners or 
earning transaction fees from generating valid data blocks. 
The Sybil attacker cannot hold a large number of votes at a 
fraction of cost. Therefore, our protocol can defend against 
the Sybil attack with an overwhelming probability.
Double-spending attack: The double-spending attack 
[24] uses conflicting transactions to spend the same money 
twice or multiple times through malicious forking. There-
fore, the key to defending the double-spending attack is to 
avoid forks and properly handle conflicting transactions. 
In our protocol, we propose the fork verification mecha-
nism. Before data blocks are generated, the unique beacon 
block is determined. The blockchain always maintains a 
linear structure. Even if a malicious fork succeeds, it does 
not affect the security of BaaS because the beacon block 
contains no transactions directly. In the meantime, data 
blocks are voted on by all token holders. For an attacker 
who wants to launch a double-spending attack, he needs to 
have both considerable hash power and tokens at the same 
time. Compared with the PoW and PoS protocols, this is a 
more demanding condition, which can hardly be achieved 
in reality.
Selfish-mining attack: The selfish-mining attack [25] 
profits by withholding mined blocks and publishing them at 
an appropriate time. Especially in a zero-sum game block-
chain system, invalidating other miners’ blocks can increase 
the attacker’s hash power, which brings the attacker extra 
revenue above the expected value. Therefore, the attacker 
needs to mine a private branch for forking to complete the 
attack. However, the private branch has no advantage in our 
protocol. PoTA uses the heaviest chain verification mecha-
nism. The attacker cannot predict the hash of future data 
blocks. Therefore, the pre-mined beacon block has no weight 
to win in the fork competition. Therefore, selfish mining has 
no means to succeed in PoTA.
Other attacks: Nothing-at-stake attack [26] and the 
Long-range attack [27] are specific attacks for the PoS 
blockchain. For the nothing-at-stake attack, in PoTA, data 
blocks are serially generated in the order of TPC member 
election. There is no forking of data blocks for attackers to 
bet on both sides. In addition, blockchain miners will inde-
pendently verify data blocks in each epoch. When there are 
data blocks with conflicting transactions, they will not be 
referenced by the next epoch’s beacon block. Therefore, the 
attacker cannot launch the nothing-at-stake attack.
For the long-range attack, data blocks are finally verified 
by beacon blocks generated in the PoW protocol. There-
fore, the record of valid data blocks in each epoch cannot be 
modified unless the blockchain is forked. However, as we 
analyzed above, the beacon block is unique in each epoch. 
Therefore, the long-range attack cannot fork the blockchain 
from the genesis block to create a new chain by purchasing 
other BaaS users’ accounts and tokens.
7  Experiments
To evaluate the performance and security of our PoTA pro-
tocol, we simulate the consensus process on a server with a 
Windows 10 system with an Inter Xeon Core CPU and 128 
GB RAM and a 50 MB bandwidth internet. The blockchain 
miners and BaaS users are simulated on virtual machines 
through VMware. The hash operation of PoW protocol is 
performed by Python’s hashlib.sha256() library. The con-
sensus time has been set to obey distribution U(25, 35) 
which is similar to the Ethereum. Each block contains 200 
transactions with 2M size. The P2P network is simulated by 
the instant virtual vetwork simulator, Mininet [28]. We com-
pare our proposed protocol with the classical PoW protocol, 
ideal PoS protocol, and two PoW-PoS hybrid consensus pro-
tocols discussed as below:
The hybrid protocol proposed by Liu Z et al. [16]: Liu 
Z et al. proposed a fork-free consensus protocol based on an 
improved flexible proof-of-activity protocol. In this proto-
col, blocks are generated in rounds by a rotating committee. 
Each rotating committee is formed by the previous round’s 
committee in PoS way with the value of a weight function 
G(w, s) as stakes in which w is the miner’s hash power evalu-
ated through the number of nonces the miners submitted and 
s is the number of tokens the miner has.
The hybrid protocol proposed by Huang Y et al. [17]: 
Huang Y et al. proposed a PoW-PoS hybrid protocol for the 
Table 1  The security model of consensus protocols
Consensus Protocol Security Model
PoW 1 − P
pow
att
PoS 1 − P
pos
att
Liu’s protocol 1 − P
pow
att
Huang’s protocol min(1 − P
pow
att , 1 − P
pos
att )
PoTA (1 − P
pow
att ) × (1 − P
pos
att )
Peer-to-Peer Networking and Applications (2022) 15:2037–20562050
1 3
edge environment in which the PoW block and the PoS block 
exist in the same blockchain that is generated by different 
devices. In Huang’s protocol, the PoW block is generated 
in the classical PoW way, and the PoS block is generated 
through the minting process. Each node has a target value Ri 
that is positively related to each node’s tokens. A hit value 
hi = Hash(PoSHash(d) + Accounti) is calculated such that 
the node that first satisfies hi ≤ Ri can generate a new PoS 
block.
The abstract security model of PoTA and other protocols 
involved in the comparison experiments are listed in Table 1. 
We define Ppow
att  and Ppos
att  to present the hash power and stake 
held by attacks in PoW and PoS consensus, respectively. The 
security model represents the accuracy of consensus of listed 
protocols under attacks.
7.1  Comparison of performance
To achieve standardization, the ratio of PoS blocks and PoW 
blocks for all hybrid protocols is set as �.
Figure 13 plots the average time needed by five differ-
ent consensus protocols in successfully generating a block 
Fig. 13  Performance comparison of different consensus protocols under different �
Table 2  The consensus efficiency of PoTA under different � (ms)
Number of node � = 1 � = 5 � = 10 � = 20
1000 15997 6661 4539 3327
6000 16255 7092 5009 3819
11000 16343 7238 5168 3986
16000 16397 7328 5267 4089
21000 16436 7393 5338 4163
Peer-to-Peer Networking and Applications (2022) 15:2037–2056 2051
1 3
under different � values. Among all five protocols, the PoS 
protocol has the optimal consensus efficiency in block gen-
eration. The PoW protocol consumes the most time in block 
generation due to the mining process. For Liu’s protocol, 
the PoS method is not used to generate blocks but to select 
the next round of committee members. Hence, the average 
block generation time is close to the PoW but slightly lower 
because blocks are broadcasting only between the committee 
instead of the whole blockchain system. For the PoTA proto-
col and Huang’s protocol, the PoW block and the PoS block 
are generated alternately. As � increases, the efficiency of 
block generation of these two protocols is improved. The 
average block generation time converges towards the PoS 
protocol. The variation of consensus efficiency of PoTA is 
listed in Table 2.
The hybrid consensus method brings the PoTA excel-
lent security and greatly increases the difficulty for a sin-
gle participant or a small group to control the entire BaaS. 
Relatively, the introduction of PoW makes the consensus 
efficiency lower than the classical PoS. However, the per-
formance gap can be narrowed by setting a reasonable � . 
Besides, the miners’ collusion phenomenon can be limited 
by PoTA. With the overall consideration, PoTA has far more 
security and slightly less consensus efficiency than PoS. 
Therefore, we believe that PoTA is a more suitable consen-
sus protocol than PoS for BaaS platform.
7.2  Comparison of security
7.2.1  Security of avoiding the miners’ collusion
Figure 14 illustrates the comparison of the radius of col-
lusion strategy space for PoTA and the other four proto-
cols. The PoTA avoids single-identity miners from packag-
ing transactions. In addition, even if a dual-identity miner 
becomes a TPC member, he has very limited probability 
benefiting from the collusion because of the transaction 
packaging rule. Therefore, the consensus cost of dual-
identity miners is only related to �i . Even though some 
dual-identity miners have large ai and small �i , they cannot 
utilize their advantage in hash power to create more space 
for the collusion strategies.
7.2.2  Security of avoiding blockchain attacks
In Fig. 15, we simulate the accuracy of consensus for five dif-
ferent consensus protocols under PoW and PoS types attacks 
in dynamic situations. The voting threshold � is set to be 2/3. 
The attack in the PoW type is tested on the classical PoW, Liu’s 
protocol, Huang’s protocol, and PoTA protocol, in which the 
attacker only has hash power but no stakes. The PoS type attack 
is tested on the ideal PoS protocol, Huang’s protocol, and PoTA 
in which the attacker only has stakes but no hash power.
Fig. 14  The comparison of radius of collusion strategy space between the PoTA and other protocols
Peer-to-Peer Networking and Applications (2022) 15:2037–20562052
1 3
For blocks in Liu’s protocol and PoW blocks in Huang’s 
protocol, the mining process is the same as the classical 
PoW. Liu’s protocol only applies the PoS method in the 
committee member election for the improvement of the 
variance of miners’ revenue. In Huang’s protocol, there is 
no cross-verification of PoW and PoS consensus. It has the 
same security model as PoW. Therefore, these three proto-
cols have the same accuracy of consensus under the same 
level of PoW attack. In PoTA, the beacon block is mined 
by PoW way but verified by TPC members instead of other 
blockchain miners. For an attacker who wants to validate his 
beacon block, he must have a certain amount of hash power 
along with a certain amount of tokens. The single PoW type 
attack cannot launch a successful attack in PoTA.
We use the Shapley-Shubik Power Index [29] to evaluate 
the impact of the attacker with stakes on voting. The influ-
ence of the attack on consensus accuracy in the PoS method 
is calculated based on this index. The accuracy of consensus 
for the ideal PoS protocol and Huang’s protocol decreases 
with increasing attacker stake proportion. When the attacker 
holds over 2/3 of all stakes, the consensus accuracy becomes 
0 because the attacker dominates the whole blockchain. In 
PoTA, data blocks are generated in the PoS way but veri-
fied by the next epoch’s beacon block. Therefore, even if 
the attacker can obtain his data block more votes than the 
threshold, this block will still not be referenced. The single 
PoS type attack also cannot succeed in PoTA.
Figure 16 plots the consensus accuracy for five protocols 
when the attacker holds both the hash power and stakes in a 
dynamic situation. The classical PoW and Liu’s protocol’s 
accuracy is only related to the hash power. The accuracy rate 
decreases with increasing hash power until it reaches 0 when 
the attacker controls 0.5 hash power. The attacker dominates 
the entire blockchain, and the consensus is failed to complete 
in this case. The ideal PoS protocol’s accuracy is only related 
to the attacker’s stakes. The attacker controls the entire 
blockchain when he holds stakes that exceed the threshold. 
Huang’s protocol has both PoW blocks and PoS blocks but 
two different consensus protocols have no cross-verification 
between them. Therefore, the consensus accuracy of this pro-
tocol should be the smaller one of independent accuracy of 
PoW and PoS consensus in the situation. In PoTA, beacon 
blocks and data blocks verify each other. Therefore, the sin-
gle PoW/PoS blockchain attack has no effect. For a success-
ful blockchain attack, the attacker needs to succeed in both 
the PoW way and the PoS way. The probabilities of success 
of these two methods are independent of each other. This 
greatly raises the barrier for a successful attack and gives 
our protocol the highest consensus accuracy against the same 
attack condition among five protocols.
Fig. 15  The accuracy for consensus under single-way blockchain attack
Peer-to-Peer Networking and Applications (2022) 15:2037–2056 2053
1 3
8  Conclusion and future work
With the development and application of the blockchain-as-a-
service platform, the application barrier of blockchain technol-
ogy has been effectively lowered. Individuals and enterprises 
can receive decentralized services from blockchains with a rel-
atively cheaper cost. The consensus of BaaS platform faces the 
increasing split between the supply and demand of transaction 
processing which causes the miners’ collusion phenomenon. 
In this article, we propose a novel consensus protocol for BaaS 
called the Proof-of-Transaction Amount to prevent the miners’ 
collusion while remaining the decentralization, security and 
immutability of blockchain. In the comparison between other 
typical consensus protocols and hybrid protocols, PoTA has a 
better consensus efficiency and accuracy.
Although the hybrid consensus method has excellent 
security, PoTA can only achieve an approximate consen-
sus efficiency due to the introduction of PoW compared to 
the ideal PoS. In the meanwhile, there is a small probabil-
ity that the TPC are all dual-identity members and exists 
a non-empty effective collusion strategy space. Therefore, 
we will continue to work in depth to further improve the 
performance of the consensus and probability of success-
fully defending against the miners’ collusion.
Fig. 16  Accuracy comparison of consensus under the double-way blockchain attack
Peer-to-Peer Networking and Applications (2022) 15:2037–20562054
1 3
Appendix
We abstract the strategy transfers process as a �-round first-
price sealed-bid auction which contains Bayesian Nash 
equilibrium solutions. Under the miners’ collusion, we 
assume that miner community will not accept the behav-
ior fight against the auction, which means if the strategy 
transfers, users who maintain their original bids will not 
have their transactions processed. Therefore, the price gap of 
two strategies ℚ is the BaaS users’ valuation of this auction. 
We define there are two users ni and nj biding for transac-
tion process with their positive bids qi and qi which obeys a 
uniformly distribution within [0,ℚ] . If one user succeed in 
the auction with bid q, the revenue of this auction is ℚ − q . 
According to the rules of auction, the higher bidder gets 
the commodity, i.e., gets his transactions processed. If both 
sides have the same bids, miner community will toss a coin 
to decide the winner. Therefore, the revenue function of ni is:
Then, to achieve the optimal strategy in auction, qi needs 
to satisfy
According to [21], since users’ bids are uniformly distrib-
uted, there exists an unique linear Bayesian Nash equilib-
rium solution to Eq. (17). We define users final bids as 
b(qi) = Q(s) + �i ×ℚ and b(qi) = Q(s) + �j ×ℚ , respec-
tively. The users’ bids satisfy a continuous uniform distri-
bution. Therefore, the probability of qi = qj is 0. The optimal 
bidding strategy is the solution of the following formula:
ni needs a final bid that higher than the Q(s) and lower than 
the highest possible bid of nj , Q(s) +ℚ . Therefore, we have
The optimal strategy of bidding for ni is:
Obviously, the case Q(s∗) < Q(s) does not meet our assump-
tion. Therefore, we have � = 0.5 as the optimal bidding value 
(16)ui =
⎧⎪⎨⎪⎩
ℚ − qi , if qi > qj;
1
2
× (ℚ − qi) , if qi = qj;
0 , if qi < qj.
(17)
max (ℚ − qi)Pro{qi > qj} +
1
2
× (ℚ − qi)Pro{qi = qj}
(18)max (ℚ − qi)Pro{b(qi) > Q(s) + 𝜃j ×ℚ}
(19)
Pro{b(qi) > Q(s) + 𝜃j ×ℚ} = Pro{ℚ <
b(qi) − Q(s)
𝜃i
}
=
b(qi) − Q(s)
𝜃i
(20)b(qi)
{
Q(s) +
ℚ
2
, if Q(s∗) ≥ Q(s);
q(s) , if Q(s∗) < Q(s).
for users in the strategy transfer process caused by a collusion. 
The derivation of optimal strategy for nj is the same as above. 
In a �-round strategy transfer process, the final valuation of 
strategy s∗ can be obtained by overlaying the user estimates 
from �-round auction, which is Q(s∗) = Q(s) +
∑t=1
�
��−t ×ℚ . 
The equation for the user’s optimal bid contains only one 
unknown variable. Therefore, for a multi-player auction model, 
� = 0.5 is still the only solution. Then, we successfully gen-
eralize the optimal bid case to the multi-player auction game.
Acknowledgements This article is funded by the National Key 
Research and Development Program of China 2020YFB2009503.
Declarations 
Conflicts of interest All authors certify that they have no affiliations 
with or involvement in any organization or entity with any financial 
interest or non-financial interest in the subject matter or materials dis-
cussed in this article.
References
 1. Zhu YJ, Yao JG, Guan HB (2020) Blockchain as a service: Next gen-
eration of cloud services. Ruan Jian Xue Bao/Journal of Software, 
31(1):1–19 (in Chinese). http:// www. jos. org. cn/ 1000- 9825/ 5891. htm
 2. Pindyck RS, Rubinfeld DL, Mehta PL (1995) Microeconomics, 
Englewood Cliffs. Prentice Hall, NJ
 3. Ethereum statistics website (2021) https:// www. oklink. com/ eth
 4. Ethereum statistics website. (2021) https:// www. gasnow. org/
 5. Ethereum statistics website (2021) https:// ether chain. org/
 6. Nakamoto S (2008) Bitcoin: A peer-to-peer electronic cash system. 
Decentralized Business Review 21260. http:// www. bitco in. org
 7. King S, Nadal S (2012) PPcoin: Peer-to-peer crypto-currency with 
proof-of-stake. self-published paper 19(1)
 8. Onik MMH, Miraz MH (2019) Performance analytical compari-
son of blockchain-as-a-service (baas) platforms, in: International 
Conference for Emerging Technologies in Computing. Springer, 
Cham, 3–18. https:// doi. org/ 10. 1007/ 978-3- 030- 23943-5_1
 9. Blockchain Technology and Application (2021) https:// azure. 
micro soft. com/ en- us/ solut ions/ block chain/. 2021
 10. Blockchain on AWS (2021) https:// aws. amazon. com/ partn ers/ 
block chain/
 11. IBM Blockchain Platform (2021) https:// www. ibm. com/ block chain/ 
platf orm
 12. Dao TC, Nguyen BM, Do BL (2019) Challenges and strategies for 
developing decentralized applications based on blockchain tech-
nology, in: International Conference on Advanced Information 
Networking and Applications. Springer, Cham 952–962. https:// 
doi. org/ 10. 1007/ 978-3- 030- 15032-7_ 80
 13. Zou W, Lo D, Kochhar PS et al (2019) Smart contract develop-
ment: Challenges and opportunities [J]. IEEE Trans Software 
Eng 47(10):2084–2106. https:// doi. org/ 10. 1109/ TSE. 2019. 29423 01
 14. Douceur JR (2002) The sybil attack, in: International workshop 
on peer-to-peer systems. Berlin, Heidelberg, Springer 251–260. 
https:// doi. org/ 10. 1007/3- 540- 45748-8_ 24
 15. Bentov I, Lee C, Mizrahi A et al (2014) Proof of activity: Extend-
ing bitcoin’s proof of work via proof of stake [extended abstract]. 
ACM SIGMETRICS Performance Evaluation Review 42(3):34–
37. https:// doi. org/ 10. 1145/ 26955 33. 26955 45
Peer-to-Peer Networking and Applications (2022) 15:2037–2056 2055
http://www.jos.org.cn/1000-9825/5891.htm
https://www.oklink.com/eth
https://www.gasnow.org/
https://etherchain.org/
http://www.bitcoin.org
https://doi.org/10.1007/978-3-030-23943-5_1
https://azure.microsoft.com/en-us/solutions/blockchain/
https://azure.microsoft.com/en-us/solutions/blockchain/
https://aws.amazon.com/partners/blockchain/
https://aws.amazon.com/partners/blockchain/
https://www.ibm.com/blockchain/platform
https://www.ibm.com/blockchain/platform
https://doi.org/10.1007/978-3-030-15032-7_80
https://doi.org/10.1007/978-3-030-15032-7_80
https://doi.org/10.1109/TSE.2019.2942301
https://doi.org/10.1007/3-540-45748-8_24
https://doi.org/10.1145/2695533.2695545
1 3
 16. Liu Z, Tang S, Chow SSM et al (2019) Fork-free hybrid con-
sensus with flexible proof-of-activity. Futur Gener Comput Syst 
96:515–524. https:// doi. org/ 10. 1016/j. future. 2019. 02. 059
 17. Huang Y, Zeng Y, Ye F et al (2020) Incentive Assignment in 
PoW and PoS Hybrid Blockchain in Pervasive Edge Environ-
ments, in: 2020 IEEE/ACM 28th International Symposium on 
Quality of Service (IWQoS), Hang Zhou, China, 15–17 Jun, 2020, 
IEEE 1–10. https:// doi. org/ 10. 1109/ IWQoS 49365. 2020. 92128 42
 18. Gupta KD, Rahman A, Poudyal S et al (2019) A hybrid POW-
POS implementation against 51 percent attack in cryptocurrency 
system, in: 2019 IEEE International Conference on Cloud Com-
puting Technology and Science (CloudCom), Sydney, NSW, 
Australia, 11-13 Dec. 2019, IEEE 396–403. https:// doi. org/ 10. 
1109/ Cloud Com. 2019. 00068
 19. Sun Y, Rajasekaran A (2019) An Interleaving Hybrid Consensus 
Protocol[J]. arXiv preprint arXiv: 1911. 09262
 20. Santos RP, Swan M (2018) PoW, PoS and Hybrid protocols: A 
Matter of Complexity?[J]. arXiv e-prints. arXiv:  1805. 08674
 21. Gibbons R (1992) A primer in game theory
 22. Sompolinsky Y, Zohar A (2013) Accelerating bitcoin’s transaction 
processing, Fast money grows on trees, not chains
 23. Eyal I, Gencer AE, Sirer EG et al (2016) Bitcoin-ng: A scalable block-
chain protocol, in: 13th USENIX symposium on networked systems 
design and implementation (NSDI 16), Santa Clara, CA, pp. 45–59
 24. Karame GO, Androulaki E, Capkun S (2012) Double-spending 
fast payments in bitcoin, in: Proceedings of the 2012 ACM con-
ference on Computer and communications security (CCS 2012), 
Raleigh, North Carolina, USA, pp. 906–917. https:// doi. org/ 10. 
1145/ 23821 96. 23822 92
 25. Eyal I, Sirer EG (2014) Majority is not enough: Bitcoin mining 
is vulnerable, in: International conference on financial cryptogra-
phy and data security. Springer, Berlin, Heidelberg pp. 436–454. 
https:// doi. org/ 10. 1007/ 978-3- 662- 45472-5_ 28
 26. Nothing at stake attack Ethereum (2021) https:// github. com/ 
ether eum/ wiki/ wiki/ Proof- of- Stake- FAQs/ what- is- the- nothi ng- 
at- stake- probl em- and- how- can- it- be- fixed
 27. Long range attack Ethereum (2021) https:// blog. ether eum. org/ 
2014/ 05/ 15/ long- range- attac ks- the- serio us- probl em- with- adapt 
ive- proof- of- work/
 28. Mininet (2021) http:// minin et. org/
 29. Freixas J (2005) The Shapley-Shubik power index for games with 
several levels of approval in the input and output. Decis Support 
Syst 39(2):185–195. https:// doi. org/ 10. 1016/j. dss. 2003. 10. 006
Kaiyu Wang received his M.S. 
degree in Computer Science and 
Technology from Harbin Institute 
of Technology (Xidazhi Street 
No.92, Harbin, China). He is cur-
rently pursuing his Ph.D degree 
in Computer Science and Tech-
nology from the Harbin Institute 
of Technology. His research inter-
ests include blockchain consensus 
protocol, peer to peer internet 
security and distributed comput-
ing system.
Zhiying Tu is an associate profes-
sor of School of Computer Sci-
ence and Technology at Harbin 
Institute of Technology (Xidazhi 
Street No.92, Harbin, China). He 
holds a Ph.D. degree in Computer 
Integrated Manufacturing (Pro-
ductique) from the University of 
Bordeaux. Since 2013, He began 
to work at HIT. His research 
interest is Service Computing, 
Enterprise Interoperability, and 
Cognitive Computing. He has 20 
publications as edited books and 
proceedings, refereed book chap-
ters, and refereed technical papers in journals and conferences. He is 
the member of IEEE Computer Society, and CCF China.
Zhenzhou Ji received his Ph.D 
in Computer Science in 2000 
from Harbin Institute of Technol-
ogy (Xidazhi Street No.92, Har-
bin, China). He is now a professor 
in the Harbin Institute of Technol-
ogy. He has presided over two 
National Natural Science Founda-
tion of China and many national 
projects and has received many 
awards. He has published a text-
book and over 40 technical papers 
in journals and conferences. His 
research interests include com-
puter architecture, parallel pro-
cessing computer and computer network security. He was the Vice-
Chairman of the Computer Architecture of China Computer Federation 
(CCF).
Peer-to-Peer Networking and Applications (2022) 15:2037–20562056
https://doi.org/10.1016/j.future.2019.02.059
https://doi.org/10.1109/IWQoS49365.2020.9212842
https://doi.org/10.1109/CloudCom.2019.00068
https://doi.org/10.1109/CloudCom.2019.00068
http://arxiv.org/abs/1911.09262
http://arxiv.org/abs/1805.08674
https://doi.org/10.1145/2382196.2382292
https://doi.org/10.1145/2382196.2382292
https://doi.org/10.1007/978-3-662-45472-5_28
https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQs/what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed
https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQs/what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed
https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQs/what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed
https://blog.ethereum.org/2014/05/15/long-range-attacks-the-serious-problem-with-adaptive-proof-of-work/
https://blog.ethereum.org/2014/05/15/long-range-attacks-the-serious-problem-with-adaptive-proof-of-work/
https://blog.ethereum.org/2014/05/15/long-range-attacks-the-serious-problem-with-adaptive-proof-of-work/
http://mininet.org/
https://doi.org/10.1016/j.dss.2003.10.006
	PoTA: A hybrid consensus protocol to avoid miners’ collusion for BaaS platform
	Abstract
	1 Introduction
	2 Related work
	2.1 Blockchain-as-a-service platform
	2.2 Blockchain consensus protocol
	3 Miners’ collusion on BaaS
	3.1 Model description
	3.1.1 BaaS model
	3.1.2 Transaction supply model
	4 Collusion condition and miners’ effective strategy space
	4.1 Miners’ collusion condition and strategy
	4.2 The existence of nash-equilibrium strategy
	4.3 The determination of miners’ collusion
	5 The proof-of-transaction-amount consensus protocol
	5.1 Block structure
	5.2 Transaction packaging committee election
	5.3 Fork verification mechanism
	6 Protocol analysis
	6.1 Validity
	6.2 Agreement
	6.3 Performance
	6.4 Security
	6.4.1 Avoid miners’ collusion
	6.4.2 Defend blockchain attacks
	7 Experiments
	7.1 Comparison of performance
	7.2 Comparison of security
	7.2.1 Security of avoiding the miners’ collusion
	7.2.2 Security of avoiding blockchain attacks
	8 Conclusion and future work
	Acknowledgements 
	References