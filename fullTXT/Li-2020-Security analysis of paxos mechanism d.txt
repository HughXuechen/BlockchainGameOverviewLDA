Security Analysis of Paxos Mechanism Design Based on Game Theory
Security Analysis of Paxos Mechanism Design Based 
on Game Theory  
Bin Li 1,2,Jianguo Jiang3 
1. School of Computer and Information Technology, Beijing Jiaotong University, Beijing 100044, China 
2. National Secrecy Science and Technology Evaluation Center, Beijing 100044, China 
3. Institute of Information Engineering, Chinese Academy of Sciences, Beijing 100093, China 
75666445@qq.com, jiangjianguo@iie.ac.cn 
Corresponding Author: Bin Li  Email: 75666445@qq.com 
 
Abstract—At present, a large number of token-less 
blockchain system use Paxos algorithm to reach a consensus. 
Based on game theory, this paper finds that when Paxos 
algorithm runs, each node in system may produce a kind of 
selfish behavior. The selfish behavior will lead to a game, which 
is called the computing resource dilemma game in this paper. 
By analyzing the payoff matrix and establishing the utility 
function model, it is found that Pareto optimal Nash 
equilibrium in the game needs to meet certain security 
conditions. Otherwise, each node will choose an uncooperative 
strategy, which will eventually lead to the system stop working. 
By solving the perfect Nash equilibrium solution of the 
subgame in the game, the security conditions for achieving the 
purpose(each node adheres to the cooperative strategy) of 
Paxos mechanism design are obtained. And the effectiveness of 
the security conditions is proved by simulation experiments. 
Keywords—game theory; Paxos; Nash equilibrium; security; 
mechanism design 
I. INTRODUCTION 
Consensus mechanism is the key technology of 
blockchain, consensus is the set of block generation, 
validation and reorder rules. If there are rules, there will be 
games. Mechanism design is an engineering problem of 
game theory. Players want to achieve a social goal[1], and 
each of the players will have their own behaviors. In this case, 
mechanism design is needed to urge everyone to restrict their 
behaviors in order to achieve social goals. Here mechanism 
design just is an algorithm, which makes every player willing 
to provide their own real information and take the design 
behavior to achieve social goals. As a classical consensus 
algorithm, Paxos also has mechanism design problems. Next, 
based on the game theory, the mechanism design of Paxos[2] 
is analyzed to verify whether it is reasonable and secure[3]. 
Game theory is to study the strategies and the equilibrium 
of strategies when the behaviors of decision-makers interact 
directly. In essence, game theory studies strategy, it is not 
only a method to study human behavior, but also an effective 
tool to study collaborative problems[4]. And game theory 
originated from the field of economics and behavior science, 
it is not the main research category in the field of distributed 
system(blockchain is a kind of distributed system), but 
because the behavior of distributed system nodes can be the 
result of decision-making of system nodes for a certain 
motivation, which is similar to human behavior, so game 
theory is also suitable for studying the behavior of distributed 
system nodes. 
II. BASIC CONCEPTION OF GAME THEORY 
A. The classification of game 
Game can be divided into different types according to the 
number of games, game process, game structure, the number 
of players, the way of profit and other dimensions. This 
section only focuses on the types of game involved in this 
paper.  
Definition 1.Subgame[5] is a part of the original game, 
which can be used as an independent game analysis. It is 
composed of a subsequent game stage starting from a stage 
other than the first stage of the dynamic game. It has the 
exact initial information set and all the information needed 
for the game.  
2020 IEEE International Conference on Information Technology,Big Data and Artificial Intelligence (ICIBA 2020)
978-1-7281-5224-0/20/$31.00 ©2020 IEEE 59
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:25:11 UTC from IEEE Xplore.  Restrictions apply. 
Definition 2.Dynamic game of complete information[6] 
means that the information in the game is complete, and all 
players have a complete understanding of the characteristics, 
the strategic space and the utility function under the strategy 
combination of other players. The actions are in order, so the 
latter can observe the actions of the former, understand all the 
information of the former, and generally last for a long time. 
Definition 3.Infinite repeated game[7] in mathematics 
can be regarded as a long-term game relationship between 
players in reality. Here, long-term is not narrowly understood 
as the length of time or the number of stages, but refers to the 
game scenario where players cannot predict when the game 
will end. 
B. Solutions to game  
The solution of the game problem, which is the most 
likely result of the game, is called equilibrium. The solution 
of game problem is defined as the result predicted by all 
players, i.e. the consistency prediction of players. It should be 
noted that this kind of consistent prediction is not only all 
players can predict the certain result, but also all players can 
predicted that all players predicted the a certain result. So this 
kind of consistent prediction is common knowledge. At 
present, people have a relatively consistent understanding—
take the research findings of John Nash as the solution of 
general game problems. For the dynamic game of complete 
information with subgame, Reinhard Selten's research shows 
that the subgame perfect Nash equilibrium[9] is the most 
reasonable solution among all the Nash equilibrium solutions 
of the dynamic game of complete information. 
Nash equilibrium[8] refers to such a strategy combination, 
which is composed of the optimal strategies of all players. 
Under the premise that other players do not change the 
current strategy, no one can obtain higher benefits by 
unilaterally changing their own strategy. 
Definition 4.Nash equilibrium[8] is formally defined as ：
For game G={N,{Si},{Ui}}, if a certain strategy combination 
is composed of any strategies of each player (𝑠1
∗,…, 𝑠𝑛∗), the 
strategy 𝑠𝑖
∗  of any player i is the best strategy for the 
strategy combination 𝑠−𝑖
∗ = (𝑠1
∗, … , 𝑠𝑖−1
∗ , 𝑠𝑖+1
∗ , … , 𝑠𝑛
∗)  of 
other players. If 𝑈𝑖(𝑠𝑖
∗, 𝑠−𝑖
∗ ) ≥ 𝑈𝑖(𝑠𝑖 , 𝑠−𝑖
∗ )holds for any si∊Si, 
it is called (𝑠1
∗,…, 𝑠𝑛∗) is a Nash equilibrium solution of G. 
Perfect Nash equilibrium is to eliminate the unbelievable 
threat strategies contained in Nash equilibrium. It requires 
that the decision-making of the players is optimal at any time 
point, and the players should adapt to the circumstances and 
consider future gains and losses, rather than stick to the old 
strategy. 
Definition 5.Subgame perfect Nash equilibrium[9] is 
defined as: For the strategy combination 𝑠∗=(𝑠1
∗,…𝑠i
∗,…,𝑠𝑛∗) 
of the extended game, if it is the Nash equilibrium of the 
original game and it also constitutes the Nash equilibrium in 
each subgame, then it is a subgame perfect Nash equilibrium. 
If players' preferences are complete, reflexive, transitive, 
continuous and strongly monotonic, then there is a 
continuous utility function that can represent the preferences. 
Definition 6.Utility function[10] is a function used to 
express the quantitative relationship between the utility 
obtained and the combination of goods consumed. It is used 
to measure the degree of satisfaction that players get from 
consuming a given combination of goods. 
Definition 7.Pareto optimality[11] refers to an ideal state 
of resource allocation, which assumes that an inherent group 
of people and allocable resources, from one allocation state 
to another, make at least one person better without making 
anyone worse. Pareto optimal state is that there is no more 
room for Pareto improvement. 
III. ANALYSIS OF NODE’S BEHAVIOR IN PAXOS 
Paxos is a protocol for data consistency in unreliable 
networks[12]. Nodes in Paxos can be divided into three roles 
(proposer, acceptor and learner), and their execution process 
can be divided into three phases. The following is the 
analysis of each role's behavior in each phase[13] to show 
mechanism design of Paxos. From the analysis，we can see 
that proposers actively participate in the proposal is the key 
to keep Paxos run. 
A. Role-phase analysis of Paxos 
(1) Specific description of proposers behavior 
60
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:25:11 UTC from IEEE Xplore.  Restrictions apply. 
Phase 1.a Send Prepare(n) requests to all acceptors 
(participation in proposals).  
Phase 2.a If a Reject(max_N) message is received, resend 
Prepare(new(n)), where different proposers have a different 
n, i. e. the numbers are partially ordered, guaranteeing that 
no two proposals are ever issued with the same number.  
Phase 2.a If Pok(max_N, n, v) messages from a majority of 
the acceptors have been received, then the proposer is free to 
choose a v (typically the client’s request) and send Accept(n, 
v) if each Va is null, or set v = Va(Va corresponds to the 
largest Na in Pok). 
Phase 2.b If Nack(max_N) is received, go back to Phase 1.a 
to send Prepare(new (n)).  
Phase 3 If Aok(max_N, Na, Va) messages from a majority of 
the acceptors have been received, broadcast the news of 
becoming a leader and send the accepted value(chosen 
proposal) to the learners. 
(2) Specific description of acceptors behavior  
Acceptors maintain a table of state records. Each row of 
the table represents a tuple (max_N, Na, Va)  
Phase 1.b Receive Prepare(n); if n>max_N, then set 
max_N=n to reply to Pok(max_N, Na, Va)or reply 
Reject( max_N) .  
Phase 2.b Receive Accept(n, v); if n<max_N, then reply 
Nack(max_N) , indicating that at least one other proposer 
broadcasts a higher numbered proposal after the proposal is 
proposed, or set Na=n and Va=v and reply Aok(max_N, Na, 
Va).  
(3) Specific description of learners behavior 
Phase 3 Tasks for learners is to monitor broadcast in this 
phase, so as to eventually confirm and update the accepted 
value. 
B. Paxos application scenario 
(1) The protocol is implemented in a unreliable 
communication environment. During the asynchronous 
communication process[14], transmitted data may be lost, 
delayed and repeated, but not tampered with.  
(2) Nodes do not suffer from Byzantine failures[15]. But 
each node can run at any speed, allowing stop and restart 
errors.  
(3) Nodes are allowed to assume multiple role. 
C. Selfishness analysis of nodes running Paxos 
Each node not only ensures its normal communication, 
but also consumes its own resources to provide other nodes 
of the network with services such as proposal review and 
messages broadcast. However, not all nodes in the network 
have good cooperation as designers imagine. Considering 
their own interests, some nodes will produce selfish 
behavior. They want to get updated data for free, but are not 
willing to provide additional services for other nodes. Nodes 
themselves are limited by various resources[16] such as 
power, bandwidth, computing power, memory space, etc. If 
a node does not provide broadcast services to other nodes all 
the time, it will save a lot of computing resources and reduce 
cost for itself. From the above Paxos application scenario, 
Paxos allows nodes to play the roles of proposer, acceptor 
and learner, and Paxos allows nodes to stop working or a 
role function to stop working. Therefore, nodes may have 
the following selfish behaviors: 
Not take the proposer function, avoid being selected as a 
leader, because the leader has to take the function of 
processing resolutions and data broadcasting. 
IV. COMPUTING RESOURCE DILEMMA GAME 
A distributed system running Paxos may have a network 
topology as shown in Fig. 1. P1, P2 and P3 are all with the 
roles of proposer, acceptor and learner (PAL nodes)，they 
need to learn new values to maintain their own updates, but 
they are not willing to take up more resources to submit 
proposals, participate in the election and broadcast messages 
to learners. As long as one of the nodes is elected as Leader, 
the other two nodes can save a certain amount of resource 
cost and still get value update. 
Definition 8.In Paxos, the nodes with the roles of 
proposer do not perform the function of proposer in order to 
reduce the cost, but hope that others can submit proposals 
and be selected as leader all the time. This kind of game is 
called computing resource dilemma game in this paper. 
 
61
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:25:11 UTC from IEEE Xplore.  Restrictions apply. 
 
Fig. 1 Topology of computing resource dilemma 
The game of computing resource dilemma game 
(hereinafter referred to as CRD game)  in token-less 
blockchain is just like the famous prisoner's dilemma game 
in game theory[17], which is caused by the selfish behavior 
of nodes (Only enjoying the resources in the system, but not 
contributing their own resources to the system). It will 
destroy the fair sharing of nodes in the network. In extreme 
cases, no player is willing to propose and participate in the 
election, and no one can get any profit in the future, which 
will affect the security of the system[18]. 
V. FIND A SOLUTION OF CRD GAME 
From Definition 2 and Definition 3, we can see that 
CRD game belongs to dynamic game of complete 
information and infinite repeated game. In this section, we 
will analyze the classification attribute of the game, and try 
to solve CRD game by using payment matrix and 
establishing utility function model. 
A. The payoff matrix for CRD game 
There is a long-term benefit value and extra resource 
cost as leader in the computing resource dilemma game. 
Therefore, in the current round of the game, each player 
Pi should consider that it can’t cause other players with 
negative attitude for proposals in the later round. One 
player Pi makes a cooperative attitude, which will make 
other players (P1,…,Pi-1, Pi+1,…,Pn) take a cooperative 
attitude in the future round, so as to realize common 
long-term benefits. Here we assume that there are 
proposals for each round of active players. When there is 
more than one node participating in the election, the 
probability of each node being elected is the same, so we 
can get a payoff matrix of CDR game problem. 
First, consider the case of three PAL nodes. There are 
eight(23) possible strategy combinations in this game, 
which can be represented by a pseudo three-dimensional 
payoff matrix[19], as shown in Table 1. 
TABLE I  PAYOFF MATRIX OF CALCULATION RESOURCE DILEMMA GAME 
 
P1 
 
active negative 
P2 
active 
𝑣-c/3 
𝑣-c/3 
𝑣-c/3 
𝑣 
𝑣-c/2 
𝑣-c/2 
active 
P3 
active 
𝑣-c/2 
𝑣-c/2 
𝑣 
𝑣 
𝑣-c 
𝑣 
negative 
negative 
𝑣-c/2 
𝑣 
𝑣-c/2 
𝑣 
𝑣 
𝑣-c 
active 
negative 
𝑣-c 
𝑣 
𝑣 
0 
0 
0 
negative 
 
In Table 1, v represents the benefit value after the 
election, c represents the additional resource consumption of 
broadcast messages after the leader is elected, and the 
probability[20] of being elected is 1/3, 1/2 or 1,which is 
represented by p. 
In the real world, it can be understood that c is regarded 
as the cost of power consumption of a company, and v 
represents the indirect income obtained by the company 
through Paxos distributed system. Then v and c can be 
calculated and compared. 
Obviously, if P1, P2 and P3 don't run for election, they 
will get the most. They can wait for other players to win the 
election and get value for free. Therefore, if each game is 
considered separately, all players will choose not to 
cooperate, i.e. not to participate in the election. The never 
cooperate strategy is a Nash equilibrium. But now that all 
PAL
PAL PAL
P:Proposer
A:Acceptor
L:Learner
L
L
L
L
L
L
L
L
P1
P2 P3
62
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:25:11 UTC from IEEE Xplore.  Restrictions apply. 
players are in a long-term(infinite repeated) game 
relationship. If players find that the strategy chosen in the 
previous stage is not (active, active, active), the resource 
consumption of the players in the round will increase 
(change to c/2 or c). If the resource consumption is too high 
for all players, there will be no leader and no value 
generated in the end, which is what everyone does not want 
to see. In order to avoid the situation of non-cooperation 
caused by vicious circle, it is necessary to analyze the 
relationship between c and v, i.e. the security conditions 
required for everyone to maintain active attitude towards 
cooperation[21]. 
B. Utility function modeling to solve CRD game 
Now we abstract a Paxos distributed system into a game 
model, because token-less blockchain is a distributed system. 
According to the three elements of the game, the players of 
the game correspond to the nodes in the distributed system, 
the strategy set of the players in the game such as actively or 
negatively participate in leader election correspond to the 
relevant action set, and the utility function of the game 
corresponds to the benefit value and resource cost[22]. Table 
2 shows the corresponding relationship between Paxos 
distributed system and game model. 
TABLE II CORRESPONDING RELATIONSHIP BETWEEN PAXOS DISTRIBUTED 
SYSTEM AND GAME MODEL 
The three elements 
Paxos distributed system 
components 
players nodes 
strategy set active or negative 
utility function value, cost 
 
CDR game can be defined as an array of three 
elements[23], including three elements of the game model, 
G={N,{Si},{Ui}}, where: 
N:={1,…,N} represents the set of all players. In the 
Paxos distributed system it represents the set of all PAL type 
nodes; 
S:={S1,S2,…,Si,…,S|N|} represents the strategy space set 
of all nodes. In CRD game model, Si is a boolean variable, 
with a value of 1 or 0, representing participating in the 
election(active) and not participating in the election(negative) 
respectively； 
U:={U1,U2,…,Ui,…,U|N|} represents the set of utility 
functions of all nodes. Utility is benefit and cost, i.e. 
updata(value) and resource consumption. The difference 
between benefit function and cost function of node i is its 
utility function, can be expressed as follow： 
Ui=𝑣i-ci                  (1) 
According to Table 1, the benefit function of node i in 
round r can be expressed as follow： 
               𝑣𝑖(𝑟) =  
𝑣, ∃𝑆𝑖(𝑟) = 1
0, ∀𝑆𝑖(𝑟) =  0
              (2) 
Meanwhile, the cost function of node i in round r can be 
expressed as: 
            𝑐𝑖 𝑟 =  
𝑐∗𝑆𝑖 𝑟 
 𝑆𝑗  𝑟 
𝑁
𝑗=1
, ∃𝑆𝑖 𝑟 = 1
       0,        ∀𝑆𝑖 𝑟 = 0
            (3) 
Then the utility function of node i in the r round of CDR 
game is expressed as follow: 
 𝑈𝑖(𝑟)(𝑆𝑖 𝑟 ) =  
𝑣 −
𝑐∗𝑆𝑖 𝑟 
 𝑆𝑗  𝑟 
𝑁
𝑗=1
,   ∃𝑆𝑖 𝑟 = 1
          0,              ∀𝑆𝑖 𝑟 = 0
       (4) 
According to Definition 4, when all nodes in the system 
running Paxos adopt the strategy of negative 
(S1(r)=S2(r)=…Si(r)=0), the system will maintain this "never 
cooperate" Nash equilibrium state. At this time, the system 
stops working and 𝑈𝑖 𝑟  𝑆𝑖 𝑟  = 0, which is obviously not 
the result that the designer wants. Therefore, to solve the 
above problems, we need to set security conditions to 
determine the relationship between v and c, to ensure the 
system can achieve the Pareto optimal Nash equilibrium. 
From the utility function derived above, it can be seen 
that if the security condition is effective, for node i, 
𝑈𝑖 𝑟  𝑆𝑖 𝑟  = 0 is certainly not the maximum utility when 
everyone adopt the strategy of negative(∀𝑆𝑖 𝑟 = 0). As long 
as there are nodes participating in the election, the value of 
benefit function for each node i is a fixed v. Only when all 
nodes actively participate in the election to maximize the 
denominator  𝑆𝑗  𝑟 
𝑁
𝑗=1  of 𝑐𝑖 𝑟 , and minimize the cost 
function. In this way, the utility of each node can be 
maximized. 
63
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:25:11 UTC from IEEE Xplore.  Restrictions apply. 
VI. SECURITY CONDITIONS OF PERFECT NASH 
EQUILIBRIUM SOLUTION IN CRD GAME 
According to the analysis of payment matrix and utility 
function, we know that the Nash equilibrium with optimal 
strategy in CRD game needs certain security conditions. 
Because CRD game meets Definition 3, this section will 
deduce this security condition by solving the perfect Nash 
equilibrium solution of the subgame of CRD game, and 
verify the validity of the security condition through 
simulation experiments. 
A. Find the security conditions of CRD game 
According to reference[23], if the discount rate[24] is δ, 
then the payoff πi of players in G(∞, δ) can be expressed 
as formula (5), where 𝜋𝑖
𝑡  is the payoff of player i in stage 
t(t=1,2,…, ∞)of G(∞, δ). 
πi(G(∞，δ))=𝜋𝑖
1 + 𝛿𝜋𝑖
2 + ⋯+ 𝛿𝑡−1𝜋𝑖
𝑡 + ⋯，δ∈(0,1)  (5) 
First, analyze the three participating nodes P1, P2 and P3 
in Fig. 1. According to section 5, the participating nodes 
adopt the trigger strategy[25](s1, s2, s3). If one node adopts 
non-cooperation strategy, the other nodes immediately adopt 
non-cooperation strategy and will always adopt 
non-cooperation strategy thereafter. So strategy (s1, s2, s3) 
are (active, active, active) in the first stage; in the t(t> 1) 
stage, if the result of the previous stage is (active, active, 
active), the election will continue; otherwise, strategy of 
negative is the only choice in the future. 
For the infinite repeated game G(∞, δ) of CRD game, 
there are two kinds of subgame(Г1 and Г2) under the strategy 
combination (s1, s2, s3).  
Definition 9.Г1 is a kind of subgame that the results of 
all previous stages are (active, active, active). 
Definition 10.Г2 is a kind of subgame that the results of 
the previous stage are not all (active, active, active).  
In order to prove that the strategy  combination (s1, s2, 
s3) constitutes the subgame perfect Nash equilibrium of G(∞, 
δ) in infinite repeated games, it is necessary to prove that (s1, 
s2, s3) constitutes the Nash equilibrium for both kinds of 
games. Obviously, (s1, s2, s3) constitutes the Nash 
equilibrium in Г2. In the meantime, if we can prove (s1, s2, s3) 
is the Nash equilibrium for the first game, we can also prove 
(s1, s2, s3) also is the Nash equilibrium for Г2. 
In order to prove (s1, s2, s3) is the Nash equilibrium for 
Г1, we only need to prove that: Suppose that when player k 
chooses the above triggering strategy, the optimal 
strategy[26] of players i and j is also the above triggering 
strategy. Let P1 choose negative in the t(t≥1) stage of the 
game, then its payoff in this stage is v. Next, its 
opportunistic behavior[27] will make P2 and P3 deviate from 
the choice (active, active), and they will choose the 
punishment behavior[28] of negative forever. So the payoff 
of P1 will be 0 in every stage from now on. Therefore, the 
discounted payoff(relative to stage t) from the above 
opportunistic behavior is: v+0+0+…=v. 
If P1 does not deviate from the trigger strategy in the 
game and always chooses active, the payoff in the t stage 
will be v⎼c/3, P2 and P3 will never deviate from the trigger 
strategy and always choose active. So P1 can get exactly the 
same payoff v⎼qc at every stage in the future. In this case, 
the payoff of P1 (relative to stage t) is derived as follows: 
   (𝑣 − 𝑐/3)+(𝑣 − 𝑐/3)δ+(𝑣 − 𝑐/3)δ2+...=𝑣−𝑐/3
1−𝛿
     (6) 
Therefore, if formula (7) is met, i.e. the discount payoff 
of continuous cooperation is greater than or equal to the 
discount payoff of opportunism, given P2 or P3 choose 
active, P1 will choose active. 
                   𝑣−𝑐/3
1−𝛿
≥ 𝑣                  (7) 
By solving the above inequality, we get δ≥c/3v. 
Therefore, when security condition δ≥c/3v is met, CRD 
game can continue in the cooperative state, and the trigger 
strategy combination above constitutes the Nash equilibrium 
of Г1. Further reasoning is available, in the normal case of n 
players(the probability of election p is 1/n) when security 
condition δ≥c/nv is met, CRD game can keep in the 
cooperative state, triggering strategy combination (s1, s2, …, 
sn) constitutes the Nash equilibrium of the game. According 
to the principles of economics, the more the discount rate δ 
approaches to 1, the higher the attention of players to future 
payoff; otherwise, the more the discount rate δ approaches to 
0, the more the attention of players to current payoff. When 
the actual situation is sure to meet formula (8), then 0<δ<1 
64
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:25:11 UTC from IEEE Xplore.  Restrictions apply. 
can be deduced. According to economic principles, the 
discount rate δ tends to be closer to 1, and the players pay 
more attention to future payoff. Otherwise, the players pay 
more attention to current payoff[29]. And the larger the δ, 
the higher the security of the system, the next section of the 
simulation experiment will be verified. 
v≥c/n, v>0 and c>0               (8) 
And the security condition show that the smaller n is, the 
larger δ is, i.e. the higher the players attach importance to 
the future, that is to say, the less players are, the higher the 
enthusiasm of players for cooperation is. Conversely, the 
more players, the more likely they are to hitchhike, which is 
also in line with people's common sense. 
B. Experimental results and analysis 
The experiment is to simulate the network topology 
shown in Figure 1 through multiple virtual machines on a 
single high-performance computer. The three cluster servers 
in the center all assume the three roles of proposer, acceptor 
and learner (PAL node) in Paxos, while the peripheral 
servers only assume the role of learner. Paxos protocol with 
security condition judgment and trigger strategy is 
implemented by C language. 
The system runs 19 times in total, and the PAL3 node will 
be down at the 10th time. The trigger strategy is enabled. 
The number of messages transfer and the computing 
resource consumption of each PAL node are compared when 
security condition 1 and security condition 2 are met 
separately. 
Security condition 1:    c/2v≥δ≥c/3v          (9) 
Security condition 2:      1≥δ≥c/2v          (10) 
Fig. 2 The number of message transfer when only security condition 1 is 
met 
Fig. 3 The number of messa ge transferwhensecurity condition 2 is met 
Fig. 4 The computing resource consumption when only security condition 1 
is met 
Fig. 5 The computing resource consumption when security condition 2 is 
met 
Analysis and comparison of the experimental results in 
Fig. 2, Fig. 3, Fig. 4 and Fig. 5 can draw the following 
conclusions: 
(1) When only security condition 1 is met, the system 
cannot continue to work normally after the PAL3 goes 
down. 
(2) When the security condition 2 is met, in the event of 
a node downtime, each PAL node continues to work 
normally, while computing resource consumption is 
65
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:25:11 UTC from IEEE Xplore.  Restrictions apply. 
basically balanced, there are no idle nodes and nodes with 
too much load, thus realizing the balanced distribution of 
network resources[30]. 
VII. CONCLUSIONS 
This paper studies and analyzes the nodes of token-less 
blockchain running Paxos algorithm through game theory. 
The research results are helpful for the designers of the 
alliance chain using Paxos as the consensus mechanism to 
establish the system access conditions, and also help to 
weigh the actual benefits and consumption costs of the units 
who want to join the alliance chain. The next work will 
focus on the following two aspects: one is to study the 
security conditions and limitations of PAL nodes when they 
adopt other strategies (such as two-phase strategy); the other 
is to explore other selfish behaviors that may exist in the 
system running Paxos and the game caused by the selfish 
behavior. 
ACKNOWLEDGEMENTS  
This work was support by the National Key Research 
and Development Program of China under Grand No. 
2018YFF0301202. 
REFERENCE 
[1] H. Zhou. From distributed consistency algorithm to blockchain 
consensus mechanism. Alicloud Technology Forum. 2019.5. 
[2] L. Lamport. Paxos made simple. ACM SIGACT News, 2001, 32(4): 
18-25. 
[3] L. Ron. Algorithmic Mechanism Design. Games &Economic 
Behavior, 2001, 35(1-2):166-196.  
[4] R. Gibbons, P. Hall. Game Theory for Applied Economists 
(International version: A Primer in Game Theory, Harvester-Wheat 
sheaf), Princeton University Press, 1992. 
[5] P. Aghion, D. Fudenberg, R.T. Holden. Subgame Perfect 
Implementation with Almost Perfect Information and the Hold-Up 
Problem. National bureau of economic research(NBER) Working 
Paper No. 15167. Issued in July 2009. 
[6] M.S. Fallah. A Puzzle-based Defense Strategy against Flooding 
Attacks Using Game Theory. IEEE Transactions on Dependable and 
Secure Computing, vol.7, no. 1, pp. 5-19, 2010. 
[7] X.Z. Zhang, Y.L. Ni. Mechanism of agent evaluation based on infinite 
repeated game. 2016 13th International Conference on Service 
Systems and Service Management (ICSSSM). 2016. 
[8] J. Nash. Non-cooperative games. Annels of Mathematics, 1951, 
54:286-295. 
[9] R. Selten. Game theory description of oligopoly model under demand 
reduction.1965. 
[10] J. P. Quirk, R. Saposnik. Admissibility and Measurable Utility 
Function. Review of Economic Studies, 1962, 29(2):140. 
[11] A.M. Feldman Pareto optimality[M]. The New Palgrave Dictionary of 
Economics and the Law. 2002. 
[12] K.J. Wang, G. L. Yang, L.Y. Wang. Data consistency in LAN. Journal 
of Hebei Agricultural University, 2002 (S1). 
[13] B. Li Bin, J.G. Jiang, K.G. Yuan. Adv Paxos: making classical Paxos 
more efficient. The Journal of China Universities of Posts and 
Telecommunications.Vol. 26.Oct. 2019:33-40. 
[14] X.Q. Chen, Q.P. Guo. Asynchronous communication technology and 
its analysis in distributed parallel processing. Computer engineering 
and application (14): 140-142.  
[15] L. Lamport. The Byzantine General's problem. Acm Transactions on 
Programming Languages & Systems, 1982, 4(3):382-401. 
[16] X. Long, R. Li. SLA based grid computing resource allocation 
framework. Software Engineering (06): 59-62. 
[17] L. Huang. Research on the behavior of wireless network nodes based 
on game theory. Beijing Jiaotong University, June 2011. 
[18] X.M. Fu, M.W. Zhao, L. Li. Bayesian Coalitional Game with 
Uncertain Relay in Physical Layer Security. Acta Scientiarum 
Naturalium Universitatis Nankaiensis. 2018-03. 
[19] L.H. Jin, B. Tian, C. Liang. Hybrid strategy model of fuzzy payment 
matrix and its solution. Fuzzy system and mathematics, 2009, 23 (5). 
[20] Y. Zhang, Y. Chen. Game Research on cooperation probability of 
alliance partners. Statistics and decision making (2): 45-47. 
[21] X. Wang. The construction of security e-government and game 
analysis of security strategy. Shanghai Jiaotong University, 2008. 
[22] R.K. Sarin. Utility Function. American Cancer Society, 2008. 
[23] Y.S. Luo. Course of game theory. Beijing Tsinghua University Press, 
2007. 
[24] W.H. Lv Wenhong, Q.Z. Wu, Y.J. Guo. Output model and stability 
analysis of power market based on repeated game. 7th academic 
exchange meeting of China Operation Research Association. 2004. 
[25] D. Fudenburg, J. Tirole. Game Theory. Cambridge，MA：MIT Press，
1991. 
[26] L. Cheng, D.H. Ma, H.Q. Zhang. Optimal Strategy Selection for 
Moving Target Defense Based on Markov Game. IEEE Access, 2017, 
PP(99):1-1. 
[27] W.W. Gao Weiwei, P. Huang, Z.Y. Niu. Analysis of channel alliance 
based on opportunistic behavior of information transmission. Journal 
of systems management (5): 506-510.  
[28] M. Ji Ming. A study on the cooperative phenomenon of multiplayer 
game model [D]. Suzhou University, 2010. 
[29] J.W. Yang, J. Fang, S.B. Zhang. Research on trust evaluation method 
based on repeated game in WSNs. Information network security. Aug. 
2014. 
[30] X.C. Hao, Y.X. Zhang, N. Jia,et al. Virtual Game-Based Energy 
Balanced Topology Control Algorithm for Wireless Sensor Networks. 
Wireless Personal Communications, 69(4):1289-1308. 
 
66
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:25:11 UTC from IEEE Xplore.  Restrictions apply.