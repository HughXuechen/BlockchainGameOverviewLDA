Decentralized Mining Pool Games in Blockchain
Decentralized Mining Pool Games in
Blockchain
Zhihuai Chen
Institute of Computing Technology
Chinese Academy of Sciences
Beijing, China
chenzhihuai@ict.ac.cn
Xiaohan Shan
Department of Computer Science and Technology
Tsinghua University
Beijing, China
shanxiaohan@tsinghua.edu.cn
Xiaoming Sun
Institute of Computing Technology
Chinese Academy of Sciences
Beijing, China
sunxiaoming@ict.ac.cn
Jialin Zhang
Institute of Computing Technology
Chinese Academy of Sciences
Beijing, China
zhangjialin@ict.ac.cn
Abstract—We use cooperative game theory to model
mining pools and design reward allocation schemes in this
paper. Specifically, we propose a cooperative game model
named as “Decentralized Mining Pool Game (DMPG)”.
The player set of DMPG is the set of all pool managers and
the utility function is defined as the sum of block rewards
and transaction fees. In our model, we take miners in pools
as normal nodes rather than only as computational powers,
that is, all miners joining mining pools also participate
in the propagation and validation of transactions in the
network, this setting can effectively avoid the formation of
centralized mining pools. We design two kinds of reward
allocation schemes for DMPG and present efficient methods
to compute them. One scheme is the stable allocation
scheme which focuses on maintaining the rationality of
miners (i.e. the core of DMPG) and the security of mining
pools (i.e. resistance to pool block withholding attack). The
other kind of scheme is the fair allocation scheme which
focuses on the fairness of miners (i.e. the Shapley value of
DMPG).
Index Terms—cooperative game; blockchain; mining
pool; core; Shapley value
I. INTRODUCTION
In the past decade, Bitcoin became the most influential
peer-to-peer digit crypto-currency. The key technique in
Bitcoin – blockchain is a distributed tamper-proof ledger
which prevents altering confirmed transaction records
and then provides trustless but secure trade channel
for the users in a decentralized network. To be more
precise, the blockchain is a chain of block storing the
verified transactions, and it grows in an append-only
method with new verified block containing new verified
transactions. Indeed, such decentralized system is very
dependent on transaction propagation to ensure its proper
function. But, it becomes an issue that the users in
such a decentralized network is a motivational to diffuse
the transaction that he receives. One reason is that the
informed users can’t benefit from delivering such a
information, the other reason is that they realize that
they have more chance to obtain the transaction fees by
keeping those transactions.
The direct incentive of miners is to gain the payoff
by mining a block, and their payoff can be divided
into two parts: the block reward for their effort that
proposing a block and the transaction fees inclused in
the this proposed block. The block reward can be seen
as a constant number in a short term and the transaction
fees is dependent on the volume of trades recorded in
this block. If a selfish miner receives a transacton with
high transaction fee, he will prefer to reserve it in his
own mining block. This motivates us to consider such
problem in the perspective of game theory, specially the
cooperative game.
A cooperative game Γ = (V, γ) consists of a player
set V = {1, 2, . . . , n} and a profit function γ : 2V → R
with γ(∅) = 0. A subset of players S ⊆ V is called a
coalition and V is called the grand coalition. For each
coalition S, γ(S) represents the profit obtained by S
without help of other players. An allocation over the
players is denoted by a vector x = (x1, x2, . . . , xn) ∈
R
n whose components are one-to-one associated with
players in V , where xi ∈ R is the value received by
player i ∈ V under allocation x. For any player set S ⊆
V , we use the shorthand notation x(S) =
∑
i∈S xi. A set
of all allocations satisfying some specific requirements
is called a solution concept.
The core [8], [15] is one of the earliest and most
attractive solution concepts that directly addresses the
issue of stability. The core of a game is the set of
allocations ensuring that no coalition would have an
426
2020 IEEE International Conference on Knowledge Graph (ICKG)
978-1-7281-8156-1/20/$31.00 ©2020 IEEE
DOI 10.1109/ICBK50248.2020.00067
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:33:20 UTC from IEEE Xplore.  Restrictions apply. 
incentive to split from the grand coalition, and do better
on its own. More precisely, the core of a game Γ
(denoted by C(Γ)), is the following set of allocations:
C(Γ)={x ∈ R
n : x(V ) = γ(V ), x(S) ≥ γ(S), ∀ S ⊆
V }. Intuitively, the requirement of x(S) ≥ γ(S) means
that the coalition S receives profit allocation x(S) that
is at least their profit contribution γ(S), so they would
prefer to stay with the grand coalition.
In 1950s, Shapley [14] proposed another solution-
concept of payoff assignment problem, called Shapley
value. With such a concept, the payoffs are allocated
according to the players’ individual marginal contribu-
tions to the game. To be more precise, in this solution-
concept, a player’s individual contribution is defined as
the weighted average marginal increase in the payoff of
any coalition that he may join. Shapley value is famous
and important solution-concept, since it is the unique
division scheme such that:
(i) efficiency - the full payoff of the grand coalition is
totally divided to the players;
(ii) symmetry - the payoffs to the players don’t depend
on their identity;
(iii) dummpy player - if a player’s contribution to any
coalition is exactly the amount he can achieve
alone, the payoff he received equals to exactly the
amount that he can gain on his own;
(iv) additivity axioms - if the game is summation of
two sub-game, then the allocation solution is sum-
mation of two sub-allocation as well.
A. Contributions
We formulate mining pools in blockchain as co-
operative games in which miners contribute not only
computational powers but also unconfirmed transactions.
Having the mining pool game model, we study allocation
schemes from different perspectives. Specifically, we
summarize our main contributions as follows.
(i) We model the mining pool as a cooperative game
model named as Decentralized Mining Pool Game
(DMPG). The player set of DMPG is defined
as miners in blockchain systems and the utility
function is defined as the sum of transaction fees
and block rewards.
(ii) We propose two kinds of allocation schemes
for DMPG: fair allocation and stable allocation.
Specifically, the fair allocation scheme is the Shap-
ley value of DMPG and the stable allocation
scheme has three properties: efficiency, rationality
and pool block withholding attack resistance.
(iii) For the fair allocation scheme (Shapley value), we
prove that the Shapley value of DMPG can be
computed in polynomial time.
(iv) We present a stable allocation for DMPG.
B. Related Works
Cooperative game theory is a branch of (micro-
)economics that studies the behavior of self-interested
agents in strategic settings where binding agreements
between agents are possible [3]. Numerous classical
studies about cooperative game provide rich mathemat-
ical framework to solve issues related to cooperation in
multi-agent systems [4], [5].
The mining pool is the gathering result of miners,
which is a typical game theory scenario. Thus, there are
many studies that use game theory to analyse mining
pools [11]. In [10], authors proved that there are always
some miners that have an incentive to leave their pools
and join other pools to increase their utility if the
reward allocation of pools is non-linearity. [2] used
cooperative game theory to analyse the respective aspect
of interactions among the miners and pools. [13] used
non-cooperative game theory to analyse the interactions
between the miners and the pool manager and show
that If a certain condition is satisfied, the strategy that
each miner reports the shares immediately is the Nash
equilibrium. [7] used a repeated game to study the case
that miners report the shares repeatedly, and the pool
manager can optimize its reward allocation to maximize
its utility.
To the best of our knowledge, most game models
defining on mining pools ignore the possibility that min-
ers could join the network and contribute to transaction
fees. In this paper, we present a cooperative game model
that take miners not only as “computational powers” but
also as normal “nodes” in blockchain system.
II. MODEL
A. Decentralized Mining Pool Games (DMPG)
A decentralized mining pool game is denoted by
Γ = (V, γ), where V = {1, 2, . . . , N} is the player set
represents the set of miners for some blockchain systems.
Each miner i ∈ V associates two parameters, one
is his computational power qi and the other is the
set of unconfirmed transactions Ti he holds, we use
q(S) =
∑
j∈S qj to denote the total computational power
of miners in S and use TS =
⋃
i∈S Ti to denote all
unconfirmed transactions held by the miner set S ⊆ V .
For each transaction t ∈ TV , suppose ct be the
transaction fee of t and ct will be awarded to the miner
who makes it confirmed. We use c(T ) to represent the
total fee in transaction set T , that is, c(T ) =
∑
t∈T ct.
For each coalition S ⊆ V , the utility of S is the
expected benefits obtained by S and the formula is
defined as following,
γ(S) =
q(S)
m
(g(S) + α), (1)
427
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:33:20 UTC from IEEE Xplore.  Restrictions apply. 
where α is the block reward and g(S) is the transaction
reward defined as the sum of the top � transactions in
TS . Specifically, suppose TS = {t1, t2, · · · , tTS
} with
ct1 ≥ ct2 ≥ · · · ≥ ctTS
, the top � transactions in TS is
defined as T �
S = {t1, t2, · · · , t�} then
g(S) =
∑
t∈T �
S
ct.
Notice that the utility function defined above is super-
additive (see Lemma 1), so intuitively, players are prefer
to work together.
Lemma 1. The utility function γ(S) is super-additive,
that is, γ(A ∪ B) ≥ γ(A) + γ(B) for any A,B ⊆ V
and A ∩B = ∅.
Proof. For any A,B ⊆ V and A ∩B = ∅, we have,
γ(A ∪B) =
q(A) + q(B)
m
(g(A ∪B) + α)
≥ q(A) + q(B)
m
(max{g(A), g(B)}+ α)
≥ q(A)
m
(g(A) + α) +
q(B)
m
(g(B) + α)
= γ(A) + γ(B).
For easy reference, we list the notations as follows:
• V = {1, 2, · · · , N}: the grand player set, i.e., the
set of all miners.
• qi: computational power of miner i ∈ V .
• q(S): computational power of miner set S, q(S) =∑
j∈S qj , for any S ⊆ V .
• V1, V2, · · · , Vn: mining pools.
• m1,m2, · · · ,mn: computational powers of pools.
• m: total computational power, m =
∑
i∈[n] mi =∑
j∈[N ] qj .
• g(S): transaction fee obtained by miner set S, for
any S ⊆ V .
• α: system rewards for proposing a block.
• φij : the rewards pool Vi allocates to miner j.
B. Allocation schemes of DMPG
In this section, we consider allocation schemes of
DMPG, i.e., how to allocate the total rewards of a mining
pool into its miners.
Given an instance of DMPG G = (V = V1 ∪ V2 ∪
· · ·∪Vn, γ), we use φ to denote an allocation scheme and
φij is the rewards that pool Vi allocates to miner j, for
any i ∈ {1, 2, · · · , n} and j ∈ Vi. Let φ(S) =
∑
j∈S φij
be the total rewards allocated to coalition S from mining
pool Vi, for any i ∈ {1, 2, · · · , n} and S ⊆ Vi. When phi
is a random allocation scheme, we use E[φij ] to denote
the expected rewards that pool i allocates to miner j.
We propose two kinds of allocation schemes of
DMPG, stable allocation and fair allocation. The stable
allocation scheme focuses on the stability of players and
the security of the system. Specifically, the stability of
players corresponds to the core of cooperative game, that
is, players are prefer to stay at the current mining pool;
the security of the system means that no one would
like to launch the block withholding attack. The fair
allocation scheme corresponds to the Shapley value in
the cooperative game theory.
Definition 1 (Stable allocation scheme). Given an in-
stance of DMPG G = (V = V1 ∪ V2 ∪ · · · ∪ Vn, γ), an
allocation φ is a stability allocation of G if and only if
φ satisfies the following properties:
• Efficiency: The efficiency property demands that
a mining pool should distribute all rewards to
its miners when this pool proposes a block suc-
cessfully, that is , φ(Vi) = g(Vi) + α, for any
i ∈ {1, 2, · · · , n}.
• Rationality: The rationality property demands that
there is no miner preferring to deviate from the
current mining pool, that is, for any S ∈ Vi and
i ∈ {1, 2, · · · , n}, E[φ(S)] ≥ γ(S), where E[φ(S)]
is the expected value of φ(S).
• Pool Block Withholding Attack (PBWA) Resistance:
This property means that no pool has the incentive
to launch a pool withholding attack.
Now we introduce the pool block withholding attack.
It is shown in [6] that the permissionless mining pools
have strong incentives to launch the pool block withhold-
ing attacks (PBWA) on each other: one strategic pool
manager sends some of her miners to other pools and
these miners pretend to work on the puzzles but actually
do nothing. In Bitcoin or any decentralized system, the
pool managers are not able to recognize such malicious
miners, thus these miners can still obtain the reward from
mining pool proportional to their computing powers.
Eyal [6] modelled the above scenario as pool block
withholding games (PBWG) and we redefine the defi-
nition of PBWG with the notation system in our paper
now.
PBWA is also demonstrated in [12] with a different
reward function. and showed that with any number of
pools, no-pool-attacks is not a Nash equilibrium. When
there are two pools, the situation faced by the two
managers is similar to prisoner’s dilemma, which is
called miner’s dilemma: in an equilibrium, both manages
launch the PBW attack and accordingly earn less rewards
compared to when they mine honestly. Alkalay-Houlihan
and Shah [1] further studied the miner’s dilemma be-
tween two strategic mining pools and obtained the bound
of the social loss due to noncooperation, i.e., price of
anarchy. They showed that the pure Nash equilibrium
always exists, and the pure price of anarchy is at most
3 in this game. They also conjectured the tight bound
428
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:33:20 UTC from IEEE Xplore.  Restrictions apply. 
should be 2 and demonstrated this in some special cases.
The players in a PBWG are the managers of n
mining pools, denoted by U = {U1, U2, · · ·Un}. Let
mi ∈ R
+ be the mining power of manager Ui ∈ U .
Assume m is the total mining power in the system
and m ≥ ∑
Ui∈U mi. For any player Ui, Ui’s strategy
space is all possible Si = (Sij)j∈U\{Ui} such that∑n
j=1 wij ≤ mi and wij ≥ 0 for all Uj ∈ U\{Ui},
where wij = q(Sij). Each Sij with j �= i represents the
miner set that Ui wants to infiltrate pool Uj . Denote by
S = (S1, · · · , Sn) a full strategy profile.
Each player Ui’s reward ri(S) in PBWA consists of
two parts: direct reward and infiltrating reward. The
direct reward is produced by Ui’s mining and the in-
filtrating reward comes from sharing in other pools.
In the rest of this paper, we propose a stability allo-
cation and a polynomial algorithm to compute fairness
allocations of DMPG.
III. STABLE ALLOCATION SCHEME
In this section, we propose a stability allocation
scheme. Given an instance of DMPG G = (V =
V1 ∪ V2 ∪ · · · ∪ Vn, γ), let φ
s be an allocation with the
following formula:
φs
ij =
⎧⎪⎪⎪⎨
⎪⎪⎪⎩
α+
qj
mi
g(Vi), if j proposes a block successfully
qj
mi
g(Vi), if a miner in Vi \ {j} proposes
a block successfully
0, otherwise
Now we prove that the allocation φs defined above is
a stable allocation of G.
Theorem 1. φs is a stability allocation.
In the rest of this section, we prove Theorem 1 by
proving Lemma 2 to Lemma 4
Lemma 2 (Efficiency of φs). φs satisfies the efficiency
property in Definition 1, that is, φs(Vi) = g(Vi) + α if
a miner in poo Vi propose a block successfully.
Proof. Suppose miner u in pool Vi proposes a block
successfully, then we only need to prove that φs(Vi) =
g(Vi) + α.
φs(Vi) =
∑
j∈Vi
φs
ij
= φs
iu +
∑
j∈Vi\{u}
φs
ij
= α+
qu
mi
g(Vi) +
∑
j∈Vi\{u}
qj
mi
g(Vi)
= α+
∑
j∈Vi
qj
mi
g(Vi)
= α+ g(Vi).
Lemma 3 (Rationality). Given an instance of DMPG
G = (V = V1 ∪ V2 ∪ · · · ∪ Vn, γ) and any mining pool
Vi ⊆ V , E[φs(S)] ≥ γ(S) for any miner set S ⊆ Vi.
Proof.
E[φs(S)] =
∑
j∈S
E[φs
ij ]
=
∑
j∈S
[
qj
m
(
qj
mi
(g(Vi) + α)) +
mi − qj
m
(
qj
mi
g(Vi))]
=
∑
j∈S
[
qj
m
(g(Vi) + α)
≥q(S)
m
(g(S) + α) = γ(S).
In the rest of this section, we prove that allocation φs
satisfies the pool withholding attack resistance property.
Given an instance of DMPG G = (V = V1 ∪ V2 ∪
· · · ∪ Vn, γ) with allocation scheme φs, we define an
instance of PBWG GP as follows. The player set of GP
is U = {U1, U2, · · · , Un} and Ui represents the manager
of mining pool i, the utility function of GP is denoted
by r and r is defined as the sum of directed reward and
infiltrating reward under φs.
Lemma 4 (Pool Block Withholding Attack Resistance).
Suppose m ≥ 2mi and α ≥ 2g(V ), then no pool
launches pool withholding attack is a Nash equilibrium
of GP .
Proof. When there is no pool launching withholding
attack, for any i ∈ {1, 2 · · · , n}, the utility of pool Vi is
ri(0, 0, · · · , 0) = mi
m
(g(Vi) + α)
To simplify notations, we only prove that pool V1 has no
incentive to launch a block withholding attack. Suppose
pool V1 sending miner set S1 to other pools to launch
withholding attacks. Suppose S1 = S12 ∪ S13 · · · ∪ S1n
and q(S1) = x1 =
∑
i∈{2,··· ,n} w1i, where S1i is
the miner set attacking pool Vi from pool V1 and the
corresponding computational power is q(S1i) = w1i, for
any i ∈ {2, · · · , n}. In this case,
429
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:33:20 UTC from IEEE Xplore.  Restrictions apply. 
r1(w1, 0, · · · , 0)
=
m1 − w1
m− x1
(g(Vi \ {S}) + α)
+
m2
m− x1
· w12
m2 + w12
g(V2 ∪ S12)
+ · · ·+ mn
m− w1
· w1n
mn + w1n
g(Vn ∪ S1n)
=
m1 − w1
m− w1
(g(Vi \ {S}) + α)
+
1
m− w1
n∑
i=2
miw1i
mi + w1i
g(Vi ∪ S1i).
Given any constant k1, k2 ≥ 2, suppose α ≥ k1g(V )
and m ≥ k2mi, for any i ∈ [n], we have,
r1(0, 0, · · · , 0)− r1(w1, 0, · · · , 0)
=
m1
m
(g(V1) + α)− m1 − w1
m− w1
(g(Vi \ {S}) + α)
− 1
m− w1
n∑
i=2
miw1i
mi + w1i
g(Vi ∪ S1i)
=
m1 − w1
m− w1
(g(V1)− g(Vi \ {S}))
+
w1(m−m1)
m(m− w1)
(g(V1) + α)
− 1
m− w1
n∑
i=2
miw1i
mi + w1i
g(Vi ∪ S1i)
≥w1(m−m1)
m(m− w1)
α− 1
m− w1
n∑
i=2
miw1i
mi + w1i
· 1
k1
α
=
α
m− w1
n∑
i=2
w1i(m−m1)
m
− 1
m− w1
n∑
i=2
miw1i
mi + w1i
· 1
k1
α
≥ α
m− w1
n∑
i=2
w1i(m−m1)
m
− 1
m− w1
n∑
i=2
miw1i
mi + 0
· 1
k1
α
=
α
m− w1
n∑
i=2
w1i(1− m1
m
− 1
k1
)
≥ α
m− w1
n∑
i=2
w1i(1− 1
k2
− 1
k1
)
≥0.
IV. FAIR ALLOCATION SCHEME (SHAPLEY VALUE)
A widely used solution-concept in cooperative game
theory is Shapley value [14], which reassigned the payoff
according the relative importance of a individual player
in the game. Comparing with the core, Shapley value
is motivated by the fairness of a game but it maybe
not stable. Fairness is more important than stable from
the perspective of incentiving the miner to share all
his transactions and solve the puzzle. For example, if
two miners with same computational power but one has
lots of transactions while the other has a few. They
still got the same reward according to the solution
xi =
qi
m (g(V ) + α). Therefore, finding a fair solution is
necessary. Fortunately, Shapley value always exists for
any coalitional game.
Theorem 2. Given a coalitional game G = (N, v), there
is a unique payoff division x(v) = φ(N, v) that divides
the full payoff of the grand coalition and that satisfies
the Symmetry, Dummy player and Additivity axioms.
Such a unique value is called Shapley value and is
defined as following
Definition 2 (Shapley value). Let G = (N, f) be a
cooperative game, the Shapley value is
φi(N, f) =
1
n
∑
S⊆N\i
(
n− 1
|S|
)−1
Δir(S)
However, computing Shapley value is difficult when
the number of players grows rapidly. To be more precise,
the computation of Shapley value is NP-hard in general,
e.g., weighted voting game [9]. But by exploring the
structure of our game, we figure out a brief method to
compute Shapley value efficiently.
Theorem 3. The Shapley value of this game can be
computed in polynomial time.
Proof. Let Ti be the transactions held by miner i and
TS =
⋃
i∈S Ti.
Δir(S) =
q(S) + q(i)
m
(α+ g(S ∪ i))
=
q(S)
m
c(Ti\TS) +
q(i)
m
(c(TS ∪ Ti)) +
αq(i)
m
=
q(S)
m
c(Ti\TS) +
q(i)
m
c(Ti\TS) +
qi
m
c(TS) +
αq(i)
m
In order to simplify Shapley value, we divide it into four
parts. For the summation on the first term,
1
n
∑
S⊆N\i
(
n− 1
|S|
)−1
q(S)
m
c(Ti\TS)
=
1
n
∑
t∈Ti
ct
∑
S⊆N\i
(
n− 1
|S|
)−1
q(S)
m
�x/∈TS
Let B(t) be the set of miners who don’t hold transaction
t and ct be the transaction fee of t. Then
430
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:33:20 UTC from IEEE Xplore.  Restrictions apply. 
1
n
∑
S⊆N\i
(
n− 1
|S|
)−1
q(S)
m
c(Ti\TS)
=
1
n
∑
t∈Ti
ct
∑
S⊆B(t)
(
n− 1
|S|
)−1
q(S)
m
=
1
mn
∑
t∈Ti
ct
|B(t)|∑
s=0
(
n− 1
s
)−1 ∑
j∈B(t)
q(j)
∑
S⊆B(t)
|S|=s
�j∈S
=
1
mn
∑
t∈Ti
ct
|B(t)|∑
s=1
(|B(t)| − 1
s− 1
)(
n− 1
s
)−1
q(B(t))
=
1
m
∑
t∈Ti
ctq(B(t))
(n− |B(t)|+ 1)(n− |B(t)|)
With similar caculation, we give a simple form for
summation on the second term
1
n
∑
S⊆N\i
(
n− 1
|S|
)−1
q(i)
m
c(Ti\TS) =
∑
t∈Ti
ctq(i)
m(n− |B(t)|)
For the third part, we have
1
n
∑
S⊆N\i
(
n− 1
|S|
)−1
q(i)
m
c(TS)
=
q(i)
mn
∑
S⊆N\i
(
n− 1
|S|
)−1 ∑
t
ct�t∈TS
=
q(i)
mn
∑
t
ct
n−1∑
s=0
(
n− 1
|S|
)−1 ∑
S⊆N\i
|S|=s
�t∈TS
Notice that the last summation counts the number of
subset that don’t hold transation t, thus
1
n
∑
S⊆N\i
(
n− 1
|S|
)−1
q(i)
m
c(TS)
=
q(i)
mn
∑
t
n−1∑
s=0
(
n−1
s
)− (|B(t)\i|
s
)
(
n−1
s
)
=
q(i)
mn
∑
t
(n− n
n− |B(t)\i| )
And the summation on the fouth term is simply qiα
m .
Finally, we conclude that the Shapley value for G =
(V, f) is
φi(V, f)
=
1
m
∑
t∈Ti
ctq(B(t))
(n− |B(t)|+ 1)(n− |B(t)|)
+
∑
t∈Ti
ct
q(i)
m(n− |B(t)|)
+
q(i)
mn
∑
t
(n− n
n− |B(t)\i| )
+
qiα
m
which can be computed in time linear in number
miners times number of transactions.
V. CONCLUSIONS
In this paper, we model the process of propogation
and mining as a cooperative game. And in this game,
the total reward of the grand coalition consist of the
block reward and the transaction fees that shared by all
miners. In order to make such a coaltition solid, we
consider the allocation solutions in the perspective of
stability and the fairness. In the term of stability, we
show a simple distribution in the core which make sure
not smaller group will escape and form a new coalition.
We also prove that withholding attack will not happen
with such an allocation. And for the fairness, we simplify
the Shapley value into a brief form and therefore make
it computable in polynomial time.
VI. ACKNOWLEDGMENT
This work was supported in part by the 973 Program
of China Grant No. 2016YFB1000201, the National Nat-
ural Science Foundation of China Grants No. 61832003,
61761136014, 61872334, K.C.Wong Education Founda-
tion.
REFERENCES
[1] C. Alkalay-Houlihan and N. Shah. The pure price of anarchy of
pool block withholding attacks in bitcoin mining. In AAAI 2019,
2019.
[2] L. Brünjes, A. Kiayias, E. Koutsoupias, and A. Stouka. Reward
sharing schemes for stake pools. CoRR, abs/1807.11218, 2018.
[3] G. Chalkiadakis, E. Elkind, and M. Wooldridge. Computational
aspects of cooperative game theory. Synthesis Lectures on
Artificial Intelligence and Machine Learning, 5(6):1–168, 2011.
[4] V. Conitzer and T. Sandholm. Complexity of constructing solu-
tions in the core based on synergies among coalitions. Artificial
Intelligence, 170(6-7):607–619, 2006.
[5] X. Deng and C. H. Papadimitriou. On the complexity of coop-
erative solution concepts. Mathematics of Operations Research,
19(2):257–266, 1994.
[6] I. Eyal. The miner’s dilemma. In 2015 IEEE Symposium on
Security and Privacy, pages 89–103, May 2015.
[7] B. Fisch, R. Pass, and A. Shelat. Socially optimal mining pools.
In Web and Internet Economics, pages 205–218, Cham, 2017.
Springer International Publishing.
[8] D. Gillies. Some Theorems on n-Person Games. PhD thesis,
Princeton University, 1953.
431
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:33:20 UTC from IEEE Xplore.  Restrictions apply. 
[9] S. Kurz. Computing the power distribution in the imf. Available
at SSRN 2742118, 2016.
[10] Y. Lewenberg, Y. Bachrach, Y. Sompolinsky, A. Zohar, and J. S.
Rosenschein. Bitcoin mining pools: A cooperative game theoretic
analysis. In AAMAS, May 2015.
[11] Z. Liu, N. C. Luong, W. Wang, D. Niyato, P. Wang, Y. Liang,
and D. I. Kim. A survey on blockchain: A game theoretical
perspective. IEEE Access, 7:47615–47643, 2019.
[12] L. Luu, R. Saha, I. Parameshwaran, P. Saxena, and A. Hobor.
On power splitting games in distributed computation: The case
of bitcoin pooled mining. In 2015 IEEE 28th Computer Security
Foundations Symposium, pages 397–411. IEEE, 2015.
[13] O. Schrijvers, J. Bonneau, D. Boneh, and T. Roughgarden.
Incentive compatibility of bitcoin mining pool reward functions.
In Financial Cryptography and Data Security - 20th International
Conference, FC 2016, Revised Selected Papers, pages 477–498.
Springer Verlag, Jan. 2017. 20th International Conference on
Financial Cryptography and Data Security, FC 2016 ; Conference
date: 22-02-2016 Through 26-02-2016.
[14] L. S. Shapley. A value for n-person games. Contributions to the
Theory of Games, 2(28):307–317, 1953.
[15] L. S. Shapley. Markets as cooperative games. In IJCAIRand
Corporation Memorandum, 1955.
432
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:33:20 UTC from IEEE Xplore.  Restrictions apply.