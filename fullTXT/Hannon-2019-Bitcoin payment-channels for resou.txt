Bitcoin Payment-Channels for Resource Limited IoT Devices
Bitcoin Payment-Channels for Resource Limited IoT Devices
Christopher Hannon
Illinois Institute of Technology
Chicago, Illinois, USA
channon@iit.edu
Dong Jin
Illinois Institute of Technology
Chicago, Illinois, USA
dong.jin@iit.edu
ABSTRACT
Resource-constrained devices are unable to maintain a full copy of
the Bitcoin Blockchain in memory. This paper proposes a bidirec-
tional payment channel framework for IoT devices. This framework
utilizes Bitcoin Lightning-Network-like payment channels with
low processing and storage requirements. This protocol enables IoT
devices to open and maintain payment channels with traditional
Bitcoin nodes without a view of the blockchain. Unlike existing
solutions, it does not require a trusted third party to interact with
the blockchain nor does it burden the peer-to-peer network in the
way SPV clients do. The contribution of this paper includes a se-
cure and crypto-economically fair protocol for bidirectional Bitcoin
payment channels. In addition, we demonstrate the security and
fairness of the protocol by formulating it as a game in which the
equilibrium is reached when all players follow the protocol.
CCS CONCEPTS
• Security and privacy → Embedded systems security; Cryp-
tography; •Computer systems organization→Embedded and
cyber-physical systems.
KEYWORDS
Blochchain, Cyber Physical Systems, Cryptoeconomics, Payment
Channels
ACM Reference Format:
Christopher Hannon and Dong Jin. 2019. Bitcoin Payment-Channels for Re-
source Limited IoT Devices. In INTERNATIONAL CONFERENCE ON OMNI-
LAYER INTELLIGENT SYSTEMS (COINS), May 5–7, 2019, Crete, Greece. ACM,
New York, NY, USA, 8 pages. https://doi.org/10.1145/3312614.3312629
1 INTRODUCTION
Internet of Things (IoT) services and devices are expanding at an
exponential pace due to the rapid expansion of networking tech-
nologies. Today many companies are jumping into an IoT arms
race across various application domains including smart home,
connected health, wearables, connected car, smart retail, supply
chain, and many more. One key observation is that smart IoT de-
vices are increasingly replacing our physical credit cards, enabling
a faster and easier way for us to order products and pay services
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
COINS, May 5–7, 2019, Crete, Greece
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6640-3/19/05. . . $15.00
https://doi.org/10.1145/3312614.3312629
on demand. However, many problems exist concerning payment
services through IoT devices, such as identity verification, security
and privacy (e.g., financial information protection), scalability and
flexibility (e.g., accidental ordering, refunds).
Blockchain technology has been proposed to play a powerful role
to address those challenges in IoT payment services. Blockchains are
based on cryptographically secured, immutable distributed ledger
technology which operate in a distributed fashion, and thus have
the potential to enhance IoT solutions with better automated re-
source optimization, data security and reliability. For example, [6]
describes how blockchain can facilitate sharing of services and the
automation of work flows; [3] overviews the blockchain integration
and projects within the energy sector including markets, operations
and stability, and security of the grid.
The integration of IoT and blockchain has potential in revolu-
tionizing IoT. IoT devices that interact with the physical world can
transfer value in exchange for services and blockchains can provide
a value transfer protocol. Applications in IoT such as metering in-
frastructure in utilities including gas, electricity and water as well
as electric vehicle charging and supply chain management can ben-
efit from value transfer using blockchain technology. Transactions
on blockchains can build trust between devices without relying on
a trusted third party intermediary. Decentralized trustless value
ledgers in the form of blockchains have gained increasing traction
as trust-less value transfer protocols. Another novelty of blockchain
technology is the design of a crypto-economic consensus algorithm
which relaxes the assumption that some number of agents are hon-
est to economically rational. This creates a state that as long as
participants value money (or digital cash), they will behave in a way
that results in their own best interest, i.e., highest profits. By design,
blockchain consensus ensures correct operations of a decentralized
public database that records users’ account balances. Blockchain
technology allows for users to transfer value to other users without
the help of trusted third parties such as PayPal or Visa.
The main advantage of blockchain is its trust-less value transfer
protocol, which is securely maintained through decentralized par-
ticipants. However, the blockchain technology does not solve all
problems, specifically, blockchains suffer from limited scalability
due to their decentralized nature. Additionally, the limited scalabil-
ity can drive up the cost of using the blockchain network through
high fees.
In this work, we focus on using blockchain payment channels
which enables scalability. We design a payment channel protocol
based on the Lightning Network, which enables IoT devices with
few computational and storage resources to transfer value. In par-
ticular, our protocol enables a party to transact with another using
the Bitcoin blockchain without storing the complete blockchain
using untrusted third parties. Figure 1 shows the architecture of
our protocol in reference to the rest of the blockchain.
https://doi.org/10.1145/3312614.3312629
https://doi.org/10.1145/3312614.3312629
http://crossmark.crossref.org/dialog/?doi=10.1145%2F3312614.3312629&domain=pdf&date_stamp=2019-05-05
COINS, May 5–7, 2019, Crete, Greece Christopher Hannon and Dong Jin
IoT GatewayIoT Device
             Blockchain  Bitcoin Node    IoT Field Device       
IoT Gateway       P2P Link      TCP/IP         Payment Channel
Figure 1: IoT devices in the Bitcoin Blockchain context. The
IoT device has a payment channel open to a gateway service
and does not have a local copy of the blockchain. Instead,
the IoT device relies on untrusted third parties to connect
on its behalf through economic incentives.
The remaining paper is organized as follows: Section 2 provides
background on blockchain and its payment channels. Section 3
presents a protocol design that enables real-time payment channels
for IoT devices to gateway services. We analyze the security of
the protocol by formulating it as a game in Section 4. Finally, we
describe the related work in Section 5 and conclude in Section 6
with future work directions.
2 BACKGROUND
Blockchain technology at its core is an immutable public digital
ledger containing transactions. The novelty of blockchain is its
ability to unequivocally agree on the state of the ledger in a decen-
tralized setting. Through the process of mining, the global state of
the blockchain advances.
The Bitcoin blockchain [14] provides the ability to send trans-
actions which consist of inputs, outputs, and rules governing the
redemption of the outputs. Inputs to transactions map to the source
of the funds (a previous transaction) while the outputs represent the
destination of the transaction value. The governing rules included
in the transaction dictate how the recipient of the transaction is
able to spend the received value in the future. A common rule is
for the recipient to prove ownership of a private key associated
with the destination address in the transaction. However, more
detailed rules can be expressed to provide more complicated value
redemption logic.
In general, Bitcoin follows the UTXO model which says that
an input to a new Bitcoin transaction is the output of an unspent
previous transaction along with a script that redeems the previous
transactions output. The output of the new transaction provides the
recipient and a script telling the recipient how to redeem the values.
Since the blockchain is an immutable public database, transactions
cannot be revoked and the total of all unspent transaction outputs
represent the current state of the Blockchain. Thus, there is no
concept of users or accounts included in the Bitcoin Blockchain.
Transactions are organized into blocks which remain pending
until a partial pre-image is found for the sha-256 hash algorithm
which meets a specific criteria quantified as the blockchain’s diffi-
culty. This difficulty is a dynamic variable that corresponds to the
processing power of participants working to add new blocks and
transactions into the blockchain. The result of this process main-
tains that on average new blocks are added to the blockchain every
10 minutes. In alternative blockchain implementations, the target
block interval varies, e.g., 15 seconds in Ethereum [5]. This interval
is important to note because until a transaction is included in a block
it is not considered verified by the blockchain network. Further-
more, due to the consensus algorithm that governs the blockchain,
there may be temporary confusion of the latest block. A block is
only valid if it is part of the longest blockchain. Confidence of
immutability grows exponentially in relation to the number of sub-
sequent blocks. The original Bitcoin white paper [14] provides a
more detailed analysis.
Figure 2 shows the cost of sending a transaction converted to
USD over four months in 2018. The cost of a transaction on the
blockchain as well as the time required to publish the transac-
tion makes frequent real-time transactions impossible. Another
method to reduce fees is to use an alternative blockchain that has
larger block sizes or more frequent blocks. Although alternative
blockchains can have weaker security, and greater price volatility
that does not satisfy our goals in this work. In this paper, we pro-
pose a protocol using off-chain payment channels that can provide
real-time payment but do not incur large fees with frequent posting
to the blockchain.
2.1 Off-Chain Bitcoin Transactions
Bitcoin’s Forth-like scripting language enables more complex func-
tionality by placing conditions on the redeeming of transaction
outputs. For example, time locks can be used on transactions and
transaction outputs to place temporal restrictions on the ability to
spend or create transactions. Time locks can be both relative and
absolute and can prevent a transaction output from being spent
until after a certain time. Time locks are one of the most important
building blocks in off-chain Bitcoin Transactions, such as in the Bit-
coin Lightning Network [16]. Multisignatures can require multiple
keys to spend a transaction output. One use case for multisigna-
tures is joint savings accounts where both parties need to agree to
make a transaction. nLockTime, CheckLockTimeVerify, Relative
LockTime, CheckSequenceVerify, are primatives used intime lock
contracts [1]. nLockTime and Relative Locktime are correspond-
ing counterparts for absolute and relative time respectively for
inclusion into the blockchain while CheckLockTimeVerify and
CheckSequenceVerify are counterparts for absolute and relative
Bitcoin Payment-Channels for Resource Limited IoT Devices COINS, May 5–7, 2019, Crete, Greece
time respectively for making outputs of a valid transaction spend-
able. Hashlocks on the other-hand provide encumbrance on the
outputs of transaction that requires a specified secret value being
publicly revealed. Upon unlocking the hashlock, all other hashlocks
with the same secret value are also unlocked due to the secret value
being recorded on the blockchain.
The combination of hashlocks and timelocks can create timed
hashlock contracts (HTLCs) which can be used to put Bitcoin trans-
actions ’off-chain’ through layer 2 scaling solutions, such as the
Lightning Network [16], Duplex micropayment channels[7], and
Raiden [4]. Our protocol uses CheckSequenceVerify and Multisig
for payment channels similar to Lightning Network Transactions.
Off-chain transactions are properly formatted Bitcoin transactions
that are deferred from being published immediately on the blockchain.
The benefit is that off-chain transactions can be updatedmany times
before published to the blockchain resulting in reduced on-chain
transactions and ultimately fewer fees. In [7], channels can be cre-
ated unidirectional or in duplex, and transactions can be updated so
that the final channel balances are guaranteed to be included. This
is accomplished by newer transactions having smaller timelocks
than earlier transactions, and thus being able to be published sooner
than old invalidated transactions. A limitation of this approach is
that channels will have finite lives. References [16] and [4] allow
for channels to remain open indefinitely or until the owners decide
to close the channel.
In those solutions, transactions are properly formatted so that
either party involved can post the transaction at any time to the
blockchain in case of dispute. This property allows for the protocol
to remain trustless. To avoid the problem of excessive fees, trans-
actions are updated off-chain to reflect a new balance and only
publish them upon closure to the blockchain. Therefore, fees only
need to be paid when opening and closing a channel while updating
the balance within the channel is fee-less.
Because IoT devices are resource limited, it is infeasible to assume
that they can remain connected to the blockchain. Therefore, we
need to adopt the state channel model to allow for one (or both)
parties to be offline from the Bitcoin blockchain. In this work, we
assume that the IoT devices have networking capability to untrusted
third parties. By providing financial incentives to the third parties,
the IoT devices do not need to have direct access to the blockchain
and can instead rely on the untrusted third parties to act as a bridge
to ensure correct operation of the protocol.
3 PROTOCOL DESIGN
The intuition of our protocol is to use a multisig transaction to
fund the channel. Intermediate states are made revocable as devel-
oped in [16]. Our contribution is to ensure correctness and crypto-
economical fairness when one party does not have access to the
blockchain. To do this, we use a third party to post transactions to
the blockchain by creating an additional output that is spendable
by the third party. By creating an economic incentive, a third party
is willing to participate in the protocol. Furthermore, to ensure
that the second party does not violate the protocol by publishing a
revoked state, a third party is used as a watchdog, which informs
the first party when the funding transaction’s output is used as
an input to a new transaction. This watchdog will report when an
Feb
2018
Mar Apr May Jun
0
2
4
6
8
10
12
14
16
U
S
D
Average Transaction fee in USD
Figure 2: Average transaction fee from Feb. to June 2018 in
USD. Calculated using the blocksci library [10].
intermediate state is posted to the blockchain, which prevents pub-
lishing an expired state. Additionally, to prevent collusion between
the second party and the third parties, we use a pool of third parties
for each service. Since any member in the third party is able to take
the role, the incentive needs to be higher than any incentive from
colluding. In Section 4, we formulate the problem as a game and
show that the equilibrium is reached by following the protocol.
The details of the protocol are as follows. For each IoT device A,
the IoT payment gatewayB creates a payment channel. BothA andB
generate 3 sets of j keypairs (pk_{B |A}_j_{a |b |c }, sk_{B |A}_j_{a |b |c })
such that each intermediate transaction uses a different keypair
making j the number of intermediate states. Additionally, we gen-
erate a keypair for opening and closing the channel,
(pk_{B |A}_{FT |close }, sk_{B |A}_{FT |close }), and another pair forA
transactingwith the third parties, (pk_A_3rd_{a |rc }, sk_A_3rd_{a |rc }).
To minimize the IoT devices’ memory requirements, we use BIP32
that provides a deterministic hierarchical key generation algorithm
with a highly compacted data structure [18]. All keys can then be
generated with a given master key and an index in the data struc-
ture. Effectively this enables the storing of an index in place of a
keypair, as the total requirements for storing a state is the key index
and the balances.
The two parties agree to place a Funding Transaction TFT on
the blockchain that sends ΩA and ΩB as input funds from A and B
respectively. The output of the channel is a 2-of-2 multi-signature
requiring both A and B’s sk {B |A}_FT to spend. Additionally, the
two parties agree on an initial commitment transactionTC1 that is a
valid spending of the funds fromTFT as the input and returning ΩA
and ΩB as the outputs. Note that the transaction is not published to
the blockchain, and its purpose is to denote the starting balance in
the payment channel. Reference [16] shows how two transactions,
TC1_B and TC1_A can be constructed so that B is the only party
that can publish TC1_A and A is the only party that can publish
TC1_B . This mechanism is accomplished by supplying one of the
2-of-2 input signatures required to spendTFT ’s output, i.e., partially
signing the transaction.
COINS, May 5–7, 2019, Crete, Greece Christopher Hannon and Dong Jin
Furthermore, the transactionsTC1_B andTC1_A are made revoca-
ble by encumbering the outputs of the corresponding party’s ability
to send the output. For example, if A publishes TC1_B , the output
of ΩB can be redeemed immediately by B. However, ΩA funds are
locked. There are two ways to redeem the locked funds. The first is
to use A and B’s secret keys sk1s for a 2-of-2 multi-signature. The
second is to use a timelock to redeem the fund to A afterW blocks,
whereW is the number of blocks specified in the timelock. B may
use the first mechanism to steal all of As funds after both parties
update the state of the channel to the new transactions TC2_B and
TC2_A. Upon updating, A sends sk1 to B (and B sends sk1 to A). The
stealing of funds relies on the mechanism to prevent old transac-
tions from being published, which can be achieved by B checking
the blockchain before someW blocks afterTC1_B is published. This
mechanism is a way to ensure that both parties follow the protocol
even if the two parties do not trust each other.
However, since the IoT devices are assumed not to have a di-
rect access to the blockchain, two disjoint groups of untrusted
third parties are used to interface between the IoT device and the
blockchain. Each group has multiple members, K1 and K2 respect-
fully, to prevent collusion with B. The first group is used to publish
a transaction to the blockchain incentivized through a small fee as
an output to the transaction. The second group ensures that if B
publishes an old transaction that the IoT device is notified of the
transaction and is able to spend the transaction output before the
timelockW expires for B to redeem their funds. This second group
is also incentivized through small fees in Bitcoin smart contracts.
Transactions 3-5 show the method to do this. In order to prevent
third parties colluding with each other or B, the number of members
in each third party has to be chosen with respect to the quantity of
fees as well as to the channel balances.
When both parties agree on the closing of a channel, they can
create a new transaction TF in that uses ΩA_f in and ΩB_f in as the
final output balances, and post it to the blockchain. If both parties
follow the protocol properly, only two transactions, TFT and TF in ,
are published to the blockchain. If one party tries to publish an old
state of the channel TCi_(B/A), the other party can detect this and
take all the funds in the channel.
Transaction 1, the funding transaction, contains two or more
inputs, and one or more outputs. The channel funding output is a
multisignature output requiring both parties to sign in order to use
as an input into a new transaction.
Transaction 2, is used upon mutual channel closing, it uses the
multisignature output from the funding transaction and uses mul-
tiple outputs to both A and B. If the IoT device wishes to post the
transaction, a fee σ can be placed in an input for a third party to be
incentivized to publish.
Transaction 3 takes the funding transactions output as input and
creates 3 outputs. The first output is local to A, the party with the
ability to publish it. This output is encumbered by a timelock of
W blocks to A’s address to ensure that if the transaction is old. In
other words, A has given a key pair (pk_{A}_j_{c }, sk_{A}_j_{c }) to
B, and B can redeem this input. The second output is the remote
output to B. Finally, there is a third output, which is the incentive
for a third party to send the transaction to the blockchain and make
sure the transaction gets included in a block.
Transaction 4 takes the funding transactions output as input
and creates 2 outputs. Because A partially signs the input to this
transaction, onlyB is able to publish it. The first output is timelocked
byW blocks with an output to B.A is also able to redeem this input
given (pk_{B }_j_{c }, sk_{B }_j_{c }). There is a third party watching
the blockchain, whose key is required for A to redeem this input.
By doing so, the third party also gets a fee in return.
Transaction 5 takes this as input and can be presigned. This
recovery transaction is used as a smart contract to incentivize a third
party to watch the blockchain by providing a fee determined by
the members of the third party. The second output to Transaction 4
is used for a remote output to A.
The Bitcoin Scripts used for all the aforementioned transactions
are shown in Appendix A to provide a real-time payment channel
for IoT devices with an IoT gateway.
4 SECURITY ANALYSIS
To prove that our protocol design is crypto-economically fair, we
model the protocol as a game and demonstrate that the equilibrium
can always be reached as long as the players follow the protocol
and fees are appropriately set.
The payment channel in the Bitcoin Lightning Network [16] can
be modeled as a game between two actors. After the channel is
funded, Player I may post any previous states and then Player II may
choose to follow the protocol or deviate. Following the protocol
means to take the maximum amount of funds, i.e., the remote
transaction as well as the local transaction, if the transaction is
rescinded. Deviating means to do nothing or to take just the remote
funds. Let us consider 3 transactions with Players I and II balances α ,
β respectively.We defineTX1 = (α1, β1),TX2 = (α2, β2), andTX3 =
(α3, β3), such that α2 > α1 > α3 and β3 > β1 > β2, where TX1
is the current state of the channel, and TX2 and TX3 are previous
states where α and β are the values each party has respectively in
the channel at a state. Additionally, α1 + β1 = α2 + β2 = α3 + β3
since the total amount of funds in the channel is fixed. Player I’s
strategies are which TX to publish to the blockchain. Following
the protocol, the strategy is publishing TX1, while TX2 and TX3
is deviating from the protocol. Player II’s strategies are Follow,
Deviate_1, and Deviate_2 as described above. The payoff matrix
for this game is shown in Table 1. Player I experiences a maximum
payout under strategy D_1 if Player II chooses a deviating strategy.
However, since Player II has a pure strategy always to follow the
protocol, the equilibrium is reached when Player I also follows the
protocol. In this game, we show that in the life of the channel, no
I/II F D_1 D_2
F β1 / α1 α2 + β2 / 0 α3 + β3 / 0
D_1 β1 / α1 β2 / α2 β3 / α3
D_2 0 / α1 0 / α2 0 / α3
Table 1: Payoff matrix of payment channel game between 2
parties
Bitcoin Payment-Channels for Resource Limited IoT Devices COINS, May 5–7, 2019, Crete, Greece
player will be able to increase their profit if the other player follows
the protocol.
In our approach, we assume that one party does not have ac-
cess to the blockchain, furthermore the addition of more players,
the game gets further complicated. The interesting cases to eval-
uate are when one of the parties posts an intermediate state to
the blockchain. Let us consider four players in the game, the IoT
gateway, an IoT device, and two groups of untrusted third parties.
Player 1 is the IoT gateway with three strategies, using the same
set of transactions as the previous game. Each strategy refers to
posting a transaction to the blockchain where strategy 1 is follow-
ing the protocol. In the first game where player 1 goes first (see
Figure III), Player 4, the 3rd party that watches the blockchain for
an output of the funding transaction in a new transaction plays
next. Player 4 can either tell player 2 about the transaction (Strategy
F) or deviate from the protocol. Since Player 4 represents a group
of players, K2, any one of them can follow the protocol. Therefore,
in order to deviate, all Players in the group must collude. If the
players collude to perform a denial-of-service attack, then no profit
is gained. On the other hand, if the Player 4 members collude with
Player 1 (Strategy D), then they can receive some payoff γ2
K2
, where
K2 is the number of members in the group and γ2 is the amount
that Player 1 offers which is bounded by α1.
If we show that γ2
K2
is less than γ1, then Player 4 will not be
incentivized to deviate from the protocol. Player 2 will not deviate
from the protocol because they have a pure strategy to follow the
protocol. Finally, similarly to Player 4, Player 3 can follow the
protocol where any one member of K1 will earn σ1. After many
games, the average payout is σ1
K1
. σ1 must be large enough to cover
the fee of spending the transaction as well as for the bandwidth
requirements in order to maintain a connection to the IoT device.
Additionally, in order to prevent collusion between all the members
in Player 3 and Player 1, σ2K1
is less than σ1. This forced inequality is
the reason for usingmultiplemembers in each group. If σ2K1
< σ1 and
γ2
K2
< γ1 are true, then the equilibrium is reached when all players
follow the protocol correctly. In order to ensure these inequalities
hold, a minimum/maximum channel balance must be enforced.
Recall that α2 > α1 > α3, to evaluate the fees of σ and γ , we can set
TX2 to the intermediate state where α2 = ∀i MAX (αi ) and similarly
TX3, α3 = ∀i MIN (αi )
Player 1 has the potential to maximize their potential earnings
when they deviate with strategy 2, by postingTX2 to the blockchain
with earnings of α2 − σ2 and α2 − γ2 and by colluding with Players
3 and 4 respectively. By enforcing that
σ1 >
σ2
K1
≡ σ1 >
α2 − α3
K1
and similarly for Player 4,
γ1 >
γ2
K2
≡ γ1 >
α2 − α3
K2
we can show that the equilibrium is met when all players follow
the protocol because Player 3 and Player 4 will not collude with
Player 1.
If Player 2 makes the first move by posting a transaction to the
blockchain, the game is similar to the original payment channel
game shown in Table 1. Player 1 will have a pure strategy to follow
the protocol. However, Player 3 can deviate from the protocol by
performing a denial-of-service attack against Player 2. If Player 3
does this through collusion, the game actually restarts. By incen-
tivizing Player 3 and because there is a pool of members in Player
3, it is not economically rational to take that strategy. Therefore,
using the fee structure for σ as in the game when Player 1 goes
first, equilibrium is reached when all players follow the protocol.
Although in both equilibrium cases Player 4 does not get an incen-
tive, they do not know which strategy Player 1 has taken, thus their
profit is still maximized when following the protocol.
5 RELATEDWORK
There are many alternative blockchains with various properties
including privacy, support for more complex smart contracts, and
client software for interfacing with the blockchain, as well as with
various uses of blockchain technology in IoT.
5.1 Simplified Payment Verification
Simplified Payment Verification (SPV) clients are lightweight Bit-
coin clients [14], that do not need to store the full state of the
blockchain. Instead, they store the 80-byte block headers. The block
header contains a lot of information as they are chained together
and contain the Merkle root of the transactions in each block. By
providing an SPV client with a Merkle proof, any node can con-
vince an SPV client that a transaction is included in the blockchain
with high security as it is not efficient to create fake block head-
ers. However, SPV clients rely on blockchain nodes to watch for
payments. With many IoT devices making payments, there is no
incentive for regular Bitcoin nodes to watch the blockchain for
specific transactions. Therefore, we argue that SPV clients are a
burden to the Bitcoin network and we design our protocol to avoid
these scalability limitations. In practice, if the IoT device has storage
for approximately 4 MB per year for storing block headers, then it
is reasonable to include the SPV client in addition to our protocol
for even greater security. However, our solution requires less data
storage for IoT devices.
5.2 Payment Channels
This work expands the Lightning Network [16] payment channel
system for IoT devices. The full Lightning Network enables pay-
ments to be routed through third parties too while we leave routing
through third parties as future work in order to fully integrate with
the Lightning Network.
Bolt [9], is a protocol that enables private off-chain payment
channel transactions. Because of the privacy-preserving nature,
it is a challenge to interface with such a system on low resource
devices commonly seen in IoT. However, privacy preservation in
state channels can be a desired property in IoT payment systems,
such as smart meters in the power grid.
Raiden [4], is an Ethereum based payment channel similar to the
Lighting Network. Our protocol can also be adapted to this style
network. Plasma [15], is a scaling solution designed on Ethereum
that enables payment channels as well as more complex smart
contracts to be deployed.
IOTA (MIOTA) [17], is a blockchain designed with low computa-
tion for IoT and web 3.0 protocols. In our case, however, the security
COINS, May 5–7, 2019, Crete, Greece Christopher Hannon and Dong Jin
P1
P4
P2
P3
(α1, β1 − σ1,
σ1
K1
, 0)
F
(α1, 0, 0, 0)
D
F
(α1, 0, 0, 0)
D
F
(α1, 0, 0, 0)
D
S1
P4
P2
P3
(0, α2+β2−σ1−γ1,
σ1
K1
,
γ1
K2
)
F
(α2−σ2, β2,
σ2
K1
, 0)
D
F
(α2+β2, 0, 0, 0)
D
F
(α2+β2−γ2, 0, 0,
γ2
K2
)
D
S2
P4
P2
P3
(0, α3+β3−σ1−γ1,
σ1
K1
,
γ1
K2
)
F
(α3−σ2, β3,
σ2
K1
, 0)
D
F
(α3+β3, 0, 0, 0)
D
F
(α3+β3−γ2, 0, 0,
γ2
K2
)
D
S3
Figure 3: Extensive form when Player 1 goes first. The optimal solution is reached when all players follow the protocol.
P2
P3
P1
(α1, β1−σ1,
σ1
K1
, 0)
F
(0, β1−σ2,
σ2
K1
, 0)
D
F
(0, 0, 0, 0)
D
S1
P3
P1
(α2+β2−σ1, 0,
σ1
K1
, 0)
F
(α2, β2−σ2,
σ2
K1
, 0)
D
F
(0, 0, 0, 0)
D
S2
P3
P1
(α3+β3−σ1, 0,
σ1
K1
, 0)
F
(α2, β2−σ2,
σ2
K1
, 0)
D
F
(0, 0, 0, 0)
D
S3
Figure 4: Extensive form when Player 2 goes first. The optimal solution is reached when all players follow the protocol.
model of this blockchain is quite different of that from Bitcoin and
Ethereum. Additionally, we choose to use Bitcoin because it is the
most widely used and thus easier to adopt in practice.
5.3 IoT Integrated with Blockchain
Christidis and Devetsikiotis explore the challenges and opportuni-
ties of blockchain and smart contracts for IoT in [6]. Their work
focuses on discovering use cases that distributed ledger technol-
ogy can solve and challenges found with integration of IoT. One
challenge that they do not discuss is the resource limitations of IoT,
which is the problem we propose a solution for. Our solution only
covers the value transfer portion of blockchain technology.
In [2], Aitzhan and Svetinovic propose a token-based system
similar to Bitcoin and coupled with an anonymous messaging sys-
tem to provide security and privacy for peer-to-peer energy trading.
They also include the ability to open unidirectional payment chan-
nels for partial payment. Their approach designs an anonymous
market revolving around energy trading. In our work, we focus
solely on bidirectional payment channels for the Bitcoin blockchain.
While application-specific blockchains and token systems including
[13] may provide a solution in specific domains, we would like to
explore general purpose solutions within IoT payment systems.
In [12], the authors focus on creating a local energy market for
matching energy orders in a decentralized manner. Their proposals
call for a private or permissible blockchain, which operates as a
decentralized trusted application. In this work, we focus on inte-
grating the existing end-user devices to IoT gateways on public
trustless blockchains.
In [8], Blockchain is evaluated for use in smart homes for IoT,
but the blockchain proposed does not use a trustless consensus
algorithm, which makes it a decentralized database for recording
Bitcoin Payment-Channels for Resource Limited IoT Devices COINS, May 5–7, 2019, Crete, Greece
internet-of-things devices activity. Reference [11] attempts a similar
objective for smart grid sensors and actuators. In our work, we
design a protocol that can be generally applied to public trustless
blockchains. Additionally, we aim to solve the problem of value
transfer rather than information assurance.
Our approach uses the Bitcoin blockchain for our protocol de-
sign. There are many other blockchains that have useful properties,
such as Ethereum [5], Litecoin, various Bitcoin forks, and many
others which have a different block time and can implement Turing-
complete scripting languages or provide differing features, such as
privacy and anonymity. However, payment channels are still in de-
velopment and on-chain transactions will still suffer from the high
fee problem that Bitcoin on-chain transactions do. In our future
work, we will analyze trade-offs between blockchain ecosystems
for IoT and cyber-physical system payments.
6 CONCLUSION
We design a real-time blockchain-based payment channel for IoT
devices to gateway services, which is less resource intensive than
existing solutions, and show that off-chain payment channels are
feasible for applications where IoT devices transfer value. We also
demonstrate that the protocol is crypto-economically fair by mod-
eling the protocol as a game, in which the equilibrium is reached
as long as the players follow the protocol and set the fees appro-
priately. In the future, we would like to generalize the protocol to
work with payment channels including interoperability with the
existing Lightning Network [16].
ACKNOWLEDGMENTS
This work is partly sponsored by the Air Force Office of Scientific
Research (AFOSR) under Grant YIP FA9550-17-1-0240, the Mary-
land Procurement Office under Contract No. H98230-18-D-0007,
and Wanger Institute for Sustainable Energy Research (WISER) at
Illinois Institute of Technology. The authors would like to thank
Anita Nikolich and Mohit Hota for their interesting discussion
and for feedback on the game theoretical modeling of the protocol
described.
REFERENCES
[1] 2010. Bitcoin Wiki. https://en.bitcoin.it/wiki. Accessed: 2018-05-28.
[2] N. Zhumabekuly Aitzhan and D. Svetinovic. 2016. Security and Privacy in Decen-
tralized Energy Trading through Multi-signatures, Blockchain and Anonymous
Messaging Streams. IEEE Transactions on Dependable and Secure Computing
(2016), 1–1. https://doi.org/10.1109/TDSC.2016.2616861
[3] James Basden and Michael Cottrell. 2017. How utilities are using blockchain to
modernize the grid. Harvard Business Review (2017).
[4] brainbot. 2018. The Raiden Network. https://raiden.network. Accessed: 2018-05-
28.
[5] Vitalik Buterin. 2014. Ethereum White paper: A Next Gerneration Smart Contract
and Decentralized Application Platform. Technical Report. 36 pages.
[6] K. Christidis and M. Devetsikiotis. 2016. Blockchains and Smart Contracts for
the Internet of Things. IEEE Access 4 (2016), 2292–2303. https://doi.org/10.1109/
ACCESS.2016.2566339
[7] Christian Decker and Roger Wattenhofer. 2015. A Fast and Scalable Payment
Network with Bitcoin Duplex Micropayment Channels. In Proceedings of the
17th International Symposium on Stabilization, Safety, and Security of Distributed
Systems - Volume 9212. Springer-Verlag, Berlin, Heidelberg, 3–18. https://doi.
org/10.1007/978-3-319-21741-3_1
[8] A. Dorri, S. S. Kanhere, R. Jurdak, and P. Gauravaram. 2017. Blockchain for IoT
security and privacy: The case study of a smart home. In 2017 IEEE International
Conference on Pervasive Computing and Communications Workshops (PerCom
Workshops). 618–623. https://doi.org/10.1109/PERCOMW.2017.7917634
[9] Matthew Green and Ian Miers. 2016. Bolt: Anonymous Payment Channels for
Decentralized Currencies. Cryptology ePrint Archive, Report 2016/701. https:
//eprint.iacr.org/2016/701.
[10] Harry A. Kalodner, Steven Goldfeder, Alishah Chator, Malte Möser, and Arvind
Narayanan. 2017. BlockSci: Design and applications of a blockchain analysis
platform. CoRR abs/1709.02489 (2017). arXiv:1709.02489 http://arxiv.org/abs/
1709.02489
[11] G. Liang, S. R.Weller, F. Luo, J. Zhao, and Z. Y. Dong. 2018. Distributed Blockchain-
Based Data Protection Framework for Modern Power Systems against Cyber
Attacks, In IEEE Transactions on Smart Grid (Early Access). IEEE Transactions
on Smart Grid. https://doi.org/10.1109/TSG.2018.2819663
[12] Esther Mengelkamp, Benedikt Notheisen, Carolin Beer, David Dauer, and Christof
Weinhardt. 2018. A blockchain-based smart grid: towards sustainable local energy
markets. Computer Science-Research and Development 33, 1-2 (2018), 207–214.
[13] Mihail Mihaylov, Sergio Jurado, Narcís Avellana, Kristof Van Moffaert, Ilde-
fons Magrans de Abril, and Ann Nowé. 2014. NRGcoin: Virtual currency for
trading of renewable energy in smart grids. In European Energy Market (EEM),
2014 11th International Conference on the. IEEE, 1–6.
[14] Satoshi Nakamoto. 2008. Bitcoin: A peer-to-peer electronic cash system. http:
//bitcoin.org/bitcoin.pdf.
[15] Joseph Poon and Vitalik Buterin. 2017. Plasma: Scalable Autonomous Smart
Contracts. https://plasma.io/plasma.pdf. Accessed: 2018-10-28.
[16] Joesph Poon and Thaddeus Dryja. 2016. The Bitcoin Lightning Network,: Scalable
Off-Chain Instant Payments.
[17] Serguei Popov. 2018. The Tangle. https://www.iota.org/research/
academic-papers. Accessed: 2018-10-28.
[18] Pieter Wuille. 2013. Bip32: Hierarchical Deterministic Wallets. https://github.
com/bitcoin/bips/blob/master/bip-0032.mediawiki. Accessed: 2018-05-28.
A BITCOIN TX SCRIPTS
Transaction 1 Funding Transaction Script OUT1
1: Redeem Script (r_S)
2: 2 <pk_A_FT > <pk_B_FT > 2 CHECKMULTISIG
3: Locking Script (l_S)
4: HASH160 <r_S_Hash> EQUAL
5: Unlocking Script (u_S)
6: 0 <siд_A_FT > <siд_B_FT > <r_S> <l_S>
7: where
8: r_S_Hash = RIPEMD160 (SHA256 (r_S))
Transaction 2 Mutual Close Transaction
1: In1 ▷ FT
2: Funding Transaction (FT)
3: Out1 ▷ A
4: Locking Script (l_S)
5: DUP HASH160 <H(pk_A_close )>
EQUALVERIFY CHECKSIG
6: Unlocking Script (u_S)
7: <siд_A_close> <pk_A_close>
8: Out2 ▷ B
9: Locking Script (l_S)
10: DUP HASH160 <H(pk_B_close )>
EQUALVERIFY CHECKSIG
11: Unlocking Script (u_S)
12: <siд_B_close> <pk_B_close>
13: where
14: H(pk) = RIPEMD160 (SHA256 (pk))
https://en.bitcoin.it/wiki
https://doi.org/10.1109/TDSC.2016.2616861
https://raiden.network
https://doi.org/10.1109/ACCESS.2016.2566339
https://doi.org/10.1109/ACCESS.2016.2566339
https://doi.org/10.1007/978-3-319-21741-3_1
https://doi.org/10.1007/978-3-319-21741-3_1
https://doi.org/10.1109/PERCOMW.2017.7917634
https://eprint.iacr.org/2016/701
https://eprint.iacr.org/2016/701
http://arxiv.org/abs/1709.02489
http://arxiv.org/abs/1709.02489
http://arxiv.org/abs/1709.02489
https://doi.org/10.1109/TSG.2018.2819663
http://bitcoin.org/bitcoin.pdf
http://bitcoin.org/bitcoin.pdf
https://plasma.io/plasma.pdf
https://www.iota.org/research/academic-papers
https://www.iota.org/research/academic-papers
https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki 
https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki 
COINS, May 5–7, 2019, Crete, Greece Christopher Hannon and Dong Jin
Transaction 3 Commitment i_a (Publishable by A)
1: In1 ▷ FT
2: Funding Transaction (FT)
3: Out1 ▷ A
4: Locking Script (l_S)
5: IF
6: W CHECKSEQUENCEVERIFY DROP DUP HASH160 <H(pk_A_i_a )> EQUALVERIFY CHECKSIG
7: ELSE
8: DUP HASH160 <H(pk_B_i_b )> EQUALVERIFY CHECKSIG DROP
DUP HASH160 <H(pk_A_i_c )> EQUALVERIFY CHECKSIG
9: ENDIF
10: Out2 ▷ B
11: Locking Script (l_S)
12: DUP HASH160 <H(pk_B_i_b )> EQUALVERIFY CHECKSIG
13: Out3 ▷ 3rd Party A (Economically Incentivized to publish to the blockchain)
14: 1 <pk_3rd_a_0> <pk_3rd_a_K> K1 CHECKMULTISIG
Transaction 4 Commitment i_b (Publishable by B)
1: In1 ▷ FT
2: Funding Transaction (FT)
3: Out1 ▷ B
4: Locking Script (l_S)
5: IF
6: W CHECKSEQUENCEVERIFY DROP DUP HASH160 <H(pk_B_i_a )> EQUALVERIFY CHECKSIG
7: ELSE ▷ 3rd Party B (Economically Incentivized to watch the blockchain)
8: 1 <pk_3rd_b_0> <pk_3rd_b_K> K2 CHECKMULTISIG DROP
DUP HASH160 <H(pk_B_i_c )> EQUALVERIFY CHECKSIG DROP
DUP HASH160 <H(pk_A_i_b )> EQUALVERIFY CHECKSIG
9: ENDIF
10: Out2 ▷ A
11: Locking Script (l_S)
12: DUP HASH160 <H(pk_A_i_b )> EQUALVERIFY CHECKSIG
Transaction 5 Recovery Transaction
1: In1 ▷ Commitment TX b
2: (Transaction 4, Output 1)
3: Unlocking Script (u_S)
4: <siд_A_i_b> <pk_A_i_b> <siд_B_i_c> <pk_B_i_c> <pk_3rd_b_α>
5: Out1 ▷ A
6: Locking Script (l_S)
7: DUP HASH160 <H(pk_A_i_rc )> EQUALVERIFY CHECKSIG
8: Unlocking Script (u_S)
9: <siд_A_i_rc> <pk_A_i_rc>
10: Out2 ▷ 3rd Party b
11: Locking Script (l_S)
12: DUP HASH160 <H(pk_3rd_b_ω )> EQUALVERIFY CHECKSIG
13: Out3 ▷ 3rd Party a
14: Locking Script (l_S)
15: 1 <pk_3rd_a_0> <pk_3rd_a_K> K1 CHECKMULTISIG DROP
	Abstract
	1 Introduction
	2 Background
	2.1 Off-Chain Bitcoin Transactions
	3 Protocol Design
	4 Security Analysis
	5 Related Work
	5.1 Simplified Payment Verification
	5.2 Payment Channels
	5.3 IoT Integrated with Blockchain
	6 Conclusion
	Acknowledgments
	References
	A Bitcoin TX Scripts