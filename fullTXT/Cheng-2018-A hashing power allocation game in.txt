A Hashing Power Allocation Game in Cryptocurrencies
A Hashing Power Allocation Game
in Cryptocurrencies
Yukun Cheng1, Donglei Du2, and Qiaoming Han3(B)
1 School of Business, Suzhou University of Science and Technology,
Suzhou, People’s Republic of China
ykcheng@amss.ac.cn
2 Faculty of Business Administration, University of New Brunswick,
Fredericton, NB, Canada
ddu@unb.ca
3 School of Data Science, Zhejiang University of Finance and Economics,
Hangzhou, People’s Republic of China
qmhan@zufe.edu.cn
Abstract. Various crypto-currencies backed by Blockchain technology
are now springing up like mushrooms. Miners in these peer-to-peer net-
works compete to maintain the validity of the underlying ledgers to earn
the bootstrapped crypto-currencies. With limited hashing power, each
miner needs to decide how to allocate their resource to different crypto-
currencies so as to achieve the best overall payoff. Together all the miners
form a hashing power allocation game. We consider the setting of the
game in which the miners are risk-neutral. We show that a unique pure
Nash Equilibrium exists and can be computed efficiently in this settings.
1 Introduction
With the advancement of the blockchain technologies (a.k.a., distributed ledger
technology), distributed applications (DApps) are burgeoning. Starting from the
bitcoin, many altcoins have been proposed to achieve different goals. At the time
of this writing, there are almost 1,600 cryptocurrencies with market capitaliza-
tion totalling approximate $456 billion1, and among them Bitcoin [5], Ethereum
[9] and Ripple [26] are the top three market-caped crypto-currencies.
Miners in these peer-to-peer networks play the important role of maintaining
the integrity of the underlying blockchains, incentivized to earn digital currencies
and transaction fees. Mining involves executing a distributed consensus protocol
on how to achieve agreement of the underlying ledger when there is no central
authority in presence. Among them, proof-of-work (PoW) [20], proof-of-stake
(PoS) [30] and proof-of-burn (PoB) [23] are the widely adopted consensus pro-
tocols by existing crypto-currencies.
For example, in the PoW framework, during a given average time period (e.g.,
every 10 min for Bitcoin), miners participate in a winner-take-all competition to
1 According to https://coinmarketcap.com/.
c© Springer Nature Switzerland AG 2018
X. Deng (Ed.): SAGT 2018, LNCS 11059, pp. 226–238, 2018.
https://doi.org/10.1007/978-3-319-99660-8_20
http://crossmark.crossref.org/dialog/?doi=10.1007/978-3-319-99660-8_20&domain=pdf
https://coinmarketcap.com/
A Hashing Power Allocation Game in Cryptocurrencies 227
extend the next block on the longest block chain by solving some cryptographic
hashing proof-of-work, a mathematical puzzle. As a concrete case, in Bitcoin
network, the puzzle goes as follows [33]: given a difficulty d > 0, a challenge c
and a nonce x (usually bit-strings), a function
Fd(c, x) → {TRUE,FALSE}
is called a Proof-of-Work (PoW) function if it has the following two properties:
(i) Fd(c, x) is fast to compute, given d, c, and x; and (ii) for fixed parameters
d and c, finding x such that Fd(c;x) = TRUE is computationally difficult but
feasible. The difficulty d is used to adjust the time to find such an x.
With miners equipped with certain computing power (a.k.a., hashing power
in Bitcoin network) and a large number of different cryptocurrencies to mine,
they are facing the challenge on how to allocate their computing power to com-
pete in mining each cryptocurrency to maximize their expected payoffs. Due to
the competitive nature of the mining protocol, all miners together form a non-
cooperative allocation game. This work aims to answer the following questions
associated with the aforementioned game: 1. Does Nash Equilibrium (NE) exist?
2. Is NE unique? 3. Can the NE be computed efficiently? We offer affirmative
answers to all three questions for the risk-neutral miners.
For the game with risk-neutral miners, we show that the Nash Equilibrium
allocation is unique and follows a proportional rule (Theorems 1 and 2) where
each miner will allocate his total computing power to a given crypto-currency
proportional to the percentage of the award among all currencies, while his
expected revenue is proportional to the percentage of the hashing power pos-
sessed and the total award.
The equilibrium analysis of the allocation game is of both theoretical and
practical relevance. On the theoretical side, we set up a succinct backbone model
which admits a closed-form solution via non-trivial technical analysis. On the
practical side, we provide insights which can help mining pool managers (such
as BTC.com [7], AntPool [3], Slush Pool [25], ViaBTC [32] and BTC.TOP [8],
etc.) or individual miners in making the most important operational/tactical
decisions, namely how to allocate the hashing power when facing under reward
and peer competition.
To filter out the most salient factors that are of managerial relevance, we
made some simplifications in the modelling, such as the the assumption that
the cost to purchase certain hashing power is independent from the price of the
currencies. However, this type of deviations from the realism on one hand may
be a good approximation to reality and on the other hand is to be expected in
an early attempt to apprehend an otherwise complex problem. Also, this work
focuses on static games, and leave the discussion of dynamic games to future
research.
Several blockchain games (mainly non-cooperative in nature) are proposed
in the recent literature to address and improve upon the limitations of existing
distributed consensus mechanism in various crypt-currencies [4,11,14,17,21,30],
while some other games (mainly non-cooperative in nature) focus on the appli-
cation layer without invoking any protocol technicality, such as the mining
228 Y. Cheng et al.
pool games [10,13,14,24,29]. Our computing power allocation game is non-
cooperative and focuses on the application layer; namely the allocation of mining
resource. Furthermore, these games all deal with a single currency, which is a
major difference from the game investigated in this work.
Our computing power allocation game is similar to the extensively-studied
general blotto game in the game theory literature [1,2,15,16,27], but the two
models have completely different utility functions to suit different applications
in mind.
Our game can be considered as a special case of the games investigated
in [12,31] in the context of P2P computing and post trading. However, our
game possesses special structure that are lacking in the latter and hence admits
stronger results. As a matter of fact, the games in [12,31] are so general that
they only guarantees the existence of Nash equilibrium, while our game admits
a unique pure Nash equilibrium with a closed-form solution.
The resource allocation nature is also relevant to the large literature on port-
folio management [18], and the market equilibrium model, in particular the
Fisher market [19,22]. However, the portfolio management literature usually
assume that the supply of assets is independent from the allocation decision.
And the Fisher market models focus on finding market-clearing prices and the
allocation rule at market equilibrium.
The readers are referred to the survey by [6] for research perspectives and
challenges for Bitcoin and cryptocurrencies.
2 The Computing Power Allocation Game
There are n miners N = {1, . . . , n} with computing powers h = (h1, . . . , hn)
(the cost to possess such a computing power, expressed in fiat currency such as
US dollar). There are m cryptocurrencies M = {1, . . . , m} available for mining.
Miner i ∈ N allocates xij ≥ 0 of his computing power to mine cryptocurrency
j. Evidently
∑
j∈M xij = hi, i ∈ N.
For each cryptocurrency j, the n miners play a winner-take-all game and
the winner is rewarded with uncertain reward R = (R1, . . . , Rm) (expressed in
fiat currency such as US dollar) with mean vector E[R] = μT = (μ1, . . . , μm)T .
Miner i ∈ N wins cryptocurrency j ∈ M with probability proportional to its
allocated computing power
pij =
xij∑
�∈N x�j
(1)
and his payoff for cryptocurrency j ∈ M is given by
πij(x) =
{
Rj − xij , w.p. pij
−xij , w.p. 1 − pij
Therefore miner i’s total payoff is given by
πi(x) =
∑
j∈M
πij(x) =
∑
j∈M
Rjpij −
∑
j∈M
xij =
∑
j∈M
Rj
xij∑
�∈N x�j
− hi = RT yi(x) − hi
A Hashing Power Allocation Game in Cryptocurrencies 229
where x = (xij)n×m ∈ R
n×m
+ and
yi(x) =
⎛
⎜⎜⎝
xi1
x11+...+xn1
...
xim
x1m+...+xnm
⎞
⎟⎟⎠ , i ∈ N. (2)
The mean of miner i’s payoff is given as follows
ER[πi(x)] = μT yi(x) − hi. (3)
3 Main Result
The Nash Equilibrium for risk-neutral miners can be obtained by solving the
following n optimization problems based on (3): for any given i ∈ N ,
max
xi·∈R
m
+
μT yi(x) =
∑
j∈M
xij∑n
h=1 xhj
μj (4)
s.t.
∑
j∈M
xij = hi
xij ≥ 0.
Let xi = (xij) be the allocation of miner i and x−i be the profile without
miner i’s allocation. For each risk-neutral miner, his object is to maximize the
expected utility from all of cryptocurrencies. So given an allocation profile x =
(xij) = (x1,x2, · · · ,xn), define Uij(x) to be the expected utility of miner i from
cryptocurrency j, i.e. Uij(x) = xij∑n
h=1 xhj
μj . Therefore the utility of miner i is
Ui(x) =
∑
j∈M Uij(x).
A power allocation profile x is a Nash equilibrium, if and only if no miner
benefits by changing his strategy unilaterally. However, there is one difficulty,
that is at the point where for some cryptocurrency j ∈ M , xij = 0 for each
i ∈ N , Ui is discontinuous. So we cannot apply the standard method in [28]
to study Nash equilibrium. We first propose the following lemma to show that
Nash equilibrium could not be at the discontinuous point.
Lemma 1. Given an allocation profile x. If there is at least a cryptocurrency j ∈
M with xij = 0 for each i ∈ N , then allocation x cannot be a Nash equilibrium.
Proof. W.l.o.g. we assume that xi1 = 0 for each i ∈ N . Then there must exist
another cryptocurrency, say j = 2, with xi2 > 0. Therefore, the allocation of
miner i is xi = (0, xi2, xi3, · · · , xim). Let us consider another allocation x′
i, with
x′
i1 = ε, x′
i2 = xi2 − ε and x′
ij = xij for each j = 3, · · · ,m, in which
0 < ε < min{xi2,
μ1(
∑
h∈N xh2)
2
μ1
∑
h∈N xh2 + μ2
∑
h�=i xh2
}.
On one hand, allocation x′
i is feasible as 0 < ε < xi2. On the other hand,
if other miners remain their allocations unchanged and miner i reallocate his
230 Y. Cheng et al.
computing power as x′
i unilaterally, then miner i will obtain the whole reward
from cryptocurrency 1 and his utility shall be
U ′
i = μ1 +
xi2 − ε∑
h∈N xh2 − ε
μ2 +
∑
j=3
xij∑
h∈N xhj
μj .
The difference of utility is
ΔUi = U ′
i − Ui = μ1 +
xi2 − ε∑
h∈N xh2 − ε
μ2 − xi2∑
h∈N xh2
μ2
= μ1 −
∑
h∈N,h�=i xh2μ2ε∑
h∈N xh2(
∑
h∈N xh2 − ε)
=
μ1(
∑
h∈N xh2)
2 − (μ1
∑
h∈N xh2 + μ2
∑
h�=i xh2)ε∑
h∈N xh2(
∑
h∈N xh2 − ε)
>
μ1(
∑
h∈N xh2)
2 − (μ1
∑
h∈N xh2 + μ2
∑
h�=i xh2)ε
(
∑
h∈N xh2)2
> 0.
The last inequality is from the definition of ε. Thus we can conclude that the
allocation x in which for some j ∈ M , xij = 0 for each i ∈ N , is not a Nash
equilibrium. ��
Conveniently, we define the following condition of an allocation x,
Condition 1 For each cryptocurrency j ∈ M ,
∑
i∈N xij > 0.
Based on Lemma 1, it is sufficient for us to study the Nash equilibrium at
such allocations satisfying Condition 1. From (4), we know the utility function of
miner i is linear and the domain {(xi1, xi2, · · · , xim)|∑j∈M xij = hi, xij ≥ 0}
is convex. Then by the first-order optimality condition, there exists Lagrange
multiplier αi > 0, such that
∂Ui
∂xij
=
∑
h�=i xhj
(
∑n
h=1 xhj)2
· μj
{
= αi if xij > 0,
≤ αi if xij = 0.
From another perspective, at an equilibrium, if miner i allocates positive com-
puting power for some cryptocurrencies, then he shall has the same marginal
value on these cryptocurrencies. Otherwise, he may have lower marginal value.
Therefore, we face another difficulty that how to characterize Nash equilibrium
at x satisfying Condition 1, but xij = 0 for some j ∈ M and i ∈ N . For this
purpose, we consider a kind of restricted strategy at first, that is for miner i, he
only changes his allocation between two cryptocurrencies j and k with
x′
ij = xij − ε, x′
ik = xik + ε, x′
i� = xi�, l �= j, k, (5)
where xij > 0 and ε > 0. For convenience, we call such a kind of strategy as a
restricted strategy on cryptocurrencies j and k.
Lemma 2. In the hash power allocation game, if all miners are only permitted
to play the restricted strategy, then an allocation x is a Nash equilibrium, if
A Hashing Power Allocation Game in Cryptocurrencies 231
and only if for each miner i ∈ N , there is a constant αi such that for each
cryptocurrency j,
∑
h�=i xhj
(
∑n
h=1 xhj)2
· μj = αi. (6)
Proof. Obviously, allocation x must satisfy Condition 1. W.l.o.g., assume miner
i plays the restricted strategy on cryptocurrencies j and k and his new allocation
x′ is shown as (5). It is possible that xik = 0. Clearly,
Uij(x
′
i,x−i) =
xij − ε∑n
h=1 xhj − ε
μj , Uik(x′
i,x−i) =
xik + ε∑n
h=1 xhk + ε
μk.
Since others’ allocations are unchanged and x′
i� = xi�, � �= j, k, we have
Ui�(x′
i,x−i) = Ui�(x), � �= j, k. Therefore
ΔUi = (Uij(x
′
i,x−i) − Uij(x)) + (Uik(x′
i,x−i) − Uik(x))
=
[
xij − ε∑n
h=1 xhj − ε
− xij∑n
h=1 xhj
]
· μj +
[
xik + ε∑n
h=1 xhk + ε
− xik∑n
h=1 xhk
]
· μk
=
− ∑
h�=i xhjμjε∑n
h=1 xhj(
∑n
h=1 xhj − ε)
+
∑
h�=i xhkμkε
∑n
h=1 xhk(
∑n
h=1 xhk + ε)
.
If the result of (6) holds, which means
∑
h�=i xhj
(
∑n
h=1 xhj)2
· μj =
∑
h�=i xhk
(
∑n
h=1 xhk)2
· μk,
then it is easy to deduce that,
∑
h�=i xhjμjε∑n
h=1 xhj(
∑n
h=1 xhj − ε)
>
∑
h�=i xhjμjε
(
∑n
h=1 xhj)2
=
∑
h�=i xhkμkε
(
∑n
h=1 xhk)2
>
∑
h�=i xhkμkε
∑n
h=1 xhk(
∑n
h=1 xhk + ε)
,
implying ΔUi ≤ 0.
On the other hand, we shall prove (6) is the necessary condition for a Nash
equilibrium allocation if each miner is only allowed to play the restricted strategy.
For this purpose, we try to prove that once the result of (6) does not hold, miner
i can get more utility by playing a restricted strategy.
W.l.o.g., suppose
∑
h�=i xhj
(
∑n
h=1 xhj)2
· μj <
∑
h�=i xhk
(
∑n
h=1 xhk)2
· μk,
There must exist an arbitrarily small constant ε > 0 such that
∑
h�=i xhjμj∑n
h=1 xhj(
∑n
h=1 xhj − ε)
<
∑
h�=i xhkμk∑n
h=1 xhk(
∑n
h=1 xhk + ε)
.
So
ΔUi =
− ∑
h�=i xhjμjε∑n
h=1 xhj(
∑n
h=1 xhj − ε)
+
∑
h�=i xhkμkε
∑n
h=1 xhk(
∑n
h=1 xhk + ε)
> 0
232 Y. Cheng et al.
It means that miner i can benefit by playing the restricted strategy on cryp-
tocurrencies j and k and the current allocation x is not a Nash equilibrium.
In addition, because of the arbitrariness of j and k (even though xik = 0),
we have the sufficient and necessary condition of any pure Nash equilibrium for
the restricted strategy that there is a constant αi for each miner i ∈ N and
∑
h�=i xhj
(
∑n
h=1 xhj)2
· μj = αi, ∀j ∈ M.
is satisfied. ��
Next let us turn to the characterization of any pure Nash equilibrium for more
general strategy. W.l.o.g., suppose the new allocation x′
i after manipulation is
x′
i1 = xi1 + ε1, x′
i2 = xi2 + ε2, · · · , x′
ik = xik + εk,
x′
i(k+1) = xi(k+1) − εk+1, · · · , x′
i(k+h) = xi(k+h) − εk+h,
x′
i(k+h+1) = xi(k+h+1), · · · , x′
im = xim, (7)
where each ε� > 0, x′
ij ≥ 0 for each j ∈ M , and
∑k
�=1 ε� =
∑h
�=1 εk+�.
Algorithm A is proposed in Table 1, which constructs a series of intermediate
allocations from xi to x′
i. For the sake of convenience, let x0
i = xi, x
p
i = x′
i and
the intermediate allocations are denoted by x1
i , · · · ,xp−1
i .
Table 1. The Algorithm to Construct Intermediate Allocations
Algorithm A
Input: Allocations x0
i = xi and xp
i = x′
i
Output: The intermediate allocations x1
i ,x
2
i , · · · ,xp−1
i .
1: Set t := 1, r := 1 and q := 1;
2: While t ≤ k and r ≤ h;
3: Set ηq = min{εt, εk+r};
4: Set xq
i� =
⎧
⎪⎨
⎪⎩
xq−1
i� + ηq, � = t
xq−1
i� − ηq, � = k + r
xq−1
i� , � �= t, k + r.
and Output allocation xq
i = (xq
i�);
5: If ηq = εt = εk+r;
Set t := t + 1, r := r + 1, q := q + 1 and go to line 2;
6: Else
7: If ηq = εt
Set εk+r := εk+r − ηq, t := t + 1, q := q + 1 and go to line 2;
8: If ηq = εk+r
Set εt := εt − ηq, r := r + 1, q := q + 1 and go to line 2.
A Hashing Power Allocation Game in Cryptocurrencies 233
Here we give an example to show how Algorithm A works.
Example 1. Suppose the strategic miner i changes his allocation to x′
i = (xi1 +
5, xi2 + 3, xi3 + 1, xi4 − 6, xi5 − 3, xi6). Then the intermediate allocations are
x0
i = (xi1, xi2, xi3, xi4, xi5, xi6);
x1
i = (xi1 + 5, xi2, xi3, xi4 − 5, xi5, xi6);
x2
i = (xi1 + 5, xi2 + 1, xi3, xi4 − 5 − 1, xi5, xi6);
x3
i = (xi1 + 5, xi2 + 1 + 2, xi3, xi4 − 5 − 1, xi5 − 2, xi6);
x4
i = (xi1 + 5, xi2 + 1 + 2, xi3 + 1, xi4 − 5 − 1, xi5 − 2 − 1, xi6).
Obviously, at least one of indices t and r is increased by 1 at each step in
Algorithm A. Because
∑k
�=1 ε� =
∑h
�=1 εk+�, then Algorithm A must terminate
at the case that ηq = εt = εk+r and obtain the last allocation x′. Thus Algo-
rithm A can be finished in at most k + h − 1 steps, which implies the time
complexity of Algorithm A is O(n). Furthermore these intermediate allocations
have several nice properties, which are necessary for us to obtain the result on
Nash equilibrium.
Lemma 3. Given the series of allocations x0
i ,x
1
i , · · · ,xp
i from Algorithm A. For
any two adjacent allocations xq−1
i and xq
i
1. xq
it = xq−1
it + ηq, xq
i(j+r) = xq−1
i(j+r) − ηq, and xq
i� = xq−1
i� , � �= t, k + r;
2. For any allocation xq
i , q = 1, 2, · · · , p, there exist three cases:
– Case 1. xq−1
it = xit + ω and xq−1
i(k+r) = xi(k+r), ω > 0;
– Case 2. xq−1
it = xit and xq−1
i(k+r) = xi(k+r) − ω, ω > 0;
– Case 3. xq−1
it = xit and xq−1
i(k+r) = xi(k+r).
Proof. The first claim is from line 4 in Algorithm A directly. The three cases in
the second claim are right from line 5-8 in Algorithm A. ��
Based on the previous analysis for the changing processes from xi to x′
i, the
following theorem shows the sufficient and necessary condition for the existence
of Nash equilibrium in Lemma 2 also holds, even though the miners are allowed
to play more general strategy.
Theorem 1. An allocation x in the hash power allocation game is a Nash equi-
librium, if and only if for each miner i ∈ N and any cryptocurrency j, there is
a constant αi satisfying
∑
h�=i xhj
(
∑n
h=1 xhj)2
· μj = αi. (8)
Proof. Of course, x satisfies Condition 1. Let us suppose x to be a Nash equi-
librium allocation, but Eq. (8) does not hold. By the proof in Lemma 2, miner i
can change his allocation to a new one x′
i shown as (5), to improve his utility.
It is a contradiction to the assumption that x is a Nash equilibrium.
234 Y. Cheng et al.
On the other hand, we shall prove that once an allocation x satisfies (8), it
must be a Nash equilibrium. W.l.o.g., suppose a strategic miner i changes his
allocation to x′
i as (7). So we can obtain a series of allocations x0
i ,x
1
i , · · · ,xp
i
from Algorithm A. The first claim in Lemma 3,
xq
it = xq−1
it + ηq, xq
i(k+r) = xq−1
i(k+r) − ηq, and xq
i� = xq−1
i� , � �= t, j + r,
shows that any two adjacent allocations xq
i and xq−1
i are the same, except for
the t-th and k + r-th elements. It can be viewed as miner i plays a restricted
strategy on two cryptocurrencies t and k + r from xq−1
i to xq
i . So we focus on
the change between xq
i and xq−1
i by using the similar proof in Lemma 2. There
are three cases for each xq
i , q = 1, · · · , p, in the second claim of Lemma 3. Here
we only concentrate on Case 1: xq−1
it = xit + ω and xq−1
i(k+r) = xi(k+r), ω > 0.
Suppose to the contrary that ΔUq
i = Ui(x
q
i ,x−i) − Ui(x
q−1
i ,x−i) > 0, then
0 < Ui(x
q
i ,x−i) − Ui(x
q−1
i ,x−i) =
(
xi(k+r)−ηq∑n
g=1 xg(k+r)−ηq
− xi(k+r)∑n
g=1 xg(k+r)
)
μk+r+
(
xit+ω + ηq∑n
g=1 xgt+ω+ηq
− xit+ω∑n
g=1 xgt+ω
)
μt.
It is equivalent to
(
∑
g �=i xgt)μt
(
∑n
g=1 xgt + ω)(
∑n
g=1 xgt + ηq + ω)
>
(
∑
g �=i xg(k+r))μk+r
(
∑n
g=1 xg(k+r))(
∑n
g=1 xg(k+r) − ηq)
⇔ ηq <
(
∑
g �=i xgt)μt(
∑n
g=1 xg(k+r))
2 − (
∑
g �=i xg(k+r))μk+r(
∑n
g=1 xgt + ω)2
(
∑
g �=i xgt)μt(
∑n
g=1 xg(k+r)) + (
∑
g �=i xg(k+r))μk+r(
∑n
g=1 xgt + ω)
. (9)
Since
(
∑
g �=i xgt) · μt
(
∑n
g=1 xgt + ω)2
<
∑
g �=i xgt · μt
(
∑n
g=1 xgt)2
=
∑
g �=i xg(k+r) · μk+r
(
∑n
g=1 xg(k+r))2
,
where the equation is from condition (8), we can continue (9) to be
ηq <
(
∑
g �=i xgt)μt(
∑n
g=1 xg(k+r))
2 − (
∑
g �=i xg(k+r))μk+r(
∑n
g=1 xgt + ω)2
(
∑
g �=i xgt)μt(
∑n
g=1 xg(k+r)) + (
∑
g �=i xg(k+r))μk+r(
∑n
g=1 xgt + ω)
< 0.
This contradicts to the condition that ηq > 0. Therefore ΔUq
i ≤ 0 for Case 1.
By the similar analysis, we also can get ΔUq
i ≤ 0 for other two cases. Thus
each ΔUq
i ≤ 0, q = 1, · · · , p. It is not hard to see that the total difference ΔUi
can be partitioned as
ΔUi =
[
Ui(x
1
i ,x−i) − Ui(x)
]
+ · · · +
[
Ui(x
′
i,x−i) − Ui(x
p−1
i ,x−i)
]
= ΔU1
i + · · · + ΔUp
i . (10)
It implies ΔUi ≤ 0, since each component ΔUq
i ≤ 0 in (10). So miner i can not
improve his utility by changing allocation from xi to x′
i. �
Based on the sufficient and necessary condition for a Nash equilibrium, we
will propose the closed-form solution of a pure Nash equilibrium and prove the
the uniqueness of such a pure Nash equilibrium in following theorem.
A Hashing Power Allocation Game in Cryptocurrencies 235
Theorem 2. A hash power allocation profile x = (xij) is a Nash equilibrium, if
and only if it has the form as xij = μj∑m
�=1 μ�
· hi, for any i ∈ N and j ∈ M .
Proof. It is not hard to see that once each xij has the form as xij = μj∑m
�=1 μ�
·hi,
then for any j ∈ M ,
∑
h�=i xhj
(
∑n
h=1 xhj)2
· μj =
∑n
h=1 hh − hi
(
∑n
h=1 hh)2
(
m∑
�=1
μ�),
which is irrelevant to the cyprocurrency j and such a ratio can be defined as αi.
Then the allocation x = (xij) with xij = μj∑m
�=1 μ�
· hi is a Nash equilibrium by
Theorem 1.
On the other hand, Theorem 1 tells us for any j ∈ M ,
∑
h�=i xhj
(
∑n
h=1 xhj)2
· μj = αi.
It implies
n∑
i=1
αi =
n∑
i=1
∑
h�=i xhj
(
∑n
h=1 xhj)2
μj =
(n − 1)
∑n
h=1 xhj
(
∑n
h=1 xhj)2
μj =
n − 1∑n
h=1 xhj
μj . (11)
From Eq. (11), we continue to have
n∑
i=1
αi =
(n − 1)μ1∑n
h=1 xh1
= · · · =
(n − 1)μm∑n
h=1 xhm
.
Then
μ1∑n
h=1 xh1
= · · · =
μm∑n
h=1 xhm
=
∑m
j=1 μj∑m
j=1
∑n
i=1 xij
=
∑m
j=1 μj∑n
i=1 hi
.
So
∑n
i=1 αi = (n − 1) ·
∑m
j=1 μj
∑n
i=1 hi
, which is a constant. On the other hand, from
Eq. (11), we can get
∑n
h=1 xhj
μj
=
n − 1∑n
i=1 αi
∀j ∈ M ; (12)
Then for any j ∈ M ,
αi =
∑
h�=i xhj
(
∑n
h=1 xhj)2
μj =
∑
h�=i xhj
μj
(
μj∑n
h=1 xhj
)2
=
∑
h�=i xhj
μj
(∑n
i=1 αi
n − 1
)2
, (13)
where the last equality is from (12). Also Eq. (13) guarantees
∑
h�=i xhj
μj
=
(n − 1)2αi
(
∑n
i=1 αi)2
. (14)
Furthermore, the difference between (12) and (14) is
xij
μj
=
n − 1∑n
i=1 αi
− (n − 1)2αi
(
∑n
i=1 αi)2
. (15)
236 Y. Cheng et al.
The right side of (15) shows xij
μj
is only related to index i which can be denoted
by γi. So xij = γiμj . In addition, by the condition of
∑m
j=1 xij = hi, we have
n∑
j=1
xij =
n∑
j=1
γiμj = γi
n∑
j=1
μj = hi.
Therefore, γi = hi∑n
j=1 μj
and xij = μj∑m
�=1 μ�
· hi. It concludes this claim. ��
Based on the result of Theorem 2 and the formation of each miner’s expected
payoff (3), we can easily get the following corollary.
Corollary 1 Under the pure Nash equilibrium allocation xij = μj∑m
�=1 μ�
· hi for
any i ∈ N and j ∈ M , each miner i’s expected payoff is hi∑n
�=1 h�
(
∑m
�=1 μ�).
4 Conclusion
This paper discusses the issue of a hashing power allocation game in cryptocur-
rencies, in which there are n miners equipped with certain computing power and
m different cryptocurrencies to be mined. Each miner shall allocate his com-
puting power in mining the cryptocurrencies properly to compete with others
to maximize his payoff. In this paper, we mainly consider the hashing power
allocation game with the risk-neutral objective. We show that the Nash Equilib-
rium allocation of this game is unique and follows a proportional rule where each
miner will allocate his total computing power to a given cryptocurrency propor-
tional to the percentage of the award among all currencies, while his expected
revenue is proportional to the percentage of the hashing power possessed and
total award.
Besides, the risk-averse objective is also interesting for us to consider in
the future. For each risk-averse miner i, he tries to minimize the uncertainty,
that is to minimize the objective of yi(x)T Σyi(x), subject to the constraint of∑
j∈M xij = hi. Here vector yi(x) is defined as (2) and Σ � 0 is the covariance
matrix of uncertain reward R, i.e. Σ = Cov[R]. For this kind of game, we are
also concerned about the existence and uniqueness of a pure Nash equilibrium.
In addition, how to compute a pure Nash equilibrium is our task too.
Acknowledgments. The first author’s research is partially supported by the National
Nature Science Foundation of China (No. 11301457). The second author’s research
is supported by the Natural Sciences and Engineering Research Council of Canada
(NSERC) grant 06446, and NNSF of China 11771386 and 11728104. The third author’s
research is supported by NSFC (No. 10971187) and the NSF of 415 Zhejiang Province
grant LQ12A01011.
A Hashing Power Allocation Game in Cryptocurrencies 237
References
1. Ahmadinejad, A.M., Dehghani, S., Hajiaghayi, M.T., Lucier, B., Mahini, H., Sed-
dighin, S.: Computing equilibria of blotto and other games, from duels to battefields
(2016)
2. Alpern, S., Howard, J.V.: Winner-take-all games: the strategic optimisation of
rank. Oper. Res. 65, 1165–1176 (2017)
3. AntPool. https://www.antpool.com/
4. Biais, B., Bisiere, C., Bouvard, M., Casamatta, C.: The Blockchain Folk Theorem.
In: Social Science Electronic Publishing (2017)
5. Bitcoin. https://bitcoin.org/en/
6. Bonneau, J., Miller, A., Clark, J., Narayanan, A., Kroll, J.A., Felten, E.W.:
Research perspectives and challenges for bitcoin and cryptocurrencies to appear.
pp. 104–121 (2015)
7. BTC.com. https://btc.com/
8. BTC.TOP. http://btc.top/
9. Ethereum. https://www.ethereum.org/
10. Eyal, I.: The Miner’s Dilemma, pp. 89–103. Computer Science (2015)
11. Eyal, I., Sirer, E.G.: Majority is not enough: bitcoin mining is vulnerable. Eprint
Arxiv 8437, 436–454 (2013)
12. Feldman, M., Lai, K., Zhang, L.: The proportional-share allocation market for com-
putational resources. IEEE Trans. Parallel Distrib. Syst. 20(8), 1075–1088 (2009)
13. Fisch, B., Pass, R., Shelat, A.: Socially optimal mining pools. In: International
Conference on Web and Internet Economics, pp. 205–218 (2017)
14. Göbel, J., Keeler, H.P., Krzesinski, A.E., Taylor, P.G.: Bitcoin blockchain dynam-
ics: the selfish-mine strategy in the presence of propagation delay. Perform. Eval.
104, 23–41 (2016)
15. Goldberg, L.A., Goldberg, P.W., Krysta, P., Ventre, C.: Ranking games that have
competitiveness-based strategies. In: ACM Conference on Electronic Commerce,
pp. 335–344 (2010)
16. Hart, S.: Discrete colonel blotto and general lotto games. Int. J. Game Theory
36(3–4), 441–460 (2008)
17. Kiayias, A., Koutsoupias, E., Kyropoulou, M., Tselekounis ,Y.: Blockchain mining
games. In: ACM Conference on Economics and Computation, pp. 365–382 (2016)
18. Markowitz, H.: Portfolio selection. J. Financ. 7(1), 77–91 (1952)
19. Mas-Colell, A., Whinston, M.D., Green, J.R.: Microeconomic Theory. Oxford Uni-
versity Press, Oxford (1995)
20. Nakamoto, S.: Bitcoin: a peer-to-peer electronic cash system. Consulted (2008)
21. Carlsten, M., Kalodner, H., Weinberg, S.M., Narayanan, A.: On the instability of
bitcoin without the block reward. In: ACM Sigsac Conference on Computer and
Communications Security, pp. 154–167 (2016)
22. Nisan, N., Roughgarden, T., Tardos, E., Vazirani, V.V.: Algorithmic Game Theory.
Cambridge University Press, Cambridge (2007)
23. Proof of burn. https://en.bitcoin.it/wiki/proofofburn
24. Parham, R.: The predictable cost of bitcoin. Social Science Electronic Publishing
(2017)
25. Slush Pool. https://slushpool.com/home/
26. Ripple. https://ripple.com/
27. Roberson, B.: The colonel blotto game. Econ. Theory 29(1), 1–24 (2006)
https://www.antpool.com/
https://bitcoin.org/en/
https://btc.com/
http://btc.top/
https://www.ethereum.org/
https://en.bitcoin.it/wiki/proofofburn
https://slushpool.com/home/
https://ripple.com/
238 Y. Cheng et al.
28. Rosen, J.B.: Existence and uniqueness of equilibrium points for concave n-person
games. Econometrica 33(3), 520–534 (1965)
29. Rosenfeld, M.: Analysis of bitcoin pooled mining reward systems. Computer Sci-
ence, December (2011)
30. Saleh, F.: Blockchain without waste: proof-of-stake (2017)
31. Shapley, L., Shubik, M.: Trade using one commodity as a means of payment. J.
Polit. Econ. 85(5), 937–968 (1977)
32. ViaBTC. https://viabtc.com/
33. Wattenhofer, R.: The Science of the Blockchain. CreateSpace Independent Pub-
lishing Platform, Charleston (2016)
https://viabtc.com/
	A Hashing Power Allocation Game in Cryptocurrencies
	1 Introduction
	2 The Computing Power Allocation Game
	3 Main Result
	4 Conclusion
	References