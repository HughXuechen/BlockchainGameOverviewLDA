Truthful, Practical and Privacy-Aware Demand Response in the Smart Grid via a Distributed and Optimal Mechanism
IEEE TRANSACTIONS ON SMART GRID, VOL. 11, NO. 4, JULY 2020 3119
Truthful, Practical and Privacy-Aware Demand
Response in the Smart Grid via a Distributed
and Optimal Mechanism
Georgios Tsaousoglou , Konstantinos Steriotis , Nikolaos Efthymiopoulos, Prodromos Makris, Member, IEEE,
and Emmanouel Varvarigos
Abstract—High penetration of Renewable Energy Sources in
modern smart grids necessitates the development of Demand
Response (DR) mechanisms as well as corresponding innovative
services for the emerging flexibility markets. From a game-
theoretic perspective, the key requirements for a DR mechanism
are: efficiency in terms of social welfare, practical applicabil-
ity, scalability, privacy and incentive compatibility, in the sense
of making it a dominant strategy for each user to act truth-
fully according to his/her real preferences, leaving no room for
cheating. Previous works typically address only a subgroup of
these requirements. In this paper, we propose a DR architecture,
including a mechanism based on Ausubel’s clinching auction and
a communication protocol, that provably guarantee both effi-
ciency and truthful user participation. Practicality/easiness of
participation is enhanced via simple queries, while scalability
and user privacy are preserved via a distributed implementa-
tion. Simulation results confirm the desired properties, while
also showing that the truthfulness property becomes even more
important in markets where participants are not particularly
flexible.
Index Terms—Demand response, auction, flexibility,
mechanism design, blockchain, incentive compatibility, game
theory.
NOMENCLATURE
Setting
N Set of participating users
n Number of participating users
i Index of user
T Set of timeslots
m Number of timeslots in the horizon
t Index of timeslot.
Flexibility Service Provider
L Aggregated consumption of all users
D Reduction of aggregated consumption
Manuscript received February 26, 2019; revised August 19, 2019,
November 8, 2019, and December 29, 2019; accepted December 29, 2019.
Date of publication January 9, 2020; date of current version June 19, 2020.
This work was supported by the European Union’s Horizon 2020 Research
and Innovation Programme through FLEXGRID Project under Grant 863876.
Paper no. TSG-00268-2019. (Corresponding author: Georgios Tsaousoglou.)
The authors are with the Institute of Communication and Computer
Systems, National Technical University of Athens, 157 80 Athens, Greece
(e-mail: geotsaousoglou@mail.ntua.gr).
Color versions of one or more of the figures in this article are available
online at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/TSG.2020.2965221
a, b Parameters of the FSP’s reward function
λ Per unit price for consumption reduction.
User
q Consumption reduction
q̃ Optimal consumption reduction
ω Inelasticity parameter.
Modified Clinching Auction
k, ξ Indexes of iteration
ε Price step
ζ Clinching (allocation) of consumption reduction for
a user.
Appliance Models
p Power consumption
pmax Power consumption upper limit
T Temperature
η, θ Parameters of temperature dynamics
γ EV arrival timeslot (plug-in time)
E Energy required by an EV
δ Minimum charging duration of an EV.
I. INTRODUCTION
IN MODERN smart grids, the need to dynamically balance
supply and demand, has brought a great deal of attention
to the idea of Demand Response (DR). When there is a need
for reducing energy consumption in real-time, an ad-hoc mar-
ket is created where the operator offers to buy consumption
reduction from the users. An intermediate entity is assumed,
with the task to clear the ad-hoc flexibility market. We refer
to this entity as the Flexibility Service Provider (FSP). Each
user (consumer) is equipped with a smart meter that measures
his/her consumption at all times. However, the users’ local
functions (related to their flexibility/comfort levels and con-
sumption habits) are private to each user. This makes the task
of the FSP quite challenging, especially when we consider
users who act strategically and may misinterpret their local
function if that makes them better-off.
In real-time DR, expecting the user to manually control
his/her appliances and bids in real-time is not realistic. Rather,
1949-3053 c© 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-8222-7027
https://orcid.org/0000-0002-5541-5073
3120 IEEE TRANSACTIONS ON SMART GRID, VOL. 11, NO. 4, JULY 2020
an intelligent agent sites on each user’s side that controls
the user’s DR actions and makes the user’s optimal bidding
decisions while respecting the user’s energy needs. Several
studies have leveraged methods from Artificial Intelligence
and proposed learning algorithms for optimizing the decisions
of such an energy management agent (e.g., [1]). However,
strategic agent behavior can compromise the efficiency of
the DR mechanism. In order to protect the system’s effi-
ciency, a mechanism needs to be not only optimal, but
also incentive compatible/truthful. This requirement is widely
overlooked in the DR literature. In the few cases where truth-
fulness is addressed, it comes with a sacrifice of practical
implementation ability and user privacy.
In Mechanism Design terms, a mechanism is Dominant
Strategy Incentive Compatible (DSIC) (or, equivalently, sat-
isfies the truthfulness property) when it is at each user’s
best interest to truthfully implement his/her true preferences,
regardless of what other users do (see [2, Sec.10.2.2] for a
more detailed analysis). In the vast majority of the DR litera-
ture users are typically modeled to myopically best-respond at
each iteration of the pricing mechanism, i.e., they decide upon
their preferred consumption upon receiving a price signal.
As analyzed in [3], such myopic “local rationality” does not
necessarily imply “global rationality”, i.e., given an iterative
mechanism, it is not always to the user’s best interest to
repeatedly best-respond. Rather, a user might be better-off by
submitting false bids through the process, and such strategic
behavior may compromise the mechanism’s efficiency [4]. In
other words, mechanisms that are not incentive compatible,
are no longer optimal when strategic players are involved.
In this paper we also address this requirement, defined as
the capability of the mechanism to provoke strategic users
to act truthfully in accordance to their preferences, which is
overlooked in most of the DR literature. Moreover, we do
so via an indirect and practical mechanism, which allows for
distributed, scalable and privacy-preserving implementation, in
contrast to the few studies that consider incentive guarantees.
II. RELATED WORK
In the DR literature, the end user is typically modeled as a
selfish player who participates in the mechanism with the pur-
pose of maximizing his/her own payoff. The user’s preferences
are widely modeled as a convex function (e.g., [5], [6], [7]).
In [8] the electricity bill is minimized while the user’s sat-
isfaction is maintained above a defined threshold. In [9], a
similar framework was built for deciding the charging times
of EVs under forecasted prices. In [10], a spread is applied
to the real-time prices in order to penalize deviations from a
predefined schedule. In these studies, the bill of a user depends
only on his/her own actions and it is disengaged from the
actions of others. Thus, the users’ DR actions might not be
well coordinated.
In [11], the authors assume that consumers voluntarily pro-
vide their consumption preferences to a central entity, which
optimizes the social welfare. Similarly, in [12], users esti-
mate their energy needs and report them to an aggregator.
In [13], a set of users enter into a direct-load-control contract
with a load serving entity, responsible to satisfy a DR event.
However, in [11]–[13], users were assumed to honestly reveal
their consumption preferences.
In contrast to the studies presented so far, [5] and [6], con-
sidered users that do not reveal their local preferences, and
the FSP controls their consumption indirectly by iteratively
updating prices and observing the aggregated consumption.
The authors use a dual decomposition method to discover the
optimal prices. A scalable approach is proposed in [14], where
smoothing techniques facilitate fast convergence. In [15],
the aggregator is modeled as a profit-maximizing entity and
a simulated annealing algorithm was adopted for the price
optimization problem. The authors in [16] configure the pric-
ing scheme with a forecast component. In [17], the authors
consider two simple billing rules and prove that best-response
dynamics converges to Nash Equilibrium. In [18] and [19],
pricing schemes are deployed with the objective of maximizing
the fairness of the consumption allocation. In [20], the effect
of the FSP’s profit policy on the DR outcome was examined.
However, in the studies of this paragraph, users are assumed
to truthfully best-respond to each price query, and thus they
don’t compromise the algorithm’s properties.
In mechanism design terms, the above mechanisms are
not incentive compatible, because a strategic user can benefit
by manipulating his/her responses. Note that the optimality
guarantees of the above studies, would no longer hold in
the case of strategic users. When considering strategic users
the mechanism designer is confronted with a trade-off: the
Vickrey-Clarke-Groves (VCG) mechanism is the unique wel-
fare maximizing mechanism implemented in dominant (and
not best-response) strategies [21], meaning that either a VCG
approach is taken (like in [22], [23]) or welfare maximization
is compromised (like in [24], [25], [26], [27]).
The main problem with the direct-revelation VCG
approaches [22], [23] is that they require users to reveal
their whole set of preferences to the FSP, while the latter
makes all the calculations and decides the allocation and the
rewards. This is clearly impractical, since real users cannot
compactly express their preferences in closed-form mathemat-
ical functions and even when they can, they are not happy
to compromise their privacy. These issues were also reported
in [28] and [29], where the authors proposed that the avail-
able actions for each user were restricted to a predefined set
in order to simplify the message space. However, the authors
in [28] do not model the effect of the user’s actions on the
price (similarly to [8], [9], [10]) and the authors in [29] con-
sider EV-charging users who are only interested in the overall
energy consumption over the horizon (which is not suitable for
other loads and neither for en-route charging EVs). Naturally,
these kinds of approximations result in loss of efficiency.
In this paper, we opt for a VCG-like approach, so as
to achieve social welfare maximization, but we omit the
direct-revelation approach of the typical VCG mechanism.
Instead, we design an iterative auction mechanism based on
Ausubel’s clinching auction, in which users are only required
to make decisions regarding their consumption in the pres-
ence of price signals. The convergence of the proposed method
can be dramatically accelerated, with a minimal loss of effi-
ciency for which we also prove a theoretical upper bound.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
TSAOUSOGLOU et al.: TRUTHFUL, PRACTICAL AND PRIVACY-AWARE DR IN SMART GRID VIA DISTRIBUTED AND OPTIMAL MECHANISM 3121
TABLE I
CLASSIFICATION OF LITERATURE BASED ON REQUIREMENTS
By adopting this approach, we are guaranteed the efficient
and incentive-compatible VCG outcome but also allow for a
scalable, distributed implementation and a privacy-preserving
communication protocol.
A distinct family of studies has elaborated on how the con-
sumption measurements of an individual user can be masked
in order to protect the user’s privacy (e.g., [31]). In [30]
a distributed authentication method is proposed, while [32]
exploits hash functions in order to serve secure data trans-
mission. Furthermore, [33] evolves load hiding techniques
and [34] proposes obfuscation technologies towards data pri-
vacy. In [35] and [36], the authors propose privacy-preserving
data aggregation methods with minimum overhead, while [37]
also accounts for the case of a malicious FSP. Finally, [38]
exploits adaptive key evolution, while [39] and [40] focus
on the consensus problem towards reliable communication in
fully distributed systems.
However, the studies of this family do not contribute to the
design of the pricing scheme per se and assume that prices only
depend on the aggregated consumption. This class of pricing
rules can result in an optimal allocation under assumptions
but it is not incentive compatible. The iterative mechanism
proposed in this paper, can be implemented in configuration
with a self-organized architecture that ensures privacy while
in the same time is able to exploit the aforementioned systems
in order to further enhance its level of security (in contrast to
the direct VCG mechanism).
Summarizing the above, our proposed DR architecture: i) is
suitable for a distributed implementation (unlike [22], [23]),
ii) achieves the VCG outcome and does not sacrifice efficiency
(unlike [24]–[27]), and iii) is incentive compatible (unlike [5],
[6], [8]–[20] and [30]–[40]). In Table I, we present the four rel-
evant requirements for a DR scheme and compare the proposed
scheme to the state of the art.
III. SYSTEM MODEL
We consider a flexibility market comprised of an FSP
and a set N � {1, 2, . . . , n} of n self-interested consumers,
hereinafter referred to as users. We also consider a dis-
crete representation of time, where continuous time is divided
into timeslots t ∈ T of equal durations s, where set T �
{1, 2, . . . , m} represents the scheduling horizon. Each user
possesses a number of controllable appliances, with each
appliance bearing an energy demand. If the consumptions of
different appliances are decoupled (independent of each other)
the appliances can participate in the DR mechanism virtually
Fig. 1. System Architecture.
as different users. Thus, we can consider one appliance per
user for ease of presentation.
A. User’s Consumption and Utility
The energy consumption of each user is measurable in real-
time and can be shed upon request, in exchange for monetary
compensation. Such a request for consumption modification is
called a DR-event. In this paper we cope with real-time DR.
Thus, the baseline consumption measurement is taken before
the DR call, so the user cannot manipulate it since he/she does
not know when a DR-event is going to occur.
The FSP takes on the task of providing the requested ser-
vice by calling a DR-event among the users of its portfolio,
which may include a micro-grid, or a local energy commu-
nity [41], [42]. Upon a DR-event in timeslot t, the FSP offers
a per-unit reward to the users for consumption reduction. User
i can respond by reducing his/her consumption by a quantity
qt
i, assumed to be positive (qt
i ≥ 0), without loss of general-
ity. The decisions for q can be taken by an intelligent agent
(on behalf of the actual user and according to the user’s pref-
erences) in order to disengage the actual user from real-time
participation. The system’s architecture is depicted in Fig. 1.
The consumption reduction qt
i is characterized by its feasible
set Qi (defined by a set of constraints on qt
i) and the dis-
comfort function di(qt
i) of user i. The discomfort function is
private to each user and expresses the minimum compensa-
tion in monetary units that a user requires, in order to reduce
his/her consumption by the corresponding amount. We make
the following assumptions on the form of function di(qt
i).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
3122 IEEE TRANSACTIONS ON SMART GRID, VOL. 11, NO. 4, JULY 2020
Assumption 1: Zero consumption reduction, brings zero
discomfort to the user: di(0) = 0.
Assumption 2: The discomfort function is convex, so that
additional increase of qt
i brings increasing discomfort to the
user:
qiA
t ≥ qiB
t ⇔ di
(
qiA
t + ε
) − di
(
qiB
t + ε
)
≥ di
(
qiA
t) − di
(
qiB
t),∀ε, qiA
t, qiB
t > 0.
Detailed example appliance models (including operational
constraints) are described in Section VII. The theoretical
results to be presented in the following sections are valid for
any user model that satisfies the assumptions above. A user’s
utility is defined as the difference between his/her discomfort
and the reward ri(qt
i) he/she receives:
Ui =
∑
t∈T
(
ri
(
qt
i
) − di
(
qt
i
))
(1)
In order to offer the rewards ri(qt
i), the FSP draws on the
reward offered by the operator requesting the reduction, as
described in the following subsection.
B. DR-Event and the FSP
Let Lt denote the aggregated consumption of all users in
N , as seen by the operator, within a certain time interval t.
The energy cost is modeled as a quadratic function of Lt, (like
in [5]–[7], [14], [17], [22]):
C
(
Lt) = c1 · Lt + c2 · (
Lt)2
Upon a DR-event at t, let Dt denote the reduction from baseline
consumption Lt
B to consumption Lt
B − Dt. The respective cost
reduction is:
C
(
Lt
B
) − C
(
Lt
B − Dt)
= c1 · Lt
B + c2 · (
Lt
B
)2 − c1 · (
Lt
B − Dt) − c2 · (
Lt
B − Dt)2
which reads:
C
(
Lt
B
) − C
(
Lt
B − Dt) = (
c1 + 2 · c2 · Lt
B
) · Dt − c2 · (
Dt)2
We set a = c1 + 2 · c2 · Lt
B and b = c2. The cost benefit
C(Lt
B) − C(Lt
B − Dt) is denoted as a reward function R(Dt):
Rt(Dt) = a · Dt − b · (
Dt)2
, Dt ∈ [
0, Lt
B
]
, (2)
where a, b are positive parameters with a ≥ 2bLt
B so that
it is an increasing function in the range of permitted values.
The proposed DR architecture is open to any other choice
of Rt(Dt), provided it is an increasing and concave function.
Thus, we assume that upon a DR-event, the operator offers a
marginal per-unit reward for a reduction of Dt units:
μ = d
(
Rt
(
Dt
))
d(Dt)
. (3)
IV. PROBLEM FORMULATION
We would like to facilitate the allocation of consumption
reduction among users so as to maximize social welfare. Social
welfare is defined as the difference between the revenues
Rt(Dt) that the FSP receives from the operator, as defined
in Eq. (2), and the sum of the discomforts caused to its users.
This problem is formulated as:
maximize
qt
i∈Qi,i∈N
{
Rt(Dt) −
∑
i∈N di
(
qt
i
)
}
(4)
subject to Dt =
∑
i∈N qt
i. (5)
Problem (4) is a convex optimization problem and could be
solved efficiently if the local functions di(qt
i) were known
(or truthfully disclosed). However, di(qt
i) of each user is not
known and thus, problem (4) is typically solved via dual
decomposition in the DR literature. In this approach, the FSP
iteratively increases a per-unit reward λ asking the users their
consumption reduction qt
i(λ) at each per-unit reward λ (auc-
tion query). At each iteration, each user i responds with his/her
preferred qt
i(λ). A truthful (locally optimal) response by user
i, denoted as ˜qt
i(λ), is the one that maximizes i’s utility for
reward λ. This is mathematically formulated as the solution
to maximization problem (6):
˜qt
i(λ) = argmaxqt
i∈Qi,i∈N
{
λ · qt
i − di
(
qt
i
)}
(6)
Clearly, ˜qt
i(λ) is non-decreasing in λ, since qt
i ≥ 0. The auction
terminates when λ reaches a value for which
∑
i∈N qt
i(λ) =
Dt(λ). The final price is called the market-clearing price and is
denoted by λmc. The allocation at λmc is efficient if the users
truthfully report their qt
i at each query. However, truthful report
may not be the best strategy for every user. To illustrate this,
we present the following example:
Illustrative Example: Consider two users and a given times-
lot t. User 1 operates a load of 10 kW while user 2 operates
a 50 kW load. Their discomfort function is di(qt
i) = ωi ·
(qt
i)
2, i ∈ {1, 2}, where their true flexibility parameters are
ω1 = ω2 = 0.1. The reward function is Rt(Dt) = 5 · (Dt).
Should they act according to their true discomfort function
parameters, their utilities (given by Eq. (1)) at equilibrium
would be U1 = U2 = 4.875. In case User 2 acts untruthfully
according to ω
fake
2 = 0.2, his/her utility at equilibrium will
be U2 = 7. Therefore, the best strategy for User 2 is to be
untruthful. �
The previous example demonstrates how the market-clearing
approach builds on the assumption that users behave myopi-
cally, by truthfully solving (6) at each iteration. The problem is
that if we relax the truthfulness assumption and consider strate-
gic users, market-clearing methods no longer result in efficient
allocations. Thus, it is very important to design a mechanism
that is not only efficient but also incentive compatible.
The Vickrey-Clarke-Groves (VCG) mechanism is the
unique mechanism that is simultaneously truthful and effi-
cient [21]. The VCG payment rule is the so called “Clarke
pivot rule”, which rewards each user i with an amount equal
to the difference that i’s presence makes in the welfare of other
users. In the direct VCG mechanism, users are asked to declare
their local functions di(qt
i) to the FSP (like in [22]). Because
of the Clarke pivot rule, it is a dominant strategy for each user
to make a truthful declaration [43]. In order to calculate the
VCG rewards, problem 4 is solved |N | + 1 times (one time
with each user in N absent to calculate the payments, plus
one time with all users present to calculate the allocation). The
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
TSAOUSOGLOU et al.: TRUTHFUL, PRACTICAL AND PRIVACY-AWARE DR IN SMART GRID VIA DISTRIBUTED AND OPTIMAL MECHANISM 3123
major drawback of the direct VCG mechanism is the require-
ment that the users disclose their discomfort functions di(qt
i)
to the FSP. This raises important issues such as privacy and
difficulty of implementation. In the next section, we propose
a modification of Ausubel’s Clinching auction [44], allowing
for a distributed implementation of VCG, designed to tackle
these issues.
V. AUSUBEL’S CLINCHING AUCTION FOR DR-EVENT
PARTICIPATION
The Clinching Auction (CA) is a well-known ascending
price auction that halts when demand equals supply. However,
in contrast to most auctions, allocation and rewards are not
cleared exclusively at the final iteration. Rather, the goods
(consumption reduction in our context) are progressively
allocated as the auction proceeds and payments are also pro-
gressively built, while the auction design guarantees that the
final allocation and payments coincide with the ones obtained
through VCG. Thus, both allocation efficiency and incentive
compatibility are achieved, while the aforementioned privacy
and implementation drawbacks of the direct-VCG mechanism
are effectively addressed.
In order for the CA to work in our setting, first we need
to reverse the price trajectory. In the proposed Modified
Clinching Auction (MCA), the FSP begins with a per-unit
reward λ = λmax and in each iteration k the price λk is
reduced by a small positive number ε. The size of ε adjusts
the discretization level of MCA. By Eq. (3), reward λmax is
d(Rt(0))
d(�Lt)
= a, which, as analyzed in Section III, is the high-
est value possible given that Rt is concave. Users respond by
bidding their preferred reduction ˜qt
i(λ) for each λ. We repre-
sent the user’s response at λ as the solution to the user utility
maximization problem (which is formally defined in Eq. (6)
of the previous section).
The user’s objective function is concave in qt
i, since λ · qt
i
is linearly increasing and di(qt
i) is convex by Assumption 2.
Also, the solution ˜qt
i is increasing in λ, which means that the
user’s response ˜qt
i gradually decreases as λ decreases. For the
MCA, we relax constraint (5) to the inequality:
Dt ≥
∑
i∈N qt
i (7)
Consider an arbitrary iteration k of the MCA and let Dt(λk)
denote the operator’s desired reduction for per-unit reward λk.
The central idea of the MCA is the following: if there is a set
N j ⊂ N for which we have
Dt
(
λk
)
−
∑
j∈N j
˜qt
j
(
λk
)
> 0 (8)
then we allocate a reduction equal to ζ k
i = Dt(λk) −
∑
j∈N j
˜qt
j(λ
k) to each user i /∈ N j at a per-unit reward λk. We
then say that user i “clinched” ζ k
i units. The MCA auction ter-
minates when set N j that satisfies condition (8) and set N , are
equal, that is, constraint (7) is satisfied. After that, it allocates
the remaining Dt(λ(k−1)) proportionally to the users that bid
in the second-to-last iteration. Algorithm 1 below, describes
the proposed MCA.
Algorithm 1 MCA : Modified Clinching Auction
1: Initialize λ0 = λmax, qt
i(λmax), Dt(λmax), k = 0
2: while Dt(λk) <
∑
i∈N ˜qt
i(λ
k) do
3: if there exists N j :
∑
j∈N j
˜qt
j(λ
k) < Dt(λk) then
4: clinch units ζ k
i = Dt(λk) − ∑
j∈N j
˜qt
j(λ
k) for all i /∈
N j at per-unit reward λk
5: else
6: set λ(k+1) = λk − ε and k = k + 1
7: ask each user a reduction query for λk and collect
the responses qt
i(λ
k)
8: ask the operator for the desired total reduction Dt(λk)
at per-unit reward λk
9: end if
10: end while
11: Clinch units ζ k
i =
(
qt
i(λ
k−1) − ∑k−1
ξ=0 ζ
ξ
i
)
· Dt(λk−1)
∑
i∈N qt
i(λ
k−1)
at
per-unit reward λk−1, for each i ∈ N
We are now in a position to prove the optimality of MCA
in terms of social welfare performance:
Theorem 1: The social welfare loss at the final allocation
of MCA is within ε2+λmax·ε
2b of the maximum possible.
Proof: The Proof is given in Appendix A.
Since we cope with a real-time application, the trade-off
between the mechanism’s optimality and its computational
time is of special importance. The latter directly relates to the
price-step ε, which means that Theorem 1 gives a quantifi-
cation of the trade-off described. In practice, for the relevant
use cases of price-anticipating users (described in the intro-
duction), the computational complexity of the MCA is small,
which allows for a very small choice of ε. To emphasize this,
it is useful to state the following corollary to Theorem 1.
Corollary 1: For ε << 1, the welfare loss grows linearly
with ε.
Because the MCA includes a price-sensitive response also
at the operator’s side, we have to verify that the properties of
efficiency and incentive compatibility still hold. This is proved
in the following Propositions.
Proposition 1: Truthful bidding is a dominant strategy in
MCA.
Proof: The proof is given in Appendix B.
Furthermore, the following properties of the VCG mecha-
nism hold also for the MCA:
Proposition 2: MCA is individually rational, weakly
budget-balanced, and achieves the maximum revenue for the
FSP among all efficient and individually rational mechanisms.
Proof: The proof is given in Appendix C.
VI. PRIVACY-PRESERVING DISTRIBUTED
IMPLEMENTATION
In the MCA auction users are only required to respond
to a specific sequence of queries, instead of communicating
their discomfort function. Thus, each participant solves an
optimization problem in parallel, while the mechanism still
achieves the VCG outcome (and its nice properties). This
allows the exploitation of blockchain services towards a DR
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
3124 IEEE TRANSACTIONS ON SMART GRID, VOL. 11, NO. 4, JULY 2020
architecture which is not only efficient and truthful but also
privacy-aware. In this section, we demonstrate how exactly the
proposed optimal and incentive compatible mechanism can be
configured with a scalable and privacy-preserving communi-
cation protocol that instantiates blockchain services. For this
purpose, we exploit [45].
The proposed DR architecture exploits blockchain
services [46], which are based on Distributed Hash Tables
(DHT) [47] technologies, in order to execute MCA in a
distributed fashion. In this context, users do not inform the
FSP about their answers to the MCA’s queries. Instead, the
necessary aggregations are realized via a DHT, which is
based on the scheme proposed by Kademlia [45]. Each user
(node) is identified by a number (nodeID) that can be seen as
a point in a specific virtual space. The nodeIDs do not serve
only as identification, but they are also used for answering
data base queries. Each piece of information is given as input
to a hash function whose output belongs to the virtual space.
Each node is responsible for a sub space of this virtual space
according to its nodeID. Furthermore, participating nodes
create and dynamically maintain routing tables in a bottom-up
and self-organized way. Thus, they can collectively reach any
point of this virtual space, by exploiting their routing tables,
in order to store and get information. The distributed execu-
tion of MCA (DE-MCA) takes place through the following
processes (see Algorithm 1 for the centralized version):
Process A - Data insertion: Each node i stores its bid
˜qt
i(λ
k) in another random node w through the use of the DHT
system [47]. In more detail, i hashes its id and stores ˜qt
i(λ
k)
and k in node w which is responsible for this id, based on
the Kademlia architecture. It is highlighted that w is different
for each i and k, as it is derived from the output of the hash
function that Kademlia uses. This means that the set of nodes
which are responsible for a specific data set is not determined
from the data set owners. Thus, collusion of a relatively small
number of malicious users to compromise privacy will fail.
Process B - Calculation of sums: The MCA algorithm
requires the calculation of n+1 different sums at each iteration
k. These are the n sums noted as
∑
j∈N j
˜qt
j(λ
k) (one for each
user absent) and the sum
∑
i∈N ˜qt
i(λ
k) of all user bids (see
Algorithm 1). The proposed system exploits a tree structure
and develops a distributed algorithm in order to calculate these
sums. To do so, each node w that participates in the calcula-
tion requests from the subset of nodes in its routing tables, that
dispose lower nodeID from it, to inform w on possible data
values which they dispose in order to send them to w. The
term “possible data values” refers to the aggregation of bids
(up to w) for iteration k of MCA that is executed at that time
instance. This process continues recursively until node MAX,
which is the node with the highest id acquires the desirable
data and calculates the sum
∑
i∈N ˜qt
i(λ
k). At this point, this
node also requests and receives Dt(λk) and checks the termi-
nation condition of MCA. If the termination condition doesn’t
hold, MAX proceeds by broadcasting
∑
i∈N ˜qt
i(λ
k) and Dt(λk)
to all nodes by using the aforementioned Kademlia tree.
Process C - Calculation of ζ k
i (λk): Each node w calculates
ζ k
i (λk) by subtracting from the broadcasted sum
∑
i∈N ˜qt
i(λ
k),
the value that is stored in it. Note that this is not its own ˜qt
i(λ
k)
value, and it doesn’t know whose it is. If the result is negative
then it sets ζ k
i (λk) = 0.
Process D - Tuple update: It is highlighted here that in
each iteration of MCA (e.g., the next iteration k+1) a differ-
ent instance of Kademlia tree is created, so that ζ k+1
i (λk+1) is
stored at a new node wk+1, other than wk. Thus, even in the
case that a set of nodes are malicious, data privacy is not com-
promised. The tuple Ak
i = {∑k
ξ=1 ζ
ξ
i (λξ ), λξ · ∑k
ξ=1 ζ
ξ
i (λξ )},
containing the allocation and payments of user i until iteration
k, is updated and passed from node wk to wk+1.
Process E - Final allocation and payments: At the final
iteration, the updated tuples Aκ
i are communicated to the FSP.
Note that the FSP receives only the final allocation and pay-
ments for each user, i.e., only the sum
∑
κ
k=1 ζ k
i (λk) and not
the intermediate values ζ k
i (λk). In this way the aforementioned
architecture ensures that the FSP and every other node that
participates in the system do not have the data to estimate the
local discomfort function di(·) of user i.
In Algorithm 2, the distributed execution of MCA is
described. In case of a malicious FSP (i.e., with no hes-
itations to break the law), more strict privacy assumptions
are needed, but this case is outside the scope of the present
work. The interested reader can refer to the recent literature of
privacy-preserving aggregation for the smart grid [30]–[38].
Since we cope with real-time DR it is important to note
that, except for line 18 (distributed calculation of sum), all
other operations of DE-MCA require constant time. Also, as
is well known in DHTs, the latency of line 18 increases log-
arithmically with the number of users. This results in a very
scalable implementation of the VCG mechanism, suitable for
real-time DR. We also verify this property in the next section.
VII. USER MODELS & PERFORMANCE DEMONSTRATION
In this section, we present detailed appliance models taken
from the literature and then use simulations to demonstrate the
advantages of the MCA and verify its properties. We also com-
pare MCA with the marginal cost pricing method [6] in terms
of truthfulness and FSP’s profits and with the direct-revelation
VCG method [22] in terms of scalability. Simulations were run
in MATLAB R2018b.
A. Detailed Appliance Models
The first model is taken from [6] and includes appliances
that control the temperature of an environment, such as HVAC
units. The user’s most preferable temperature is denoted by
parameter Tpref
i (t) and was taken in our experiments to be
uniformly distributed in the interval [75F, 79F]. The actual
room temperature, denoted by Tin
i (t), evolves according to
Tin
i (t) = Tin
i (t − 1) + η · [
Tout(t) − Tin
i (t − 1)
]
+ θ · (
pt
i,HVAC − qt
i,HVAC
)
(9)
where pt
i,HVAC is the user’s measurable power consumption
before the DR-event occurrence and qt
i,HVAC is the curtailment
resulting from the DR-event. Clearly, we have
pt
i,HVAC − qt
i,HVAC ≥ 0, (10)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
TSAOUSOGLOU et al.: TRUTHFUL, PRACTICAL AND PRIVACY-AWARE DR IN SMART GRID VIA DISTRIBUTED AND OPTIMAL MECHANISM 3125
Algorithm 2 DE-MCA : Distributed Execution of Modified
Clinching Auction
1: FSP sets ε, initializes λ0 = λmax, k = 0, tuples A0
i = {0, 0}
and communicates them to all nodes
2: Each node i receives λ0 and calculates ˜qt
i(λ
0)
3: Instance 0 of Kademlia tree is created (its root is noted
as MAX0)
4: Data insertion (each node i puts ˜qt
i(λ
0) to instance 0 of
Kademlia tree, see Process A)
5: Distributed calculation of
∑
i∈N ˜qt
i(λ
k) which ends at node
MAX0 (see Process B)
6: Node MAX0 requests Dt(λk) from FSP and checks the
termination condition
7: while Dt(λk) <
∑
i∈N ˜qt
i(λ
k) do
8: Node MAXk broadcasts
∑
i∈N ˜qt
i(λ
k) to all nodes
9: Each node wk in Kademlia tree, (where wk �= i)
calculates ζ k
i (λk) (see Process C)
10: Node wk updates the tuple Ak
i
11: Node MAXk sends to FSP signal to set k = k + 1
12: FSP sets k = k + 1 and λk = λk−1 − ε
13: kth Kademlia tree instance is created
14: Each node wk−1 passes tuple Ak−1
i to node wk
(Process D)
15: Node MAXk communicates λk to all nodes
16: User i receives λk and calculates ˜qt
i(λ
k)
17: Data insertion (each user i puts ˜qt
i(λ
k) to instance k of
Kademlia tree, see Process A)
18: Distributed calculation of
∑
i∈N ˜qt
i(λ
k) at node MAXk
(see Process B)
19: Node MAXk requests Dt(λk) from FSP and checks the
termination condition
20: end while
21: MAXk receives Dt(λk) and broadcasts
∑
i∈N ˜qt
i(λ
k) and
Dt(λk) to all nodes
22: Each node wk calculates ζ k
i (λk) = (˜qt
i(λ
k) − ∑k
ξ=0 ζ
ξ
i ) ·
Dt(λk)
∑
i∈N ˜qt
i(λ
k)
and updates tuple Ak
i
23: All nodes communicate Ak
i to FSP (Process E)
and we also have the operational constraint
pt
i,HVAC ≤ pt
i,max, (11)
In the experiments pt
i,max was set to 5 kW. Outdoors tem-
perature Tout(t) was the same for all users and represented a
typical summer day in Athens. Parameters η and θ where set
to 0.9 and 3, respectively. The discomfort for such users was
defined as the square difference between actual and desired
temperatures:
dtemp
i
(
qt
i
) = ω
temp
i,HVAC ·
(
Tin
i (t) − Tpref
i (t)
)2
(12)
where parameter ω
temp
i,HVAC expresses the user’s inelasticity in
timeslot t and was randomly selected in the range [0.10, 0.50].
The second model represents temporally flexible loads (e.g.,
EVs) and is taken from [16]. The EV is plugged-in at times-
lot γi (uniformly selected in the interval [3, 9], for one third
of the users and in the interval [14, 20] for the remaining
Fig. 2. Aggregated consumption as a function of time with and without the
DR-event.
two thirds). Each EV charges at power pt
i,EV and has a total
demand of Ei,EV kWhs, where Ei,EV was uniformly selected
in the interval [6, 36]. The user wants the EV to be charged
as soon as possible and any delay would bring discomfort.
This model accurately represents en-route charging EVs. The
desired charging duration, denoted as δi, was set to δi = 3
timeslots for all users. The upper power limit pt
i,max, was
selected as pt
i,max = Ei,EV
δi
. That is, if no DR-events occurred,
each user would charge his/her EV in 3 consequent timeslots.
An EV operational constraint is given as
pt
i,EV ≤ pi,max (13)
The EV cannot be charged before arrival:
pt
i,EV = 0, t < γi (14)
and must be fully charged before leaving:
∑
t∈T pt
i,EV ≥ Ei,EV . (15)
During a DR-event a user may choose to curtail qt
i,EV units and
shift charging to a later timeslot. This delayed charging (for
timeslots after γi +δi −1), comes with a discomfort defined as
dwait
i,EV
(
qt
iEV
) =
∑
t∈{T |t≥γi+δi}
[
(
ωwait
i,EV
)t−γi−δi+1 · pt
i,EV
]
(16)
where parameter ωwait
i,EV expresses the user’s inelasticity and
was uniformly selected in [1, 1.5].
B. Simulation Results
Over a time horizon of 24 timeslots, with a duration of
15 minutes for each timeslot and for a setting of 50 users,
we simulated a DR event in timeslot 17 (where there was a
peak in the aggregated consumption). The parameters of the
reward function were set to a = 3 and b = 0.05. We used step
ε = 10−3 in the MCA algorithm. Fig. 2 depicts the aggregated
consumption along all 24 timeslots. As the figure shows, there
is a consumption curtailment in timeslot 17 and a consequent
shift of consumption to timeslot 20. Note that it could not be
shifted to timeslots 18 or 19 because constraints (11) and (13)
where already tight for these timeslots.
Next, we investigate the effect that cheating has on the
FSP’s profits, denoted by �truthful for the case where users
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
3126 IEEE TRANSACTIONS ON SMART GRID, VOL. 11, NO. 4, JULY 2020
Fig. 3. Ratio �cheat/�truthful as a function of ωf .
Fig. 4. Proportional welfare loss of MCA as a function of the price step ε.
act truthfully and by �cheat for the case where they act
according to what brings them the highest utility. We plot the
ratio �cheat/�truthful for different values of users’ elasticities
{ωtemp
i,HVAC, ωwait
i,EV}. To do so, for each experiment we multiply
the users’ elasticity parameters by a positive factor ωf . Higher
values of ωf indicate more inelastic users. Fig. 3 shows that
the ratio �cheat/�truthful is maximized and is equal to 1 for the
MCA, verifying our theoretical results. For the marginal cost
pricing method [6], the FSP’s profit loss due to untruthfulness
rises with ωf (i.e., when users are less elastic), indicating that
our scheme’s truthfulness property becomes more important
in markets where participants are not particularly flexible.
Next, we simulated the DR-event for different values of the
step ε, measuring the proportional welfare loss
Wloss = Wopt − WMCA
Wopt
, (17)
where Wopt is the optimal welfare and WMCA is the welfare
achieved by the MCA. The simulation results in Fig. 4 verify
Corollary 1, which states that for small values of ε the upper
bound on the welfare loss grows linearly with ε.
Finally, we compare MCA to the direct-revelation VCG
method (proposed in [22]), in terms of scalability with respect
to the number of users. Simulations are carried out on an Intel
Core i7 4GHz, 64-bit, 16GB RAM, computer. The computa-
tional time of the method in [22] rises very quickly, which
makes it impractical for real-time applications. In contrast,
Fig. 5. Convergence time of MCA and VCG, as a function of the number
of users.
Fig. 6. Delay (latency) of privacy preserving protocol as a function of the
number of participating users.
MCA scales remarkably well to any number of users, since
the algorithm’s convergence time does not depend on the size
of set N . In order to evaluate the latency of DE-MCA we
assumed that the data network introduces a network delay
(between any two nodes) that follows a uniform distribution
between 5ms and 15ms. Fig. 6 depicts the latency introduced
by DE-MCA. It is defined as the total time overhead that the
proposed distributed implementation introduces due to data
network delays between any two data network nodes. As
it is known theoretically, in DHT technologies, this latency
increases logarithmically with the number of users. This is
verified in Fig. 6. In comparison to the timeslot duration (e.g.,
15 minutes, which is a typical granularity for measurements
and clearing of the balancing market), these results show that
the proposed system is both scalable and efficient.
C. Incentive Compatibility and the Case of Inelastic
Appliances
In this subsection we discuss the property of incentive com-
patibility. We verify the theoretical result of Proposition 1 and
also experimentally study incentive compatibility in the case
of inflexible appliances (where our Assumptions are not satis-
fied). We assume that one user misinterprets his/her discomfort
by manipulating his/her ωwait
i,EV . The untruthful user is indexed
by ch (for cheater). The cheater’s utility Uch is maximized for
a certain choice of ωch. Fig. 7 shows Uch as a function of ωch.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
TSAOUSOGLOU et al.: TRUTHFUL, PRACTICAL AND PRIVACY-AWARE DR IN SMART GRID VIA DISTRIBUTED AND OPTIMAL MECHANISM 3127
Fig. 7. Focal user’s utility as a function of ωch.
The black vertical line represents the focal user’s real ωwait
i,EV ,
denoted as ωreal. For the MCA, the user’s optimal choice of ω
(where Uch is maximized) coincides with ωreal, which means
that the user’s best strategy is to act truthfully, in contrast to
the marginal cost pricing method.
The result of Fig. 7 was expected, since it was already
proven in Proposition 1. Although we cannot state a similarly
strong theoretical guarantee for inflexible users, nevertheless
our simulations show similar results. We study the case where
an appliance is inflexible (Type 2 appliances of [14]), in the
sense that it can only be turned on or off, but its consumption
cannot take intermediate values:
pt
i,inel ∈ {
0, pt
i,max
}
, (18)
and thus,
qt
i,inel ∈ {
0, pt
i,max
}
. (19)
The user’s discomfort for turning his/her load off, is denoted
by doff
i,inel. Thus, the user’s discomfort function takes the form:
di,inel
(
qt
i,inel
) =
{
0, qt
i,inel = 0
doff
i,inel, qt
i,inel > 0
(20)
This kind of appliances violate Assumption 2. In fact, the form
of the user’s valuation exhibits complementarity (the user can
either curtail all pt
i,max KWhs, but cannot make use of an allo-
cation that is smaller than pt
i,max). In the presence of such
complementarities there is no tractable iterative auction that
can achieve incentive compatibility [48]. We present an exten-
sion of MCA that accommodates inflexible users and evaluate
it. Although we can no longer guarantee incentive compati-
bility, nevertheless simulation results show that, in practice,
truthful bidding is still the best choice for each user.
Let I denote the set of inflexible users. Also, let κ
denote the number of iterations until the auction halts (see
Appendix A). The first step is to run the MCA algorithm.
Then, we grant the MCA allocations ζ k
i ,∀k only to elastic
users i /∈ I. The remaining reduction
∑
κ
k=1
∑
i∈I ζ k
i , will be
reallocated amongst the inflexible users, in a way that respects
constraints (19). This is an instance of the knapsack problem.
In order not to compromise the computational time guarantees
of our real-time auction, we use a simple heuristic to solve it.
Algorithm 3 Extended Modified Clinching Auction
1: Run the MCA algorithm
2: set qt
i,inel = 0,∀i ∈ I
3: sort users i ∈ I, in increasing order of doff
i,inel/pi,max
4: set qt
i,inel = pi,max, for user i ∈ I, in increasing order of
the sorted list, until
∑
i∈I qt
i,inel �
∑
κ
k=1
∑
i∈I ζ k
i .
Fig. 8. Users’ Utility as a function of user’s interpreted elasticity ω.
Inflexible users are sorted in increasing order of their “bang-
for-buck” i.e., their doff
i,inel/pt
i,max. We allocate qt
i,inel = pt
i,max
to user i ∈ I, in increasing order of the sorted list, until
∑
i∈I qt
i,inel ≥ ∑
κ
k=1
∑
i∈I ζ k
i . The procedure is depicted in
Algorithm 3.
In Fig. 8, we present indicative results for various values of
pi,max and doff
i,inel, regarding truthfulness in the extended MCA.
More specifically, we tested how well a user does (in terms
of utility Ui, see Eq. (6)), by interpreting his/her elasticity
with various (untruthful) values ωch. The user’s actual discom-
fort for curtailing pi,max units is marked with a vertical dotted
line. From the figure, it becomes clear that the user already
achieves his/her maximum possible utility, by truthfully inter-
preting his/her discomfort and has nothing to gain by playing
untruthfully. This is, again, in contrast to the marginal cost
pricing approach [6].
VIII. CONCLUSION
In this paper we considered a setting of strategic, intelli-
gent users and an FSP seeking to incentivize them in order
to curtail part of their consumption in response to a real-
time DR-event. We showcased the inefficiency of previous
state-of-the-art approaches, which either do not consider user
incentives, or adopt a direct-revelation approach, respectively
leading to either lack of truthfulness and consequent ineffi-
ciency, or to lack of privacy and scalability. To overcome
these shortcomings, we presented a novel iterative auction
mechanism that implements the truthful and efficient VCG
outcome but also allows for a distributed implementation and
a privacy-preserving communication protocol. For this pur-
pose, we identified a suitable mechanism from the field of
mechanism design (Ausubel’s Clinching auction) and modified
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
3128 IEEE TRANSACTIONS ON SMART GRID, VOL. 11, NO. 4, JULY 2020
Fig. 9. Dt(λ) and
∑
i∈N qt
i(λ) as a function of λ.
it for a setting with continuous items (energy), where the
number of items is not fixed but bears a cost function (reward
function in our case). We extended the properties of the orig-
inal mechanism to the modified mechanism that we propose.
Furthermore, we proved a theoretical upper bound for the effi-
ciency loss caused by an increase in the price step, which
relates to a decrease in the mechanism’s computational time.
Our theoretical and simulation results verified that the
proposed scheme combines the desired properties with very
good performance and small overhead. Moreover, we also
implemented appliances that can only be turned on or off
without the ability to adjust their power consumption. In our
simulations, the proposed mechanism was shown to work very
well in the DR setting, even with these types of loads, despite
the fact that they do not satisfy the necessary assumptions.
APPENDIX A
PROOF OF THEOREM 1
The value of λ at which Dt = ∑
i∈N ˜qt
i is denoted as λmc,
which gives
Dt(λmc) =
∑
i∈N
˜qt
i(λmc). (21)
Let κ denote the number of iterations until the auction halts,
that is,
κ =
⌈
λmax − λmc
ε
⌉
, (22)
where 
·�, denotes the rounding to the nearest integer above.
We have
⌈
λmax − λmc
ε
⌉
≥ κ ≥ 1 +
⌈
λmax − λmc
ε
⌉
. (23)
After the last clinchings (line 11 of Algorithm 1) we have
efficiently allocated Dt(λκ−1) reduction units to the users.
The remaining Dt(λmc) − Dt(λκ−1) are not allocated and this
causes the loss of welfare Wloss, which is depicted as the grey
area in Fig. 9, where the red line represents Dt(λ) and the blue
line represents
∑
i∈N ˜qt
i(λ).
Since we remain agnostic of the closed form of
∑
i∈N ˜qt
i(λ
k), we assume the worst case and calculate an upper
bound on the sum of the gray plus the yellow area:
Wloss ≥ λmc ·
(
Dt(λmc) − Dt
(
λκ−1
))
+ 1
2
(
λκ−1 − λmc
)
·
(
Dt(λmc) − Dt
(
λκ−1
))
.
(24)
By substituting Dt(λ) = a−λ
2b , from Eq. (3), we get
Wloss ≥ λmc · (
λκ−1 − λmc
)
4b
+ λκ−1 · (
λκ−1 − λmc
)
4b
≥
(
λκ−1
)2 − (λmc)
2
4b
. (25)
By further substituting λκ−1 = λmax − ε · (κ − 1) and also
substituting κ, using the left inequality when κ appears with
a minus sign and the right inequality when it appears with a
plus sign, we finally obtain
Wloss ≥ ε2 + λmax · ε
2b
. (26)
APPENDIX B
PROOF OF PROPOSITION 1
Fix an iteration k and assume that user i bids qt
i,false(λ
k) �=
˜qt
i(λ
k) in that iteration. From step 4 of MCA, we see that
ζ k
i does not depend on qt
i but only on the other users’ bids
qt
j, j �= i. Thus, user i’s bid can affect i’s allocation only by
changing the λ at which the termination condition holds. This
means that a false bid qt
i,false(λ
k) will make a difference to i,
only if k is the last iteration. However, by definition of ˜qt
i(λ
k)
(see Eq. (6)), any bid qt
i,false(λ
k) �= ˜qt
i(λ
k) brings strictly lower
utility to user i at any iteration k. Thus, truthful bidding brings
the highest utility to user i.
APPENDIX C
PROOF OF PROPOSITION 2
The MCA auction is welfare maximizing (by Theorem 1,
for ε small enough) and truthful (by Proposition 1). Moreover,
the class of VCG mechanisms is the unique class that simul-
taneously achieves these two properties [21]. Since MCA
terminates with the VCG allocation and payments, it inherits
the property of individual rationality.
Regarding the weak budget balance property, it suffices to
show that our setting exhibits the no single-agent effect [2]
10.4.4. This is true if the aggregated utility of n–1 users
does not improve by adding a n-th user to the system. This
property holds in single-sided auctions with monotonous pref-
erences, since dropping a user only reduces the competition for
the remaining users, thus making them better-off. Moreover,
by [49], the VCG mechanism maximizes the auctioneer’s util-
ity, which means that the FSP buys flexibility units from the
users at the lowest possible price (among all efficient and
individually rational mechanisms).
REFERENCES
[1] F. Ruelens, B. J. Claessens, S. Vandael, B. De Schutter, R. Babuška,
and R. Belmans, “Residential demand response of thermostatically con-
trolled loads using batch reinforcement learning,” IEEE Trans. Smart
Grid, vol. 8, no. 5, pp. 2149–2159, Sep. 2017.
[2] Y. Shoham and K. Leyton-Brown, Multiagent Systems. Cambridge, U.K.:
Cambridge Univ. Press, 2009.
[3] N. Nisan, M. Schapira, G. Valiant, and A. Zohar, “Best-response
mechanisms,” in Proc. ICS, 2011, pp. 155–165.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
TSAOUSOGLOU et al.: TRUTHFUL, PRACTICAL AND PRIVACY-AWARE DR IN SMART GRID VIA DISTRIBUTED AND OPTIMAL MECHANISM 3129
[4] R. Johari, S. Mannor, and J. N. Tsitsiklis, “Efficiency loss in a network
resource allocation game: The case of elastic supply,” IEEE Trans.
Autom. Control, vol. 50, no. 11, pp. 1712–1724, Nov. 2005.
[5] P. Samadi, A. H. Mohsenian-Rad, R. Schober, V. W. S. Wong, and
J. Jatskevich, “Optimal real-time pricing algorithm based on utility
maximization for smart grid,” in Proc. 1st IEEE Int. Conf. Smart Grid
Commun., Gaithersburg, MD, USA, 2010, pp. 415–420.
[6] N. Li, L. Chen, and S. H. Low, “Optimal demand response based on
utility maximization in power networks,” in Proc. IEEE Power Energy
Soc. Gen. Meeting, Detroit, MI, USA, 2011, pp. 1–8.
[7] L. Gkatzikis, I. Koutsopoulos, and T. Salonidis, “The role of aggregators
in smart grid demand response markets,” IEEE J. Sel. Areas Commun.,
vol. 31, no. 7, pp. 1247–1257, Jul. 2013.
[8] S. Althaher, P. Mancarella, and J. Mutale, “Automated demand response
from home energy management system under dynamic pricing and
power and comfort constraints,” IEEE Trans. Smart Grid, vol. 6, no. 4,
pp. 1874–1883, Jul. 2015.
[9] Z. Wang and R. Paranjape, “Optimal residential demand response
for multiple heterogeneous homes with real-time price prediction in
a multiagent framework,” IEEE Trans. Smart Grid, vol. 8, no. 3,
pp. 1173–1184, May 2017.
[10] G. Tsaousoglou, P. Makris, and E. Varvarigos, “Electricity market poli-
cies for penalizing volatility and scheduling strategies: The value of
aggregation, flexibility, and correlation,” Sustain. Energy Grids Netw.,
vol. 12, pp. 57–68, Dec. 2017.
[11] M. Ahmadi, J. M. Rosenberger, W. J. Lee, and A. Kulvanitchaiyanunt,
“Optimizing load control in a collaborative residential microgrid envi-
ronment,” IEEE Trans. Smart Grid, vol. 6, no. 3, pp. 1196–1207,
May 2015.
[12] D. T. Nguyen and L. B. Le, “Joint optimization of electric vehicle and
home energy scheduling considering user comfort preference,” IEEE
Trans. Smart Grid, vol. 5, no. 1, pp. 188–199, Jan. 2014.
[13] O. Erdinç, A. Taşcikaraoǧlu, N. G. Paterakis, Y. Eren, and
J. P. S. Catalão, “End-user comfort oriented day-ahead planning
for responsive residential HVAC demand aggregation considering
weather forecasts,” IEEE Trans. Smart Grid, vol. 8, no. 1, pp. 362–372,
Jan. 2017.
[14] S. Mhanna, A. C. Chapman, and G. Verbič, “A fast distributed algorithm
for large-scale demand response aggregation,” IEEE Trans. Smart Grid,
vol. 7, no. 4, pp. 2094–2107, Jul. 2016.
[15] L. P. Qian, Y. J. A. Zhang, J. Huang, and Y. Wu, “Demand response
management via real-time electricity price control in smart grids,” IEEE
J. Sel. Areas Commun., vol. 31, no. 7, pp. 1268–1280, Jul. 2013.
[16] A. H. Mohsenian-Rad and A. Leon-Garcia, “Optimal residential load
control with price prediction in real-time electricity pricing envi-
ronments,” IEEE Trans. Smart Grid, vol. 1, no. 2, pp. 120–133,
Sep. 2010.
[17] P. Jacquot, O. Beaude, S. Gaubert, and N. Oudjane, “Demand response in
the smart grid: The impact of consumers temporal preferences,” in Proc.
IEEE Int. Conf. Smart Grid Commun. (SmartGridComm), Dresden,
Germany, 2017, pp. 540–545.
[18] G. Tsaousoglou, N. Efthymiopoulos, P. Makris, and E. Varvarigos,
“Personalized real time pricing for efficient and fair demand response
in energy cooperatives and highly competitive flexibility markets,”
J. Mod. Power Syst. Clean Energy, vol. 7, no. 1, pp. 151–162,
Jan. 2019.
[19] K. Steriotis, G. Tsaousoglou, N. Efthymiopoulos, P. Makris, and
E. Varvarigos, “A novel behavioral real time pricing scheme for the
active energy consumers’ participation in emerging flexibility markets,”
Sustain. Energy Grids Netw., vol. 16, pp. 14–27, Dec. 2018.
[20] K. Steriotis, G. Tsaousoglou, N. Efthymiopoulos, P. Makris, and
E. Varvarigos, “Development of real time energy pricing schemes
that incentivize behavioral changes,” in Proc. IEEE Int. Energy Conf.
(ENERGYCON), Limassol, Cyprus, 2018, pp. 1–6.
[21] J. Green and J. J. Laffont, “Characterization of strongly individually
incentive compatible mechanisms for the revelation of preferences for
public goods,” Econometrica, vol. 45, no. 2, pp. 427–438, 1977.
[22] P. Samadi, A. H. Mohsenian-Rad, R. Schober, and V. W. S. Wong,
“Advanced demand side management for the future smart grid
using mechanism design,” IEEE Trans. Smart Grid, vol. 3, no. 3,
pp. 1170–1180, Sep. 2012.
[23] E. Nekouei, T. Alpcan, and D. Chattopadhyay, “Game-theoretic frame-
works for demand response in electricity markets,” IEEE Trans. Smart
Grid, vol. 6, no. 2, pp. 748–758, Mar. 2015.
[24] N. Yaagoubi and H. T. Mouftah, “User-aware game theoretic approach
for demand management,” IEEE Trans. Smart Grid, vol. 6, no. 2,
pp. 716–725, Mar. 2015.
[25] J. Ma, J. Deng, L. Song, and Z. Han, “Incentive mechanism for demand
side management in smart grid using auction,” IEEE Trans. Smart Grid,
vol. 5, no. 3, pp. 1379–1388, May 2014.
[26] A. C. Chapman and G. Verbič, “An iterative on-line auction mech-
anism for aggregated demand-side participation,” IEEE Trans. Smart
Grid, vol. 8, no. 1, pp. 158–168, Jan. 2017.
[27] G. Tsaousoglou, K. Steriotis, N. Efthymiopoulos, K. Smpoukis, and
E. Varvarigos, “Near-optimal demand side management for retail elec-
tricity markets with strategic users and coupling constraints,” Sustain.
Energy Grids Netw., vol. 19, Sep. 2019, Art. no. 100236.
[28] S. Li, W. Zhang, J. Lian, and K. Kalsi, “Market-based coordination
of thermostatically controlled loads—Part I: A mechanism design for-
mulation,” in Proc. IEEE Power Energy Soc. Gen. Meeting (PESGM),
Boston, MA, USA, 2016, pp. 1–11.
[29] E. Bitar and Y. Xu, “Deadline differentiated pricing of deferrable electric
loads,” IEEE Trans. Smart Grid, vol. 8, no. 1, pp. 13–25, Jan. 2017.
[30] H. J. Jo, I. S. Kim, and D. H. Lee, “Efficient and privacy-preserving
metering protocols for smart grid systems,” IEEE Trans. Smart Grid,
vol. 7, no. 3, pp. 1732–1742, May 2016.
[31] F. Knirsch, G. Eibl, and D. Engel, “Error-resilient masking approaches
for privacy preserving data aggregation,” IEEE Trans. Smart Grid, vol. 9,
no. 4, pp. 3351–3361, Jul. 2018.
[32] P. Gope and B. Sikdar, “Lightweight and privacy-friendly spatial
data aggregation for secure power supply and demand management
in smart grids,” IEEE Trans. Inf. Forensics Security, vol. 14, no. 6,
pp. 1554–1566, Jun. 2019.
[33] D. Egarter, C. Prokop, and W. Elmenreich, “Load hiding of house-
hold’s power demand,” in Proc. IEEE Int. Conf. Smart Grid Commun.
(SmartGridComm), 2014, pp. 854–859.
[34] A. Awad, P. Bazan, and R. German, “Privacy aware demand response
and smart metering,” in Proc. IEEE 81st Veh. Technol. Conf.
(VTC Spring), 2015, pp. 1–5.
[35] P. Gope and B. Sikdar, “An efficient data aggregation scheme for
privacy-friendly dynamic pricing-based billing and demand-response
management in smart grids,” IEEE Internet Things J., vol. 5, no. 4,
pp. 3126–3135, Aug. 2018.
[36] P. Gope and B. Sikdar, “An efficient privacy-friendly hop-by-hop data
aggregation scheme for smart grids,” IEEE Syst. J., to be published,
doi: 10.1109/JSYST.2019.2899986.
[37] A. Braeken, P. Kumar, and A. Martin, “Efficient and privacy-preserving
data aggregation and dynamic billing in smart grid metering networks,”
Energies, vol. 11, no. 8, p. 2085, 2018.
[38] H. Li, X. Lin, H. Yang, X. Liang, R. Lu, and X. Shen, “EPPDR: An
efficient privacy-preserving demand response scheme with adaptive key
evolution in smart grid,” IEEE Trans. Parallel Distrib. Syst., vol. 25,
no. 8, pp. 2053–2064, Aug. 2014.
[39] R. Olfati-Saber, J. A. Fax, and R. M. Murray, “Consensus and coop-
eration in networked multi-agent systems,” Proc. IEEE, vol. 95, no. 1,
pp. 215–233, Jan. 2007.
[40] R. Olfati-Saber and R. M. Murray, “Consensus problems in networks of
agents with switching topology and time-delays,” IEEE Trans. Autom.
Control, vol. 49, no. 9, pp. 1520–1533, Sep. 2004.
[41] P. Makris et al., “Digitization era for electric utilities: A novel business
model through an inter-disciplinary S/W platform and open research
challenges,” IEEE Access, vol. 6, pp. 22452–22463, 2018.
[42] I. Mamounakis, N. Efthymiopoulos, G. Tsaousoglou, D. J. Vergados,
P. Makris, and E. Varvarigos, “A novel pricing scheme for virtual com-
munities towards energy Efficiency,” in Proc. IEEE Int. Energy Conf.
(ENERGYCON), Limassol, Cyprus, 2018, pp. 1–6.
[43] V. Krishna, Auction Theory. New York, NY, USA: Academic, 2002.
[44] L. M. Ausubel, “An efficient ascending-bid auction for multiple objects,”
Amer. Econ. Rev., vol. 94, no. 5, pp. 1452–1475, 2004.
[45] P. Maymounkov and D. Mazières, “Kademlia: A peer-to-peer
information system based on the XOR metri,” in Proc. Peer-to-Peer
Syst. IPTPS, 2002, pp. 53–65.
[46] G. Zyskind, O. Nathan, and A. Pentland, “Decentralizing privacy: Using
blockchain to protect personal data,” in Proc. IEEE Security Privacy
Workshops, San Jose, CA, USA, 2015, pp. 180–184.
[47] G. Xylomenos et al., “A survey of information-centric networking
research,” IEEE Commun. Surveys Tuts., vol. 16, no. 2, pp. 1024–1049,
2nd Quart., 2014.
[48] F. Gul and E. Stacchetti, “Walrasian equilibrium with gross substitute,”
J. Econ. Theory, vol. 87, no. 1, pp. 95–124, 1999.
[49] V. Krishna and M. Perry, Efficient Mechanism Design, Game Theory Inf.,
Univ. Library Munich, Munich, Germany, 1998. [Online]. Available:
https://EconPapers.repec.org/RePEc:wpa:wuwpga:9703010
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/JSYST.2019.2899986
3130 IEEE TRANSACTIONS ON SMART GRID, VOL. 11, NO. 4, JULY 2020
Georgios Tsaousoglou received the Ph.D. degree
from the National Technical University of Athens
(NTUA) in 2019. He has been working in various
H2020 EU projects in the area of smart grids as well
as with the Greek Independent System Operator. He
is currently a Senior Researcher with NTUA and a
Marie Curie Fellow with the Technical University of
Eindhoven (host) and Denmark Technical University
(co-host). His research interests include multiagent
systems, algorithmic game theory, optimization and
artificial intelligence applied to the area of the smart
grid and especially to electricity markets, demand response, and electric
vehicles.
Konstantinos Steriotis received the Diploma degree
in electrical and computer engineering from the
National Technical University of Athens, Athens,
Greece, in 2013, where he is currently pursuing the
Ph.D. degree. His research interests are in the area of
smart grids and especially energy markets, demand
side management, and energy storage systems.
Nikolaos Efthymiopoulos was born in 1980. He
received the Ph.D. degree in computer science
in 2010. He is currently a Senior Researcher
with the National Technical University of Athens,
Athens, Greece. Since 2004, he has been par-
ticipated in the coordination of various projects
(FP7-ICT-VITAL++, FP7-ICT-STEER, H2020-ICT-
SOCIALENERGY, H2020-EE-FLEXGRID). His
research activities include scalable optimization,
theory of dynamical systems, pattern recognition,
big data, distributed searching, market architectures,
pricing, data networks, online social networks, and smart grids. He has more
than 40 publications in the above areas.
Prodromos Makris (Member, IEEE) was born
in 1985. He received the B.Sc., M.Sc., and
Ph.D. degrees from the University of the Aegean,
Mytilene, Greece, in 2007, 2009, and 2013, respec-
tively. He is currently a Senior Researcher with
ICCS/NTUA (National Technical University of
Athens), Athens, Greece. During the last years, he
has been actively participating in several national
and EC-funded research and innovation projects. He
has more than 40 publications in international con-
ferences and journals. His research interests include
context-aware mobile and wireless networking in the 5G and beyond era,
Internet of Things and their applicability in smart energy networks, and
resource management algorithms for energy efficiency. He has recently served
as the Technical Manager for FP7 VIMSEN-GA-619547 and H2020-GA-
731767 SOCIALENERGY projects. He is currently the Technical Manager
of H2020-GA-863876 FLEXGRID project. He is a member of the Technical
Chamber of Greece.
Emmanouel (Manos) Varvarigos received the
Diploma degree in electrical and computer engi-
neering from the National Technical University of
Athens in 1988, and the M.S. and Ph.D. degrees
in electrical engineering and computer science from
the Massachusetts Institute of Technology in 1990
and 1992, respectively. He has held faculty positions
with the University of California, Santa Barbara,
CA, USA, (as an Assistant and later an Associate
Professor), the Delft University of Technology (as
an Associate Professor), the University of Patras (as
a Professor), and Monash University (as a Professor and the Head of ECSE
Department). He is currently a Professor with the ECE Department, National
Technical University of Athens. He is a member of the board of the Computer
Technology Institute—Diophantus, where he has been the Director and then
the Scientific Director of the Greek School Network Division since 2003 the
main public ISP in Greece connecting more than 20 000 schools and other
educational units, which has a major role in the development of network tech-
nologies and telematic services in Greece. He has participated in more than
40 U.S.- and EU-funded research projects in the areas of networking, smart
energy grids, and grid and cloud computing, and in many national research
projects, and has been the Consortium Coordinator in eight of them. He has
over 380 publications in refereed international journals and conferences.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:35:01 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice