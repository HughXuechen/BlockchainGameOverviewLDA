Blockchain-Based Incentive Energy-Knowledge Trading in IoT: Joint Power Transfer and AI Design
IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022 14685
Blockchain-Based Incentive Energy-Knowledge
Trading in IoT: Joint Power Transfer and AI Design
Xi Lin , Graduate Student Member, IEEE, Jun Wu , Member, IEEE,
Ali Kashif Bashir , Senior Member, IEEE, Jianhua Li, Member, IEEE, Wu Yang, and Md. Jalil Piran
Abstract—Recently, edge artificial intelligence techniques (e.g.,
federated edge learning) are emerged to unleash the potential
of big data from Internet of Things (IoT). By learning knowl-
edge on local devices, data privacy preserving and Quality of
Service (QoS) are guaranteed. Nevertheless, the dilemma between
the limited on-device battery capacities and the high energy
demands in learning is not resolved. When the on-device battery
is exhausted, the edge learning process will have to be inter-
rupted. In this article, we propose a novel wirelessly powered
edge intelligence (WPEG) framework, which aims to achieve
a stable, robust, and sustainable edge intelligence by energy
harvesting (EH) methods. First, we build a permissioned edge
blockchain to secure the peer-to-peer (P2P) energy and knowl-
edge sharing in our framework. To maximize edge intelligence
efficiency, we then investigate the wirelessly powered multiagent
edge learning model and design the optimal edge learning strat-
egy. Moreover, by constructing a two-stage Stackelberg game, the
underlying energy-knowledge trading incentive mechanisms are
also proposed with the optimal economic incentives and power
transmission strategies. Finally, simulation results show that our
incentive strategies could optimize the utilities of both parties
compared with classic schemes, and our optimal learning design
could realize the optimal learning efficiency.
Index Terms—Edge intelligence, game theory, incentive mech-
anism, permissioned blockchain, wireless power transfer (WPT).
I. INTRODUCTION
THE EMERGING artificial intelligence (AI) technology
(e.g., machine learning) is a promising way to cope with
the data explosion of Internet-of-Things (IoT) applications.
The knowledge that AI learns from IoT data could bring many
benefits to the Quality of Service (QoS) of IoT users [1].
Manuscript received 14 June 2020; revised 21 August 2020 and
31 August 2020; accepted 10 September 2020. Date of publication
15 September 2020; date of current version 8 August 2022. This work was
supported by the National Natural Science Foundation of China under Grant
61831007 and Grant 61972255. (Corresponding author: Jun Wu.)
Xi Lin, Jun Wu, and Jianhua Li are with the School of Cyber Security
and Shanghai Key Laboratory of Integrated Administration Technologies for
Information Security, Shanghai Jiao Tong University, Shanghai 200240, China
(e-mail: linxi234@sjtu.edu.cn; junwuhn@sjtu.edu.cn; lijh888@sjtu.edu.cn).
Ali Kashif Bashir is with the School of Computing, Mathematics,
and Digital Technology, Manchester Metropolitan University, Manchester
M156BH, U.K., and also with the School of Information and Communication
Engineering, University of Electronics Science and Technology of China,
Chengdu 611731, China (e-mail: dr.alikashif.b@ieee.org).
Wu Yang is with the Information Security Research Center,
Harbin Engineering University, Harbin 165001, China (e-mail:
yangwu@hrbeu.edu.cn).
Md. Jalil Piran is with the Department of Computer Science
and Engineering, Sejong University, Seoul 05006, South Korea
(e-mail: piran@sejong.ac.kr).
Digital Object Identifier 10.1109/JIOT.2020.3024246
However, the traditional cloud-centric learning paradigm faces
many challenges, such as high maintenance costs, data privacy
risk, and high service delay. According to [2], over 6 bil-
lion smartphones and 50 billion IoT devices will appear by
2020 with abundant underutilized computing, communication,
and storage resources. These large-scale smart devices could
address cloud-centric learning challenges. Thus, the on-device
federated edge learning (FEL) paradigm was proposed by
Google in 2016 [3]. It employs smart edge devices to per-
form model training in a distributed and collaborative manner,
also known as “edge intelligence” or “edge AI” [4]. Only
local submodels (knowledge) rather than raw data will be
uploaded and aggregated in FEL, which ensures local data
privacy-preserving and better resource utilization [5], [6].
On-device FEL has many advantages over cloud-centric
learning, but the learning performance is likely compromised
by insufficient battery energy in traditional battery-powered
edge devices, such as mobile phones, unmanned aerial vehicle
(UAV), and IoT devices. On the one hand, the local model
training will consume limited battery power for the CPU cycles.
On the other hand, edge devices are required to repeatedly
communicate with the sink node (e.g., base station) to iter-
atively update the learning model, which also places severe
demands on the battery level. Most previous works [7], [8]
assume that the battery power of edge devices is sufficient to
support the whole learning process, while this is not feasible in
many practical scenarios. In fact, the on-device FEL process
will be interrupted and smart edge devices cannot execute
learning services if the battery is exhausted. So, the current
edge intelligence framework is not stable and robust enough.
To prolong the battery life of smart devices, common
method resorts to computation offloading to mobile edge
computing (MEC) nodes or other device-to-device (D2D)-
enabled devices [9], [10]. However, this method goes against
the privacy-preserving feature of FEL. That is, this method
could not apply to on-device FEL due to the privacy risks
in learning task offloading. Another straightforward method
is to employ larger batteries or recharging the batteries fre-
quently. On the one hand, increasing the battery capacity of
each smart device is unrealistic, which will raise too much
hardware cost for smart device manufacturers and owners. On
the other hand, recharging device batteries frequently shows
one of the most unfavorable features of smart devices and it
is also impossible in certain situations, such as surveillance
intelligent IoT nodes, where the devices are usually diffi-
cult to reach. Besides, to achieve green communication and
2327-4662 c© 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-5303-1191
https://orcid.org/0000-0003-2483-6980
https://orcid.org/0000-0003-2601-9327
14686 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022
computing in 5G and beyond networks, novel energy supply
models need further research. The emerging energy harvesting
(EH) techniques have the potential to address the above issues
well. The renewable energy from the surrounding environment
could be captured, harvested, and stored (e.g., solar, wind,
thermal, and electromagnetic). Benefit from EH techniques,
energy saving and sustainable computing and communication
applications could be realized. Thus, by the coordination of
EH techniques and edge intelligence, satisfied and sustained
on-device learning performance is guaranteed.
Wireless power transfer (WPT) is one of the most promising
EH techniques, which employs radio frequency (RF) to offer
controllable energy supply for smart devices [11]. Compared
with other techniques, WPT has higher availability, stabil-
ity, and controllability. For wirelessly powered smart devices,
the received RF signal could be easily converted into sta-
ble direct current to power the batteries of smart devices.
In this article, we propose a novel wirelessly powered edge
intelligence (WPEG) framework, which integrates WPT to
battery-constrained on-device learning. WPT brings new pos-
sibilities to edge intelligence, while still introduces some
new challenges.
1) Distributed WPT is hard to guarantee security due to
some selfish and untrusted behaviors (e.g., free rider or
cheating).
2) WPT improves the energy efficiency of smart devices,
while consumes higher energy in the absence of an
optimal charging policy.
3) WPT nodes could not actively provide charging services
without some suitable monetization incentives. To
resolve the above challenges, in this article, we also
employ a pemissioned blockchain approach to establish
a secure peer-to-peer (P2P) energy trading for edge intel-
ligence. Moreover, a two-stage Stackelberg game model
is proposed to obtain the optimal transmission power
strategies and incentive strategies.
The contributions of our work are summarized as follows.
1) We propose a novel WPEG framework to ensure the
learning performance of edge intelligence in a secure
and energy-saving manner.
2) We establish a pemissioned edge blockchain with
a lightweight consensus protocol Byzantine fault
tolerance-Delegated Proof of Stake (BFT-DPoS) to
secure the P2P energy and knowledge sharing.
3) We build the wirelessly powered multiagent edge learn-
ing model, including the energy-aware computing and
communication model.
4) We design a Stackelberg game model to simu-
late the energy-knowledge trading process and derive
the optimal power strategies and economic incentive
strategies.
The remainder of this article is structured as follows.
Section II gives an overview of the related works. Section III
describes our WPEG framework, including the frame-
work implementation and edge permissioned blockchain. In
Section IV, we present the system model of our WPEG
framework. Section V formulate and analyze the proposed
Stackelberg game for energy-knowledge trading. In Section V,
we conduct simulations to show the advanced performance of
our framework. Finally, Section VII concludes this article.
II. RELATED WORK
A. Wireless Power Transfer in IoT
WPT techniques employ RF signals as a promising
power supplying for energy-constrained IoT devices. Some
researches focus on the feasibility of applying the WPT solu-
tions to conventional communication systems. Lee et al. [12]
proposed a new WIPE protocol, which realizes sustainable
communications between two devices by wireless power
splitting and a joint data-energy beamforming and SWIPT-
based traffic offloading scheme [13] has been proposed
for C-RANs via D2D communications. Besides, a chan-
nel coding-based IoT communication network with WPT
stabilization algorithms has been presented in [14]. Some
other works introduced WPT technologies into MEC systems.
Bi and Zhang [15] studied a multiuser MEC system with
WPT functions, and jointly optimized the computation offload-
ing and transmission time allocation in the system. An
energy-effective cooperative resource allocation policy for the
WPT-MEC system was also proposed in [16] to guarantee
the fairness of mobile users. In addition, Liu et al. [17]
presented a UAV-assisted WPT-MEC system, and studied the
joint optimization of task offloading, CPU control, and trajec-
tory design. There are still some existing works considering
cache-aided WPT-IoT networks. Gautam et al. [18] investi-
gated the relay selection strategy in a cache-aided SWIPT
framework with a dynamic time switching (TS), and a sleep-
ing mechanism for cache-aided heterogeneous networks with
EH methods has been presented in [19].
In general, wirelessly powered IoT networks have been well
studied, but are limited to wirelessly powered communica-
tion, computing, and caching in IoT networks. Although the
combination of WPT technologies with the emerging edge AI
technologies could improve the edge learning performance in
IoT, which is ignored by the previous works.
B. Edge Intelligence for IoT
Combined with edge computing, the emerging edge AI has
already become the last mile of AI for IoT [20], [21]. Once
appeared, it received a tremendous amount of interest. In terms
of edge AI algorithms, Li et al. [22], [23] proposed an Edgent
framework, which leverages device-edge synergy computing
to accelerate training and inference of deep neural network
(DNN). Liu et al. [24] designed a momentum federated learn-
ing (MFL) framework to accelerate federated learning by
momentum gradient descent. In addition, a sparse ternary
compression (STC) framework [25] was designed for feder-
ated learning with non-i.i.d data. Moreover, Zhou et al. [26]
employed the Lyapunov optimization theory to design an
online cost-efficient federated learning optimization frame-
work named CEFL under the dynamic training data arrive. For
resource sharing in edge AI, an efficient and incentive knowl-
edge market was proposed in [27], which achieves secure
and efficient edge knowledge sharing and exchange for edge
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: BLOCKCHAIN-BASED INCENTIVE ENERGY-KNOWLEDGE TRADING IN IoT: JOINT POWER TRANSFER AND AI DESIGN 14687
AI. Lu et al. [28] and Zhang et al. [29] proposed a privacy-
preserved data sharing scheme in Industrial IoT (IIoT). In [30],
a secure and robust federated learning scheme with differential
privacy has been proposed for urban informatics.
Some existing works [7], [8] assumed the energy of edge
devices could support the computing-intensive learning task,
which is not realistic. Others [31], [32] adopted the energy
as a constraint condition for task execution, which results in
limitations in learning performance. Compared with existing
works, our WPEG framework not only could achieve a sta-
ble, robust, and sustainable edge learning but also improve the
efficiency and performance of edge AI.
C. Blockchain for IoT
Blockchain is a feasible tool to establish distributed trust
among IoT devices. Yang et al. [33] proposed a blockchain-
based decentralized trust management system in vehicular
networks. A blockchain-based trustworthy computing resource
trading system in vehicular networks has been discussed
in [34]. For IIoT, Li et al. [35] built a consortium energy
blockchain with a credit-based payment scheme to real-
ize fast and frequent energy trading. Zhang et al. [29]
designed an edge-AI and blockchain-enabled IIoT framework,
which supports flexible and secure edge service manage-
ment. In terms of data security, Xu et al. [36] proposed
a novel blockchain-based trustworthy edge caching scheme
for cyber–physical systems (CPSs). Lu et al. [28] incorpo-
rated differential privacy into permissioned blockchain for
privacy-preserved data sharing in IIoT. Some other works
focus on blockchain-based incentive mechanisms, a con-
sortium blockchain-based efficient and incentive approach
for IoT knowledge sharing has been presented in [27].
Chang et al. [37] investigated the incentive mechanism for
rational miners in edge-computing-enable blockchain systems.
Moreover, a Stackelberg game-based incentive computing
resource management has been studied in [38] for Proof-of-
Work (PoW)-based public blockchain networks.
Some previous works mainly focused on classic blockchain
consensus protocols (such as PoW [37], [38]), while
lightweight consensus protocols for edge blockchain systems
(such as DPoS) have not been well applied. Besides, previous
works only considered a single type of resource sharing (such
as knowledge [27] or energy [35]), while multiresource sharing
did not involve.
III. WIRELESSLY POWERED EDGE INTELLIGENCE
FRAMEWORK
We propose the novel WPEG framework in this section.
First, we introduce the main elements of the WPEG framework
and show how they interact in detail. Then, we provide the
details of the proposed a permissioned edge blockchain in our
WPEG framework.
A. Elements in Our WPEG Framework
We consider our WPEG framework is deployed at the
edge of networks, which includes geo-distributed MEC nodes,
large-scale edge devices and WPT nodes, as shown in Fig. 1.
Fig. 1. Framework of our proposed WPEG.
Each upstream MEC node is responsible for managing edge
devices and WPT nodes within its coverage. The WPEG
framework mainly contains the following elements.
1) WPT Nodes: We deploy a certain number of wireless
charging stations as infrastructure in the edge network
environment. These WPT nodes could not only obtain
energy from the traditional power grid but also have
the ability to harvest renewable energy from the sur-
rounding environment (e.g., solar and wind) with EH
equipment. The energy stored in WPT nodes will charge
edge devices via wireless channels. We consider two
possible transmission paths: a) stationary mode: when
edge devices are close to the static power beacon,
then it will start to emit radio waves to supplement
energy and b) dynamic mode: the power beacon is
deployed on mobile objects (e.g., drones and vehicles)
and charges edge devices in a dynamic manner. Our
WPEG framework implementation could employ one or
two of the above models for supplement wireless energy
to edge devices.
2) Edge Devices: Edge devices, such as smart phones, UAVs,
IoT intelligent sensors, and microservers (Raspberry Pi),
are required to provide edge AI services (i.e., FEL) through
local data training. Edge devices are energy constrained
so that they are difficult to guarantee a stable and robust
learning performance. Thus, they will obtain the wireless
energy from WPT nodes. On the one hand, they utilize
the wireless energy for executing model training (CPU
cycle); on the other hand, they employ the wireless energy
to repeatedly communicate (transmitter) with the upper
MEC node for global learning model updating.
3) MEC Nodes: The MEC node first serves as the medi-
ation between the edge AI service requester and edge
devices. That is, the service requester will publish tasks,
design optimal learning strategy, and reward the con-
tribution of edge learning through MEC nodes. Besides,
the local MEC node plays the role of aggregator in FEL,
which is responsible for collecting, aggregating, and
updating the trained local submodels from edge devices.
Moreover, in order to ensure the security features of
the entire framework, an edge permissioned blockchain
will be established between MEC nodes to guarantee
the secure P2P wireless energy sharing and knowledge
(model) sharing.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
14688 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022
Fig. 2. Interaction of elements in our WPEG framework.
In Fig. 2, we show that how the elements interact with each
other, and also present how our WPEG framework works. As
shown in Fig. 2, the interactive process is divided into five
steps.
1) Step 1: Edge AI service requesters will publish edge
learning tasks through MEC nodes, and set corre-
sponding learning parameters (e.g., local/global training
accuracy) and service time limits. Then the MEC node
will select the corresponding edge devices to perform the
learning task according to the service type and resource
status of the local edge devices.
2) Step 2: Due to the limited energy of edge devices, it is
difficult to complete the whole learning task. In order to
obtain training model (knowledge) from edge devices,
the edge AI service requester needs to incentivize local
WPT nodes to power edge devices, so that edge device
can ensure the stable and robust learning process. We
believe that WPT nodes are selfish and will not provide
charging services for free. Thus, this process requires
edge AI service requesters to provide appropriate eco-
nomic incentives for WPT owners through the MEC
node. The details about economic incentives are given
in Section V.
3) Step 3: WPT nodes will charge edge devices under
the economic incentives. In order to avoid wasting
energy during this process, it is necessary to obtain the
optimal power transmission strategy according to energy
demands in the edge learning process. At the same time,
it also needs to solve the security problems in P2P
wireless energy sharing (e.g., free riding). The details
about optimal power transmission strategy are given in
Section V.
4) Steps 4 and 5: Under the predetermined time limit and
learning accuracy requirements, edge devices will adopt
the received energy from WPT nodes to implement
federal edge learning, and upload the trained submodels
(knowledge) to the MEC server for aggregation. Then
the MEC node will update the global model and deliver
it back to all the edge devices. Steps 4 and 5 are per-
formed in a periodic manner. Eventually, the MEC node
feeds the trained global model back to the edge AI
service requester.
It should be noted that the service requesters also need
to give corresponding rewards to edge devices, which can
be considered as knowledge service trading. The correspond-
ing reward mainly depends on the data contribution of edge
devices in the learning process, which has been discussed in
our previous works [27]. In the following text, we believe that
edge devices have already decided the optimal data contribu-
tion d∗
i , and the service requester has designed the optimal
knowledge service pricing strategy.
B. Permissioned Blockchain in Our WPEG Framework
As shown in Fig. 3, there are two trading modes in our
framework, i.e., wireless energy trading and knowledge service
trading. The process of both energy and knowledge sharing
will carry out in a P2P manner. We believe that all parties in
the trading process are untrusted individuals. Thus, our frame-
work will face many security attacks. For example, the free
rider, greedy and cheating energy (or knowledge) sharing phe-
nomenon will happen in our framework. That is, on the one
hand, some untrusted edge devices will deny the reception
of wireless energy, which will cause great energy consump-
tion of WPT nodes; on the other hand, the service requester
may deny the acquired knowledge services, which damages
the profit of edge devices. Besides, the traditional centralized
trading management system also faces the single point of fail-
ure, Distributed Denial of Service (DDoS), and Sybil attacks,
which will greatly affect the security and system efficiency of
our framework.
The emerging blockchain technology has become a promis-
ing distributed solution for implementing secure P2P trading.
It does not rely on any centralized entity and has gained wide
attention from academia and industry for its anonymity, secu-
rity, and traceability. Motivated by this, we adopt blockchain
technologies to defend against the security threats in our
framework. Specifically, we build an edge permissioned (con-
sortium) blockchain as a distributed energy/knowledge trading
management platform, which could also encourage both par-
ties to participate in our framework under a security guarantee.
Unlike the previous work [35], [39], we employ a more
lightweight and efficient consensus protocol BFT-DPoS in
the resource-constrained edge environment, which is popular
in EOS project. The proposed edge permissioned blockchain
based on the BFT-DPoS consensus protocol works as the
following phases.
Phase 1 (Market Initialization): Each entity (e.g., edge
devices, WPT nodes, and MEC nodes) will first be authorized
by trust authority (TA) to becomes a legitimate participant in
the trading market. That is, TA will verify the service capa-
bilities of each entity, and only entities that meet the service
requirements can join our market. Besides, each authorized
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: BLOCKCHAIN-BASED INCENTIVE ENERGY-KNOWLEDGE TRADING IN IoT: JOINT POWER TRANSFER AND AI DESIGN 14689
Fig. 3. Permissioned blockchain in our proposed WPEG.
entity i will obtain corresponding asymmetric keys {PKk
i , SKk
i }
and certificates {Certki } from TA. Moreover, each partici-
pant will have a wallet account {Walletki } to manage their
cryptocurrency.
Phase 2 (Miner Group Formation): The local MEC node
is responsible for recording and managing local transaction
data as shown in Fig. 3. MEC nodes also act as miners of the
blockchain to complete the consensus process. The MEC node
applies for being a miner by submitting a deposit (stakes) to
the blockchain system. If the MEC node performs malicious
operations in the subsequent consensus process, this deposit
will be cleared.
Phase 3 (Delegated Miner Selection): Each other entity (i.e.,
WPT nodes and edge devices) has its own stakes, thus they
could vote for the miners and select their delegates. The top-k
miners of the miner group with high stakes could be selected
as the delegates of our blockchain , where k is an odd integer
(e.g., k = 21 in EOS project). These delegates are responsi-
ble for the generation, management, and mutual verification
of transaction blocks in our blockchain, and the selection of
delegates will be conducted in a periodic manner.
Phase 4 (BFT Consensus Process): In order to clearly illus-
trate the consensus process, we still take the EOS project as an
example. In the traditional DPoS consensus process, a delegate
is randomly selected as the leader to generate a transaction
block. We assume the block generation time is 3 s in EOS
project, thus it will take 45 s to confirm the transaction in this
block. Because the transaction confirmation requires more than
2/3 delegates (i.e., 14 delegates) to verify. Only when other
delegates generate new blocks, the confirmation of the entire
previous blockchain is completed. So it will take 45 s to con-
firm the transaction in the DPoS protocol. To further improve
performance, we introduced the BFT mechanism in the con-
sensus process. The selected leader still broadcasts the new
block, but other delegates immediately verify the block after
receiving this block, and return the results with the verified
signature to the leader. From the perspective of the current
leader, it produces a new block and broadcast it to the whole
network, and then received confirmation from other delegates.
If 2/3 delegates have the consistent results. The transaction in
this block is irreversible. The transaction confirmation time is
greatly shortened, from 45 s to about 3 s. After all the delegates
complete the block consensus process, the blockchain system
will give corresponding cryptocurrency rewards to their wallet.
The energy/knowledge trading is shown in Fig. 3, which
is presented as follows: energy/knowledge traders first obtain
{PKk
i , SKk
i }, {Certki }, and {Walletki } via market initialization.
Authorized traders with legal certificates can access the local
MEC transaction server to initiate a transaction. The local
MEC server could match the supply and demand side of
the resource. After wirelessly power transfer (or knowledge
sharing), the energy/knowledge buyer needs to pay for cor-
responding rewards (i.e., energy coins or knowledge coins).
Specifically, a new transaction will be generated by traders
and recorded by the local MEC server for audit. All the
MEC servers will establish a permissioned edge blockchain
for cross-auditing and mutual verification, which adopts the
lightweight BFT-DPoS protocol for cross-domain consensus.
IV. SYSTEM MODEL
In this section, we model the wirelessly powered multiagent
learning process and formulate the utility function of both
parties. In our proposed WPEG framework, we consider
there exists M edge devices and N WPT nodes, which
are represented as M = {1, 2, . . . , i, . . . , M} and N =
{1, 2, . . . , j, . . . , N}. All the edge devices are equipped with
EH components and completely powered by the collected
wireless energy from WPT nodes. Federated learning mainly
contains two parts: local training and global updating. For
each local training, it can be subdivided into the computing
(training) process and the communication (uploading) process.
A. Preliminaries of Federated Learning
In federated learning, each edge device i (∀i ∈ M)
owns a local personal data set Di. The size of data sam-
ples in Di is denoted as di. Each data sample contains an
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
14690 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022
input–output pair {xk, yk}di
k=1, where the input xk is a sam-
ple vector with various features, and the output yk is the
label value of the input features from users’ mobile appli-
cation. The loss function of federated learning is defined as
fk(xk, yk,ω). Some example loss functions are fk(xk, yk,ω) =
0.5‖yk − ωTxk‖2 for linear regression and fk(xk, yk,ω) =
0.5λ‖ω‖2 + 0.5 max {0; 1 − ykω
Txk}2 for squared-SVM. For
each edge device with data set Di, the local average loss
function is
Li(ω) = 1
|Di|
k=di∑
k=1
fk
(
xk, yk,ω
)
. (1)
Thus, the loss function minimization problem of global learn-
ing process could be described as follows:
min
ω*
Lgobal(ω) = |Di|∑i∈M Li(ω)∑
i∈M |Di| . (2)
1) Local Training: Each edge device i solves the local loss
function minimization problem with a local accuracy δi (0 ≤
δi ≤ 1) as follows:
ω
(n)
i = argmin Li
(
ωi|ω(n−1)
i ,∇L(n−1)(ωi)
)
(3)
where ‖∇Li(ω
(n)
i )‖ ≤ δi‖∇Li(ω
(n−1)
i )‖ at the nth model
update. When δi = 0, it shows the local problem has been
solved optimally, while δi = 1 means no progress at all in the
local training [5], [40]. Each edge device then uploads weights
ω
(n)
i and gradients ∇Li
(n) to the MEC node for aggregating
the global model.
2) Global Updating: The MEC node collects and aggre-
gates the uploading submodels from edge devices as
ω(n+1) = 1
M
∑
i∈M
ω
(n)
i , ∇L(n+1) = 1
M
∑
i∈M
∇Li
(n). (4)
Then the MEC node will send the global model back to
all the edge devices. The interactive learning process will
be carried out in an iterative manner. Until ‖∇L(ω(n))‖ ≤
α‖∇L(ω(n−1))‖ is realized, the global iteration will stop.
Where α ∈ [0, 1] represents the global model accuracy. Due to
the convex objective Li and Lglobal, the local iterations is gen-
eral upper bounded to O(log(1/δi)), which is applicable for a
wide range of iterative algorithms (e.g., gradient or stochas-
tic descent) [5], [40]. Besides, the global iterations could be
calculated as O(log(1/α))/(1 − δi), which is very intuitive.
When global accuracy α is bigger (lower accuracy), the feder-
ated learning systems need to runs less global iterations. When
local accuracy δi is bigger (lower accuracy), the federated
learning systems need to runs more global iterations.
B. Wirelessly Powered Computing Model for Learning
In our WPEG, we assume each WPT node j (j ∈ N ) will
provide controllable and constant RF energy transfers for each
edge device i (i ∈ M). The transmission power is shown as
θ = (θ1, θ2, . . . , θj, . . . , θN). We believe that the MEC node
could schedule spectrum resources well, i.e., the RF energy
transmission and submodels uploading will work in different
frequency bands, thus the signal interference by edge devices
could be ignored. The amount of energy harvested by edge
devices only depends on the transmission power θ and the
channel power gain hji (∀j ∈ N , i ∈ M). We employ a typi-
cal linear EH model like previous works [41]. Therefore, the
harvested energy by edge device i from WPT nodes could be
shown as
E = κiT
∑
j∈N
hjiθj = �iT ∀i ∈ M (5)
where E and T represents energy consumption and transmis-
sion time, respectively. κi ∈ [0, 1] shows the EH efficiency.
We assume each edge device i will contribute the CPU com-
puting resource fi ∈ [0, f max
i ] in the local training process. The
number of CPU cycles for edge device i to train one sample
of local data is ci. Thus, the local computing time Tcmp
i is
equal to O(log(1/δi))cidi/fi. The energy consumption of local
training Ecmp
i is equal to O(log(1/δi))μicidif 2
i , where μi is
the effective capacitance coefficient of edge device i. We con-
sider that all the computing energy will be supplied by the RF
energy from WPT nodes, thus we can get
Ecmp
i (fi) = �iT
cmp
i (fi) ∀i ∈ M. (6)
By substitute Tcmp
i and Ecmp
i into (6), we could obtain the
computing resource scheduling strategy fi as
fi(�i) = min
⎡
⎣ 3
√
κi
μi
∑
j∈N
hjiθj, f max
i
⎤
⎦ ∀i ∈ M. (7)
That is, in the EH-enable training process, edge devices
need to adjust own computing resources to meet the energy
constraints. It can be achieved by changing the voltage of com-
puting chipset with dynamic voltage and frequency scaling
(DVFS) techniques. Moreover, we could derive the Tcmp
i and
Ecmp
i in local training process as follows:
Tcmp
i (�i) = O
(
log
(
1
δi
))
cidi 3
√
μi
κi
∑
j∈N hjiθj
(8)
Ecmp
i (�i) = O
(
log
(
1
δi
))
cidi
3
√√√√√μiκ
2
i
⎛
⎝
∑
j∈N
hjiθj
⎞
⎠
2
. (9)
C. Wirelessly Powered Communication Model for Learning
After completing the local training, each edge device then
uploads submodels to the MEC node via the wireless uplink.
Similarly, the required energy for communication is com-
pletely provided by the RF energy. Based on (5), the uplink
transmit power of edge device i is Pi = Ecom
i /Tcom
i = �i.
Thus, the data rate (b/s) of edge device i is shown as
ri = Blog2
(
1 + PiHi
N0B
)
= Blog2
⎛
⎝1 + κiHi
N0B
∑
j∈N
hjiθj
⎞
⎠ (10)
where B represents the bandwidth, Hi shows the wireless chan-
nel gain between edge device i and the MEC node, and N0
denotes the noise power spectrum density.
We assume the data size of both local weights ω
(n)
i and
local gradients ∇Li
(n) is ρi. Thus, the communication time
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: BLOCKCHAIN-BASED INCENTIVE ENERGY-KNOWLEDGE TRADING IN IoT: JOINT POWER TRANSFER AND AI DESIGN 14691
TABLE I
MAIN TERMS REFERRED IN OUR FRAMEWORK
Tcom
i and communication energy consumption Ecom
i could be
described as follows:
Tcom
i = ρi/ri = ρi
Blog2
(
1 + κiHi
N0B
∑
j∈N hjiθj
) (11)
Ecom
i = PiT
com
i = ρiκi
∑
j∈N hjiθj
Blog2
(
1 + κiHi
N0B
∑
j∈N hjiθj
) . (12)
It should be noted that when the global model is fed back
from the MEC node to edge devices, we ignore the downlink
communication time and energy consumption. This is because
the downlink rate from the MEC node to edge devices is higher
than the uplink rate from edge devices to BS. Meanwhile, the
MEC node is not subject to energy restrictions.
D. Utility Function Formulation
In our WPEG, we consider that WPT nodes are conditional
volunteers. That is, power transmission can only be carried
out if the corresponding economic incentives are obtained.
We assume service requesters will publish federated learning
tasks through the MEC node, and give WPT nodes economic
rewards. The rewards for unit power transmission of WPT
nodes are defined as R = (R1, R2, . . . , Rj, . . . , RN). Thus,
we could formulate the utility function of WPT nodes and
the MEC node (service requesters). The main symbols and
explanations in the WPEG framework are shown in Table I.
1) Utility Function of WPT Nodes: On the one hand, WPT
nodes could obtain rewards from the MEC node, on the other
hand, they still need to pay the corresponding energy costs
to the energy supplier. In our paper, we employ the typical
quadratic function model to represent the energy cost of WPT
nodes [42]. Therefore, the utility function of WPT nodes is
described as follows:
UWPT
j
(
Rj, θj
) = Rjθj −
(
ajθ
2
j + bjθj + ej
)
∀j ∈ N (13)
where aj, bj, and ej are the energy cost factors of the WPT
node j (∀j ∈ N ). Besides, aj and bj are positive constants for
each WPT node j, and ej = 0.
2) Utility Function of the MEC Node: In order to obtain
a trained AI model (i.e., knowledge) from edge devices, the
MEC node needs to give economic incentives to WPT nodes
for charging. While the profit of the MEC node lies in the
quality of the local AI training service. We assume that the
MEC node will preset a deadline Tmax
i for completing AI train-
ing subtasks for each edge device i. The quality of the local
AI training service of edge device i could be defined as
ϕi(�i) = Tmax
i − T learn
i (�i) ∀i ∈ M (14)
where T learn
i (�i) = Tcmp
i (�i) + Tcom
i (�i) represents the total
time for local training. Besides, to realize the proportional fair-
ness among edge devices, we utilize typical logarithm utility
functions [34] to capture the satisfaction degree of ϕi(�i), i.e.,
Si(�i) = ξi ln(1 + ϕi(�i)). The satisfaction degree Si(�i) of
the local AI service is considered as the obtain profit of the
MEC node. Therefore, the utility of the MEC node is denoted
as the total profits minus the incentive costs, which is shown as
UMEC(R, θ) =
∑
i∈M
ξi ln(1 + ϕi(�i)) −
∑
j∈N
Rjθj. (15)
V. STACKELBERG GAME FORMULATION AND ANALYSIS
In our WPEG, we need to obtain the optimal power trans-
mission and economic rewards to joint maximize the utility
of both WPT nodes and the MEC node. To solve the joint
optimization problems, we model the interaction between
WPT nodes and the MEC node as a two-stage Stackelberg
game. This two-stage game could be considered as energy-
knowledge trading. That is, to obtain knowledge derived from
the local data of edge devices, the MEC node needs to pur-
chase energy from WPT nodes. At stage I, the MEC node
acts as a leader in the upper game who sets economic reward
strategies for each WPT node. At stage II, WPT nodes can be
considered as followers in the subgame who determine their
power transmission strategies according to the given economic
rewards. In general, we formulate our Stackelberg game model
G = {SMEC
i∈M, SWPT
j∈N ; UMEC
i∈M, UWPT
j∈N } as shown in the following.
1) SWPT
j∈N shows the strategy space of WPT nodes. The
power transmission strategies of WPT nodes are θ =
(θ1, θ2, . . . , θj, . . . , θN) (∀j ∈ N ). Thus, we obtain that
SWPT
j∈N = {θj|0 ≤ θj ≤ θmax
j ; ∀j ∈ N }. The transmis-
sion power θj should be nonnegative and not to exceed
the maximum transmission power θmax
j . Similarly, SMEC
i∈M
denotes the incentive strategy space of the MEC node.
The strategy space could be defined as SMEC
i∈M =
{Rj|Rmin
j ≤ Rj ≤ Rmax
j ; ∀i ∈ M, j ∈ N }.
2) UWPT
j∈N (Rj, θj) is the utility function of the followers (i.e.,
WPT nodes), and UMEC
i∈M(R, θ) is the utility function of
the leader (i.e., the MEC node).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
14692 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022
According to the above, at stage I, the objective optimization
problem P1 of the upper game for the MEC node could be
described as follows:
max
(θ , R)
UMEC =
∑
i∈M
ξi ln
⎡
⎣Tmax
i − ρi
Blog2
(
1 + κiHi
N0B
∑
hjiθj
)
− O
(
log
(
1
δi
))
3
√
μic3
i d3
i
κi
∑
hjiθj
+ 1
⎤
⎦
−
∑
j∈N
Rjθj
s.t. Rmin
j ≤ Rj ≤ Rmax
j ∀j ∈ N
θmin
j ≤ θj ≤ θmax
j ∀j ∈ N
0 < δi < 1 ∀i ∈ M.
In addition, at stage II, the objective optimization problem
P2 of the subgame for WPT nodes could be formulated as
max
(θj,Rj)
UWPT
j = Rjθj −
(
ajθ
2
j + bjθj + ej
)
s.t. Rmin
j ≤ Rj ≤ Rmax
j ∀j ∈ N
θmin
j ≤ θj ≤ θmax
j ∀j ∈ N
0 < δi < 1 ∀i ∈ M.
It should be noted that the edge network status is dynamic,
and some important information (e.g., channel conditions) will
change with time. Thus, the Stackelberg game will perform
periodic operations. After one period, the power transmission
strategy and economic incentive strategy will be redesigned.
We assume that WPT nodes will send channel conditions and
energy cost factors to the MEC node, and edge devices will
send the relevant learning parameters to the MEC node. So
that the MEC node has complete information to derive the
optimal strategy. The scenario of asymmetric information is
our future work.
A. Subgame of WPT Nodes
We apply the backward induction method to solve the
joint problems (i.e., P1 and P2). So we first analyze the
power transmission subgame of WPT nodes. The subgame
could be considered as a noncooperative game between WPT
nodes, and WPT nodes could dynamically adjust the power
transmission strategies to optimize the self-revenue.
Definition 1 [Nash Equilibrium (NE)]: In subgame, the
power transmission strategies θ∗ = (θ∗
1 , θ∗
2 , . . . , θ∗
j , . . . , θ∗
N)
of WPT nodes is the NE, if and only if UWPT
j (R∗
j , θj,�−j) ≤
UWPT
j (R∗
j , θ
∗
j ,�−j), where �−j is the power transmission
strategy set of WPT nodes excluding θj.
Theorem 1: A unique NE exists in subgame. The optimal
transmission power θj of WPT node j∗ is
θ∗
j = Rj − bj
2aj
∀j ∈ N . (16)
Proof: We find the first and second derivative of the utility
function UWPT
j with respect to θj as the following:
∂UWPT
j
∂θj
= Rj − 2ajθj − bj ∀j ∈ N (17)
∂2UWPT
j
∂2θj
= −2aj < 0 ∀j ∈ N . (18)
UWPT
j is a strictly concave function about θj. Due to the
boundedness of θj, P2 should be a strict convex optimization
problem. Thus, a unique NE exists in subgame. By solving
∂UWPT
j /∂θj = 0, we could obtain (16).
Lemma 1: The optimal transmission power R∗
j of WPT node
j satisfies bj ≤ R∗
j ≤ 2ajθ
max
j + bj.
Proof: According to the definition of transmission power,
we could have θ∗
j ≥ 0. Thus, θ∗
j = (R∗
j − bj)/2aj ≥ 0 and
R∗
j ≥ bj based on the (16). The lower bound of R∗
j is bj. We
also have θj ≤ θmax
j . If θ∗
j = (R∗
j − bj)/2aj ≤ θmax
j , we could
obtain R∗
j ≤ 2ajθ
max
j + bj. If θ∗
j = (Rj − bj)/2aj ≥ θmax
j , thus
Rj ≥ 2ajθ
max
j + bj and θ∗
j = θmax
j . By substituting θ∗
j into
the upper game. UMEC could be considered as a decreasing
function about Rj. Thus, we have Rj = 2ajθ
max
j +bj. In general,
θ∗
j ≤ θmax
j and Rj ≤ 2ajθ
max
j + bj. The upper bound of R∗
j is
2ajθ
max
j +bj. The proof is now completed. The optimal utility
of WPT nodes could also be obtained as
UWPT∗
j =
(
Rj − bj
)2
4aj
− ej ∀j ∈ N
s.t. bj ≤ Rj ≤ 2ajθ
max
j + bj. (19)
B. Upper Game of the MEC Node
Definition 2 [Stackelberg Equilibrium (SE)]: In upper
game, the economic incentive strategies R∗ = (R∗
1,
R∗
2, . . . , R∗
j , . . . , R∗
N) of the MEC node is the SE, if and only if
UWPT
j (R∗
j , θj,�−j) ≤ UWPT
j (R∗
j , θ
∗
j ,�−j) and UMEC(R, θ∗) ≤
UMEC(R∗, θ∗).
Theorem 2: There exists a unique SE between the leader
and followers in our proposed game.
Proof: We will first substitute (16) into P2. P2 in the
upper game could be rewritten as follows:
max
(R)
UMEC =
∑
ξi ln
⎡
⎣Tmax
i − ρi
Blog2
(
1 + κiHi
2ajN0B
∑
hji
(
Rj − bj
))
− O
(
log
(
1
δi
))
3
√
2ajμic3
i d3
i
κi
∑
hji
(
Rj − bj
) + 1
⎤
⎦
−
∑
Rj
(
Rj − bj
)
/2aj
s.t. bj ≤ Rj ≤ bj + 2ajθ
max
j ∀j ∈ N
θmin
j ≤ θj ≤ θmax
j ∀j ∈ N
0 < δi < 1 ∀i ∈ M.
In the above P2, we could easily observe that each term in
the second summation is a quadratic function with respect
to R (i.e., convex function). So we only need to investi-
gate the first summation of the utility function UMEC. In the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: BLOCKCHAIN-BASED INCENTIVE ENERGY-KNOWLEDGE TRADING IN IoT: JOINT POWER TRANSFER AND AI DESIGN 14693
first summation, each term represents the satisfaction degree
Si(R) = ξi ln(1 + ϕi(R)). We now find the first derivative and
the second derivative of Si(R) with regard to R
∂Si
∂Rm
= ξi
1
1 + ϕi(R)
∂ϕi(R)
∂Rm
(20)
∂2Si
∂2Rm
= −ξi
(1 + ϕi)
2
∂ϕi
∂Rm
∂ϕi
∂Rm
+ ξi
1 + ϕi
∂ϕ2
i
∂2Rm
(21)
∂2Si
∂Rm∂Rn
= −ξi
(1 + ϕi)
2
∂ϕi
∂Rm
∂ϕi
∂Rn
+ ξi
1 + ϕi
∂ϕ2
i
∂Rm∂Rn
(22)
where Rm, Rn ∈ R, and Rm 
= Rn. In addition, we derive the
first derivative and the second derivative of ϕi(R) with regard
to R, which is shown in (23)–(26) at the bottom of the page. To
simplify, we utilize SNRi = [(κiHi)/(2ajN0B)]
∑
hji(Rj − bj)
to present the signal-to-noise ratio during communication. By
substituting (24)–(26) into (20)–(22), we have
∂2Si
∂2Rm
= −ξi
(1 + ϕi)
2
h2
miX
2
i + −ξi
1 + ϕi
h2
miYi (27)
∂2Si
∂Rm∂Rn
= −ξi
(1 + ϕi)
2
hmihniX
2
i + −ξi
1 + ϕi
hmihniYi (28)
where Xi > 0 and Yi > 0, ∀i ∈ M. Thus, we could get the
Hessian matrix Hi of Si(R) through (27) and (28), which is
shown as (23). −Hi is considered as a real symmetric matrix,
which should be proved as a positive-definite matrix, based on
theorems in [43]. We could prove Hi is a strict negative-definite
matrix, which shows the existence and uniqueness of the
optimal strategy R∗ = (R∗
1, R∗
2, . . . , R∗
j , . . . , R∗
N). Moreover,
it also denotes that P2 is a convex optimization problem. The
proof is now completed.
To find the unique NE and SE in our game, we design
a low complexity gradient-based searching algorithm as
Algorithm 1.
C. Optimal Learning Parameter Design
Benefit from the optimal transmission power θ∗ from WPT
nodes, a stable and robust FEL process can be guaranteed
Algorithm 1 Optimal Incentive Reward and Power
Transmission Algorithm
1: Input: aj, bj and ej, ∀j ∈ N ; ci, di, δi, f max
i , ∀i ∈ M;
2: Output: R∗, θ∗, UMEC∗, UWPT∗
j , ∀j ∈ N ;
3: Initialization: Maximum iteration number t̂, step size σ ;
4: for Each WPT node j ∈ N do
5: Calculate Rmin
j and Rmax
j according to Rmin
j =bj,
and Rmax
j =bj + 2ajθ
max
j ;
6: end for
7: Select initial input R0 = (R0
1, R0
2, ..., R0
j , ..., R0
N), where R0
j ∈
[Rmin
j , Rmax
j ], ∀j ∈ N , and t = 0;
8: while t < t̂ do
9: for Each WPT node j ∈ N do
10: Calculate θj according to Eq. (16):
θ∗
j = (Rj − bj)/2aj;
11: end for
12: Update incentive rewards according to:
R(t + 1) = R(t) − σ∇UMEC( R(t), θ∗(R(t)));
13: t: = t + 1;
14: end while
15: Calculate R∗, θ∗, UMEC∗, UWPT∗
j (∀j ∈ N ) according to Eq.
(13) (15) (16);
in our framework. But the global learning efficiency is still
related to learning accuracy α (global) and δi (local). To
maximize the learning efficiency of our framework, we now
study how to design the optimal parameters. We assume that
all edge devices have the same local accuracy δi = δ ∀i ∈ M.
Thus, global federated learning time T total in our framework
could be expressed as
T total = O(log(1/α))
1 − δ
· max
{
T learn
i
(
δ, θ∗)}. (29)
Let t = arg max{T learn
i (δ, θ∗)}, t ∈ M and O(log(1/δ)) =
β log(1/δ), β > 0. Thus, we could formulate the optimization
problem P3, which is shown as follows:
min
δ
T total = O(log(1/α))
1 − δ
[
Tcom
t + log
(
1
δ
)
Zt
(
θ∗)
]
Hi = −
[
ξi
(1 + ϕi(R))2
X2
i + ξi
1 + ϕi(R)
Yi
]
⎛
⎜⎜⎜⎝
h1ih1i h1ih2i · · · h1ihNi
h2ih1i h2ih2i · · · h2ihNi
...
...
. . .
...
hNih1i hNih2i · · · hNihNi
⎞
⎟⎟⎟⎠
N×N
∀i ∈ M (23)
∂ϕi(R)
∂Rm
= hmi
⎡
⎣ 3
√√√√2(O(log(1/δi)))
3ajμic3
i d3
i
27κi
(∑
hji
(
Rj − bj
))4
+ ρiκiHi ln 2
2ajN0B2(1 + SNRi)ln2(1 + SNRi)
⎤
⎦ = hmiXi (24)
∂2ϕi(R)
∂Rm∂Rm
= −hmihmi
⎡
⎢⎢⎣
4
9
3
√√√√√
2(O(log(1/δi)))
3ajμic3
i d3
i
κi
(∑
j hji
(
Rj − b
))7 + ρiκ
2
i H2
i (ln(1 + SNRi) + 2) ln 2
4a2
j N2
0 B3(1 + SNRi)
2ln3(1 + SNRi)
⎤
⎥⎥⎦ = −hmihmiYi (25)
∂2ϕi(R)
∂Rm∂Rn
= −hmihni
⎡
⎢⎢⎣
4
9
3
√√√√√
2(O(log(1/δi)))
3ajμic3
i d3
i
κi
(∑
j hji
(
Rj − b
))7 + ρiκ
2
i H2
i (ln(1 + SNRi) + 2) ln 2
4a2
j N2
0B3(1 + SNRi)
2ln3(1 + SNRi)
⎤
⎥⎥⎦ = −hmihniYi (26)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
14694 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022
s.t. 0 < α < 1; 0 < δ < 1 (30)
where Tcom
t (θ∗) is the communication time of the edge device
t, and Zt(θ
∗) = β 3
√
[(μtc3
t d3
t )/(κt
∑
hjtθ
∗
j )] ∀j ∈ N .
Theorem 3: Under the optimal transmission power strategy
θ∗, P3 is a convex problem and there exists a unique local
training accuracy δ∗ in our framework.
Lemma 2: log(1/δ) > 0.5(1 − δ)(3 − δ), δ ∈ (0, 1).
Proof: Let G(δ) = 0.5(1 − δ)(3 − δ) − log(1/δ), the first
derivative of G(δ) with regard to δ is
∂G(δ)
∂δ
= δ + 1
δ
− 2 > 0, δ ∈ (0, 1). (31)
Thus, G(δ) < G(1) = 0, δ ∈ (0, 1). The proof is
completed.
Let A = O(log(1/α)) > 0, α ∈ (0, 1), we now find the first
and the second derivative of T total(δ) as
∂T total
∂δ
= A
[
Tcom
t + Zt log(1/δ)
]
(1 − δ)2
− AZt
δ(1 − δ)
(32)
∂2T total
∂2δ
= A
[
Tcom
t + Zt log(1/δ)
]
0.5(1 − δ)3
− AZt(3δ − 1)
δ2(1 − δ)2
. (33)
According to Lemma 2, we could have
∂2T total
∂2δ
>
A
[
Tcom
t + 0.5Zt(1 − δ)(3 − δ)
]
0.5(1 − δ)3
− AZt(3δ − 1)
δ2(1 − δ)2
= 2ATcom
t
(1 − δ)3
+ AβZt(1 − δ)
δ2
> 0, δ ∈ (0, 1). (34)
Therefore, P3 is a strict convex optimization problem. The
proof is now completed. We could calculate the optimal δ∗ via
classic 1-D convex optimization search method with convex
optimization tools (e.g., cvxopt).
VI. SIMULATION AND DISCUSSION
In this section, we conduct simulation experiments of our
WPEG framework. Our experimental results mainly divide
into three parts: 1) we compare our proposed optimal eco-
nomic incentive strategy and power transmission strategy with
several classic schemes in terms of the utility of the MEC
node and the utility of WPT nodes, respectively; 2) we also
study the influence of the number of edge devices, the num-
ber of WPT nodes, the EH efficiency on the performance of
our framework; and 3) we investigate the impact of learning
parameter design on the performance of global learning effi-
ciency in our framework. We conduct the federated learning
simulation based on [5]. Some of the important simulation
parameters settings are from [5], which are listed in Table II.
Our simulation is conducted on Python 3.7 (numpy 1.18 and
cvxopt 1.1) which based on the hardware of the 3.20-GHz I7
Intel processor and 16-GB RAM.
A. Experiment Setup in Our WPEG
1) Federated Edge Learning Parameters: For each edge
devices i (i ∈ M), we set the training size di of each device as
a uniform distribution in 25–35 MB, CPU cycle number of one
sample training ci is a uniformly distributed in 10–30 cycles/b,
TABLE II
SYSTEM PARAMETERS IN THE WPEG FRAMEWORK
the maximum computing resources of each device f max
i is uni-
formly distributed in 3.0–4.0 GHz. Furthermore, the data size
of local weights and local gradients ρi is 1 MB.
2) Wireless Power Transfer Parameters: We simulate a
200 m × 200 m square area with M edge devices and N
WPT nodes. The number of edge devices M is ranging from
5 to 100 and the number of WPT nodes N is ranging from 5
to 50. The MEC node is located at the center of the square
area. Edge devices and WPT nodes are randomly distributed.
Both of their horizontal and vertical coordinates follow the
uniform distribution ranging from −100 to 100 m. We also
model the channel gain hji and Hi as the path-loss model, i.e.,
32.44 + 20 log10(d), where d (meters) presents the distance
in free space. The transmission bandwidth B of all the edge
devices is set as 1 MHz and the noise power spectrum den-
sity N0 is denoted as −174 dBm/Hz. The EH efficiency is
set as κi = [0.1, 0.9], respectively. The energy cost factors
of WPT nodes are aj = 0.6 W−2 and bj = 0.2 W−1. The
maximum transmission power θmax
j is a uniformly distributed
in 2.0−3.0 W.
B. Comparison Analysis With Other Learning Strategies
We compare our optimal learning strategy (i.e., the power
transmission strategy and economic incentive strategy) with
two different classic strategies, including random FEL (RFEL)
scheme and uniform FEL (UFEL) scheme in terms of the
utility of both parties in our framework.
1) Random FEL (UFEL) Scheme: a) the MEC node ran-
domly provides economic incentives Rr
j to WPT nodes
from [Rmin
j , Rmax
j ] (∀j ∈ N ) based on (19), and WPT
nodes power edge devices with the optimal power
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: BLOCKCHAIN-BASED INCENTIVE ENERGY-KNOWLEDGE TRADING IN IoT: JOINT POWER TRANSFER AND AI DESIGN 14695
Fig. 4. (a) MEC node utility versus edge device number. (b) WPT node utility versus edge device number. (c) MEC node utility versus WPT node number.
(d) WPT node utility versus WPT node number. (e) Transmission power versus WPT node number. (f) Transmission power versus EH efficiency.
transmission strategy θ∗
j according to (16) and b) the
MEC node rewards WPT nodes with the optimal eco-
nomic incentive strategy R∗
j , while WPT nodes ran-
domly determine the power transmission strategy from
(0, θmax
j ] (∀j ∈ N ).
2) UELS Scheme: a) the MEC node uniformly select eco-
nomic incentives Ru
j to WPT nodes as Ru
j = Rmin
j +
γ (Rmax
j − Rmin
j ) (∀j ∈ N ), where γ = 0.4, 0.6, 0.8,
respectively, and WPT nodes charge edge devices with
the optimal power transmission strategy θ∗
j and b) the
MEC node grants WPT nodes with the optimal eco-
nomic incentive strategy R∗
j , while WPT nodes uni-
formly adopt the power transmission strategy as θu
j =
θmin
j +ε(θmax
j −θmin
j ) (∀j ∈ N ), where ε = 0.2, 0.4, 0.6,
respectively.
We evaluate the performance of the above three learning
strategies in terms of the utility of the MEC node and the
average utility of WPT nodes, respectively, which are shown
in Fig. 4(a)–(d).
Specifically, Fig. 4(a) and (c) evaluates the economic pric-
ing strategy. As shown in Fig. 4(a), with the increase of edge
learning devices, the utility of the MEC node has increased
significantly. Because more devices bring more valuable data
in federated learning, which improves the learning satisfaction
of federated learning. Meanwhile, in terms of the average
utility of the MEC node, compared with the RFEL and
UFEL schemes, our optimal economic incentive strategy has
increased by 32.38%, 14.42%, 41.37%, and 110.19%, respec-
tively. Fig. 4(c) evaluates the utility of MEC nodes as the
number of WPT nodes changes. In our optimal strategy, the
utility of the MEC node is relatively stable. This shows
that simply increasing the number of WPT nodes could not
improve the learning satisfaction of the MEC node. In this
case, our optimal economic incentive strategy is improved by
42.35%, 16.70%, 46.94%, and 128.80% compared with the
RFEL and UFEL schemes.
Fig. 4(b) and (d) investigates the power transmission strat-
egy. As the number of edge devices increases, the utility of
WPT nodes gradually increases as shown in Fig. 4(b). This
is because more edge devices require more energy to support
the federated learning task. It will make MEC nodes trade
more energy, which increases the utility of all WPT nodes.
Besides, compared with the RFEL and UFEL schemes, our
optimal power transmission strategy has increased 82.67%,
2.86%, 20.77%, and 81.28%, respectively. While the aver-
age utility of WPT nodes decreases when WPT nodes
become more as shown in Fig. 4(d). This is because when
edge devices are fixed, the total energy required for learn-
ing is relatively fixed. When the number of WPT nodes
increases, the average energy trading amount is lower. Thus,
the average utility of WPT nodes is reduced. Similarly, our
optimal power transmission strategy also improved by 91.55%,
3.52%, 21.43%, and 77.42% compared with the other two
schemes.
C. Impact of Energy Harvesting Efficiency on Our
Framework
In Fig. 4(e) and (f), we study the impacts of EH efficiency
κi on our learning system. As shown in Fig. 4(e) and (f),
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
14696 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022
Fig. 5. (a) Energy consumption versus local data set size. (b) Local learning time versus local training accuracy. (c) Global learning time versus local training
accuracy.
as the EH efficiency increases, the average power transmis-
sion of WPT nodes will decrease. Because when the energy
conversion efficiency of edge devices is greater, WPT nodes
only need to transmit less energy to meet the learning energy
demands of edge devices. For WPT nodes, this also means the
energy resource saving. At the same time, when the number
of WPT nodes increases, the average transmission power of
WPT nodes will further decrease. On the one hand, this is
because the energy acquisition methods of edge devices are
more decentralized and diversified, which reduces the trans-
mission power of the single WPT node. On the other hand,
in a limited spatial range, the denser WPT node deployment
also means the average spatial distance between edge devices
and WPT nodes is reduced. It will improve the energy channel
gain and energy transmission efficiency, thus the transmission
power of WPT nodes is reduced. When the number of edge
devices is fixed and the number of WPT nodes is sufficient, the
WPT nodes will charge edge devices according to the lowest
power transmission strategy θmin
j .
Meanwhile, as shown in Fig. 4(f), when the number of edge
devices decreases, the average power transmission of WPT
nodes will also decrease accordingly. This is because when
the number of edge devices is small, the energy requirement
for learning is low. If the transmission power is too large and
exceeds the energy demand of edge devices, edge devices can
only adopt the largest computing resources f max
i to learn, extra
energy will be wasted. In this case, it is no longer energy
resources that limits learning performance, but the computing
resources of edge devices.
D. Impact of Learning Parameters Design on Global
Learning Performance
In Fig. 5, we analyze the impact of learning parameter
design on global learning performance in terms of learning
energy consumption and learning time. As shown in Fig. 5(a),
as the local learning data size increases, the total learning
energy consumption of edge devices will increase. Because
when the local data size is larger, more local training is
required, resulting in more energy consumption. However, the
contribution of more data also means that edge devices will
receive more rewards. We then show the relationship between
local training accuracy and global learning time in Fig. 5(b)
and (c). The global learning time, i.e., the total system effi-
ciency, depends on global training accuracy α, local training
accuracy δ, and the longest training time in each local iteration
Tmax
i . We let O(log(1/α)) = � log(1/α), and make α = 0.2
and � = 1 without loss of generality. As shown in Fig. 5(b),
when the local accuracy δ increases, although the maximum
time for local learning will be reduced, the corresponding local
learning performance is reduced, resulting in an increase in the
number of global iteration cycles. As shown in Fig. 5(c), the
local training accuracy and the global learning time are con-
vexly related, that is, there is a unique tradeoff to balance the
local training accuracy and the global learning time. We can
easily obtain the optimal local accuracy δ∗. In actual applica-
tions, we will adopt the optimal learning parameter design to
maximize the efficiency of the system.
VII. CONCLUSION
In this article, we have proposed a novel robust-efficient
WPEG framework and investigated a joint optimization of
power transfer, learning design, and user incentives for maxi-
mizing system efficiency and multiuser profits. In the frame-
work, we have first employed a permissioned edge blockchain
to manage the P2P energy and knowledge sharing process in
a secure and efficient manner. Besides, we have studied wire-
lessly powered computing and communication models in edge
AI, and characterized how WPT affects the latency and energy
consumption of edge AI. Based on this, we have designed an
energy-knowledge trading Stackelberg game model to obtain
the optimal power transmission and user incentives for our
framework. Furthermore, the tradeoff between the learning
parameter and the global system efficiency has been studied
and the uniqueness of the optimal learning parameter design
has been proved. Numerical results have demonstrated that
the game-based energy-knowledge incentive strategies could
optimize the utilities of both parties in our framework, and
attract WPT nodes charging edge devices to ensure robust-
efficient edge learning process. In addition, numerical results
also have proved our optimal learning parameter design could
achieve the optimal global learning efficiency. In future works,
we will further consider user mobility with more effective
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
LIN et al.: BLOCKCHAIN-BASED INCENTIVE ENERGY-KNOWLEDGE TRADING IN IoT: JOINT POWER TRANSFER AND AI DESIGN 14697
incentives and resource allocation in our WPEG framework,
which will enhance better network stability.
REFERENCES
[1] C. Tseng et al., “Cloud-based artificial intelligence system for large-scale
arrhythmia screening,” Computer, vol. 52, no. 11, pp. 40–51, Nov. 2019.
[2] S. Misra and G. Panwar, “5G spectrum and standards [book reviews],”
IEEE Wireless Commun., vol. 24, no. 1, pp. 4–5, Feb. 2017.
[3] B. McMahan and D. Ramage. (Apr. 2017). Federated Learning:
Collaborative Machine Learning Without Centralized Training Data.
[Online]. Available: https://ai.googleblog.com/2017/04/federated
learning-collaborative.html
[4] Z. Zhou, X. Chen, E. Li, L. Zeng, K. Luo, and J. Zhang, “Edge
intelligence: Paving the last mile of artificial intelligence with edge
computing,” Proc. IEEE, vol. 107, no. 8, pp. 1738–1762, Aug. 2019.
[5] N. H. Tran, W. Bao, A. Zomaya, M. N. H. Nguyen, and C. S. Hong,
“Federated learning over wireless networks: Optimization model design
and analysis,” in Proc. IEEE INFOCOM Conf. Comput. Commun., Paris,
France, 2019, pp. 1387–1395.
[6] S. Wang et al., “Adaptive federated learning in resource constrained
edge computing systems,” IEEE J. Sel. Areas Commun., vol. 37, no. 6,
pp. 1205–1221, Jun. 2019.
[7] Y. Liu, J. J. Q. Yu, J. Kang, D. Niyato, and S. Zhang, “Privacy-
preserving traffic flow prediction: A federated learning approach,” IEEE
Internet Things J., vol. 7, no. 8, pp. 7751–7763, Aug. 2020, doi:
10.1109/JIOT.2020.2991401.
[8] D. Ye, R. Yu, M. Pan, and Z. Han, “Federated learning in vehicular
edge computing: A selective model aggregation approach,” IEEE Access,
vol. 8, pp. 23920–23935, 2020.
[9] Y. He, J. Ren, G. Yu, and Y. Cai, “D2D communications meet
mobile edge computing for enhanced computation capacity in cel-
lular networks,” IEEE Trans. Wireless Commun., vol. 18, no. 3,
pp. 1750–1763, Mar. 2019.
[10] K. Zhang, Y. Zhu, S. Leng, Y. He, S. Maharjan, and Y. Zhang, “Deep
learning empowered task offloading for mobile edge computing in urban
informatics,” IEEE Internet Things J., vol. 6, no. 5, pp. 7635–7647,
Oct. 2019.
[11] R. Zhang and C. K. Ho, “MIMO broadcasting for simultaneous wire-
less information and power transfer,” IEEE Trans. Wireless Commun.,
vol. 12, no. 5, pp. 1989–2001, May 2013.
[12] H. Lee, K. Lee, H. Kim, and I. Lee, “Wireless information and
power exchange for energy-constrained device-to-device communica-
tions,” IEEE Internet Things J., vol. 5, no. 4, pp. 3175–3185, Aug. 2018.
[13] Z. Zhou, M. Peng, and Z. Zhao, “Joint data-energy beamforming and
traffic offloading in cloud radio access networks with energy harvesting-
aided D2D communications,” IEEE Trans. Wireless Commun., vol. 17,
no. 12, pp. 8094–8107, Dec. 2018.
[14] M. M. Rana and W. Xiang, “IoT communications network for wireless
power transfer system state estimation and stabilization,” IEEE Internet
Things J., vol. 5, no. 5, pp. 4142–4150, Oct. 2018.
[15] S. Bi and Y. J. Zhang, “Computation rate maximization for wireless pow-
ered mobile-edge computing with binary computation offloading,” IEEE
Trans. Wireless Commun., vol. 17, no. 6, pp. 4177–4190, Jun. 2018.
[16] L. Ji and S. Guo, “Energy-efficient cooperative resource allocation in
wireless powered mobile edge computing,” IEEE Internet Things J.,
vol. 6, no. 3, pp. 4744–4754, Jun. 2019.
[17] Y. Liu, K. Xiong, Q. Ni, P. Fan, and K. B. Letaief, “UAV-assisted wire-
less powered cooperative mobile edge computing: Joint offloading, CPU
control, and trajectory optimization,” IEEE Internet Things J., vol. 7,
no. 4, pp. 2777–2790, Apr. 2020.
[18] S. Gautam, T. X. Vu, S. Chatzinotas, and B. Ottersten, “Cache-
aided simultaneous wireless information and power transfer (SWIPT)
with relay selection,” IEEE J. Sel. Areas Commun., vol. 37, no. 1,
pp. 187–201, Jan. 2019.
[19] H. Zhang, Y. Wang, H. Ji, and X. Li, “A sleeping mechanism for cache-
enabled small cell networks with energy harvesting function,” IEEE
Trans. Green Commun. Netw., vol. 4, no. 2, pp. 497–505, Jun. 2020.
[20] S. Liao et al., “Cognitive popularity based AI service sharing for
software-defined information-centric networks,” IEEE Trans. Netw. Sci.
Eng., early access, May 11, 2020, doi: 10.1109/TNSE.2020.2993457.
[21] K. Zhang, S. Leng, X. Peng, P. Li, S. Maharjan, and Y. Zhang, “Artificial
intelligence inspired transmission scheduling in cognitive vehicular com-
munications and networks,” IEEE Internet Things J., vol. 6, no. 2,
pp. 1987–1997, Apr. 2019.
[22] E. Li, L. Zeng, Z. Zhou, and X. Chen, “Edge AI: On-demand acceler-
ating deep neural network inference via edge computing,” IEEE Trans.
Wireless Commun., vol. 19, no. 1, pp. 447–457, Jan. 2020.
[23] E. Li, Z. Zhou, and X. Chen, “Edge intelligence: On-demand deep learn-
ing model co-inference with device-edge synergy,” in Proc. Workshop
Mobile Edge Commun. (MECOMM SIGCOMM), Budapest, Hungary,
Aug. 2018, pp. 31–36.
[24] W. Liu, L. Chen, Y. Chen, and W. Zhang, “Accelerating federated learn-
ing via momentum gradient descent,” IEEE Trans. Parallel Distrib. Syst.,
vol. 31, no. 8, pp. 1754–1766, Aug. 2020.
[25] F. Sattler, S. Wiedemann, K. Müller, and W. Samek, “Robust and
communication-efficient federated learning from non-i.i.d. data,” IEEE
Trans. Neural Netw. Learn. Syst., vol. 31, no. 9, pp. 3400–3413,
Sep. 2020, doi: 10.1109/TNNLS.2019.2944481.
[26] Z. Zhou, S. Yang, L. J. Pu, and S. Yu, “CEFL: Online admission control,
data scheduling and accuracy tuning for cost-efficient federated learning
across edge nodes,” IEEE Internet Things J., early access, Mar. 31, 2020,
doi: 10.1109/JIOT.2020.2984332.
[27] X. Lin, J. Li, J. Wu, H. Liang, and W. Yang, “Making knowledge trad-
able in edge-AI enabled IoT: A consortium blockchain-based efficient
and incentive approach,” IEEE Trans. Ind. Informat., vol. 15, no. 12,
pp. 6367–6378, Dec. 2019.
[28] Y. Lu, X. Huang, Y. Dai, S. Maharjan, and Y. Zhang, “Blockchain
and federated learning for privacy-preserved data sharing in indus-
trial IoT,” IEEE Trans. Ind. Informat., vol. 16, no. 6, pp. 4177–4186,
Jun. 2020.
[29] K. Zhang, Y. Zhu, S. Maharjan, and Y. Zhang, “Edge intelligence and
blockchain empowered 5G beyond for the industrial Internet of Things,”
IEEE Netw. Mag., vol. 33, no. 5, pp. 12–19, Sep./Oct.2019.
[30] Y. Lu, X. Huang, Y. Dai, S. Maharjan, and Y. Zhang, “Differentially
private asynchronous federated learning for mobile edge computing
in urban informatics,” IEEE Trans. Ind. Informat., vol. 16, no. 3,
pp. 2134–2143, Mar. 2020.
[31] Y. Sarikaya and O. Ercetin, “Motivating workers in federated learn-
ing: A Stackelberg game perspective,” IEEE Netw. Lett., vol. 2, no. 1,
pp. 23–27, Mar. 2020.
[32] J. Kang, Z. Xiong, D. Niyato, S. Xie, and J. Zhang, “Incentive mech-
anism for reliable federated learning: A joint optimization approach
to combining reputation and contract theory,” IEEE Internet Things J.,
vol. 6, no. 6, pp. 10700–10714, Dec. 2019.
[33] Z. Yang, K. Yang, L. Lei, K. Zheng, and V. C. M. Leung, “Blockchain-
based decentralized trust management in vehicular networks,” IEEE
Internet Things J., vol. 6, no. 2, pp. 1495–1505, Apr. 2019.
[34] X. Lin, J. Wu, S. Mumtaz, S. Garg, J. Li, and M. Guizani, “Blockchain-
based on-demand computing resource trading in IoV-assisted smart city,”
IEEE Trans. Emerg. Topics Comput., early access, Feb. 8, 2020, doi:
10.1109/TETC.2020.2971831.
[35] Z. Li, J. Kang, R. Yu, D. Ye, Q. Deng, and Y. Zhang, “Consortium
blockchain for secure energy trading in industrial Internet of
Things,” IEEE Trans. Ind. Informat., vol. 14, no. 8, pp. 3690–3700,
Aug. 2018.
[36] Q. Xu, Z. Su, and Q. Yang, “Blockchain-based trustworthy edge caching
scheme for mobile cyber-physical system,” IEEE Internet Things J.,
vol. 7, no. 2, pp. 1098–1110, Feb. 2020.
[37] Z. Chang, W. Guo, X. Guo, Z. Zhou, and T. Ristaniemi, “Incentive
mechanism for edge-computing-based blockchain,” IEEE Trans. Ind.
Informat., vol. 16, no. 11, pp. 7105–7114, Nov. 2020.
[38] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han,
“Cloud/fog computing resource management and pricing for blockchain
networks,” IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600,
Jun. 2019.
[39] J. Chen et al., “Collaborative trust blockchain based unbiased con-
trol transfer mechanism for industrial automation,” IEEE Trans.
Ind. Appl., vol. 56, no. 4, pp. 4478–4488, Jul./Aug. 2020, doi:
10.1109/TIA.2019.2959550.
[40] J. Koněcný, Z. Qu, and P. Richtárik, “Semi-stochastic coordi-
nate descent,” Optim. Methods Softw., vol. 32, no. 5, pp. 993–1005,
Sep. 2017.
[41] R. Du, H. Shokri-Ghadikolaei, and C. Fischione, “Wirelessly-
powered sensor networks: Power allocation for channel estimation and
energy beamforming,” IEEE Trans. Wireless Commun., vol. 19, no. 5,
pp. 2987–3002, May 2020.
[42] L. Park, Y. Jang, S. Cho, and J. Kim, “Residential demand response for
renewable energy resources in smart grid systems,” IEEE Trans. Ind.
Informat., vol. 13, no. 6, pp. 3165–3173, Dec. 2017.
[43] S. Boyd and L. Vandenberghe, Convex Optimization. Cambridge, U.K.:
Cambridge Univ. Press, 2004.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
http://dx.doi.org/10.1109/JIOT.2020.2991401
http://dx.doi.org/10.1109/TNSE.2020.2993457
http://dx.doi.org/10.1109/TNNLS.2019.2944481
http://dx.doi.org/10.1109/JIOT.2020.2984332
http://dx.doi.org/10.1109/TETC.2020.2971831
http://dx.doi.org/10.1109/TIA.2019.2959550
14698 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 16, 15 AUGUST 2022
Xi Lin (Graduate Student Member, IEEE) received
the B.S. degree from the School of Precision
Instrument and Opto-Electronics Engineering,
Tianjin University, Tianjin, China, in 2016. He
is currently pursuing the Ph.D. degree with the
School of Electronic Information and Electrical
Engineering, Shanghai Jiao Tong University,
Shanghai, China.
His research interests include multiaccess edge
computing, Internet of Things, and blockchain.
Jun Wu (Member, IEEE) received the Ph.D. degree
in information and telecommunication studies from
Waseda University, Tokyo, Japan, in 2011.
He was a Postdoctoral Researcher with the
Research Institute for Secure Systems, National
Institute of Advanced Industrial Science and
Technology, Tokyo, from 2011 to 2012. He was
a Researcher with the Global Information and
Telecommunication Institute, Waseda University
from 2011 to 2013. He is currently an Associate
Professor with the School of Electronic Information
and Electrical Engineering, Shanghai Jiao Tong University, Shanghai, China.
He is also the Vice Director of National Engineering Laboratory for
Information Content Analysis Technology, Shanghai Jiao Tong University. He
has hosted and participated in a lot of research projects, including National
Natural Science Foundation of China, the National 863 Plan and 973 Plan
of China, and the Japan Society of the Promotion of Science Projects. His
research interests include the advanced computing, communications and secu-
rity techniques of software-defined networks, information-centric network
smart grids, Internet of Things, and 5G. He has published more than 120
refereed papers in the above areas.
Dr. Wu has been the Track Chair of VTC 2019 and the TPC Member of
more than ten international conferences, including ICC, GLOBECOM, and
WINCON. He is the chair of IEEE P21451-1-5 Standard Working Group.
He has been a Guest Editor of the IEEE SENSORS JOURNAL, Sensors, ICT
Express. He is an Associate Editor of IEEE ACCESS.
Ali Kashif Bashir (Senior Member, IEEE)
received the Ph.D. degree in computer science and
engineering from Korea University, Seoul, South
Korea, in 2012.
He is a Senior Lecturer with the Department
of Computing and Mathematics, Manchester
Metropolitan University, Manchester, U.K. He is
also holding an Adjunct Professor Position with
the National University of Science and Technology,
Islamabad, Pakistan. His past assignments include
an Associate Professor of ICT, University of the
Faroe Islands, Tórshavn, Faroe Islands; Osaka University, Suita, Japan;
Nara National College of Technology, Yamatokoriyama, Japan; the National
Fusion Research Institute, Daejeon, South Korea; Southern Power Company
Ltd., Busan, South Korea, and the Seoul Metropolitan Government, Seoul.
He has worked on several research and industrial projects of South Korean,
Japanese and European agencies, and Government Ministries. He has
authored over 120 research articles and is supervising/co-supervising several
graduate (M.S. and Ph.D.) students. His research interests include Internet
of things, wireless networks, distributed systems, network/cyber security,
cloud/network function virtualization, and machine learning.
Dr. Bashir is serving as the Editor-in-Chief for the IEEE FUTURE
DIRECTIONS NEWSLETTER. He is an invited member of the IEEE Industrial
Electronic Society, a member of ACM, and a Distinguished Speaker of ACM.
Jianhua Li (Member, IEEE) received the B.S.,
M.S., and Ph.D. degrees from Shanghai Jiao Tong
University, Shanghai, China, in 1986, 1991, and
1998, respectively.
He is a Professor and the Dean of School of Cyber
Security, Shanghai Jiao Tong University, where he is
also the Director of National Engineering Laboratory
for Information Content Analysis Technology,
the Director of Engineering Research Center for
Network Information Security Management and
Service of Chinese Ministry of Education, and
the Director of Shanghai Key Laboratory of Integrated Administration
Technologies for Information Security, China. He is the vice president of
Association of Cyber Security Association of China. He was the chief expert
in the information security committee experts of National High Technology
Research and Development Program of China (863 Program) of China. He was
the leader of more than 30 state/province projects of China, and published
more than 300 papers. He published six books and has about 20 patents.
He made three standards and has five software copyrights. His research
interests include information security, signal process, and computer network
communication.
Prof. Li received the Second Prize of National Technology Progress Award
of China in 2005.
Wu Yang received the Ph.D. degree in computer
system architecture from the Computer Science and
Technology School, Harbin Institute of Technology,
Harbin, China, in 2005.
He is currently a Professor and a Doctoral
Supervisor with Harbin Engineering University,
Harbin. His main research interests include wire-
less sensor networks, peer-to-peer networks, and
information security.
Prof. Yang is a member of ACM and a Senior
Member of CCF.
Md. Jalil Piran received the Ph.D. degree in elec-
tronics and radio engineering from Kyung Hee
University, Seoul, South Korea, in 2016.
He was a Postdoctoral Research Fellow of
resource management and quality of experience in
5G cellular networks and the Internet of Things
(IoT) with the Networking Laboratory, Kyung Hee
University. He is currently an Assistant Professor
with the Department of Computer Science and
Engineering, Sejong University, Seoul. He has pub-
lished a substantial number of technical papers in
well-known international journals and conferences in research fields of
wireless communications, 5G and beyond, IoT multimedia communication,
streaming, adaptation, and QoE, applied machine learning, and security.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:07:59 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice