Safety Warning! Decentralised and Automated Incentives for Disqualified Drivers Auditing in Ride-Hailing Services
Safety Warning! Decentralised and Automated
Incentives for Disqualified Drivers Auditing in
Ride-Hailing Services
Youshui Lu ,Member, IEEE, Jingning Zhang, Yong Qi ,Member, IEEE, Saiyu Qi ,Member, IEEE,
Yue Li , Hongyu Song, and Yuhao Liu
Abstract—Since 2011, the private ride-hailing companies Didi (2019), Uber (2019) and Lyft (2021) have expanded into more and more
cities. These ride-hailing services (RHS) bring convenience to our life; however, at the same time they, also raise security concerns for
users. For example, several recent news items show that a considerable number of registered drivers whose licenses have been
revoked are still taking RHS orders on the respective platforms; this phenomenon directly leads to insecurity on part of its users and the
bad reputation of the ride-hailing service provider (SP). The traditional solution to solve this problem is to periodically check the validity
of the drivers’ licenses; however, it is a considerably time-consuming and costly process since the SPs have to manually interact with
the governing authorities. Therefore, in this paper, we have presented an auditable self-sovereign identity system (named AudiSSI),
which provides an efficient approach for the SPs to manage their registered drivers’ qualifications in a decentralized and automatic
manner. Further, using smart contract technology, we propose a safety guarantee insurance in the form of an auditing contract to
enable the RHS rider to check their driver’s qualifications before the trip starts and get incentives once they detect a disqualified driver.
We designed an incentive mechanism and have provided a game theoretical analysis. Finally, we implemented a prototype of AudiSSI
and deployed it on Hyperledger Indy and Fabric to show that self-sovereign identity system for RHS driver with qualification auditing is
efficient and technically feasible.
Index Terms—Auditing, blockchain, smart contract, ride-hailing, game theory, insurance scheme, decentralized system
Ç
1 INTRODUCTION
WITH the emergence of new transport technologies,
ride-hailing services have become increasingly popu-
lar around the world in recent years. RHS allows a con-
sumer to easily hail a ride and track the driver’s location in
real-time. Their advantage over traditional taxi services is
due to the convenience of hailing services, e.g., ride requests
at the touch of a button, price estimation, recommendation
of frequent destinations, etc. To make these services avail-
able, the registered driver must pass rigorous due diligence
and driver’s qualification check.
Unfortunately, currently, the driver’s qualifications
check only occurs when the driver initially registers in the
RHS platform, and the SP fails to disqualify the registered
drivers with revoked licenses in a timely manner, which
results in a large number of disqualified drivers continuing
to take RHS orders. Therefore, it leads to security issues to
the RHS users and affects the SP’s reputation. To put this in
perspective, in August 2018, a ride-sharing passenger in the
eastern Chinese city of Wenzhou was raped and killed by a
driver employed at China’s largest ride-hailing firm Didi
Chuxing[1]. Just three months later, another incident
shocked China after a Didi passenger was killed in a similar
circumstance [2]. In another example[3], Uber drivers have
been implicated in a number of major scandals, including
an attempted kidnapping, and a tragic hit-and-run incident
that resulted in the death of a young girl. Following the inci-
dent, the government required Didi to suspend its carpool-
ing service until the safety issues were been addressed.
Although governing authorities carry out legislations to
regulate the RHS industry, it is challenging for the SPs to
detect disqualified drivers when their licenses are revoked.
As verifying the validity of one’s identity information (e.g.,
driver’s license) implies a time-consuming and costly pro-
cess involving different centralised governing authorities
(e.g., police Station), most SPs fail to regularly check their
drivers’ qualifications per a short time interval. On the other
hand, the RHS is time-sensitive and it cannot tolerate much
delay to maintain high-standard service quality. Therefore,
an efficient solution is urgently required to combat this chal-
lenging issue in the realm of RHS industry.
In response, the nature of distributed ledger (blockchain)
technologies (DLT) [15] could build trust in many cases, we
propose to use blockchain to build a decentralised identity
management system because DLT is particularly useful in
business and governance situations that involve multiple
� Youshui Lu, Jingning Zhang, Yong Qi, Saiyu Qi, Hongyu Song, and
Yuhao Liu are with the Department of Computer Science and Technology,
Xi’an Jiaotong University, Xi’an 710049, China. E-mail: lucienlu@me.
com, {jingning, hysong0101, lyuhao}@stu.xjtu.edu.cn, qiy@mail.xjtu.
edu.cn, syqi@connect.ust.hk.
� Yue Li is with the Department of Economics, Vrije Universiteit Amster-
dam, 1081 HV Amsterdam, The Netherlands, and also with the Risk
Modelling Department, ABN AMRO Bank N.V, 1082 PP Amsterdam,
The Netherlands. E-mail: yue.li@vu.nl.
Manuscript received 12 Jan. 2021; revised 1 Aug. 2021; accepted 16 Aug. 2021.
Date of publication 27 Aug. 2021; date of current version 3 Feb. 2023.
(Corresponding authors: Saiyu Qi and Yue Li.)
Digital Object Identifier no. 10.1109/TMC.2021.3108012
1748 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 22, NO. 3, MARCH 2023
1536-1233 © 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See ht _tps://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-6598-7606
https://orcid.org/0000-0002-6598-7606
https://orcid.org/0000-0002-6598-7606
https://orcid.org/0000-0002-6598-7606
https://orcid.org/0000-0002-6598-7606
https://orcid.org/0000-0002-7682-5653
https://orcid.org/0000-0002-7682-5653
https://orcid.org/0000-0002-7682-5653
https://orcid.org/0000-0002-7682-5653
https://orcid.org/0000-0002-7682-5653
https://orcid.org/0000-0002-0394-4432
https://orcid.org/0000-0002-0394-4432
https://orcid.org/0000-0002-0394-4432
https://orcid.org/0000-0002-0394-4432
https://orcid.org/0000-0002-0394-4432
https://orcid.org/0000-0003-3960-3450
https://orcid.org/0000-0003-3960-3450
https://orcid.org/0000-0003-3960-3450
https://orcid.org/0000-0003-3960-3450
https://orcid.org/0000-0003-3960-3450
mailto:lucienlu@me.com
mailto:lucienlu@me.com
mailto:jingning@stu.xjtu.edu.cn
mailto:hysong0101@stu.xjtu.edu.cn
mailto:lyuhao@stu.xjtu.edu.cn
mailto:qiy@mail.xjtu.edu.cn
mailto:qiy@mail.xjtu.edu.cn
mailto:syqi@connect.ust.hk
mailto:yue.li@vu.nl
distrustful parties to negotiate and execute electronic busi-
ness transactions [23]. In many cases, such transactions
require the ability to establish and validate identities and
identity attributes, or to check whether or not they have
been revoked [23]. Such a decentralised identity manage-
ment system allows one’s identity information to be
synchronised and updated quickly, bringing efficiency and
transparency to the verification process.
Although DLT can provide an efficient way to verify the
driver’s qualification, we still encounter three fundamental
problems. First, how can we protect the driver’s privacy
during the verification and auditing process? The driver’s
qualification information may be revealed to the rider when
executing the auditing contract.
Second, without relying on the third party escrow, how
can we automatically check if a registered driver is still
qualified ? Manually checking the driver’s qualification is
usually managed by a centralised third party or simply the
SP; further, it is infeasible to process a large number of RHS
orders per day especially when interacting with a distrib-
uted ledger.
Third, how can we motivate SPs to actively detect the
disqualified drivers in the RHS? Riders are motivated by
their own safety and security concerns; however, SPs in
RHS ecosystem are not motivated to detect disqualified
drivers, resulting in a considerable number of disqualified
drivers still taking RHS orders online.
In this paper, we propose AudiSSI, a privacy-preserving
automated driver’s license auditing system. AudiSSI uses a
dual-blockchain architecture. One of the dual-chain technol-
ogies is the decentralized privacy-preserving identity man-
agement chain; by leveraging zero-knowledge proofs, it
helps to efficiently manage the registered driver’s qualifica-
tions. While the other is the decentralised market monitor
(DMM) which allows for disqualified drivers to be automat-
ically detected online.
DMM consists of a list of smart contracts, among which,
the core is the Disqualified Driver Auditing Contract (DDAC).
With DDAC, we introduce a novel Safety Guarantee Insurance
for the RHS rider in the form of DDAC to be executed auto-
matically to check the driver’s qualification before the trip
starts in a trustworthy and transparent way. In addition, to
motivate the SP to actively detect the disqualified drivers,
we will build an incentive mechanism into DDAC, so that it
will automatically incentivise the affected rider while pun-
ishing the misbehaving SP for allowing disqualified drivers
to take RHS orders in the platform at the same time. Mean-
while, since all results regarding detecting drivers’ qualifi-
cations have been recorded in the ledger of blockchain
network, AudiSSI makes the SPs accountable for every reg-
istered driver’s information. Such intrinsic accountability
can mitigate malicious SPs from allowing disqualified driv-
ers effectively, and it will finally benefit the entire RHS
ecosystem.
By modeling AudiSSI as a non-cooperative game, we
provide the game theoretical analysis of the feasibility of
using AudiSSI. Based on the estimated payoff values, we
show that as long as AudiSSI is implemented, even if the
consumer is not purchasing the insurance, it is not possible
for the SP to misbehave by allowing disqualified driver tak-
ing RHS order in the platform. We generated driver
information datasets sourced from Didi Chuxing GAIA Ini-
tiative [14]. With the datasets, we first conducted experi-
ments for comprehensive performance evaluation via a
proof-of-concept implementation on Hyperledger Indy [21]
and Hyperledger Fabric [16]. The experiment results show
the practically affordable performance of our design.
In summary, we have made the following contributions:
� We propose an efficient system to detect disqualified
drivers which relies on a dual-chain architecture. We
have also carefully designed the incentive mecha-
nism behind the contracts to regulate the behaviors
of the involving parties.
� To prevent riders from launching Sybil attacks, we
introduce a new concept named Safety Guarantee
Insurance for the RHS consumer to ensure that a rider
who purchased the insurance can have their driver’s
qualification checked before the trip starts and get
compensated according to the proposed mechanism
once a disqualified driver is detected.
� We will formalise AudiSSI as a non-cooperation
game and use the game theory as a tool to analyse
the viability of using AudiSSI in the real world.
Based on the payout constraints, we will show that
the incentive mechanism of AudiSSI will lead inde-
pendent, self-interested participants toward out-
comes that are desirable from a system-wide
perspective.
� We implemented a prototype of AudiSSI and
deployed it on Hyperledger Indy and Hyperledger
Fabric. We also generated RHS driver’s qualification
datasets sourced from Didi Chuxing [14], and exten-
sive analysis and evaluations were conducted via a
real-life example user case. The results for the same
demonstrate the technical feasibility of AudiSSI.
Paper Organisation. In the rest of the paper, we have pro-
vided an overview of the background of the driver checking
process in RHS, disqualified registered drivers, motivation
and the preliminaries in Section 2, and then introduced the
problem definition and an adversary model in Section 3.
Section 4 provides a detailed explanation of the AudiSSI
system design which includes the architecture, events,
workflow, Insurance Purchase, Disqualified Driver Audit-
ing and Incentive Mechanism. Next, we have provided an
analysis of our proposed model in Section 5. Our experi-
ment has been presented in the evaluation Section 6. Finally,
we have surveyed the related work in Section 7 and con-
cluded the paper in Section 8.
2 BACKGROUND AND PRELIMINARIES
2.1 Background
2.1.1 How RHS Driver Checks Work
RHS companies, such as DiDi [11], Uber [32] and Lyft [12],
often require applicants to provide their full name, date of
birth, Social Security number, a copy of their driver’s
license, vehicle registration, auto insurance and proof of a
completed state vehicle inspection. The RHS companies
have to outsource to the external third-party security com-
panies for the checking the drivers’ information checking.
External third-party security companies search national,
LU ETAL.: SAFETY WARNING! DECENTRALISED ANDAUTOMATED INCENTIVES FOR DISQUALIFIED DRIVERS AUDITING IN... 1749
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
state and local databases for criminal and driving violations
over the last seven years, and follow up with courthouse
searches at the counties where the applicant lived in that
period. Lyft includes an in-person interview as well, among
other things, to match the person with the picture on their
driver’s license .
Who gets disqualified [13] Applicants will be rejected if
they have convictions for any of the following offenses
within the past seven years: Alcohol- or drug-related driv-
ing infractions; fraud or theft; reckless driving; hit-and-run
wrecks; violent crimes; sexual offenses; acts of terror; prop-
erty damage crimes; fatal accidents; resisting or evading
arrest; kidnapping, embezzlement or other felonies. Appli-
cants are also rejected if their record includes driving with a
suspended, revoked or invalid driver’s license or insurance.
2.1.2 Motivation
First, online users usually have to register repeated personal
information with different SPs, meanwhile, those SPs hold
their private information which raises privacy concerns for
the users. Therefore, we are motivated to propose self-sov-
ereign identity(SSI) based privacy-preserving solution
which allows the user to self-manage their identities with-
out sacrificing the user’s privacy and provides an efficient
way for the SPs to check its registered drivers’
qualifications.
Moreover, current RHS companies allow a potential
driver to register as a qualified driver after a driver’s check.
However, this check does not often take place again after
the driver gets successfully registered since the SPs are not
willing to put in so much effort on the time-consuming and
costly process. Therefore, it results in a large number of reg-
istered drivers who are no longer qualified (e.g., their driv-
er’s license is revoked) continuing to take orders on the
RHS platform, which will not only lead to serious security
problems for the RHS riders and the society but also harm
the SP’s reputation.
Therefore, in this paper, we are motivated to foster secu-
rity in RHS settings which not only enables safety and trans-
parency on the user level but also increases the health of the
online RHS market ecosystem in general.
2.1.3 Example Use Case
Didi Chuxing [11] and Uber [32], giant technology compa-
nies, act as the SP in the RHS, and serve millions of consum-
ers per day to set up rides by their smartphones. Other
entities in the ride-hailing service ecosystem include driv-
ers, riders, and governing bodies. To register as a qualified
driver, the registering driver has to fulfill the prerequisites
including age requirement, identification verification, driver
license verification, vehicle registration verification and
even police check.
Usually, if a hypothetical user-named Tom for now-
wants to register as a driver in Didi Chuxing, he has to
upload the aforementioned documents required onto the
platform and wait for them to be verified. This verification
process is carried out by Didi Chuxing. It could be a short
process if the company can simply verify them by itself, and
it also could be a long process if each document is to be veri-
fied in the corresponding government agency, for example,
the vehicle registration verification should be done by the
Department of Motor Vehicles. No matter how Didi Chux-
ing verifies the driver’s identity information, the driver’s
private data is revealed to Didi Chuxing. After some time,
Tom wants to register as a driver in Uber, and he has to
repeat a similar process as he has did in Didi Chuxing;
meanwhile, similarly all his private information will be
revealed to Uber as well. Moreover, Tom will start to worry
about the risks involved—whether his private information
could be reused or manipulated by third parties for their
profit or even be leaked to malicious parties.
Suppose that after Tom became a qualified driver in Didi
Chuxing or Uber, he committed a crime one day; then, he
should ideally be de-registered by Didi Chuxing and Uber
as he is not a qualified driver anymore because he would
not pass police check in this situation. However, currently,
neither SP would update Tom’s police check information
until Tom updates his information via the platform.
Although the SPs can perform the re-verification process
towards the drivers’ qualification regularly at some time
interval, it is quite costly for the SPs to do so. Furthermore,
the SPs and the market governing authorities are concerned
about the security risks that the online disqualified drivers
will bring in.
Currently, if the SPs decide to use AudiSSI to process the
driver’s identity information verification, for a user who
wants to register as a driver, he can manage his own per-
sonal information and selectively disclose the same to the
SPs. Moreover, for the SPs, they can quickly verify the regis-
tration identity information with AudiSSI. Additionally, the
market governing authorities who are required to keep a
regulated and healthy RHS market can incentivise the RHS
rider to detect disqualified drivers online while giving
deterrence to enforce the SP to regularly validate their regis-
tered drivers’ qualifications.
2.2 Preliminaries
2.2.1 Distributed Ledger Technologies (DLT)
Distributed ledger (blockchain) technologies (DLT) are par-
ticularly useful in business and governance situations that
involve multiple parties which do not necessarily trust one
another to negotiate and execute electronic business transac-
tions [23]. In some cases, such transactions require the abil-
ity to establish and validate identities and identity
attributes, or to check whether or not they have been
revoked [23].
Another crucial role of DLTs is to register events by
which attestations are revoked. It is easy to envisage the
benefits of knowing whether or not a person is still an
employee of a company, if a passport or driving licence has
been revoked, or a certificate is still valid. The distributed
nature of DLTs allow parties to query a single (but redun-
dant) endpoint for revocations of attestations by all parties,
rather than having to query a specific endpoint for individ-
ual parties [23].
2.2.2 Smart Contract
In the 90s, “Smart contract” was first introduced by N.
Szabo [28], originating from the idea that a technological
legal framework can help commerce, and reduce disputes
1750 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 22, NO. 3, MARCH 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
and costs. A smart contract allows users to define and exe-
cute contracts on the blockchain [27], and maintains its own
data storage and balance, access to both of which is entirely
governed by its code (though all contract data and balances
can be publicly read on the blockchain). The program code
captures the contractual logic clauses between multiple par-
ties and pre-defines the trigger conditions and response
actions. The execution of the functions in a smart contract is
triggered by times or events, e.g., transactions added to the
blockchain. Contracts allow for the creation of autonomous
agents whose behaviour is entirely dependent on their code
and the transactions sent to them, thus providing function-
ality comparable to that of a centralised party in a transpar-
ent, decentralised manner. With the help of smart contracts,
the rules of financial transactions can be enforced without
trusted third-parties.
2.2.3 Zero Knowledge Proofs
A zero-knowledge proof [17], [38] is a cryptographic tech-
nique where one party can prove to another party that they
know a particular value without disclosing the actual value.
For example, it can be proved that an accredited university
has granted a degree to you without revealing your identity
or any other personally identifiable information contained
in the degree [38].
The key capabilities introduced by zero-knowledge proof
mechanisms are the ability of a holder to:
� Combine multiple verifiable credentials from multi-
ple issuers into a single verifiable presentation with-
out revealing verifiable credentials or subject
identifiers to the verifier [38]. This makes it more dif-
ficult for the verifier to collude with any of the
issuers regarding the issued verifiable credentials.
� Selectively disclose the claims in a verifiable creden-
tial to a verifier without requiring the issuance of
multiple atomic verifiable credentials [38]. This
allows a holder to provide a verifier with precisely
the information they need and nothing more.
� Produce a derived verifiable credential that is for-
matted according to the verifier’s data schema
instead of the issuer’s, without needing to involve
the issuer after verifiable credential issuance [38].
This provides great flexibility for holders to use their
issued verifiable credentials.
3 PROBLEM DEFINITION AND THREAT MODEL
From a macro point of view, the goal of this paper is to regu-
late the RHS industry by preventing disqualified drivers
from taking RHS orders, thus bringing security and safety
to the RHS rider and the society. From the SPs’ perspective,
they must be responsible for guaranteeing that all the regis-
tered drivers are qualified at all times. Whereas from the
riders’ point of view, for safety concerns, they require the
qualified driver for their RHS orders. Therefore, the goal of
this paper is to efficiently detect disqualified drivers by
automatizing the driver’s qualification process and incenti-
vising RHS riders to contribute to the detection of disquali-
fied drivers, thus guaranteeing RHS riders’ safety and
security while achieving a trusted RHS market. In order to
achieve this goal, we must design a system which can 1)effi-
ciently process driver’s qualifications’ check regarding
potential disqualified drivers automatically; 2)execute
incentives and punishments automatically once disqualified
driver was detected;3)act as an incentive mechanism to
reward active riders who contribute to the drivers’ check
and punish misbehaving SPs and de-register detected dis-
qualified drivers.
3.1 Threat Model
The adversary’s goal is to allow disqualified drivers to take
RHS orders. The adversary can compromise a driver’s pri-
vacy as well, including a driver’s qualification information.
We assume that it is the SPs’ responsibility to ensure that
their registered drivers are qualified, meanwhile, it is also
the SPs’ misbehaviour for allowing disqualified drivers to
take orders in the platform. In addition, we assume that the
qualification status is updated seamlessly to AudiSSI. Fur-
ther, we assume that the security of the standard crypto-
graphic primitives used in AudiSSI cannot be broken, such
as finding hashing collisions, forging digital credentials or
compromising the private keys of arbitrary entities. We fur-
ther assume that the communication between different par-
ties is secure, and that the message cannot be compromised.
3.2 Design Requirement
Given the threat model, our design requirements are:
R1 Privacy-Preserving: AudiSSI must guarantee the confi-
dentiality of the driver’s qualification information so that
the information is not revealed to the external parties.
R2 Verifiable: AudiSSI must enable the entities in the eco-
system to verify the driver’s qualifications.
R3 Trustworthiness: the driver’s check process should be
executed in a trustworthy way.
R4 Automation: the driver’s check process should be exe-
cuted automatically before the trip starts, and the payoffs
should be sent automatically once the disqualified driver is
detected.
R5 Deterrence: When a disqualified driver is detected, the
system must directly de-register the driver in the platform
and punish the defaulting SP.
3.3 Design Challenges
We encounter the following technical challenges in the
design of AudiSSI:
Challenge 1: Sybil Attack by the RHS Rider.Malicious riders
may abuse their rights in checking all the drivers associated
with all of their RHS orders which will increase the number
of drivers’ qualification checking operations, thus prolong-
ing the latency of the system and making the system less
efficient or even crash.
Challenge 2: Driver’s Privacy Leakage. Driver’s qualification
information may be revealed to external parties when the
rider validates the driver’s qualification.
Challenge 3: Spoofing Attack by SP. Malicious SPs may use
known qualified driver’s qualifications to replace those of
the real driver’s, so that disqualified driver will never be
detected and the rider will never get incentives.
LU ETAL.: SAFETY WARNING! DECENTRALISED ANDAUTOMATED INCENTIVES FOR DISQUALIFIED DRIVERS AUDITING IN... 1751
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
4 AUDISSI SYSTEM DESIGN
In this section, we discuss the design of AudiSSI. We first
introduce the architecture, then describe the workflow and
events in AudiSSI, and so on.
4.1 Architecture
The AudiSSI ecosystem mainly includes five types of par-
ties: Riders, drivers, SPs, Decentralized Market Monitor and
Qualification Blockchain Network. We will explain the
details based on the use case mentioned in Section 2.1.3.
� Riders in AudiSSI can create ride-hailing orders in
the platform, and they can also purchase the safety
guarantee insurance from the SP to have their driv-
er’s qualification checked before the trip starts.
� Drivers such as Tom, are responsible for setting the
hidden attributes Ah � f1; 2; . . . :; lg that they do not
want to disclose to the verifier according to the pre-
defined credential schema S. And Tom can request a
credential from the issuer by sending hidden attrib-
utes Ah in a blinded form to the issuer and agreeing
on the known attributes Ak ¼ f1; 2; . . . :; lgnAh.
� SPs: Like Didi Chuxing or Uber, SPs act as verifier
that checks that Tom has some credentials provided
by the issuer. In this use case, SPs have to verify sev-
eral types of identity information of Tom including
driver’s license, age, police check result and so on,
only all those credentials have verified, can SPs issue
Tom a qualification that proves he is a qualified reg-
istered driver in the platform.
� Decentralized Market Monitor is made up of lists of
smart contracts including User Registration Contract
(URC), Insurance Purchasing Contract(IPC) and Dis-
qualified Driver Auditing Contract(DDAC). By replac-
ing the centralized monitor, we construct the
Decentralized Market Monitor as a response to the
core functionalities of the driver’s qualification
checking process in a trustworthy and transparent
manner.
� Qualification Blockchain Network(QBN) plays a crucial
role in AudiSSI. It consists of several trusted nodes
including government authorities among others. It
acts as the identity credential issuer that provides a
credential to the driver, in addition to determining
the credential schema S and publishing it on the
QBN ledger L. Moreover, QBN does include a list of
qualification management protocols.
4.2 Workflow
The following steps describe the workflow of the driver reg-
istration process on the RHS platforms and the auditing
process for disqualified drivers for the use case mentioned
in Section 2.1.3, which is illustrated in Fig. 1:
1. Before the driver Tom registers in the SP, he has to
request some corresponding credentials fCCTomg
from the issuer(QBN). Therefore, he first retrieves S
from L, sets and sends the hidden attributes Ah in S
to the issuer, and then agrees on the values of
Ak ¼ f1; 2; . . . :; lgnAh.
2. After QBN (the issuer) reaches a consensus and veri-
fies the information provide by Tom, they will return
a credential pair (Cp, CNR) to Tom. Cp contains the
requested l attributes, and CNR asserts the non-revo-
cation status of Cp. Meanwhile, QBN will publish the
non-revocation status of the credential on L.
3. After Tom obtains the required credentials from
QBN, he now starts to register from the SP (the
verifier).
4. The SP sends the proof request " to Tom. The proof
request contains the credential schema SE and dis-
closure predicatesD.
5. Tom checks that (Cp, CNR) that he holds satisfies the
schema SE . He retrieves the non-revocation witness
from L.
6. Then, Tom creates a proof P that his CNR satisfies the
proof request " and sends it to the SP (the verifier).
7. The SP (the verifier) verifies P via QBN (the issuer),
and Tom becomes a qualified registered driver.
The rider is also required to register in the system,
and the registration procedure is similar. Next, when
the rider Jack creates a RHS order, he has an option
to purchase the safety guarantee insurance; if he pur-
chases the insurance, it will then execute the auditing
contract for the disqualified driver automatically. In
this case, we use Tom, as aforementioned in Sec-
tion 2.1.3, and we assume that Tom committed a
crime after he successfully became a registered
driver in the RHS platform, but that he did not
update his identity information with the SP because
he still wanted to be a driver to make a living.
Fig. 1. Overview of AudiSSI.
1752 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 22, NO. 3, MARCH 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
8. Jack’s safety concern motivates him to find out
whether Tom is a qualified driver or not. Accord-
ingly, Jack purchases the safety insurance and
requests for an audit via DDAC.
9. The DDAC triggers the verification of Tom’s creden-
tials corresponding to his qualifications in the SP.
10. The verification process will start by executing the
DDAC automatically via the Decentralized Market
Monitor, and the transaction will be written on the
ledger.
In this example, driver Tom is regarded as a dis-
qualified driver who is still taking RHS orders online.
11a. Tom will be given either pecuniary punishment, or a
ban for registering in the platform. Jack will be
rewarded for detecting the disqualified drivers.
11b. The SPs will be given pecuniary punishment as well
for allowing disqualified drivers in the platform and
bringing safety risks to its riders.
12. Then, the SPs will execute the de-registration process
for Tom.
4.3 Qualification Blockchain Network
Instead of using a centralised identity management author-
ity, AudiSSI uses qualification blockchain network to act as
the issuer in the anonymous credential architecture. In
AudiSSI, QBN can use a plug-able consensus protocol, for
illustration we use an RBFT consensus protocol [5] to main-
tain a replicated ledger because RBFT is fault-tolerate and
its performance is constant when suffering attacks. The
immutable QBN ledger will maintain only pseudonymous
identifiers, such as the current accumulator A, the set of
non-revoked indices V and the credential schema S, but not
store any private data. Moreover, the benefits of QBN are
simplified qualification verification process, reduction of
intermediaries, reduction of administrative costs and
increase in operational efficiency.
QBN does include a list of qualification management pro-
tocols as well to support the operations in the system, which
will be explained in the in-depth discussion as follows.
Identity Management Protocols. As the core part of Audi-
SSI, Identity Management Protocols consists of Issuance Proto-
col, Verification Protocol and Revocation Protocol. In the
beginning, issuer in AudiSSI first generates the system
parameters Table 1 and determines the credential schema S
with l attributes m1;m2; . . . ;ml and the set of hidden attrib-
utes Ah � {1; 2; . . . ; l} which are agreed upon by all entities.
In AudiSSI, issuers use CL-signature [7] for primary creden-
tials, and CKS accumulator and signatures [6] to track revo-
cation status of primary credentials. The primary credential
contains the requested l attributes(for example the the driv-
ers’ open and hidden attributes). The non-revocation cre-
dentials assert the non-revocation status of the primary
credential. The accumulator is used to store the ids of non-
revoked credentials. When issuing new credentials, the
issuer will add the non-revocation id to the accumulator,
and when revoking certain credentials, the issuer will
remove that particular credential’s id from the accumulator.
4.3.1 Issuance Protocol
As indicated in Step 1-2 shown in Fig. 1, the issuance pro-
cess is between the identity owner (e.g., the driver) and the
issuer (e.g., QBN). The owner O will set the process up first
by loading the lists of credential schema fSg, then setting
the hidden attributes fmigi2Ah
and getting a nonce n0 from
the issuer.
Next, the owner prepares data for both primary and non-
revocation credentials and then sends them to the issuer,
the process for which is as follows:
1. Load issuer’s public key Pk ¼ ðn; S; Z; fRig1�i�lÞ and
issuer’s private key PR ¼ ðh; h0; h1; h2; eh; bh; u; pk; yÞ;
Generate random number v0, ffmigi2Ah
, ev0, nonce n1
and s0R mod q;
2. Compute the primary credential by
U  ðSv0 Þ
Y
i2Ac
R
mi
i ðmod nÞ;
eU  ðSev0 Þ
Y
i2Ac
R
emi
i ðmod nÞ;
c HðUjj eUjjn0Þ; bv0  ev0 þ cv0;
fcmi  fmi þ cmigi2Ah
;
UR  h
s0
R
2 :
3. Send primary credential fU; c; bv0; fcmigi2Ah
; n1g and
non-revocation credential UR to the issuer.
After the data preparation, the issuer will verify the cor-
rectness of the owner’s input, and then prepare for the cre-
dentials, for which the process is as follows:
1. Assign index i < L to the owner, which is one of
not yet taken indices for the issuer’s current accu-
mulator A; Retrieve the current set of non-revoked
indices V ; Compute m2  HðijjHÞ and store
information about the owner and the value i in a
local database;
TABLE 1
Setup Procedure
Primary Credential Setup :
1 Issuer generates primes p0, q0;
2 p 2p0 þ 1 ;
q 2q0 þ 1;
3 n pq;
4 Issuer generates random quadratic residue S modulo n;
5 Issuer generates random xZ; xR1
; . . . ; xRl
2 [2; p0q0 � 1]
6 Issuer computes: Z  Sxzðmod nÞ; fRi  SxRi ðmod nÞg1�i�l;
7 Issuer’s public key: Pk ¼ ðn; S; Z; fRig1�i�lÞ,
private key : sk ¼ ðp; qÞ.
Non� revocation Credential Setup :
1 Issuer chooses:
Groups G1;G2;GT of prime order q;
Type-3 pairing operation e : G1 � G2 ! GT ;
Generators: g for G1, g
0 for G2.;
2 Issuer generates:
Random h; h0; h1; h2; eh 2 G1;
Random u; bh 2 G2;
Random sk; x (mod q);
3 Issuer computes: pk  gsk; y bhx
4 The revocation public key: PR ¼ ðh; h0; h1; h2; eh; bh; u; pk; yÞ,
secret key : ðx; skÞ.
LU ETAL.: SAFETY WARNING! DECENTRALISED ANDAUTOMATED INCENTIVES FOR DISQUALIFIED DRIVERS AUDITING IN... 1753
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
2. Set the values of disclosed attributes with indices
from Ak;
3. Generate random number v00, s00, c mod q, random
prime e and random r < p0q0;
4. Compute
Q Z
USv00
Q
i2Ak
R
mi
i ðmod nÞ ;
A Qe�1ðmod p0q0Þðmod nÞ;
bA Qrðmod nÞ;
c0  HðQjjAjj bAjjn1Þ;
se  r� c0e�1ðmod p0q0Þ;
s  ðh0h
m2
1 � U � gi � hs00
2 Þ
1
xþc;v 
Y
j2V
g0Lþ1�jþi0 ;
si  g01=ðskþg
iÞ;ui  ugi
A A � g0Lþ1�i;V  V [ fig;
witi  fsi; ui; gi; w; V g
5. Send the primary pre-credential ðfmigi2Ak
; A; e; v00;
se; c
0Þ and the non-revocation pre-credential ðIA; s; c;
s00; witi; gi; g
0
i; iÞ to the owner; Publish updated V;A
on the ledger L.
After verifying the pre-credentials, the owner then com-
putes primary credential Cp ¼ ðfmigi2Cs
; A; e; vÞ and the
non-revocation credential CNR  ðIA; s; c; s00; witi; gi; g0i; iÞ,
and the credential issuance process is completed.
4.3.2 Verification Protocol
The verification process is shown in the Steps 3-7 in Fig. 1.
We will briefly introduce the procedure in the following
paragraphs.
First, the verifier will send a proof request to the owner,
which specifies the following: (1) the ordered set of d cre-
dential schemas fS1; S2; . . . :; Sdg, so that the owner can pro-
vide a set of d credential pairs ðCp; CNRÞ that correspond to
these schemas. (2) the unknown attributes Ah;f which map
Ah to f1; 2; . . . :; xig, the disclosed attributes Av and the setD
of predicates. X denotes the total number of attributes in
these schemas.
Next, to get the non-revocation proof, the owner will pre-
pare all the credential pairs ðCp; CNRÞ, create empty sets T
and C, then load issuer’s public revocation key p ¼
ðh; h1; h2; eh; bh; u; pk; yÞ, the non-revocation credential CNR  
ðIA; s; c; s; witi; gi; g0i; iÞ, V , and update CNR by:
w w �
Q
j2V nVold g
0
Lþ1�jþiQ
j2VoldnV g0Lþ1�jþi
; Vold  V ;
Vold is taken from witi; Then compute
E  hr eho;D gr eho0 ;
A sehr;G gi ehr;
W  wbhr0 ;S  si
bhr00 ;
u ui
bhr000 ;
and add these values to C.
Next compute:
m r � c; t o � c;
m0  r � r00; t0  o0 � r00;
Generate random:
er, eo, eo0, ec, em, fm0, et, et0, fm2, es, er, er0, er00, fr000 mod q.
Next compute:
T1  her eheo;
T2  Eeoh�em eh�et;
T3  eðA; bhÞec � eðeh; bhÞer � eðeh; yÞ�er � eðeh; bhÞ�em�
eðh1; bhÞ� em2 � eðh2; bhÞ�es
T4  eðeh; accÞer � eð1=g; bhÞer0 ;
T5  ger eheo0
T6  D
er00g�em0 eh�et0 ;
T7  eðpk � g; bhÞer00 � eðeh; bhÞem0 � eðeh; SÞer
T8  eðeh; uÞer � eð1=g; bhÞer000 ;
and add these values to T .
Next, to get the validity proof, the owner will compute
several security variables and then add them to C and T
respectively. And the owner will compute the challenge
hash by:
cO  HðT ; C; n1Þ:
Next, the owner will compute the sub-proofs for the non-
revocation credential CNR, the primary credential Cp, and
the predicate p : X , PrC , and Prp, respectively, and then
send (cO, X , PrC , Prp, C) to the Verifier.
Then the verifier will proceed the non-revocation check
and the validity check and get bT , we are not going to dis-
cuss in details as for a more comprehensive computing pro-
cess, we refer the reader to the anonymous credential
specification [8].
With bT , the verifier then computes
ccO  HðbT ; C; n1Þ:
If cO ¼ccO, then it means the owner’s proof of identity is ver-
ified, else it means fail. After this step, it means the verifica-
tion process is completed.
4.3.3 Revocation Protocol
When the invalid identity information is updated on the
trusted entities’ end, the issuer will identify a credential to
be revoked in the database and retrieve its index i, the accu-
mulator value A, and valid index set V . Then he proceeds
as follows:
1754 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 22, NO. 3, MARCH 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
1. Set V  V nfig;
2. Compute A A=g0Lþ1�i.
3. Publish fV;Ag.
The Revocation Protocol will contribute to updating the
invalidity of the credentials; thus the auditing mechanism is
able to execute the verification in the later stage.
4.4 Decentralized Market Monitor
To better regulate the RHS market, entities can audit poten-
tial disqualified drivers via the decentralised market moni-
tor in a trusted and transparent way. For the riders in the
system, they are motivated to detect their drivers for their
personal safety and security concerns. AudiSSI further
offers its riders a novel type of insurance named safety
guarantee insurance which the riders can purchase from
their SP via IPC. The insuring rider will then execute the
DDAC automatically before the trip starts. In addition, all
entities must register via the User Registration Contract
before entering the system. A detailed discussion is given in
the following paragraphs.
4.4.1 User Registration
We explain by using the example use case. When Tom starts
registering as a driver from the SP, different from the tradi-
tional way of identity verification where Tom has to upload
his identity documents to the SP, what Tom does is only to
send the lists of identity proofs required to the SP. The SP
will then verify the proofs via the Verification Protocol, if ver-
ified, the SP will permit Tom as a qualified driver and issue
him a digital driver’s license in the platform, else reject
Tom’s request.
The registration process is also recorded as a transaction
in the monitoring blockchain network. The detailed regis-
tration transaction is as follows.
� Inputs:
– User’s primary credential Cp
– User’s non-revocation credential CNR
– User’s financial account address Pku
� Outputs:
– Registration transaction rt
Different entities who wish to use this system must regis-
ter their identity via User Registration Contract. They will
generate new and unique public-private key pair ðPku; SkuÞ
in the system. And the key pair ðPku; SkuÞ will be used in
the underlying payouts process
rt ¼ ðTimestamp;TxID;Type; Infou;PkuÞ:
TxID is a unique identifier for the transaction which can be
hash digest of all the other elements in the rt in practice.
Type denotes the registering entity’s type, it could be a
driver, a rider or an SP. Infou denotes the registering entity’s
description, the detailed profile like the driver’s identity
information, and etc.
4.4.2 Insurance Purchase
As mentioned previously, AudiSSI introduces a novel Safety
Guarantee Insurance to mitigate Sybil attack launched by mali-
cious consumers. A consumer can only have his driver
audited before his trip started after purchasing the insur-
ance. To purchase the insurance, the consumer must trans-
fer a fee feeIns to the Global Account. In AudiSSI, a consumer
can purchase the insurance through IPC, and the detailed
transaction is as follows.
� Inputs:
– Registration transaction rt
– Insurance Fee feeIns
� Outputs:
– Insurance payment transaction ipt
Each ipt includes the sufficient information which can be
used for DDAC verifying the validity of insurance. Addi-
tionally, the insurance contains the fees incurred feeIns and
the information included in the InsInfo. A transaction ipt is
in the following form:
ipt ¼ ðTimestamp;Pku;TxID; InsInfo; feeInsÞ:
4.4.3 Disqualified Driver Auditing
As mentioned in Step 8-12 of the workflow in Section 4.2,
the auditing contract will be automatically executed if a
rider has purchased the insurance. Note that we have made
the assumption in the threat model that the peers in the
QBN will always keep the identity information updated; for
instance, Tom’s police check record will be updated imme-
diately once Tom commits a crime. This is feasible because
the police office can be a verifier in the network. The
detailed process is provided in Algorithm 1.
Algorithm 1. Disqualified Driver’s Audit
Input: 1)MsgR:Rider’s message
2)MsgSP :SP’s message
3) Driver’s rt
4) Rider’s rt
5) Rider’s ipt
6) Ledger L
Output: Disqualified driver auditing transaction ddat
Procedure Disqualified Driver Auditing Process
1 Verify the rider’s and the driver’s registration validity
through rt;
2 Verify the rider’s insurance validity through ipt;
3 Process ID-Plate-Binding authentication of the different
entities’ messages:
4 if verified then
5 i get driver’s identifier from driver’s rt;
6 Cp; CNR  get credential pairs from driver’s rt;
7 Compute: T , bT ;
8 Generate random number: n1;
9 Compute: ci  HðT ; C; n1Þ;
10 Compute: bci  HðbT ; C; n1Þ;
11 if ci ¼ bci then
12 Do nothing;
13 else
14 ReactionPlan.trigger, generate transaction ddat.
15 end
16 else
17 end process.
18 end
LU ETAL.: SAFETY WARNING! DECENTRALISED ANDAUTOMATED INCENTIVES FOR DISQUALIFIED DRIVERS AUDITING IN... 1755
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
When auditing a certain driver’s qualifications, usually a
list of items of identity information is audited; accordingly,
if one identity item is detected as disqualified, this driver
will be regarded as disqualified driver and he must be de-
registered from the SP’s database.
ID-Plate-Binding Authentication
During the auditing process for disqualified drivers, the
DDAC will use the driver’s qualification information pro-
vided by the SP. However, the malicious SPs can launch
Spoofing attack by replacing the real driver’s information by
the known qualified driver’s information. To prevent such
attack, we propose an ID-Plate-Binding Authentication
scheme to guarantee the correctness and immutability of
the information used in the auditing process.
Since each driver’s vehicle plate number is unique in the
RHS system and it must be revealed to the rider, the ID-
Plate-Binding Authentication scheme makes the vehicle’s
plate number in plain text, and this is bound to the driver’s
other identity information. Therefore, the DDAC will record
the auditing results together with the driver’s plate number
in plain text so that the rider can also manually check the
correctness of the auditing results.
As all the involved parties will interact with theDDAC in
the driver auditing process, the SP will transmit MsgSP and
the rider will transmitMsgR through a secure channel to the
DDAC. Note that the driver’s identity information is col-
lected from different sources: The rider’s mobile devices
and the SP’s application (RHS and driver’s qualification
auditing are two different applications; during the auditing
process, we assume that the DDAC can not only collect
information from the rider’s end but also can collect from
the SP’s RHS application)
MsgR ¼ fOrderInfo;PlateNum; RSigng
MsgSP ¼ fOrderInfo0;PlateNum0; Cp; CNR; SPSigng
RSign ¼ SignðOrderInfo k PlateNum; SkRÞ;
where OrderInfo denotes the order’s information, PlateNum
denotes the driver’s plate number collected from the rider’s
mobile device and RSign denotes the rider’s signature that
calculated with rider’s secret key SkR.
Also, the SP will send the order’s information OrderInfo0 ,
driver’s plate number PlateNum0 and SPSign which is the
SP’s signature signed over OrderInfo0 concatenate to
PlateNum0 by the SP’s secret key SPsk.
SPSign ¼ SignðOrderInfo0 k PlateNum0; SkSP Þ:
When the DDAC receives messages from the rider and
the SP, it first compares the plate number value
PlateNum ¼? PlateNum0;
and if the result is equal, it computes whether PlateNum is
included in Ak which is extracted from driver’s primary cre-
dential Cp. If yes, it implies that the driver’s qualification
information is correct and tamper-proof, and then the
credential pairs Cp and CNR will be used in the later stage of
the auditing process.
4.4.4 Reaction Plan
The reaction plan stands for the insurance claim, it is the
financial reaction transaction defined in the Safety Guarantee
Insurance. The plan includes the payments that occur in
response to detect a disqualified driver. As shown in Algo-
rithm 4.4.4, the DDAC contains the reaction plan to execute
the financial transactions when a disqualified driver is
detected.
Algorithm 2. Reaction Plan
Input: 1)OrderInfo;
2) Pre-defined Incentive Mechanism;
3)AccF;
Output: Payouts Distribution
Procedure Process of Reaction
1 PkR  retrieve rider’s account address from OrderInfo;
2 PkSP  retrieve SP’s account address from OrderInfo;
3 i retrieve driver’s identity information from OrderInfo;
4 Send fDet from AccF to PkR;
5 Send fPun from PkSP to AccF;
6 De-register driver i from the platform.
7 end Procedure
4.5 Payout Settings and Incentive Mechanism
In this section, we will explain the incentive mechanism that
we proposed to incentivise detectors and to punish misbe-
having SPs for allowing disqualified drivers taking RHS
orders. First, we provide a framework for payout reaction
programs, which specifies a set of financial payments to be
executed when detecting a disqualified driver.
To guarantee the Global Fund Account has enough balance
for the pre-defined payouts, when SP first registered in the
system, a security deposit Deposit is required and should
be transferred to the global fund.
Detector Payouts. The detector payout (fDet) is paid to the
rider who purchases the insurance and successfully detects
the disqualified driver. The payout compensates the rider
for the safety and security risks they incur by having a dis-
qualified driver taking their RHS order and incentivises
them for detecting the disqualified driver. At the same time,
the punishment fee fPun will be applied to the misbehaved
SP, and we have
fDet < < fPun; (1)
where fPun is a fixed large sum of money.
For a reaction plan, AudiSSI presets the payouts fDet,
Deposit ,fPun and the insurance price fIns. AudiSSI sets the
constraint on the amounts that must hold
fIns < fDet < fPun < Deposit: (2)
5 ANALYSIS
We analyse AusiSSI according to the design requirements.
1756 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 22, NO. 3, MARCH 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
5.1 Security Analysis
Security Against Sybil Attacks. AudiSSI provides disqualified
driver detection in RHS. However, Sybil attacks can be
launched by malicious riders to increase the blockchain
network’s computation costs, it will making the entire sys-
tem inefficient not only when auditing potential disquali-
fied drivers. Through the proposed insurance scheme,
AudiSSI actually increases the costs for an audit. Only riders
who has purchased insurance can be able to have their driv-
ers audited. Therefore, AudiSSI can mitigate Sybil attacks.
Security Against the Malicious SP. AudiSSI adds a new
entity named decentralised market monitor(DMM) in the
system. Thanks to the decentralised nature, it makes sure
that no centralised authority controls the driver auditing
process. However, a malicious SP could launch Spoofing
attack by submitting known qualified driver’s information
to the DDAC during the auditing process. In AudiSSI, we
have designed the ID-Plate-Binding authentication scheme
which allows DDAC to validate the driver’s information
from the SP’s end, as well as the rider’s end. The scheme
first verifies whether the driver’s plate number value
PlateNum from the rider’s message matches PlateNum0
from the SP’s. If verified, then it verifies whether this
PlateNum is included in the known attributes Ak extracted
from the primary credential Cp. AudiSSI will not allow
manipulated information to proceed to the next step in the
auditing process, it therefore guarantees that the malicious
SPs do not succeed.
Security Against Privacy Leakage Attacks. AudiSSI provides
resistance against privacy leakage, which can be launched
by any entity in the system. AudiSSI leverages zero-knowl-
edge proof technique; the identity information proof will
selectively disclose the user’s private information in the sys-
tem. The entity can choose which attributes to hide and
append to Ah while only attributes in Ak are revealed to the
public. Therefore, the system will not reveal any hidden
information to other users even during the auditing process.
5.2 Feasibility Analysis
With the increasing sophistication of the attacks and the
complexity of the systems, the protection using traditional
methods could be cost-prohibitive[43]. To better understand
security from a strategic and decision-making perspective,
game theory provides a natural framework to capture the
adversarial and defensive interactions between an attacker
and a defender. It provides a quantitative assessment of sit-
uations of conflict and cooperation, it is appropriate to ana-
lyse the acceptance of AudiSSI.
Since the objective of each player in the game is to maxi-
mise its own profit, it therefore models the interactions
between SPs and consumers in the form of non-cooperative
game. The fundamental assumption in the game theory is
that all players are rational and try to optimize their individ-
ual payoffs. Also, each player knows that other players are
using payoffs maximizing decisions. Furthermore, as
adopted often in practice, the driver auditing used in this
paper is pay-per-use. For easy demonstration and presenta-
tion, we summarised the core notations in Table 2. While
the fundamental elements in the game are discussed as
follows:
5.2.1 Player
In our RHS system R ¼ fSS;RR;DD;MMg with AudiSSI, where
SS;RR;DD, and MM denote the sets of SPs, riders, drivers and
market authorities, respectively. Since the authorities’
responsibility is monitoring and regulating the market
while are not looking for profits, only SPs and riders are
considered in our game settings. Also, we regard that the
driver defaulting is the SP’s misbehaviour.
5.2.2 Strategy
SPs. The SPs have two different strategies to play: Strictly
verifying their registered drivers regularly or not strictly
verifying their registered drivers. SPs can choose to behave
correctly by checking their registered drivers regularly to
prevent disqualified drivers from taking RHS orders, or
choose to not check their drivers. Some SPs choose the latter
option to save huge verification costs; however, if they are
caught misbehaving, they would lose a large amount of
penalty.
Riders. Since the riders in RHS have safety and security
concerns about disqualified drivers taking their orders, it is
natural to assume that all the riders want to avoid disquali-
fied drivers. The riders are provided with the option to pur-
chase a Safety Guarantee Insurance within AudiSSI. If a rider
purchases insurance, the disqualified driver will be surely
detected if he is taking this rider’s RHS order which means
that it is the SP’s misbehaviour for allowing disqualified
drivers to enter the market. Nevertheless, if a rider does not
purchase the insurance, even if disqualified drivers are tak-
ing orders, the rider has no efficient way to detect the same
and has to take safety risks to use the RHS.
5.2.3 Payoff
Payoff of SPs. In general, if the SP chooses to check its regis-
tered drivers’ qualifications frequently, we assume that the
SP has to spend Cost for every driver’s checking. If the rider
chooses No Insurance, the payoff of SP s equals the cost
incurred in checking the driver’s qualifications.
TABLE 2
Notation With Nomenclature
Field Use
s; SS SPs;
r; RR riders;
fIns The cost for purchasing a Safety Guarantee Insurance;
fPun The penalty paid by an swhen detected behaving
abnormally;
fDet The incentives given to the rider s for detecting
disqualified driver;
fRisk losses per order for a rider taking safety risks from
riding by a disqualified driver;
Cost cost that the SP have to spend for every driver’s
checking;
b 04b41, the probability that r chooses No Insurance
strategy, or the share of orders r buys Safety
Guarantee Insurancewithin AudiSSI;
u 04u41, the probability that s chooses Not Strictly
Checking Driver’s Qualifications strategy, or the
share of orders s uses Not Strictly Checking Driver’s
Qualifications.
LU ETAL.: SAFETY WARNING! DECENTRALISED ANDAUTOMATED INCENTIVES FOR DISQUALIFIED DRIVERS AUDITING IN... 1757
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
When SP does not strictly check its registered drivers’
qualifications, once a disqualified driver is detected, the cor-
responding SP will subsequently be punished by fPun
amount of money per order.
Payoff of Riders. A rider r 2 RR uses RHS at SP s 2 SS. When
a rider does not purchase the Safety Guarantee Insurance
within AudiSSI, if the SP is not strictly checking its drivers’
qualifications, the rider will take safety risks, and we
assume this risk will lead to a fRisk loss to the rider for each
order.
When r purchases the insurance, and if s is not strictly
checking its driver’s qualifications and the disqualified
driver will be detected, r will be reward by fDet amount of
money for each order.
5.2.4 Which Strategy to Choose
The SPs are always pursuing profit maximization under
RHS context, while the riders are looking for safety and
security in their ride. Fig. 2 shows the game bi-matrix,
which demonstrates the possible strategies for both players.
Players decide which strategy to choose based on analysing
the information in this bi-matrix.
In plain terms, in a pure Nash equilibrium, no player
would have anything to gain by changing his/her strategy,
given the strategy of the other players unchanged. Consid-
ering the payoff bi-matrix shown in Fig. 2, in a single-stage
game, there does not exist such a stable combination of
strategies in which for both players have no motivation to
change. This game does not have a pure strategy Nash Equi-
librium.1 However, if at least one player chooses a rando-
mised strategy, the game will have a mixed strategy Nash
equilibrium. Similar to a pure Nash equilibrium, in a mixed
strategy Nash equilibrium, both players would not benefit
from changing their (randomised) strategy [44].
An SP may not always fail to check its drivers, and we
assume that the SP may choose not to regularly check u pro-
portion of its registered drivers; thus, the proportion of fre-
quently checked driver’s is 1 � u. Furthermore, a rider may
decide whether to buy a Safety Guarantee Insurance within
AudiSSI. We assume that the rider buys this insurance for b
proportion of the orders, and thus the proportion of orders
without insurance is 1 � b.
Theorem 1.When SP and rider make payoff-maximizing choices
and they both know their opponent is rational, fPun � Cost
(the penalty charges for an SP when detected behaving abnor-
mally is much greater than the cost per order of checking driv-
er’s qualifications), then in the equilibrium, the incentive of
rider to buy the insurance will be exceedingly low.
Proof. In the definition of amixed strategyNash equilibrium,
given the strategy of rider, the SP is indifferent between
playing Strictly Checking Driver’s Qualifications and Not
Strictly Checking Driver’s Qualifications. This means that
the SP’s expected payoff of choosing Strictly Checking
Driver’s Qualificationsmust be equal to that of playing Not
Strictly CheckingDriver’s Qualifications.We have
ð1� bÞ � ð�CostÞ þ b� ð�CostÞ ¼ ð1� bÞ � 0þ b� ð�fPunÞ:
We obtain
b ¼ Cost
fPun
:
When fPun � Cost (in practice, SPs always have to
pay an extremely large fine when they are detected
behaving abnormally, which is much greater than the
cost per order of checking driver’s qualifications), b 	 0.
This implies that in the long-run equilibrium, the incen-
tive of rider to buy the insurance would be approxi-
mately zero; thus, the theorem is proved. tu
Theorem 2.When SP and rider make payoff-maximizing choices
and they both know their opponent is rational, fDet � fIns (the
incentives to the affected rider for detecting a disqualified driver
is far larger than the the cost of purchasing insurance; then in
the equilibrium, the incentive of SP to choose Not Strictly
Checking Driver’s Qualifications will be exceedingly low.
Proof. In the definition of a mixed strategy Nash equilib-
rium, given SP’s strategy, the rider is indifferent between
choosing No Insurance and With Insurance. The rider’s
expected payoff when choosing No Insurance must be
equal to which of choosing With Insurance. We have
ð1� uÞ � 0þ u � ð�fRiskÞ ¼ ð1� uÞ � ð�fInsÞ þ u � ðfDet � fInsÞ:
We obtain
u ¼ fIns
fDet þ fRisk
:
When fDet � fIns (in reality, the incentives given to the
affected rider for detecting disqualified driver is far larger
than the cost of purchasing insurance), u 	 0. This implies
that in the long-run equilibrium, the incentive of SP to
apply Not Strictly Checking Driver’s Qualifications would
be exceedingly low, and the proof of the theorem is done.tu
In conclusion, from a long-run point of view, although a
rider has a particularly low incentive to buy the insurance, the
Fig. 2. The payoff bi-matrix in AudiSSI.
1. The payoff matrix in Fig. 2 shows that, if the rider chooses No
insurance, SP will choose Not Strictly Checking Driver’s Qualifications.
When SP chooses Not Strictly Checking Driver’s Qualifications, the
user will prefer With Insurance. When the user chooses With Insurance,
then the SP will choose Strictly Checking Driver’s Qualifications. If the
SP chooses Strictly Checking Driver’s Qualifications, the user chooses
No Insurance. Therefore, in this case, there does not exist a pure Nash
Equilibrium.
1758 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 22, NO. 3, MARCH 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
introduction and application ofAudiSSI inRHS could prevent
against SPs’ misbehaviour of not strictly checking their regis-
tered driver’s qualifications. Meanwhile, the mixed strategy
equilibrium (as well as the expected payoff for both side in
this equilibrium) is close to that of the social welfare theoreti-
cal optimal situation (namely, SP chooses Strictly Checking
Driver’s Qualifications and rider choosesNo Insurance).
6 EXPERIMENTS AND EVALUATIONS
6.1 Experiment 1: Identity Management Procedures
We instantiated AudiSSI prototype by using Hyperledger
Indy [21] and Fabric [16] frameworks. Our first experiment
was the identity management process. The basic set-up for
the experiment is as follows,
� the nodes run in 3.20GHz 6-vCPU Ubuntu VM with
8GB of RAM and HDDs as local disks;
� the nodes run on Indy instrumented performance
evaluation through local logging;
� the nodes run in the docker container.
� four nodes and five clients runs in the indy_pool, the
indy_pool depends on indy_plenum version 1.9.2
dev871 and indy_node version 1.9.2 dev1061.
� the nodes run in a modified RBFT consensus proto-
col to agree on the order of transactions.
We took the ride-hailing use case as an example to exper-
iment on the time consumption of the different phases in
the identity issuance and verification process. We used two
different credential schemas in the experiment: The identifi-
cation information and the vehicle registration information.
6.1.1 Evaluation on Experiment 1
As indicated in Table 3, AudiSSI spends 28.02 seconds dur-
ing the set-up phases; this is because the phases are only exe-
cuted once, and it will do the fundamental set-ups for the
system such as setting trust nodes, credential schemas and
so on. Next, for the two example use cases, as the identifica-
tion credential schema is simpler than the vehicle registra-
tion credential, the total time consumption for the
identification credential issuance and verification is 2.45 sec-
onds which is much quicker than 4.02 seconds taken for the
vehicle registration credential. In summary, although Audi-
SSI does take a relatively long time during the set-up phases,
it is required to be carried out only once in a lifetime. Further,
the duration of the credential issuance and verification
phases is in second-level. Therefore, the total time consump-
tion for the identitymanagement process is viable in real life.
6.2 Experiment 2: Auditing Process
In this experiment, we tested the performances of the audit-
ing process. The experiment setup is as follows,
� The version of Hyperledger Fabric is v1.1.0. We
instantiated two organisations(orgs) which were
embedded on two different physical node, with each
org containing one single peer. We also included an
extra physical node for the orderer and Certificate
Authorities(CAs).
� The system environment of each node is Intel(R)
CoreTM i5-4460 3.20GHz 4-vCPUVMs running Ubuntu
18.06 with 8GB of RAM, the local disk is 1TB HDD. All
nodes are interconnectedwith 100Mbps networking.
� We used Hyperledger Caliper [10] to measure the
performance. (Caliper is a benchmark framework to
measurethe performance of multiple blockchain sol-
utions; currently supported performance indicators
include throughput and latency.)
During the experiment, the baseline experiment was that
these two orgs, the orderer and CAs are all embedded on
the same physical node. The first phase of the test was to
invoke transactions for three rounds; in each round we sub-
mitted 500 transactions, and the send rate increased from
100 transaction per second(tps) to 300 tps. The second phase
of the test was to query from the nodes for three rounds; we
submitted 10000 transactions per round, and the send rate
increased from 500 tps to 1500 tps. In the distributed nodes
settings, the two orgs were embedded on different physical
nodes, and both orderer and CAs were embedded on
another physical node. The experiment procedure was
exactly the same as the baseline experiment.
6.2.1 Evaluation on the Experiment 2
According to the results, the throughput of invoking was
found to increase as the send rate increased, which is the
same as the throughput of querying. When all the logical
nodes are settled on the same physical node, the throughput
of either querying and invoking is lower than which are set-
tled on the distributed nodes.
As the send rate increases, the throughput increases, but
once the send rate reaches its threshold, the throughput will
not increase anymore. The threshold is limited by the hard-
ware limitation of the running node.
When the number of physical nodes increases, the
threshold increases as well, implying that the performance
will increase as well. As is shown in Fig. 3a, when the send
rate is 1500 tps, the baseline setting is 1028.3 tps which is far
below 1500 tps, which means that it has reached the thresh-
old. A similar pattern can be found in Fig. 3b as well.
As shown in Figs. 4a and 4b, when the throughput
approaches the threshold, the latency of each transaction
shows gradual improvement.
As the number of physical nodes increases, the changes
of latency decreases slowly as the throughput approaches
the threshold. Fig. 4a demonstrates that when the send rate
increases to 1500 tps, the query throughput can no longer
match the send rate. For the baseline settings, the latency
TABLE 3
Time Consumption of Each Phase
Phase Cost(s) Accumulated Cost(s)
Setting Trust Nodes 14.56 -
Setup Credential Schemas 2.02 -
Setting Credential Schemas 11.69 28.27
- - -
ID Credential Issuance 0.95 -
ID Credential Verification 1.50 2.45
- - -
Vehicle Rego Issuance 2.07 -
Vehicle Rego Verification 1.95 4.02
LU ETAL.: SAFETY WARNING! DECENTRALISED ANDAUTOMATED INCENTIVES FOR DISQUALIFIED DRIVERS AUDITING IN... 1759
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
significantly increases from 0.01s to 0.16s; meanwhile, in a
distributed setting, the latency increases from 0.01s to 0.04s.
7 RELATED WORK
7.1 Non-Blockchain Based Self-Sovereign Identity
Solutions
Some previous approaches have also sought to solve the
identity management problem through other sources. For
example, Personal Data Storage (PDS) [4], [35], [37] are envi-
ronments where the user has full control over the access of
other parties. However, PDS does not propose standard
schema to store the information in, which makes it difficult
for the user to verify the information. Solutions based on
attribute-based credential schemes such as IRMA [20], [35]
enable users to receive digitally signed attributes from
trusted issuers such as the government.
Additionally, IRMA meets the privacy requirement by
allowing its user to disclose its information selectively. How-
ever, as the private credentials are stored on the user’s phone,
losing the phone implies losing the identities aswell. Therefore,
both of the above approaches have not addressed the problem
of the cumbersome, lengthy identity verification process.
7.2 Blockchain Based Self-Sovereign Identity
Solutions
As blockchain essentially provides a decentralised domain
which is not controlled by any single entity, it coincides
with some desirable properties of a self-sovereign identity.
Many researchers have already exploited this technique to
develop self-sovereign identity applications on Blockchain-
based platforms[18]. Built on top of the Ethereum [36] plat-
form, uPort [34] is a decentralised identity system which
supports the notion of self-sovereign identity [35]. By using
smart contracts and Interplanetary File System (IPFS)[22],
uPort allows its user to use a mobile application to create,
update and share identity information with other users, and
to store the corresponding private key on IPFS. Further,
uPort also uses the public registry to create a correlation
between a uPort identity and its corresponding IPFS data.
However, uPort currently only allows creating one identity.
Therefore, uPort is not as flexible as our proposed system.
Moreover, as the private key is stored on the smartphone,
losing such a device would result in losing the identity,
which would also increase the security risks.
Another identity solution, Sora [30], is based upon JSON-
LD standardised [24] key-value pairs. Its attribute-based
storage enables selective disclosure of the identity informa-
tion. Although it is easy to use, the identity as the private
key is not solely stored on the mobile device but created
from a master password which is stored on an accessible
centralised server; therefore, it brings some security con-
cerns if the centralised server is compromised.
Different from uPort and Sora, Sovrin [29] network is a
public permissioned distributed ledger. Sovrin enables its
users to manage its identity themselves while providing
opportunities to selectively disclose their identity informa-
tion by using zero-knowledge proofs. However, they do not
seem to provide or require any (verifiable) guarantees con-
cerning the correct functioning of agents in the network
[35]. Therefore, Sorvin is not provable.
Although some previous approaches could address par-
ticular problems in the identity management area, none of
the approaches has solutions towards the time-sensitivity of
the identity information. In this regard, AudiSSI does not
only allow the user to control their identity in privacy-pre-
serving bases, but also introduces a mechanism towards the
invalid time-sensitive identity information.
7.3 Insurance Schemes
Insurance and insurance related schemes are widely used in
all walks of life, both in traditional and modern context. Tra-
ditional applications such as life insurance and car insur-
ance are everywhere in one’s life. Recently, applications
such as flight delay insurance, delivery food delay insur-
ance has entered our lives. For example, a food delivery ser-
vice provider Eleme[40] enables its customers to purchase a
delay insurance while placing an order and the consumer
will then get compensated if the delivery is delayed. Other
types of insurance include electronic insurance policies for
service evaluation in distributed systems[41] and authenti-
cation metric that follow good design principles [42]. How-
ever, both of these proposals offer little accountability and
automation. Due to the complexity of the RHS systems’
pricing algorithms, the aforementioned insurance scheme
can not be directly applied to the price auditing as these
methods do not allow auditing publicly.
AudiSSI borrows the idea from Spas [33] which is the
first work to introduce such insurance idea into price poli-
cies as a means of balancing SP control capability and liabil-
ity. Spas also utilised smart contract technology to add
value and trust to public auditing and automatic execution
of transactions. However, the main difference is that the
motivation of AudiSSI is raised by SP not carefully checking
their registered drivers, cost consumption and privacy con-
cerns in registration process. As we know that current RHS
companies allow a potential driver to register as a qualified
Fig. 3. Throughput of different executions. Fig. 4. Latency of different executions.
1760 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 22, NO. 3, MARCH 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
driver after a driver’s check. However, this check does not
often take place again after the driver gets successfully reg-
istered since the SPs are not willing to put in so much effort
on the time-consuming and costly process. Therefore, it
results in a large number of registered drivers who are no
longer qualified (e.g., their driver’s license is revoked) con-
tinuing to take orders on the RHS platform, which will not
only lead to serious security problems for the RHS riders
and the society but also harm the SP’s reputation. Therefore,
in this paper, we are motivated to foster security in RHS set-
tings which not only enables safety and transparency on the
user level but also increases the health of the online RHS
market ecosystem in general.
While the motivation of Spas [33] is to address the price
discrimination raised by the SP. They are totally different in
this arena.
8 CONCLUSION
In this paper, we presented an auditable self-sovereign
identity system (named AudiSSI), which allows the user to
self-manage their identities without sacrificing the user’s
privacy and provides an efficient way for the SPs to check
its registered drivers’ qualifications. Further, we proposed a
safety guarantee insurance in the form of driver’s qualifica-
tion auditing contract to enable the RHS rider to check his
driver’s qualifications before the trip start and get incentives
once a disqualified driver is detected. We described the
workflow of how a driver registers as a qualified driver in
the SP and how an insured rider automates the audit of a
registered driver. We designed an incentive mechanism and
provided a game-theoretical analysis. Finally, we imple-
mented a prototype of AudiSSI and deployed it on Hyper-
ledger Indy and Fabric to show that self-sovereign identity
system for RHS driver with qualification auditing is efficient
and technically feasible. Our work does not stop all mali-
cious entities, but the deterrence of the incentive mechanism
will mitigate this problem and it will contribute to signifi-
cant huge cost-saving for the corresponding SP in investi-
gating the disqualified drivers.
ACKNOWLEDGMENTS
This work was supported by the Blockchain Core Technol-
ogy Strategic Research Program of Ministry of Education
(China) under Grant 2020KJ010801.
REFERENCES
[1] Globaltimes.cn, “Didi offers 1m yuan to find passenger’s killer -
Global times,” Accessed: Sep. 22, 2020. [Online] Available:
https://www.globaltimes.cn/content/1101749.shtml
[2] Techcrunch.com, “Techcrunch is now a part of verizon media,”
Accessed: Sep. 22, 2020. [Online] Available: https://techcrunch.
com/2018/08/26/didi-suspends-carpooling-service/
[3] Uber driver accused of trying to kidnap passenger. Accessed: Mar.
22, 2021. [Online] Available: https://www.abccolumbia.com/2021/
03/22/uber-driver-accused-of-trying-to-kidnap-passenger/
[4] S. �a Alboaie and D. Cosovan, “Private data system enabling self-
sovereign storage managed by executable choreographies,” in
Proc. Distrib. Appl. Interoperable Syst., 2017, pp. 83–98.
[5] P. Aublin, S. B. Mokhtar, and V. Qu �ema. “RBFT: Redundant byz-
antine fault tolerance,” in Proc. IEEE 33rd Int. Conf. Distrib. Com-
put. Syst., 2013, 297–306.
[6] J. Camenisch, M. Kohlweiss, and C. Soriente, “An accumulator
based on bilinear maps and efficient revocation for anonymous
credentials,” in Proc. Int. Workshop Public Key Cryptogr., 2009,
pp. 481–500.
[7] J. Camenisch and A. Lysyanskaya, “A signature scheme with effi-
cient protocols,” inProc. Secur. Commun. Netw., 2003, 268–289.
[8] J. Camenisch and E. Van Herreweghen, “Design and implementa-
tion of theidemix anonymous credential system,” in Proc. 9th
ACM Conf. Comput. Commun. Secur., 2002, 21–30. [Online]. Avail-
able: https://doi.org/10.1145/586110.586114
[9] M. Castro, B. Liskov et al., “Practical byzantine fault tolerance,” in
Proc. 3rd Symp. Operating Syst. Des. Implementation, 1999, pp. 173–
186.
[10] Cl, “Hyperledger caliper,” Accessed: Sep. 30, 2019. [Online].
Available: https://cn.hyperledger.org/projects/caliper
[11] DiDi, “Didi Chuxing,”Accessed: Jun. 5, 2019. [Online]. Available:
https://en.wikipedia.org/wiki/DiDi
[12] Lyft, “Drive with Lyft California,” Accessed: Apr. 5, 2021.
[Online]. Available:https://www.lyft.com/
[13] Wear, B., “How driver CHECKS work: What Uber and LYFT do,
what city would require,” Accessed: Apr. 30, 2021. [Online].
Available: https://www.statesman.com/news/20160904/how-
driver-checks-work-what-uber-and-lyft-do-what-city-would-
require
[14] DiDi, “Brain intelligent driving smart transportation AI labs.”
Accessed: Aug. 15, 2020. [Online]. Available: https://outreach.
didichuxing.com/appEn-vue/Register?path=register
[15] P. Dunphy and F. A. P. Petitcolas, “A first look at identity manage-
ment schemes on the blockchain,” IEEE Secur. Privacy, vol. 16,
no. 4, pp. 20–29, Jul./Aug. 2018.
[16] Fab, “Hyperledger fabric,” Accessed: Aug. 27, 2019. [Online].
Available: https://cn.hyperledger.org/projects/fabric
[17] U. Feige, A. Fiat, and A. Shamir, “ Zero-knowledge proofs of iden-
tity,” J. Cryptol., vol. pp. 77–94, 1988.
[18] M. S. Ferdous, F. Chowdhury, and M. O. Alassaf, “In search of
self-sovereign identity leveraging blockchain technology,” IEEE
Access, vol. 7, pp. 103 059–103 079, 2019.
[19] H. Gunasinghe et al., “PrivIdEx: Privacy preserving and secure ex-
change of digital identity assets,” in Proc. World Wide Web Conf.,
2019, pp. 594–604. [Online]. Available: https://doi.org/10.1145/
3308558.3313574
[20] B. Hampiholi and G. Alpar, “Privacy-preserving webshopping
with at-tributes,” in Proc. IEEE Symp. Privacy-Aware Comput.,
2017, pp. 25–36. [Online]. Available: https://doi.org/10.1109/
PAC.2017.34
[21] Ind, “Hyperledger indy,” Accessed: Aug. 17, 2019. [Online]. Avail-
able: https://cn.hyperledger.org/projects/hyperledger-indy
[22] IPFS, “InterPlanetary file system,” Accessed: Jun. 25, 2019. [Online].
Available: https://en.wikipedia.org/wiki/InterPlanetary_File_System
[23] R. Joosten, “Self-Sovereign identity framework and blockchain,”
ERCIMNews, vol. 110, pp. 29–30. [Online]. Available: https://
ercim-news.ercim.eu/en110/special/self-sovereign-identity-
framework-and-blockchain
[24] M. Lanthaler and C. Gutl, “On using JSON-LD to create evolvable
RESTful services,” in Proc. 3rd Int. Workshop RESTful Des., 2012,
pp. 25–32.
[25] G. Maganis, E. Shi, H. Chen, and D. Song, “OPAAK: Using mobile
phones to limit anonymous identities online,” in Proc. 10th Int.
Conf. Mobile Syst., Appl., Serv., 2012, pp. 295–308. [Online]. Avail-
able: https://doi.org/10.1145/2307636.2307664
[26] S. Nakamoto et al., Bitcoin: A peer-to-peer electronic cash system,
Decentralized Bus. Rev., pp. 21260, 2008.
[27] M. K. Reiter and S. G. Stubblebine, “Authentication metric analysis
and design,” ACM Trans. Inf. Syst. Secur., vol. 2, no. 2, pp. 138–158,
1999. [Online]. Available: https://doi.org/10.1145/317087.317088
[28] SMT, “Smart contracts,” Accessed: Jul. 25, 2019. [Online]. Avail-
able: http://www.fon.hum.uva.nl/rob/Courses/Information
InSpeech/CDRO M/Literature/LOTwinterschool2006/szabo.
best.vwh.net/smart.contracts.h tml
[29] SOV, “Sovrin: A protocol and token for self-sovereign identity and
de-centralized trust,” Accessed: Sep. 27, 2019. [Online]. Available:
https://sovrin.org/library/sovrin-protocol-and-token-white-
paper/2020–07-27 13:53
[30] M. Takemiya and B. Vanieiev, “Sora identity: Secure, digital iden-
tity on the blockchain,” in Proc. IEEE 42nd Annu. Comput. Softw.
Appl. Conf., 2018, pp. 582–587. [Online]. Available: https://doi.
org/10.1109/COMPSAC
LU ETAL.: SAFETY WARNING! DECENTRALISED ANDAUTOMATED INCENTIVES FOR DISQUALIFIED DRIVERS AUDITING IN... 1761
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
https://www.globaltimes.cn/content/1101749.shtml
https://techcrunch.com/2018/08/26/didi-suspends-carpooling-service/
https://techcrunch.com/2018/08/26/didi-suspends-carpooling-service/
https://www.abccolumbia.com/2021/03/22/uber-driver-accused-of-trying-to-kidnap-passenger/
https://www.abccolumbia.com/2021/03/22/uber-driver-accused-of-trying-to-kidnap-passenger/
https://doi.org/10.1145/586110.586114
https://cn.hyperledger.org/projects/caliper
https://en.wikipedia.org/wiki/DiDi
https://www.lyft.com/
https://www.statesman.com/news/20160904/how-driver-checks-work-what-uber-and-lyft-do-what-city-would-require
https://www.statesman.com/news/20160904/how-driver-checks-work-what-uber-and-lyft-do-what-city-would-require
https://www.statesman.com/news/20160904/how-driver-checks-work-what-uber-and-lyft-do-what-city-would-require
https://outreach.didichuxing.com/appEn-vue/Register?path=register
https://outreach.didichuxing.com/appEn-vue/Register?path=register
https://cn.hyperledger.org/projects/fabric
https://doi.org/10.1145/3308558.3313574
https://doi.org/10.1145/3308558.3313574
https://doi.org/10.1109/PAC.2017.34
https://doi.org/10.1109/PAC.2017.34
https://cn.hyperledger.org/projects/hyperledger-indy
https://en.wikipedia.org/wiki/InterPlanetary_File_System
https://ercim-news.ercim.eu/en110/special/self-sovereign-identity-framework-and-blockchain
https://ercim-news.ercim.eu/en110/special/self-sovereign-identity-framework-and-blockchain
https://ercim-news.ercim.eu/en110/special/self-sovereign-identity-framework-and-blockchain
https://doi.org/10.1145/2307636.2307664
https://doi.org/10.1145/317087.317088
http://www.fon.hum.uva.nl/rob/Courses/Information InSpeech/CDRO M/Literature/LOTwinterschool2006/szabo.best.vwh.net/smart.contracts.h tml
http://www.fon.hum.uva.nl/rob/Courses/Information InSpeech/CDRO M/Literature/LOTwinterschool2006/szabo.best.vwh.net/smart.contracts.h tml
http://www.fon.hum.uva.nl/rob/Courses/Information InSpeech/CDRO M/Literature/LOTwinterschool2006/szabo.best.vwh.net/smart.contracts.h tml
https://sovrin.org/library/sovrin-protocol-and-token-white-paper/2020--07-27 13:53
https://sovrin.org/library/sovrin-protocol-and-token-white-paper/2020--07-27 13:53
https://doi.org/10.1109/COMPSAC
https://doi.org/10.1109/COMPSAC
[31] K. C. Toth and A. A.-Priddy, “Self-Sovereign digital identity:A
paradigm shift for identity,” IEEE Secur. Privacy, vol. 17, no. 3,
pp. 17–27, May/Jun. 2019. [Online]. Available: https://doi.org/
10.1109/MSEC.2018.2888782
[32] Uber, “Uber,” Accessed: Jun. 10, 2019. [Online]. Available:
https://www.uber.com
[33] Y. Lu, Y. Qi, S. Qi, Y. Li, H. Song, and Y. Liu, ”Say no to price dis-
crimination: Decentralized and automated incentives for price
auditing in ride-hailing services,” IEEE Trans. Mobile Comput.,
early access, Jul. 9, 2020, doi: 10.1109/TMC.2020.3008315.
[34] uPort, “uPort: Tools for decentralized identity and trusted data,”
Accessed: May 10, 2019. [Online]. Available: https://www.uport.
me/
[35] D. van Bokkem, R. Hageman, G. Koning, L. Nguyen, and N.
Zarin, “Self-Sovereign identity solutions: The necessity of block-
chain technology,” 2019, arXiv:1904.12816v1.
[36] G.Wood et al., “Ethereum: A secure decentralised generalised trans-
action ledger,” Ethereum Project YellowPaper, vol. 151, pp. 1–32, 2014.
[37] Z. Yan, G. Gan, and K. Riad, “BC-PDS: Protecting privacy and
self-sovereignty through blockchains for openPDS,” in Proc. IEEE
Symp. Serv.-Oriented Syst.Eng. 2017, 138–144.
[38] Zero, “Zero-knowledge proofs,” Accessed: Aug. 25, 2019.
[Online]. Available: https://w3c.github.io/vc-data-model/CR/
2019–07-25/#zero-knowledge-proofs2020-07-27 13:53
[39] Pr. Erich, “Game theory through examples. mathematical associa-
tion of America,” Accessed: Jan. 12, 2020. [Online]. Available:
http://www.jstor.org/stable/10.4169/j.ctt6wpwgj
[40] Eleme mobile application. Accessed: Sep. 12, 2020. [Online]. Avail-
able: https://www.ele.me/home/
[41] C. Lai, G. Medvinsky, and B. C. Neuman, ”Endorsements, licens-
ing, and insurance for distributed system services,” in Proc. 2nd
ACM Conf. Comput. Commun. Secur., 1994, pp. 170–175.
[42] M. K. Reiter and S. G. Stubblebine, ” Authentication metric analy-
sis and design,” ACM Trans. Inf. Syst. Secur., vol. 2, no. 2, pp. 138–
158, May 1999.
[43] Q. Zhu and S. Rass, “ Game theory meets network security: A
tutorial,” in Proc. ACM SIGSAC Conf. Comput. Commu. Secur.,
2018, pp. 2163–2165.
[44] J. Nash, “Non-Cooperative games,” Annals Math., vol. 54, no. 2,
pp. 286–295, 1951.
Youshui Lu (Member, IEEE) received the BS
degree from The Australian National University,
Australia, in 2013 and the MS degree from the
University of Sydney, Australia, in 2015. He is cur-
rently working toward the PhD degree with the
School of Computer Science and Technology,
Xi’an Jiaotong University, China. His research
interests include blockchain technology, distrib-
uted systems, trusted urban computing, and
computational social systems.
Jingning Zhang received the BS degree from
Shanghai Business School in 2018. He is cur-
rently working toward theMS degree with the Fac-
ulty of Electronic and Information Engineering,
Xi’an Jiaotong University. His research interests
include blockchain and applied cryptography.
Yong Qi (Member, IEEE) received the PhD
degree from Xi’an Jiaotong University, China. He
is currently a professor with Xi’an Jiaotong Univer-
sity. His research interests include operating sys-
tems, distributed systems, and cloud computing.
Saiyu Qi (Member, IEEE) received the BS
degree in computer science and technology from
Xi’an Jiaotong University, Xi’an, China, in 2008
and the PhD degree in computer science and
engineering from The Hong Kong University of
Science and Technology, Hong Kong, in 2014. He
is currently an associate professor with the
School of Computer Science, Xi’an Jiaotong Uni-
versity, China. His research interests include
applied cryptography, cloud security, distributed
systems, and pervasive computing.
Yue Li received the BS and MS degrees in
econometrics from the University of Groningen,
the Netherlands, in 2010 and 2012, respectively.
He is currently working toward the PhD degree in
economics with the School of Business and Eco-
nomics, Vrije Universiteit Amsterdam, the Nether-
lands. He is currently a quantitative risk analyst
with the ABN AMRO bank, the Netherlands. His
research interests include applied economics,
economics models, financial risk models, and
macroprudential policies.
Hongyu Song received the Bachelor of Engi-
neering degree in the Internet of Things engineer-
ing from Xi’an Jiaotong University, China, in 2019.
He is currently working toward the master’s
degree with the School of Computer Science and
Technology, Xi’an Jiaotong University. His
research interests include cyber security, Internet
of Things, and blockchain.
Yuhao Liu received the BS degree in software
engineering from Northwestern Polytechnic Uni-
versity, China, in 2018. He is currently working
toward the master’s degree with the faculty of
Electronic and Information Engineering, Xi’an
Jiaotong University. His research interests include
cyber security, Internet of Things, and blockchain.
" For more information on this or any other computing topic,
please visit our Digital Library at www.computer.org/csdl.
1762 IEEE TRANSACTIONS ON MOBILE COMPUTING, VOL. 22, NO. 3, MARCH 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:12:08 UTC from IEEE Xplore.  Restrictions apply. 
https://doi.org/10.1109/MSEC.2018.2888782
https://doi.org/10.1109/MSEC.2018.2888782
https://www.uber.com
http://dx.doi.org/10.1109/TMC.2020.3008315
https://www.uport.me/
https://www.uport.me/
https://w3c.github.io/vc-data-model/CR/2019--07-25/#zero-knowledge-proofs2020-07-27 13:53
https://w3c.github.io/vc-data-model/CR/2019--07-25/#zero-knowledge-proofs2020-07-27 13:53
http://www.jstor.org/stable/10.4169/j.ctt6wpwgj
https://www.ele.me/home/
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 150
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice