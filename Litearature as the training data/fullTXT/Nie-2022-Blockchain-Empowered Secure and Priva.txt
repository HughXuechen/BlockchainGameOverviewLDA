Research Article
Blockchain-Empowered Secure and Privacy-Preserving Health
Data Sharing in Edge-Based IoMT
Xueli Nie ,1 Aiqing Zhang ,1,2 Jindou Chen ,1,2 Youyang Qu ,3 and Shui Yu 4
1School of Physics and Electronic Information, Anhui Normal University, Wuhu 241002, China
2Anhui Provincial Engineering Laboratory on Information Fusion, Wuhu 241002, China
3Deakin Blockchain Innovation Lab, School of Information Technology, Deakin University, Geelong, Australia
4School of Computer Science, University of Technology Sydney, Ultimo, Australia
Correspondence should be addressed to Aiqing Zhang; aqzhang2006@163.com
Received 12 September 2021; Revised 8 December 2021; Accepted 13 January 2022; Published 21 February 2022
Academic Editor: Ding Wang
Copyright © 2022 Xueli Nie et al. ,is is an open access article distributed under the Creative Commons Attribution License,
which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.
Health data sharing, as a booming demand, enables the patients with similar symptoms to connect with each other and doctors to
obtain the medical history of patients. Health data are usually collected from edge-based Internet of medical things (IoMT) with
devices such as smart wearable devices, smart watches, and smartphones. Since health data are highly private and have great
financial value, adversaries ceaselessly launch diverse attacks to obtain private information. All these issues pose great challenges
to health data sharing in edge-based IoMT scenarios. Existing research either lacks comprehensive consideration of privacy and
security protection or fails to provide a proper incentive mechanism, which expels users from sharing data. In this study, we
propose a novel blockchain-assisted data sharing scheme, which allows secure and privacy-preserving profile matching. A bloom
filter with hash functions is designed to verify the authenticity of keyword ciphertext. Key-policy attribute-based encryption (KP-
ABE) algorithm and smart contracts are employed to achieve secure profile matching. To incentivize users actively participating in
profile matching, we devise an incentive mechanism and construct a two-phase Stackelberg game to address pricing problems for
data owners and accessing problems of data requesters. ,e optimal pricing mechanism is specially designed for encouraging
more users to participate in health data sharing and maximizing users’ profit. Moreover, security analysis illustrates that the
proposed protocol is capable of satisfying various security goals, while performance evaluation shows high scalability and
feasibility of the proposed scheme in edge-based IoMT scenarios.
1. Introduction
Internet of medical things (IoMT) can improve healthcare
service quality by sharing health data among users and
realize remote health care. Generally, profile matching is the
prerequisite of health data sharing. For example, patients
with similar symptoms may want to connect with others,
exchange their experiences, and broaden the understanding
of the symptoms helping them to get early diagnosis or
better treatments in time [1, 2].
Since IoMTdevices are usually resource constraint, edge
computing is introduced into the system to improve the
efficiency [3, 4]. Due to privacy-sensitive nature of health
data, data security and privacy preservation are crucial in
edge-based IoMTsystem. Although the existing schemes use
cryptographic algorithms to achieve security, there are still
some threats because the edge is a semi-trusted center and
also faces a single point of failure. In addition, these works
failed to take incentive problem into consideration for users.
Even though incentive mechanism is considered in [5, 6], the
security issues in profile matching have hardly been solved.
Fortunately, emerging blockchain technology is tamper-
proof, decentralized, transparent, anonymous, and auton-
omous, which is a promising solution for the aforemen-
tioned problems [7]. Although blockchain is conducive to
profile matching and health data sharing, there are still three
following challenges: (1) how to realize privacy preservation
through profile matching in blockchain environment? (2)
Hindawi
Security and Communication Networks
Volume 2022, Article ID 8293716, 16 pages
https://doi.org/10.1155/2022/8293716
mailto:aqzhang2006@163.com
https://orcid.org/0000-0002-5375-6851
https://orcid.org/0000-0001-5286-188X
https://orcid.org/0000-0002-3294-8272
https://orcid.org/0000-0002-2944-4647
https://orcid.org/0000-0003-4485-6743
https://creativecommons.org/licenses/by/4.0/
https://creativecommons.org/licenses/by/4.0/
https://doi.org/10.1155/2022/8293716
How to ensure that the authenticity of the keyword is se-
lected from a valid keyword set while not revealing users’
private information? (3) How to design an incentive
mechanism for motivating users to take an active part in the
system?
To solve the above challenges, we put forward a secure
and privacy-preserving profile matching scheme by
employing key-policy attribute-based (KP-ABE) keyword
search and bloom filter in edge-based IoMT. Blockchain is
adopted to store the keyword ciphertext. It ensures that
requesters access the desired data and protect data privacy.
Moreover, the bloom filter verifies the authenticity of key-
word ciphertext using various hash functions without dis-
closing any sensitive information. We design an optimal
pricing mechanism to incentivize data owners and data
requesters to participate in this system.
,e major contributions of the proposed scheme are
summarized as follows.
We construct a new blockchain-based profile matching
framework in edge-based IoMT with security and
privacy preservation. We design a bloom filter based on
many hash functions to verify whether the keyword is
selected from a valid keyword set before storing the
keyword ciphertext in blockchain. In this way, the
computational cost is significantly reduced.
We present a key-policy attribute-based keyword
search and bloom filter profile matching protocol in a
blockchain-enabled edge-based IoMT. Only when data
users’ attribute set satisfies the access structure set,
users are able to access the desired data. Data owners’
original data are stored in local server, while the cor-
responding keyword ciphertext is kept in blockchain
verified by a bloom filter. It greatly improves search
efficiency.
We devise an optimal pricing mechanism to motivate
users to actively participate in the system. ,e data
owners take part in pricing and setting payment for
matching data according to pricing list based on an
optimal pricing mechanism. In particular, it provides
an economic approach to analyze the incentive
mechanism. By utilizing game-based optimal pricing
mechanism, data owners and data requesters can ob-
tain their maximum benefits. Furthermore, we im-
plement smart contracts on the Ethereum platform and
conduct extensive evaluations to demonstrate the su-
periority of the proposed scheme.
,e structure of the study is organized as follows. Related
works about health data sharing with edge computing
blockchain-based profile matching are elaborated in Section
2. Section 3 introduces preliminaries of the work. Section 4
presents system architecture, workflow, security threats, and
design goals. Section 5 designs the detailed profile matching
protocol for the proposed blockchain, proposes an optimal
pricing mechanism to incentive data owner and data re-
quester actively participating in data sharing, and presents
the smart contracts. ,en, Section 6 analyzes how our
scheme achieves the security goals. Section 7 carries out the
proposed scheme on Ethereum platform to estimate the
performance of protocol and smart contracts. Finally, Sec-
tion 8 concludes this work.
2. Related Work
In this section, we introduce existing relevant researches on
health data sharing with edge computing, profile matching,
and incentive mechanisms.
2.1. Health Data Sharing with Edge Computing. Privacy is-
sues emerge with the fast development of edge computing
and IoMT [8, 9]. ,e edge node was the closest to the re-
stricted resource devices and had strong computing power.
,erefore, some edge-based healthcare systems were pro-
posed [10]. Pustokhina et al. [11] presented an effective
scheme in edge computing-enabled IoMTsystem.,e IoMT
devices sensed patient’s data and transferred the captured
data to edge computing. Aiming at guaranteeing data se-
curity and flexible right control simultaneously, an efficient
attribute-based encryption (ABE) scheme was proposed to
outsource part of encryption and decryption to edge nodes
[12]. It supported attribute updates and reduced the com-
puting cost of resource-constrained devices for edge-enabled
smart health care. To rely on a trusted center, Akkaoui et al.
[13] proposed a blockchain-based secure health data sharing
framework in edge computing, named “EdgeMediChain.”
,e work promoted the necessary requirements for scal-
ability, security, and privacy of medical ecosystem. Similarly,
Nguyen et al. [14] proposed a new decentralized health
architecture that integrates mobile edge computing and
blockchain for data offloading and data sharing in distrib-
uted hospital networks. ,ey utilized a decentralized au-
thentication mechanism associated with a distributed IPFS
storage to improve service quality. ,e ongoing study [15]
proposed a ubiquitous healthcare framework that leveraged
edge computing, big data, deep learning, high-performance
computing, and the IoMT to solve the above challenges. ,e
framework made use of four layers. ,ree main components
improved network service quality. However, these works did
not provide profile matching and incentive mechanisms for
these health data.
2.2. Profile Matching. Some cloud-assisted solutions have
been proposed to address the problems of data security and
privacy preservation for profile matching [16–18]. Li et al.
[17] put forward a privacy-preserving and scalable matching
protocol without disclosing the users’ personal data to the
cloud. To achieve secure communication between users, He
et al. [18] designed an efficient Cross-Domain HandShake
(CDHS) scheme with symptom matching in hierarchical
identity-based cryptosystem. Compared with the existing
profile matching schemes, their schemes used cloud com-
puting to conduct most of the computation, which effec-
tively reduced user’s computation complexity. However, the
cloud is a semi-trusted center, which may collude with other
malicious users to obtain the sensitive data.
2 Security and Communication Networks
Blockchain has drawn considerable interests in research
and industrial communities [19–22] due to its advantages.
Yang et al. [23] designed a distributed matching mechanism
based on blockchain. Furthermore, their scheme trans-
formed the social welfare maximization problem into a
matching game of bilateral matching and unilateral pref-
erence. Meng et al. [24] proposed a blockchain-enabled
signature matching while achieving data security and pri-
vacy preservation. In [25], a matching scheme based on
hierarchical blockchain was proposed to protect users’
privacy. ,e scheme combined ciphertext-policy attribute-
based (CP-ABE) encryption and bloom filter to meet users’
requirements to search friends.
,e aforementioned works proposed heuristic block-
chain-based profile matching schemes with data security and
privacy preservation. In fact, some researches presented a
structure or concept for profile matching based on block-
chain without technically proposing a solution in detail for a
specific application scenario. In this work, we present a novel
blockchain-based profile matching framework by employing
(key-policy attribute-based encryption) KP-ABE and bloom
filter to achieve data security and privacy preservation. In
addition, we design a detailed profile matching protocol and
implement the devised smart contracts on Ethereum test
platform.
2.3. Incentive Mechanisms. To encourage more users to join
the system, some incentive mechanisms have been designed.
Jiao et al. [26] proposed a profit maximization mechanism to
maximize the profit under different users’ valuation dis-
tributions. ,e pricing mechanism effectively solved the
profit maximization problem and provided useful strategies
for users. Game-theoretic methods had been extensively
used in pricing mechanism [27, 28]. ,e uncertainty of
future prices with a single-leader, multiple-follower Stack-
elberg game was proposed to maximize profits by setting
optimal pricing strategy [27]. It provided a simple distrib-
uted algorithm for finding the unique Stackelberg equilib-
rium point. Chen et al. [28] proposed a pricing approach for
incentive mechanisms and considered a two-stage game in a
three-layer architecture. ,ey formulated a Markov decision
process (MDP)-based social welfare maximization model
and studied a convex optimization pricing problem.
Some works adopted blockchain technology to design
incentive mechanisms. Liu et al. [29] designed an optimal
pricing mechanism and adopted a two-phase Stackelberg
game to address pricing and buying problem of the users.
Furthermore, they used backward induction to investigate
the quantity of purchased data and pricing strategies. Li et al.
[30] put forward an incentive mechanism to encourage users
to participate in sharing data through price-aware top-k
matching queries. Xiong et al. [31] proposed multi-leader
multi-follower game-based alternating direction method of
multipliers algorithm for pricing to accomplish optimum
results in a distributed manner. Zhang et al. [32] designed a
dynamic, hierarchical pricing mechanism based on eco-
nomic modeling methods and heterogeneous agent theory.
Nie et al. [33] proposed an optimal incentive mechanism of
users using backward induction and applied a Stackelberg
game to analyze users’ participation level.
,e existing work failed to apply the incentive mecha-
nism to encourage data owners and data requesters to share
health data. In this scheme, we combine blockchain tech-
nology and smart contract to design an optimal pricing
mechanism with the guarantee of data security and privacy
preservation for motivating users to actively join the system
and maximizing their profits.
3. Preliminaries
In this section, we provide preliminaries required in this
work.
3.1. Cryptographic Assumptions
Definition 1. Decisional Bilinear Diffie–Hellman Problem
(DBDH). We denote an elliptic curve as E and consider a
cycle group G of prime order q. Let P be a generator in G1
and a, b, c, z ∈ Z∗q . ,e DBDH problem is defined as follows:
given an input tuple (P ∈ G1, aP ∈ G2, bP ∈ G2, cP ∈ G2),
e(P, P)abc is computed. Assume that an attacker A can
successfully distinguish between e(P, P)abc and e(P, P)z with
the advantage AdvDB DH
A (λ). If the DBDH assumption holds,
the advantage AdvDB DH
A (λ)⩽ε must be ignored.
3.2. Linear Secret-Sharing Schemes (LSSS).
AdvDBDH
A (λ) �
Pr A e, P, P, P, P, e(P, P)
abc
� 1􏼐 􏼑􏽨 􏽩
− Pr A e, P, P, P, P, e(P, P)
z
� 1( 􏼁􏼂 􏼃
􏼌􏼌􏼌􏼌􏼌􏼌􏼌􏼌􏼌􏼌
􏼌􏼌􏼌􏼌􏼌􏼌􏼌􏼌􏼌􏼌
⩽ ε.
(1)
An LSSS access structure is denoted as (N, ρ), where N is
an l × n matrix and ρ is an injective function from
1, 2, . . . , l{ }. to attributes. Let S ∈ N be an authorized set,
defined as I � i | ρ(i) ∈ S􏼈 􏼉. Let Tr be the set of distinct
attributes in N. Here, Tr � b: ∃i ∈ [1, l], ρ(i) � b􏼈 􏼉. ,ere
exist constants πi ∈ ZP, i ∈ I􏼈 􏼉 such that
􏽐i∈IπiNi � (1, 0, . . . 0), where Ni is ith row of N. It ran-
domly generates a vector ( v
→
) � μ1, r2, . . . , rn􏼈 􏼉, where
μ1 ∈ Z∗q is the secret to be shared and r2, . . . , rn ∈ Z∗q is
randomly chosen. For 1≤ i≤ l, it will compute λi � ( v
→
)Ni,
where Ni is ith row of N. Given an attribute set S and Ni,
πi ∈ Zq, i ∈ I􏽮 􏽯 is found and 􏽐i∈IπiNi � (1, 0, . . . 0) is
formulated.
3.3. Bloom Filter. A bloom filter [34] is a data structure for
validating whether an element comes from a set. An m-bit
bloom filter can be represented by a set of hash functions
H � H1′, H2′, . . . Hk
′􏼈 􏼉, i ∈ [1, k]. All the positions in the array
are all initially 0. To query an input w ∈W � w1, . . . wn􏼈 􏼉
into the bloom filter, its corresponding position is set as 1;
i.e., BF[Hi
′(w)] � 1, i ∈ [1, k] is set. ,e bloom filter checks
whether an element w is selected from a set W. w is hashed
by the k hash functions H � H1′, H2′, . . . Hk
′􏼈 􏼉 to obtain k
hashed array positions. If any of the bits in these positions
Security and Communication Networks 3
are set to 0, it represents that the element w does not belong
to the set. Otherwise, all the bits in the positions are set to 1,
which means the element is in the set. ,ere exists a pos-
sibility that w ∉W, and all bits in the corresponding po-
sitions are all 1, termed as the false-positive error. Its
probability is (1 − (1 − 1/m)kn)k. Here, k � m/nln2. Hash
functions are able to minimize false-positive probability
(0.6185)m/n. ,ere are two algorithms, shown as follows:
BF⟵BFBuild( H1′, H2′, . . . , Hk
′􏼈 􏼉 w1,􏼈
w2, . . . , wn})·BFBuild, and algorithm puts all w into
BF.
cw←VerifyBF( H1′, H2′, . . . , Hk
′􏼈 􏼉, BF, w). If w ∉W, it
returns 0. Otherwise, it returns 1.
3.4. Blockchain and Smart Contract. Blockchain is a dis-
tributed ledger, which records numerous transactions [35].
All nodes in the network have the same copy of the ledger.
Blockchain has the features of decentralization, privacy
preservation, immutability, fault tolerance, and the ability to
implement smart contracts. In blockchain, consensus al-
gorithm is used to address the consistency issue of untrusted
systems [36]. Current proposed consensus mechanisms
include proof of work (PoW), proof of stake (PoS), and
delegated proof of stake (DPoS) [37–39]. In our system, we
design a proof of existence consensus mechanism for the
proposed system.
Smart contract is a computer program that can be self-
executed, self-verified, and tamper-resistant without trusted
parties. ,e credibility of smart contract drives from its
unforgeability. It cannot be modified or altered once it is
deployed on blockchain. Ethereum is a decentralized ap-
plication platform of smart contract, which supports ap-
plication of Turing complete. It allows users to create,
deploy, and run smart contract on blockchain. In our
scheme, we design and deploy the smart contracts on
Ethereum to test its availability and evaluate its performance.
4. System Model
In this section, we first propose the system architecture built
upon edge-based IoMT. ,en, we analyze the security
threats and set the security goals.
4.1. SystemArchitecture. ,e proposed model is made up of
different entities: attribute authority (AA), IoMT devices,
data owners (DOs), data requesters (DRs), and edge nodes,
as shown in Figure 1. ,e major symbols used in the system
architecture are listed in Table 1.
4.1.1. Attribute Authority. AA takes charge of system ini-
tialization and registration for DO and DR. It is a trust-
worthy center in this system. Furthermore, AA generates
attribute keys for authorized entities.
4.1.2. IoMT Devices. IoMT devices contain smart devices,
such as smartphone, smart watch, and other wearable
devices. ,ey are used to collect the data, especially health
data in this context. Furthermore, the collected data are
uploaded to DOs who can share their data with others within
the edge-based IoMT infrastructure.
4.1.3. Data Owners. Data owners refer to patients who
construct a community to share their medical experiences
and symptoms with others for broadening healthcare in-
formation. ,ese DOs can form a social Internet. Addi-
tionally, they can earn fees by sharing their symptoms and
experiences. ,ey must register at the AA for obtaining
attribute keys and joining the system. Moreover, DOs en-
crypt the keywords of their symptoms using attribute keys.
,ey participate in pricing smart contract to derive an
optimal price according to their own pricing strategies.
4.1.4. Data Requesters. Data requesters refer to patients who
want to seek similar patients. Similar patients can share
medical experiences, so that data requesters can better
understand their health states. ,e DR should firstly register
at the AA for attribute keys to take part in the system. ,e
DR can generate search tokens using attribute keys and
search relevant symptoms on blockchain. Once DRs receive
the matching result from pricing and payment smart con-
tract, they will select the intending data according to the
matching results and pay fees to the corresponding DO by
pricing and payment smart contract. Furthermore, they earn
the fee by providing feedback to feedback smart contract.
4.1.5. Edge Nodes. Edge nodes are used to maintain the
blockchain. Edge nodes are also responsible for packaging
transactions into blocks in the blockchain.
,ere are three smart contracts deployed in our pro-
posed blockchain: verification smart contract (VSC), pricing
and payment smart contract (PPC), and feedback smart
contract (FSC). Firstly, verification smart contract is used to
verify whether the profile keywords are valid. Secondly,
pricing and payment smart contract is used to set price based
on the optimal pricing mechanism and transfer fee to
corresponding user’s account. Finally, feedback smart
contract is used to reward data requester.
4.2. Workflow. Firstly, data requesters and data owners
register at the AA for gaining attribute keys to join the
system. Patients (data owners) construct a community to
share their medical experiences and symptoms with others.
,ey encrypt and upload their profile keywords. KP-ABE
and verification smart contract verify whether the keywords
belong to a keywords set. If the keywords are valid, they will
be uploaded to blockchain for users to search. A data re-
quester, who wants to seek similar patients without real
identities, uses the master public key, keywords, and his/her
private key to generate a token for searching. After that, if
there are matching keywords, they will be sent to pricing and
payment smart contract. ,e results of pricing will be sent to
the DR. Furthermore, the DR is able to access DOs’ data by
paying fees to them. DRs send feedback information to
4 Security and Communication Networks
feedback smart contract. Moreover, a small fee is rewarded
to the DR by feedback smart contract.
4.3. Security =reats and Design Goals. In our scheme, the
AA is completely trusted for performing registration and
generating attribute keys, but unauthorized entities may
access the encrypted profile keywords and tokens to gain
DOs’ private information such as identity and address
during its transmission in the system. Furthermore, there
may be some dishonest requesters who access DOs’ data
without paying fees. Some DOs may provide false/fake in-
formation to requesters. ,us, we aim to achieve the fol-
lowing security goals.
4.3.1. Privacy Preservation. DOs’ identities contain some
significant privacy information, which cannot be leaked or
learned by unauthorized opponents. Besides, feedback in-
formation from requesters cannot reveal the DOs’ identity
information.
4.3.2. Secure Match. In our scheme, the eavesdroppers at-
tempt to guess attribute keys or search tokens for accessing
data. ,erefore, it is of great significance to protect keys and
tokens from revealing during matching process.
4.3.3. Fairness and Incentive. DRs must pay a reasonable fee
to a DO for accessing the DOs’ data. On the other hand, DOs
should provide true information for DRs. Smart contract
could realize payment with fairness and verify the authen-
ticity of the matched profile keywords. To incentivize more
DRs and DOs to participate in sharing health data, we design
an optimal pricing mechanism to maximize their profits.
When DRs and DOs accomplish data sharing, they will
obtain corresponding rewards.
4.3.4. Access Control. DOs have the ability to control data
access and establish access policy. Access control ensures
that requesters satisfying access policy can access the DOs’
information. Malicious attackers cannot eavesdrop or
modify patients’ profile keywords, which are transmitted in
the public channel of edge-based IoMT. ,e attribute-based
encryption algorithm is adopted to achieve data confiden-
tiality and integrity in this system.
5. The Proposed Protocol
In this section, we firstly describe the proposed protocol
based on blockchain. ,en, we demonstrate the optimal
pricing mechanism.
5.1. Protocol Description. ,e proposed protocol contains
three phases: system setup, index generation, and profile
matching. ,e process of the proposed protocol is shown in
Figure 2.
Attribute authority
Attribute keys Attribute keys 
Data OwnersData Requesters
Verification smart 
contract
Feedback smart 
contract
Pricing and Payment 
smart 
contract
Deploy Deploy Deploy
Collected
data
Blockchain
Edge node Edge node
Ed
ge
 n
od
e Edge node
IoMT device
Tokens
Feedback
Deposit
M
atching result
Rew
ard
s
Encry
pted profile
keywords
Figure 1: System architecture.
Table 1: Notation table of the architecture.
Notation Description
KP-ABE Key-policy attribute-based encryption
AA Attribute authority
DOs Data owners
DRs Data requesters
VSC Verification smart contract
PPC Pricing and payment smart contract
FSC Feedback smart contract
Security and Communication Networks 5
5.1.1. Phase1: System Setup. Given a security parameter λ,
the AA selects a bilinear map [40] e: G1 × G2⟶ GT, where
G1 and G2 are two additive cyclic groups of the same prime
order q. GT is a multiplicative cyclic group of prime order q.
P1 is the generator of G1, and P2 is the generator of G2. AA
chooses a hash function H1, where H1: 0, 1{ }⟶ Z∗q . In
addition, the AA randomly chooses μ1, μ2, and θi ∈ Z∗q ,
g � 􏽢e(P1, P2)
μ2 . In the system, it defines the attribute space
as U
∧
. Let m be the number of bits in a bloom filter (BF) and
k be the amount of hash functions in a BF. ,e AA selects
U � | 􏽢U| random group elements h1, h2, . . . , hU ∈ G1. It
generates k hash functionsH1′, H2′, . . . , Hk
′, which are used to
add an element into corresponding positions in a BF. ,e
master public key MPK � (H1, 􏽢e, g, P1, P2, μ1P1, μ2P2, θi
P1, θiP2, h1, h2, . . . , hU, H1′, H2′, . . . , Hk
′), and the master
secret key MSK � (μ1, μ2, θi).
,e AA generates a secret key when a requester registers
at the AA. ,ere is an LSSS access structure (N, ρ) for the
requester, whereN is an l × n matrix and Tr is a set of diverse
attributes in N. It means Tr � b: ∃i ∈ [1, l], ρ(i) � b􏼈 􏼉, and
∀b ∈ Tr/ρ(i). ,e function ρ makes a row of matrix N map
to attributes. It chooses a random vector ( v
→
) ∈ Z∗q . ,is
vector’s values will be used to share μ1. For 1≤ i≤ l, it
computes λi � ( v
→
)Ni, where Ni is ith row of N. Further-
more, it chooses σ1, . . . , σl ∈ Z∗q and computes
Ai � λP2 + θρ(i)σiP2, Bi � σiP2, ∀b ∈ Tr/ρ(i), and
Ei,b � θbσiP2. Let the private key be ak � (Ai,Bi, Ei,b).
5.1.2. Phase 2: Index Generation. Firstly, consensus users
from edge nodes participating in profile matching are se-
lected to participate in the network consensus, shown in
Figure 3. Assume that the number of all consensus users is
Nc in the blockchain network. ,e system generates a
random number as the index of the consensus users to be the
selected as the miner.
Secondly, an edge node selects a random value χ ∈ Z∗q .
He/she computes the keyword ciphertext cw � (I1, Iz, I2),
where I1 � χP1, Iz � θzχP1, z ∈ Att, and I2 � gH1(w)χ . ,en,
the miner sends cw to blockchain and generates transaction
data stored in the transaction pool, packs them into a block,
and sends the block to all the consensus users who can verify
that the keyword of secure index in the new generating block
is selected from W according to Algorithm 1. If w ∈W, it
returns 1, otherwise it returns 0. ,e bloom filter is used to
verify the authenticity of keywords, shown in Algorithm 2.
5.1.3. Phase 3: Profile Matching. Keyword search. ,e DR
searches desired data using the DR’s private key ak to
generate a keyword trapdoor Tw in blockchain.,e trapdoor
Tw � (T1,i, T2,i, T3,i,b) is generated as follows.
Choose a random vector (V
→
) � μ, c1, . . . , cl􏼈 􏼉, where
random number c1, . . . , cl ∈ Z∗q . ,is vector’s values
will be used to share μ.
For 1≤ i≤ l, it computes ηi � (V
→
) · Ni. It chooses
ε1, . . . , εl ∈ Z∗q and computes T1,i � ηiH1(W)P2
+θiσiεiP2, T2,i � εiBi, ∀b ∈ T/ρ(i), and T3,i,b � εiEi,b,
where T is a set of distinct attributes in N for 1≤ i≤ l.
,en, DR sends Tw � (T1,i, T2,i, T3,i,b) to blockchain.
(7) (5)
(3)
Data 
Requesters
Data owners
Attribute 
authority
(1) A
ttrib
ute keys
(6) M
atching result
(4) Tokens
(1) Attribute keys
Verification 
smart 
contract
Pricing and 
Payment 
smart 
contract
Feedback 
smart 
contract
Blockchain
CW = (I’,Ix,I”)
TW = (T1,i, T2,i, T3,i,b)
(2) Encrypted 
profile keywords
Figure 2: Proposed protocol.
Edge nodes
Consensus 
users
Miner Block
Figure 3: Consensus process.
6 Security and Communication Networks
Test.Assume that attributesAtt associated with cw satisfy
(N, ρ). ,ere exists i ∈ I, πi ∈ Z∗q􏽮 􏽯 such that
􏽐i∈IπiNi � (1, 0, . . . 0), where Ni is ith row of N. Given an
original ciphertext cw, a keyword w, and a search token Tw,
the following equation is verified:
e I1, 􏽘
i∈I
πi T1,i + 􏽘
z∈Δ/ρ(i)
T3,i,z
⎛⎝ ⎞⎠⎛⎝ ⎞⎠�
?
e 􏽘
z∈Δ
Iz, 􏽘
i∈I
πiT2,i
⎛⎝ ⎞⎠ · I2. (2)
If (2) holds, the matching keyword w′ is sent to pricing
and payment smart contract. ,e DO sets payment
according to the optimal pricing mechanism. ,e incentive
mechanism is expected to encourage more data owners and
data requesters to participate in the process of profile
matching. Otherwise, it aborts.
Correctness: when the encrypted keyword is the same as
the keyword in the trapdoor, the correctness of the test
algorithm is verified as follows:
e I1, 􏽘
i∈I
T1,i 􏽘
z∈Δ/ρ(i)
T3,i,z
⎛⎝ ⎞⎠πi
⎛⎝ ⎞⎠ � e χP1, 􏽘
i∈I
πi ηiH1(w)P2 + θiσεP2 + 􏽘
z∈Δ/ρ(i)
εiEi,z
⎛⎝ ⎞⎠⎛⎝ ⎞⎠
� e χP1, 􏽘
i∈I
πi ( V
→
) · MiH1(w)P2􏼒 􏼓⎛⎝ ⎞⎠e χP1, 􏽘
i∈I
πi θiσiεiP2 + 􏽘
z∈Δ/ρ(i)
εiθzσiP2
⎛⎝ ⎞⎠⎛⎝ ⎞⎠
� e χP1, μ1H1(w)P2( 􏼁e χP1, 􏽘
i∈I
πi 􏽘
z∈Δ
εiθzσiP2
⎛⎝ ⎞⎠⎛⎝ ⎞⎠
e 􏽘
z∈Δ
Iz, 􏽘
i∈I
πiT2,i
⎛⎝ ⎞⎠ · I2 � e 􏽘
z∈Δ
θzχP1, 􏽘
i∈I
πiσiεiP2
⎛⎝ ⎞⎠ · e P1, P2( 􏼁
μ2χH1(w)
� e 􏽘
z∈Δ
Iz, 􏽘
i∈I
πiT2,i
⎛⎝ ⎞⎠ · I2.
(3)
Input: A keywords set W, an array of length m, n keywords, k hash functions H � H1′, H2′, . . . , Hk
′􏼈 􏼉.
Output: Bloom Filter BF.
(1) BF � a new m- bits array of n elements
(2) for i � 1 to m do
(3) BF[i] � NULL
(4) for each element w ∈W do
(5) for i � 1 to k do
(6) j � Hi
′(w).
(7) if BF[j] �� NULL
(8) BF[j] � 1.
(9) return BF.
ALGORITHM 1: BuildBF (W, m, n, k, h).
Input: A keyword w, symmetric key sk, k hash functions, Encsk
(H) � Encsk
( H1′(w), H2′(w), . . . , Hk
′(w)􏼈 􏼉).
Output: if w ∈W, return 1, else return 0
(1) for each element w.
(2) for i � 1 to k do
(3) cj � Encsk
(Hj
′(w)).
(4) j � De csk
(cj).
(5) if each BF[j] �� 1.
(6) return 1
(7) else return 0
ALGORITHM 2: VerifyBF (ADO, Hcw).
Security and Communication Networks 7
Based on PBFT, if not less than 2/3 consensus users
verify the new block, following the basic setting of 2/3, etc.
[41], the new block will be added into the blockchain as a
new valid block. In this round, the generation of a valid block
marks the completion of consensus. ,e miner will generate
a random number R′∈ [0, Nc − 1] to determine the next
miner in the next round. ,en, the DO participates in
pricing and sets the fees. When the DR wants to access the
desired data, he/she needs to pay the fee to the corre-
sponding DO by PPC. ,e specific pricing process can be
seen in the following optimal pricing mechanism.
5.2. Optimal Pricing Mechanism. When a data requester
matches the profile keyword in blockchain, he/she accesses
the corresponding data by paying fees to the data owner. In
this section, we design an optimal pricing mechanism based
on a Stackelberg game. Optimal price maximizes the profits
of the data owners and the data requesters. ,e data owners
determine their own prices of data based on profit functions
as the leaders. ,e data requesters determine the access
quantity of data as followers. ,e Stackelberg game is be-
tween data owners and data requesters, shown in Figure 4.
5.2.1. Stackelberg Game Problem Formulation. ,e number
of data owners isM. A set of data owners can be expressed by
􏽥M � 1, . . . , M{ }. Data owners provide the desired data for
the data requester. In our optimal pricing mechanism, there
is a DR determining access strategy, such as access amount
of data. Meanwhile, each data owner j ∈M determines the
optimal price for corresponding data. ,e access amount of
the data requester from data owner j is xj. ,e unit price of
data owner j for the data requester is pj. We denote the
access amount set and the optimal access amount set of the
data requester from different data owners as
Xj � x1, . . . , xM􏼈 􏼉 and X∗j � x∗1 , . . . , x∗M􏼈 􏼉, respectively. ,e
unit price set and the optimal price set of the data requester
from different data owners are denoted as Pj � p1, . . . , pM􏼈 􏼉
and P∗j p∗1 , . . . , p∗M􏼈 􏼉􏼈 , respectively. ,e main symbols used
in an optimal pricing mechanism are shown in Table 2.
To evaluate the access quality of data, an access quality
factor is denoted by q. Data owner j provides data’s quality,
formulated as follows:
Q xj􏼐 􏼑 � qln 1 + xj􏼐 􏼑. (4)
,e data requester’s utility is expressed as follows:
Ur xj, pj􏼐 􏼑 � fjajQ xj􏼐 􏼑 − xjpj
� qfjajln 1 + xj􏼐 􏼑 − xjpj.
(5)
,e data requester gives a feedback evaluation to the data
of the data owner j and obtains small fees as rewards,
denoted as fj. aj is the accessing willingness of the data
requester. ,e data requester maximizes its utility based on
the access quantity xj, forming its subgame, which is given
as follows.
Problem 1 (data requester’s subgame for data owner j):
max
xj
Ur xj, pj􏼐 􏼑,
s.t. xj ∈ xmin, xmax􏼂 􏼃, ∀j ∈M.
(6)
xmin is the minimum amount of accessed data, and xmax
is the largest amount of accessed data.
Data owner’s utility can be expressed as follows:
Uj xj, pj􏼐 􏼑 � sj xjpj − xjcj􏼐 􏼑. (7)
Here, cj represents the unit cost set by data owner j.
,e data owner’s reputation score is expressed as sj,
which changes dynamically according to the data re-
quester feedback on the data owner’s data and amount
of files downloaded by the data requester.
sj ∈ [smin, smax]. ,e terms smin and smax are lower and
upper bound reputation scores, respectively.
smin < sbad < sinit < sgood < smax. sbad is the bad reputation
score threshold. sinit is the initial reputation score
threshold. sgood is the good reputation score threshold.
,e data owner j maximizes its utility based on the
price pj, forming its subgame, which is given as follows.
Problem 2 (data owner’s subgame for the data
requester):
max
pj
Uj xj, pj􏼐 􏼑,
s.t. pj ∈ cj, pmax􏽨 􏽩, ∀j ∈M.
(8)
,e data requester can accept the maximum price,
denoted as pmax. Problem 1 and problem 2 constitute the
Stackelberg game, which aims for finding the equilibrium
points. In other words, the profit of data owner comes up to
maximization when the data requester obtains its largest
profit.
Definition 2. ,e points (x∗j , p∗j ) are an equilibrium if it
satisfies both the following two conditions:
Ur x
∗
j , p
∗
j􏼐 􏼑>Ur x
∗
j , pj􏼐 􏼑, ∀j ∈M, (9)
Uj x
∗
j , p
∗
j􏼐 􏼑>Uj xj, p
∗
j􏼐 􏼑, ∀j ∈M. (10)
To analyze the Stackelberg game, we use backward in-
duction [28].
5.2.2. Data Requesters’ Accessing Strategy in Stage II.
Data owner j provides data’s unit price for the data requester
(i.e., pj, for all j ∈M). ,e data requester from data owner
decides its optimal access strategy (i.e., xj, for all j ∈M).
First, we take the derivative on the data requester’s utility
in (5) according to xj, which is expressed as follows:
8 Security and Communication Networks
zUr
zxjt
�
z fjajqln 1 + xj􏼐 􏼑 − xjpj􏽨 􏽩
zxj
�
fjajq
1 + xj
− pj, (11)
z
2
Ur
zx
2
j
�
z fjajq/1 + xj − pj􏼐 􏼑
zxj
�
− fjajq
1 + xj
< 0. (12)
Ur(xj, pj) is a strictly concave function shown by the
above derivatives. To obtain the optimal response function,
we set [(zUr)/(zxj)] � 0, which is given as follows:
zUr
zxj
�
fjajq
1 + xj
− pj � 0. (13)
,en,
x
∗
j �
fjajq
pj
− 1. (14)
According to (14), x∗j is data requester’s optimal quantity
of accessed data.
5.2.3. Data Owners’ Pricing Strategies in Stage I. Data owner
can obtain his/her largest profit based on the data requester’s
optimal access strategy. According to formulation (7)–(14),
the optimal utility of data owner for the DR can be rewritten
as follows:
Uj x
∗
j , pj􏼐 􏼑 � sj xjpj − xjcj􏼐 􏼑
� sjfjajq + sjcj􏼐 􏼑 − sjpj +
sjfjajqcj
pj
􏼠 􏼡.
(15)
First, we take the derivative on data owner’s utility in (15)
according to pj, which is expressed as follows:
zUj
zpj
�
z sjfjajq + sjcj􏼐 􏼑 − sjpj + sjfjajqcj/pj􏼐 􏼑􏽨 􏽩
zpj
�
sjfjajqcj
p
2
j
− sj, (16)
z
2
Uj
zp
2
j
�
z sjfjajqcj/p
2
j − sj􏼐 􏼑
zpj
�
− 2sjfjajqcj
p
3
j
< 0. (17)
Uj(x∗j , pj) is a strictly concave function shown by the
above derivatives. To obtain the optimal response function,
we set [(zUj)/(zpj)] � 0, which is given as follows:
zUj
zpj
�
sjfjajqcj
p
2
j
− sj � 0. (18)
,en,
Stage II: DRs’ accessing strategy Stage I: DOs’ pricing strategies
Data requesters
Data owners
2.Accessing strategy
1.Pricing strategies
3.Optimal price
4.Optimal accessing 
quantity of data
Figure 4: Stackelberg game-based optimal pricing mechanism.
Table 2: Notation table of the pricing mechanism.
Notation Description
􏽢M ,e set of data owners
M ,e amount of data owners
xj ,e amount of accessed data
xmax ,e largest amount of accessed data
xmin ,e minimum amount of accessed data
x∗j ,e optimal amount of accessed data
X∗j ,e optimal amount set of accessed data
aj ,e accessing willingness of the data requester
sj ,e data owner’s reputation score
fj ,e small fees as rewards
cj ,e cost of assessed data of data owner j.
pj ,e unit price set by data owner j.
pmax ,e maximum accepted price set by the data requester
p∗j ,e optimal price set by data owner j.
P∗j ,e set of optimal price
Security and Communication Networks 9
p
∗
j �
�������
fjajqcj
􏽱
. (19)
According to (19), when fj, aj, q, and cj are the active
impact, it will get data owner’s optimal price.
According to (7), we gain the data requester’s optimal
utility from data owner, given as follows:
Uj x
∗
j , p
∗
j􏼐 􏼑 � sjx
∗
j p
∗
j − sjx
∗
j cj
�
�����
fjajq
􏽱
−
��
cj
􏽰
􏼒 􏼓
2
sj.
(20)
According to (5)–(19), we are able to get the optimal
utility of the data requester from data owner j, given as
follows:
Ur x
∗
j , p
∗
j􏼐 􏼑 � fjqajln 1 + x
∗
j􏼐 􏼑 − x
∗
j p
∗
j
� fjqajln
�����
fjajq
cj
􏽳
− fjajq +
�������
fjajqcj
􏽱
.
(21)
By finding the equilibrium point of the game, both the
data requester and the data owners can obtain their own
optimal utility. A Nash equilibrium reaches between
them. Meanwhile, the incentive mechanism promotes the
data owners to take an active part in sharing their ex-
periences. ,ere will be some contradictions and conflicts
of benefits if there is no balance between data requesters
and data owners.
5.3. Smart Contract Design. To satisfy the system’s re-
quirements, we design smart contracts with various func-
tions. ,e interactions among contracts (programmed in
Solidity\footnotehttps: // remix ethereum org/) for Ether-
eum include the following steps. ,e function is given in
Algorithm 3.
KeywordCiphertext (CW): ,is function is called to
store keyword ciphertext in blockchain. Before storing
the data in blockchain, the DO sends the keyword with
k hash functions to invoke VSC for verifying that the
keyword is selected from a valid keyword set. If the
keyword is correct, the keyword ciphertext will be
packed in a block.
Pricing (Pricinglist, pricing): ,is function is used to
formulate pricing list for blockchain. Before generating
the pricing list based on an optimal pricing mechanism
provided by the DO, PPC will invoke VSC for verifying
the validity of the keyword. If it is valid, the DO will
take part in pricing built on an optimal pricing
mechanism. ,en, the pricing list will be stored in
blockchain.
setFee (Paymentstruct, payment): ,e function is called
to set charges for desired data and feedback data. ,e
fee is divided into two parts: the DO’s data fee and the
DR’s reward fee.
Payment (account, fee): ,e DR calls this function to
transfer the fee to the intended DO’s account.,en, he/
she can access the desired data. If deposit of the DR’s
account is enough, it will be executed. Furthermore,
PPC sends the payment result to FSC.
6. Security Proof
In this section, we analyze how the proposed scheme is able
to effectively realize the goals defined in the section of system
model.
6.1. Privacy Preservation. Users send data to blockchain
through their blockchain account during data transmissions
in edge-based IoMT. Due to the immunity characteristics of
blockchain, data in the blockchain are tamper-proof.
,erefore, users’ sensitive information can be protected.
Furthermore, the encrypted keywords are stored in block-
chain. ,ey will not divulge any information of users. Our
scheme utilizes a bloom filter in smart contract to verify the
validity of keywords, which reduces the unnecessary con-
sumption. ,e optimal pricing mechanism is used to in-
centivize the DO and the DR to share their data. Malicious
behaviors are prevented from getting illegal fees via the
anonymous blockchain account.
6.2. Secure Match
Definition 3. Secure match. An adversary A cannot dis-
tinguish the keyword from keyword ciphertext or search
trapdoor.
Theorem 1. =e proposed protocol can achieve secure match
in the random oracle model on the DBDH assumption.
To avoid reinvent the wheel, we refer to [43] for the
keyword secrecy game. Security proof is as follows.
Proof. ,e random oracles of algorithms Private key,
Trapdoor, and Test are Oak, Otrapdoor, and Otest, respectively.
Assume that A is an attacker who has advantage ε to attack
the proposed chosen keyword attack game. We build a
challenger C. He/she plays game with A to derive the so-
lution to the DBDH problem as follows:
List aklist: record ((N, ρ), ak(N,ρ)). □
6.2.1. Setup. Given a security parameter λ and an input tuple
(r1P1, r2P1, r3P1), challengerC generates the system master
public key
MPK � (H1, 􏽢e, g, P1, P2, μ1P1, μ1P2, θiP1, θiP2, H1) and the
master secret key MSK � (μ1, μ2, θi).
(a) H1(w): if the query exists on Hlist1
1 in a tuple (w, κ1),
κ1 is returned; else, κ1∈RZ∗q is chosen, (w, κ1) is
added to Hlist1
1 , and H1(w) � κ1 is returned
(b) H1(I1, I2, Iz􏼈 􏼉z∈Att): if the query exists on Hlist2
1 in a
tuple (I1, I2, Iz􏼈 􏼉z∈Att, κ2), κ2 is returned; else,
10 Security and Communication Networks
κ2∈RZ∗q is chosen, (I1, I2, Iz􏼈 􏼉z∈Att, κ2) is added to
Hlist2
1 , and H1(I1, I2, Iz􏼈 􏼉z∈Att) � κ2 is returned
6.2.2. Phase 1.
(a) Oak(N, ρ): Since challenger C has knowledge of μ1
and θρ(i)
, it can construct private key corresponding
to any (N, ρ), and next, the tuple is added to aklist.
When (N, ρ) satisfies Att∗, ⊥ is output.
(b) Otrapdoor((N, ρ), w): If (N, ρ) matches Att∗, chal-
lenger C outputs ⊥. Else, C can set T2,i, T3,i,b as in
Oak. C chooses a random vector (V
→
) with the first
element μ and next sets ηi � (V
→
) · Ni. It chooses
ε1, . . . , εl ∈ Z∗q and constructs the trapdoor Tw as in
the real scheme.
(c) Otest((N, ρ), w): If the attribute set Att associated
with cw is Att∗, C outputs ⊥. Else, C can always
compute a trapdoor Tw as in Otrapdoor. ,en, it
proceeds to the test easily. If the test holds,C outputs
1 and 0 otherwise.
6.2.3. Challenge. A outputs w∗1 and w∗0 . Challenger C sets
the original challenge ciphertext as follows:
(a) I∗1 � r1P1, I∗z � r1r2P1, and I∗2 � (gH1(w) )r3 are set.
(b) A random coin b ∈ (0, 1) is flipped, and an H1 query
on (w∗b ) is issued to achieve κ∗1 .
(c) An H1 query on H1(I∗1 , I∗2 , I∗z􏼈 􏼉z∈Att∗) is issued to
achieve κ∗2 .
(d) ,e challenge original ciphertext is output as
c∗w � (Att∗, I∗1 , I∗2 , I∗z􏼈 􏼉z∈Att∗􏼈 􏼉).
(e) If Q � r1r2r3P1 ∈ G1, then c∗w generated a valid ci-
phertext in which r1′ � r1 and r2′ � r2r3. After that,C
sends (c∗w, T∗w) to A.
6.2.4. Phase 2. ,e phase is the same as the Phase 1.
6.2.5. Guess. A outputs a guess bit b′, if b � b′, and C
outputs 1; else, it outputs 0.
In the guess phase, if Q≠ r1r2r3P1, then we have the
following:
Pr A P1, r1P1, r2P1, r3P1, Q( 􏼁 � 1􏼂 􏼃 �
1
2
. (22)
In addition,
Input: the keyword array Keyword, the pricing’s array pricing
(1) function KEYWORDCIPHERTEXT (CW) public returns()
(2) keyword.push(CW).
(3) return result
(4) end function
(5) function PRICING(Pricinglist, pricing) public
(6) query the corresponding cw.
(7) if the query is ok then
(8) Pricinglist.push(price).
(9) else
(10) return false
(11) end if
(12) return result.
(13) end function
(14) function SETFEE(Paymentstruct, payemnt) only DO public
(15) query the corresponding pricing result
(16) if the query is ok then
(17) paymentstruct.push(payment)
(18) else
(19) return false.
(20) end if
(21) return result.
(22) end function
(23) function PAYMENT (DR an dD RAccount, payment) returns()
(24) compute the DO fee DO Fee and the DR fee DR Fee
(25) query the balance of DR’s account
(26) if DR Balance>DO Fee + DR Fee then
(27) transfer fee to DO’s account and DR’s account
(28) return result.
(29) else
(30) return false.
(31) end if
(32) end function
ALGORITHM 3: Smart Contract Algorithm.
Security and Communication Networks 11
Pr A P1, r1P1, r2P1, r3P1, Q( 􏼁 � 1( 􏼁􏼂 􏼃
� Pr A P1, r1P1, r2P1, r3P1, Q( 􏼁 � 1|Awins􏼂 􏼃Pr[Awins]
+ Pr A P1, r1P1, r2P1, r3P1, Q( 􏼁 � 1|Awins􏽨 􏽩Pr[Awins]
� 1 · ε″(λ) +
1
2
1 − ε″(λ)( 􏼁 �
ε″(λ)
2
+
1
2
.
(23)
Consequently,
AdvDBDH
A (λ) �
ε″(λ)
2
� ε′. (24)
,us, the probability of A wining the keyword secrecy
game is ε′ at least.
6.3. Fairness and Incentive. ,e DO’s attribute key is used to
encrypt the profile keywords. ,e bloom filter and smart
contract can verify the authenticity of keywords. By this way,
only valid keywords can be uploaded to blockchain. To
search the desired keyword, DR must generate a search
trapdoor according to his/her selected access structure.
,us, other entities cannot obtain any information about
keywords and matching results during the process of key-
word searching. Attackers cannot learn any information
from encrypted keywords and trapdoors. ,erefore, our
scheme can achieve secure match.
6.4. Access Control. Our scheme utilizes key-policy attri-
bute-based encryption (KP-ABE) in the proposed protocol.
,e keyword w is encrypted by the DO’s attribute set Att.
,e DR uses his/her key ak to generate a search trapdoor Tw,
which is related to the access structure. It is used for
searching the matching keyword. Only when the attribute
Att of keyword ciphertext cw satisfies the access structure of
search trapdoor Tw, the DR can access the desired data after
calling pricing and payment smart contract (PPC) to transfer
fees to a specific DO’s account. If the DR fails to pay fees to
the DO’s account, he/she cannot query the intended data.
,us, DO is able to control the access of his/her data.
7. Implementation and
Performance Evaluation
In this section, we implement the proposed algorithms in a
simulated edge-based IoMT environment with Java pro-
gramming and JPBC library. We deploy the designed smart
contracts on Ethereum test platform. Firstly, we introduce
the parameter settings. We compare the security properties
of our solution with other relevant solutions. ,en, the
computational overhead and communication overhead are
analyzed for the proposed protocol. We design the smart
contracts and evaluate the performance of the designed
smart contracts on Ethereum test platform. Finally, we
evaluate the performance of the proposed optimal pricing
mechanism.
7.1. Parameter Settings and Platform. ,e system security
parameter λ � 128. For some prime p � 3mod4, we utilize
type A pairing on the elliptic curve y2 � x3 + x over the field
Fp. ,e cryptographic primitives are implemented using
JPBC library and Java on a laptop computer with Intel (R)
Core (TM) i5-7400 CPU @3.00GHz, 8GB RAM, and
Microsoft Windows 10 operating system.
In addition, we employ Ganache (client version) to build
a local test chain on Linux system. We use solidity language
to write data into smart contracts and then upload it to
blockchain. Smart contract framework and solidity compiler
are truffle @0.5.0 and solc @0.5.0, respectively. To gain time
consumption of publishing smart contracts, we utilize
Web3js library of Nodejs to interact with smart contracts on
the blockchain and test the time cost of marking transac-
tions. Due to the limited space, the specific deployment
process is skipped.
7.2. Comparisons of Security Properties. We compare the
security properties of our scheme with other matching
schemes in Table 3. ,e comparison results indicate that the
proposed scheme is capable of providing a promising so-
lution to improve profile matching service in edge-based
IoMT scenarios [25, 42, 43]. ,eir scheme does not achieve
security properties of blockchain-based and fairness and
incentive. However, our scheme can provide all of the se-
curity properties.
7.3. Communication Overhead and Computational Cost.
In edge-based IoMT scenarios, the communication and
computation resources are constrained. In this subsection,
we show the improved performances of the proposed
scheme. We denote |G1|, |G2|, |GT|, and |Q| as the size of
elements in G1, G2, GT, and Zp. ,e communication
overhead is caused by index generation phase and keyword
search phase, shown in Table 4. In index generation phase,
DO sends cw to blockchain for searching data, and the total
length is (n + 1)|G1| + |GT| bytes. ,e DR sends search
trapdoor Tw using the secret key to blockchain for
searching the desired data, and the total length is 3l|G2|
bytes during the process of keyword search. We compare
the communication overhead with [42, 43], shown in
Table 4. As can be seen from Table 4, the index generation
overhead of the proposed scheme is lower. In addition, the
overhead of keyword search phase in [42, 43] is higher than
our proposed scheme.
We compare the computational overhead in Table 5.
,e algorithm SystemInit simulates system setup phase.
,e generated keyword ciphertext is simulated by the
algorithm Encrypt. Furthermore, the algorithm Trapdoor
generates secret key and search trapdoor for the DR. ,e
algorithm Test is used to test whether the keyword ci-
phertext and trapdoor match. From Table 5, we observe
that our computational overhead is higher than that in
[43] during the process of the algorithm Test. Nonetheless,
our scheme’s computational overhead is lower than other
two schemes.
12 Security and Communication Networks
Table 4: Communication overhead of proposed protocol.
Phases ,e proposed Cui et al. [42] Miao et al. [43]
Index generation (n + 1)|G1| + |GT| |G1| + (5n + 1)|G| (2n + 1)|G| + |GT|
Keyword search 3l|G2| (6l + 2)|G| + |M| (4n + 3)|G| + |Q|
Table 3: Comparison of security properties.
Properties [25] [42] [43] ,e proposed
Blockchain integration √ × × √
Privacy preservation √ √ √ √
Secure match √ × × √
Fairness and incentive × × × √
Access control √ √ √ √
√: the scheme supports this property; ×: the scheme does not support this property.
Table 5: Computational overhead of cryptographic algorithms (in ms).
Algorithms SystemInit Encrypt Trapdoor Test
,e proposed
Average time 152 547 523 368
Max time 665 651 592 376
Min time 23 527 482 361
Cui et al. [42]
Average time 232 550 696 431
Max time 746 618 731 457
Min time 97 513 672 420
Liu et al. [43]
Average time 369 610 626 321
Max time 766 650 700 367
Min time 263 582 581 290
The proposed
Liu (2019)
0
10
20
30
40
50
60
ut
ili
ty
 o
f r
eq
ue
ste
r
10 15 20 255
quantity of data
(a)
The proposed
Liu (2019)
0
20
40
60
80
100
ut
ili
ty
 o
f r
eq
ue
ste
r
10 15 20 255
quantity of data
(b)
Figure 5: Continued.
Table 6: Time consumption of transactions.
Transactions Cipheretext Pricing Feedback
Average time (ms) 98.8 354.84 79.49
Max time (ms) 255 469 255
Min time (ms) 82 251 46
Gas cost (ether) 0.014663 0.0354413 0.0103504
Security and Communication Networks 13
7.4. Time Consumption of Smart Contracts and Resource
Consumption of Nodes. Because the length of data affects
the time consumption of transmitting a transaction to
blockchain, we firstly discuss its length. According to
Section 7.3, the length of index generation and keyword
search is (n + 1)|G1| + |GT| and 3l|G2|. As can be seen from
Table 6, we see that the average time consumption of
sending a transaction KeywordCipheretext to blockchain
is 98.8 ms, a transaction Pricing is 354.84ms, and a
transaction Feedback is 79.49ms. ,e gas consumption of
transaction KeywordCipheretext is 0.0146637 ether,
transaction Pricing is 0.03544138 ether, and transaction
Feedback is 0.01035046 ether.
7.5. Performance Analysis of Pricing Mechanism. We eval-
uate the performance for data owners and data requesters
under the proposed optimal pricing mechanism, as shown
in Figure 5. We set some parameter values, denoted as
follows: pmax � 5, xmin � 10, xmax � 100, sj ∈ [0, 1], and
fj ∈ [1, 5]. ,e parameter aj represents the data re-
quester’s willingness to access the data. When aj values are
different, we simulate the utility of data owners and data
requesters, where aj is equal to B in [44]. In Figures 5(a)
and 5(b), we compare optimal pricing mechanism with
independent pricing scheme in [44]. We find that the
amount of accessed data increases and data requester’s
utility increases. It shows that in our scheme, the data
requester can have more utility than Liu’s scheme in [44].
Figure 5(c) and 5(d) shows that the data owners can get
more utility with the increase in unit price. Moreover, the
results show that the data owners get more profits in our
scheme than Liu’s scheme in [44] when the accessing
willingness of requester increases.
8. Conclusion and Future Work
In this work, we introduce a new blockchain-based profile
matching scheme by utilizing KP-ABE algorithm and bloom
filter, which guarantees privacy preservation and security of
health data in edge-based IoMT. Firstly, we present a system
framework based on blockchain for profile matching among
different users. Secondly, we design a consensus mechanism
for proposed blockchain to achieve the consensus of the
system. ,irdly, smart contract with an optimal pricing
mechanism is designed to formulate pricing list and en-
courage more users to participate in the system. We evaluate
the performance of communication overhead. We employ
JPBC library to evaluate computational cost of the proposed
protocol, compared with other schemes. Finally, we deploy
the smart contracts on Ethereum platform and test the time
consumption of smart contracts.
In our future work, we plan to deploy smart contracts on
Hyperledger Fabric and store original data using encryption
algorithm in IPFS for profile matching, which has a potential
to improve the performances in edge-based IoMTscenarios.
Data Availability
No data were used to support this study.
Conflicts of Interest
,e authors declare that they have no conflicts of interest.
Acknowledgments
,is work was supported in part by the National Natural
Science Foundation of China under Grant 62072005 and the
Natural Science Foundation of Anhui Province under Grant
2108085Y22.
The proposed
Liu (2019)
0
2
4
6
8
10
12
ut
ili
ty
 o
f o
w
ne
rs
53 421
unit price of data
(c)
The proposed
Liu (2019)
0
2
4
6
8
10
12
14
16
18
ut
ili
ty
 o
f o
w
ne
rs
53 421
unit price of data
(d)
Figure 5: Computational cost taken by (a) aj � 20, (b) aj � 30, (c) aj � 20, and (d) aj � 30.
14 Security and Communication Networks
References
[1] D. He, N. Kumar, H. Wang, L. Wang, K.-K. R. Choo, and
A. Vinel, “A provably-secure cross-domain handshake
scheme with symptoms-matching for mobile healthcare social
network,” IEEE Transactions on Dependable and Secure
Computing, vol. 15, no. 4, pp. 633–645, 2018.
[2] W. Tang, J. Ren, and Y. Zhang, “Enabling trusted and privacy-
preserving healthcare services in social media health net-
works,” IEEE Transactions on Multimedia, vol. 21, no. 3,
pp. 579–590, 2019.
[3] Y. Liu, M. Peng, G. Shou, Y. Chen, and S. Chen, “Toward edge
intelligence: multiaccess edge computing for 5G and Internet
of ,ings,” IEEE Internet of =ings Journal, vol. 7, no. 8,
pp. 6722–6747, 2020.
[4] S. Qiu, D. Wang, G. Xu, and S. Kumari, “Practical and
provably secure three-factor Authentication protocol based
on extended chaotic-maps for mobile lightweight devices,”
IEEE Transactions on Dependable and Secure Computing,
vol. 17, no. 3, p. 1, 2020.
[5] A. Asheralieva and D. Niyato, “Distributed dynamic resource
management and pricing in the IoT systems with blockchain-
as-a-service and UAV-enabled mobile edge computing,” IEEE
Internet of =ings Journal, vol. 7, no. 3, pp. 1974–1993, 2020.
[6] K. Liu,W. Chen, Z. Zheng, Z. Li, andW. Liang, “A novel debt-
credit mechanism for blockchain-based data-trading in In-
ternet of vehicles,” IEEE Internet of =ings Journal, vol. 6,
no. 5, pp. 9098–9111, 2019.
[7] Y. Qu, L. Gao, T. H. Luan et al., “Decentralized privacy using
blockchain-enabled federated learning in fog computing,”
IEEE Internet of =ings Journal, vol. 7, no. 6, pp. 5171–5183,
2020.
[8] L. Cui, Y. Qu, G. Xie et al., “Security and privacy-enhanced
federated learning for anomaly detection in IoT infrastruc-
tures,” IEEE Transactions on Industrial Informatics, vol. 18,
no. 5, pp. 3492–3500, 2022.
[9] Q. Wang, D. Wang, C. Cheng, and D. He, “Quantum2FA:
efficient quantum-resistant two-factor Authentication scheme
for mobile devices,” IEEE Transactions on Dependable and
Secure Computing, p. 1, 2021.
[10] S. U. Amin andM. S. Hossain, “Edge intelligence and Internet
of ,ings in healthcare: a survey,” IEEE Access, vol. 9,
pp. 45–59, 2021.
[11] I. V. Pustokhina, D. A. Pustokhin, D. Gupta, A. Khanna,
K. Shankar, and G. N. Nguyen, “An effective training scheme
for deep neural network in edge computing enabled Internet
of medical ,ings (IoMT) systems,” IEEE Access, vol. 8,
Article ID 107112, 2020.
[12] H. Zhong, Y. Zhou, Q. Zhang, Y. Xu, and J. Cui, “An efficient
and outsourcing-supported attribute-based access control
scheme for edge-enabled smart healthcare,” Future Genera-
tion Computer Systems, vol. 115, pp. 486–496, 2021.
[13] R. Akkaoui, X. Hei, andW. Cheng, “EdgeMediChain: a hybrid
edge blockchain-based framework for health data exchange,”
IEEE Access, vol. 8, Article ID 113467, 2020.
[14] D. C. Nguyen, P. N. Pathirana, M. Ding, and A. Seneviratne,
“BEdgeHealth: a decentralized architecture for edge-based
IoMT networks using blockchain,” IEEE Internet of =ings
Journal, vol. 8, no. 14, Article ID 11743, 2021.
[15] T. Muhammed, R. Mehmood, A. Albeshri, and I. Katib,
“UbeHealth: a personalized ubiquitous cloud and edge-en-
abled networked healthcare system for smart cities,” IEEE
Access, vol. 6, Article ID 32258, 2018.
[16] R. Guo, G. Yang, H. Shi, Y. Zhang, and D. Zheng, “O3-R-CP-
ABE: an efficient and revocable attribute-based encryption
scheme in the cloud-assisted IoMT system,” IEEE Internet of
=ings Journal, vol. 8, no. 11, pp. 8949–8963, 2021.
[17] M. Li, N. Ruan, Q. Qian, H. Zhu, X. Liang, and L. Yu, “SPFM:
scalable and privacy-preserving friend matching in mobile
cloud,” IEEE Internet of =ings Journal, vol. 4, no. 2,
pp. 583–591, 2017.
[18] D. He, N. Kumar, H. Wang, L. Wang, K.-K. R. Choo, and
A. Vinel, “A provably-secure cross-domain handshake
scheme with symptoms-matching for mobile healthcare social
network,” IEEE Transactions on Dependable and Secure
Computing, vol. 15, no. 4, pp. 633–645, 2018.
[19] V. Malamas, P. Kotzanikolaou, T. K. Dasaklis, and
M. Burmester, “A hierarchical multi blockchain for fine
grained access to medical data,” IEEE Access, vol. 8, Article ID
134393, 2020.
[20] M. Wang, Y. Guo, C. Zhang, C. Wang, H. Huang, and X. Jia,
“MedShare: a privacy-preserving medical data sharing system
by using blockchain,” IEEE Transactions on Services Com-
puting, 2021.
[21] P. Zhang and M. Zhou, “Security and trust in blockchains:
architecture, key technologies, and open Issues,” IEEE
Transactions on Computational Social Systems, vol. 7, no. 3,
pp. 790–801, 2020.
[22] K. Gai, J. Guo, L. Zhu, and S. Yu, “Blockchain meets cloud
computing: a survey,” IEEE Communications Surveys & Tu-
torials, vol. 22, no. 3, pp. 2009–2030, 2020.
[23] L. Yang, M. Li, H. Zhang, H. Ji, M. Xiao, and X. Li, “Dis-
tributed resource management for blockchain in fog-enabled
IoT networks,” IEEE Internet of =ings Journal, vol. 8, no. 4,
pp. 2330–2341, 2021.
[24] W. Meng, W. Li, S. Tug, and J. Tan, “Towards blockchain-
enabled single character frequency-based exclusive signature
matching in IoT-assisted smart cities,” Journal of Parallel and
Distributed Computing, vol. 144, pp. 268–277, 2020.
[25] F. Yang, Y. Wang, C. Fu, C. Hu, and A. Alrawais, “An efficient
blockchain-based bidirectional friends matching scheme in
social networks,” IEEE Access, vol. 8, Article ID 150902, 2020.
[26] Y. Jiao, P. Wang, S. Feng, and D. Niyato, “Profit maximization
mechanism and data management for data analytics services,”
IEEE Internet of =ings Journal, vol. 5, no. 3, pp. 2001–2014,
2018.
[27] G. El Rahi, S. R. Etesami, W. Saad, N. B. Mandayam, and
H. V. Poor, “Managing price uncertainty in prosumer-centric
energy trading: a prospect-theoretic stackelberg game ap-
proach,” IEEE Transactions on Smart Grid, vol. 10, no. 1,
pp. 702–713, 2019.
[28] X. Chen, C. Tang, Z. Li, L. Qi, Y. Chen, and S. Chen, “A pricing
approach toward incentive mechanisms for participant mo-
bile crowdsensing in edge computing,” Mobile Networks and
Applications, vol. 25, no. 4, pp. 1220–1232, 2020.
[29] K. Liu, X. Qiu, W. Chen, X. Chen, and Z. Zheng, “Optimal
pricing mechanism for data market in blockchain-enhanced
Internet of ,ings,” IEEE Internet of =ings Journal, vol. 6,
no. 6, pp. 9748–9761, 2019.
[30] Y. Li, J. Wan, R. Chen et al., “Top-k vehicle matching in social
ridesharing: a price-aware approach,” IEEE Transactions on
Knowledge and Data Engineering, vol. 33, no. 3, pp. 1251–
1263, 2021.
[31] Z. Xiong, J. Kang, D. Niyato, P. Wang, and H. Poor, “Cloud/
edge computing service management in blockchain networks:
multi-leader multi-follower game-based ADMM for pricing,”
Security and Communication Networks 15
IEEE Transactions on Services Computing, vol. 13, no. 2,
pp. 356–367, 2020.
[32] W. Zhang, Z. Hong, and W. Chen, “Hierarchical pricing
mechanism with financial stability for decentralized crowd-
sourcing: a smart contract approach,” IEEE Internet of =ings
Journal, vol. 8, no. 2, pp. 750–765, 2021.
[33] J. Nie, J. Luo, Z. Xiong, D. Niyato, and P. Wang, “A stack-
elberg game approach toward socially-aware incentive
mechanisms for mobile crowdsensing,” IEEE Transactions on
Wireless Communications, vol. 18, no. 1, pp. 724–738, 2019.
[34] B. H. Bloom, “Space/time trade-offs in hash coding with
allowable errors,” Communications of the ACM, vol. 13, no. 7,
pp. 422–426, 1970.
[35] Q. Feng, D. He, S. Zeadally, M. K. Khan, and N. Kumar, “A
survey on privacy protection in blockchain system,” Journal of
Network and Computer Applications, vol. 126, no. 1, pp. 45–
58, 2019.
[36] Y. Xiao, N. Zhang, W. Lou, and Y. T. Hou, “A survey of
distributed consensus protocols for blockchain networks,”
IEEE Communications Surveys & Tutorials, vol. 22, no. 2,
pp. 1432–1465, 2020.
[37] W. Li, M. Cao, Y. Wang, C. Tang, and F. Lin, “Mining pool
game model and nash equilibrium analysis for PoW-based
blockchain networks,” IEEE Access, vol. 8, Article ID 101049,
2020.
[38] C. T. Nguyen, D. T. Hoang, D. N. Nguyen, D. Niyato,
H. T. Nguyen, and E. Dutkiewicz, “Proof-of-Stake consensus
mechanisms for future blockchain networks: fundamentals,
applications and opportunities,” IEEE Access, vol. 7, Article ID
85727, 2019.
[39] F. Yang,W. Zhou, Q.Wu, R. Long, N. N. Xiong, andM. Zhou,
“Delegated proof of Stake with downgrade: a secure and ef-
ficient blockchain consensus algorithm with downgrade
mechanism,” IEEE Access, vol. 7, Article ID 118541, 2019.
[40] L. Xu, W. Li, F. Zhang, R. Cheng, and S. Tang, “Authorized
keyword searches on public key encrypted data with time
controlled keyword privacy,” IEEE Transactions on Infor-
mation Forensics and Security, vol. 15, pp. 2096–2109, 2020.
[41] A. Zhang and X. Lin, “Towards secure and privacy-preserving
data sharing in e-health systems via consortium blockchain,”
Journal of Medical Systems, vol. 42, no. 147, pp. 140–214, 2018.
[42] H. Cui, Z.Wan, R. H. Deng, G.Wang, and Y. Li, “Efficient and
expressive keyword search over encrypted data in cloud,”
IEEE Transactions on Dependable and Secure Computing,
vol. 15, no. 3, pp. 409–422, 2018.
[43] Y. Miao, R. Deng, X. Liu, K. Choo, H. Wu, and H. Li, “Multi-
authority attribute-based keyword search over encrypted
cloud data,” IEEE Transactions on Dependable and Secure
Computing, vol. 18, no. 4, pp. 1667–1680, 2021.
[44] K. Liu, X. Qiu, W. Chen, X. Chen, and Z. Zheng, “Optimal
pricing mechanism for data market in blockchain-enhanced
Internet of ,ings,” IEEE Internet of =ings Journal, vol. 6,
no. 6, pp. 9748–9761, 2019.
16 Security and Communication Networks