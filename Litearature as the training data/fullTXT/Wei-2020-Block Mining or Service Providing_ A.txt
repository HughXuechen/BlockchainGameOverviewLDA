Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
SPECIAL SECTION ON BLOCKCHAIN TECHNOLOGY: PRINCIPLES AND APPLICATIONS
Received June 15, 2020, accepted June 27, 2020, date of publication July 21, 2020, date of current version July 31, 2020.
Digital Object Identifier 10.1109/ACCESS.2020.3010980
Block Mining or Service Providing: A Profit
Optimizing Game of the PoW-Based Miners
YUNKAI WEI , (Member, IEEE), MINGYUE XIAO , NING YANG,
AND SUPENG LENG , (Member, IEEE)
School of Information and Communication Engineering, University of Electronic Science and Technology of China, Chengdu 611731, China
Corresponding author: Yunkai Wei (ykwei@uestc.edu.cn)
This work was supported in part by the Science and Technology Department of Sichuan Province under Grant 2019YFG0534, in part by
the National Key Research and Development Program of China under Grant 2018YFE0117500, and in part by the European Union
H2020 Project COSAFE under Grant MSCA-RISE-2018-824019.
ABSTRACT The Proof-of-Work (PoW) consensus is widely used to maintain the security and consistency
of the blockchain systems. In PoW, the miners have to consume tremendous computing resources to compete
for generating a valid block and win the reward. However, in recent years, the revenue of the miners face
a large oscillation, due to economic policy changes, virtual currency price fluctuations, etc. Some miners
have to stop mining and exit the market, leaving large number of computing resources vacant. Whereas,
vast computing resources are required outside the blockchain ecosystem, such as cloud/edge computing
and artificial intelligence. In this paper, the traditional miners (T-miner) which concentrate on block mining
are promoted to the evolutionary miners (E-miner) with additional ability to provide computing services.
We propose a scheme for the E-miners to connect the blockchain ecosystem with external computation
requirements, releasing the redundant computing power of the E-miners to provide computing services for
extra profits. A two-stage Stackelberg game is presented to model the interaction between the computing
service pricing and each E-miner’s computing power allocation. The details of the game are separately
elaborated for both flexible and specified external computing requirements, in pure environment with only
E-miners and hybrid environment with both E-miners and T-miners, respectively. We utilize two distributed
iteration algorithms to find the equilibrium point of the Stackelberg game, where both sides can achieve
optimal utility. Extensive simulation results demonstrate the effect of our proposed schemes, and show that
the profits of the E-miners are considerably increased compared with the T-miners that devote all computing
power to block mining.
INDEX TERMS Blockchain, miner, proof-of-work, computing power allocation, game.
I. INTRODUCTION
The Proof-of-Work (PoW) consensus [1] is widely used to
maintain the security and consistency of the blockchain sys-
tems [2]. The participants in PoW, or so called the miners,
are encouraged to compete for generating a valid block and
win the reward by solving a cryptographic puzzle [3], [4].
This will drive the miners to devote tremendous computing
resources to the consensus process. Consequently, the reward,
which is usually in form of virtual currency, should cover
the cost of consumed resources and some reasonable profits.
Unfortunately, the price of virtual currency is highly fluctu-
ating. Bitcoin, as a typical virtual currency, has witnessed the
The associate editor coordinating the review of this manuscript and
approving it for publication was Jun Wu .
price fluctuating from $0.008 per 1 BTC in October 2009,
to a maximum of $19,535 per 1 BTC in December 2017,
and fell to $3,200 per 1 BTC in December 2018 [5]. Facing
such fluctuations, many miners cannot achieve the balance
between their rewards and costs, and have to stop mining
and exit the market, leaving a great number of computing
resources vacant.
Studies have been conducted to improve the miners’ utility
even in face of such dilemma caused by the price fluctuation
of virtual currency, as will be analysed in the related work
(Section II). However, these methods concentrate on optimiz-
ing the computing power dispatch among theminers for better
revenues, and cannot really solve the problem of large idle
power caused by the economic policy changes or the market
price fluctuations.
134800 This work is licensed under a Creative Commons Attribution 4.0 License. For more information, see https://creativecommons.org/licenses/by/4.0/ VOLUME 8, 2020
https://orcid.org/0000-0002-4895-2073
https://orcid.org/0000-0001-8624-9111
https://orcid.org/0000-0003-0049-5982
https://orcid.org/0000-0003-2483-6980
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
At the same time, vast computing resources are required
outside the blockchain ecosystem, such as cloud/edge com-
puting [6] and Artificial Intelligence (AI) [7], leading to a
significant increase in computing dimensions and resource
costs. This promotes the requirements for extra service
providers with adequate computing resources and reasonable
prices. The redundant computing resources in the blockchain
ecosystem can thereby meet such external computation
requirements, since increasing number of mining devices can
support many types of calculations [8]. This lights up the way
out of the above dilemma for the miners in the blockchain
ecosystem.
In this paper, we put forward schemes to release the redun-
dant computing resources of the miners to provide computing
services needed by the users outside of the blockchain ecosys-
tem. Specifically, the traditional miners (T-miner) which con-
centrate on block mining are promoted to the evolutionary
miners (E-miner) with additional ability to provide com-
puting services. Then, an architecture for the E-miners to
connect two ecosystems, and a Stackelberg game to optimize
the resource allocation are proposed. The contributions are
summarized below:
• We put forward a uniform architecture to connect
the blockchain ecosystem with external computation
requirements, so as to release the redundant computing
resources of the E-miners to provide computing services
for extra profits.
• A Stackelberg game is proposed to optimize the miners’
computing resource allocation between block mining
and service providing. The details of the game are sepa-
rately elaborated for both flexible and specified external
computing requirements, in pure environment with only
E-miners and hybrid environment with both E-miners
and T-miners, respectively.
• We present two distributed iteration algorithms accord-
ing to the demand of different scenarios to find the
equilibrium point of the proposed Stackelberg game.
Extensive simulations show the performance of our pro-
posed architecture and schemes.
The rest of this paper is organized as follows. The related
work is depicted in Section II. Section III describes our
proposed architecture. In section IV we model the interac-
tion between the service user and the miners as a Stack-
elberg game, and the relationship among the miners as a
non-cooperative game. The detailed game analysis and two
distributed iteration algorithms are provided in Section V, and
the performance evaluation is shown in Section VI. Finally,
section VII concludes this paper.
II. RELATED WORK
According to whether there is cooperation among the miners
in block mining, the studies to improve the miners’ utility can
be classified into two categories, namely individual mining
and cooperative mining.
For individual mining, a simple static game with complete
information was proposed in [9] to model the Bitcoin mining
activity. The mining is an all-pay contest in which miners
compete for the reward with all computing resources. Once
the miners lost the game, the energy consumption will be
wasted. In [10] the authors studied the impact of the miners’
arrival and departure rates on their utilities. A stochastic game
was presented to model the miners’ benefits and state transi-
tions. However, the mechanisms proposed in above studies
only consider the allocation of the miners’ computational
power. That is, they can only decide whether or not to invest
in mining. The authors in [11] presented a game that each
miner can decide how much resource should be invested in
the race to win the mining reward given the investments of
all other miners. Cloud mining was presented in [12] to assist
the lightweight miners to participate in the PoW process.
The interaction between the cloud provider and cloud miners
was modeled as a Stackelberg game to solve the problem of
resource management and price decision.
The cooperative mining is generally in form of pool min-
ing. In pool mining, the miners cooperate with each other to
obtain stable, long term benefits. Literature [13] proposed a
secure mechanism to encourage miners to mine blocks coop-
eratively and share the reward, simultaneously guaranteeing
the mining efficiency in blockchain network. In [14] the min-
ers split their computing power and spread it across different
pools to maximize their expected profit. The problem of
mining pool selection in a PoW-based blockchain network
was studied in [15] and the dynamics of pool selection among
individual miners was modeled as an evolutionary game.
Based on the cooperative game model, the authors explored
an efficient solution that can maximize the Bitcoin miners’
rewards in [16].
Besides, there is a special pattern between the individual
mining and cooperative mining. In this pattern, the miners
join in the cooperative mining, but adopt selfish means to
maximize their personal benefits. Eyal and Sirer proposed
a selfish mining scheme [17], which uses a pool to keep its
discovered blocks privately, and thereby intentionally forks
the chain. In this way, colluding miners can obtain a rev-
enue larger than their fair share. However, selfish mining
is not optimal for a large parameter space. A new family
of alternative strategies named stubborn mining that gen-
eralize and outperform the selfish mining was proposed
in [18]. With the new strategy, the miner’s revenue can
be considerably improved. Although the above strategies
have further optimized the benefits of the miners, they
bring security issues and undermine the credibility of the
blockchain.
In summary, the above methods concentrate on optimizing
the computing power dispatch among the miners for better
revenues. This cannot really solve the dilemma that large idle
power is caused by the economic policy changes or themarket
price fluctuation, while vast computing resources are required
outside the blockchain ecosystem.
VOLUME 8, 2020 134801
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
FIGURE 1. The architecture connecting blockchain ecosystem with
external computation requirements.
III. OUR PROPOSED ARCHITECTURE CONNECTING
BLOCKCHAIN AND EXTERNAL ECOSYSTEM
Figure 1 shows the architecture connecting the blockchain
ecosystem and external computation requirements (external
ecosystem). In the external ecosystem, exploding computing
requirements are triggered by cloud/edge computing, big
data analysis, and artificial intelligence, etc. The blockchain
ecosystem considered in this paper is PoW-based, and there
are two types of miners. The first type of miners, called
E-miners, can devote their computing resources to both block
mining and service providing in parallel. While the sec-
ond type of miners, called T-miners, can only perform
block mining due to their hardware limitations such as the
ASICs specially designed for block mining. Accordingly,
the blockchain ecosystem can be a pure environment with
only E-miners, or a hybrid environment with both E-miners
and T-miners respectively.
For the E-miners, we consider that both block mining and
service providing consume not only the CPU cycles, but also
some accessory resources such as memory, I/O resource.
Consequently, we define two specific terms, namely CPU
resource and accessory resource. A unit CPU resource can
be regarded as a fixed batch of CPU cycles (e.g. 1010 or 1011
according to practical scenarios) in unit time, while the acces-
sory resource denotes the other resources consumed corre-
sponding to one unit CPU resource. The CPU resource and
the accessory resource together form the computing resource
in block mining or service providing. Suppose there are
n E-miners in total, forming a set N = {m1, . . . ,mn}. Let
CE
i denote the number of unit CPU resource that the E-miner
mi (1 ≤ i ≤ n) has in unit time. Each E-miner conducts
the block mining independently, and has no cooperation with
other miners.
For the T-miners, as mining is the only source of their
income, they do not need to consider the allocation of com-
puting resource. Suppose there are q T-miners in total, form-
ing a set Q = {m′1, . . . ,m
′
q}. Let C
T
k denote the number of
unit CPU resource that the T-miner m′k (1 ≤ k ≤ q) has in
unit time. The total CPU resource of these T-miners can be
expressed as
∑
k∈{1,··· ,q} C
T
k .
A central scheduling node (CSN), which can be a real
entity or a virtual entity in the system, is used to coor-
dinate and migrate the external computation requirements
into the blockchain ecosystem, and dispatch the computing
tasks to the E-miners. The computing reward proportional to
the workload of the tasks will be provided by the external
ecosystem to the CSN. The CSN can use part of the reward
to inspire the E-miners to assign more computing resource
to the tasks, and keep the rest as its own profit. Specifically,
the tasks can be dispatched to the E-miners as follows:
Step 1: The CSN receives massive computing tasks from
the external ecosystem, and divides them, which are consid-
ered to be rather huge, into uniform sub-tasks measured in
the unit of CPU resource. Suppose the computing complexity
of each sub-task is α, i.e., one sub-task requires α unit CPU
resource. The users from external ecosystem will provide a
computing reward c (c ≥ 0) to the CSN for each sub-task.
Step 2: In order to encourage the E-miners to allocate more
computing resource to provide computing services, the CSN
sets an initial price p (0 ≤ p ≤ c) for each sub-task, and
broadcasts it to the E-miners.
Step 3: According to the newly received price p, each
E-miner will adjust its computing resource allocation strat-
egy, so as to maximize its total profits of (1) block mining in
blockchain ecosystem and (2) providing computing service
to external ecosystem. The allocation strategy will be subse-
quently submitted to the CSN.
Step 4: Based on our proposed game that will be demon-
strated in section IV, the CSN will further adjust the price p
according to the total computing resource announced by all
the E-miners, to maximize the revenue of itself. As proved in
section V, the CSN and the miners will reach an equilibrium
state after appropriate iterations.
Step 5: Finally, the CSN dispatches the sub-tasks to the
E-miners according to the price and allocation results at the
equilibrium point.
In the process described above, the total number of com-
puting tasks transferred into the blockchain ecosystem is
determined by the allocation results between the CSN and the
E-miners. According to the number of the tasks, we consider
two cases. In the first case, the number of external computing
tasks is flexible, and there is no competition among the
E-miners in taking on them. In the second case, the number
of tasks is specified in each round, and the E-miners will
compete to take on them. To avoid malicious competition,
the E-miners who claim a number of tasks but fail to finish
them will be punished and cannot compete for the tasks in the
next round. For the CSN node, when the number of the com-
puting tasks is flexible, the maximum benefit is to complete
as many computing tasks as possible at a lower price. When
the number of the computing tasks is specified, the benefits
of the CSN can be maximized only if the computing tasks are
fully allocated.
Suppose the E-miner mi divides its CPU resource CE
i
into two parts: CE
i xi (0 ≤ xi ≤ 1) for block mining
and CE
i (1 − xi) for external computing service providing.
134802 VOLUME 8, 2020
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
Let (x1, . . . , xn) ∈ X denote a specific allocation strategy of
the E-miners (m1, . . . ,mn), where X is the universal alloca-
tion space of the E-miners. Let x−i denote the CPU resource
allocation profile of all the E-miners except mi.
Definition 1 (RelativeMining Resource): The relative min-
ing resource is used to describe the ratio of the CPU resource
devoted to mining by an E-miner to that of all the miners in
the blockchain ecosystem. Let Hi denote the relative mining
resource of the E-miner mi, there is:
Hi =
CPU res. devoted to mining by the miner mi
CPU res. devoted to mining by all the miners
. (1)
In PoW-based blockchains, the probability of the E-miner
mi to successfully generate a valid block is determined by its
relative mining resource and the propagation delay of its new
block.
For the relative mining resource Hi, based on (1) we have:
Hi =
CE
i xi∑
j∈{1,...,n}
CE
j xj +
∑
k∈{1,...,q}
CT
k
. (2)
Propagation delay of a new block generated by the E-miner
mi is related to the block size, which is mainly determined by
the amount of packaged transactions (denoted as ti). A newly
generated block with large size may be at a disadvantage in
the block propagation, and thereby have a probability that this
block will turn out to be an orphan block [19]. According
to [20], the time of mining follows Poisson distribution,
the probability that the block of the E-miner mi becomes an
orphan block is:
Piorphan = 1− e−λεti , (3)
where λ is the average block time, ε is a given constant
that influences the network latency. Thus, the probability that
the miner mi successfully generates a valid block can be
formulated as:
Pi = Hi(1− Porphan)
=
CE
i xi∑
j∈{1,...,n}
CE
j xj +
∑
k∈{1,··· ,q}
CT
k
e−λεti . (4)
The profit of block mining includes the mining reward R
and the transaction fees rti, where r denotes the transaction
fee of each transaction. Consequently, the profit of success-
fully generating a valid block can be defined as:
FMi (xi) = (R+ rti)Pi
= (R+ rti)
CE
i xi∑
j∈{1,...,n}
CE
j xj +
∑
k∈{1,··· ,q}
CT
k
e−λεti . (5)
In a pure blockchain network there is
∑
k∈{1,··· ,q} C
T
k = 0,
and in a hybrid blockchain network,
∑
k∈{1,··· ,q} C
T
k > 0.
An E-miner mi will adjust its CPU resource assigned to
external service according to the sub-task price p. Let FiS (xi)
represent the revenue from providing computation services
for external ecosystem, there is
FiS (xi) = pli, (6)
where li is the total number of completed sub-tasks by the
E-miner mi in the average block time λ.
The time to complete one sub-task can be expressed as
α
CEi (1−xi)
. The number of the sub-tasks that can be completed
in the average block time λ is:
li =
λCE
i (1− xi)
α
. (7)
Suppose the cost of unit CPU resource is 1. For simplic-
ity and without loss of generality, we assume that in block
mining, the computing resource cost corresponding to unit
CPU resource is η1. While in external computing service
providing, unit CPU resource corresponds to η2 of that.
Therefore, the total cost of the E-miner mi within time λ can
be expressed as:
Ti = η1λCE
i xi + η2λC
E
i (1− xi). (8)
The utility function UE
i (p, xi, x−i) of E-miner mi consists
of two parts, i.e., revenue and expense. The revenue includes
the total return within the average block time λ, composed of
the benefits of successful mining and providing computing
services for external tasks. The expense comes from the cost
of the computing resource, including the CPU resource and
the accessory resource. Therefore, we have:
UE
i (p, xi, x−i) = FiM (xi)+ FiS (xi)− Ti. (9)
Similarly, for the T-minerm′k , the profit F
M
k of successfully
generating a valid block is:
FMk = (R+ rtk )Pk
= (R+ rtk )
CT
k∑
j∈{1,...,n}
CE
j xj +
∑
k∈{1,··· ,q}
CT
k
e−λεtk , (10)
and the utility UT
k is:
UT
k = FkM − η1λCT
k . (11)
In the average block time λ, the completed sub-tasks by the
E-miners add up to a total number of L =
∑
j∈N lj. For the
CSN, the utility S(p, x) is the profit minus the cost paid to
the E-miners. Thus, there is
S(p, x) = cL − pL. (12)
IV. THE GAME BETWEEN BLOCK MINING
AND SERVICE PROVIDING
In this section, we first demonstrate the Stackelberg game
between the CSN and the E-miners, including a non-
cooperative game among the miners. Based on the Stack-
elgerg game and its embedded non-cooperative game, two
task dispatching algorithms are then presented. We model a
two-stage one-leader multi-followers Stackelberg game for
VOLUME 8, 2020 134803
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
the interaction between the sub-task price announced by the
CSN and the computing resource allocation of the E-miners.
The CSN acts as the leader to make the pricing strategy, and
the E-miners act as the followers to determine their respec-
tive computing resource allocation strategy under the pricing
strategy of the CSN. Both sides pursue their individual utility
maximized by constantly adjusting their strategies. When the
leader and the followers both get the optimal utility with the
opponents’ strategies fully considered, the game reaches an
equilibrium state. In this case, no participant has the incentive
to change its strategy, because it cannot achieve any higher
benefit than that at the equilibrium point.
A. THE STACKELBERG GAME BETWEEN THE
CSN AND THE E-MINERS
As shown in Fig. 2, the Stackelberg game has two stages: the
upper stage I and the lower stage II. In the upper stage I,
the CSN first announces its price p to all the E-miners.
When the sub-task of the CSN is underpriced, the E-miners
will allocate little computing resource to provide computing
services in pursuit of their own interests, resulting in few
sub-tasks completed. Therefore, the revenue of the CSN will
be extremely low. On the contrary, when the sub-task is
overpriced, the E-miners will allocate too much computing
resource for service providing, leading to the result that the
CSN should pay too much reward to the E-miners. This will
also damage the utility of the CSN.
FIGURE 2. The Stackelberg game.
Therefore, for the CSN, the sub-game is to maximize its
final profit. When the number of the computing tasks is
flexible, the CSN can allocate enough computing tasks to
match the E-miners’ intentions in service providing, as below:
maximize
p
S(p, x). (13)
When the number of the computing tasks is specified,
the CSN can achieve the reward only when it successfully
assigns all the tasks to the E-miners. Therefore, the CSN can
maximize its own benefits only if it successfully match the
number of the tasks and the amount of the computing resource
that the E-miners willing to provide. Therefore, Equation (12)
needs to satisfy L = T , where T denotes the number of the
tasks.
In the lower stage II, the E-miners determine their own
computing resource allocation based on the announced price
and other E-miners’ allocation strategies. After the CSN gets
the results of all the E-miners’ computing resource allocation,
it will accordingly adjust its own price to further optimize its
utility.
B. NON-COOPERATIVE GAME AMONG THE E-MINERS
The E-miners choose to mine the blocks separately, and
compete with each other for the right to generate a valid
block and win the reward. As shown in Fig. 3, the relationship
among the E-miners can be modelled as a non-cooperative
game. In this game, the computing resource allocation of
the E-miners will affect each other, since the probability
of obtaining the mining reward is related to the proportion of
its computing resource for block mining by that in the entire
blockchain network. Each miner chooses the best response
to other miners’ allocation strategies and pursues to make its
own utility maximized.
FIGURE 3. The non-cooperative game.
Consequently, for an E-miner mi, the sub-game is to adjust
the value xi and pursue the maximized profit it can achieve,
as below:
maximize
xi
UE
i (p, xi, x−i),
subject to xi ∈ [0, 1]. (14)
C. THE TASK DISPATCHING ALGORITHM
Based on the Stackelgerg game and its embedded non-
cooperative game, and considering the impact of the number
of tasks on the utility of the CSN, we propose two iterative
algorithms, i.e. Algorithm 1 and Algorithm 2. In both algo-
rithms, the CSN has the sub-tasks dispatched to the E-miners,
in an iterative way to competitively find the CSN’s best
pricing strategy and the E-miners’ best computing resource
allocation strategies. Specifically, Algorithm 1 is designed
for the case with flexible number of tasks, in which the CSN
firstly initialize its price strategy, and the E-miners accord-
ingly set their own computing resource allocation strategies.
Then, the CSN and the E-miners will alternately adjust their
corresponding strategies, until an equilibrium is reached. The
basic process of Algorithm 2 is similar with Algorithm 1,
except for that Algorithm 2 is specially designed for the case
with specified number of tasks.
V. THE EXISTENCE AND FINDING OF THE
EQUILIBRIUM POINT
As mentioned above, we combine the computing service
pricing with each E-miner’s computing resource allocation to
134804 VOLUME 8, 2020
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
Algorithm 1 Task Dispatching Algorithm With Flexible
Number of Computing Tasks
Require: Initialize the iteration time t = 0, set initial price
of sub-task p(0) = p0, initial allocation strategy X (0) =
x1(0), x2(0), . . . , xn(0) and a small precision threshold δ;
Ensure: The allocation strategy set X = (x1, x2, . . . , xn) and
the optimal price p.
1: repeat
2: The CSN broadcasts the price p(t) to all the E-miners.
3: Each E-miner adjusts its computing resource alloca-
tion strategy xi(t) to maximize its utility as defined in
Eq. (9).
4: The CSN updates its price p(t + 1).
5: until S(p(t + 1),X (t + 1))− S(p(t),X (t)) < δ
Algorithm 2 Task Dispatching Algorithm With Specified
Number of Computing Tasks
Require: Initialize the iteration time t = 0, set initial price
of sub-task p(0) = p0, initial allocation strategy X (0) =
x1(0), x2(0), . . . , xn(0) and a small precision threshold δ;
Ensure: The allocation strategy set X = (x1, x2, . . . , xn) and
the optimal price p.
repeat
2: The CSN broadcasts the price p(t) to all the E-miners.
Each E-miner adjusts its computing resource alloca-
tion strategy xi(t) to maximize its utility as defined in
Eq. (9).
4: The CSN updates its price p(t + 1).
until |T − L| < δ
form the Stackelberg game. In this section, we prove the exis-
tence of the equilibrium point of the game, where the CSN
can maximize its profit considering the E-miners give the
best responses of their allocation profile and reach an Nash
equilibrium state. Then, for the embedded non-cooperative
game among the E-miners, we show they can reach a Nash
equilibrium, where the computing resource allocation of each
E-miner can ensure its maximal individual profit. Finally,
we propose two iteration algorithms to find the Stackelberg
equilibrium point.
A. THE EXISTENCE OF THE EQUILIBRIUM POINT
WITH FLEXIBLE NUMBER OF TASKS
In the two-stage Stackelberg game, the equilibrium can be
defined as follows:
Definition 2 (Equilibrium of the Stackelberg Game): Let
p∗ be the optimal price of one sub-task dispatched by the
CSN, and x∗ be the computing resource profile allocation
of the E-miners. Then, the point (p∗, x∗) is the Stackelberg
equilibrium point if it satisfies:
S(p∗, x∗) ≥ S(p, x∗), (15)
and
UE
i (p
∗, xi∗, x−i∗) ≥ UE
i (p
∗, xi, x−i∗), (16)
where x−i∗ is the optimal computing resource allocation of
all the E-miners except mi.
Before proving the existence of the equilibrium point,
we firstly introduce a well-known theory. For the integrity of
this paper, we will provide the theory as well as a brief proof
in the following lemma.
Lemma 1: An equilibrium point exists for every concave
n-player game.
Proof: The strategy of the ith player is represented by
the vector xi which should be selected from a convex, closed,
and bounded set R in Euclidean space. Let Pi denote the
the projection of R on the Euclidean space, S ⊇ R denote
a convex, closed, and bounded product set, which given by
S = P1 × P2 × . . . × Pn. The results to follow make
use of the function ρ (x, y) defined for (x, y) ∈ R × R by
ρ (x, y) ≡
∑
i=1
ϕi (x1, . . . , yi, . . . , xn), where ϕi (xi) denotes
the payoff function for the ith player which is continuous and
concave in xi.
Consider the point-to-set mapping x ∈ R → 0x ⊂ R,
given by
0x =
{
y
∣∣∣∣ρ (x, y) = max
z∈R
ρ (x, z)
}
. (17)
where 0 is an upper semicontinuous mapping that maps each
point of the convex, compact set R into a closed convex subset
of R. Then according to the Kakutani fixed point theorem,
there exits a point xo ∈ R such that xo ∈ 0xo, or
ρ
(
xo, xo
)
= max
z∈R
ρ (x, z) . (18)
The fixed point xo is an equilibrium point satisfying at
this point, no player can increase his profit by changing his
strategy.
The existence point for the concave n-person game is
proved.
Based on Definition 2 and Lemma 1, we prove the exis-
tence of the equilibrium point in the Stackelberg game in
Theorem 1 and Theorem 2, as follows.
Theorem 1 (Equilibrium Existence of the Embedded Non–
Cooperative Game With Flexible Number of Tasks): A Nash
equilibrium exists in the non-cooperative game among the
E-miners’ computing resource allocation at a given sub-task
price.
Proof: As described before, the allocation ratio strategy
space of each E-miner mi is [0, 1], which is a bounded closed
set in Euclidean space. Simultaneously, the utility function
is continuous in its strategy space. According to Lemma 1,
there always exists a Nash equilibrium point for a concave n-
player game. Therefore, to prove the existence of the Nash
equilibrium point, we only need to prove that the utility
function is a concave function.
VOLUME 8, 2020 134805
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
We take the second-order derivative of the utility function
with respect to xi to prove the concavity, as follows:
∂UE
i (p, xi, x−i)
∂xi
=
(R+ rti)e−λεtiCE
i
(∑
j6=i
CE
j xj +
∑
k∈{1,...q}
CT
k
)
( ∑
j∈{1,...,n}
CE
j xj +
∑
k∈{1,··· ,q}
CT
k
)2
−
pλCE
i
α
− η1λCE
i + η2λC
E
i . (19)
∂2UE
i (p, xi, x−i)
∂xi2
= −
2(R+ rti)e−λεti
(
CE
i
)2 (∑
j6=i
CE
j xj +
∑
k∈{1,...q}
CT
k
)
( ∑
j∈{1,...,n}
CE
j xj +
∑
k∈{1,··· ,q}
CT
k
)3
< 0. (20)
Obviously, the utility function Ui(p, xi, x−i) is strictly con-
cave. The Nash equilibrium of the non-cooperative game
exits.
By using the first-order derivative condition of the E-miner
mi’s utility function
∂UE
i (p,xi,x−i)
∂xi
= 0, we have
(R+ rti)e−λεtiCE
i
(∑
j6=i
CE
j xj +
∑
k∈{1,...q}
CT
k
)
( ∑
j∈{1,...,n}
CE
j xj +
∑
k∈{1,··· ,q}
CT
k
)2
= η1λCE
i − η2λC
E
i +
pλCE
i
α
. (21)
Summing up (21) for all the E-miners, we have
Ctm =
∑
j∈{1,...,n}
CE
j xj +
∑
k∈{1,··· ,q}
CT
k
=
∑
j∈{1,...,n}
(
R+ rtj
)
e−λεtj
×
(n− 1)+
√√√√(n− 1)2 +
4
∑
k∈{1,··· ,q}
CTk nλ(
p
α
+η1−η2)∑
j∈{1,...,n}
(R+rtj)e
−λεtj
2nλ
(
η1 − η2 +
p
α
) .
(22)
whereCtm denotes the total CPU resource allocated to mining
in all CPU resource. Substituting (22) into (21), the optimal
response of the E-miner mi to the computing resource alloca-
tion strategy can be expressed as
D =
Ctm −
λ(η1−η2+
p
α )
(R+rti)e−λεti
Ctm2
CE
i
. (23)
Considering the constraints of computing resource alloca-
tion ratios, for the best response of E-miner mi, we have
x∗i =

0 D < 0
D 0 ≤ D ≤ 1
1 D > 1.
(24)
Theorem 2 (Equilibrium Existence of the Stackelberg
Game With Flexible Number of Tasks): A Stackelberg equi-
librium exists in the Stackelberg game between the CSN and
the E-miners.
Proof: Based on the best responses of all the E-miners,
the CSN can correspondingly optimize its utility defined
in (12). Substituting (24) into (12), the utility function of the
CSN can be expressed as
S(p, x) = (c− p)
∑
i∈{1,...,n}
λCE
i (1− xi)
α
=
λ(c− p)
α
Call −
Ctm − ∑
k∈{1,...q}
CT
k
 , (25)
where Call denotes the total CPU resource of the E-miners in
the blockchain network.
Then the first derivative of the utility S(p, x) is:
∂S(p, x)
∂p
= −
λ
α
Call − Ctm + ∑
k∈{1,...q}
CT
k

−
λ (c− p)
α
∂Ctm
∂p
, (26)
and the second derivative of the utility S(p, x) is:
∂2S(p, x)
∂p2
=
2λ
α
∂Ctm
∂p
−
λ (c− p)
α
∂2Ctm
∂p2
. (27)
The first and second derivatives of Ctm are as follows:
∂Ctm
∂p
=
∑
k∈{1,...q}
CT
k
αAB
, (28)
∂2Ctm
∂p2
= −
2
( ∑
k∈{1,...q}
CT
k
)2
nλ
α2(R+ rti)e−λεtiAB3
−
2
∑
k∈{1,...q}
CT
k
α2A2B
+
(R+ rti)e−λεti (n− 1+ B)
nλα2A3
, (29)
where
A = η1 − η2 +
p
α
, (30)
B =
√√√√
(n− 1)2 +
4
∑
k∈{1,...q}
CT
k nλ
(
η1 − η2 +
p
α
)
(R+ rti)e−λεti
. (31)
Practically, the value of the mining revenue (R+ rti)e−λεti
is generally much greater than the value of
∑
k∈{1,...q} C
T
k .
Then, the equation (31) can be transformed as
B ≈ n− 1. (32)
134806 VOLUME 8, 2020
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
Therefore, (27) can be expressed as:
∂2S(p, x)
∂p2
=
2
∑
k∈{1,...q}
CT
k λ
( c
α
+ η1 − η2
)
α2
( p
α
+ η1 − η2
)2
(n− 1)
+
2
( ∑
k∈{1,...q}
CT
k
)2
λ2n (c− p)
α3(R+ rti)e−λεti
( p
α
+ η1 − η2
)
(n− 1)3
−
2 (n− 1)
( c
α
+ η1 − η2
)
nα2
( p
α
+ η1 − η2
)3 . (33)
In the pure environment with only E-miners, there is∑
k∈{1,...q} C
T
k = 0. We assume that the computing resource
consumption in block mining is no less than that of the
external tasks, that is η1 ≥ η2. Obviously,
∂2S(p,x)
∂p2
< 0. The
utility function of the CSN is strictly concave, and the profit
maximization can be assured.
When
∑
k∈{1,...q} C
T
k > 0, in order to ensure that there is a
unique price p that maximizes the utility of the CSN, the sec-
ond derivative (33) of the CSN’s utility must be constantly
less than 0. In practice, the price p given by the CSN should
satisfy 0 < p < c. Consequently, there is α(η1−η2)2 < c, and
0 <
∑
k∈{1,...q}
Ck <
3α (n− 1) (R+ rti)e−λεti
2λ
√( c
3α + η1 − η2
) ( c
α
+ η1 − η2
) . (34)
Therefore, ∂
2S(p,x)
∂p2
< 0 can be guaranteed.
As aforementioned, for any price strategy of the CSN,
the E-miners’ computing resource allocation strategy always
has a Nash equilibrium point. Thus we can always find the
best price strategy and the allocation strategy of the E-miners
corresponding to the price strategy to maximize the benefit of
each participant. That is to say, the Stackelberg game always
has an equilibrium point.
Consequently, Theorem 2 is proved.
B. THE EXISTENCE OF THE EQUILIBRIUM POINT WITH
SPECIFIED NUMBER OF TASKS
Theorem 3 (Equilibrium Existence of the Embedded
Non-Cooperative Game With Specified Number of Tasks):
When the number of the computing tasks is specified, a Nash
equilibrium exists in the non-cooperative game among the
E-miners’ computing resource allocation at a given sub-task
price.
Proof: The amount of the computing resource of the
T-miners is a constant. Therefore, the resource allocation of
one E-miner is only determined by the strategy of the CSN
and other E-miners. This is consistent with the scenario that
the number of the computing tasks is flexible. That is to say,
the existence of the Equilibrium point with specified number
of computing tasks is similar with the scenario with flexible
number of computing tasks.
Based on Theorem 1, in the specified computing tasks sce-
nario, the Equilibrium point also exists in the non-cooperative
game among the E-miners.
Theorem 4 (Equilibrium Existence of the Stackelberg
Game With Specified Tasks): A Stackelberg equilibrium
exists in the Stackelberg game between the CSN and the
E-miners with specified number of computing tasks.
Proof: Based on the best responses of all the E-miners,
the CSN can correspondingly optimize its utility defined
in (12). Since the E-miners cannot know the relationship
between the resource allocation strategy and the specified
number of the computing tasks when allocating the com-
puting resource, the optimal solution for each round is still
related to the price p provided by the CSN, as shown in (24).
Substituting (24) into (12), in order to meet the specified
number of the computing tasks and find the optimal price,
the Lagrange multiplier is used:
L(p, x) = S(p, x)− η(p, x)
= S(p, x)− η
 ∑
i∈{1,...,n}
λCE
i (1− xi)
α
− T
, (35)
where η > 0 is a Lagrange multiplier.
Then the first derivative of the Lagrange function
L(p, x) is:
∂L(p, x)
∂p
=−
λCall
α
+
(n−1)(η1−η2+
c+η
α
)
∑
i∈{1,2,··· ,n}
(R+rti)e−λεti
nα(η1 − η2 +
p
α
)2
,
(36)
and the second derivative of the utility S(p, x) is:
∂2L(p, x)
∂p2
= −
2(n−1)(η1−η2 +
c+η
α
)
∑
i∈{1,2,··· ,n}
(R+ rti)e−λεti
nα2(η1−η2 +
p
α
)3
. (37)
Since η1 > η2 as described above, there is ∂2S(p,x)
∂p2
< 0.
The utility function of the CSN is strictly concave, and the
profit maximization can be achieved.
C. FINDING THE EQUILIBRIUM POINT WITH
FLEXIBLE NUMBER OF TASKS
Since the existence of the equilibrium is proved, the key con-
cern left in the game is to find the equilibrium point. However,
the privacy and anonymity of the blockchain network make
the participants of the game unable to obtain complete infor-
mation of each other. Therefore, in this paper we adopt a
distributed iterative algorithm to obtain the equilibrium point
of the Stackelberg game.
Suppose p(t) is the price strategy that the CSN broadcasts
to each E-miner at time t . Then, each E-miner needs to adjust
VOLUME 8, 2020 134807
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
its allocation strategy of the computing power according to
the price p(t) to maximize its utility function. Assume that the
changing rate of the E-miners’ allocation ratio is proportional
to the gradient of their utility function, we have:
dxi
dτ
=
∂UE
i (p, xi, x−i)
∂xi
, (38)
where τ represents the tiny time slot between time t and t+1.
Since the utility function has been proved to be a concave
function, the iterative algorithm can reach the Nash equilib-
rium point when it converges.
Between current time t and the next time t + 1, the itera-
tive equation of the E-miner’s computing resource allocation
strategy can be expressed as:
xi(τ + 1) = xi(τ )+ v
dxi
dτ
, (39)
where v indicates the step size of the adjustment, and v > 0.
After the E-miners reach the Nash equilibrium, the CSN
adjusts its price according to the total number of the sub-
tasks that all the E-miners willing to take, and the chang-
ing rate of the price is expressed by the marginal utility of
microeconomics.
The price iteration equation for the CSN is:
p(t + 1) = p(t)+ w
(
∂S(p(t), x(t))
∂p(t)
)
, (40)
wherew represents the step size of the CSN to adjust the price
strategy and w > 0.
Then we use a small price change δ to calculate the impact
on the CSN’s utility and calculating its marginal utility as
follows:
∂S(p(t), x(t))
∂p(t)
≈
S(. . . , p(t)+ δ, . . .)−S(. . . , p(t)−δ, . . .)
2δ
.
(41)
For the entire blockchain network, the result of the iteration
is that the CSN obtains the optimal price strategy, and all
the E-miners have their own optimal computing resource
allocation strategy. Since both the CSN and the E-miners
reach the equilibrium point, the two-stage Stackelberg game
obtains the Stackelberg equilibrium.
As illustrated in Algorithm 3, a distributed iteration algo-
rithm is adopted to find the Stackelberg equilibrium point.
All participants will adjust their strategies as shown in
the algorithm. According to Theorem 1 and Theorem 2,
at the Stackelberg equilibrium point, both the CSN and the
E-miners can have their utilities optimized.
D. FINDING THE EQUILIBRIUM POINT WITH
SPECIFIED NUMBER OF TASKS
When the number of computing tasks transferred to the
blockchain ecosystem are specified, since the CSN can obtain
corresponding rewards only after completing the task alloca-
tion, we propose an algorithm that combines the allocation of
the tasks and the E-miners’ computing resource, so as to find
the equilibrium for both the CSN and the E-miners.
Algorithm 3 Distributed Iteration Algorithm With Flexible
Number of Computing Tasks
Require: Initialize the iteration time t = 0, τ = 0, set initial
price of sub-task p(0) = p0;
E-Miners use all computing resource for mining in the
initial state.
A small precision threshold δ;
The step size for adjusting the ratio: v;
The step size for adjusting the price: ω;
A small price change: σ ;
Ensure: The allocation strategy set X = (x1, x2, . . . , xn) and
the optimal price p.
repeat
The CSN broadcasts its price p(t);
3: for i = 1 : n do
repeat
dxi
dτ =
∂Ui
∂xi
;
6: τ = τ + 1;
xi(τ + 1) = xi(τ )+ v
dxi
dτ ;
until
∣∣UE
i (τ + 1)− UE
i (τ )
∣∣ ≤ δ;
9: end for
Go to the next round, t = t + 1.
∂S(p(t),x(t))
∂p(t) ≈
G(...,p(t)+σ,...)−G(...,p(t)−σ,...)
2δ ;
12: p(t + 1) = p(t)+ w( ∂S(p(t),x(t))
∂p(t) );
until S(p(t + 1),X (t + 1))− S(p(t),X (t)) < δ
return Price p and each E-miner’s allocation profile.
First, we have proven the concavity of the E-miner’s utility
function when the number of computing tasks is specified,
the iteration equation of the E-miner’s computing resource
allocation strategy can also refer to (38) and (39).
After the E-miners reach the equilibrium, the CSN will
adjust its price according to the numbers of both the specified
computing tasks and the E-miners willing to take. As shown
in Algorithm 4, the CSN and the E-miners will adopt a dis-
tributed algorithm to find the equilibrium point to maximize
their respective benefits.
VI. PERFORMANCE EVALUATION
In this section, we evaluate the effect of our proposed schemes
by extensive simulations, in aspects of the CPU resource
allocation in the E-miners, the utility of the E-miners, and the
utility of the CSN, respectively. We will firstly introduce the
simulation environment, and then demonstrate the simulation
results and analyses in detail.
A. SIMULATION ENVIRONMENT
The computing tasks with different sizes are injected from the
external ecosystem into the blockchain ecosystem. The CSN
will divide these tasks into identical sub-tasks with uniform
workload α, and dispatch them to the E-miners according
to our proposed architecture and schemes. According to the
number of unit CPU resource, the E-miners can be divided
into 4 types, namely Type I, II, III and IV E-miner, with
134808 VOLUME 8, 2020
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
Algorithm 4 Distributed Iteration Algorithm With Specified
Number of Computing Tasks
Require: Initialize iteration time t = 0, τ = 0, set initial
price of sub-task p(0) = p0;
E-Miners use all computing resource for mining in the
initial state.
A small precision threshold δ;
The step size for adjusting the ratio: v;
The step size for adjusting the price: ω;
The number of computing tasks: T ;
Ensure: The allocation strategy set X = (x1, x2, . . . , xn) and
the optimal price p.
repeat
The CSN broadcasts its price p(t);
for i = 1 : n do
4: repeat
dxi
dτ =
∂Ui
∂xi
;
τ = τ + 1;
xi(τ + 1) = xi(τ )+ v
dxi
dτ ;
8: until |Ui(τ + 1)− Ui(τ )| ≤ δ;
end for
Go to the next round, t = t + 1.
if L(t) < T then
12: p (t + 1) = p(t)+ ω.
end if
if L(t) > T then
p (t + 1) = p(t)− ω.
16: end if
until L(p(t + 1),X (t + 1))− L(p(t),X (t)) < δ.
return price p and each E-miner’s allocation profile.
100, 200, 300 and 400 units of CPU resource respectively.
Similarly, there are four types of T-miners, namely Type I,
II, III and IV T-miner, with 100, 200, 300 and 400 units of
CPU resource respectively. For simplicity and without loss
of generality, in the simulation we set the numbers of Type I,
II, III and IV E-miners to be equal to each other, and so are
that of the T-miners. Both the E-miners and the T-miners will
package the same number ti of transactions into one block.
We set ti = 100000 (i ∈ N, i ≤ n). The detailed settings of
the simulation parameters are summarized in Table 1.
The simulations are conducted in 5 scenarios. Scenario 1 is
conducted in a pure T-miners environment, without external
computing tasks considered. This scenario is a traditional
blockchain system, and used for comparison with the rest
4 scenarios. In scenario 2, we simulate the performance of
our proposed schemes when the number of external tasks is
flexible, and only E-miners exist. The rest three scenarios,
i.e., scenario 3, 4 and 5, are conducted for specified number
of external computing tasks. In scenario 3, there are only
the E-miners in the blockchain. While in scenario 4 and 5,
the hybrid environment with both E-miners and T-miners are
considered. The numbers of the E-miners and the T-miners in
scenario 4 are both set to 200, while in scenario 5, they are
both set to 100.
TABLE 1. Simulation parameters.
Note that in all the following figures, the term profit of one
entity is used to denote the net income of it. That is to say,
the utility equals to its revenue minus the cost.
B. PERFORMANCE IN BLOCKCHAIN ECOSYSTEM WITH
ONLY E-MINERS UNDER FLEXIBLE NUMBER
OF EXTERNAL TASKS
In this subsection, we consider the comparisons of scenario 2
against the traditional scenario 1. That is to say, the per-
formances of our proposed architecture and schemes are
evaluated in blockchain ecosystem with only E-miners under
flexible number of external tasks.
1) THE CPU RESOURCE ALLOCATION BETWEEN BLOCK
MINING AND SERVICE PROVIDING
Figure 4 shows the relationship between the CPU resource
allocation of the E-miners and the computing reward c of each
sub-task. Specifically, in order to show both the full trend and
the detailed changes in the CPU resource allocation, we pro-
vide a larger span of the reward c from 0 to 20 in Fig. 4(a),
as well as a smaller span of c from 2 to 4 in Fig. 4(b).
As shown in Fig. 4(a), when the reward c gradually
increases, the E-miners will allocate less CPU resource to
block mining. This is because larger reward c can inspire the
CSN to pay higher price to the E-miners for their computing
services, and consequently stimulate the E-miners to allocate
more CPU resource in computing service providing. In addi-
tion, when the computing reward c continuously becomes
larger, the increasing speed of the CPU resource allocated
to external service providing tends to be increasingly slower.
Therefore, the CPU resource left for block mining tends to
be decreased very slowly even c is incredibly large. That
is to say, our proposed game can guarantee the E-miners to
keep essential CPU resource in block mining and ensure the
decentralization of the blockchain ecosystem.
In Fig. 4(b), when c = 2, the different types of E-miners
will allocate a major part of CPU resource in block mining.
VOLUME 8, 2020 134809
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
FIGURE 4. The computing reward c versus the CPU resource allocation of
the E-miners (with 200 E-miners).
As c increases, the E-miners will gradually change their
allocation strategies and tend to provide more services for
external tasks. The E-miners with more CPU resource, such
as type IV E-miners, have greater advantages in mining cal-
culations. Even if they allocate more CPU resource in service
providing than those with less CPU resource, they can still
guarantee their revenue from block mining. Therefore, as to
the ratio of CPU resource allocated to block mining, the
E-miners with more CPU resource is lower than those with
less CPU resource.
2) THE UTILITY OF THE E-MINERS
Figure 5 shows the relationship between the E-miner’s utility
and the CSN’s computing reward c. Similarly, we provide
two sub-figures, namely Fig. 5(a) and Fig. 5(b), to show the
changing in a full view and a detailed view respectively.
As shown in Fig. 5(a), in the initial state, when the com-
puting reward c is very small, the E-miner’s utility is not
FIGURE 5. The computing reward c versus the utility distribution of the
E-miner (with 200 E-miners).
significantly improved compared to that of the T-miners with
the same amount CPU resource in scenario 1. When the
value of c increases, the utility of each type of E-miner starts
to increase. At the point c = 20, each E-miner’s income
has improved significantly compared to that of each type of
T-miner in scenario 1.
In addition, Fig. 5(b) shows the details in the computing
reward range 2 ≤ c ≤ 4. It can be seen that when c = 2,
the E-miners perform under our proposed mechanism have
only a small utility increase compared to that of the T-miners
with the same amount CPU resource in scenario 1. When
c increases, the benefits of the E-miners increase more and
more, showing the effectiveness of our proposed mechanism.
Figure 6 and 7 show the utility distribution between ser-
vice providing and block mining of each kind of E-miners.
The E-miners with more CPU resource have a clear ten-
dency that the mining profit is decreasing while the service
profit is increasing considerably, and vice versa. This is
134810 VOLUME 8, 2020
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
FIGURE 6. The computing reward c versus the utility of the E-miners (with
200 E-miners, and a larger range of reward c from 0 to 20).
FIGURE 7. The computing reward c versus the utility of the E-miners
(with 200 E-miners, and a smaller range of reward c from 2 to 4).
consistent with the tendency of CPU resource allocation
shown in Fig. 4(a) and Fig. 4(b). Just like the above figures,
we also provide two kinds of scales to show a full view as
well as a detailed view in Fig. 6 and Fig. 7 respectively.
3) THE UTILITY OF THE CSN
Figure 8 shows the relationship between the CSN’s utility and
the CSN’s computing reward c with different number of the
E-miners. A full view and a detailed view are also provided
with Fig. 8(a) and Fig. 8(b) respectively.
As shown in Fig. 8(a), when c is relatively small, almost
no E-miners allocate CPU resource to provide computing
service, resulting in that no task in external ecosystem has
been completed by the E-miners in the blockchain ecosystem,
so the utility of the CSN is 0. With the gradual increase
FIGURE 8. The computing reward c versus the utility of the CSN.
of c, the utility of the CSN is significantly improved, and
the growth rate is getting faster and faster. It can be observed
that as the number of the E-miners in the blockchain system
increases, the utility of the CSN also increases substantially.
This is because when the number of the E-miners increases,
each E-miner will face larger competition in block mining,
and the probability of receiving a mining reward will become
much lower than ever. The E-miners are then inspired to
devote more CPU resource into service providing, and the
utility of the CSN is simultaneously improved.
Figure 8(b) shows the details in the computing reward
range 2 ≤ c ≤ 4. When c is close to 2, a blockchain system
with enough E-miners (e.g., 200 in this figure) can bring util-
ity to the CSN. In a blockchain system with a small number
of E-miners, the profit of devoting CPU resource into block
mining is still higher than that into service providing. Then,
with the increase of c, the profit of devoting CPU resource
VOLUME 8, 2020 134811
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
FIGURE 9. The utility of the CSN when the number of E-miners changes.
into service providing continuously rises, and the E-miners in
small blockchain network can participate in service providing
to pursue higher integrated utility. In Fig. 9, the tendency is
shown distinctly that the utility of the CSN increases with the
number of the E-miners, under different computing reward c.
C. PERFORMANCE IN BLOCKCHAIN ECOSYSTEM WITH
ONLY E-MINERS UNDER SPECIFIED NUMBER
OF EXTERNAL TASKS
In this subsection, the performances of our proposed
architecture and schemes are evaluated in blockchain ecosys-
tem with only E-miners under specified number of exter-
nal tasks, or scenario 3. We compare the performance in
scenario 3 and the traditional scenario 1.
1) THE CPU RESOURCE ALLOCATION BETWEEN BLOCK
MINING AND SERVICE PROVIDING
Figure 10 shows the CPU resource allocation ratio of each
type of E-miner based on different number of computing
tasks T . Specifically, in order to show the whole trend,
Fig. 10(a) provides a full view with the number T changing
from 0 to 5× 105. While in Fig. 10(b), we conduct a smaller
onewith the number of tasks changing from 2×105 to 4×105,
so as to show the detailed changes in this segment.
As shown in Fig. 10(a), when the number of tasks T grad-
ually increases, the E-miners will allocate less CPU resource
to block mining. This is because the CSN can only receive
benefits if all its tasks have been successfully assigned. With
the increase in the number of tasks, the CSN has to increase
the price of one sub-task so as to optimize its own bene-
fits, inspiring the E-miners to devote more CPU resource to
provide services for computing tasks. When the number of
computing tasks increases significantly, such as T = 5×105,
the CSN will continuously increase the task price p to ensure
its own interests. As a result, the E-miners no longer partici-
pate in block mining.
FIGURE 10. The number of computing tasks T versus the CPU resource
allocation of the E-miners (with 200 E-miners).
In Fig. 10(b), when T = 2 × 105, the different types of
E-miners will allocate more than 40 percent of their CPU
resource to mining. As T increases, the E-miners will grad-
ually change their allocation strategies and tend to provide
more services for external tasks. The E-miners with more
CPU resource, such as type IV E-miners, prefer to provide
more computing services. This is because the CPU resource
of type IV E-miner is more abundant than that of the type I
E-miner. Even if it allocates a large amount of CPU resource
to external tasks, the part left for the block mining is enough
to guarantee its mining benefits.
2) THE UTILITY OF THE E-MINERS
Figure 11 shows the relationship between the E-miner’s util-
ity and the number of the CSN computing tasks T . Similarly,
we provide two sub-figures, namely Fig. 11(a) and Fig. 11(b),
to show the changing in a full view and a detailed view
respectively.
134812 VOLUME 8, 2020
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
FIGURE 11. The number of computing tasks T versus the utility
distribution of the E-miner (with E-200 miners).
As shown in Fig. 11(a), when T = 5 × 105, compared
with 0 ≤ T ≤ 4 × 105, the benefits of each E-miner are
greatly improved. Combinedwith Fig. 10(a), we can infer that
at T = 5×105, in order to encourage the E-miners to provide
more computing services, the CSN gives a considerably high
price p. This is reasonable in theory and consistent with
Theorem 4.Whereas, it is an extreme case and generally does
exist in practice.
Figure 11(b) shows the details when the number of tasks
satisfies 2 × 105 ≤ T ≤ 4 × 105. It can be seen that when
T = 2 × 105, the E-miner performs under our proposed
mechanism have only a small utility increase compared to
the T-miners with the same amount of CPU resource. When
T increases, the benefits of the E-miners increase more and
more, showing the effectiveness of our proposed mechanism.
3) THE UTILITY OF THE CSN
Figure 12 shows the relationship between the CSN’s utility
and the number of the computing tasks T with different
number of the E-miners. A full view and a detailed view
are also provided in Fig. 12(a), Fig. 12(b) and Fig. 12(c)
respectively.
As shown in Fig. 12(a), when T = 5 × 105, the number
of the E-miners is 200. Compared with the CPU resource
required for these tasks, the CPU resource of the E-miners are
limited. In order to ensure that the tasks are fully allocated,
the CSN needs to give a sufficiently high price p, which is
even higher than its fixed profit c for each sub-task, resulting
in a negative benefit. This is a theoretic result consistent with
Theorem 4 in the extremely environment, and generally does
not exist in practice.
The precise trends are shown in Fig. 12(b) and Fig. 12(c).
At the beginning point of T = 0, all the E-miners’ CPU
resource is used for mining. As T gradually increases,
the benefits of the CSN become greater and greater. At this
time, the E-miners take out more CPU resource for task
calculation. However, with the increase of T , the growth rate
of the CSN’s utility gradually slows down. This is because the
E-miners are faced with the dual choices of block mining and
service providing when maximizing their own benefits. The
CSN can only attract E-miners to allocate CPU resource for
computing services by giving them a sufficiently high price.
This will lead to a slower growth rate or even a decrease in
the benefit of the CSN. Moreover, we can conclude from the
figures that the point of the corresponding number of the tasks
where the CSN’s benefit starts to decrease becomes larger
as the number of E-miners increases. This is because with
the increase in the number of the E-miners, the ability of the
entire blockchain ecosystem to provide computing services is
stronger. Therefore, for the same number of tasks, the CSN
needs to pay a lower price.
D. PERFORMANCE IN BLOCKCHAIN ECOSYSTEM WITH
BOTH E-MINERS AND T-MINERS UNDER SPECIFIED
NUMBER OF EXTERNAL TASKS
In the previous subsection, the simulation results show that
when the number of tasks is large enough, the E-miners will
not allocate computing resource to block mining. Obviously,
this model damages the security of the blockchain network.
In practice, a hybrid environment with both E-miners and
T-miners widely exists, which can ensure the security of the
blockchain. In scenario 4 and 5, we evaluate our proposed
architecture and schemes in such hybrid environment, and
compare them with the traditional case in scenario 1.
1) THE CPU RESOURCE ALLOCATION BETWEEN BLOCK
MINING AND SERVICE PROVIDING
Figure 13 shows the CPU resource allocation ratio of each
type of E-miner based on different number of computing tasks
T in hybrid blockchain ecosystem. Specifically, we provide
two scenarios, in Fig. 13(a) provides a larger network in
which the number of E-miners and T-miners are both 200with
the number of sub-tasks T changing from 0 to 5×105. While
in Fig. 13(b), we conduct a smaller one in which the number
VOLUME 8, 2020 134813
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
FIGURE 12. The number of computing tasks T versus the utility of the E-miners.
of E-miners and T-miners are both 100 with the number of
tasks changing from 0 to 2.5× 105.
As shown in Fig. 13(a), since the number of the E-miners is
also 200, the number of tasks that the blockchain ecosystem
can calculate is the same as the number of tasks in the
previous subsection. However, compared with the trend of
Fig. 10(a) in the previous subsection, as the number of tasks
increases, the proportion of E-miners allocated to mining
decreases faster. This is because there are T-miners in the
hybrid scenario, and these T-miners do not participate in task
calculations, which makes the E-miners face greater com-
petition in mining. In order to optimize their own benefits,
the E-miners prefer to allocate more CPU resource to provide
computing services.
Similar trend exists in Fig. 13(b), which is conducted in
the scenario 5 where both the number of the miners and the
external tasks are reduced by half. This further verifies that
our proposed architecture and schemes can adapt to different
scales of the blockchain ecosystem and external computing
tasks.
2) THE UTILITY OF THE E-MINERS
Figure 14 shows the relationship between the E-miner’s util-
ity and the number of CSN’s computing tasks T . We pro-
vide two blockchain ecosystems of different scale, which are
shown in Fig. 14(a) and Fig. 14(b) respectively.
As shown in Fig. 14(a), although the range of T is the same
as in Fig. 11(a), the utility of each type of E-miner is reduced
due to the introduction of the 200 T-miners. This is because
the existence of these T-miners will further intensify the
competition in block mining. For a single E-miner, the prob-
ability of successful mining is greatly reduced. Therefore,
the E-miners prefer to devote more CPU resource to provide
computing services. This also slows down the rise of the price
p when the number of tasks is large and the overall CPU
resource is scarce. The E-miners’ utility will not increase dra-
matically. For example, the trend in Fig. 14(a) is substantially
gentler than that in Fig. 11(a).
As shown in Fig. 14(b), the relationship between the
E-miner’s utility and the number of tasks T is consistent
FIGURE 13. The number of computing tasks T versus the utility
distribution of the E-miner in the hybrid blockchain ecosystem.
with Fig. 11(b). When T increases, the E-miner’s utility
increases faster, which proves that our proposed mechanism
is also effective in the hybrid scenario.
134814 VOLUME 8, 2020
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
FIGURE 14. The number of computing tasks T versus the utility
distribution of the E-miner.
3) THE UTILITY OF THE CSN
Figure 15 shows the relationship between the CSN’s util-
ity and the number of computing tasks T . The blockchain
ecosystem of a larger scale and a smaller scale are evaluated
respectively in Fig. 15(a) and Fig. 15(b).
As shown in Fig. 15(a), although the range of T is the same
as in Fig. 12(a) (with 200 E-miners), considering the impact
of the existence of the T-miners on mining, the E-miners
will provide more computing services to maximize their
own benefits. Therefore, for the same number of tasks and
E-miners, the price p that CSN needs to pay to the E-miners
in hybrid scenarios is lower than that in the scenario with only
E-miners. This enlarges the benefit of the CSN.
Figure 15(b) evaluates the performance in a small scale
blockchain ecosystem. Since the number of the E-miners is
only half of the large scale blockchain ecosystem, the com-
puting tasks that can be taken on are also half, and the
ratio of the number of E-miners to T-miners is also 1:1.
FIGURE 15. The number of computing tasks T versus the utility
distribution of the miner.
It can be observed that the trends of the curves in Fig. 15(a)
and Fig.15(b) are the same. This shows that our proposed
mechanism is effective under the blockchain ecosystem of
different scales. Moreover, we can find that the CSN’s utility
in Fig. 15(b) is lower than half of that in Fig. 15(a). This is
because in a smaller blockchain ecosystem, E-miners face
less competition in mining, the CSN needs to pay a higher
price to attract E-miners to provide computing services. This
also leads to a reduction in the utility of the CSN.
VII. CONCLUSION
In this paper, we proposed an architecture to release the
redundant computing power of the miners in blockchain
to provide computing services for extra profits, and conse-
quently connected the blockchain ecosystem and the exter-
nal ecosystems. Based on the architecture, we presented
VOLUME 8, 2020 134815
Y. Wei et al.: Block Mining or Service Providing: A Profit Optimizing Game of the PoW-Based Miners
a two-stage Stackelberg game, which can model the inter-
action between the computation service pricing and each
miner’s computing power allocation. Then the games are
elaborated for both flexible and specified amount of exter-
nal computing requirement, in pure environment with only
E-miners and hybrid environment with both E-miners and
T-miners, respectively. Two distributed iteration algorithms
are utilized to find the equilibrium point of the Stackelberg
game according to the number of external computing tasks.
At the equilibrium point, the CSN and the miners can both
achieve optimal utilities. We conducted simulations to eval-
uate the effect of our proposed schemes. The simulation
results show that the profits of the miners are considerably
increased compared with the miners in traditional PoW-based
blockchain ecosystems.
REFERENCES
[1] S. Nakamoto. (2008). Bitcoin: A Peer-to-Peer Electronic Cash System.
[Online]. Available: https://bitcoin.org/bitcoin.pdf
[2] W. Wang, D. T. Hoang, P. Hu, Z. Xiong, D. Niyato, P. Wang, Y. Wen, and
D. I. Kim, ‘‘A survey on consensus mechanisms and mining strategy man-
agement in blockchain networks,’’ IEEE Access, vol. 7, pp. 22328–22370,
2019.
[3] S. N. G. Gourisetti, M. Mylrea, and H. Patangia, ‘‘Evaluation and
demonstration of blockchain applicability framework,’’ IEEE Trans. Eng.
Manag., early access, Sep. 2, 2019, doi: 10.1109/TEM.2019.2928280.
[4] Z. Zheng, S. Xie, H. Dai, X. Chen, and H. Wang, ‘‘An overview
of blockchain technology: Architecture, consensus, and future trends,’’
in Proc. IEEE Int. Congr. Big Data (BigData Congress), Jun. 2017,
pp. 557–564.
[5] Coinmarketcap. Accessed: Dec. 12, 2019. [Online]. Available: https://
coinmarketcap.com/currencies/bitcoin/
[6] D. T. Nguyen, L. B. Le, and V. Bhargava, ‘‘Price-based resource allocation
for edge computing: A market equilibrium approach,’’ IEEE Trans. Cloud
Comput., early access, Jun. 6, 2018, doi: 10.1109/TCC.2018.2844379.
[7] L. Zhang, J. Wu, S. Mumtaz, J. Li, H. Gacanin, and J. J. P. C. Rodrigues,
‘‘Edge-to-edge cooperative artificial intelligence in smart cities with on-
demand learning offloading,’’ in Proc. IEEE Global Commun. Conf.
(GLOBECOM), Dec. 2019, pp. 1–6.
[8] A. Biryukov and D. Feher, ‘‘Portrait of a miner in a landscape,’’ in
Proc. IEEE Conf. Comput. Commun. Workshops (INFOCOM WKSHPS),
Apr. 2019, pp. 638–643.
[9] N. Dimitri, ‘‘Bitcoin mining as a contest,’’ Ledger, vol. 2, pp. 31–37,
Sep. 2017.
[10] S. Dhamal, W. Ben-Ameur, T. Chahed, E. Altman, A. Sunny, and
S. Poojary, ‘‘A stochastic game framework for analyzing computational
investment strategies in distributed computing,’’ 2018, arXiv:1809.03143.
[Online]. Available: http://arxiv.org/abs/1809.03143
[11] J. Chiu and T. Koeppl, ‘‘Incentive compatibility on the blockchain,’’ in
Social Design. Berlin, Germany: Springer, 2019, pp. 323–335.
[12] H. Yao, T. Mai, J. Wang, Z. Ji, C. Jiang, and Y. Qian, ‘‘Resource trading
in blockchain-based industrial Internet of Things,’’ IEEE Trans. Ind. Infor-
mat., vol. 15, no. 6, pp. 3602–3609, Jun. 2019.
[13] C. Tang, C. Li, X. Yu, Z. Zheng, and Z. Chen, ‘‘Cooperative mining
in blockchain networks with zero-determinant strategies,’’ IEEE Trans.
Cybern., early access, May 22, 2019, doi: 10.1109/TCYB.2019.2915253.
[14] L. Luu, R. Saha, I. Parameshwaran, P. Saxena, and A. Hobor, ‘‘On power
splitting games in distributed computation: The case of bitcoin pooled
mining,’’ in Proc. IEEE 28th Comput. Secur. Found. Symp., Jul. 2015,
pp. 397–411.
[15] X. Liu,W.Wang, D.Niyato, N. Zhao, and P.Wang, ‘‘Evolutionary game for
mining pool selection in blockchain networks,’’ IEEE Wireless Commun.
Lett., vol. 7, no. 5, pp. 760–763, Oct. 2018.
[16] S. Kim, ‘‘Group bargaining based bitcoin mining scheme using incentive
payment process,’’ Trans. Emerg. Telecommun. Technol., vol. 27, no. 11,
pp. 1486–1495, Nov. 2016.
[17] I. Eyal and E. G. Sirer, ‘‘Majority is not enough: Bitcoin mining
is vulnerable,’’ in Proc. Int. Conf. Financial Cryptogr. Data Secur.
Christ Church, Barbados: Springer, 2014, pp. 436–454.
[18] K. Nayak, S. Kumar, A. Miller, and E. Shi, ‘‘Stubborn mining: Generaliz-
ing selfish mining and combining with an eclipse attack,’’ in Proc. IEEE
Eur. Symp. Secur. Privacy (EuroS&P), Mar. 2016, pp. 305–320.
[19] N. Houy, ‘‘The bitcoin mining game,’’ Ledger, vol. 1, pp. 53–68,
Dec. 2016.
[20] D. Kraft, ‘‘Difficulty control for blockchain-based consensus systems,’’
Peer-Peer Netw. Appl., vol. 9, no. 2, pp. 397–413, Mar. 2016.
YUNKAI WEI (Member, IEEE) received the
B.Eng., M.Eng., and Ph.D. degrees from the
School of Information and Communication Engi-
neering, University of Electronic Science and
Technology of China, Chengdu, China. He was a
Visiting Researcher with the California Institute of
Technology, from 2013 to 2014. He is currently an
Associate Professor with the School of Informa-
tion and Communication Engineering, University
of Electronic Science and Technology of China.
His research interests include network security, wireless communications
and networks, and the Internet of Things.
MINGYUE XIAO is currently pursuing the
master’s degree with the School of Informa-
tion and Communication Engineering, Univer-
sity of Electronic Science and Technology of
China. Her research interests include the domain
of blockchain, especially relating to optimized
resource allocation in blockchain and game theory
in resource management.
NING YANG is currently an Associate Professor
with the School of Information and Communi-
cation Engineering, University of Electronic Sci-
ence and Technology of China, Chengdu, China.
Her research interests include network cyberspace
security, wireless networks, and the Internet of
Things.
SUPENG LENG (Member, IEEE) is currently
a Professor with the School of Information and
Communication Engineering, University of Elec-
tronic Science and Technology of China, Chengdu,
China. He has been a Research Fellow with the
Network Technology Research Center. He has
published over 100 research articles. His research
interests include resources, spectrum, energy,
routing, and networking in broadband wireless
access networks, vehicular networks, the Internet
of Things, next-generation mobile networks, and smart grids. He serves as
the organizing committee chair and a technical program committee member
for many international conferences and a reviewer for over ten international
research journals.
134816 VOLUME 8, 2020
http://dx.doi.org/10.1109/TEM.2019.2928280
http://dx.doi.org/10.1109/TCC.2018.2844379
http://dx.doi.org/10.1109/TCYB.2019.2915253