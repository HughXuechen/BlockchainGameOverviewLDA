A Blockchain based Framework for Secure Data Offloading in Tactile Internet Environment
A Blockchain based Framework for Secure
Data Offloading in Tactile Internet
Environment
Vikas Hassija1, Vinay Chamola2, Vatsal Gupta1, and G. S. S Chalapathi2
1Department of CSE and IT, Jaypee Institute of Information Technology, Noida, India
2Department of Electrical and Electronics Engineering, BITS-Pilani, Pilani Campus, India
Abstract—The rapid increase in the number of
mobile devices across the globe has brought a new
challenge to the forefront, one of mobile traffic man-
agement. The ever-increasing number of mobile de-
vices leads to the generation of a large amount of data
and computationally intensive applications, which
contributes heavily to cellular network congestion. To
solve this issue, we propose a mobile data offloading
scheme based on a distributed ledger technology
(DLT). Existing mobile data offloading schemes based
on DLT employ conventional blockchain to set up a
peer-to-peer (P2P) network of mobile users. Although
these schemes have gained ground in improving the
Quality of Experience (QoE) for end-users, they
lack efficiency and scalability. Furthermore, generic
blockchain does not provide timestamp ordering of
events, which is necessary to ensure the computation
of delay-sensitive tasks. To overcome these challenges,
we propose the use of a directed acyclic graph (DAG)
data structure for mobile data offloading. Finally,
to ensure time and cost optimality, a game-theoretic
approach has been proposed in this paper.
Index Terms—Directed Acyclic Graph, Mobile Of-
floading, Consensus mechanism, Blockchain
I. INTRODUCTION
The exponential increase in the number of mobile
devices and consequently, computation-intensive
mobile applications, such as video streaming and
face recognition, presents a major challenge for
mobile network providers. This is primarily due to
the increase in mobile traffic that these applications
cause while aiming to increase the end user’s QoE.
A recent Cisco report states that there has been an
exponential increase in the number of mobile users
around the globe, and consequently, an unprece-
dented surge in mobile data traffic [1]. A secure
network with ultra-low-latency will, therefore, be
needed to enhance the end user’s QoE. One promis-
ing solution to this problem that has emerged in
recent years is the mobile data offloading strategy,
which enables the use of different network tech-
niques to deliver the requested data [2]. In addition
to reducing the operational costs of the network
provider, mobile data offloading enhances the QoS
delivered to the end-users.
There have been various attempts in the field
of mobile data offloading, including WiFi offload-
ing, Small Cell Networks (SCN), heterogeneous
and opportunistic networks [3]. The SCN approach
involves developing a vast number of small base
stations in heavy mobile traffic areas. The signifi-
cant drawback of this approach is its requirement of
infrastructure expansion and high capital. The WiFi-
based techniques offload the high computation task
to the nearby WiFi access points [4]. However, these
access points are not available everywhere and have
a limited range. The concept of mobile-to-mobile
communication is used in the upcoming heteroge-
neous and opportunistic networks [5]. Gouju gao et
al. in [6] have explored the process of offloading
in such opportunistic networks. Although such net-
works do not require infrastructure expansion, they
lack mechanisms to motivate the users to engage
themselves in the network pro-actively [7], [8].
In this paper, we propose a DLT-based approach
to set up a P2P network of mobile users to securely
offload the high computation task to other nodes
in the network at a low-cost [9]. In recent times, a
few attempts have been made to use a blockchain-
based algorithm for enabling a P2P network of
mobile users [10], [11]. Even though blockchain
is a tamper-proof, distributed, and open data struc-
ture, it lacks scalability and efficiency. Further-
more, blockchain imposes a transaction fee on every
transaction to encourage miners to add blocks in
the chain. Offloading tasks often involve micro-
transactions and adding them to the blockchain is
not a viable option since transaction fees in such
transactions are higher than the actual transaction
value [12], [13]. Also, the prevalent forking and
pruning issues reduce the efficiency of the tra-
ditional blockchain-based frameworks [14]. Over
and above, since most of the offloading activities
978-1-7281-3129-0/20/$31.00 ©2020 IEEE 1836
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:37:21 UTC from IEEE Xplore.  Restrictions apply. 
Cloud as content
provider
Base Station 1
Base Station 2
Base Station 3
High computation 
device
High computation 
device
High computation 
device
Low computation 
device
Low computation 
device
Low computation 
device
Low computation 
device
Low computation 
device
Low computation 
device
Low computation 
device
Low computation 
device
Low computation 
deviceLow computation 
device
Fig. 1. Mobile Data Offloading Scenario
are delay-sensitive, requests that are closer to the
deadline need to be processed first. To overcome
these challenges, in this paper, we propose a DAG-
based P2P network of mobile users.
II. PROPOSED MODEL FOR MOBILE DATA
OFFLOADING
For recording and processing a large number of
frequent microtransactions that take place during
mobile data offloading, DAG-based Hashgraph is a
feasible option. Hashgraph provides features such
as consensus timestamps, high speed, and Asyn-
chronous Byzantine Fault Tolerance (ABFT) secu-
rity mechanism [15]. In this work, a Hashgraph-
based distributed network of mobile users is created
for distributed mobile data offloading. The low
computation mobile devices can submit a request
to DAG in the form of a transaction. Users of high
computation mobile devices can then submit the
cost and time for the offloading task. Post this, a
suitable price for offloading the task is determined
using an iterative auctioning process.
A. Digital Identity
Every user willing to enter the network is as-
signed a global account id, a public key, and
a private key. Global account id is required to
uniquely identify the user [16], [17]. The two keys
are used to securely perform all the exchanges that
occur among the nodes in the proposed network.
To initiate a transaction, a user has to digitally
stamp the message or information via his/her unique
private key. Other nodes in the network can validate
this information by signing the message using their
public key and further sending it to other users via
the gossip protocol [18].
B. Hashgraph Consensus Algorithm
In any distributed ledger technology (DLT), there
is a need to establish trust between the unknown
nodes and, consequently, to achieve reliability in the
network. To ensure this, consensus algorithms are
put in place. The Hashgraph consensus algorithm
makes use of the gossip protocol to reach a final
agreement from all the network nodes on the order
1837
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:37:21 UTC from IEEE Xplore.  Restrictions apply. 
of the offloading requests. The gossip protocol
requires much less bandwidth and time as compared
to the traditional method of actually sending and
validating the messages at all the nodes. As the
hashgraph consensus algorithm does not send votes
or details over the network, it is faster and much
more efficient. Hashgraph uses the ABFT security
mechanism, which ensures that no grouping among
the nodes can influence the final output of the
algorithm. Further details about the hashgraph DLT
are provided in [15].
III. PROPOSED NETWORK MODEL
Consider a distributed network comprising of
multiple mobile devices. Let the set of mobile
devices be denoted by X =
{
X1,X2, ....,Xm
}
.
These devices may either choose to transfer the high
computation work to other mobile devices or may
volunteer to perform the work of mobile devices
with low computation capability. The following
section evaluates the time and cost involved with
mobile data offloading.
Offloading Data Items
Data offloading aims to reduce the computation
cost of computationally intensive tasks by offload-
ing them to a high computation device while taking
into account the ordering of events in the hashgraph
and the deadline constraint of all the tasks. Let I
=
{
I1, I2, ...., In
}
represents the count of items
or tasks that need to be offloaded by each low
computation device. Let Z =
{
Z1,Z2, ....,Zn
}
represent the computation capability required to
compute these data items.
All the n data items present in any mobile device,
Xi ∈ X , need to be computed before the deadline
time denoted by δ =
{
δ1, δ2, ...., δn
}
. Mobile
devices can either offload the data item through
wireless networks such as WiFi or directly through
a cellular network. Let σwifi and σcellular denote
the costs associated with data offloading through a
WiFi and a cellular network, respectively. Let θ =
(T ,Λ, ε) be the offloading opportunity to offload the
computation tasks. Here, T is the minimum time
required by an offloading opportunity to offload the
task, Λ is the probability of the availability of a
WiFi network to perform offloading service, and ε
is the total capacity of the ability of an opportunity
to perform the offloading. Let Θ =
{
θ1, θ2, ...., θp
}
denote the set of all the offloading opportunities
where any θk ∈ Θ can offload a data item only if
the following constraints are satisfied:
T � δ,Z � ε (1)
Algorithm 1 Task Offloading Algorithm
Input: Offloading Solution, Γ =
(
Γ1,Γ2, ....,Γt
)
Output: The Cost C associated with offloading n
tasks
1: for t = 1 : t do
2: for n = 1 : n do
3: for p = 1 : p do
4: if δn ≥ Tp then
5: Γt ← 1
6: end if
7: if Γt = 1 then
8: Call Procedure 1
9: if Zn ≤ εp then
10: Call Procedure 2
11: end if
12: else if Γt > Γt−1 then
13: Γt−1 ← 1
14: εp ← εp + Zn−1
15: if Zp ≤ εp then
16: εp ← εp −Zn
17: Γt ← 0
18: end if
19: end if
20: end for
21: end for
22: end for
Offloading solution vector Γ stores a particular
offloading opportunity θp for p ∈ (1, p) and its
associated data item In. Let t be the total number
of offloading solutions.
The probability and welfare function of offload-
ing a data item through an offloading opportunity is
represented by Un(Γ) and Wt(Γ) respectively and
mathematically modeled as:
Un(Γ) = 1− χ (2)
Wt(Γ) =
n∑
n=1
Zn ∗ Un(Γ) (3)
where
χ =
∏
p:(In,θp)∈Γ
(1− Λp) (4)
Procedure 1
1: procedure CALCULATE UTILITY AND WEL-
FARE
2: χ←∏
p:(In,θp)∈Γ (1− Λp)
3: Un(Γ)← 1− χ
4: Wt(Γ)←
∑n
n=1Zn ∗ Un
5: end procedure
1838
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:37:21 UTC from IEEE Xplore.  Restrictions apply. 
The objective function of the proposed model
is to offload the data items in a way that eventu-
ally increases the value of welfare function. The
mathematical formulation of the offloading cost via
cellular network is given as follows.
Φcellular
t (Γ) = σcellular
n∑
n=1
Zn(1− Un(Γ)) (5)
Similarly, the cost of offloading a data item through
the WiFi network Φwifi
t can be formulated as:
Φwifi
t (Γ) = σwifi
n∑
n=1
Zn ∗ Un(Γ) (6)
Based on Eqn. 5 and 6, Let C denote the final cost
for offloading a data item, and is represented as
follows.
C = Φcellular
t (Γ)− Φwifi
t (Γ) (7)
Procedure 2
1: procedure CALCULATE OFFLOADING COST
2: γ ←∑n
n=1Zn(1− Un(Γ))
3: Φcellular
t (Γ)← σcellular ∗ γ
4: Φwifi
t (Γ)← σwifi ∗Wt(Γ)
5: C ← Φcellular
t (Γ)− Φwifi
t (Γ)
6: εp ← εp −Zn
7: Γt ← 0
8: end procedure
IV. GAME THEORY FOR BARGAINING COST AND
TIME
In this section, we establish a game-theoretical
model for the low computation devices to negotiate
the costs associated with offloading their computa-
tion requirements to the high computation devices.
Consider any low computation device Xm that
wishes to offload its computation work to some
other device in X with high computation capa-
bility. Let αi =
{
αi
1, α
i
2, ...., α
i
j
}
and βi ={
βi
1, β
i
2, ...., β
i
j
}
be the vectors storing the costs
and time respectively given by j high computation
devices to satisfy the requests of low computation
devices respectively. The price offered by Xm for
computing its n tasks is given by C, as shown in
Eqn. 7. To ensure a fair price for both the parties,
the value of C must be close to the median value
in the cost vector α. In a scenario that the price
offered by low computation devices, i.e., the devices
intending to offload their tasks, differs vastly from
the price sought by the high computation devices,
the value of C is incremented iteratively:
C = C + ε (8)
until the value of C is approximately equal to ζi:,
i.e.,
ζmedian − C ≈ 0 (9)
where ε is a small constant and ζmedian is the
median cost value in the vector αi.
To compare the bids of all the j devices, we
formulate a separate value Ω that considers both
the parameters, namely, cost and time. If Ct and Cc
represent the weight of time and cost parameters
assigned by the devices that need to get their task
offloaded, then Ω can be calculated as,
Ωi
k = (Cc ∗ xi
k) + (Ct ∗ yik) (10)
where xi
k and yik are the normalized numerical
values of cost and time offered by the kth high
computation device during the ith iteration. The
values of xi
k and yik for all the j devices can be
computed using the following equations:
xi
k =
αi
k −min(αi)
max(αi)−min(αi)
(κ− ι) + ι (11)
yik =
βi
k −min(βi)
max(βi)−min(βi)
(μ− ν) + ν (12)
In eqn. 11, κ and ι denote the maximum and
minimum permitted cost values. Similarly, in eqn.
12, μ and ν indicate the maximum and minimum
permitted values of time.
Vector Ω =
{
Ω1,Ω2, ....,Ωj
}
stores the objective
values for each high computation device calculated
using eqn. 10. For each offloading task, the device
which has the minimum value of Ω is announced
as the winner. Vector Δ stores the win counts of all
the j devices based on which, the final winner is
declared. In a case where Ω vector has multiple
minimum values, all the devices with this value
are declared as winners. To succeed in obtaining
the offloading tasks, other high computation mobile
devices lower their expected cost and time values
over z number of iterations as long as their cost
and time values do not fall below their minimum
threshold values. The minimum threshold values are
those values of cost and time below which the high
computation devices cannot perform offloading.
The last iteration of the bargaining model occurs
when the difference in cost and time values of all
j high computation devices is negligible, i.e.,
(Ωi
k − Ωi−1
k ) ≤ �, ∀k ∈ (1, j) (13)
where � is a very small constant. The final win
count of all the high computation devices deter-
mines which high computation device is ultimately
allotted to a low computation mobile device Xm.
1839
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:37:21 UTC from IEEE Xplore.  Restrictions apply. 
60
70
80
90
100
110
1 2 3 4 5 6 7 8
C
o
s
t 
o
f 
C
o
m
p
u
ta
ti
o
n
 (
C
e
n
ts
)
Number of Iterations
High Computation Device 1
High Computation Device 2
High Computation Device 3
High Computation Device 4
High Computation Device 5
(a) Variation of Cost
20
25
30
35
40
1 2 3 4 5 6 7 8
T
im
e
 o
f 
C
o
m
p
u
ta
ti
o
n
 (
s
e
c
o
n
d
s
)
Number of Iterations
High Computation Device 1
High Computation Device 2
High Computation Device 3
High Computation Device 4
High Computation Device 5
(b) Variation of Time
40
50
60
70
80
90
1 2 3 4 5 6 7 8
V
a
lu
e
 o
f 
�
Number of Iterations
High Computation Device 1
High Computation Device 2
High Computation Device 3
High Computation Device 4
High Computation Device 5
(c) Variation of Objective Values ω
0
2
4
6
8
1 2 3 4 5 6 7 8
W
in
 C
o
u
n
t
Number of Iterations
High Computation Device 1
High Computation Device 2
High Computation Device 3
High Computation Device 4
High Computation Device 5
3
1
5
7
(d) Cumulative Win Count
Fig. 2. Game Theoretic Bargaining Model over Several Iterations
V. NUMERICAL ANALYSIS
This section analyses the simulations performed
to demonstrate the efficiency and performance of
our proposed mobile data offloading algorithm.
A. Simulation Settings
Consider a low computation device that wants
to compute a task requiring multiple operations
for which the data requirement is in the range of
[120, 200] kilobytes (KBs). Local execution of the
task would be more costly and require more time
as compared to the scenario in which the task is
offloaded to a high computation mobile device. The
offloading cost over the cellular network is assumed
to be 3 dollars while the cost associated with task
offloading over the WiFi network is assumed to
be 70 cents. We take the value of j as 5, i.e.,
5 high computation devices act as participants in
our game-theoretical model. We assume that the
cost given by the low computation device is in
the range of [60, 110] cents, while the specified
time is considered to be in the range of [20, 40]
seconds. The values of cost parameter (Cc) and
time parameter (Ct) are taken to be 0.6 and 0.4
respectively.
B. Performance Evaluation
The variation in the time and cost values offered
by the high computation devices to win the task
offloaded by a low computation device is shown in
fig. 2(a) and 2(b). For each iteration, the device with
the least objective value (Ω) is announced as the
winner. From the graphs 2(a), 2(b) and 2(c), it can
be noticed that the all high computation devices that
do not win a particular iteration update their cost
and time values in subsequent iterations to win the
task. Fig. 2(d) shows the cumulative win count of all
the high computation devices after each iteration. It
can be seen from the graph that once the stopping
condition is achieved, high computation device 1
has the highest win count and therefore wins the
task.
VI. CONCLUSION
This paper proposes a secure data offloading
strategy based on the hashgraph consensus mech-
anism that takes into consideration the deadline
1840
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:37:21 UTC from IEEE Xplore.  Restrictions apply. 
constraint. A peer-to-peer network of mobile users
is created in which the users may either choose
to offload their tasks to other high computation
devices or may choose to perform the computation
task on behalf of other low computation devices.
A game-theoretic bargaining model has also been
implemented to ensure task computation in a cost-
optimal and time-efficient manner. The results ob-
tained confirm the effectiveness of the proposed
offloading model.
VII. ACKNOWLEDGEMENT
This work is supported by DST-SERB (Science
and Engineering Research Board (SERB)) funding
under Project Grant File no. ECR/2018/001479.
REFERENCES
[1] Cisco, “Cisco Visual Networking Index:
Global mobile data traffic forecast update,”
https://www.cisco.com/, online; accessed 18
Feb 2019.
[2] Y. Li, G. Shi, W. Yin, L. Liu, and
Z. Han, “A distributed admm approach with
decomposition-coordination for mobile data
offloading,” IEEE Transactions on Vehicular
Technology, vol. 67, no. 3, pp. 2514–2530,
2017.
[3] H. Zhou, H. Wang, X. Li, and V. C. Leung,
“A survey on mobile data offloading technolo-
gies,” IEEE Access, vol. 6, pp. 5101–5111,
2018.
[4] D. Liu, L. Khoukhi, and A. Hafid, “Prediction-
based mobile data offloading in mobile cloud
computing,” IEEE Transactions on Wireless
Communications, vol. 17, no. 7, pp. 4660–
4673, 2018.
[5] S. Yu, R. Langar, X. Fu, L. Wang, and Z. Han,
“Computation offloading with data caching en-
hancement for mobile edge computing,” IEEE
Transactions on Vehicular Technology, vol. 67,
no. 11, pp. 11 098–11 112, 2018.
[6] G. Gao, M. Xiao, J. Wu, K. Han, L. Huang,
and Z. Zhao, “Opportunistic mobile data
offloading with deadline constraints,” IEEE
Transactions on Parallel and Distributed Sys-
tems, vol. 28, no. 12, pp. 3584–3599, 2017.
[7] H. Shah-Mansouri, V. W. Wong, and J. Huang,
“An incentive framework for mobile data
offloading market under price competition,”
IEEE Transactions on Mobile Computing,
vol. 16, no. 11, pp. 2983–2999, 2017.
[8] K. Wang, F. C. Lau, L. Chen, and R. Schober,
“Pricing mobile data offloading: A distributed
market framework,” IEEE Transactions on
Wireless Communications, vol. 15, no. 2, pp.
913–927, 2015.
[9] V. Hassija, V. Chamola, G. Han, J. J. P. C. Ro-
drigues, and M. Guizani, “Dagiov: A frame-
work for vehicle to vehicle communication
using directed acyclic graph and game theory,”
IEEE Transactions on Vehicular Technology,
vol. 69, no. 4, pp. 4182–4191, April 2020.
[10] W. Tang, X. Zhao, W. Rafique, and W. Dou,
“A blockchain-based offloading approach in
fog computing environment,” in 2018 IEEE
Intl Conf on Parallel. IEEE, 2018, pp. 308–
315.
[11] N. Zhao, H. Wu, and Y. Chen, “Coalition
game-based computation resource allocation
for wireless blockchain networks,” IEEE In-
ternet of Things Journal, pp. 1–1, Mar 2019.
[12] V. Hassija, V. Chamola, V. Saxena, D. Jain,
P. Goyal, and B. Sikdar, “A survey on iot se-
curity: Application areas, security threats, and
solution architectures,” IEEE Access, vol. 7,
pp. 82 721–82 743, July 2019.
[13] V. Hassija, G. Bansal, V. Chamola, V. Sax-
ena, and B. Sikdar, “Blockcom: A blockchain
based commerce model for smart commu-
nities using auction mechanism,” in 2019
IEEE International Conference on Commu-
nications (ICC) Workshops, Shanghai, China,
May 2019, pp. 1–6.
[14] V. Hassija, V. Saxena, and V. Chamola,
“Scheduling drone charging for multi-drone
network based on consensus time-stamp and
game theory,” Computer Communications, vol.
149, pp. 51–61, 2020.
[15] M. H. Leemon Baird and P. Madsen, “Hedera:
A Public Hashgraph Network and Governing
Council,” https://www.hedera.com/whitepaper,
online; accessed 09 Feburary 2019.
[16] M. A. Rahman, M. S. Hossain, G. Loukas,
E. Hassanain, S. S. Rahman, M. F. Alhamid,
and M. Guizani, “Blockchain-based mobile
edge computing framework for secure therapy
applications,” IEEE Access, vol. 6, pp. 72 469–
72 478, 2018.
[17] M. Dabbagh, B. Hamdaoui, M. Guizani, and
A. Rayes, “Exploiting task elasticity and price
heterogeneity for maximizing cloud comput-
ing profits,” IEEE Transactions on Emerging
Topics in Computing, vol. 6, no. 1, pp. 85–96,
Jan 2018.
[18] Z. Yang, W. Lang, and Y. Tan, “Fair micropay-
ment system based on hash chains,” Tsinghua
Science and Technology, vol. 10, no. 3, pp.
328–333, June 2005.
1841
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:37:21 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.7
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize false
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Required"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice