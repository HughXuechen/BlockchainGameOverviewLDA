Coalition Game and Blockchain-Based Optimal Data Pricing Scheme for Ride Sharing Beyond 5G
IEEE SYSTEMS JOURNAL, VOL. 16, NO. 4, DECEMBER 2022 6321
Coalition Game and Blockchain-Based Optimal Data
Pricing Scheme for Ride Sharing Beyond 5G
Riya Kakkar , Rajesh Gupta , Student Member, IEEE, Sudeep Tanwar , Senior Member, IEEE,
and Joel J. P. C. Rodrigues , Fellow, IEEE
Abstract—This article proposes a blockchain and coalition game
theory-based secure and reliable optimal data pricing scheme for
ride sharing. It mainly focuses on securing data sharing between
vehicle owners and customers. It employs beyond fifth-generation
(5G) as a communication network that facilitates vehicle owners
and customers with low latency, high throughput, and high avail-
ability for communication. We also formulate a coalition game-
theory approach to optimize the payoff of vehicle owners and
customers by forming coalitions. The performance of the proposed
system beyond 5G is estimated by comparing it with 5G and LTE-A
networks. The various performance parameters considered are
network latency, throughput, and profit for vehicle owners. The
performance results show that the proposed system is efficient and
beneficial for both vehicle owners and customers in terms of low
latency, high throughput, and profit.
Index Terms—Beyond fifth-generation (5G), blockchain,
coalition game, data pricing, ride sharing.
I. INTRODUCTION
NOWADAYS, people are more fascinated with ride sharing
schemes rather than traveling via personal cars or vehicles.
It offers various advantages such as cost-efficiency, minimizing
traffic congestion, and reducing energy consumption [1]. It also
facilitates customers and vehicle owners with the flexibility of
booking/accepting rides as per the destination with minimum
cost. It also offers a social environment for both customers and
vehicle owners to interact with new people and acquire some
knowledge [2], [3]. The aforementioned benefits attract users for
ride sharing. Many researchers/organizations have given their
Manuscript received 1 July 2021; revised 28 August 2021 and 31 October
2021; accepted 6 November 2021. Date of publication 1 December 2021;
date of current version 9 December 2022. This work was supported in part
by Visvesvaraya Ph.D. Scheme for Electronics and IT by the Department of
Electronics and Information Technology (DeiTY), Ministry of Communications
and Information Technology, Government of India, in part under the unique
awardee number MEITY-PHD-2828, in part by FCT/MCTES through National
Funds and when applicable cofunded EU funds under Grant UIDB/50008/2020,
and in part by the Brazilian National Council for Scientific and Technological
Development - CNPq under Grant 313036/2020-9. (Corresponding author:
Sudeep Tanwar.)
Riya Kakkar is with the Department of Computer Science and Engineering,
Institute of Technology, Nirma University, Ahmedabad 382481, India (e-mail:
kakkarriya29@gmail.com).
Rajesh Gupta and Sudeep Tanwar are with the Department of Computer
Science and Engineering, Institute of Technology, Nirma University, Ahmed-
abad 382481, India (e-mail: 18ftvphde31@nirmauni.ac.in; sudeep.tanwar@
nirmauni.ac.in).
Joel J. P. C. Rodrigues is with the Senac Faculty of Ceará, Fortaleza-
CE, BrazilInstituto de Telecomunicaçóes, 6201-001 Covilhã, Portugal (e-mail:
joeljr@ieee.org).
Digital Object Identifier 10.1109/JSYST.2021.3126620
ride sharing schemes with data processing at the centralized
location, i.e., cloud and fog, which are highly vulnerable to
security and privacy issues such as data modification, spoofing,
and denial of service, [4] and also possess high latency. These
issues can mislead both vehicle owners and customers during
their ride booking.
It is necessary to ensure the security, privacy, reliability,
and timeliness of the ride sharing data, so that the users can
be treated fairly without any manipulation [5]. To meet the
aforementioned issues, a decentralized, immutable, and trusted
platform, i.e., blockchain, is required to secure the data [6].
Researchers proposed blockchain-based systems to overcome
the security, privacy, and trust issues of centralized systems [1].
For example, Xu et al. [4] formulated a Stackelberg game for
optimal pricing in car sharing with consortium blockchain to se-
cure data transactions. Then, Wang and Zhang [7] also proposed
a consortium blockchain-based secure ride sharing framework
to ensure security, privacy, and transparency of the system.
Later, Amar and Basir [8] presented a bargaining-based sys-
tem to solve the territory allotment issues between users using
cooperative game theory. Then, Yuan et al. [9] conducted a case
study on the blockchain-based ride sharing system to compare
it with the centralized systems. They discussed a blockchain-
based model in transportation systems to deal with the various
security issues in the system. Many of the security solutions
given by the researchers can encounter various issues like la-
tency, cost-efficiency, scalability, and profitability. For example,
Baza et al. [1] have discussed the blockchain-based secure ride
sharing scheme for fair payment among the users using the
pay-as-you-drive approach. But, there is no focus to optimize
the price for drivers and riders for ride sharing. These issues
can be resolved using blockchain with a coalition game-theory
approach over the beyond 5G network. Motivated from this, we
introduced a coalition game-theory profit maximization scheme
for both vehicle owners and customers with security and privacy.
The game players can form coalitions to maximize their payoff
values. To tackle the latency and reliability issues, a beyond
5G communication network is preferred that ensures ultralow
latency (< 1 ms) and ultrahigh reliability (99.99999%) [10],
[11].
The aim of the proposed system is to ensure security, privacy,
ultralow latency, and ultrahigh reliability of the ride sharing
system. We analyzed from the literature and there is less focus
on the maximization of payoff, i.e., profit for the game players.
Also, the traditional blockchain-based approaches have much
focused on the security, privacy, and trust of the ride sharing
system, but the transaction cost-efficiency was ignored. The
1937-9234 © 2021 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:04:01 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-9591-0132
https://orcid.org/0000-0003-3298-4238
https://orcid.org/0000-0002-1776-4651
https://orcid.org/0000-0001-8657-3800
mailto:kakkarriya29@gmail.com
mailto:18ftvphde31@nirmauni.ac.in
mailto:sudeep.tanwar@nirmauni.ac.in
mailto:sudeep.tanwar@nirmauni.ac.in
mailto:joeljr@ieee.org
6322 IEEE SYSTEMS JOURNAL, VOL. 16, NO. 4, DECEMBER 2022
cost of storing data into the blockchain, i.e., Ethereum, is too
high, restricting organizations from adopting the system. To
overcome this issue, we have incorporated an interplanetary file
system (IPFS) to keep records, which are immutable, distributed,
and free of cost storage [12]. The performance of the proposed
system is evaluated using the parameters profit, throughput,
and network latency. Many research works have not considered
the latency, scalability, reliability, and optimized price issues in
the blockchain-based system. Implementing a coalition game-
theory approach with IPFS over the 5G network highlights the
importance of the proposed system and its performance, such as
scalability, profitability, reliability, and security due to its low
latency, high throughput, and high availability performance.
A. Motivation
The motivation of this article can be defined as follows.
1) The importance of implementing a blockchain-based de-
centralized framework with a beyond 5G network makes
the ride sharing system highly secure and reliable. Im-
plementing IPFS with 5G enhances the system’s scala-
bility and availability due to their low-latency and high-
scalability features.
2) Some of the existing research works mainly focused on
securing data in ride sharing. Baza et al. [1] only focusing
on providing fair payment to users but have not consid-
ered the optimal data pricing with a blockchain-based
framework. Therefore, this raises the requirement of a
blockchain-based optimal data pricing scheme using a
coalition game-theory approach for ride sharing.
B. Research Contributions
The research contribution of this article are as follows.
1) We propose a blockchain and IPFS-based secure and cost-
efficient data pricing scheme for ride sharing underlying
beyond 5G network.
2) We implement a coalition game-theory approach for op-
timal pricing between the vehicle owners and customers.
3) Lastly, we estimate the performance of the proposed sys-
tem considering the factors such as latency, throughput,
and profit for vehicle owners.
C. Organization
The rest of this article is organized as follows. Section II
presents the related works. Section III shows the system model
and problem formulation. Section IV shows the coalition game
formulation for optimal pricing. Section V presents the coalition
formation solution. Section VI presents the results and discus-
sion. Finally, Section VII concludes this article.
II. RELATED WORKS
This section highlights the existing literature works on the
blockchain-based scheme for ride sharing. Some of the research
works are as follows. Kim et al. [13] discussed a decentral-
ized blockchain-based framework to authenticate and secure
the user’s identification and privacy by performing the security
analysis in the ride sharing system. Then, Bathen et al. [14]
proposed an authenticated self-driving car sharing system, i.e.,
Fig. 1. System model.
RiderS. They introduced a proof-of-matching algorithm to verify
the data transactions and to remunerate the vehicles participating
in the blockchain. Pal and Ruj [15] proposed an Ethereum-based
system to ensure security and transparency in ride sharing sys-
tems. Then, Zhou et al. [16] presented a blockchain-based secure
framework for car sharing by executing the smart contracts in
Internet-of-Vehicles base stations. The performance analysis has
been performed to provide security when users are commu-
nicating in the system. Later, Aïvodji et al. [17] discussed a
secure solution to implement dynamic ride sharing systems to
resolve the matching problem. The experimental results have
been performed to secure the user’s privacy.
Manjunath et al. [18] proposed a cooperative-based strategy
with an ant colony optimization algorithm for a car sharing
system. They experimented on the ride dataset of chicago to
measure the success rate of car sharing. Then, Hariz et al. [19]
presented a decentralized multitransportation system to enable
secure communication among users using a Stackelberg game-
theoretic approach. All these research works were focused on the
system’s security, and they have were concerned about optimal
pricing. Qadir et al. [20] proposed a carpooling framework to
recommend a vehicle to the passengers with the highest aggre-
gated score. They did not consider the security of the system.
These issues are the reason to propose a blockchain-based secure
system with a coalition game-theory approach.
III. SYSTEM MODEL AND PROBLEM FORMULATION
A. System Model
Fig. 1 presents a blockchain-based optimal data pricing
scheme for ride sharing. It comprises of a set of vehicle owners
(Sυ), the set of customers (SCu), and the set of certificate au-
thorities (SCA). The communication network, i.e., beyond 5G, is
used to make the system efficient and reliable. An IPFS protocol
is used for data storage to make the system cost-efficient. The
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:04:01 UTC from IEEE Xplore.  Restrictions apply. 
KAKKAR et al.: COALITION GAME AND BLOCKCHAIN-BASED OPTIMAL DATA PRICING SCHEME FOR RIDE SHARING BEYOND 5G 6323
proposed scheme aims to enhance the security and privacy of
data in the ride sharing system. We have introduced the idea of
a certificate authority (CA) to authenticate the vehicle owners
and customers. CA receives a request from Sυ and SCu for the
credentials (χ) if they want to become an authentic member of
blockchain. A smart contract verifies the authenticity of vehicle
owners and customers by viewing the validity of the χ issued
by a CA. Only after verification they are allowed us to add
their data transactions to the block of a blockchain. A coalition
game-theory approach has been formulated to optimize the data
pricing between the vehicle owners and customers. They can
form multiple coalitions to increase the payoff by cooperating
with each other. The employed beyond 5G network and its
features ensure that transactions between vehicle owners and
customers are efficient (ultralow latency) and ultra-high reliable
for ride sharing.
It will lead to a reduced communication overhead, while
adding data to the blockchain by implementing IPFS with the
beyond 5G network with latency, i.e., Network_latency < 1 ms,
high throughput, and high availability, i.e., Avail < 99.99999%
with a huge number of transactions between vehicle owners
and customers as we have to store only hash of data instead
of whole block. Low latency and high throughput will also
improve the convergence time so that data can be added to
the blockchain efficiently without any delay. A blockchain and
IPFS-based framework is implemented to ensure the security and
reliability of the ride sharing system. Fig. 1 shows the working
of a three-layered proposed system in detail. It comprises of the
following three layers:
1) data acquisition layer;
2) transaction layer; and
3) blockchain layer.
These three layers are described as follows.
1) Data acquisition layer: This layer consists of the set of
entities vehicle owners and customers associated with their hash
keys, which can interact with the help of their wallets. Customers
can book the rides according to their destination and their willing
price. Similarly, vehicle owners will provide information about
the rides with their allotted prices in the system. Now, vehicle
owners and customers request to store their data about the
rides in the IPFS. For that purpose, CA in the transaction layer
authenticates the vehicle owners and customers. If they are valid
users, then χ will be issued to them by the CA, ensuring the
authentication and privacy of the system. After authentication,
vehicle owners and customers have their χ to store data in IPFS,
for which they have to go through the transaction layer to fulfil
certain conditions.
2) Transaction layer: It is the communication layer of the
proposed system through which all the data transmission about
the rides can be performed securely over the beyond 5G network.
The beyond 5G communication network ensures the system’s
reliability due to its low-latency and high-reliability features.
After authentication by CA, this layer involves executing a smart
contract to verify the issued χ of vehicle owners and customers.
If the χ are valid, then their data can be securely stored in the
IPFS over the beyond 5G communication network; otherwise,
the request to store data will be denied.
3) Blockchain layer: The proposed system considers the
Ethereum blockchain to ensure security and transparency in the
Algorithm 1: Algorithm to Add Data in Blockchain.
1: Input: πr, πj , IPFS(hash,key), χ, Ψbk
2: Output: Data added to the blockchain network
3: procedure Adddata__blockchainπr , πj , CA, υm, Cun
4: if S ∈ Sυm
then
5: for i = 1, 2, . . . , o do
6: IPFS(hash,key) ← DataReq(υm)
7: υm
χ←− CA
8: Execute smart contract
9: if χ == valid then
10: υm
πj←− IPFS(hash,key)
11: blockchain← DataReq _ to_add(υm)
12: if πj ∈ Ψbk then
13: Data added successfully
14: else
15: Access denied
16: end if
17: else
18: Invalid Credential
19: end if
20: end for
21: else if S ∈ SCun
then
22: for j = 1, 2, . . . , s do
23: IPFS(hash,key) ← DataReq(Cun)
24: Cun
χ←− CA
25: Execute smart contract
26: if χ == valid then
27: Cun
πr←− IPFS(hash,key)
28: blockchain← DataReq _ to_add(Cun)
29: if πr ∈ Ψbk then
30: Data added successfully
31: else
32: Access denied
33: end if
34: else
35: Invalid Credential
36: end if
37: end for
38: end if
39: end procedure
ride sharing system. It ensures secure data transactions between
vehicle owners and customers. The blockchain layer mainly
involves storing the data in IPFS securely, and then any users
can request to add that data to the blockchain. For that, they
have to fulfil certain conditions. Algorithm 1 shows the detailed
procedure of storing the data in IPFS and then adding it to the
blockchain. Smart contract verifies the authenticity of vehicle
owners and customers to store their data in IPFS, which is free
of cost and reliable data storage. If they contain the valid χ, then
data can be stored in IPFS.
Now, vehicle owners and customers can request to add their
data to the blockchain. After storing the data in IPFS, IPFS
provides hash keys associated with them. These hash keys should
be in accordance with the hash of blockchain, and then they
can add their data to the blockchain successfully, otherwise,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:04:01 UTC from IEEE Xplore.  Restrictions apply. 
6324 IEEE SYSTEMS JOURNAL, VOL. 16, NO. 4, DECEMBER 2022
data access will be denied. After that, proof-of-work consensus
protocol is used with blockchain to validate the data of vehicle
owners and customers that need to be added to the blockchain.
In the blockchain network, all the authorities, i.e., members,
should agree on the same decision regarding validating data that
is honest and acceptable. Then, miners generate the valid data
block by solving the complex puzzle and get the reward for the
same [21]. So, all the data transmission about the rides can be
performed securely over the beyond 5G communication network
using an IPFS data storage.
B. Problem Formulation
The proposed system consists of set S ∈ {Sυ, SCu, SCA} in
which Sυ is a set of o vehicle owners {υ1, υ2, .., υo} ∈ υm and
SCu is a set of s customers {Cu1,Cu2, . . .,Cus} ∈ Cun, which
can be associated with the number of a CA {CA1,CA2, ..,CAa}
∈ CAk to request for χ. SCu can trade with any mth υm by
spending amount from wallet. The abovementioned entities can
be represented as follows:
ψCun → ψυm (1)
υm
β−→
f∑
n=1
Cun and Cun
β−→
g∑
m=1
υm (2)
Cun
β−→
f ′∑
k=1
CAk and υm
β−→
g′∑
k=1
CAk (3)
f ≤ s; g ≤ o; f ′ ≥ f ; g′ ≥ g (4)
n, m, k ≥ 0 (5)
where β signifies the relationship between a vehicle owner,
customer, and CA, f and g, respectively, denote the number
of customers and vehicle owners that are associated with each
other, and f ′ and g′ denote the number of CA related by cus-
tomers and vehicle owners, respectively.
CA can issue χ to the Sυ and SCu, if they are the valid users.
Now, Sυ and SCu have their χ to store the transactional data into
the IPFS protocol. A smart contract verify the users authenticity.
If they have valid χ, then they are allowed to store their ride
data in an IPFS protocol. Then, the IPFS will facilitate with
the hash keys associated with the Sυ and SCu, which are πj ∈
{π1, π2, . . .πw} and πr ∈ {π1, π2, . . .πz}. The abovementioned
entities can be represented as follows:
υm
ζ−→
w′∑
j=1
πj and Cun
ζ−→
z′∑
r=1
πr (6)
j > 0, w′ ≤ w, r > 0, z′ ≤ z (7)
where ζ denotes the number of hash keys {w′, z′} associated
with Sυ and SCu.
So, the IPFS protocol has shared the hash keys withSυ andSCu
with which they can request to add their data to the blockchain.
For that purpose, the issued hash keys of Sυ and SCu should
be in accordance with the hash of block header (Ψbk) in the
blockchain. Algorithm 1 shows the detailed procedure to add
data of Sυ and SCu to the blockchain. Smart contract plays a
major role in authenticating the Sυ and SCu. If Sυ and SCu
are authenticated, then they can store their data in the IPFS,
which will give them the hash keys. These hash keys would be
compared with the hash of the blockheader to add their data to
the blockchain. The time complexity of Algorithm 1 will depend
upon the 0 number of vehicle owners and s number of customers
requesting to add their data to the blockchain by comparing their
πj and πr with Ψbk and can be calculated as O(0) and O(s). The
mentioned entities can be represented as follows:
w′∑
j=1
πj
κ−→ Ψbk; j > 0 (8)
z′∑
r=1
πr
κ−→ Ψbk; r > 0 (9)
where κ denotes the hash keys associated withSυ andSCu. Now,
theSυ andSCu have access to add their data to the blockchain, in
which customers can choose to select the ride from the number
of rides made available by the Sυ .
IV. COALITION GAME FORMULATION
A coalition game theory has been introduced to optimize the
data pricing between the Sυ and SCu. It is implemented to form
multiple coalitions among players to avoid any data pricing
conflict and maximize their payoff for ride sharing. We have
considered the case of a transferable utility game in which the
payoff is transferable among the players. These two approaches
can be defined as follows.
Definition 1 (Coalition game): In the proposed system, the
coalition gameGc consists of a pair {N,α}whereN is the num-
ber of players {1, 2, . . . , p′, . . . , N}, which isN = {υm,Cun},
α denotes the real-valued coalition function mapped as α :
2N → R to each coalition Kt ⊆ N [22].
Transferable utility: We have considered the transferable
utility function for which α(Kt) is a value for each coalition
Kt ⊆ N , which can be defined as the transferable utility that
users get as an overall payoff for each coalition. For each
coalition K, the Sυ and SCu get an overall payoff in the form
of a function α(Kt), which should be distributed among the
players according to their participation. In a coalition game Gc
= {N,α}, we have used the concept of the core as a solution to
distribute the overall payoff to the involved users, which can be
interpreted as [22].
Co(N,α) =
{∑
p∈N
ρp = α(N)
∑
p∈K
ρp ≥ α{K} ∀ K ∈ N
}
(10)
where X = {ρ1, ρ2, ..ρp.., ρP } is the payoff distributed among
the players, i.e., Sυ and SCu.
V. COALITION FORMATION SOLUTION
In the proposed system, a coalition game-theory has been
formulated to form coalitions among players υm and Cun,
considering the core solution, to compare the increase in pay-
off of individual players while making coalitions. Sυ and SCu
can make multiple coalitions but SCu have an opportunity to
make more coalitions than Sυ as SCu can select to book the
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:04:01 UTC from IEEE Xplore.  Restrictions apply. 
KAKKAR et al.: COALITION GAME AND BLOCKCHAIN-BASED OPTIMAL DATA PRICING SCHEME FOR RIDE SHARING BEYOND 5G 6325
particular rides, thus increasing the payoff of the Sυ . Now, if
Sυ and SCu want to maximize their payoff for ride sharing,
then they decide on strategies, i.e., S ′υm
and S ′Cun . We define
these strategies in the form of equations in which Sυ can
have number of available rides {γ1, γ2, . . ., γi} ∈ γq associated
with the prices {η1, η2, . . ., ηi} ∈ ηe for the number of routes
{λ1, λ2, . . ., λh} ∈ λb. The strategies {S ′υm
, S ′Cun
} can be rep-
resented as follows:
{ S ′υm
, S ′Cun} =
{
max
i′∑
e=1
h′∑
b=1
(ηe, λb),min
i′∑
e=1
h′∑
b=1
(ηe, λb)
}
(11)
e > 0, b > 0, i′ ≤ i, h′ ≤ h (12)
where i′ denotes the number of prices associated with the rides
and h′ denotes the number of routes for rides.
Equation (11) shows that theSυ want to maximize their payoff
by maximizing the prices for rides and they want rides to take
the long path. Alternatively, the SCu want to pay less price for
its visit to the destination by minimizing the price for rides and
it wants rides to take the shorter path. But, it is not feasible to
satisfy both the conditions for vehicle Sυ and SCu to maximize
their payoff. So, for playersSυ andSCu to be in the coalitions, the
payoffρp(Kt) interpreted using core solution should be less than
the payoff ρp(Kt′), i.e., ρp(Kt) < ρp(Kt′) gained for individual
players by forming the coalitions K ′t. Now, we can consider the
concept of preference order. It means that both the players can
decide to join or leave the coalition based on the preference
order. It can be defined as follows.
Preference order: A preference order >p′ for any player p′ ∈
N can be defined as a complete, reflexive, and transitive binary
relation over the set of all feasible coalitions that player p′ can
possibly form [23].
So any player can decide to join or leave the coalition based on
the preference order. We can consider the case in which players
prefer to be in coalition with Kt′ rather than Kt, i.e., Kt′ >p′
Kt, due to the maximized payoff of players with coalition Kt′ .
Algorithm 2 shows the detailed procedure to calculate payoff
considering the coalition K ′t to optimize the price among Sυ
and SCu. The time complexity of Algorithm 2 will depend upon
the 0 number of vehicle owners and s number of customers to
maximize their ρp(Kt′) by considering the ηe and λb by forming
the K ′t coalitions and can be calculated as O(o) and O(s). The
payoff calculated using the coalition core function is compared
with the payoff of coalition K ′t for the gain of an individual
player. A Nash equilibrium is created for the profit of both
players in which the price for rides and distance of route would
lie between minimum and maximum. The Nash equilibrium for
the players can be represented as follows:
min
i′∑
e=1
ηe <
i′′∑
e=1
η′e < max
i′∑
e=1
ηe (13)
min
h′∑
b=1
λb <
h′′∑
b=1
λ′b < max
h′∑
b=1
λb (14)
ρp(Kt′) =
{
i′′∑
e=1
η′e,
h′′∑
b=1
λ′b
}
(15)
Algorithm 2: Coalition Game for Optimal Pricing.
1: Input: Kt, ηe, λb, α,N
2: Output: ρp(Kt′)
3: Initialization: e=1, b=1
4: procedure Max_payoffN, υm, Cun
5: if N ∈ υm then
6: for i = 1, 2, . . . , o do
7: υm =max
∑i′
e=1
∑h′
b=1(ηe, λb)
8: end for
9: else
10: for j = 1, 2, . . . , s do
11: Cun =min
∑i′
e=1
∑h′
b=1(ηe, λb)
12: end for
13: end if
14: for each {N,Kt} with core solution do
15:
∑
p∈N ρp = α(N)
16:
∑
p∈K ρp ≥ α{K}
17: end for
18: Form a coalition Kt′ to maximize the payoff
19: for each {N,Kt′} do
20: min
∑i′ ηe <
∑i′′ η′e < max
∑i′ ηe
21: min
∑h′
λb <
∑h′′
λ′b < max
∑h′
λb
22: ρp(Kt′) = (
∑i′′ η′e,
∑h′′
λ′b)
23: if ρp(Kt′) ≥ ρp(Kt) then
24: {υm, Cun} gains max. payoff with coalition Kt′
25: end if
26: end for
27: end procedure
where i′ denotes the number of prices for rides, which lie
between minimum and maximum, and h′ denotes the number
of routes for rides, which lie between minimum and maximum.
η′e and λ′b denotes the prices for rides will lie between minimum
price and maximum price and routes for the rides will lie between
short route and long route. Algorithm 2 shows the existence of
Nash equilibrium that maximize the payoff of both the players,
which is defined as follows.
Nash equilibrium: A coalition game consists of multiple coali-
tions, i.e., {K1,K2,K3, . . . ,KN}, which player can decide to
join or leave based on their preference order. There exists a Nash
equilibrium if ρp(Kt′)> ρp(Kt) ∀ p′ ∈N in such a way that no
player can deviate from their strategies to increase their payoff
ρp(Kt′) [24].
Therefore, Kt′ is a coalition with maximum payoff ρp after
which the players cannot deviate from their strategy {S ′υ, S
′
Cu}
to be in the Nash equilibrium. So, existing Nash equilibrium
converges to the point {η′e, λ
′
b} with the maximized payoff of
ρp(Kt′).
VI. EXPERIMENTAL RESULTS
This section presents the performance analysis of the pro-
posed system with the traditional LTE-A and 5G-based systems,
considering the parameters latency, throughput, and profit for the
vehicle owner. The analysis of the proposed system has been
simulated over the Remix-integrated development environment
(IDE) [25]. The smart contracts of the proposed system are
developed, compiled, run, and tested over the Remix IDE using
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:04:01 UTC from IEEE Xplore.  Restrictions apply. 
6326 IEEE SYSTEMS JOURNAL, VOL. 16, NO. 4, DECEMBER 2022
Fig. 2. Performance comparison of the proposed system with the traditional approaches. (a) Profit analysis for vehicle owner. (b) Latency comparison.
(c) Throughput comparison.
solidity source code. The results have been simulated on the
proposed system to optimize the price for vehicle owners and
customers by implementing the coalition game-theory approach
by considering the different scenarios in which vehicle owners
want to maximize the price for rides and take the long route for
their benefits. In another scenario, customers want to minimize
the price for rides and take a short route for their profit. There-
fore, we have considered a Nash equilibrium so that the price
for rides would lie between maximum and minimum and the
distance of route would lie between maximum and minimum for
the profit of both vehicle owners and customers. These scenarios
are simulated using Python 3.2 to derive the maximized payoff
using the coalition core solution. The simulated experimental
results for the proposed system are as follows.
A. Profit for Vehicle Owner
Fig. 2(a) shows the profit for vehicle owners with the increase
in the number of customers using the coalition game-theoretic
approach. Initially, with fewer requests from customers for rides,
the profit is minimum for selected vehicle owners. But, with
the increase in the number of customers, the profit for vehicle
owners will increase linearly. But, after a particular time T=τ ,
their profit would increase exponentially as there will be more
customers willing to book the ride for their travel.
B. Network Latency
Fig. 2(b) presents the comparison of latency of the proposed
system with the increase in the number of transactions for
the ride. The graph depicts the comparison of the proposed
system with the traditional networks such as 5G and LTE-A.
The comparison shows with fewer transactions, and the network
latency would lie at the same level for all networks. But, as the
number of transactions for rides increases, the latency of the
proposed system beyond 5G becomes quite low than 5G and
LTE-A. With beyond 5G, more customers will be booking the
ride efficiently than 5G and LTE-A.
C. Throughput
Fig. 2(c) shows the comparison of throughput of the proposed
system with the increase in the number of data requests for rides.
It can be distinguished from the graph that the throughput of the
Fig. 3. Proposed system test interface on Remix IDE.
proposed system beyond 5G is relatively high than with 5G and
LTE-A. It is due to its low latency leading to the overall high
throughput of the system.
D. Proposed System Implementation Interface
The blockchain-based proposed system has been imple-
mented on Remix IDE [25]. Consecutively, the smart contract
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:04:01 UTC from IEEE Xplore.  Restrictions apply. 
KAKKAR et al.: COALITION GAME AND BLOCKCHAIN-BASED OPTIMAL DATA PRICING SCHEME FOR RIDE SHARING BEYOND 5G 6327
of the proposed system is deployed and run on the Remix
environment to test and validate its functionality. Fig. 3 shows
the implemented test interface of the proposed system on Remix
IDE along with their functions along with their input parameters.
So we have considered various parameters such as profit
for the vehicle owner, latency, and throughput to analyze the
effectiveness of the blockchain-based system using the coalition
game-theory approach. Now, increasing the number of cus-
tomers leads to an exponential increase in the number of rides
booked after a time τ . As in the coalition game-theory approach,
the payoff is directly proportional to the distance and price of
the rides, as shown in (15). This led to the optimized payoff
for a vehicle owner with more number of booking of rides. We
are using a beyond 5G network, enabling customers to book
the rides more reliably and efficiently due to the low latency
and high availability beyond 5G. Also, the throughput of the
proposed system with the beyond 5G network is way better
than traditional networks. This leads to efficient and reliable
communication between vehicle owners and customers with
the increase in the number of rides requests. So the overall
blockchain-based proposed system using the coalition game-
theory approach contributed to the optimized payoff for players
in terms of latency, throughput, and profit for the vehicle owner.
VII. CONCLUSION
In this article, a blockchain-based reliable and secure optimal
data pricing scheme is proposed using an IPFS protocol over
the beyond 5G network. We comprehensively investigated the
traditional systems and got insights into their security, privacy,
latency, reliability, and cost-related issues. We have analyzed
that using a beyond 5G network with an IPFS protocol makes the
system highly efficient with minimum blockchain transaction
cost. We introduced the concept of the coalition game-theory
approach to optimize the data pricing by maximizing the payoff
of vehicle owners and customers. Implementation of smart
contract of the proposed system on Remix IDE validates its
functionality. Lastly, the performance of the proposed system
with the beyond 5G has been estimated in terms of latency,
throughput, and profit for the vehicle owners and compared with
the traditional systems. It shows that the proposed system is
highly secure and efficient.
In the future, the performance of the proposed approach would
be evaluated under a heterogeneous environment considering
real-time parameters. We will explore more about implementing
the energy harvesting technology with the proposed scheme
to show the vehicles’ energy exchange and consumption by
considering the different resources such as fuel, gasoline, or
electricity for real-time communications.
REFERENCES
[1] M. Baza, N. Lasla, M. Mahmoud, G. Srivastava, and M. Abdallah,
“B-Ride: Ride sharing with privacy-preservation, trust and fair payment
atop public blockchain,” IEEE Trans. Netw. Sci. Eng., vol. 8, no. 2,
pp. 1214–1229, Apr.–Jun. 2021.
[2] C. Huang, R. Lu, J. Ni, and X. Shen, “DAPA: A decentralized, accountable,
and privacy-preserving architecture for car sharing services,” IEEE Trans.
Veh. Technol., vol. 69, no. 5, pp. 4869–4882, May 2020.
[3] Y. Wang, J. Gu, S. Wang, and J. Wang, “Understanding consumers’
willingness to use ride-sharing services: The roles of perceived value
and perceived risk,” Transp. Res. Part C: Emerg. Technol., vol. 105,
pp. 504–519, 2019.
[4] C. Xu, K. Zhu, C. Yi, and R. Wang, “Data pricing for blockchain-based car
sharing: A Stackelberg game approach,” in Proc. IEEE Global Commun.
Conf., 2020, pp. 1–5.
[5] M. Li et al., “CrowdBC: A blockchain-based decentralized framework
for crowdsourcing,” IEEE Trans. Parallel Distrib. Syst., vol. 30, no. 6,
pp. 1251–1266, Jun. 2019.
[6] Y. Rahulamathavan, R. C.-W. Phan, M. Rajarajan, S. Misra, and A. Kon-
doz, “Privacy-preserving blockchain based IoT ecosystem using attribute-
based encryption,” in Proc. IEEE Int. Conf. Adv. Netw. Telecommun. Syst.,
2017, pp. 1–6.
[7] D. Wang and X. Zhang, “Secure ride-sharing services based on a consor-
tium blockchain,” IEEE Internet Things J., vol. 8, no. 4, pp. 2976–2991,
Feb. 2021.
[8] H. M. Amar and O. A. Basir, “A game theoretic solution for the territory
sharing problem in social taxi networks,” IEEE Trans. Intell. Transp. Syst.,
vol. 19, no. 7, pp. 2114–2124, Jul. 2018.
[9] Y. Yuan and F.-Y. Wang, “Towards blockchain-based intelligent trans-
portation systems,” in Proc. IEEE 19th Int. Conf. Intell. Transp. Syst.,
2016, pp. 2663–2668.
[10] A. Gupta and R. K. Jha, “A survey of 5G network: Architecture and
emerging technologies,” IEEE Access, vol. 3, pp. 1206–1232, 2015.
[11] D. Reebadiya, T. Rathod, R. Gupta, S. Tanwar, and N. Kumar,
“Blockchain-based secure and intelligent sensing for autonomous vehicles
activity tracking beyond 5G networks,” Peer-to-Peer Netw. Appl., vol. 14
pp. 2757–2774, Feb. 2021.
[12] M. Naz et al., “A secure data sharing platform using blockchain and
interplanetary file system,” Sustainability, vol. 11, no. 24, pp. 1–24, 2019.
[13] M. Kim, J. Lee, K. Park, Y. Park, K. H. Park, and Y. Park, “Design of
secure decentralized car-sharing system using blockchain,” IEEE Access,
vol. 9, pp. 54796–54810, 2021.
[14] L. A. D. Bathen, G. H. Flores, and D. Jadav, “Riders: Towards a privacy-
aware decentralized self-driving ride-sharing ecosystem,” in Proc. IEEE
Int. Conf. Decentralized Appl. Infrastruct., 2020, pp. 32–41.
[15] P. Pal and S. Ruj, “BlockV: A blockchain enabled peer-peer ride sharing
service,” in Proc. IEEE Int. Conf. Blockchain, 2019, pp. 463–468.
[16] Q. Zhou, Z. Yang, K. Zhang, K. Zheng, and J. Liu, “A decentralized car-
sharing control scheme based on smart contract in Internet-of-Vehicles,”
in Proc. IEEE 91st Veh. Technol. Conf., 2020, pp. 1–5.
[17] U. M. Aïvodji, K. Huguenin, M.-J. Huguet, and M.-O. Killijian, “SRide:
A privacy-preserving ridesharing system,” in Proc. 11th ACM Conf. Secur.
Privacy Wireless Mobile Netw., 2018, pp. 40–50.
[18] A. Manjunath, V. Raychoudhury, S. Saha, S. Kar, and A. Kamath,
“CARE-Share: A cooperative and adaptive strategy for distributed
taxi ride sharing,” IEEE Trans. Intell. Transp. Syst., to be published,
doi: 10.1109/TITS.2021.3066439.
[19] M. B. Hariz, D. Said, and H. T. Mouftah, “Decentralised game-theoretic
management for a community-based transportation system,” IET Smart
Cities, vol. 2, no. 4, pp. 181–190, 2020.
[20] H. Qadir, O. Khalid, M. U. Khan, A. U. R. Khan, and R. Nawaz, “An
optimal ride sharing recommendation framework for carpooling services,”
IEEE Access, vol. 6, pp. 62296–62313, 2018.
[21] Y. Wei, M. Xiao, N. Yang, and S. Leng, “Block mining or service providing:
A profit optimizing game of the PoW-based miners,” IEEE Access, vol. 8,
pp. 134800–134816, 2020.
[22] F. Shams and M. Luise, “Basics of coalitional games with applications to
communications and networking,” EURASIP J. Wireless Commun. Netw.,
vol. 2013, no. 1, pp. 1–20, 2013.
[23] Y. Zhang et al., “Context awareness group buying in D2D networks: A
coalition formation game-theoretic approach,” IEEE Trans. Veh. Technol.,
vol. 67, no. 12, pp. 12259–12272, Dec. 2018.
[24] M. Ahmed, Y. Li, Z. Yinxiao, M. Sheraz, D. Xu, and D. Jin, “Secrecy
ensured socially aware resource allocation in device-to-device communi-
cations underlaying HetNet,” IEEE Trans. Veh. Technol., vol. 68, no. 5,
pp. 4933–4948, May 2019.
[25] I. Remix-Solidity, 2018. [Online]. Available: https://remix.ethereum.org/
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:04:01 UTC from IEEE Xplore.  Restrictions apply. 
https://dx.doi.org/10.1109/TITS.2021.3066439
https://remix.ethereum.org/
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice