Against Colluding Mining with Reward Sharing in MEC Empowered Mobile Blockchain System
Against Colluding Mining with Reward Sharing in
MEC Empowered Mobile Blockchain System
Shan Sun∗†, Wei Wang∗†, Wenjing Xu∗†, Jia Guo∗†
∗College of Electronic and Information Engineering, Nanjing University of Aeronautics and Astronautics, China
†Key Laboratory of Dynamic Cognitive System of Electromagnetic Spectrum Space, Nanjing, China 211106
Email: {sunshan; wei wang; wenjing xu; guojia}@nuaa.edu.cn
Abstract—Mobile edge computing is considered as a promising
solution to mobile blockchain system, where mobile nodes with
limited computing capability may participate the mining process
by offloading the computing intensive mining tasks to nearby edge
service providers (ESPs). To mitigate the collusion between ESP
and miners, we propose a reward sharing model in this paper,
where each miner will share part of the mining rewards to ESP
to build a mutual cooperation group. We model the interaction
among the ESP and miner nodes as a two-stage Stackelberg game.
Then, we obtain the optimal edge computing demand and the
corresponding price of each miner by solving the Nash equilibrium
of the game iteratively with gradient descent method. We also
compare the revenues under both collusion and normal mode
with the proposed reward sharing scheme. Simulation results
show that the more mining rewards that miners share to ESP,
the higher the computing resource demands of miners and the
less of the unit price of the computing resources. In addition, if
the block size of the colluding miner is much larger than other
miners, the ESP can obtain higher revenues rather than colluding.
I. INTRODUCTION
As a distributed ledger technology (DLT) with advanced
cryptography, blockchain can achieve peer-to-peer transactions
in a secure and tamper-proof manner in trustless environment
without relying on a trusted central authority, and thus it
has received extensive applications in many application areas,
such as finance, supply chain, and data sharing, etc [1]–[4].
Consensus is the key to guarantee consistency and security in
blockchain technology. In public blockchain, such as bitcoin
system [5], the proof-of-work (PoW) [6] consensus is most
commonly adopted. With PoW consensus, each participating
node is required to solve a computation-intensive mathematic
puzzle to find a feasible nonce that satisfies the target difficulty,
and the node who finds the nonce will broadcast the results to
other nodes for verification. Once most of the nodes validate
the results, a new block will be generated and appended to the
chain with a mining reward given to the first winner.
Even though blockchain is a promising solution for many
applications, it cannot be readily applied in mobile scenarios
due to the limitations of the proof like consensus. Generally,
the available computing resources on mobile devices (e.g.,
smartphones and unmanned aerial vehicles) are very limited,
and cannot support the computing intensive block mining tasks.
Edge computing has been proposed as a new solution for many
emerging applications, by moving the computing capability near
to the end users. Thus, edge computing brings new opportunities
for mobile blockchain system [7].
The combination of mobile edge computing (MEC) and
blockchain network is regarded as a promising solution for
mobile blockchain system [8]–[12]. To help the mobile devices
in reaching consensus and storing data, an architecture of
blockchain network combining with edge server was introduced
in [13]. As the efficiency of the blockchain mainly depends
on the network computing capability, how to make sure the
acquisition of the computational resources and participation
of the devices would be the driving force. The authors in
[9] focused on incentive mechanism for rational miners to
purchase the computation resources and formulated a two-
stage Stackelberg game between the miners and edge service
providers (ESPs). Many researchers have also worked on
solving the security and privacy issues during the offloading of
computing tasks. The optimal offloading strategy and security
issues for mobile nodes were studied in [10]. The authors in
[11] modeled the interaction of miners and blockchain platform
as a two-stage Stackelberg game, and studied how to attract
more miners to join in blochchain. Note that the work in [11]
did not consider the block propagation delay in the block
verification process, and a modified system utility function
were considered by considering the block verification delay in
[12].
The authors in [14] developed an optimal auction based on
deep learning for edge computing resources allocation. An
auction-based edge computing resources allocation mechanism
for the edge computing service provider was proposed to
maximize the social welfare in [15]. Then, the game model of
multiple leaders and multiple followers was also considered in
many articles. The authors in [16] developed a multi-operator
multi-user Stackelberg game to analyze the interaction between
multiple operators and the UE. In addition, the computation
resource management in the blockchain consensus process was
formulated as a two-stage Stackelberg game in [17], where the
profit of the cloud/fog provider (CFP) and the utilities of the
individual miners were jointly optimized. Both the uniform
pricing scheme and the discriminatory pricing scheme for the
CFP are considered. Considering multiple edge servers, an
alternating direction method of multipliers (ADMM) based
pricing algorithm was presented in [18]. The authors in [19]
proposed a dynamically pricing strategy in non-orthogonal
multiple access (NOMA) resource allocation.
4223
IC
C
 2
02
2 
- I
EE
E 
In
te
rn
at
io
na
l C
on
fe
re
nc
e 
on
 C
om
m
un
ic
at
io
ns
 | 
97
8-
1-
53
86
-8
34
7-
7/
22
/$
31
.0
0 
©
20
22
 IE
EE
 | 
D
O
I: 
10
.1
10
9/
IC
C
45
85
5.
20
22
.9
83
88
57
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:21:45 UTC from IEEE Xplore.  Restrictions apply. 
The above researchers proposed a two-stage Stackelberg
game and an auction-based edge computing resources allo-
cation mechanism, in the same time, which has reference
significance for us to further study the optimal computing
resource allocation strategy. But it is worth noting that most
works above have investigated resource allocation of MEC
servers in a mobile blockchain system with the assumption that
ESPs are trusted. However, under current revenue model, ESP
is much likely to collude with some miners to obtain more
revenues. The collusion of the ESP and miners will cause
severe security threats to the blockchain system. Considering
the collusion issue in computing offloading, the authors in
[20] proposed a nonce ordering mechanism to provide fair
computation resource allocation. The ESP maps the nonce
sequence submitted by all users into a merged nonce sequence,
and provides hash computing services for the merged sequence.
However, the calculation task is conducted serially, which
reduces the computational efficiency as compared with the
parallel processing mode.
In this paper, we propose a revenue sharing strategy and
distribute part of the mining rewards to the ESP, so that no
matter which miner joins the blockchain, the ESP can obtain
mining rewards. The model proposed in this paper not only
mitigates the collusion between ESP and miners, but also avoids
the problem of reducing computational efficiency. In particular,
we use the two-stage Stackelberg game theory of single leader
and multiple followers to model the interaction among the
ESP and miners. Then, we solve the Nash equilibrium of the
game iteratively using gradient descent method. Moreover, we
study the revenues under both collusion and normal model
under different conditions. The simulation results show that
the more mining rewards that miners share to ESP, the higher
the computing resource demands of miners and the less of the
unit price of the computing resources. In addition, if the block
size of the colluding miner is much larger than other miners,
the ESP can obtain higher revenues under the reward sharing
model.
The remainder of this paper is organized as follows. The
system model is described in Section II. In Section III, we
analyze the game among the ESP and miners, and derive the
Nash equilibriums. The simulations and discussions are given
in Section IV, and conclusions are drawn in Section V.
II. SYSTEM MODEL AND PROBLEM FORMULATION
A. System Model
As shown in Fig. 1, we consider a MEC aided mobile
blockchain network, where miners perform block mining
tasks to earn rewards. Due to the limitation of computing
capability, miners need to offload the computing intensive
tasks to the nearby ESPs. We consider a scenario with
one ESP and multiple miners. Denote the set of miners as
M = {m1,m2, . . . ,mM}. The ESP dynamically changes the
unit price of computing resource for each miner, and then
broadcasts the prices to miners, so that miners can determine
their optimal computing demands to maximize their own
revenues. Different from existing computation offloading and
Fig. 1: Edge computing in the mobile blockchain network.
resource allocation strategies, we consider a reward sharing
model where the successful miner will distribute part of the
mining rewards to the ESP to facilitate cooperation and mitigate
potential collusion between the ESP and miners. Note that, to
facilitate the theoretical analysis, we ignore the communication
overhead and the synchronization issues.
B. Problem Formulation
Since both the ESP and miners aim to maximize their
own revenues, the interactions among ESP and miners can
be modeled with game theory. Hence, we adopt a two-stage
multi-followers Stackelberg game, where the ESP and miners
act as leader and followers, respectively. In the upper stage, the
ESP dynamically adjusts the unit computing resource price to
maximize its revenue. In the lower stage, according to the price
given by the ESP, each miner decides the optimal computing
resource demands to maximize its own revenue.
To mitigate the collusion between ESP and the miners,
we consider a reward sharing model where the successful
miner will share part of the mining reward, (1 − α)Ri, to
the ESP, where α is a reward sharing factor, Ri is the total
mining reward of the i-th miner. Thus, the total revenue
of the miner is composed by the remaining mining reward
minus the cost of purchasing computing resources. Denote
the set of computing resource purchased by each miner
and the corresponding prices as µ = {µ1, µ2, ......µM} and
p = {p1, p2, ......pM}, respectively. Then, the i-th miner’s
cost on purchasing computing resources is given by piµi. The
successful mining rewards from the blockchain platform include
both fixed reward R and transaction dependent variable rewards
rsi, where r is transaction fee rate and si is the block size of
the i-th miner. In addition, we consider the impact of block
verification delay, which is related to the block size. The delay
of block verification is given by exp (−ξsi) [21], where ξ is
the delay factor. Then, the probability of successful mining is
given by [12]
qi =
µi∑
mj∈M
µj
. (1)
4224Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:21:45 UTC from IEEE Xplore.  Restrictions apply. 
Considering the propagation delay of block verification, the
mining reward is given by [12]
Ri = (R+ rsi)e
−ξsi . (2)
Thus, the revenue of the i-th miner is given by
Ui = αRi
µi∑
mj∈M
µj
− piµi . (3)
For the ESP, the revenue can be defined as the income by
providing computation services to miners plus the shared
rewards from all miners. Therefore, the revenue function of
the ESP can be defined as follows:
Us =
∑
mi∈M
(1− α)µi∑
mj∈M
µj
Ri +
∑
mi∈M
piµi . (4)
Then, the utility maximization problem of the two sides can
be modeled as the following problems.
Problem 1. For each miner in the lower stage, the optimiza-
tion problem can be formulated as:
max
µi
Ui(µi|µ−i, pi) , (5)
where µi is the computing capability of the i-th miner.
Problem 2. The problem in the upper stage (ESP side):
max
pi
Us(pi,µ) , (6)
where pi is the unit price of computing resources for the i-th
miner.
III. STACKELBERG GAME ANALYSIS
In this section, we analyze the Stackelberg game, and derive
the optimal strategies of the ESP and each miner, respectively.
The equilibrium point of Stackelberg game (SE) is a Nash
equilibrium (NE) between the leader (ESP) and followers
(miners). At the equilibrium point of the game, participants can
not unilaterally change their strategies to gain a larger utility
without damaging the utility of other participants. In this paper,
the SE point (µ∗i , p
∗
i ) is defined as follows:
Definition 1. Let µ∗i and p∗i be the optimal computing
resources purchased by the i-th miner and the corresponding
price, respectively, where p∗ = {p∗1, p∗2, ......p∗M}. The point
(µ∗i , p
∗
i ) is the Stackelberg equilibrium point if it satisfies the
following conditions:
Us(p
∗
i ,µ
∗) ≥ Us(pi,µ∗) , (7)
Ui(µi
∗|µ∗
−i, pi
∗) ≥ Ui(µi|µ∗
−i, pi
∗) , (8)
where µ∗
−i = µ
∗\ {µ∗i } .
Next, we use the method described above to sovle the
equilibrium point of the game. First, given the computing
resource prices profile p = {p1, p2, ......pM}, we solve the
optimal computing resource demands of miners in the lower
stage. Subsequently, we deduce the optimal computing resource
prices of ESP in the upper stage.
A. Lower stage (miners side) analysis
Before solving the equilibrium point, we first prove its
existence and uniqueness in the miners’ sub-game through
the following proposition.
Proposition 1. The NE point in the miners’ sub-game exists
and is unique.
Proof. The first and second order derivatives of the miners’
revenue function (3) can be written as follows:
∂Ui
∂µi
= αRi
∑
mj∈M\{mi}
µj( ∑
mj∈M
µj
)2 − pi , (9)
∂2Ui
∂µi2
= (−2)αRi
∑
mj∈M\{mi}
µj( ∑
mj∈M
µj
)3 ≤ 0 . (10)
Therefore, the miners’ revenue function is strictly concave, and
there must exist a unique µ∗i which is the Nash equilibrium
point in the miners’ sub-problem. To ensure the positivity of
the utility function Ui, we have αRi/
∑
mj∈M µj > pi. Let
the equation in (9) be zero, we can get the optimal computing
resource demand as
µ∗i=

0, if αRi∑
mj∈M
µj
< pi,√
αRi
∑
mj∈M\{mi}
µj
pi
−
∑
mj∈M\{mi}
µj , else.
(11)
Theorem 1. The unique Nash equilibrium for the i-th miner
is given by
µ∗i=
(M − 1)∑
mj∈M
pj
αRj
−
 (M − 1)∑
mj∈M
pj
αRj

2
pi
αRi
,∀i . (12)
Proof. According to (9), for each miner i, we have∑
mj∈M\{mi}
µj( ∑
mj∈M
µj
)2 =
pi
αRi
. (13)
Then, we take the summation of (13) for all miners yields, we
have ∑
mj∈M
µj =
(M − 1)∑
mj∈M
pj
αRj
. (14)
According to (9), we have
∑
mj∈M
µj=
√√√√αRi
pi
∑
mj∈M\{mi}
µj . (15)
4225Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:21:45 UTC from IEEE Xplore.  Restrictions apply. 
By substituting (14) into (15), with simple transformations, we
can obtain the Nash equilibrium for the i-th miner as shown
in (12).
Because of (13) ,we have∑
mj∈M\{mi}
µj( ∑
mj∈M
µj
)2 <
1∑
mj∈M
µj
=
pi
αRi
, (16)
substituting (14) into (16), we can get
(M − 1)pi
αRi
<
∑
mj∈M
pj
αRj
, (17)
which can guarantee µ∗i > 0.
B. Upper stage (ESP side) analysis
For any price given by the ESP, each miner has a unique
Nash equilibrium point, so the ESP’s revenue can be maximized
by setting a reasonable price.
Let β = (2α− 1) /α, Hi = pi/αRi, J =
∑
mj∈MHj and
X = (M − 1)/J , by substituting (12) into (4), we have the
ESP’s revenue fuction as follow:
Us =
∑
mj∈M
((1− α)Ri + piX) (1−XHi) . (18)
Then we caculate the first order and second order derivatives
of (18), which are given as follows:
∂Us
∂pi
=
∑
mi∈M
(
X
J −Hi
J
)
(β − 2XHi) , (19)
∂2Us
∂pi2
=
∑
mi∈M
−2X (J −Hi)
αRiJ2
(β − 3XHi +XJ) . (20)
Substituting (17) into (20), we have two cases as follows:
case 1: When M − 2 < 1/α, we have ∂2Us/∂pi
2 > 0.
Because the feasible region of pi in (11) is 0 < pi <
αRi/
∑
mj∈M µj , then the optimal unit price of computing
resources is pi = αRi/
∑
mj∈M µj .
case 2: When M − 2 > 1/α, we have ∂2Us/∂pi
2 < 0,
which indicates that the revenue function (18) is concave on
each pi. Thus we know that the optimal value of U∗s (p) is
achieved in the concave parts.
Then we use gradient descent method to iteratively solve
the optimal unit price. Through constant iterations until
‖p(t+1)−p(t)‖1
‖p(t)‖1
< ε, with the precision threshold ε. Since
the revenue function Us(p) is concave on each pi, thus p∗
exists and is unique. The optimal price is the NE solution,
p∗ = p(t). In summary, p∗ is the unique NE solution. The
distributed algorithm to find the NE points of miners and ESP
is summarized in Algorithm 1.
Algorithm 1: Nash equilibrium calculation algorithm
for miners and ESP.
1: Initialization:
Select initial input p = {p1, p2, ......pM}, t← 1,
precision threshold ε;
2: repeat
3: Each miner i decides its computing demands µ∗i as
shown in (12) ;
4: ESP uses a gradient assisted searching algorithm to
update the prices, i.e.,
p(t+ 1) = p(t) + λ∇Us(p(t)) ,
where λ is the step size of the price update and
∇Us(p(t)) is the gradient with ∂Us(p(t))
∂p(t) . The price
information is sent to all miners;
5: t← t+ 1 ;
6: until ‖p(t+1)−p(t)‖1
‖p(t)‖1
< ε
7: Output: optimal demand µ∗ and optimal price p∗.
IV. SIMULATION RESULTS AND DISCUSSIONS
In this section, we conduct simulations to verify the per-
formance of the proposed scheme. Specifically, we consider
an ESP and 50 miner nodes (M = 50) in this scenario. The
simulation process is done using MATLAB. The simulation
parameter values are in the TABLE I.
The impact of the reward sharing factor on the unit price
of the computing resources, the miners’ average computing
resource demands, the revenue of the ESP, and the average
revenue of the miners are evaluated in Figures. 2-5, respectively.
In Fig. 2, we can observe that the unit price of ESP gradually
increases with the reward sharing factor, α. When α becomes
larger, because the reward shared by miners to ESP decreases,
the ESP needs to increase the computing resource prices to
obtain higher revenue. In addition, for a fixed α, as the number
of miners increases, the price will be decreased to encourage
miners to offload more computing tasks. When the block size
of miners increases, the block verification delay also increases,
and the probability of becoming an orphan block increases,
which promotes ESP to offer higher prices to increase its own
revenues.
TABLE I: Default Parameter Values
Parameters Values
Mining reward, R 20
Step size, λ 0.1
Transaction fee rate, r 0.01
Delay factor, ξ 0.001
Reward sharing factor, α (0, 1]
In Fig. 3, for fixed si and M , the reduction of the reward
sharing factor α leads miners to purchase less computing
resources, this is because miners have to reduce the cost of
4226Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:21:45 UTC from IEEE Xplore.  Restrictions apply. 
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
The reward sharing factor, 
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
T
h
e
 u
n
it
 p
ri
c
e
 o
f 
th
e
 c
o
m
p
u
ti
n
g
 r
e
s
o
u
rc
e
s
 (
$
),
 p
i s
i
=200,M=50
s
i
=200,M=100
s
i
=200,M=150
s
i
=400,M=50
s
i
=400,M=100
s
i
=400,M=150
Fig. 2: The unit price of ESP vs. the reward sharing factor.
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
The reward sharing factor, 
0
5
10
15
20
25
30
35
40
T
h
e
 a
v
e
ra
g
e
 c
o
m
p
u
ti
n
g
 r
e
s
o
u
rc
e
 d
e
m
a
n
d
s
, 
 
s
i
=200,M=50
s
i
=200,M=100
s
i
=200,M=150
s
i
=400,M=50
s
i
=400,M=100
s
i
=400,M=150
Fig. 3: The average computing resource demands of miners
vs. the reward sharing factor.
purchasing computing resource. For a fixed α, to reduce the
delay of block verification, a larger block size will encourage
miners to purchase more computing resources to increase the
success probability of mining. In Fig. 4, with fixed M and si,
we can observe that the increase of the reward sharing factor
will increase the miners’ revenue. In addition, the increase in
si will decrease the mining rewards, which further decreases
miners’ revenues. Moreover, the larger the number of miners,
the lower the success probability of mining, which leads to the
decrease in the average revenues of miners. Figure. 5 shows
that by increasing the reward sharing factor the ESP’s revenue
will be lowered. This is because the reward shared by miners
to ESP decreases. Moreover, because the increase of the block
size si will increase the unit price and the computing resources
demands, ESP’s revenue will gradually increase. In addition,
the increase of the number of miners will make ESP get more
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
The reward sharing factor, 
0
0.2
0.4
0.6
0.8
1
1.2
1.4
T
h
e
 a
v
e
ra
g
e
 r
e
v
e
n
u
e
s
 o
f 
m
in
e
rs
 (
$
),
 U
i
s
i
=200,M=50
s
i
=200,M=100
s
i
=200,M=150
s
i
=400,M=50
s
i
=400,M=100
s
i
=400,M=150
Fig. 4: The average revenues of miners vs. the reward sharing
factor.
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
The reward sharing factor, 
13.5
14
14.5
15
15.5
16
16.5
17
17.5
18
T
h
e
 r
e
v
e
n
u
e
s
 o
f 
E
S
P
 (
$
),
 U
s
s
i
=200,M=50
s
i
=200,M=100
s
i
=200,M=150
s
i
=400,M=50
s
i
=400,M=100
s
i
=400,M=150
Fig. 5: The revenue of ESP vs. the reward sharing factor.
mining rewards distributed by miners, so the ESP’s revenue
will be increased.
To evaluate the performance of the proposed reward sharing
scheme on the mitigation to colluding miners, we assume that
ESP colludes with the k-th miner, with k = 2 in the simulations.
In the case of collusion, ESP provides computing services
according to the strategy proposed in this paper, but it actually
uses all computing resources for the second miner. In this way,
the revenues of ESP are the payments of all miners purchasing
computing resources plus the mining rewards for the second
miner. Then we can sum the revenues of the second miner and
ESP, and consider the total revenues in the normal and collusion
model. In particular, because under the collusion situation and
the revenue sharing model, the income on computing resources
piµi is the same, we only consider the revenue from the mining
reward, (1− α)µiRi/
∑
mj∈M µj . In Fig. 6, we can observe
4227Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:21:45 UTC from IEEE Xplore.  Restrictions apply. 
the impact of the block size of miners on the sum revenues
under different cases, respectively. With a fixed block size
of the second miner, s2 = 2500, we change other miners’
block size si. As shown in Fig. 6, when α = 1, the total
revenue is always higher than that of the normal case. Under
the parameters we set, the mining reward Ri decreases with
the increase of si. Therefore, when 0 < α < 1, if the block
size of the second miner is much larger than other miners, that
is, the mining reward is much smaller than other miners, the
revenue of reward sharing model proposed in this paper can
be higher than that of collusion.
0 50 100 150 200 250 300 350
The block size of miners except miner 2, s
i
1.5
2
2.5
3
3.5
4
T
h
e
 t
o
ta
l 
re
v
e
n
u
e
s
 o
f 
E
S
P
 a
n
d
 m
in
e
r 
2
 (
$
),
 U
s
+
U
2
=0.8,collusion
=0.8,nomal
=1.0,collusion
=1.0,nomal
Fig. 6: Comparison of the total revenues under different cases,
with M = 20 and s2 = 2500.
V. CONCLUSION
In this paper, we have proposed a reward sharing scheme to
mitigate potential colluding miners in the mobile blockchain
system. We have presented a pricing strategy and resource
allocation for MEC aided blockchain system under the game
model, and the Nash equilibrium of the game has been solved
and simulation results have proved the convergence of the
algorithm. We have also compared the revenues under collusion
and normal conditions. The simulation results have shown that
the more mining rewards that miners share to ESP, the higher
the computing resource demands of miners and the less of the
unit price of the computing resources. In addition, if the block
size of the colluding miner is much larger than other miners,
the ESP can obtain higher revenues under the normal case
with the proposed reward sharing model as compared with the
collusion case, which shows its potential to mitigate colluding
in MEC enabled blockchain mining.
ACKNOWLEDGMENT
This work was supported in part by the National Natural
Science Foundation of China No. 62001220, the Natural
Science Foundation of Jiangsu Province BK20200440, and
the Future Network Scientific Research Fund Project FNSRFP-
2021-YB-03.
REFERENCES
[1] Z. Li, W. Wang, J. Guo, Y. Zhu, L. Han, and Q. Wu, “Blockchain-
assisted dynamic spectrum sharing in the CBRS band,” in 2021 IEEE/CIC
International Conference on Communications in China (ICCC), Nov.
2021, pp. 864–869.
[2] Y. Yu, Q. Li, Q. Zhang, W. Hu, and S. Liu, “Blockchain-based multi-role
healthcare data sharing system,” in 2020 IEEE International Conference
on E-health Networking, Application Services (HEALTHCOM), Apr.
2021, pp. 1–6.
[3] Z. Li, W. Wang, J. Guo, Y. Zhu, L. Han, and Q. Wu, “Blockchain-
empowered dynamic spectrum management for space-air-ground inte-
grated network,” Chinese Journal of Electronics, to appear.
[4] X. Ling, J. Wang, Y. Le, Z. Ding, and X. Gao, “Blockchain radio
access network beyond 5g,” IEEE Wireless Commun., vol. 27, no. 6, pp.
160–168, 2020.
[5] R. Pass and E. Shi, “Fruitchains: A fair blockchain,” pp. 315–324, Jul.
2017.
[6] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” in Social
Science Electronic Publishing, Oct. 2008.
[7] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When mobile
blockchain meets edge computing,” IEEE Commun. Mag., vol. 56, no. 8,
pp. 33–39, Aug. 2018.
[8] X. Ling, Y. Le, J. Wang, Z. Ding, and X. Gao, “Practical modeling and
analysis of blockchain radio access network,” IEEE Trans. Commun.,
vol. 69, no. 2, pp. 1021–1037, 2020.
[9] Z. Chang, W. Guo, X. Guo, Z. Zhou, and T. Ristaniemi, “Incentive
mechanism for edge-computing-based blockchain,” IEEE Trans. Industr.
Inform., vol. 16, no. 11, pp. 7105–7114, Nov. 2020.
[10] A. Alwarafy, K. A. Al-Thelaya, M. Abdallah, J. Schneider, and M. Hamdi,
“A survey on security and privacy issues in edge-computing-assisted
internet of things,” IEEE Internet Things J., vol. 8, no. 6, pp. 4004–4022,
Mar. 2021.
[11] X. Ding, J. Guo, D. Li, and W. Wu, “An incentive mechanism for building
a secure blockchain-based internet of things,” IEEE Trans. Netw. Sci.
Eng., vol. 8, no. 1, pp. 477–487, Jan.-Mar. 2021.
[12] Y. Jiao, P. Wang, D. Niyato, and K. Suankaewmanee, “Auction mecha-
nisms in cloud/fog computing resource allocation for public blockchain
networks,” IEEE Trans. Parallel Distrib. Syst., vol. 30, no. 9, pp. 1975–
1989, Sept. 2019.
[13] F. Xu, F. Yang, C. Zhao, and C. Fang, “Edge computing and caching based
blockchain IoT network,” in Proc.IEEE ICHotICN, Shenzhen,China, Aug.
2018, pp. 238–239.
[14] N. C. Luong, Z. Xiong, P. Wang, and D. Niyato, “Optimal auction for
edge computing resource management in mobile blockchain networks:
A deep learning approach,” in Proc.2018 IEEE ICC, Kansas City, MO,
USA, Jul. 2018, pp. 1–6.
[15] Y. Jiao, P. Wang, D. Niyato, and Z. Xiong, “Social welfare maximization
auction in edge computing resource allocation for mobile blockchain,”
in Proc.2018 IEEE ICC, Kansas City, MO, USA, Jul. 2018, pp. 1–6.
[16] H. Zhang, Y. Xiao, L. X. Cai, D. Niyato, L. Song, and Z. Han, “A
multi-leader multi-follower stackelberg game for resource management
in LTE unlicensed,” IEEE Trans. Wirel. Commun., vol. 16, no. 1, pp.
348–361, Jan. 2017.
[17] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han, “Cloud/fog
computing resource management and pricing for blockchain networks,”
IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600, Jun. 2019.
[18] Z. Xiong, J. Kang, D. Niyato, P. Wang, and H. V. Poor, “Cloud/edge
computing service management in blockchain networks: Multi-leader
multi-follower game-based ADMM for pricing,” IEEE Trans. Services
Comput., vol. 13, no. 2, pp. 356–367, Mar.-Apr. 2020.
[19] K. M. Kattiyan Ramamoorthy, W. Wang, and K. Sohraby, “Nomap: A
pricing scheme for noma resource block selection and power allocation
in wireless communications,” in 2021 IEEE International Symposium on
Local and Metropolitan Area Networks (LANMAN), Jul. 2021, pp. 1–6.
[20] Y. Zuo, S. Jin, and S. Zhang, “Computation offloading in untrusted MEC-
aided mobile blockchain IoT systems,” IEEE Trans. Wirel. Commun., pp.
1–1, Jun. 2021.
[21] N. Houy, “The bitcoin mining game,” SSRN, vol. 1, no. 13, pp. 53–68,
Mar. 2014.
4228Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:21:45 UTC from IEEE Xplore.  Restrictions apply.