Simple and fast identity-based encryption from module lattices
                                 978-1-5090-0022-7/15/$31.00 ©2015 IEEE                                 690
2015 8th International Conference on BioMedical Engineering and Informatics (BMEI 2015)                       
Simple and Fast Identity-based Encryption From
Module Lattices
Lihao Wei1,2 Shenghan Liu1,2 and Zhenyue Long1,2
1The Key Laboratory of CSG Information Testing Guangdong, Guang Zhou, 510000, China
2Information Center of Guangdong Power Grid Corporation Guangdong, Guang Zhou, 510000, China
weilihao@gdxx.csg.cn crypto lin@163.com longzhengyue@gdxx.csg.cn
Abstract: Module lattices have many advantages
over traditional number theory to construct security
schemes. Especially, module lattice-based security
schemes are potentially able to resist to quantum
attacks which can break traditional number theory
based ones. In this vein, this paper designed an
extremely fast identity-based encryption (for short
IBE) scheme from module lattices. Although the se-
curity proof has been conducted in the random oracle
(for short RO) model, the keys and the ciphertext ex-
pansion rate of our scheme are comparatively small.
Moreover, the main idea behind the scheme can be
easily understood: combining the provably secure
NTRU signature of Stehlé and Steinfeld [19] with
the CPA secure El Gamal-like encryption scheme
proposed by Lyubashevsky, Peikert and Regev [15].
Key Word: Module lattice, identity-based encryp-
tion, provable security, short integer solution, learn-
ing with errors
I. INTRODUCTION
In recent years, lattice-based (especially the module lattice-
based) cryptography has become an attractive alternative for
traditional number theoretic ones. On the one hand, the advan-
tage of lattice-based security solutions can not only be based
on worst-case hardness assumptions but also remain secure
even against quantum attacks. On the other hand, lattices have
been shown to be an extremely versatile foundation for con-
structing cryptographic primitives which range from identity-
based encryption (IBE)[1], to fully homomorphic encryption
schemes (FHE) [11], and much more (e.g.[9]).
A. Identity-based Encryption
In 1984, it thanks to Shamir [18] that firstly introduced
the notion of IBE. Specifically, an IBE scheme is a special
kind of public key encryption mechanism. Different from
traditional public encryption, in an IBE scheme every user
may set his public key as any strings of his own choice,
such as his identity, his email address, and his mobile phone
number, etc. However, every user get its decryption key only
from a Private-key Generator (PKG). It is until 2001, Boneh
and Franklin [5] that firstly constructed an IBE scheme from
pairings. Following the work of Boneh and Fanklin, there are
a plenty of IBE and hierarchy IBE schemes [3], [4], [20], [12]
have been presented from pairings with security in the standard
model. Cocks [7] also proposes an IBE scheme using quadratic
residues modulo a composite.
In the lattice field, Gentry, Peikert and Vaikumtanathan
[10] give the first IBE construction through dual encryption
system. In Eurocrypt 2010, Cash et al. [6] introduce the
lattice basis delegation techniques and the first lattice IBE with
security in the standard model. Subsequently, Agrawal, Boneh
and Boyen also describe several constructions [1] with security
in the standard model. Although these constructions are very
elegant, they still suffer from efficiency, even implemented
in ideal lattices. How to adapt these constructions into ideal
lattices? In this paper, we give an affirmative answer to this
question.
B. Our Contributions
In this article, we design a structural lattice-based IBE
scheme whose efficiency is competitive with traditional
pairing-based IBE schemes. Specifically, the public parameters
mainly contains only one ring element (i.e. one polynomial),
and the master key (resp. decryption key of each user) is
comprised of four (resp. two) ring elements. The ciphertext
expansion rate of our IBE scheme is a small constant (double
that of NTRU encryption scheme), whereas other lattice-based
IBE schemes suffer from linear ciphertext expansion rate.
Our construction follows the idea of dual-encryption-
based IBE scheme introduced by Gentry, Peikert and Vaikum-
tanathan, but is different from it in important ways. To make
our IBE scheme simple and efficient, we choose Stehlé and
Steinfeld’s signature generation algorithm [19] as the decryp-
tion key extraction algorithm. We also adapt the El Gamal-like
encryption scheme of Lyubashevsky, Peikert and Rogev [15]
to construct the encryption and decryption algorithms of our
IBE scheme. The resulted IBE scheme is comparatively as
efficient as NTRU [13] encryption scheme.
C. Related Work
In 1984, It thanks to Shamir [18] that firstly introduced the
notion of IBE. However, it is only 2001 that a real proposal
has been designed by Boneh and Franklin [5]. Boneh and
Franklin’s IBE scheme has been constructed on the bilinear
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:43:10 UTC from IEEE Xplore.  Restrictions apply. 
                                                                                                                                          691
maps (or pairing) and been secure in the RO model. Subse-
quently, based on pairing, a plenty of IBE schemes [20], [12]
have been proposed with security in the standard model.
Regarding lattice-based IBE schemes, Gentry, Peikert and
Vaikumtanathan [10] give a construction with security in the
random oracle model, using dual encryption scheme. Based
on lattice basis delegation technique, Cash et al. propose (hi-
erarchical) IBE schemes with security in the standard model.
The constructions of [6] are inefficient due to their large
key size and ciphertext expansion rate. Agrawal, Boneh and
Boyen introduce two lattice-based IBE construction methods
[1] which can produce more efficient IBE schems with security
in the standard model. All of these constructions are still not
efficient enough for practical applications.
II. PRELIMINARIES
A. Notation
Throughout the paper, all real numbers is denoted by R and
all integers is denoted by Z. Let [p] denotes the set {1, ..., p}
and Zp denote the ring modulo p, where p is a small positive
integer. Let (M,+,×) denote a ring, then M× denotes all
invertible elements in M . If f(·) is a function, then f(A) =∑
x∈A f(x) is a function on any countable set A. Let A be a
set, we denote uniform distribution over A by U(A). Let E be
a random event. Then, Pr[E] denotes the occurring probability
of E.
B. Module Lattices and Gaussian Distributions
A lattice generated by the basis D is the following discrete
set
L = {Dx =
n∑
i=1
xidi},
where D={d1, ..., dn} ⊂ Rn comprises of n vectors and
xinZn. The dual lattice of L is defined to be L̂ = {y ∈ Rn :
∀i, (y, di) ∈ Z}.
The ring of polynomials over integers is denoted by Z[x].
Let g ∈ Z[x] be a monic and irreducible polynomial degree
n, then R denote the polynomial ring that modules g. Let
Rp denote the polynomial ring Zp[x]/g. An ideal I of the
polynomial ring R is the subgroup of R that is closed under the
ring multiplication. Given elements e1, e2, · · · , ek of R, we let
〈e1, e2, · · · , ek〉 denote the minimal ideal of R that contains all
these elements. Then, we say that e1, e2, · · · , ek generate this
ideal. Typically, 〈r1, r2, · · · , rk〉 = r1R+r2R+· · ·+rkR. For
(a1, · · · ,am) ∈ Rm, an R-module is the set of the form M =∑
i�d Rai. It is not hard to see that an ideal I is a module
over the ring R. If r1, r2, · · · , rk are linear independent over
the ring R, they are called a basis of the module I .
Through mapping polynomials to their corresponding co-
efficient vectors, it is not hard to see that a non-zero ideal
I corresponds to a sublattice of Zn. A Module lattice for
g is a sublattice of Zn that corresponds to a non-zero ideal
of R = Z[x]/g. In this work, we will restrict ourselves to
g = xn + 1 for n a power of 2. To make our exposition
elementary, we only consider the directly naive embedding
rather than the canonical embedding which is widely used in
a lot of works. For a polynomial f ∈ Rq , let rot(f) denote
the anti-circular matrix
⎡
⎢⎢
⎣
u0 −un−1 · · · −u1
u1 u0 · · · −un−2
· · · · · · · · · · · ·
un−1 un−2 · · · u0
⎤
⎥⎥
⎦ ,
where u = u0 + u1x+ · · ·+ un−1x
n−1. Let rot(u, v) denote
the matrix
[
rot(u)
rot(v)
]
.
The Gaussian function on Rn with parameter σ and c ∈
Rn is defined as[19]:
∀x ∈ Rn, ρσ,c(x) = exp(−π‖x− c‖2/σ2).
We may omit the subscripts when they are taken to be 1
and 0 (respectively. Let the distribution DZn,r to indicate
the n-dimensional discrete Gaussian distribution over Zn with
parameter r.
Given a lattice L, a real number σ > 0 and a point c ∈ Rn,
the lattice Gaussian distribution is defined by DL,σ,c(x) =
ρσ,c(x)
ρσ,c(L) , where x ∈ L, L is support set, σ is the deviation and
c is the center.
Given any ε > 0, the smoothing parameter ηε(L) of lattice
L is defined as the smallest γ > 0 such that ρ 1
γ
(L̂ \ 0) < ε.
We will use the following results.
Lemma 1.(see [16] or [10]). Let n ∈ N. For any real number
r = ω(
√
log n), we have
Prx←↩DZn,r
[||x|| > r
√
n] � 2−n+1.
Lemma 2. (see [14]). Assume n ∈ N,m = 2n, and let g =
gm = xn + 1. For any a, b ∈ R, we have
||a · b (mod g)|| � √n||a||||b||
and ||a · b (mod g)||∞ � n||a||∞||b||∞.
Lemma 3. (see [14]). Assume n ∈ N,m = 2n, and let g =
gm(x) = xn + 1. For any a, b ∈ R, we have
||a · b (mod g)|| � √n||a||||b||
and ||a · b (mod g)||∞ � n||a||∞||b||∞.
Module q-ary Lattices. Let (a1, · · · ,am) ∈ Rm and ai’s
be linearly independent. A module q-ary lattice is an m-
dimensional lattice that contains qZm. Let a ∈ Rm
q . The
following two module q-ary lattices are commonly used in
cryptography.
a⊥ = {(x1, · · · , xm) ∈ Rm
q :
∑
i
xiai = 0 mod q}, and
L(a) = {(x1, · · · , xm) ∈ Rm
q : ∃s ∈ Rq, ∀i, xi = ai·s mod q}.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:43:10 UTC from IEEE Xplore.  Restrictions apply. 
                                                                                                                                          692
These modules lattices corresponding to mn-dimensional in-
teger lattices via the mapping of an element of Rm to the
concatenation of the coefficient vectors.
In [17], Peikert described a significant faster algorithm than
the discrete Gaussian sampler from [10], in the case of q-
ary lattices, and even further for module q-ary lattices. An
adaptation from [19] is as follows.
Lemma 4. There exists a Õ(nm)-time offline/online algorithm
that takes as input an R-basis b1, · · · , bm of a module q-
ary lattice L ⊂ Rm, with q = Poly(n), c ∈ Qmn and
σ = ω(
√
mn lnn) · max||bi||, and returns samples from a
probabilistic distribution with negligible statistical distance to
DL,σ,c.
C. Computational Problems
The Polynomial LWE (PLWE) Problem. For u ←↩ U(Rq),
let Du,χ denote the distribution obtained by sampling the pair
(x, y) = (x, x · s + e) ∈ Rq × Rq with x selected uniformly
in Rp and e sampled independently from χ. Let {(xi, yi)}
be the set of samples draw from the distribution Du,χ. The
PLWEg,p,χ assumption states that the distribution of yi’s are
computational indistinguiable from uniform distribution in Rp.
Definition 5. (The PLWE× Assumption ). Let u ∈ Rp and χ
be a distribution in Rp. Let also D×u,χ be the distribution got
by sampling the pair (x, x · u+ e) ∈ R∗p ×Rp with x chosen
uniformly from R∗p and e sampled independently from χ. The
PLWE× assumption states that for any � = �(n) and i ∈ [�],
it holds that (xi, yi) ←↩ D×s,χ and (xi, ui) are computational
indistinguiable, where ui ←↩ U(Rp).
III. A PRACTICAL IBE SCHEME IN THE RO MODEL
In this section we construct a simple and fast IBE scheme.
It is defined by the parameters n, q, σ, s, r, where n is the
degree of g (i.e., g(x) = xn +1) and q is prime. The rings R
and Rp are parameterized by n and q. The parameters σ and
s are the parameters of the discrete Gaussian distributions ap-
plied in the key producing algorithm and decryption extraction
algorithm, respectively. Finally, the parameter r is the PLWE
noise distribution parameter.
A. The Scheme
Our IBE scheme is constructed as below. The Setup
algorithm uses the same procedure of a provably secure NTRU
signature scheme [19]. It invokes a key generation algorithm
KGen to produce a public key pk = h ∈ R×p , which defines
a function
fh(z1, z2) = h · z1 + z2 mod q
with domain Dn = {(z1, z2) ∈ R2 : ||(z1, z2)|| �
√
2ns}
and the range Rp, where s is the Gaussian parameter. The
algorithm KGen also produces a secret key sk which is a
trapdoor R-basis for the R-module lattice h⊥ = {(z1, z2) ∈
R2 : fh(z1, z2) = 0}.
• Setup(n): Taking as input of the security parameter n, the
PKG sets the common parameters p, q, r, σ as defined in
section III-B below. Next do:
1) Select a secure hash function H : {0, 1}∗ −→ Rp.
During security proof, we deem it as an RO.
2) Use the key generation algorithm KGen(n, q, σ) de-
scribed in Figure 1 to produce a pair of keys (pk, sk).
3) Then, PKG sets the public common parameters and his
master key as,
GP = (pk,H) ; MK = (sk,H)
• Extract(GP,MK,id): The PKG uses its master key MK to
extract the corresponding decryption key for a user whose
identity is id as follows:
1) Compute hid = H(id) ∈ Rp.
2) Compute (s1, s2) ∈ Dn such that hid = fh(s1, s2) as
follows. At first, set c = (1, h + hid). Then sample
(s1, s2) from Dh⊥,s,c using the trapdoor basis sk and
the algorithm of Lemma 4.
3) Output SKid = (s1, s2).
• Encrypt(GP,id,u): Taking as input of the public common
parameters GP, and the user’s identity id, and a to be
encrypted message u = (u0, · · · , un−1) ∈ {0, 1}n, do:
1) Sample w, e0, e1 ←↩ DZn,r.
2) Compute c0 = h·w+e0 ∈ Rp and c1 = 2·hid ·w+Pu+
2 · e1 ∈ Rp, where Pu = u0 + u1x+ · · ·+ un−1x
n−1.
3) the final ciphertext is CT= (c0, c1).
• Decrypt(GP,SKid,CT): Taking as input of the public
common parameters GP, a user’s decryption key SKid,
and a to be decrypted ciphertext CT= (c0, c1), do as
below:
1) Compute c′ = c1 − 2 · c0 · s1 ∈ Rp.
2) Let Pu = c′ mod 2, return (u0, u1, · · · , un−1), where
Pu = u0 + u1x+ · · ·+ un−1x
n−1.
B. Parameters and Correctness
When our IBE system is operated as defined above, we
will have during the decryption,
c′ = c1− c0 · 2 · s1 = 2 · e1− 2 · s2 ·w− 2 · s1 · e0 +Pu ∈ Rp.
Let α = 2·e1−2·s2 ·w−2·s1 ·e0+Pu. If ||α||∞ � q/2 then we
will obtain c′ = α and so, c′ mod 2 = α mod 2 = Pu mod 2,
which indicates that the decryption algorithm is right.
Lemma 7. If (
√
m+mr+
√
2m2σr) � q/2, then ||α||∞ �
q/2 with a probability about 1−m−ω(1) taking on the choice
of f, g, r, e0, e1.
Proof. It only needs to upper bound the probability that
||α||∞ � q/2. According to the Lemma 2, we obtain that
||(s1, s2)|| �
√
2mσ, ||w|| � √
mr, ||e0|| � √
mr and
||e1|| �
√
mr with a probability at least 1 − 2−m+1. From
Lemma 3, ||e1|| � mr and ||s2 · w + p · s1 · e0|| �
√
2m2σr
with probability 1−m−ω(1).
Since
√
m + mr +
√
2m2σr � q/2, we conclude that
||α||∞ � q/2 with the probability at most 1−m−ω(1).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:43:10 UTC from IEEE Xplore.  Restrictions apply. 
                                                                                                                                          693
Inputs:m, p ∈ Z, σ > 0.
Output:A pair of key (pk, sk) ∈ R× ×R2×2
1) u←↩ DZn,σ , if (u mod p) /∈ R×, resample.
2) v ←↩ DZn,σ , if (v mod p) /∈ R×, resample.
3) if ‖u‖ > √m · σ or ‖v‖ > √m · σ, restart.
4) if 〈u, v〉 �= R, restart.
5) Compute F1, G1 such that fG1 − gF1 = 1 through extended Euclidean algorithm (see
[[8], Ch.2.4]); set Fp = pF1 and Gp = pG1.
6) Find the lattice point (F ′, G′) ∈ L(rot(u, v)) approximating to (Fp, Gp) through Babai’s
nearest plane algorithm [2]. Let (F,G) = (Fp, Gp)− (F ′, G′).
7) If ‖(F,G)‖ > nσ, restart.
8) Output the secret key sk =
[
u F
v G
]
and public key pk = h = v/u.
Fig. 1. key producing algorithm KGen
C. Security Proof
The main idea of the security proof of our IBE scheme is
as follows. We reduce the adversary to an algorithm to break
the PLWE× hard problem. During the proof, the hash function
H is deemed as an RO. We first review some useful facts about
Gaussian distribution over ideal lattices.
Lemma 8. (derived from the proof of Theorem 4.2 [19])
Assume that m = 2n and g = xm + 1 is able to be
decomposed into kp ∈ {2,m} factors modulo q � 7, with
σ = m
√
ln(8mq) · q1/2+ε and q1/2−ε = Ω̃(n7/2) if kp = m,
or σ =
√
ln(8mq)·q1/2+ε and q1/2−ε = Ω̃(m3) if kp = 2, for
some fixed ε ∈ (0, lnm
ln q ). Let s = Ω̃(m3/2σ). Then fh(z1, z2)
and U(R) are statistically close for any h produced by the
KGen algorithm, where (z1, z2) is sampled from DZ2m,s.
Theorem 9. Let n, q, p, σ, s, ε satisfy the conditions in Lemma
3.1 and 3.2 and r � ω(
√
lnn). Then, assuming that H is an
RO, the IBE scheme designed in section III is IND-ID-CPA
secure provided that the hardness of PLWE× holds.
Proof. Assuming that A is an IND-ID-CPA adversary. We will
construct an efficient algorithm B to break the hard problem
PLWE× as follows. Let O be the oracle that samples element
from either U(R∗p ×Rp) or D×u,χ for some previously chosen
u ←↩ χ. The algorithm B firstly calls the oracle O to obtain
two samples (a0, b0) and (a1, b1). Let NH and NE denote
the total number of RO queries and decryption key extraction
queries, respectively. Then it simulates the IND-ID-CPA game
defined in [5] for the adversary A as follows.
• Setup: The algorithm B sets h = a0, prepares a list L and
chooses an index j ∈ [Qh]. Then it sends the adversary A
with the global common system-wide parameters GP=
{h}, which defines the module lattice h⊥.
• Phase 1: In this stage, the adversary A may issue de-
cryption key extracting queries and random oracle queries
which will be answered as follows:
Random Oracle Queries: Taking as input of A’s zth
different query idz to H , the algorithm B does as follows:
if z = j, then insert (idj , a1,⊥,⊥) into the list L and
return hidj
= a1. Otherwise for i �= j, do as follows:
1) samples (s1, s2) from DZ2n,σ ,
2) computes hidz
= h · s1 + s2 ∈ Rp,
3) sets SKidz
= (s1, s2) and H(idz) = hidz
,
4) inserts the tuple (idz, hidz
, s1, s2) into the list L and
return hidz
.
Decryption Key Extraction Queries: When a query of
decryption key under the identity idz is coming, where
z ∈ [NE ], we assume that A has already queried H
on idz . Then, the simulator searches the unique tuple
(idz, hidz
, s1, s2) from list LH . If s1 = ⊥, then abort
with an output of a random guess, otherwise return
SKidz
= (s1, s2) to the adversary A.
• Challenge: After Phase 1 is finished, the adversary
returns two challenging messages u0, u1 ∈ Mn with
the same length and a challenging identity id∗ to the
simulator. Assume that A has already asked H on id∗.
If id∗ �= idj , then abort with an output of a random
guess. Otherwise, sample a bit b ∈ {0, 1} according to the
uniform distribution and set the challenging ciphertext as
c∗ = (b0, p · b1 + ub ∈ Rp). Then B sends the adversary
A with c∗ for challenging.
• Phase 2: The adversary may issue some additional de-
cryption key extracting queries adaptively on identities
idz , where z ∈ [NE ] and idz �= id∗. The algorithm B
answers these queries the same as in Phase 1.
When A terminates with the output b′, the algorithm B aborts
with the same output.
Now, we analyze the above described reduction. It is not
hard to see that the probability of B’s not aborting during
the simulation of IND-ID-CPA game is (QH − 1)/Q2
H . The
probability of B’s not aborting in phase 1 and phase 2 are
(QH − 1)/QH and 1/QH , respectively. If B does not abort,
we are able to conclude that the view of A in the above
reduction and that of A in the real IBE system are statistically
close. In fact, the answers to the hash queries are statistically
close to uniform distribution on Rp according to Lemma 2.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:43:10 UTC from IEEE Xplore.  Restrictions apply. 
                                                                                                                                          694
Furthermore, the answers to the decryption key extraction
queries are statistically close to those generated by Extract
in the real system from Lemma 2. Finally, it is not hard to see
that B and A have the same advantages, when B not aborting.
IV. CONCLUSION AND FURTHER DISCUSSIONS
We constructed an identity-based encryption scheme
whose efficiency is competitive with traditional number the-
oretic ones. Our construction is based on ideal lattice and is
proven to be secure in the RO model. The keys and ciphertext
expansion rate of our IBE scheme is very small. Its keys are
comprised of several polynomials and its ciphertext expansion
rate is a small constant. It would be interesting to improve our
construction that is secure in the standard model.
REFERENCES
[1] S. Agrawal, D. Boneh, and X. Boyen. Efficient lattice (h)ibe in the
standard model. In H. Gilbert, editor, EUROCRYPT, volume 6110 of
Lecture Notes in Computer Science, pages 553–572. Springer, 2010.
[2] L. Babai. On l. lovász lattice reduction and the nearest lattice point
problem. Combinatorica, (6):1–13, 1986.
[3] D. Boneh and X. Boyen. Efficient selective-id secure identity-based
encryption without random oracles. In C. Cachin and J. Camenisch,
editors, EUROCRYPT, volume 3027 of Lecture Notes in Computer
Science, pages 223–238. Springer, 2004.
[4] D. Boneh and X. Boyen. Secure identity based encryption without
random oracles. In M. K. Franklin, editor, CRYPTO, volume 3152 of
Lecture Notes in Computer Science, pages 443–459. Springer, 2004.
[5] D. Boneh and M. K. Franklin. Identity-based encryption from the weil
pairing. In J. Kilian, editor, CRYPTO, volume 2139 of Lecture Notes in
Computer Science, pages 213–229. Springer, 2001.
[6] D. Cash, D. Hofheinz, E. Kiltz, and C. Peikert. Bonsai trees, or how
to delegate a lattice basis. In H. Gilbert, editor, EUROCRYPT, volume
6110 of Lecture Notes in Computer Science, pages 523–552. Springer,
2010.
[7] Clifford Cocks. An identity based encryption scheme based on quadratic
residues. In B. Honary, editor, IMA Int. Conf., volume 2260 of Lecture
Notes in Computer Science, pages 360–363. Springer, 2001.
[8] H. Cohen. A Course in Computational Algebraic Number Theory.
Springer, 1995.
[9] Sanjam Garg, Craig Gentry, and Shai Halevi. Candidate multilinear
maps from ideal lattices. In T. Johansson and P. Q. Nguyen, editors,
EUROCRYPT, volume 7881 of Lecture Notes in Computer Science,
pages 1–17. Springer, 2013.
[10] C. Gentry, C. Peikert, and V. Vaikuntanathan. Trapdoors for hard lattices
and new cryptographic constructions. In Cynthia Dwork, editor, STOC,
pages 197–206. ACM, 2008.
[11] C. Gentry, A. Sahai, and B. Waters. Homomorphic encryption
from learning with errors: Conceptually-simpler, asymptotically-faster,
attribute-based. In R. Canetti and J. A. Garay, editors, CRYPTO, volume
8042 of Lecture Notes in Computer Science, pages 75–92. Springer,
2013.
[12] Craig Gentry. Practical identity-based encryption without random
oracles. In S. Vaudenay, editor, EUROCRYPT, volume 4004 of Lecture
Notes in Computer Science, pages 445–464. Springer, 2006.
[13] J. Hoffstein, J. Pipher, and J. H. Silverman. Ntru: A ring-based public
key cryptosystem. In J. Buhler, editor, ANTS, volume 1423 of Lecture
Notes in Computer Science, pages 267–288. Springer, 1998.
[14] V. Lyubashevsky and D. Micciancio. Generalized compact knapsacks
are collision resistant. In M. Bugliesi, B. Preneel, V. Sassone, and
I. Wegener, editors, ICALP, volume 4052 of Lecture Notes in Computer
Science, pages 144–155. Springer, 2006.
[15] V. Lyubashevsky, C. Peikert, and O. Regev. A toolkit for ring-lwe
cryptography. In T.Johansson and P. Q. Nguyen, editors, EUROCRYPT,
volume 7881 of Lecture Notes in Computer Science, pages 35–54.
Springer, 2013.
[16] D. Micciancio and O. Regev. Worst-case to average-case reductions
based on gaussian measures. In FOCS, pages 372–381. IEEE Computer
Society, 2004.
[17] Chris Peikert. An efficient and parallel gaussian sampler for lattices. In
T. Rabin, editor, CRYPTO, volume 6223 of Lecture Notes in Computer
Science, pages 80–97. Springer, 2010.
[18] Adi Shamir. Identity-based cryptosystems and signature schemes. In
G. R. Blakley and D. Chaum, editors, CRYPTO, volume 196 of Lecture
Notes in Computer Science, pages 47–53. Springer, 1984.
[19] D. Stehlé and R. Steinfeld. Making ntruencrypt and ntrusign as secure
as standard worst-case problems over ideal lattices. IACR Cryptology
ePrint Archive, 2013:4, 2013.
[20] Brent Waters. Efficient identity-based encryption without random
oracles. In R. Cramer, editor, EUROCRYPT, volume 3494 of Lecture
Notes in Computer Science, pages 114–127. Springer, 2005.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 06:43:10 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize false
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Required"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice