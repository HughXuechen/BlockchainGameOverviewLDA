Evolutionary Game for Mining Pool Selection in Blockchain Networks
760 IEEE WIRELESS COMMUNICATIONS LETTERS, VOL. 7, NO. 5, OCTOBER 2018
Evolutionary Game for Mining Pool Selection in Blockchain Networks
Xiaojun Liu , Wenbo Wang, Member, IEEE, Dusit Niyato, Fellow, IEEE,
Narisa Zhao, and Ping Wang, Senior Member, IEEE
Abstract—In proof-of-work-based blockchain networks, the
block miners participate in a crypto-puzzle solving competition
to win the reward of publishing (i.e., mining) new blocks. Due
to the remarkable difficulty of the crypto-puzzle, individual min-
ers tend to join mining pools to secure stable profits. We study
the dynamics of mining pool selection in a blockchain network,
where mining pools may choose arbitrary block mining strate-
gies. We identify the hash rate for puzzle-solving and the block
propagation delay as two major factors determining the min-
ing competition results. We then model the strategy evolution
of individual miners as an evolutionary game. We provide the
theoretical analysis of evolutionary stability in the pool selection
dynamics for a two-pool case. Numerical simulations support
our theoretical findings as well as demonstrate the stability in
the evolution of miners’ strategies in a general case.
Index Terms—Blockchain, mining pool, evolutionary game.
I. INTRODUCTION
APUBLIC blockchain network is built as an overlay
peer-to-peer (P2P) network for decentralized temper-
proof data recording, trusted timestamping or general-purpose
distributed autonomous organization [1]. The Nakamoto con-
sensus protocol [2] is adopted to financially incentivize the full
nodes (block miners) to abide by the “longest-chain rule” for
blockchain state maintenance. Following the protocol, a block
miner packs an arbitrary set of verified transactions into a
data structure, known as a candidate “block”, and broadcasts
it to the entire network. The blockchain state is maintained
as a linear list of blocks linked by hash pointers [2] in a
loosely synchronized manner. Namely, a miner always keeps
the longest observed chain as its local blockchain replica.
The incentive mechanism of the Nakamoto protocol consists
of two parts [2]: (a) a computation-intensive crypto-puzzle
solving process to make Sybil attacks financially unaffordable,
and (b) a reward confirmation process to award an incentive to
the miners when their published blocks are recognized by the
network. The crypto-puzzle solving process is implemented
as a Proof-of-Work (PoW) competition [2], where the miners
Manuscript received January 8, 2018; revised March 5, 2018; accepted
March 22, 2018. Date of publication March 27, 2018; date of current ver-
sion October 11, 2018. This work was supported in part by the Singapore
MOE Tier 1 under Grant 2017-T1-002-007 RG122/17, and in part by the
Singapore MOE Tier 2 under Grant MOE2014-T2-2-015 ARC4/15 and Grant
NRF2015-NRF-ISF001-2277. The associate editor coordinating the review of
this paper and approving it for publication was M. Dong. (Corresponding
author: Xiaojun Liu.)
X. Liu and N. Zhao are with the Institute of Systems Engineering,
Dalian University of Technology, Dalian 116024, China (e-mail:
liuxiaojun@mail.dlut.edu.cn; nmgnrs@dlut.edu.cn).
W. Wang, D. Niyato, and P. Wang are with the School of Computer
Engineering, Nanyang Technological University, Singapore 639798 (e-mail:
wbwang@ntu.edu.sg; dniyato@ntu.edu.sg; wangping@ntu.edu.sg).
Digital Object Identifier 10.1109/LWC.2018.2820009
exhaustively query a trusted random oracle, e.g., a SHA-256
hash function, to find a random string satisfying a preimage
condition based on their own block proposals. In the award-
ing process, the miner which first gets its candidate block
disseminated across the network receives a reward in dig-
ital tokens for its effort in validating new transactions [1].
Compared with the prevalent incentive mechanisms in mobile
networks [3], [4], the Nakamoto protocol is characterized by
a decentralized token-issuing scheme embedded in its block-
confirmation functionality. With a fixed reward per block, a
node’s willingness to join the consensus process is mainly
influenced by the expected cost of energy consumption.
The probability of winning a PoW competition depends
on the ratio between a miner’s hash rate, i.e., the number
of queries to the hash function that the miner makes per
second, and the total hash rate of the entire network [2].
Meanwhile, the block propagation time in the P2P network
determines the final result of block confirmation within one
consensus round, since only the first block propagated to the
majority of the nodes will be accepted as the new head of
the blockchain [5], [6]. Practically, the chance for individ-
ual miners to win a PoW competition is negligible due to
the overwhelming hash rate in the network. As a result, the
real-world blockchain networks are dominated by the proxy
nodes that represent the coalitions of miners known as min-
ing pools [1]. A mining pool works as a task scheduler by
dividing a preimage-searching task into smaller sub-tasks and
assigning them to the miners in the pool according to their
devoted/reported hash rate. By aggregating the hash rate of
many miners, the probability for a mining pool to win a block
reward becomes significantly large. Then, an individual miner
can secure its small, but stable share of reward according to
its share of hash rate in the pool.
In this letter, we study the problem of mining pool selection
in a PoW-based blockchain network. We consider that the indi-
vidual miners are bounded rational and the mining pools adopt
arbitrary mining strategies [7]. We model the pool-selection
dynamics in the network as an evolutionary game. We focus
on the impact of the hash rate and propagation delay on the
strategy evolution, and study the evolutionary stability of the
pool-selection dynamics in the case of two mining pools.
II. PROBLEM FORMULATION
A. Financially Incentivized Block Mining With Proof-of-Work
We consider a PoW-based blockchain network [2] with
N individual miners, which organize themselves into M
mining pools, the set of which is denoted by M =
{1, 2, . . . , M}. We assume that the crypto-puzzle solving
2162-2345 c© 2018 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:08:07 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-9826-9563
LIU et al.: EVOLUTIONARY GAME FOR MINING POOL SELECTION IN BLOCKCHAIN NETWORKS 761
process is ASIC-resistant [1]. In other words, the miners use
general-purpose computing units for hash queries and have
roughly the same hashing efficiency, i.e., hash rate per Watt.
A mining pool i requires a certain hash rate, ωi, to be provided
by each miner joining the pool. Let ωωω = [ω1, . . . , ωM]� denote
the hash rate vector. Further, let x = [x1, . . . , xM]� denote the
vector of population fraction for the pools such that x is in an
(M − 1)-simplex, i.e., X = {x ∈ R
M+ :
∑
i∈M xi = 1}. Then,
the probability for pool i to win a mining competition is [1]
Prmine
i (x,ωωω) = ωixi
∑M
j=1 ωjxj
. (1)
Pool i broadcasts a mined block to the peers to propagate
it to the entire network. The block propagation time is deter-
mined by both the transmission delay over each link and the
transaction verification time at each relaying node. For a block
of size s, the transmission delay can be modeled as τp(s) = s
γ c ,
where γ is a network scale-related parameter, and c is the aver-
age effective channel capacity of each link [5]. Meanwhile,
since verifying a transaction requires a fixed amount of com-
putation, the block verification time can be modeled as a linear
function τv(s) = βs, where β is a parameter determined by
both the network scale and the average verification speed of
each node. Then, the average time for a block of size s to be
propagated across the network is
τ(s) = τp(s)+ τv(s) = s
γ c
+ βs. (2)
The incidence of abandoning (i.e., orphaning) a valid candidate
block due to the propagation delay follows a Poisson process
with mean rate 1/T , which is maintained by the network as
a fixed average mining rate [2]. Thereby, the probability of
orphaning a valid block of size s is
Prorphan(s) = 1− e−τ(s)/T = 1− e−( s
γ c+βs)/T
. (3)
Then, the probability for pool i to ultimately win a mining
race with a block of size si is
Prwin
i (x,ωωω, si) = ωixi
∑M
j=1 ωjxj
e−(
si
γ c+βsi)/T
. (4)
The block reward is comprised of a fixed token-issuing
reward and the fees of the transactions packed in the new
block [1]. Consider that the blockchain users pay a fixed
fee per transaction and the transaction records have the same
size. Let R denote the token-issuing reward and ρ denote the
transaction confirmation price per unit data size. Then, the
transaction fees can be expressed as ρsi [6]. The miners also
have to consider the energy cost due to hash computation. Let
p denote the energy price for maintaining a unit hash rate dur-
ing T . The energy cost can be expressed as pωi. Based on (4),
a miner’s expected payoff in pool i can be expressed as
yi(x,ωωω, si) = R+ ρsi
Nxi
ωixi
∑M
j=1 ωjxj
e−(
si
γ c+βsi)/T − pωi. (5)
B. Mining Pool Selection As an Evolutionary Game
Consider that each individual miner is bounded rational and
aims to maximize its payoff given in (5). Then, we can define
Algorithm 1 Pairwise Proportional Imitation Protocol for
Mining Pool Selection
1: Initialization: (a) ∀i ∈ N , miner i randomly selects a mining
pool to start with. (b) t← 1.
2: while x has not converged and t<MAX_COUNTER do
3: for i ∈ N do
4: j← Rand(1, M) {Randomly selects a pool j ∈M }
5: Determine whether to switch to pool j according to the
switching probability ρi,j:
ρi,j = xj max(yj(x,ωωω, sj)− yi(x,ωωω, si), 0) (8)
6: end for
7: t← t + 1
8: end while
the evolutionary game for mining pool selection as a 4-tuple:
G = 〈N , M , x, {yi(x,ωωω, si)}i∈M 〉, where (a) N is the popula-
tion of individual miners and |N | = N, (b) M = {1, 2, . . . , M}
is the set of mining pools, (c) x ∈ X is the vector of the
population states, and (d) {yi(x,ωωω, si)}i∈M is the set of indi-
vidual miner’s payoffs in each mining pool. We note that ωi
and si form the predetermined strategy of pool i. Then, by
the pairwise proportional imitation protocol [8], the replicator
dynamics for the population evolution can be expressed as the
following system of Ordinary Differential Equations (ODEs),
∀i ∈M [8]:
ẋi(t) = fi(x(t)) = xi(t)(yi(x(t);ωωω, si)− y(x(t))), (6)
where ẋi(t) is the growth rate of the size of pool i over time,
and y(x) = ∑M
i=1 yi(x;ωωω, si)xi is the average payoff of the
miners in the pools. Let Y(x)= [y1(x), . . . , yM(x)]� denote the
vector of payoffs for all the mining pools. The Nash Equilibria
(NE) of G can be defined as follows:
Definition 1 (NE [9]): A population state x∗ ∈ X is in a
set of NE E(Y) of game G , i.e., x∗ ∈ E(Y), if for all feasible
states x ∈ X the inequality (x− x∗)�Y(x∗) ≤ 0 holds.
It is straightforward that the NE is a fixed point of the ODEs
given in (6), namely, ∀i ∈M , fi(x(t)) = 0 [8]. Then, we need
to further investigate the stability of an NE state x∗ ∈ E(Y)
for pool selection. Suppose that there exists another population
state x′ trying to invade state x∗ by attracting a small share
ε ∈ (0, 1) in the population of miners to switch to x′. Then,
x∗ is an Evolutionary Stable Strategy (ESS) if the following
condition holds for all ε ∈ (0, ε):
∑
i∈M
x∗i yi((1− ε)x∗ + εx′) ≥
∑
i∈M
x′iyi((1− ε)x∗ + εx′). (7)
Based on (7), we can formally define the ESS as follows.
Definition 2 (ESS [9]): A population state x∗ is an ESS of
game G , if there exists a neighborhood B ∈ X , such that
∀x ∈ B − x∗, the condition (x − x∗)�Y(x∗) = 0 implies that
(x∗ − x)�Y(x) ≥ 0.
We present in Algorithm 1 the strategy evolution of the
N miners following the pairwise proportional imitation proto-
col [8]. As the population increases, the protocol represents
the replicator dynamics described by (6).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:08:07 UTC from IEEE Xplore.  Restrictions apply. 
762 IEEE WIRELESS COMMUNICATIONS LETTERS, VOL. 7, NO. 5, OCTOBER 2018
C. A Case Study of Two Mining Pools
Due to the space limit, we study the case of two mining
pools (M = 2) to exemplify the procedure of stability analysis
for the NE in the pool-selection game. Let the population frac-
tion of each pool be x1 = x, and x2 = 1−x. From Definition 1
and by solving ẋi(t) = 0, i ∈ [1, 2], we can obtain three rest
points of the ODEs given by (6) in the form of (x∗, 1− x∗):
x∗ ∈
{
0, 1,
a− b
Np(ω1 − ω2)2
− ω2
ω1 − ω2
}
, (9)
where after some mathematical manipulations we have a =
(R + ρs1)ω1e−(
s1
γ c+βs1)/T and b = (R + ρs2)ω2e−(
s2
γ c+βs2)/T .
It is worth noting that a and b represent the expected reward
of an individual miner in pool 1 and pool 2, respectively. To
fulfill the condition for x to be in the (M − 1)-simplex, we
also have 0 < a−b
Np(ω1−ω2)
2 − ω2
ω1−ω2
< 1.
Now, we are ready to investigate the evolutionary stability
of the three fixed points. In the cases of x∗ = 0 and x∗ = 1, the
population states are (0, 1) and (1, 0), respectively. We know
that the two fixed points are of the similar form, since the
individual payoff functions are similar for each mining pool.
Therefore, we only need to check the case with x1 = x∗ = 0.
Lemma 1: For game G with two mining pools, 1) The rest
point with x∗ = 0 is an ESS, if
{ a−b
Nω2
− p(ω1 − ω2) < 0, and
(
a−b
Nω2
− p(ω1 − ω2)
)(
pω2 − b
Nω2
)
> 0.
(10)
2) The rest point with x∗ = a−b
Np(ω1−ω2)
2 − ω2
ω1−ω2
is an ESS
if for c = a− b+ Npω2(ω2 − ω1),
{
c(a(ω1+ω2)+ω1(−2b+Npω1(ω2−ω1)))
(a−b)
< 0, and
pc(−bω1+aω2)(a−b+Npω1(ω2−ω1))
(ω1−ω2)
> 0.
(11)
Proof: By [8, Definition 2.6], the asymptotically stable state
of the ODEs in (6) is guaranteed to be an ESS. When the repli-
cator dynamics is continuous-time, it is asymptotically stable
if the Jacobian matrix of the dynamical system at the equi-
librium is negative definite [10]. For the ODEs in (6), the
Jacobian matrix of a network with two mining pools is
J =
[
J11 J12
J21 J22
]
=
[
∂f1(x)
∂x1
∂f1(x)
∂x2
∂f2(x)
∂x1
∂f2(x)
∂x2
]∣
∣
∣
∣
∣
(x1=x∗,x2=1−x∗)
. (12)
Further, the elements in (12) are derived as follows:
∂f1(x)
∂x1
= (1− 2x1)
(
a
N(ω1x1 + ω2x2)
− pω1
)
− aω1(x1 − x2
1)
N(ω1x1 + ω2x2)2
− bω2x2
2
N(ω1x1 + ω2x2)2
+ pω2x2,
(13)
∂f1(x)
∂x2
= pω2x1 − aω2(1− x1)x1
N(ω1x1 + ω2x2)2
+ bω2x1x2
N(ω1x1 + ω2x2)2
− bx1
N(ω1x1 + ω2x2)
, (14)
∂f2(x)
∂x1
= pω1x2 + aω1x1x2
N(ω1x1 + ω2x2)2
− bω1(1− x2)x2
N(ω1x1 + ω2x2)2
− ax2
N(ω1x1 + ω2x2)
, (15)
∂f2(x)
∂x2
= (1− 2x2)
(
b
N(ω1x1 + ω2x2)
− pω2
)
− bω2(x2 − x2
2)
N(ω1x1 + ω2x2)2
− aω1x2
1
N(ω1x1 + ω2x2)2
+ pω1x1.
(16)
Based on (13)-(16), we have
1) After some standard mathematical manipulations, J is
negative definite if the determinants of its principal
minors at x∗ = 0 satisfy the following two conditions:
{
det(J11) = ∂f1(x)
∂x1
= a−b
Nω2
− p(ω1 − ω2) < 0, and
det(J) =
(
a−b
Nω2
− p(ω1 − ω2)
)
(pω2 − b
Nω2
) > 0.
(17)
2) Similarly, at x∗ = a−b
Np(ω1−ω2)
2− ω2
ω1−ω2
, the following two
conditions can be obtained for J to be negative definite:
{
det(J11) = c(a(ω1+ω2)+ω1(−2b+Npω1(ω2−ω1)))
N(a−b)(ω1−ω2)
2 < 0, and
det(J) = pc(−bω1+aω2)(a−b+Npω1(ω2−ω1))
N(a−b)2(ω1−ω2)
> 0.
(18)
The inequalities in (17) and (18) are exactly the conditions
in (10) and (11) given by Lemma 1, respectively. Therefore,
the proof to Lemma 1 is completed.
In practical scenarios, the blockchain network is composed
of a large population of miners. Then, from Lemma 1, we
can employ the asymptotic analysis and obtain the following
theorem on the evolutionary stability of the rest points.
Theorem 1: Assume that the population size N is suffi-
ciently large. Then, neither of the rest points with x∗ ∈ {0, 1}
is evolutionary stable. The rest point with x∗ = a−b
Np(ω1−ω2)
2 −
ω2
ω1−ω2
is an ESS if the following conditions are satisfied:
{
a− b < 0, and
(bω1 − aω2)(ω2 − ω1) > 0.
(19)
Proof: At the rest point with x∗ = 0, by Lemma 1, we can
obtain lim
N→+∞ det(J11) ≥ 0 for the Jacobian if ω1 ≤ ω2, Then,
the Jacobian matrix is not negative definite. Alternatively, if
ω1 > ω2, we have lim
N→+∞ det(J11) < 0 and lim
N→+∞ det(J) < 0.
Again, the Jacobian matrix is also not negative definite. Then,
the rest point with x∗ = 0 is not an ESS. Following the same
procedure, we can show that the rest point with x∗ = 1 is not
evolutionary stable either.
Meanwhile, we know that any rest point in the interior of X
is an NE [10]. Then, for the NE with x∗ = a−b
Np(ω1−ω2)
2− ω2
ω1−ω2
,
following Lemma 1, we obtain
lim
N→+∞ det(J11) = lim
N→+∞
(
(a− b+ Npω2(ω2 − ω1))a(ω1 + ω2)
N(a− b)(ω1 − ω2)2
+ (a− b+ Npω2(ω2 − ω1))ω1(−2b+ Npω1(ω2 − ω1))
N(a− b)(ω1 − ω2)2
)
= lim
N→+∞
Np2ω1ω2
a− b
, (20)
lim
N→+∞ det(J) = lim
N→+∞
(
p(a− b+ Npω2(ω2 − ω1))
N(a− b)2(ω1 − ω2)
× (aω2 − bω1)(a− b+ Npω1(ω2 − ω1))
)
= lim
N→+∞
Np3ω1ω2(bω1 − aω2)(ω2 − ω1)
(a− b)2
. (21)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:08:07 UTC from IEEE Xplore.  Restrictions apply. 
LIU et al.: EVOLUTIONARY GAME FOR MINING POOL SELECTION IN BLOCKCHAIN NETWORKS 763
Fig. 1. (a) Evolution of the miners’ population states over time with two
mining pools, and (b) replicator dynamics of the pool-selection strategies and
the evolution trajectory from x(0) = (0.75, 0.25).
Fig. 2. (a) Stable population state vs. different delay coefficient, and
(b) average payoff of the miners vs. different delay coefficient.
By (20) and (21), the Jacobian matrix is negative definite if the
conditions given in (19) are satisfied. Hence the NE (x∗, 1−x∗)
is an ESS. Then, the proof to Theorem 1 is completed.
III. PERFORMANCE EVALUATION
In this section, we provide the numerical analysis of the
population state evolution in different conditions of the pool-
selection game. We first consider a network with N = 5000
individual miners, which evolve to form two mining pools
(i.e., M = 2). We set 1
γ c + b = 0.005, R = 1000, ρ = 2
and p = 0.01. We first set the mining strategy variables of
each pool as s1 = s2 = 100, ω1 = 30 and ω2 = 20 such
that the conditions in Theorem 1 are satisfied. Figure 1(a)
demonstrates the evolution of the population state from an
initial point x(0) = (0.75, 0.25). Figure 1(b) shows that with
the given parameter settings, the pool-selection game admits
a unique ESS of x∗ = (0.4, 0.6), which is in accordance with
our theoretical findings.
With the same network settings, we examine in Figure 2 the
evolution of the stable states and the corresponding average
payoff at the NE with respect to a different delay coefficient
1
γ c + b. Figure 2(a) shows that as 1
γ c + b increases, more
miners tend to join the pool with a smaller hash rate require-
ment (ω2 = 20). Jointly considering the payoffs at the NE
(see Figure 2(b)), we know that under the given network set-
tings, a larger delay coefficient leads to a higher probability of
orphaning the blocks of the same size. Therefore, the miners
prefer to join the pool that induces a lower mining cost.
Finally, we consider in Figure 3 a more general situation
with four mining pools, where the pools’ mining strategies are
set to be si = 100 (i ∈ {1, . . . , 4}), ω1 = 10, ω2 = 20, ω3 = 30
Fig. 3. (a) Evolution of the population states with four mining pools.
(b) Payoffs evolution of the different mining pools.
and ω4 = 40. We observe from Figure 3(a) that at the NE,
selecting the pool with the lowest hash rate requirement (i.e.,
pool 1) becomes the dominant strategy. Further, Figure 3(b)
indicates a situation where the mining process becomes a per-
fect competition market with an NE payoff of zero, and no
miner can switch its pool selection without undermining some
other miner’s payoff at the equilibrium.
IV. CONCLUSION
In this letter, we have studied the problem of mining pool
selection in a blockchain network adopting the proof-of-work
scheme. We have modeled the dynamics of pool selection
among individual miners as an evolutionary game. We have
considered the hash rate and propagation delay to be two
major factors that determine the outcome of the block mining
competition. Further, we have investigated the evolutionary
stability of the pool selection dynamics in the case of two
mining pools and revealed the conditions for the network to
admit a unique evolutionary stable state. Our numerical eval-
uation results have provided the numerical evidence for our
theoretical discoveries.
REFERENCES
[1] F. Tschorsch and B. Scheuermann, “Bitcoin and beyond: A technical sur-
vey on decentralized digital currencies,” IEEE Commun. Surveys Tuts.,
vol. 18, no. 3, pp. 2084–2123, 3rd Quart., 2016.
[2] J. Garay, A. Kiayias, and N. Leonardos, “The Bitcoin backbone pro-
tocol: Analysis and applications,” in Proc. Int. Conf. Theory Appl.
Cryptograph. Techn., Sofia, Bulgaria, Apr. 2015, pp. 281–310.
[3] M. Dong, X. Liu, Z. Qian, A. Liu, and T. Wang, “QoE-ensured
price competition model for emerging mobile networks,” IEEE Wireless
Commun., vol. 22, no. 4, pp. 50–57, Aug. 2015.
[4] X. Liu, M. Dong, K. Ota, P. Hung, and A. Liu, “Service pricing deci-
sion in cyber-physical systems: Insights from game theory,” IEEE Trans.
Services Comput., vol. 9, no. 2, pp. 186–198, Mar./Apr. 2016.
[5] P. R. Rizun, A Transaction Fee Market Exists Without A Block Size Limit,
Bitcoin Forum, Aug. 2015.
[6] N. Houy, “The Bitcoin mining game,” Ledger J., vol. 1, no. 13,
pp. 53–68, 2016.
[7] B. A. Fisch, R. Pass, and A. Shelat, “Socially optimal mining pools,” in
Proc. 13th Int. Conf. Web Internet Econ., Bengaluru, India, Dec. 2017,
pp. 205–218.
[8] J. W. Weibull, Evolutionary Game Theory. Cambridge, MA, USA:
MIT Press, 1997.
[9] J. Hofbauer and W. H. Sandholm, “Stable games and their dynamics,”
J. Econ. Theory, vol. 144, no. 4, pp. 1665–1693, 2009.
[10] R. Cressman, Evolutionary Dynamics and Extensive Form Games, vol. 5.
Cambridge, MA, USA: MIT Press, 2003.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 07:08:07 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZapfChancery-MediumItalic
    /ZapfDingBats
    /ZapfDingbatsITCbyBT-Regular
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice