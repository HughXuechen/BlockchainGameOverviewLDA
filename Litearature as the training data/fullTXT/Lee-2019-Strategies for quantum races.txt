Strategies for Quantum Races
Troy Lee
Centre for Quantum Software and Information, School of Software,
Faculty of Engineering and Information Technology, University of Technology Sydney, Australia
troyjlee@gmail.com
Maharshi Ray
Centre for Quantum Technologies, National University of Singapore, Singapore
maharshi91@gmail.com
Miklos Santha
IRIF, Univ. Paris Diderot, CNRS, 75205 Paris, France; and
Centre for Quantum Technologies and MajuLab,
National University of Singapore, Singapore 117543
miklos.santha@gmail.com
Abstract
We initiate the study of quantum races, games where two or more quantum computers compete
to solve a computational problem. While the problem of dueling algorithms has been studied
for classical deterministic algorithms [12], the quantum case presents additional sources of un-
certainty for the players. The foremost among these is that players do not know if they have
solved the problem until they measure their quantum state. This question of “when to measure?”
presents a very interesting strategic problem. We develop a game-theoretic model of a multi-
player quantum race, and find an approximate Nash equilibrium where all players play the same
strategy. In the two-party case, we further show that this strategy is nearly optimal in terms
of payoff among all symmetric Nash equilibria. A key role in our analysis of quantum races is
played by a more tractable version of the game where there is no payout on a tie; for such races
we completely characterize the Nash equilibria in the two-party case.
One application of our results is to the stability of the Bitcoin protocol when mining is done
by quantum computers. Bitcoin mining is a race to solve a computational search problem, with
the winner gaining the right to create a new block. Our results inform the strategies that eventual
quantum miners should use, and also indicate that the collision probability – the probability that
two miners find a new block at the same time – would not be too high in the case of quantum
miners. Such collisions are undesirable as they lead to forking of the Bitcoin blockchain.
2012 ACM Subject Classification Theory of computation → Algorithmic game theory
Keywords and phrases Game theory, Bitcoin mining, Quantum computing, Convex optimization
Digital Object Identifier 10.4230/LIPIcs.ITCS.2019.51
Related Version A full version of the paper is available at [14], https://arxiv.org/abs/1809.
03671.
Acknowledgements We would like to thank Gavin Brennen, Hartmut Klauck, and Marco Toma-
michel for very useful discussions about game theory and quantum Bitcoin mining. We would
also like to thank Or Sattath for sharing an early version of his work [18] and discussions about
its implications.
Part of this work was done while Troy Lee was at the School of Physical and Mathematical
Sciences, Nanyang Technological University and the Centre for Quantum Technologies, Singa-
pore. Troy Lee and Maharshi Ray were supported in part by the Singapore National Research
© Troy Lee, Maharshi Ray, and Miklos Santha;
licensed under Creative Commons License CC-BY
10th Innovations in Theoretical Computer Science (ITCS 2019).
Editor: Avrim Blum; Article No. 51; pp. 51:1–51:21
Leibniz International Proceedings in Informatics
Schloss Dagstuhl – Leibniz-Zentrum für Informatik, Dagstuhl Publishing, Germany
mailto:troyjlee@gmail.com
mailto:maharshi91@gmail.com
mailto:miklos.santha@gmail.com
https://doi.org/10.4230/LIPIcs.ITCS.2019.51
https://arxiv.org/abs/1809.03671
https://arxiv.org/abs/1809.03671
http://creativecommons.org/licenses/by/3.0/
http://www.dagstuhl.de/lipics/
http://www.dagstuhl.de
51:2 Strategies for Quantum Races
Fellowship under NRF RF Award No. NRF-NRFF2013-13. This research was further partially
funded by the Singapore Ministry of Education and the National Research Foundation under
grant R-710-000-012-135, and in part by the QuantERA ERA-NET Cofund project QuantAlgo.
1 Introduction
We study the scenario of two or more quantum computers competing to solve a computational
task, which we call a quantum race. This setting presents a different problem to finding the
fastest algorithm for a task, as the only goal is to solve the task before the competitors. For
example, imagine a search race where Alice and Bob, each armed with identical quantum
computers, compete to find a marked item in a database. The first person to find the marked
item wins $1, with the payout being split in the case of a tie. The first natural idea is for Alice
to run Grover’s algorithm [11], which can find a marked item in a database of size N with
high probability in time O(
√
N). However, if Alice’s strategy is to run Grover’s algorithm
and measure after the specified number of steps to maximize her success probability, Bob
will have an advantage by measuring after running Grover’s algorithm for a few less steps.
Although this way Bob has a slightly lower success probability, he gains a huge advantage in
always answering first. This simple example shows that the optimal algorithm to solve a
problem can be different from the optimal strategy to employ when the goal is to solve the
problem before an opponent.
The scenario of competing algorithms has been studied before in the classical deterministic
setting [12]. In a classical game, the uncertainty is provided by an unknown probability
distribution over the inputs: depending on what the input is, one algorithm may perform
better than another. The quantum setting inherently has additional sources of uncertainty,
most interestingly that players do not know if they have solved the problem until they
measure their quantum state. Going back to the search game, in the classical version the
players know at every instant if they have found the marked item or not. This is not the case
in the quantum setting, where a player can only tell if she has found the desired item by
measuring her quantum state. Furthermore, if she measures her state and does not find the
marked item, then she must begin the search again from scratch. In the quantum case there
is a natural tension between waiting to measure, and thereby building up the probability
of success upon measuring, and measuring sooner, to answer before one’s competitors. We
study this game theoretic problem to develop strategies for players to use in quantum races.
One of our main motivations for studying quantum races is to model quantum computers
mining the decentralized currency Bitcoin [16]. Mining is the process by which new blocks
of transactions are added to the history of Bitcoin transactions, called the blockchain. The
winner of a race to solve a computational search problem gains the right to add a new block
of transactions to the blockchain, and participants in this race are called miners. Quantum
miners could use Grover’s algorithm to solve the search problem with quadratically fewer
search queries than needed classically. But what should the strategy of quantum miners be
when competing against each other?
I Question 1. What is the optimal strategy for quantum miners?
Figuring out the optimal strategy for quantum miners is important to analyze the impact
of quantum mining on the stability of the Bitcoin protocol. When two miners solve the
computational search problem at (nearly) the same time, the blockchain can fork as it is
unclear which new block is the “correct” history of Bitcoin transactions. Forking is bad for
the security of Bitcoin as it can decrease the cost of attacks [10], increase the gain from
T. Lee, M. Ray, and M. Santha 51:3
deviating from the intended mining protocol [9], and generally decreases chain growth and
wastes resources. In the classical case, each search query has the same probability of success.
In the quantum case, however, because of Grover’s algorithm the success probability grows
roughly quadratically with the number of search queries. Does this lead to many quantum
miners finding blocks at the same time?
I Question 2. What is the probability that two or more quantum miners playing the optimal
strategy find a block at the same time?
In the next subsections, we describe our model and results in more detail and the impact it
has on these questions.
1.1 The model and results
In a symmetric game all players have the same payoff function. In his original paper defining a
Nash equilibrium, Nash showed that every symmetric multiparty finite game has a symmetric
equilibrium, i.e. one where all players play the same strategy [17]. When all players have
identical quantum computers, a quantum race is naturally a symmetric race, and we describe
this scenario first.
We model a symmetric multiplayer quantum race in the following way. The pure strategies
available to a player are the possible times at which she can measure 1, 2, 3, . . . ,K. For each
time t, a player has an algorithm that she can run for t steps and for which the success
probability is pt. Without loss of generality, we assume that these probabilities form an
increasing sequence 0 < p1 < p2 < · · · < pK ≤ 1. A general strategy is a probability
distribution over the possible times to measure. The player who succeeds first receives a
payoff of 1. In the case of a tie, the payoff is split amongst all players who succeed first at
the same time. Our model can be thought of as a “one-shot” race, as if a player measures
and does not succeed, she does not get a chance to restart and try again. While a race
where players are allowed to repeatedly restart until someone wins would be more realistic,
it becomes much more difficult to analyze due to the proliferation of possible stategies, and
we leave this for future work.
Two-player case
We begin explaining our model and results in more detail in the two-player case. In this case,
a game defined by the probabilities p1, . . . , pK can be represented by the payoff matrix for
Alice, given by the K-by-K matrix A, and the payoff matrix for Bob B. The (s, t) entry of
A gives Alice’s payoff when she runs an algorithm for time s and Bob plays time t. In the
case of a quantum race, this is defined as
A(s, t) =

ps if s < t
ps(1− ps) + 1
2p
2
s if s = t
ps(1− pt) if s > t .
(1)
As the game is symmetric, Bob’s payoff matrix is B = AT.
Our analysis of quantum races begins in Section 3 by analyzing a more tractable variant
of the game we call a stingy quantum race. In a stingy quantum race, there is no payout in
the case of a tie (the game organizer is stingy). A Nash equilibrium of a two-party stingy
quantum race has very strong constraints on its support structure (see Corollary 16). In
particular, if (x, y) is a Nash equilibrium in a two-party stingy quantum race, then the union
ITCS 2019
51:4 Strategies for Quantum Races
of the supports of x and y must be an interval {T, T + 1, . . . ,K} that contains the maximum
running time K. There are 3 possible types of Nash equilibria in a two-party stingy quantum
race, and we characterize all of them (see Theorem 22, and Appendix of [14].
One particularly nice type of equilibrium is what we call a coinciding equilibrium. In a
coinciding equilibrium, the support of all player’s strategies is the same, but the strategies
do not have to be identical. This is a more general notion than a symmetric equilibrium
where all strategies are the same. In a coinciding equilibrium for a stingy quantum race, the
support of each player’s strategy is an interval {T, T + 1, . . . ,K}. This leaves the problem
of determining the starting point T of this interval in a Nash equilibrium. We are able to
show that there is always exactly one T such that there is a Nash equilibrium with support
{T, T + 1, . . . ,K}.
I Theorem 3 (Informal, see Theorem 22). In a two-party stingy quantum race defined by
probabilities p1, . . . , pK , there is a unique coinciding Nash equilibrium. In this equilibrium
all players play the same strategy, and the support of the strategies is an interval {T ∗, T ∗ +
1, . . . ,K}.
We also explicitly find this Nash equilibrium.
This result begs the question: what is this value of T ∗? At what success probability
does it become worthwhile to start measuring? By putting an additional restriction on the
probabilities p1, . . . , pK , we can give quite a precise answer to this question. We say p1, . . . , pK
is an `-dense sequence (see Definition 13) if p1 ≤ `
K , pK ≥ 1 − `
K , and pi+1 − pi ≤ `
K for
i = 2, . . . ,K − 1. This is quite a natural restriction that is satisfied for many races. In the
quantum search race, where the pi are the Grover success probabilities, and therefore also in
the application to Bitcoin, the `-density condition is satisfied with ` = π/2. In the `-dense
case, we can give the following bound on T ∗.
I Theorem 4 (Informal, see Corollary 25 and Corollary 28). Let p1, . . . , pK be an `-dense
sequence with K ≥ 6`. Then the starting point T ∗ of the unique coinciding Nash equilibrium
in the stingy quantum race defined by these probabilities is such that pT∗ =
√
2− 1 + Θ
(
`
K
)
.
Thus it is worthwhile to start measuring once the success probability becomes around
√
2− 1,
and this is largely independent of the actual values of p1, . . . , pK .
In Section 4, we apply our analysis of two-player stingy quantum races to the case of
general quantum races. As the only difference between a stingy quantum race and a quantum
race is the payout on ties, intuitively strategies in these two kinds of races should have similar
payoffs when the probability of ties is small. We follow this intuition and show that when
p1, . . . , pK form an `-dense sequence the probability of a tie is O( `K ) (see Theorem 27) when
players use the unique coinciding equilibrium from the stingy race, and this strategy is an
O( `K )-approximate Nash equilibrium of the corresponding quantum race.
Approximate Nash equilibria are naturally an imperfect lens into true Nash equilibria.
The approximate Nash equilibrium we give would not be a reasonable suggestion for the
actual strategies of quantum players if there were other equilibria with much higher payoff,
for example. We show that this is not the case, and the approximate Nash equilibrium we
give is nearly optimal in terms of payoff amongst all symmetric equilibria.
I Theorem 5 (Informal, see Theorem 31 and Theorem 33). Let p1, . . . , pk be an `-dense
sequence with K ≥ 6`. Then the unique coinciding equilibrium of the two-player stingy
quantum race defined by these probabilities is an O( `K )-approximate Nash equilibrium in the
corresponding quantum race. Moreover, the payoff achieved by this strategy is within O(
√
`
K )
of the largest payoff achievable by any symmetric Nash equilibrium.
T. Lee, M. Ray, and M. Santha 51:5
To show that the approximate Nash equilibrium we give is nearly optimal in terms of
payoff (Theorem 33), we use the bilinear programming formulation of Nash equilbria due
to Mangasarian and Stone [15]. We exploit the properties of the sum of Alice’s and Bob’s
payoff matrices A+AT (from Eq. (1)). More specifically, It turns out that over a probability
simplex x, the quadratic form xT(A+AT)x is a negative-definite plus linear function. When
optimizing over symmetric strategies this makes the Mangasarian and Stone bilinear program
(which is a maximization problem) into a convex quadratic program. We then use Dorn’s
[8] equivalent dual formulation of a convex quadratic program (see Eq. (17)), which is a
minimization problem. We explicitly construct a feasible solution to this dual minimization
problem to upper bound the payoff of any symmetric Nash equilibrium. Our construction of
this dual solution again makes use of our analysis of stingy quantum races.
Multiplayer case
The case of many players is what we are interested in for the application to Bitcoin. Luckily,
we are able to recover analogs of many of the results from the two-player case in the
multiplayer case as well. We start in Section 5 by analyzing n-player stingy quantum races,
and show the following.
I Theorem 6 (Informal, see Theorem 41). Let p1, . . . , pK define an n-player stingy quantum
race. This race has a unique coinciding Nash equilibrium, and in this equilibrium all players
play the same strategy. The support of each strategy is an interval {T ∗, T ∗ + 1, . . . ,K}.
To show that an n-player stingy quantum race has a unique coinciding Nash equilibrium, our
proof proceeds through a 2-player asymmetric stingy quantum race. In a 2-player asymmetric
race, Alice has probabilities p1, . . . , pK of succeeding after t steps and Bob has a (potentially
different) sequence of probabilities P1, . . . , PK . An asymmetric race models the case where
Alice and Bob have quantum computers of potentially different speeds. We relate the payoff
for Alice in a n-player stingy quantum race to the payoff for Alice in a 2-player quantum
race against a more powerful opponent (see Lemma 40). We can then refer to Theorem 21 in
Section 3 which completely characterizes coinciding equilibria in asymmetric 2-player stingy
quantum races. This gives Theorem 6.
When the sequence p1, . . . , pK is `-dense, we can also say something about the starting
point T ∗ of the n-player coinciding equilibrium, though not as precisely as in the two-party
case.
I Theorem 7 (Informal, see Theorem 44). Let p1, . . . , pK be an `-dense sequence defining
a stingy n-player quantum race with n ≥ 2. If K ≥ 4e`n then the starting point T ∗ of the
unique coinciding equilibrium is such that pT∗ = Θ( 1
n ).
This means that the more players there are in a game, the earlier one starts to measure in
the unique coinciding equilibrium.
In light of Question 2 we also want to see what the probability of more than one player
succeeding at the same time in this unique coinciding equilibrium. We show the following.
I Theorem 8. Let P1, ...., PK define an `-dense stingy n-player quantum race such that
4en` ≤ K. When the players play the coinciding equilibrium of the stingy race, the probability
that two or more players succeed at the same time is at most 8en`
K .
Finally, as in the two-party case, we show that the unique coinciding equilibrium of a
stingy race is also an approximate Nash equilibrium in the corresponding quantum race,
provided the sequence of probabilities is `-dense.
ITCS 2019
51:6 Strategies for Quantum Races
I Theorem 9. Let P1, ...., PK define an `-dense stingy n-player quantum race, n ≥ 2, with
4en` ≤ K. If x = (x1, ..., xn) is the coinciding Nash equilibrium for this stingy race, then x
is an 8e`
K - approximate Nash equilibrium of the corresponding quantum race.
1.2 Application to Bitcoin
One application of our study of quantum races is to the decentralized digital currency
Bitcoin, developed in 2008 by Satoshi Nakamoto [16]. Bitcoin transactions are packaged into
blocks and stored in a public ledger called the blockchain. A major obstacle in creating a
decentralized currency is to find a way for all parties to agree on the history of transactions.
In Bitcoin, this is done through Nakamoto consensus: the right to create a new block is
decided through proof-of-work, a contest to solve a computational problem. The winner
of this contest has the right to make a new block of transactions, is given a reward in
bitcoin, and then the process repeats itself. The players competing in this process are called
miners. Nakamato consensus remains the primary means of achieving consensus across
all cryptocurrencies, although there are coins using other consensus mechanisms such as
proof-of-stake [13] or Byzantine agreement [6].
The proof-of-work task used in Bitcoin (originally developed in a system called Hashcash
[2]) is essentially a search problem. The problem is to find a value x (called a nonce) such
that h(H ‖ x) ≤ t, where h is a hash function (doubly iterated SHA-256 in the case of
Bitcoin), H is the header of the block of transactions to be processed, and t is a hardness
parameter that can be varied so that the entire network takes 10 minutes to solve this task,
on average.
Several works have studied the impact that quantum computers would have on the Bitcoin
protocol [5, 1, 18], both on the mining process we have described above and on the digital
signatures used in Bitcoin to authenticate ownership of coins. We will focus here on the
impact of quantum computers on Bitcoin mining.
As the Bitcoin proof-of-work is a search task, quantum miners could use Grover’s algorithm
to find a nonce x satisfying h(H ‖ x) ≤ t with quadratically fewer evaluations of the hash
function h than is needed by a classical computer 1. The use of Grover’s algorithm creates
new issues for proof-of-work that do not exist in the classical case. Desirable properties of
a proof-of-work task have been studied from an axiomatic point of view by Biryukov and
Khovratovich [3]. One property they give is progress-freeness: the probability of a miner
solving the proof-of work task in any moment is independent of previous events. This is
achieved for a classical miner in the Bitcoin proof of work, as every call to the hash function
is equally likely to find a good nonce x. Progress-freeness is not achieved for a quantum
miner running Grover’s algorithm, as the success probability grows roughly quadratically
with the amount of time the algorithm is run.
Sattath [18] points out that this gives a way for quantum miners to deviate from the
prescribed protocol in order to increase their chance of winning a block. To explain this
deviation, imagine a simplified case where the proof-of-work is to find a unique marked item
in a database of size N . Say that Alice, a quantum miner, receives a new block from the
network which was found by Bob. When Alice receives this block she will be in the middle
of running Grover’s algorithm to find the marked item herself. The prescribed protocol
says that she should immediately halt this run of Grover’s algorithm and begin working
1 While this seems to give quantum computers a huge advantage for Bitcoin mining, specialized classical
Bitcoin mining hardware currently can perform14 trillion hashes per second [4] and would outperform a
near-term quantum computer with gate speeds of 100MHz [1]
T. Lee, M. Ray, and M. Santha 51:7
on a new search problem by mining on top of Bob’s new block. However, if Alice has run
Grover algorithm for c
√
N steps, for a constant c, she will have already built up a constant
probability of finding the marked item upon measuring. From the point of view of maximizing
her payoff, there is no harm in just measuring to see if she finds the marked item. If Alice
gets lucky and indeed finds the marked item, then she can broadcast her new block to the
network. Depending on her connectivity to the network, some other miners may receive
Alice’s block before Bob’s, and there is some probability that Alice’s new block eventually
becomes the block accepted by the network rather than Bob’s, meaning that Alice will receive
the bitcoin reward. Note that this does not happen in the classical case, where after Alice
receives Bob’s block she would still just have probability 1/N to find the marked item with
each additional search query. In this case it makes sense to immediately start mining on top
of the new block.
Luckily, Sattath also provides an easy fix for the Bitcoin protocol to remedy this problem.
Without going into the technical details, this fix essentially forces miners to commit to how
long they will run Grover’s algorithm before they begin. Thus if Alice commits to running
Grover’s algorithm for time
√
N/100, yet receives Bob’s block after time
√
N/200, if she
tries to immediately measure and publish her own block, the network will reject it because
of the timing discrepancy. This fix fits in very well with our model of quantum races, as a
strategy is exactly a probability distribution over choices of times to measure.
The quantum race that captures the case of Bitcoin mining is what we call the Grover
race (see Definition 12). In this race, the success probability pt is given by the success
probability of t-iterations of Grover’s algorithm 2. This race is an `-dense race for ` = π/2.
The size of the search space, and thus the maximum number of iterations K to run Grover’s
algorithm, is determined by the difficulty setting of the Bitcoin protocol. Currently the
difficulty (as of September 7, 2018) is approximately 7 · 1012, which, by Bitcoin’s definition of
difficulty, means that the network has to do roughly 232 · 7 · 1012 many hashes to succeed, in
expectation. This leads to a value of K of approximately 1011. Thus for this application `
K
is very small, and Theorem 9 implies that the unique coinciding equilibrium for the stingy
Grover race is an ε-approximate Nash equilibrium in the Grover race for ε ≤ 3 · 10−10. This
gives a reasonable answer to Question 1 for what a good strategy would be for quantum
miners, and moreover has the desirable property that all miners run the same algorithm. By
Theorem 8, when there are n miners running this strategy the probability of a tie is at most
3n · 10−10. This gives an answer to Question 2, that quantum mining is not likely to produce
a high forking rate and thereby destabilize the Bitcoin protocol.
2 Preliminaries
We use e ≈ 2.71828 for Euler’s number. For a probability 0 ≤ p ≤ 1, we set p̄ = 1− p. For a
natural number n, we let [n] = {1, ..., n}. We let ∆n = {x ∈ Rn : x ≥ 0,
∑n
i=1 xi = 1} be the
probability simplex. For x ∈ ∆n we let sup(x) = {i ∈ [n] : xi > 0} be the support of x.
I Definition 10 (quantum race). A 2-player quantum race is specified by two sequences of
increasing probabilities 0 < p1 < p2 < · · · < pK ≤ 1, and 0 < P1 < P2 < · · · < PK ≤ 1 for
some integer K ≥ 2. The set of pure strategies of both players is [K]. The K ×K payoff
2 It is known that t queries of Grover’s algorithm maximizes the probability of success in a search problem
over all t-query quantum algorithms [7].
ITCS 2019
51:8 Strategies for Quantum Races
matrix A of Alice and B of Bob are defined as
A(i, j) =

pi if i < j,
piP̄j + 1
2piPi if i = j,
piP̄j otherwise.
B(i, j) =

Pj if j < i,
Pj p̄i + 1
2piPi if i = j,
Pj p̄i otherwise.
If pi = Pi for all i = 1, . . . ,K then we call the game a symmetric quantum race. Note that
in this case B = AT.
In our study of quantum races, a key role will be played by an auxiliary game that is easier
to analyze called a stingy quantum race. A stingy quantum race differs from a quantum race
only in that no payout is given in the case of a tie.
I Definition 11 (stingy quantum race). A 2-player stingy quantum race is specified by two
sequences of increasing probabilities 0 < p1 < p2 < · · · < pK ≤ 1, and 0 < P1 < P2 < · · · <
PK ≤ 1 for some integer K ≥ 2. The set of pure strategies of both players is [K]. The K×K
payoff matrix A0 of Alice is defined as
A0(i, j) =
{
pi if i < j,
piP̄j otherwise.
The payoff matrix of Bob B0 is defined as
B0(i, j) =
{
Pj if j < i,
Pj p̄i otherwise.
If pi = Pi for all i = 1, . . . ,K then we call the game a symmetric stingy quantum race. Note
that in this case B0 = AT
0 .
The main specific quantum race we will be interested in is the Grover race. This results
from two players competing to find a marked item in a database and playing by running
Grover’s algorithm for a certain amount of time and then measuring. Formally, the race is
defined as follows.
IDefinition 12 (Grover race). We define the (stingy) Grover race onN items as the symmetric
(stingy) quantum race with K =
⌈
π
4
√
N − 3/2
⌉
and pt = sin2
(
2(t+ 1/2) arcsin
(
1√
N
))
, for
1 ≤ t ≤ K.
Here pt is the success probability of Grover’s algorithm of finding a unique marked item in
a database of N items. It is known that pt is the highest success probability for finding a
marked item for any quantum algorithm making t many calls to the database [7].
The Grover race has many nice properties, and we will abstract out one of them here.
This allows us to show results for a general class of quantum races, rather than just the
Grover race.
I Definition 13 (dense race). Let p1 < p2 < · · · < pK ≤ 1. We call the sequence (p1, . . . , pK)
`-dense if p1 ≤ `
K , pK ≥ 1 − `
K , and pi+1 − pi ≤ `
K for all i = 1, . . . ,K − 1. For a dense
sequence (p1, . . . , pK) will similarly call the symmetric (stingy) quantum race defined by this
sequence a symmetric (stingy) `-dense quantum race.
The (stingy) Grover race is an `-dense race with ` = π/2.
T. Lee, M. Ray, and M. Santha 51:9
3 Two-player stingy quantum races
We will first analyze Nash equilibria in stingy quantum races. We can show several structural
properties about the support of Nash equilibria in stingy quantum races that make them
easier to analyze than quantum races. After our analysis in this section, we will bootstrap
our knowledge of Nash equilibria in stingy quantum races to find an approximate Nash
equilibrium for quantum races.
Consider a stingy quantum race given by the probabilities 0 < p1 < p2 < · · · < pK ≤ 1
and 0 < P1 < P2 < · · · < PK , and let y be a mixed strategy of Bob. For t ≤ K, we let
sup≤t(y) = {j ∈ sup(y) : j ≤ t} be the set of times played by Bob that are at most t, and
similarly, we let sup>t(y) = {j ∈ sup(y) : j > t} be the set of times played by Bob that are
greater than t. Observe that when Alice plays the pure strategy t against y, her payoff is
eT
t Ay = pt
 ∑
j∈sup≤t(y)
yjP̄j +
∑
j∈sup>t(y)
yj
 .
I Claim 14. Let (x, y) be a Nash equilibrium of a 2-player stingy quantum race. If t1 ∈ sup(x)
then there does not exist t2 > t1 with sup≤t1(y) = sup≤t2(y).
Proof. Say that the game is defined by probabilities 0 < p1 < p2 < · · · < pK ≤ 1 and
0 < P1 < P2 < · · · < Pk If sup≤t1(y) = sup≤t2(y) then
eT
t2Ay = pt2
pt1
eT
t1Ay.
As pt1 < pt2 , the payoff for playing t2 is strictly larger than that for playing t1. Therefore t1
is not a best response for y, in contradiction with the definition of a Nash equilibrium. J
This claim implies that the support structure of Nash equilibria in stingy quantum races
is relatively simple. We first make the following definition.
I Definition 15. A pair of strategies (x, y) is called coinciding if sup(x) = sup(y). A
pair of strategies (x, y) is called alternating if there exists 1 ≤ t1 < t2 ≤ K such that the
support of one player is {t1, t1 + 2, . . . , t2 − 1} and the support of the other is sup(y) =
{t1 + 1, t1 + 3, . . . , t2}. A pair of strategies (x, y) is called (t1, c, t2)-alternating-coinciding
if there are natural numbers 1 ≤ t1 < t2 ≤ K and t1 + 2 ≤ c ≤ t2 such that the support
of one player is {t1, t1 + 2, . . . , c − 2, c, c + 1, c + 2, . . . , t2} and the support of the other is
sup(y) = {t1 + 1, t1 + 3, . . . , c− 3, c− 1, c, c+ 1, c+ 2, . . . , t2}.
I Corollary 16. Let (x, y) be a Nash equilibrium of a stingy quantum race specified by
probabilities 0 < p1 < p2 < · · · < pK ≤ 1 and 0 < P1 < P2 < · · · < Pk. Then there is some
1 ≤ T ≤ K such that
sup(x) ∪ sup(y) = [T,K] ,
(x, y) is either coinciding, alternating, or alternating-coinciding.
Proof. From Claim 14 we can easily derive the following two statements:
sup(x) ∪ sup(y) is an interval containing the time with maximum success probability,
For every t1, t2 ∈ sup(x) there must be t ∈ sup(y) with t1 < t ≤ t2.
These statements immediately imply the claim. J
We now study the particularly simple coinciding equilibria. Due to space constraints we
do not discuss the other types of equilibria here. However, we give a full characterization of
all Nash equilibria in a symmetric stingy quantum race in the full version of the paper [14].
ITCS 2019
51:10 Strategies for Quantum Races
3.1 Unique coinciding equilibrium
We first look for Nash equilibria where the mixed strategies of Alice and Bob have the same
support. If the number of strategies is K, we know by Corollary 16 that this support must
be a set {T, T + 1, . . . ,K}, for some 1 ≤ T ≤ K.
I Lemma 17. Consider a stingy quantum race defined by 0 < p1 < . . . < pK ≤ 1 and
0 < P1 < P2 < · · · < Pk. Let x, y ∈ RK . Then (x, y) is a Nash equilibrium for this game with
support {T, T + 1, . . . ,K}, for some 1 ≤ T ≤ K, if and only if x and y satisfy the following
system of equations and inequalities.
eT
t Ay = eT
TAy, for T < t ≤ K , (2)
eT
T−1Ay ≤ eT
TAy, (3)
yt = 0 for 0 < t < T , (4)
yt > 0 for T ≤ t ≤ K , (5)
K∑
t=T
yt = 1 (6)
xTBet = xTBeT , for T < t ≤ K , (7)
xTBeT−1 ≤ xTBeT , (8)
xt = 0 for 0 < t < T , (9)
xt > 0 for T ≤ t ≤ K , (10)
K∑
t=T
xt = 1 . (11)
Proof. Eq. (4)–(6) and (9)–(11) express that x and y are probability distributions with
support {T, T +1, . . . ,K}. The other conditions for a Nash equilibrium are that all strategies
in the support of x are best responses against y and vice versa. That all strategies in the
support of x are best responses against y means
eT
t Ay = eT
TAy, for T < t ≤ K ,
eT
t−1Ay ≤ eT
t Ay, for 1 ≤ t < T.
The first equation here is exactly Eq. (2). The inequality here is implied by Eq. (3). This
is because for t < T − 1, eT
t Ay = pt
pT −1
eT
T−1Ay, as sup≤T−1(y) = sup≤t(y). A similar
argument show that Eq. (7)–(8) show that all strategies in the support of y are best responses
against x. J
When PK = 1, then Alice has zero payoff on playing time K. Thus as long as K ≥ 2,
when PK = 1 there is no coinciding Nash equilibrium (x, y) where sup(x) = sup(y) = {K}.
A similar argument applies when pK = 1. We will therefore exclude the case T = K and
either pK = 1 or PK = 1 for the next definition and Lemma 19.
I Definition 18. We define the values qAT , qBT , for T = 2, . . . ,K, and rAT , r
B
T , z
A
T , z
B
T , for
T = 1, . . . ,K − 1. The values zAK , rAK are not defined when T = K, pK = 1 and zBK , rBK are
T. Lee, M. Ray, and M. Santha 51:11
not defined when T = K,PK = 1.
qAi = 1
pi
(
1
Pi−1
− 1
Pi
)
, qBi = 1
Pi
(
1
pi−1
− 1
pi
)
,
rAT = 1
p̄T
(
1
PK
−
K∑
i=T+1
p̄iq
A
i
)
, rBT = 1
P̄T
(
1
pK
−
K∑
i=T+1
P̄iq
B
i
)
,
zAT = rAT +
K∑
i=T+1
qAi , zBT = rBT +
K∑
i=T+1
qBi .
I Lemma 19. For every 1 ≤ T ≤ K − 1, and the case T = K and PK 6= 1, the system of
linear equations composed of the Eq. (2), (4) and (6) of Lemma 17 has a unique solution
given by
yt =

rBT /z
B
T if t = T,
qBt /z
B
T if T < t ≤ K,
0 otherwise .
Proof. For convenience, we drop the normalization condition
∑K
t=T yt = 1 and instead scale
y such that the expected payoff of a best response is 1. That is, we replace Eq. (6) by
Eq. (12):
eT
TAy = 1. (12)
Clearly the solutions of Eq. (2),(4),(6) and the solutions of Eq. (2),(4),(12) differ only by
a constant multiplicative factor, and from a solution of the latter system a solution of the
former one can be obtained by dividing it coordinate-wise by
∑K
t=T yt.
We first want to find the solutions of Eq. (2) and (12). Together, they can be expressed
in matrix form as:
pT P̄T pT pT · · · pT
pT+1P̄T pT+1P̄T+1 pT+1 · · · pT+1
pT+2P̄T pT+2P̄T+1 pT+2P̄T+2 · · · pT+2
...
. . .
...
pK P̄T pK p̄T+1 pK P̄T+2 · · · pK P̄K


yT
yT+1
yT+2
...
yK
 =

1
1
1
...
1
 . (13)
We can simplify the above system of linear equations as follows:
0 PT+1 0 · · · 0
0 0 PT+2 · · · 0
0 0 0 · · · 0
...
. . .
...
P̄T P̄T+1 P̄T+2 · · · P̄K


yT
yT+1
yT+2
...
yK
 =

1/pT − 1/pT+1
1/pT+1 − 1/pT+2
1/pT+2 − 1/pT+3
...
1/pK
 .
From this we can see that, for every 1 ≤ T ≤ K, Eq. (13) has a unique solution, given by
yT = rBT , and yt = qBt , for T < t ≤ K. J
I Definition 20. Define T ∗A (respectively T ∗B) as the smallest integer 1 ≤ T ≤ K such that
rAT > 0 (respectively rBT > 0). When T ∗A = T ∗B we denote their common value as T ∗.
This definition makes sense as in the case pK = 1 (when rAK is not defined) we see that
rAK−1 > 0 and otherwise rAK = 1
p̄KPK
> 0. A similar argument applies for rBK .
ITCS 2019
51:12 Strategies for Quantum Races
I Lemma 21. Eq. (2)–(6) have a solution if and only if T = T ∗B. In the case T = T ∗B, the
solution is unique and is given by
yt =
{
rBT∗
B
/zBT∗
B
if t = T ∗B ,
qBt /z
B
T∗
B
if T ∗B < t ≤ K.
Proof. Refer [14]. J
The following theorem characterizes the coinciding Nash equilibria in a stingy quantum
race.
I Theorem 22. A stingy quantum race defined by probabilities 0 < p1 < . . . < pK ≤ 1 and
0 < P1 < . . . < PK ≤ 1 has a coinciding Nash equilibrium if and only if T ∗A = T ∗B. In this
case, letting T ∗ = T ∗A = T ∗B there is a unique coinciding equilibrium given by
xt =
{
rAT∗/zAT∗ if t = T ∗,
qAt /z
A
T∗ if T ∗ < t ≤ K
, yt =
{
rBT∗/zBT∗ if t = T ∗,
qBt /z
B
T∗ if T ∗ < t ≤ K .
In particular, when pi = Pi for all 1 ≤ i ≤ K then (x, x) is the unique coinciding Nash
equilibrium.
Proof. By Lemma 17 a coinciding Nash equilibrium (x, y) supported on {T, T + 1, . . . ,K}
must satisfy Eq. (2)–(11). By Theorem 21, Eq. (2)–(6) are satisfied if and only if T = T ∗B and
y is given as in the Lemma. We can also apply Theorem 21 to (the transpose of) Eq. (7)–(11)
to see that they have a solution if and only if T = T ∗A and x is given by
xt =

rAT∗
A
/zAT∗
A
if t = T ∗A,
qAt /z
A
T∗
A
if T ∗A < t ≤ K,
0 otherwise.
As x and y must have the same support in a coinciding Nash equilibrium, there can only
exist a coinciding Nash equilibrium if T ∗A = T ∗B .
When pi = Pi for all 1 ≤ i ≤ K then clearly rAT = rBT and qAi = qBi and it will always be
the case that T ∗A = T ∗B . Thus there will always exist a Nash equilibrium in this case, given
by the unique solution to Eq. (2)–(11). J
3.2 Payoff and collision probability
In this section we will explore the consequences of the coinciding Nash equilibrium we have
found for the payoff of the game and for the probability that the two players win at the same
time, the collision probability. For these results, we will only consider the symmetric case
when there is always a unique symmetric equilibrium whose support begins at T ∗ = T ∗A = T ∗B .
Note that the payoff for each player with this strategy is 1
zT ∗ . Since a player receives payoff
1 upon winning, 1
zT ∗ is also exactly the each player’s winning probability.
To investigate the collision probability, we will also make the following definitions.
I Definition 23 (Unnormalized collision probability). Define
σ(T ) = p2
T r
2
T +
K∑
i=T+1
p2
i q
2
i .
T. Lee, M. Ray, and M. Santha 51:13
With this definition, 1
z2
T ∗
σ(T ∗) is the collision probability we are interested in. First we
analyze the payoff in a symmetric stingy quantum race.
I Theorem 24. Let p1 < p2 < · · · < pK define a stingy symmetric quantum race. Then
zT∗ = 1 +
√
1 + 1
p2
K
+ σ(T ∗). In particular, 1
zT ∗ ≤
√
2− 1.
Proof. Refer [14]. J
I Corollary 25. If T ∗ ≥ 2 then
pT∗−1 ≤
√
2− 1 .
Proof. As can be seen from Bob playing time T ∗ − 1, we have pT∗−1zT∗ ≤ 1, thus pT∗−1 ≤√
2− 1 by Theorem 24. J
Although Theorem 24 gives an exact expression for the payoff, we would like to get a
general lower bound on the payoff. This requires showing an upper bound on the collision
probability. Showing an upper bound on the collision probability is also important for the
application to Bitcoin, to estimate the forking probability amongst quantum miners.
The first step to upper bounding the collision probability is to get a rough lower bound on
pT∗ . This is our initial bootstrap, which will then let us upper bound the collision probability
and then in turn get a sharper lower bound on pT∗ in Corollary 28. For these results we
restrict to `-dense stingy quantum races.
I Lemma 26. Let p1, . . . , pK define an `-dense symmetric stingy quantum race. If K ≥ 6`
then pT∗ > 5
21 . In particular, T ∗ ≥ 2.
Proof. Refer [14]. J
I Theorem 27. Let p1, . . . , pK define an `-dense symmetric stingy quantum race. If K ≥ 6`
then
σ(T ∗)
z2
T∗
≤ 6`
K
and σ(T ∗) ≤ 196`
K
.
Proof. Refer [14]. J
Now that we have an upper bound on the collision probability, we obtain the following
corollary to Theorem 24.
I Corollary 28. Let p1, . . . , pK define an `-dense symmetric stingy quantum race. Let
τ = 50
√
2`
K . If K ≥ 6` then
zT∗ ≤
√
2 + 1 + τ,
1
zT∗
≥
√
2− 1− τ(
√
2− 1)2, pT∗ ≥
√
2− 1− τ(
√
2− 1)2 .
Proof. Refer [14]. J
ITCS 2019
51:14 Strategies for Quantum Races
4 Two-player quantum races
In this section, we bootstrap our results about symmetric stingy quantum races to analyze
symmetric quantum races. Our main results are two-fold.
1. The unique coinciding Nash equilibrium in an `-dense symmetric stingy quantum race is
an approximate Nash equilibrium in the corresponding quantum race.
2. The approximate Nash equilibrium from (1) achieves a payoff which is nearly optimal
among all symmetric Nash equilibria in a symmetric quantum race.
The intuition for item (1) is clear. The only difference between a stingy quantum race
and a quantum race is the payoff on ties. For the unique coinciding Nash equilibrium we
have shown that the collision probability is O(`/K), thus the change in payoff on ties will
make only a small change to the payoffs under this strategy.
For item (2), we use the quadratic programming characterization of Nash equilibria [15].
Consider a game (A,B) where A,B are m-by-n matrices. The program
maximize
x∈∆m,y∈∆n,α,β∈R
xT (A+B)y − α− β
subject to Ay ≤ α1,
BTx ≤ β1,
(14)
has an optimal value of 0, and any (x, y) attaining the value 0 is a Nash equilibrium. In
the case of a symmetric quantum race (A,AT ), when we restrict to symmetric strategies
(x, x) the objective function in Eq. (14) becomes negative definite plus linear, making this a
standard quadratic program. We then use the tight dual formulation of a quadratic program
[8] to give an upper bound on the payoff of any symmetric Nash equilibrium, by explicitly
constructing solutions to the dual problem. This allows us to show that the payoff of the
unique coinciding equilibrium in a stingy race achieves a payoff which is within O(
√
`/K) of
optimal amongst all symmetric equilibria in the corresponding quantum race.
We now proceed to show these two results.
4.1 Approximate Nash equilibrium
I Definition 29. A two-player game described by payoff matrices (A,B) is said to have an
ε-approximate Nash equilibrium (p, q), for ε ≥ 0, if the following two conditions hold
pTAq ≥ vTAq − ε for all v ∈ ∆m (15)
pTBq ≥ pTBu− ε for all u ∈ ∆n . (16)
I Definition 30. A two-player game described by payoff matrices (A,B) is said to have an
ε-well supported Nash equilibrium (p, q), for ε ≥ 0 if
eT
i Aq ≥ eT
j Aq − ε for all i ∈ sup(p) and j ∈ [m]
pTBei ≥ pTBej − ε for all i ∈ sup(q) and j ∈ [n] .
Note that an ε-well supported Nash equilibrium is also an ε-approximate Nash equilibrium,
but the reverse does not hold.
I Theorem 31. Let p1, . . . , pK be an `-dense sequence defining the symmetric stingy quantum
race (A0, A
T
0 ) and the symmetric quantum race (A,AT ). Let (x, x) be the unique coinciding
Nash equilibrium for the stingy quantum race (A0, A
T
0 ) given by Theorem 22. Then (x, x) is
a 7(
√
2−1)`
K -well supported Nash equilibrium in the quantum race (A,AT ).
T. Lee, M. Ray, and M. Santha 51:15
Proof. To show that (x, x) is an ε-well supported Nash equilibrium in the quantum race
(A,AT ) it suffices to show that eT
i Ax ≥ eT
j Ax− ε for all T ∗ ≤ i ≤ K and j ∈ [K]. We omit
the details of the proof here and refer the readers to [14]. J
4.2 Upper bound on payoff
Let (x, x) be the unique coinciding Nash equilibrium in an `-dense symmetric stingy quantum
race (A0, A
T
0 ). We have just shown that (x, x) is a 7(
√
2−1)`
K -well supported Nash equilibrium
in the corresponding quantum race (A,AT). By Corollary 28, (x, x) achieves payoff at least√
2− 1− 50
√
2(
√
2− 1)2 `
K in the game (A,AT). In this section, we show that this payoff is
within O(
√
`/K) of optimal among all symmetric strategies (y, y) for the game (A,AT).
Our starting point is to use the program in Eq. (14) to provide a means to upper bound
the value of any symmetric equilibrium.
I Lemma 32. Let (A,AT ) be a symmetric game and define for c ≥ 0
γA(c) = maximize
x
1
2x
T (A+AT )x
subject to Ax ≤ c1,
1Tx = 1, x ≥ 0.
For all c0, such that γA(c) < c for all c ≥ c0, the payoff of any symmetric Nash equilibrium
in the game (A,AT) is less than c0.
Proof. We show the contrapositive. Suppose there is a symmetric Nash equilibrium (x, x)
with payoff c ≥ c0. Then (x, x, c, c) is a feasible solution to the program in Eq. (14) with
objective value 0. Thus Ax ≤ c and 1
2x
T(A+AT)x = c. J
This is the approach we take to upper bounding the payoff of symmetric Nash equilibria
in a quantum race.
I Theorem 33. Let p1, . . . , pK be an `-dense sequence with K ≥ 6`. Then any symmetric
Nash equilibrium (x, x) in the two-player quantum race defined by p1, . . . , pK has payoff at
most
√
2− 1 + 5
√
`
K .
Proof. Let (A,AT) be the payoff matrices of a two-player quantum race defined by p1, . . . , pK .
We will show that γA(c) < c for all c >
√
2 − 1 + 5
√
`
K . By Lemma 32 this proves the
theorem.
In the case of a quantum race A + AT = p1T + 1pT − ppT. This means that over the
probability simplex, the quadratic form xT(A+ AT)x = −xT(ppT)x+ 2pTx is a negative-
definite plus linear function. In this case, γA(c) is in the standard form of a quadratic
program and has a dual program with matching value [8].
γA(c) = minimize
v∈RK ,λ,d∈R
1
2λ
2 + c · 1Tv + d
subject to AT v ≥ (1− λ)p− d1 ,
v ≥ 0.
(17)
Our approach will be to construct a feasible solution to Eq. (17) to demonstrate that
γA(c) < c for all c >
√
2− 1 + 5
√
`
K .
ITCS 2019
51:16 Strategies for Quantum Races
First note that for c > 1
2 there is a trivial solution where λ = 1, d = 0 and v is the all-zero
vector which shows that γ(c) < c. We now focus on the case c ≤ 1
2 . Let
√
2− 1 ≤ c ≤ 1
2 . We
will develop a lower bound on c which implies γA(c) < c.
Let S be the smallest index i such that pi ≥ c. Note that as A is an `-dense quantum
race we have pS ≤ c+ `
K . We let
d = (1− λ)
(
1 + pK −
pK
pS
)
and
v(i) =

0 if 1 ≤ i < S
(1− λ− d)pS
p̄S
1
pi
(
1
pi
− 1
pi+1
)
if S ≤ i < K
(1− λ− d) pS
p2
K
p̄S
− (1−λ)
pK
if i = K .
The choice of v comes from solving the system of linear equations (AT
0 v)i = (1− λ)pi − d for
S ≤ i ≤ K. The parameter λ will be chosen later.
Let us see that v satisfies the constraints of Eq. (17). Note that 1− λ− d = (1− λ)pK p̄S
pS
.
Thus v(K) = 0 and v ≥ 0 so long as λ ≤ 1.
As mentioned, by construction v satisfies (AT0 v)i = (1− λ)pi − d for S ≤ i ≤ K. Thus as
A = A0 + 1
2diag(p)2 and v ≥ 0 we also have (AT v)i ≥ (1− λ)pi − d for S ≤ i ≤ K.
For i < S we have that
(AT v)i ≥ (AT0 v)i = p̄ip
T v ≥ p̄SpT v = (1− λ)pS − d ≥ (1− λ)pi − d .
Thus the constraint AT0 v ≥ (1−λ)p−d1 is satisfied. We have shown that v is a feasible solution
for any choice of λ ≤ 1. We now choose λ to minimize the objective value. Substituting our
choices of v, d into the objective value we have
γA(c) ≤ 1
2λ
2 + (1− λ)
(
1 + pK −
pK
pS
)
+ c(1− λ)pK
K−1∑
i=S
1
pi
(
1
pi
− 1
pi+1
)
= 1
2λ
2 + (1− λ)
(
1 + pK
(
− p̄S
pS
+ c ·
K−1∑
i=S
1
pi
(
1
pi
− 1
pi+1
)))
Define
β(c) = 1 + pK
(
− p̄S
pS
+ c ·
K−1∑
i=S
1
pi
(
1
pi
− 1
pi+1
))
.
The objective value 1
2λ
2 + (1 − λ)β(c) is minimized over λ by taking λ = β(c). This
makes the objective value β(c) − β(c)2/2. We have now reduced the problem to showing
β(c)− β(c)2/2− c < 0. The roots of the corresponding quadratic equation are 1±
√
1− 2c.
Note that c ≤ 1/2, thus the square root term will be real. Thus we will simultaneously have
β(c) ≤ 1 and β(c) − β(c)2/2 < c when β(c) < 1 −
√
1− 2c. In Lemma 34, we show that
β(c) < 1−
√
1− 2c when
√
2− 1 + 5
√
`
K ≤ c ≤
1
2 . This will conclude the proof. J
I Lemma 34. β(c) < 1−
√
1− 2c for any
√
2− 1 + 5
√
`
K ≤ c ≤
1
2 .
Proof. Refer [14]. J
T. Lee, M. Ray, and M. Santha 51:17
5 Multiplayer quantum races
5.1 Basic properties
For an integer n ≥ 2, an n-player game is specified by a set of pure strategies Si, and payoff
functions ui : S → R, for each player i ∈ [n], where by definition S = S1 × · · · × Sn is the
set of pure strategy profiles. For s ∈ S, the value ui(s) is the payoff of player i for pure
strategy profile s. Let S−i = S1 × · · · × Si−1 × Si+1 × · · · × Sn be the set of all pure strategy
profiles of players other than i. For s ∈ S and i ∈ [n], we set the partial pure strategy profile
s−i ∈ S−i to be (s1, . . . si−1, si+1, . . . , sn). For s′ in S−i, and si ∈ Si, we denote by (s′, si)
the combined pure strategy profile (s′1, . . . , s′i−1, si, s
′
i+1, . . . , s
′
n) ∈ S. We will suppose that
each player has m pure strategies and that Si = {e1, . . . , em}, the canonical basis of the
vector space Rm, for all i ∈ [n], and therefore S = {e1, . . . , em}n. For simplicity, instead of
ej we often say strategy j.
A mixed strategy for player i is a probability distribution over Si that we identify with a
vector xi = (x1
i , . . . x
m
i ) such that xji ≥ 0, for all j ∈ [m], and
∑
j∈[m] x
j
i = 1. We denote by
∆i the set of mixed strategies for i, and we call ∆ = ∆1 × · · · ×∆r the set of mixed strategy
profiles. For a mixed strategy profile x = (x1, . . . , xn) and pure strategy profile s ∈ S, the
product xs = xs1
1 x
s2
2 · · ·xsn
n is the probability of s in x. We will consider the multilinear
extension of the payoff functions from S to ∆ defined by ui(x) =
∑
s∈S x
sui(s). The set
∆−i, the partial mixed strategy profile x−i, for x ∈ ∆ and i ∈ [n], and the combined mixed
strategy profile (x′, xi) for x′ ∈ ∆−i and xi ∈ ∆i are defined analogously to the pure case.
The pure strategy si is a best response for player i against the partial mixed strategy
profile x′ ∈ ∆−i if it maximizes ui(x′, ·). For x ∈ ∆ and i ∈ [n], we will denote by br(x−i)
the set of best responses of player i against x−i. A Nash equilibrium is a mixed strategy
profile x = (x1, . . . , xn) such that sup(xi) ⊆ br(x−i), for all i ∈ [n].
I Definition 35 (n-party stingy quantum race). Let n ≥ 2 be a positive integer. An n-party
stingy quantum race is defined by a sequence of increasing probabilities 0 < P1 < P2 < . . . <
PK ≤ 1, for some positive integer K. The set of pure strategies of all players is [K]. For
every i, the utility function of the ith player is defined as
ui(s1, . . . , sn) = Psi
∏
k 6=i,sk≤si
P̄sk
.
Consider an n-party stingy quantum race given by the probabilities 0 < P1 < . . . < PK ≤
1, and let x−i ∈ ∆−i for some i ∈ [n]. If player i plays the pure strategy s against x−i, her
payoff is
ui(x−i, s) = Ps
∏
k 6=i
 ∑
sk∈sup≤s(xk)
xsk
k P̄sk
+
∑
sk∈sup>s(xk)
xsk
k
 . (18)
The following is the multiparty analog of Claim 14.
I Claim 36. Let x = (x1, . . . xn) be a Nash equilibrium of an n-party stingy quantum race
defined by probabilities P1 < . . . < PK . If s1 ∈ sup(xi), for some i ∈ [n], then for all s2 > s1
there exists k 6= i such that sup≤s1(xk) 6= sup≤s2(xk).
Proof. If sup≤s1(xk) = sup≤s2(xk), for all k 6= i then
ui(x−i, s2) = Ps2
Ps1
ui(x−i, s1).
As ps1 < ps2 , the payoff for playing s2 is strictly larger than that for playing s1. Therefore s1
is not a best response for x−i, in contradiction with the definition of a Nash equilibrium. J
ITCS 2019
51:18 Strategies for Quantum Races
This claim implies the following properties for the supports of Nash equilibria in a
multiplayer stingy quantum race.
I Corollary 37. Let x be a Nash equilibrium of an n-party stingy quantum race defined by
probabilities 0 < P1 < P2 < . . . < PK ≤ 1. Then we have:⋃n
i=1 sup(xi) is an interval containing K,
for every i ∈ [n], for every s1, s2 ∈ sup(xi) there exists s ∈
⋃
k 6=i sup(xk) with s1 < s ≤ s2.
Let x be a Nash equilibrium of an n-party stingy quantum race. We say that x is
coinciding if sup(xi) = sup(xk), for all i, k ∈ [n]. We call this common support in a coinciding
Nash equilibrium the support of the equilibrium. In the multiparty case we will only study
coinciding Nash equilibria.
5.2 Coinciding Nash equilibria of stingy multiplayer races
By Corollary 37 we know that in a coinciding Nash equilibrium of an n-party stingy quantum
race the support of the equilibrium is of the form {T, T + 1, . . . ,K}, for some 1 ≤ T ≤ K.
We would like to characterize these coinciding equilibria.
I Lemma 38. Let x = (x1, . . . , xn), where xi is a K-dimensional real vector for every i ∈ [n],
and let 1 ≤ T ≤ K. Then x is a Nash equilibrium of support {T, T + 1, . . . ,K} in an n-party
stingy quantum race defined by 0 < P1 < . . . < PK ≤ 1 if and only x satisfies the following
system, for all i ∈ [n]:
ui(x−i, t) = ui(x−i, T ) for T < t ≤ K , (19)
ui(x−i, T − 1) ≤ ui(x−i, T ) , (20)
xti = 0 for 0 < t < T , (21)
xti > 0 for T ≤ t ≤ K , (22)
K∑
t=T
xti = 1 . (23)
Proof. For every i ∈ [n], Eq. (21)–(23) express that xi is a probability distribution of support
{T, T + 1, . . . ,K}. For T ≥ 2, when playing a strategy t < T against the partial mixed
strategy profile x−i, the ith player’s payoff is maximized if she plays T − 1. Therefore
Eq. (19) and (20) express that the strategies in her support are all best responses against
x−i. J
I Definition 39. For an n-party stingy quantum race defined by 0 < P1 < . . . < PK ≤ 1 we
define its reduced game as the 2-party stingy quantum race defined by the two sequences of
probabilities p1 < . . . < pK , and P1 < . . . < PK where pj = P
1/(n−1)
j , for 1 ≤ j ≤ K.
We denote by A the payoff matrix of the first player in the reduced game
I Lemma 40. Let an n-party stingy quantum race be defined by 0 < P1 < . . . < PK ≤ 1, let
x = (x1, . . . , xn), where xi is a K-dimensional vector, and let 1 ≤ T ≤ K. Then Eq. (19)–
(23) are satisfied by x, for every i ∈ [n] if and only if Eq. (2)–(6) for the reduced game are
satisfied by xi, for every i ∈ [n].
Proof. Refer [14]. J
The following theorem characterizes the coinciding Nash equilibria in an n-party stingy
quantum race.
T. Lee, M. Ray, and M. Santha 51:19
I Theorem 41. An n-party stingy quantum race always has a unique coinciding Nash
equilibrium x = (x1, . . . , xn), where x1 = · · · = xn. If the game is defined by the probabilities
0 < P1 < P2 < · · · < PK then the coinciding equilibrium has support {T ∗, T ∗ + 1, . . . ,K},
where T ∗ = T ∗B of the reduced game, and for all i ∈ [n], the distribution xi is defined on its
support as
xti =
{
rBT∗/zBT∗ if t = T ∗,
qBt /z
B
T∗ if T ∗ < t ≤ K.
Proof. Combining Lemma 38 and Lemma 40, we get that x is a coinciding Nash equilibrium
of support {T, T + 1, . . . ,K} if and only if xi satisfies Eq. (2)–(6) for the reduced game, for
all i ∈ [n]. By Theorem 21 this happens if and only if T = T ∗B of the reduced game, and the
unique solution for xi, for i ∈ [n], is the one stated by the Theorem. J
5.3 Collision probability of the stingy coinciding equilibrium
Our main objective in this section is to upper bound the collision probability – the probability
that two or more players succeed at the same time – in the coinciding equilibrium found in
the last section for an `-dense stingy n-player quantum race. To help with this, we make the
following definition.
I Definition 42. For a joint probability distribution y = (y1, . . . , yn) ∈ ∆, let cpmi (y) denote
the probability that player i succeeds first and that exactly m players (including i) succeed at
the same time under the joint strategy y. Let cpi(y) =
∑n
m=2 cpmi (y) denote the probability
that player i succeeds first and at least one other player succeeds at the same time.
Let us also set up notation to describe the coinciding equilibrium in a stingy multiplayer
race. Define the following quantities
qi = 1
Pi
(
1
P
1/(n−1)
i−1
− 1
P
1/(n−1)
i
)
, rT = 1
P̄T
(
1
P
1/(n−1)
K
−
K∑
i=T +1
P̄iqi
)
, zT = rT +
K∑
i=T +1
qi .
Let T ∗ be the starting point of the support of the coinciding equilibrium. Then by
Theorem 41, the strategy of player i in the coinciding equilibrium is given by
xti =

rT∗/zT∗ if t = T ∗,
qt/zT∗ if T ∗ < t ≤ K,
0 if t < T ∗ .
(24)
To obtain concrete bounds on the collision probability, we will need bounds on zT∗ and
PT∗−1.
I Lemma 43. In any stingy multiplayer quantum race with n players (1/zT∗)n−1 < 1/n.
Proof. Refer [14]. J
I Theorem 44. Let P1, . . . , PK define a stingy n-player quantum race with n ≥ 2. Then
PT∗−1 < 1
n . If in addition P1, ...., PK form an `-dense sequence and 4e`n ≤ K then
PT∗−1 ≥ 1
2en , where e is Euler’s number.
Proof. Refer [14]. J
ITCS 2019
51:20 Strategies for Quantum Races
The next lemma bounds the collision probability for player i when all players but player i
play according to the coinciding equilibrium, and player i plays an arbitrary strategy v. We
will use this lemma to bound the total collision probability and also in Section 5.4 to show
that the stingy coinciding equilibrium is an approximate equilibrium in a multiparty race.
I Lemma 45. Let P1, ...., PK define an `-dense stingy n-player quantum race, n ≥ 2,
with 4en` ≤ K, and let x be the unique coinciding equilibrium given by Eq. (24). Then
cpi(x−i, v) ≤ 8e`
K for any i ∈ [n] and v ∈ ∆i.
Proof. Refer [14]. J
I Theorem 8. Let P1, ...., PK define an `-dense stingy n-player quantum race such that
4en` ≤ K. When the players play the coinciding equilibrium of the stingy race, the probability
that two or more players succeed at the same time is at most 8en`
K .
Proof. By Lemma 45, the probability that two or more players succeed at the same time is
at most
n∑
i=1
cpi(x) ≤ 8en`
K
. J
5.4 Multiplayer quantum races
In this section we use our results about the stingy multiplayer quantum race to analyse the
multiplayer quantum race. Namely, we show that the coinciding equilibrium in a stingy
multiplayer quantum race is an approximate equilibrium in a multiplayer race. The difference
between a stingy multiplayer race and a multiplayer race is that in a multiplayer race, the
payoff is equally divided amongst all players who succeed first at the same time.
I Definition 46 (Multiplayer quantum race). Let ui be the payoff function for player i ∈ [n] in
the n-player stingy race defined by P1 < · · · < Pk, as given by Eq. (18). The payoff function
u′i in the n-player quantum race defined by P1, . . . , Pk is
u′i(x) = ui(x) +
n∑
m=2
cpmi (x)
m
.
While the tie-splitting payoff in Definition 46 is quite natural, one could imagine other
definitions in-between stingy multiplayer races and the definition of multiplayer races we
have given. Our results in this section depend very weakly on the exact definition of how ties
are split in a multiplayer race. In fact, the only property we use is u′i(x) ≤ ui(x) + cpi(x).
This property holds under any reasonable definition of tie-splitting.
Now we show Theorem 9 from the introduction that the coinciding Nash equilibrium
in a multiplayer stingy quantum race is an approximate Nash equilibrium in a multiplayer
quantum race.
I Theorem 9. Let P1, ...., PK define an `-dense stingy n-player quantum race, n ≥ 2, with
4en` ≤ K. If x = (x1, ..., xn) is the coinciding Nash equilibrium for this stingy race, then x
is an 8e`
K - approximate Nash equilibrium of the corresponding quantum race.
Proof. Refer [14]. J
T. Lee, M. Ray, and M. Santha 51:21
References
1 Divesh Aggarwal, Gavin Brennen, Troy Lee, Miklos Santha, and Marco Tomamichel.
Quantum attacks on Bitcoin and how to prevent against them. Technical report, arXiv,
2017. arXiv:1710.10377.
2 Adam Back. Hashcash – a denial of service counter-measure, 2002. Available at: http:
//www.hashcash.org/papers/hashcash.pdf.
3 Alex Biryukov and Dmitry Khovratovich. Equihash: Asymmetric proof-of-work based on
the generalized birthday problem. Ledger, 2:1–30, 2017.
4 Bitmain. Bitmain Antminer S9. https://shop.bitmain.com/antminer_s9_asic_
bitcoin_miner.html, 2018. Accessed 2018-02-16.
5 Vitalik Buterin. Bitcoin is not quantum safe, and how we can fix it when needed.
https://bitcoinmagazine.com/articles/bitcoin-is-not-quantum-safe-and-how-we
-can-fix-1375242150/, 2013.
6 Miguel Castro and Barbara Liskov. Practical Byzantine Fault Tolerance. In Third Sym-
posium on Operating Systems Design and Implementation, 1999.
7 Catalin Dohotaru and Peter Høyer. Exact quantum lower bound for Grover’s problem.
Technical report, arXiv, 2008. arXiv:0810.3647.
8 William S. Dorn. Duality in quadratic programming. Quarterly of applied mathematics,
18(2):155–162, 1960.
9 Ittay Eyal and Emin Gün Sirer. Majority is not enough: Bitcoin mining is vulnerable. In
18th International Conference on Financial Cryptography and Data Security, 2014.
10 Arthur Gervais, Ghassan Karame, Karl Wüst, Vasileios Glykantzis, Hubert Ritzdorf, and
Srdjan Capkun. On the security and performance of proof of work blockchains. In Pro-
ceedings of the 2016 ACM SIGSAC Conference on Compute and Communications Security
(CCS’16), pages 3–16, 2016.
11 Lov K. Grover. A Fast Quantum Mechanical Algorithm for Database Search. In Proceedings
of the Twenty-eighth Annual ACM Symposium on Theory of Computing, STOC ’96, pages
212–219, New York, NY, USA, 1996. ACM. doi:10.1145/237814.237866.
12 Nicole Immorlica, Adam Tauman Kalai, Brendan Lucier, Ankur Moitra, Andrew Postle-
waite, and Moshe Tennenholtz. Dueling algorithms. In Proceedings of the forty-third annual
ACM symposium on theory of computing (STOC’11), pages 215–224, 2011.
13 Aggelos Kiayias, Alexander Russell, Bernardo David, and Roman Oliynykov. Ouroboros:
A provably secure proof-of-stake blockchain protocol. In CRYPTO, pages 357–388, 2017.
14 T. Lee, M. Ray, and M. Santha. Strategies for quantum races. ArXiv e-prints, September
2018. arXiv:1809.03671.
15 Olvi L. Mangasarian and H. Stone. Two-person nonzero-sum games and quadratic pro-
gramming. Journal of mathematical analysis and applications, 9:348–355, 1964.
16 Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system, 2009. Available at:
http://www.bitcoin.org/pdf.
17 John F. Nash. Non-cooperative Games. Annals of Mathematics, 54(2):286–295, 1951.
18 Or Sattath. On the insecurity of quantum Bitcoin mining. Technical report, arXiv, 2018.
Appeared in QCRYPT 2018. arXiv:1804.08118.
ITCS 2019
http://arxiv.org/abs/1710.10377
http://www.hashcash.org/papers/hashcash.pdf
http://www.hashcash.org/papers/hashcash.pdf
https://shop.bitmain.com/antminer_s9_asic_bitcoin_miner.html
https://shop.bitmain.com/antminer_s9_asic_bitcoin_miner.html
https://bitcoinmagazine.com/articles/bitcoin-is-not-quantum-safe-and-how-we-can-fix-1375242150/
https://bitcoinmagazine.com/articles/bitcoin-is-not-quantum-safe-and-how-we-can-fix-1375242150/
http://arxiv.org/abs/0810.3647
http://dx.doi.org/10.1145/237814.237866
http://arxiv.org/abs/1809.03671
http://www.bitcoin.org/pdf
http://arxiv.org/abs/1804.08118
	Introduction
	The model and results
	Application to Bitcoin
	Preliminaries
	Two-player stingy quantum races
	Unique coinciding equilibrium
	Payoff and collision probability
	Two-player quantum races
	Approximate Nash equilibrium
	Upper bound on payoff
	Multiplayer quantum races
	Basic properties
	Coinciding Nash equilibria of stingy multiplayer races
	Collision probability of the stingy coinciding equilibrium
	Multiplayer quantum races