Blockchains and the Commons
Blockchains and the Commons
Maria Potop-Butucaru(B)
Sorbonne Universite, CNRS, LIP6, 75005 Paris, France
maria.potop-butucaru@lip6.fr
Abstract. Blockchain phenomena is similar to the last century gold
rush. Blockchain technologies are publicized as being the technical solu-
tion for fully decentralizing activities that were for centuries central-
ized such as administration and banking. Therefore, prominent socio-
economical actors all over the world are attracted and ready to invest in
these technologies. Despite their large publicity, blockchains are far from
being a technology ready to be used in critical economical applications
and scientists multiply their effort in warning about the risks of using
this technology before understanding and fully mastering it. That is, a
blockchain technology evolves in a complex environment where rational
and irrational behaviors are melted with faults and attacks. This position
paper advocates that the theoretical foundations of blockchains should
be a cross research between classical distributed systems, distributed
cryptography, self-organized micro-economies, game theory and formal
methods. We discuss in the following a set of open research directions
interesting in this context.
Keywords: Blockchain · The commons · Open research directions
1 Introduction
Blockchain systems became today one of the most appealing area of research
motivated mainly by the recent speculations on crypto-currencies such as Bit-
coin [63] or Ethereum [76]. A blockchain is a distributed ledger that mimics the
functioning of a classical traditional ledger (i.e. transparency and falsification-
proof of documentation) in an untrusted environment where the computation is
distributed. The set of participants in the system are not known and it varies
during the execution. Moreover, each participant follows his own rules to maxi-
mize its welfare.
Blockchain systems maintain a continuously growing list of ordered blocks
that include one or more transactions1 that have been verified by the members
of the system, called miners. Blocks are linked using cryptography and the order
1 Transaction is used here as a generic name to be adapted to a broad class of use
cases. For example, a transaction in Bitcoin [63] or Ethereum [76] can be a transfer
of digital money or assets.
This position paper is based on the homonymous ERC Advanced submission [71]. It is
assumed that the reader has some background knowledge on Blockchain technologies.
c© Springer Nature Switzerland AG 2021
C. Georgiou and R. Majumdar (Eds.): NETYS 2020, LNCS 12129, pp. 28–44, 2021.
https://doi.org/10.1007/978-3-030-67087-0_3
http://crossmark.crossref.org/dialog/?doi=10.1007/978-3-030-67087-0_3&domain=pdf
https://doi.org/10.1007/978-3-030-67087-0_3
Blockchains and the Commons 29
of blocks in the blockchain is the result of a form of agreement among the system
participants. Participants strongly agree only on a prefix of the blockchain; the
suffix of the blockchain may be different from one participant to another.
Blockchain systems, beyond their incontestable assets such as decentraliza-
tion, simple design and relative easy use, are not free of incidents and limitations.
The most popular incident reported for Ethereum, for example, was the 60 mil-
lion dollars ether theft which was possible by simply exploiting an error in the
code and the lack of system specification.
A recent scientific analyse, [43], focus on several limitations of the most pop-
ular blockchain, Bitcoin, such as: weak security, low quality of services, storage
limitations, low throughput and high cost and weak consistency.
Therefore, despite their large publicity blockchains are far from being a tech-
nology ready to be used in critical economical applications and scientists multiply
their efforts in warning about the risks of using this technology before under-
standing and fully mastering it. Interestingly, many recent attempts to alarm
on vulnerabilities of popular blockchains like Bitcoin are target of defenders
brigading.
Nevertheless, once fully mastered, Blockchain systems will be the techni-
cal solution for fully decentralizing activities that were for centuries centralized
such as, for example, administration or banking. The applications of tomorrow
that potentially will be blockchainized are all different from each other. These
applications may range from IoTs to notary passing by administration, banking
or health. These applications have various consistency and quality of services
requirements. Therefore, we advocate that there will not be only one blockchain
but a family of modular blockchains that will have to offer various qualities of
services and that will be eventually interconnected.
It should be noted that differently from classical distributed applications,
some blockchains have a strong economical aspect, since participants should be
constantly incited to participate to the system welfare by rewarding their con-
tribution. This contribution is materialized either in the energy spent in solving
cryptographic puzzles in order to generate blocks or in the bandwidth spent to
route transactions and blocks. If participants massively leave the system then the
system collapses, a phenomenon known in economy as the tragedy of commons
[56,65,66]. In order to avoid this phenomenon, blockchains have to cross-over
new distributed formally verified and proven algorithms with game theory tools
and also government rules issued from self-organized micro-economies.
2 State of the Art
The birth of blockchains systems, as for the case of P2P systems in the early
2000, was in the non academic research. After the releasing of the most popular
blockchains (e.g. Bitcoin [63] or Ethereum [76]) with a specific focus on eco-
nomical transactions their huge potential for various other applications became
evident.
Their popularity, transformed blockchains in a huge social experiment that
confirmed the fact that blockchains can be a viable alternative for distributed
30 M. Potop-Butucaru
systems of tomorrow. Starting with this point, the blockchain area started to
became the focus of the academical research.
Interestingly, only recently distributed computing scientist started to investi-
gate theoretical aspects of blockchains and several directions of research can be
identified: blockchains based on proof-of-work and its alternatives such as proof-
of-stake, proof-of-space or proof-of-authority, blockchains using as underlying
building block the achievements in classical practical Byzantine fault-tolerance
and finally sortition based blockchains.
The theoretical study of proof-of-work based blockchains has been pioneered
by Garay et al. [51]. They decorticate the pseudo-code of Bitcoin and analyze
its agreement aspects considering a synchronous round-based communication
model. That is, messages sent in a round are assumed to arrive in the next
round. This study has been extended by Pass et al. [68] to round based systems
where messages sent in a round can be received later. The major criticisms for the
proof-of-work approach are as follows: it is assumed that the honest miners hold
a majority of the computational power, the generation of a block is energetically
costly which yielded to the creation of mining pools and finally, the multiple
blockchains that coexist in the system. Interestingly, the two alternatives for
proof-of-work such as proof-of-stake (the power of block building is proportional
to the amount of money they own in the system) or proof-of-authority (the
power of block building is proportional to the amount of authority they own
in the system) have not yet been fully analyzed from a theoretical point of
view. The line of research that addresses the consensus in proof-of-stake based
blockchains is pioneered by Daian et al. [44] that proposes a protocol for weakly
synchronous networks. The execution of the protocol is organized in epochs.
Similar to Bitcoin-NG [46] described below in each epoch a different committee
is elected and inside the elected committee a leader will be chosen. The leader is
allowed to extend the new blockchain. The protocol is validated via simulations
and only partial proofs of correctness are provided.
In order to overcome the drawbacks of Bitcoin, [46] proposes a mix between
proof-of-work blockchains and proof-of-work free blockchains referred as Bitcoin-
NG. The idea is that the execution of the system is organized in epochs. In
each epoch a leader elected via a proof-of-work mechanism will decide the order
transactions that will be committed in the blockchain till the next epoch. Bitcoin-
NG inherits the drawbacks of Bitcoin: costly proof-of-work process, forks, no
guarantee that a leader in an epoch is unique, no guarantee that the leader do
not change the history at will if the leader is corrupted.
Later, [58] initiates an alternative to the proof-of-work based blockchains,
named Byzcoin. Their research build on top of practical Byzantine fault-tolerance
[38] enhanced with a scalable collective signing process. The work in [58] is based
on a leader-based consensus over a group of members chosen based on a proof-of-
membership mechanism. As in Bitcoin, when a miner succeeds to mine a block it
is included in the voting members set that excludes one member. This protocol
also inherits some of the Bitcoin problems and vulnerabilities. Also Byzcoin
voting core can be totally corrupted by a dynamic adversary. More recently,
Blockchains and the Commons 31
SBFT [53] and Hyperledger Fabric [15] build also on top of [38]. In the same
spirit, [42] proposes for the first time a leader-free algorithm to solve Consensus
among participants in a consortium Blockchain where the specifications has been
adapted to the Blockchain scenario. The same specification is then considered
in DBFT [41], an evolution of the consensus algorithm in [42], in Tendermint
Consensus algorithm [36]. In the same line of research SBFT [53] and Hot-Stuff
[9] have been proposed recently.
In order to avoid some of the previously cited problems, Micali [62] intro-
duced (further extended in [23,39]) the sortition based blockchains that com-
pletely replace the proof-of-work mechanism by sortition. These works focus
again the agreement aspects of blockchains using probabilistic ingredients. More
specifically, the set of nodes that are allowed to produce and validate blocks are
randomly chosen and they change over the time. Interestingly, the study focuses
only on synchronous round-based communication models which do not reflect
the reality of blockchain technologies.
In another line of research, Pass et al. address in [69] one of the vulnerabilities
of Bitcoin studied formally in Eyal and Sirer [47]. In [47] the authors prove that
if the adversary controls a coalition of miners holding even a minority fraction
of the computational power, this coalition can gain twice its share. Fruitchain
proposed in [69] overcomes this problem by ensuring that no coalition controlling
less than a majority of the computing power can gain more than a factor 1 + 3δ
by not respecting the protocol, where δ is a parameter of the protocol.
A full overview of the agreement protocols designed for blockchain systems
can be found in [50].
Another interesting line of research has been opened by Decker et al. [45]
which is related to the blockchains consistency. They propose PeerCensus sys-
tem that targets to provide the linearizability of transactions. PeerCensus com-
bines, similar to Byzcoin, the proof-of-work blockchain and the classical results
in practical byzantine agreement fault tolerance. This line of research has been
continued in [14,16,18,40].
All the above-mentioned studies leave a huge unexplored space in the theo-
retical distributed aspects of blockchains. Moreover, even though a strong effort
has been recently dedicated to formalizing blockchain systems, it comes to evi-
dence that blockchains still lack of formalization and theoretical understanding
of their properties and their level of consistency face to system asynchrony, churn
and partitions, rational and irrational behaviors and multiple types of faults and
attacks. This important drawback limits drastically the integration of blockchains
in industrial applications despite the huge interest of the main industrial actors
in this technology. In the following we detail open research directions that may
help in integrating blockchain solutions in practical applications.
3 Explore Novel Models of Reliability for Blockchains
Faults are studied in distributed systems for decades [19] and most of the time
in isolation. Interestingly, faults and behaviors are defined in the distributed
32 M. Potop-Butucaru
systems literature in a verbose mode which, in most of the cases leaves the place
to the interpretation.
In a very popular paper, Laprie et al. [20] describe and classify the distributed
system faults, errors and failures. Interestingly, Byzantine Altruistic and Ratio-
nal model, a.k.a BAR [11] extends the model proposed in [20]. BAR model
identifies three categories of processes: altruistic, those who follow a prescribed
protocol; rationals, those who act in order to maximise their utility function; and
Byzantines, those who may rationally deviate from a prescribed protocol. This
later behavior can be seen as rational Byzantine behavior. In [8] the authors
introduce the notion of robustness of a distributed system by introducing the
notions of k-resiliency and t-immunity. In a k-resilient equilibrium there is no
coalition of k players having an incentive to simultaneously change strategy to
get a better outcome. On the other hand, the concept of t-immunity evaluates
the risk of a set of t players to have a Byzantine behavior. It should be noted
that the property of t-immunity is often impossible to be satisfied in practical
systems [7].
In the context of blockchains, Micali et al. [39] advocate that blockchains
should be tolerant to churn and to a very powerful dynamic adversary. Informally
speaking, this adversary “can corrupt any user he wants, at any time; totally
control and perfectly coordinate all corrupted users and schedule the delivery
of messages”. Moreover, Blockchains area brings a new direction of research by
exposing rational behavior with effects similar to the irrational ones. This type
of behavior is extensively studied in economics theories as for example the Elinor
Ostrom work [56,65,66].
The hierarchy of Laprie et al. [20] extended with the BAR model or the
(k, t)-robustness model covers complex faults experienced in blockchains such as
dynamic adversaries, churn, transient faults, rational and irrational behaviors or
combinations. Therefore, several research directions need to be explored in this
context.
3.1 Blockchain Robustness to Dynamic Adversaries
The dynamic adversary that affects blockchains described by Micali in [39] has a
Byzantine flavor and has similarities with Mobile Byzantine Adversaries studied
in classical distributed systems. Intuitively, a mobile byzantine adversary can
move agents from a process to another in order to deviate the process computa-
tion. When a process is infected by an adversarial agent, it behaves arbitrarily
until the adversary decides to move the agent to another process. Most of the
literature on Mobile Byzantine Adversaries [21,34,37,49,67,73,75] considered so
far synchronous round-based models, and only between two consecutive rounds
Byzantine agents are allowed to move from one process to another. Hence, the
set of faulty processes at any given time has a bounded size, yet its membership
may evolve from one round to the next. It is obvious that adversaries described
so far by the classical distributed literature do not match Micali’s description
of dynamic adversary in blockchains. A challenge would be to explore Mobile
Byzantine Adversaries decoupled from the synchronous communication of the
Blockchains and the Commons 33
system. However, this line of research still does not cover the dynamic adversary
in blockchains and further research is needed in this direction.
Therefore, the main challenge will be the formal specification of the robustness
of blockchains face to dynamic adversaries.
3.2 Robustness to Rationality and Irrationality
Common resources in blockchain systems can be seen at different levels. Partici-
pants gain a financial benefit from generating blocks. However, they bring to the
system their energy. Moreover, the system itself uses participants as resources
since functionalities of the system such as routing, overlay maintenance, mining
or agreement, are totally dependent on the presence of the participants. The risk
in these systems, as the one advertised recently for Bitcoin, is the fact that par-
ticipants will leave the system and hence the system collapses. This phenomenon
is known in economy as the tragedy of commons. Commons have similarities to
the fair resource sharing in P2P networks where peers express rational behav-
iors. Each peer in a resource sharing system gains a certain benefit from using
the system and pays a certain cost for participating to it. The incentives-based
solutions proposed so far in P2P networks (e.g. [13]) are most of the time eval-
uated in an empirical model with no formalization. Also these solutions are not
designed to cope with dynamic adversaries.
In order to avoid the tragedy of commons phenomenon in blockchains, new
solutions have to be designed by combining self-organized micro-economies the-
ories (in particular the work of Nobel Prize Elinor Ostrom) with on-the-shelf
tools issued from mechanisms and game theories.
A first step would be to understand the effect of various behaviors on
blockchain systems. From the game perspective point of view rationality in
blockchains has been studies in [24] (for the case of Bitcoin protocol) or [74] (for
the case of proof-of-stake protocols). Recently, in [12] the authors explore the
robustness of Tendermint consensus core to rational and Byzantine behaviors.
They analyze equilibrium interactions between Byzantine and rational commit-
tee members and derive conditions under which consensus properties are satisfied
or not in equilibrium. However, the proposed framework is not general enough
to be applied to other blockchain building blocks.
The challenge here will be to define a unified framework for specifying ratio-
nal and irrational behaviors all together with mobility of faults and attacks and
propose incentive rules tolerant to these behaviors.
One possible solution is first to extend the model proposed in [11] to the
specificities of blockchain systems. In [11] the authors define a Byzantine Altru-
istic Rational Tolerant (BART) protocol that guarantees the specified set of
safety and liveness properties in the presence of all rational deviations. A proto-
col is said to be Incentive-Compatible Byzantine Fault Tolerant (IC-BFT) if any
rational user is incentivized to follow the prescribed protocol, also in presence of
Byzantine users. Then, to make practical the model proposed in [8] by relaxing
the requirements in terms of t-immunity. Then, propose combined rules resulted
from various theories (games theory, mechanisms theory) that will be encoded
in incentive rules.
34 M. Potop-Butucaru
4 Formal Abstractions for Blockchains Consistency
A large number of political, economical and social organisms invoke the possi-
bility of blockchainize their activity. Obviously, the data that will be stored on
the blockchain in each of these applications may have various levels of consis-
tency: starting with very strong consistency for the case of banking or notary
applications and finishing with weak consistency for applications such as IoTs.
Identifying the exact requirements of consistency for representative applications
in each class is a challenge in itself.
Studying the level of consistency provided by existing blockchains is related
to the distributed shared register area. However, the similarity is moderated. A
distributed register is a shared variable accessed by a set of processes through two
operations, namely write() and read(). Informally, the write() operation updates
the value stored in the shared variable while the read() obtains the value con-
tained in the shared variable. The classical registers definitions [59] have been
extended to the self-stabilizing area in [30]. This work considers that the system
can be hit by arbitrary errors.
It should be noted that none of the above mentioned classical definitions
captures the behavior of the popular blockchains such as Ethereum and Bitcoin.
That is, values written in a classical register are potentially independent, and
during the execution, the size of the register remains the same. In contrast, a new
block cannot be written in the blockchain if it does not depend on the previous
one, and successive writings in the blockchain increase its size. Also, differently
from stabilizing registers, the prefix of the blockchain eventually converges, while
no guarantees hold for the last created blocks.
The challenge here is to define new consistency abstractions that will capture
the semantics of blockchains.
4.1 Defining New Consistency Abstractions for Blockchains
The first effort in specifying the properties of permissionless blockchain systems
is due to Garay and Kiayias [51]. They characterized Bitcoin blockchain via
its quality and its common prefix properties, i.e., they define an invariant that
this protocol has to satisfy in order to verify with high probability an eventu-
ally consistent prefix. This line of work has been continued by [69]. In order to
model the behavior of distributed ledgers at runtime, Girault et al. [52] present
an implementation of the Monotonic Prefix Consistency (MPC) criterion and
showed that no criterion stronger than MPC can be implemented in a partition-
prone message-passing system. On the other hand, the proposed formalization
does not propose weaker consistency semantics more suitable for proof-of-work
blockchains as Bitcoin. In the same line of research, in [14], Anceaume et al. pro-
pose a new data type to formally model distributed ledgers and their behavior
at runtime. They provide consistency criteria to capture the correct behavior
of current blockchain proposals in a unified framework. In parallel and inde-
pendently of [14], Anta et al. [17] propose a formalization of distributed ledgers
Blockchains and the Commons 35
modeled as an ordered list of records. The authors consider three consistency
criteria: eventual consistency, sequential consistency and linearizability.
Providing a unified framework able to capture the specificity of blockchain
systems is still an open problem.
Moreover, formalizing the definition of this class of blockchain consistency
will help in further proving the correctness and formally verifying algorithms
that implement them. The semantic of the consistency can be express in terms
of events and partial orders to these events. Note that for the classical consistency
criteria the recent work of Gotsman et al. [54] provided a rich formalism based
on token systems. However, this formalism should be extended to the blockchain
context.
4.2 Design and Formally Prove New Consistency Algorithms
Tolerant to Complex Behaviors
It should be noted that existing effort for implementing consistency in
blockchains (e.g. [23,51,62]) concentrate on solving the agreement (consensus)
problem. However, it is already folklore that consensus is impossible to solve
deterministically in asynchronous environments [48]. As pointed out in the state
of the art section, implementing blockchain probabilistic consensus in asyn-
chronous environments subject to dynamic faults is still an open problem. The
deterministic implementation of registers (even with strong consistency guaran-
tees) in various models characterized by the presence of multiple types of faults
(crashes, byzantine, dynamic byzantine or transient) have been investigated in
the past [30–32,35]. In blockchain systems, recent effort has been directed to both
formalizing and implementing consistency criteria in systems prone to faults or
Byzantine behaviors [14,16,18,40].
None of the above proposed solutions work with the severe model of
blockchain adversary including rationality, irrationality, churns or partitions.
Therefore, the implementation of blockchain objects with various consistency
guarantees in a asynchronous environment with dynamic models of adversary
when the size of the network is unknown is a real challenge that might be miti-
gated by combining the framework in [35] with abstractions such as k-quorums
defined in [10] and sortition techniques or intersecting sets (i.e. the secure version
of the classical distributed quorum systems).
5 Develop Correct-by-Construction Agreement
Algorithms for Blockchains
The core of blockchains technologies is the agreement problem, studied in
an environment where participants to the agreement may be controlled by a
dynamic adversary. This form of agreement is known in distributed comput-
ing as Byzantine Agreement. Briefly stated, it requires that processors, some of
which being potentially malicious, start the computation with an initial value
and decide on the same value.
36 M. Potop-Butucaru
Byzantine Agreement, introduced by Lamport et al. [60], has been studied
for decades in static distributed systems under different aspects (e.g., possi-
bility, complexity, cost) in various models (from synchronous to asynchronous,
from authenticated to anonymous) with different methodologies (deterministic
or probabilistic).
5.1 Feasibility of Blockchain Agreement Face to Complex Faults
and Behaviors
Garay et al. [51] and [62] pioneered the study of Byzantine Agreement in
blockchains. However, their studies are restricted to only round-based syn-
chronous systems.
In [29], the authors study deterministic Byzantine Agreement in environ-
ments where the set of nodes controlled by the adversary may change over time.
Contrary to other approaches, the model considers that a process previously
affected by the adversary may send messages (based on a corrupted state), it will
behave correctly in the way it sends those messages: i.e., send messages according
to the algorithm. This behavior is very similar to the way the adversary acts in
blockchains systems. Interestingly, in order to implement Byzantine Agreement
under the assumption of dynamic Byzantine adversary a system needs at least
5f + 1 nodes while in the case of static Byzantine adversary only 3f + 1 are
sufficient, where f is the number of nodes controlled by the Byzantine. These
studies leave a huge avenue to be explored. First, there is no extension of [29] to
round-free environments. Second, in the same model of adversarial model there
is no study related to feasibility of the agreement problem when the adversary
movement is decoupled from the synchronous round of computation.
The above works do not implement agreement in asynchronous systems prone
to dynamic adversary, rationality or churn.
An interesting challenge would be to explore the asynchronous probabilistic
Byzantine agreement in systems prone to dynamic adversary and churn and
where processes may have rational behaviors. One of possible solutions would
be to considered the methodology proposed in [29] to round free churn exposed
systems combined with sortition techniques and incentives rules issues from
games and mechanisms theories.
5.2 New Abstractions for Blockchain Agreement
Agreement in blockchains has an Approximate agreement flavor since the agree-
ment on blockchains should be guaranteed not on an exact value. In systems hit
by Mobile Byzantine Adversaries (the closes to the blockchain dynamic adver-
sary) [33] formalized the approximate agreement and prove lower bounds on
problem solvability in various dynamic adversary models and further propose
an optimal algorithm for approximate agreement in round based systems. The
lower bounds range from n > 3f + 1 to n > 6f + 1 depending on the type of
adversary.
Blockchains and the Commons 37
The previous results do not cover the blockchain agreement for several rea-
sons: blockchains are not round-based, the adversary is not bounded to the
rounds change, the agreement value is not a real value but a prefix of an ever
changing blockchain.
Formalizing the bockchain approximate agreement and then proposing solu-
tions in asynchronous environments hit by a dynamic adversary and rationality
is the scientific lock here.
6 Develop Correct-by-Construction Overlays
and Routing Algorithms for Blockchains
Blockchain underlying overlays and the associate routing are totally unexplored
from a theoretical point of view. However, the performances of blockchains tech-
nologies heavily depend on the performances of the underlying routing process.
Recently, Lightning technologies [70] imposed themselves as a viable direction
for improving the blockchains throughput. This technology builds on top of
blockchains (e.g. Bitcoin) an overlay of secured channels opened by two par-
ties involved in long term multi-transactions. This overlay is further used to
route transactions. Although blockchain technologies make strong assumptions
on their underlying overlays there is no academic research that focus on these
overlays. The only prior research on the overlays topic has been developed in the
context of dynamic networks such as P2P or wireless networks.
Another interesting point to be explored is the liveness of the overlay and
more generally of the system. In blockchains the welfare of participants is
a crucial factor. When participants desert the system in proof-of-work based
blockchains the security of the system sinks, which yields to the global sink of
the system. As mentioned previously, this phenomenon is known in economy as
the tragedy of commons.
6.1 New Abstractions for Blockchain Overlays
Expanders theory proved recently its effectiveness for constructing overlays
resilient to churn and partitions. The (node) expansion of an undirected graph
is a characterization of the graph robustness. That is, graphs with good expan-
sion are hard to be partitioned into a number of large connected components.
In this sense, the expansion of a graph can be seen as a good evaluation of its
resilience to faults and churn. However, the expansion of tree overlays is trivially
O(1/n) where n is the number of nodes in the tree overlay. This weakness to
faults explains why tree overlays are not pervasive in real applications.
In [57], the authors measured the robustness of tree overlay networks by
evaluating their graph expansion and proposed a logarithmic algorithm for the
construction of a constant degree self* expander that improves the resilience to
churn of P2P tree-overlays.
38 M. Potop-Butucaru
The existing works are not tolerant to dynamic adversaries which can dis-
connect the overlay before its stabilization. The unexplored yet research direc-
tion concerns the construction of constant degree expenders tolerant to dynamic
Byzantine behavior and multiple types of faults. A possible solution would be to
extend the methodology in [57] with sortition techniques.
6.2 New Formally Verified Routing Protocols for Blockchains
In order to increase the throughput in Bitcoin, the non academical research in
blockchains proposed recently lightning routing networks [70]. Secured channels
between two or more participants are opened on top of Bitcoin and transactions
are routed on top of the virtual network formed by these channels. Routing in
lightning networks has some similarities with routing in P2P or mobile wireless
networks or delay tolerant networks. Flare [72], for example, which is one of
the most prominent lightning routing was inspired by the wireless ZRP routing
protocol.
Interestingly, there is no formal academic research on this topic so far and
our preliminary studies show that Flare (and its derivates) present severe lim-
itations such as weak resilience to churn or deadlocks. Moreover, none of these
lightning routing protocols has been exposed to multiple types of faults, attacks
or dynamic adversaries.
The most studied overlay for routing in classical distributed systems and
networking theory is the minimum spanning tree (MST). Research on spanning
trees tolerant to multiple faults has been conducted in [25–28]. None of the above
cited algorithms is resilient to dynamic adversaries in conjunction with churn
and attacks. The challenge here will be the design of new routing algorithms
optimized for the context of lightning networks subject to multiple types of
faults, attacks, rationality and dynamic adversaries.
7 Blockchains Interoperability
There are currently several operational systems for achieving interoperability
between different blockchains such as Cosmos [2] or Polkadot [6]. These systems
can be classified into two categories according to their decentralization level:
systems that use a trusted third-party to validate transactions or systems that
realize it directly between blockchains without the need of a trusted third-party.
In order to execute an exchange or a swap (i.e., a set of transactions between
parties), transacting agents (i.e., blockchain users) are provided with a protocol
to stick to. A protocol in this case consists of a specific sequence of instructions
agents should perform to preserve the ACID properties [61] of the individual
transactions or exchanges.
The first atomic swap solution has been proposed for Bitcoin by Nolan [64]
making use of hash-time locked contracts enabling conditional assets transfers.
Decred [3] implements Nolan’s algorithm on UTXO-based premissionless. In [55]
the authors generalize and prove correct Nolan’s scheme. Other projects such as
Blockchains and the Commons 39
BartherDEX [5], part of the Komodo project [4], represents a cross-chain solution
that matches orders and defines the swap protocol or Blockchain.io [1] imple-
ments atomic cross-chain swaps by combining centralized components (order
matching) with decentralized ones (trade settlement and execution). These
projects are not yet formally proved correct.
The academic research focuses on hybrid swap protocols, replacing decen-
tralized commitment/locking schemes (hash-locks) with centralized ones, result-
ing more attractive and efficient. AC3TW and AC3WN [77] protocols propose
atomic cross-chain swaps respectively with centralized and distributed trusted
authorities (i.e. witnesses). It should be noted that different swap protocols differ
essentially in the involved parties. The set of swap participants can be composed
only of the asset owners (e.g., as in [55]) or by owners accompanied by a trusted
third party (e.g., as in the AC3TW protocol [77]).
In [22], the authors propose a generic game theoretical framework that for-
malizes the swap problem and characterize equilibria of two representative recent
protocols presented in [64] and [77] respectively. In the case of the protocol pro-
posed in [64] and generalised in [55], following the protocol is the unique subgame
perfect equilibrium (in dominant strategies), while in the case of the protocol
proposed in [77], following the protocol is a Nash equilibrium.
These works open several research directions. Swap protocols and more gen-
erally blockchain intercommunication are not yet properly formalized and ana-
lyzed.
An important challenge in this area is to fully formalize the problem and
analyze the robustness of protocols that implement it face to both rational and
irrational behaviors, dynamic adversaries and attacks and coalitions.
8 Conclusions
Blockchains evolve in a very complex environment. Differently from the classical
distributed systems, where faults are considered to appear in isolation and to
affect the same node of the system during the whole computation, in blockchains
environments faults do not follow the same pattern. Blockchains have to face in
the same time classical pattens of faults such as crash faults, transient faults,
Byzantine faults but also attacks, dynamic faults, churn and selfish or ratio-
nal/irrational behaviors. Therefore, before addressing the algorithmic core of
blockchains a fully characterization of the adversarial environment is necessary.
Interestingly, faults and errors in most of the cases (even in classical distributed
system) have only a verbose definition. When systems have to be released for
industrial or critical economical use automatic verifications and mathematical
proofs are necessary. Therefore, verbose definitions are not precise enough. In
this paper we discuss five important challenges in this area. The first chal-
lenge is to explore and formalize blockchains robustness. The second challenge
is to formally define universal abstractions for characterizing blockchains con-
sistency. The third challenge is to provide new correct-by-construction abstrac-
tions for agreement in blockchains. The effectiveness of these building blocks will
40 M. Potop-Butucaru
be insured by a formal verification and proof using formal methods tools. The
fourth challenge is to develop optimized overlays and communication primitives
for blockchains resilient to nodes churn, various attacks and adversary dynamic
behaviors and target to avoid the partition or the sink of the system in a tragedy
of commons. Finally, the formalization of blockchains interoperability is the fifth
challenge.
References
1. Blockchain.io (Your gateway to the internet of value). https://blockchain.io/.
Accessed 10 January 2020
2. Cosmos: A network of distributed ledgers. https://cosmos.network/cosmos-
whitepaper.pdf. Accessed 10 January 2020
3. Decred cross-chain atomic swapping. https://github.com/decred/atomicswap.
Accessed 10 January 2020
4. Komodo (Advanced blockchain technology, focused on freedom). https://docs.
komodoplatform.com/whitepaper/introduction.html. Accessed 10 January 2020
5. Komodo barterdex. https://github.com/KomodoPlatform/BarterDEX. Accessed
10 January 2020
6. Polkadot: Vision for a heterogeneous multi-chain framework. https://polkadot.
network/PolkaDotPaper.pdf. Accessed 10 January 2020
7. Abraham, I., Alvisi, L., Halpern, J.: Distributed computing meets game theory:
combining insights from two fields. SIGACT News 42, 69–76 (2011)
8. Abraham, I., Dolev, D., Gonen, R., Halpern, J.: Distributed computing meets game
theory: robust mechanisms for rational secret sharing and multiparty computation.
In: Proceedings of the Twenty-Fifth Annual ACM Symposium on Principles of
Distributed Computing, PODC 2006, New York, NY, USA, pp. 53–62. Association
for Computing Machinery (2006)
9. Abraham, I., Gueta, G., Malkhi, D.: Hot-stuff the linear, optimal-resilience, one-
message BFT devil. CoRR https://arxiv.org/abs/1803.05069 (2018)
10. Aiyer, A.S., Alvisi, L., Bazzi, R.A.: Byzantine and multi-writer k-quorums. In:
Proceedings of 20th International Symposium on Distributed Computing, DISC
2006, 18–20 September 2006, Stockholm, Sweden, pp. 443–458 (2006)
11. Aiyer, A.S., Alvisi, L., Clement, A., Dahlin, M., Martin, J.P., Porth, C.: BAR fault
tolerance for cooperative services. In: SOSP 2005 (2005)
12. Amoussou-Guenou, Y., Biais, B., Potop-Butucaru, M., Tucci Piergiovanni, S.:
Rationals vs byzantines in consensus-based blockchains. https://arxiv.org/abs/
1902.07895 (2019). To appear AAMAS 2020
13. Anceaume, E., Gradinariu, M., Ravoaja, A.: Incentives for P2P fair resource shar-
ing. In: Fifth IEEE International Conference on Peer-to-Peer Computing (P2P
2005), 31 August–2 September 2005, Konstanz, Germany, pp. 253–260 (2005)
14. Anceaume, E., Pozzo, A.D., Ludinard, R., Potop-Butucaru, M., Tucci Piergiovanni,
S.: Blockchain abstract data type. In: Proceedings of the 31st ACM Symposium
on Parallelism in Algorithms and Architectures (SPAA) (2019)
15. Androulaki, E., et al.: Hyperledger fabric: a distributed operating system for per-
missioned blockchains. In: Proceedings of the Thirteenth EuroSys Conference,
EuroSys 2018, 23–26 April 2018, Porto, Portugal, pp. 30:1–30:15 (2018)
16. Anta, A.F., Georgiou, C., Nicolaou, N.C.: Atomic appends: selling cars and coor-
dinating armies with multiple distributed ledgers. CoRR https://arxiv.org/abs/
1812.08446 (2018)
https://blockchain.io/
https://cosmos.network/cosmos-whitepaper.pdf
https://cosmos.network/cosmos-whitepaper.pdf
https://github.com/decred/atomicswap
https://docs.komodoplatform.com/whitepaper/introduction.html
https://docs.komodoplatform.com/whitepaper/introduction.html
https://github.com/KomodoPlatform/BarterDEX
https://polkadot.network/PolkaDotPaper.pdf
https://polkadot.network/PolkaDotPaper.pdf
https://arxiv.org/abs/1803.05069
https://arxiv.org/abs/1902.07895
https://arxiv.org/abs/1902.07895
https://arxiv.org/abs/1812.08446
https://arxiv.org/abs/1812.08446
Blockchains and the Commons 41
17. Anta, A.F., Konwar, K., Georgiou, C., Nicolaou, N.: Formalizing and implementing
distributed ledger objects. ACM SIGACT News 49(2), 58–76 (2018)
18. Anta, A.F., Konwar, K.M., Georgiou, C., Nicolaou, N.C.: Formalizing and imple-
menting distributed ledger objects. SIGACT News 49(2), 58–76 (2018)
19. Attiya, H., Welch, J.: Distributed Computing: Fundamentals Simulations and
Advanced Topics. Wiley, New York (2004)
20. Avizienis, A., Laprie, J.-C., Randell, B., Landwehr, C.: Basic concepts and taxon-
omy of dependable and secure computing. IEEE Trans. Dependable Secure Com-
put. 1(1), 11–33 (2014)
21. Banu, N., Souissi, S., Izumi, T., Wada, K.: An improved byzantine agreement algo-
rithm for synchronous systems with mobile faults. Int. J. Comput. Appl. 43(22),
1–7 (2012)
22. Belotti, M., Moretti, S., Potop-Butucaru, M., Secci, S.: Game theoretical analysis
of atomic cross-chain swaps. In: 40th IEEE International Conference on Distributed
Computing Systems (ICDCS), Singapore, December 2020
23. Bentov, I., Pass, R., Shi, E.: The sleepy model of consensus. IACR Cryptol. ePrint
Arch. 2016, 918 (2016)
24. Biais, B., Bisière, C., Bouvard, M., Casamatta, C.: The blockchain folk theorem.
Rev. Financ. Stud. 32(5), 1662–1715 (2019)
25. Blin, L., Dolev, S., Potop-Butucaru, M.G., Rovedakis, S.: Fast self-stabilizing mini-
mum spanning tree construction - using compact nearest common ancestor labeling
scheme. In: Proceedings of 24th International Symposium on Distributed Comput-
ing, DISC 2010, 13–15 September 2010, Cambridge, MA, USA, pp. 480–494 (2010)
26. Blin, L., Potop-Butucaru, M., Rovedakis, S.: A super-stabilizing log(n)log(n)-
approximation algorithm for dynamic Steiner trees. Theor. Comput. Sci. 500,
90–112 (2013)
27. Blin, L., Potop-Butucaru, M., Rovedakis, S., Tixeuil, S.: A new self-stabilizing
minimum spanning tree construction with loop-free property. Comput. J. 59(2),
225–243 (2016)
28. Blin, L., Potop-Butucaru, M.G., Rovedakis, S.: Self-stabilizing minimum degree
spanning tree within one from the optimal degree. J. Parallel Distrib. Comput.
71(3), 438–449 (2011)
29. Bonnet, F., Défago, X., Nguyen, T.D., Potop-Butucaru, M.: Tight bound on mobile
byzantine agreement. Theor. Comput. Sci. 609, 361–373 (2016)
30. Bonomi, S., Dolev, S., Potop-Butucaru, M., Raynal, M.: Stabilizing server-based
storage in byzantine asynchronous message-passing systems: extended abstract. In:
Proceedings of the 2015 ACM Symposium on Principles of Distributed Computing,
PODC 2015, 21–23 July 2015, Donostia-San Sebastián, Spain, pp. 471–479 (2015)
31. Bonomi, S., Potop-Butucaru, M., Tixeuil, S.: Stabilizing byzantine-fault tolerant
storage. In: 2015 IEEE International Parallel and Distributed Processing Sympo-
sium, IPDPS 2015, 25–29 May 2015, Hyderabad, India, pp. 894–903 (2015)
32. Bonomi, S., Pozzo, A.D., Potop-Butucaru, M.: Tight self-stabilizing mobile
byzantine-tolerant atomic register. In: Proceedings of the 17th International Con-
ference on Distributed Computing and Networking, 4–7 January 2016, Singapore,
pp. 6:1–6:10 (2016). To appear in TCS 2017
33. Bonomi, S., Pozzo, A.D., Potop-Butucaru, M., Tixeuil, S.: Approximate agree-
ment under mobile byzantine faults. In: 36th IEEE International Conference on
Distributed Computing Systems, ICDCS 2016, 27–30 June 2016, Nara, Japan, pp.
727–728 (2016)
42 M. Potop-Butucaru
34. Bonomi, S., Pozzo, A.D., Potop-Butucaru, M., Tixeuil, S.: Optimal mobile byzan-
tine fault tolerant distributed storage: extended abstract. In: Proceedings of the
2016 ACM Symposium on Principles of Distributed Computing, PODC 2016, 25–
28 July 2016, Chicago, IL, USA, pp. 269–278 (2016)
35. Bonomi, S., Pozzo, A.D., Potop-Butucaru, M., Tixeuil, S.: Self-stabilizing mobile
byzantine-tolerant regular register with bounded timestamp. In: SRDS 2017,
https://arxiv.org/abs/1609.02694 (2016)
36. Buchman, E., Kwon, J., Milosevic, Z.: The latest gossip on BFT consensus. arXiv
preprint arXiv:1807.04938 (2018)
37. Buhrman, H., Garay, J.A., Hoepman, J.H.: Optimal resiliency against mobile
faults. In: Proceedings of the 25th International Symposium on Fault-Tolerant
Computing (FTCS 1995), pp. 83–88 (1995)
38. Castro, M., Liskov, B.: Practical byzantine fault tolerance and proactive recovery.
ACM Trans. Comput. Syst. 20(4), 398–461 (2002)
39. Chen, J., Micali, S.: Algorand. arXiv preprint arXiv:1607.01341 (2017)
40. Cholvi, V., Anta, A.F., Georgiou, C., Nicolaou, N.C.: Brief announcement: imple-
menting byzantine tolerant distributed ledger objects. In: Suomela, J. (ed.) 33rd
International Symposium on Distributed Computing, DISC 2019, 14–18 October
2019, Budapest, Hungary, vol. 146 of LIPIcs, pp. 40:1–40:3. Schloss Dagstuhl -
Leibniz-Zentrum für Informatik (2019)
41. Crain, T., Gramoli, V., Larrea, M., Raynal, M.: DBFT: Efficient byzantine consen-
sus with a weak coordinator and its application to consortium blockchains. arXiv
preprint arXiv:1702.03068 (2017)
42. Crain, T., Gramoli, V., Larrea, M., Raynal, M.: (Leader/Randomization/
Signature)-free Byzantine Consensus for Consortium Blockchains. http://csrg.
redbellyblockchain.io/doc/ConsensusRedBellyBlockchain.pdf (2017). Accessed 22
May 2018
43. Croman, K.: On scaling decentralized blockchains - (A position paper). In: Finan-
cial Cryptography and Data Security - FC 2016 International Workshops, BIT-
COIN, VOTING, and WAHC, Christ Church, Barbados, February 26, 2016,
Revised Selected Papers, pp. 106–125 (2016)
44. Pass, D.R., Shi, E.: Snow white: provably secure proofs of stake. IACR Cryptol.
ePrint Arch. 2016, 919 (2016)
45. Decker, C., Seidel, J., Wattenhofer, R.: Bitcoin meets strong consistency. In: Pro-
ceedings of the 17th International Conference on Distributed Computing and Net-
working Conference (ICDCN) (2016)
46. Eyal, I., Gencer, A.E., Sirer, E.G., Van Renesse, R.: Bitcoin-NG: a scalable
blockchain protocol. In: 13th USENIX Symposium on Networked Systems Design
and Implementation, NSDI 2016, 16–18 March 2016, Santa Clara, CA, USA, pp.
45–59 (2016)
47. Eyal, I., Sirer, E.G.: Majority is not enough: bitcoin mining is vulnerable. In:
Christin, N., Safavi-Naini, R. (eds.) FC 2014. LNCS, vol. 8437, pp. 436–454.
Springer, Heidelberg (2014). https://doi.org/10.1007/978-3-662-45472-5 28
48. Fischer, M.J., Lynch, N.A., Paterson, M.S.: Impossibility of distributed consensus
with one faulty process. J. ACM (JACM) 32(2), 374–382 (1985)
49. Garay, J.A.: Reaching (and maintaining) agreement in the presence of mobile
faults. In: Proceedings of the 8th International Workshop on Distributed Algo-
rithms, vol. 857, pp. 253–264 (1994)
50. Garay, J.A., Kiayias, A.: SoK: a consensus taxonomy in the blockchain era. IACR
Cryptol. ePrint Arch. 2018, 754 (2018)
https://arxiv.org/abs/1609.02694
http://arxiv.org/abs/1807.04938
http://arxiv.org/abs/1607.01341
http://arxiv.org/abs/1702.03068
http://csrg.redbellyblockchain.io/doc/ConsensusRedBellyBlockchain.pdf
http://csrg.redbellyblockchain.io/doc/ConsensusRedBellyBlockchain.pdf
https://doi.org/10.1007/978-3-662-45472-5_28
Blockchains and the Commons 43
51. Garay, J., Kiayias, A., Leonardos, N.: The bitcoin backbone protocol: analysis
and applications. In: Oswald, E., Fischlin, M. (eds.) EUROCRYPT 2015. LNCS,
vol. 9057, pp. 281–310. Springer, Heidelberg (2015). https://doi.org/10.1007/978-
3-662-46803-6 10
52. Girault, A., Gössler, G., Guerraoui, R., Hamza, J., Seredinschi, D.-A.: Monotonic
prefix consistency in distributed systems. In: Baier, C., Caires, L. (eds.) FORTE
2018. LNCS, vol. 10854, pp. 41–57. Springer, Cham (2018). https://doi.org/10.
1007/978-3-319-92612-4 3
53. Golan-Gueta, G., et al.: SBFT: a scalable decentralized trust infrastructure for
blockchains. CoRR https://arxiv.org/abs/1804.01626 (2018)
54. Gotsman, A., Yang, H., Ferreira, C., Najafzadeh, M., Shapiro, M.: ‘Cause i’m
strong enough: reasoning about consistency choices in distributed systems. In: Pro-
ceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles
of Programming Languages, POPL 2016, 20–22 January 2016, St. Petersburg, FL,
USA, pp. 371–384 (2016)
55. Herlihy, M.: Atomic cross-chain swaps. In: Proceedings of the 2018 ACM Sympo-
sium on Principles of Distributed Computing, pp. 245–254. ACM (2018)
56. Hess, C., Ostrom, E.: Understanding knowledge as a commons. From theory to
Practice (2007)
57. Izumi, T., Potop-Butucaru, M., Valero, M.: When expanders help self-healing dis-
tributed r-tree overlays. In: IEEE 12th International Symposium on Parallel and
Distributed Computing, ISPDC 2013, 27–30 June 2013, Bucharest, Romania, pp.
143–150 (2013)
58. Kokoris-Kogias, E., Jovanovic, P., Gailly, N., Khoffi, I., Gasser, L., Ford, B.:
Enhancing bitcoin security and performance with strong consistency via collec-
tive signing. In: Proceedings of the 25th USENIX Security Symposium (2016)
59. Lamport, L.: On inter-process communications, Part I: basic formalism and Part
II: algorithms. Distrib. Comput. 1(2), 77–101 (1986)
60. Lamport, L., Shostak, R., Pease, M.: The byzantine generals problem. ACM Trans.
Prog. Lang. Syst. 4(3), 382–401 (1982)
61. Lewis, P., Bernstein, A., Kifer, M.: Databases and Transaction Processing: An
Application-Oriented Approach. Addison-Wesley Reading, Boston (2002)
62. Micali, S.: Algorand: the efficient and democratic ledger. arXiv preprint
arXiv:1607.01341 (2016)
63. Nakamoto, S.: Bitcoin: a peer-to-peer electronic cash system (2008). https://
bitcoin.org/bitcoin.pdf
64. Nolan, T.: Re: alt chains and atomic transfers. https://bitcointalk.org/index.php?
topic=193281.msg2224949#msg2224949. Accessed 10 January 2020
65. Ostrom, E.: Governing the Commons. Cambridge University Press, Cambridge
(2015)
66. Ostrom, E., Walker, J.: Trust and Reciprocity: Interdisciplinary Lessons for Exper-
imental Research. Russell Sage Foundation, New York (2003)
67. Ostrovsky, R., Yung, M.: How to withstand mobile virus attacks (extended
abstract). In: Proceedings of the 10th Annual ACM Symposium on Principles of
Distributed Computing (PODC 1991), pp. 51–59 (1991)
68. Pass, R., Seeman, L., Shelat, A.: Analysis of the blockchain protocol in asyn-
chronous networks. In: Coron, J.-S., Nielsen, J.B. (eds.) EUROCRYPT 2017.
LNCS, vol. 10211, pp. 643–673. Springer, Cham (2017). https://doi.org/10.1007/
978-3-319-56614-6 22
https://doi.org/10.1007/978-3-662-46803-6_10
https://doi.org/10.1007/978-3-662-46803-6_10
https://doi.org/10.1007/978-3-319-92612-4_3
https://doi.org/10.1007/978-3-319-92612-4_3
https://arxiv.org/abs/1804.01626
http://arxiv.org/abs/1607.01341
https://bitcoin.org/bitcoin.pdf
https://bitcoin.org/bitcoin.pdf
https://bitcointalk.org/index.php?topic=193281.msg2224949#msg2224949
https://bitcointalk.org/index.php?topic=193281.msg2224949#msg2224949
https://doi.org/10.1007/978-3-319-56614-6_22
https://doi.org/10.1007/978-3-319-56614-6_22
44 M. Potop-Butucaru
69. Pass, R., Shi, E.: Fruitchains: a fair blockchain. In: Proceedings of the ACM Sym-
posium on Principles of Distributed Computing, PODC 2017, 25–27 July 2017,
Washington, DC, USA, pp. 315–324 (2017)
70. Poon, J., Dryja, T.: The bitcoin lightning network (2016). https://lightning.
network/lightning-network-paper.pdf
71. Potop-Butucaru, M.: Brace: Blockchains and the commons. submitted to ERC
Advanced program (2017) Proposal ID : 788886 (Internal reference number: SEP-
210446727) Call : ERC-2017-ADG Type of action : ERC-ADG Topic : ERC-2017-
ADG. http://pagesperso.lip6.fr/Maria.Gradinariu/spip.php?article23
72. Prihodko, P., Zhigulin, S., Sahno, M., Ostrovskiy, A.: Flare: an approach to routing
in lightning network white paper (2016)
73. Reischuk, R.: A new solution for the byzantine generals problem. Inf. Control
64(1–3), 23–42 (1985)
74. Saleh, F.: Blockchain Without Waste: Proof-of-Stake. SSRN Scholarly Paper ID
3183935, Social Science Research Network, Rochester, NY, January 2019
75. Sasaki, T., Yamauchi, Y., Kijima, S., Yamashita, M.: Mobile byzantine agreement
on arbitrary network. In: Baldoni, R., Nisse, N., van Steen, M. (eds.) OPODIS
2013. LNCS, vol. 8304, pp. 236–250. Springer, Cham (2013). https://doi.org/10.
1007/978-3-319-03850-6 17
76. Wood, G.: Ethereum: a secure decentralised generalised transaction ledger. http://
gavwood.com/Paper.pdf. Accessed 22 May 2018
77. Zakhary, V., Agrawal, D., Abbadi, A.: Atomic commitment across blockchains.
Proc. VLDB Endow. (2020)
https://lightning.network/lightning-network-paper.pdf
https://lightning.network/lightning-network-paper.pdf
http://pagesperso.lip6.fr/Maria.Gradinariu/spip.php?article23
https://doi.org/10.1007/978-3-319-03850-6_17
https://doi.org/10.1007/978-3-319-03850-6_17
http://gavwood.com/Paper.pdf
http://gavwood.com/Paper.pdf
	Blockchains and the Commons
	1 Introduction
	2 State of the Art
	3 Explore Novel Models of Reliability for Blockchains
	3.1 Blockchain Robustness to Dynamic Adversaries
	3.2 Robustness to Rationality and Irrationality
	4 Formal Abstractions for Blockchains Consistency
	4.1 Defining New Consistency Abstractions for Blockchains
	4.2 Design and Formally Prove New Consistency Algorithms Tolerant to Complex Behaviors
	5 Develop Correct-by-Construction Agreement Algorithms for Blockchains
	5.1 Feasibility of Blockchain Agreement Face to Complex Faults and Behaviors
	5.2 New Abstractions for Blockchain Agreement
	6 Develop Correct-by-Construction Overlays and Routing Algorithms for Blockchains
	6.1 New Abstractions for Blockchain Overlays
	6.2 New Formally Verified Routing Protocols for Blockchains
	7 Blockchains Interoperability
	8 Conclusions
	References