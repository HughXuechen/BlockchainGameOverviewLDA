<italic>Block-CPS</italic>: Blockchain and Non-Cooperative Game-Based Data Pricing Scheme for Car Sharing
25780 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 24, 15 DECEMBER 2022
Block-CPS: Blockchain and Non-Cooperative
Game-Based Data Pricing Scheme
for Car Sharing
Riya Kakkar , Rajesh Gupta , Student Member, IEEE, Mohammad Dahman Alshehri ,
Sudeep Tanwar , Senior Member, IEEE, Amit Dua , Member, IEEE,
and Neeraj Kumar , Senior Member, IEEE
Abstract—This article proposes a blockchain and non-
cooperative game theoretic-based secure and optimized data
pricing scheme, i.e., Block-CPS. It aims to secure the data
transactions between vehicle owners and customers for rides.
It uses the fifth-generation (5G) communication network that
offers ultrareliable low-latency communications between vehicle
owners and customers. The Interplanetary file system (IPFS)
storage protocol used in the proposal reduces the blockchain
data storage cost. We then formulated a non-cooperative game-
theoretic approach to maximize the profits for vehicle owners and
customers. Formulated non-cooperative game is integrated with
blockchain to provide security to the Block-CPS. The vulnera-
bility of the developed smart contract is verified and validated
using tools like smartcheck and verisol. The performance of
Block-CPS is evaluated by comparing it with the traditional
approaches using blockchain with 4G and LTE-A networks. The
performance evaluation parameters used are system scalability,
network latency, data storage cost and its computation, network
throughput, profit, communication reliability, and convergence
for the optimal payoff between vehicle owners and customers.
The performance results shows the Block-CPS outperforms the
traditional blockchain-based systems.
Index Terms—Blockchain, car sharing, data pricing, ethereum,
non-cooperative game, smart contract.
I. INTRODUCTION
IN RECENT years, a huge amount of data has been gener-
ated as car sharing is getting more demands over personal
vehicles due to the increased road traffic and travel costs [1].
Manuscript received 4 January 2022; revised 15 July 2022; accepted 11
August 2022. Date of publication 16 August 2022; date of current version
7 December 2022. The work of Mohammad Dahman Alshehri was sup-
ported by Taif University, Taif, Saudi Arabia, under Grant TURSP-2020/126.
(Corresponding author: Neeraj Kumar.)
Riya Kakkar, Rajesh Gupta, and Sudeep Tanwar are with the Department
of Computer Science and Engineering, Institute of Technology, Nirma
University, Ahmedabad 382481, India (e-mail: 21ftphde56@nirmauni.ac.in;
18ftvphde31@nirmauni.ac.in; sudeep.tanwar@nirmauni.ac.in).
Mohammad Dahman Alshehri is with the Department of Computer Science,
College of Computers and Information Technology, Taif University, Taif
21944, Saudi Arabia (e-mail: alshehri@tu.edu.sa).
Amit Dua is with the Department of Computer Science and Information
Systems, Birla Institute of Technology and Science Pilani, Pilani 333031,
India (e-mail: amit.dua@pilani.bits-pilani.ac.in).
Neeraj Kumar is with the Department of Computer Science and
Engineering, Thapar Institute of Engineering and Technology, Deemed to be
University, Patiala 147004, India, and also with the School of Computing,
University of Petroleum and Energy Studies, Dehradun 248007, India
(e-mail: neeraj.kumar@thapar.edu).
Digital Object Identifier 10.1109/JIOT.2022.3198960
Nowadays, people prefer to travel by car sharing than their cars
due to minimal usage, which is approx. < 90 mins/day [2].
Car sharing offers various benefits, such as reduced air pol-
lution, energy savings, cost savings, and minimizing road
traffic, attracting travelers to prefer this mode of travel [3]. As
car sharing is increasing due to the aforementioned benefits,
many organizations have started developing online centralized
platforms for easily finding shared rides accessible via open
Internet channels. The open channel centralized platforms can
come across various security and privacy issues that restrict
travelers from using and benefitting from online ride sharing
platforms [4].
The security and privacy of centralized ride sharing systems
are vulnerable to third-party systems as they can misuse the
user’s confidential information and demand the drivers to pay
high price [5], [6]. A decentralized and trustable system is
required to mitigate the aforementioned security and privacy
issues in the ride sharing system. The users and drivers can
be treated fairly in the system. Users should pay fairly in the
system, and keeping track of the driver’s behavior toward the
users is very important to make the system secure, reliable,
fair, and trusted.
Many researchers across the globe have given blockchain-
based decentralized ride sharing solutions to mitigate the
security and privacy issues of centralized systems, such as
data modification, sniffing, eavesdropping, denial of service
attacks, and many more [1]. However, a few of the works
are as follows: Baza et al. [6] proposed a decentralized B-
ride system, a public blockchain-based ride sharing system
to protect users against malicious attackers by implement-
ing zero-knowledge set membership proof (ZKSM). Then,
Dai et al. [7] discussed the integration of blockchain technol-
ogy with the Internet of Things (IoT), i.e., BCoT, to resolve
the interoperability and security issues in the system by pro-
viding the survey on BCoT. Later, Ferrag et al. [8] surveyed
the blockchain-based technologies with different IoT domains,
such as the Internet of Vehicles (IoV), which faces various
combined attacks and security issues. Then, Pal and Ruj [9]
investigated an ethereum blockchain-based solution, i.e.,
BlockV, to ensure data confidentiality in the ride sharing
system.
Xu et al. [1] designed a consortium blockchain-based frame-
work to create a P2P network enabling the data security
2327-4662 c© 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0002-9591-0132
https://orcid.org/0000-0003-3298-4238
https://orcid.org/0000-0001-9520-330X
https://orcid.org/0000-0002-1776-4651
https://orcid.org/0000-0002-3190-389X
https://orcid.org/0000-0002-3020-3947
KAKKAR et al.: Block-CPS: BLOCKCHAIN AND NON-COOPERATIVE GAME-BASED DATA PRICING SCHEME 25781
for car sharing. They have used the Stackelberg game
approach to evaluate the optimal pricing scheme. Later,
Wang and Zhang [10] also presented a consortium blockchain-
based scheme to secure ride sharing services. An attribute-
based proxy reencryption algorithm has been used to make
the system more transparent and secure. Huang et al. [11]
discussed a car sharing decentralized architecture that focuses
on maintaining the privacy of the customer’s identity with the
help of privacy-preserving identity management. To further
resolve the security issues in blockchain-based IoT systems
in [8], Ferrag and Shu [12] surveyed various blockchain-based
systems for different types of IoT fields, such as IoV, Internet
of Energy (IoE), etc., with the help of various security analysis
techniques and consensus algorithms. Then, Peng et al. [13]
provided an extensive survey to resolve security issues with
smart contracts integrated with IoT for different blockchain
platforms [14], [15].
All security-related solutions given by the researchers may
endure various issues, such as man-in-the-middle attacks, secu-
rity issues related to user’s identity, communication overhead,
scalability issues, less user friendly, and no anonymity. The
security issues mentioned above of ride sharing systems can
be resolved by incorporating blockchain technology with a
non-cooperative game-theoretic approach, which is a secure
and credible solution. We have formulated a non-cooperative
game to satisfy the vehicle owners and customers with ride
sharing data pricing. The non-cooperative game ensures that
no players can cheat or conflict with each other. Furthermore,
using the 5G communication network ensures the system is
efficient and reliable. This article presents a blockchain and
the non-cooperative game-based data pricing scheme for car
sharing over the 5G network to secure data sharing among
vehicle owners and customers. As a result, vehicle owners
can get their ride sharing benefits, and customers do not have
to pay high prices for their rides.
A. Motivation
Most of the researchers have given ride sharing
schemes [11], [16], but they have not focused on the
security aspects of the proposed system. They have also
utilized a centralized storage and interpretation system
for ride data sharing. These solutions can pose security,
single point of failure, reliability, and trust issues. Later, the
Baza et al. [6] and Dai et al. [7] discussed blockchain-based
ride sharing solutions to offer security, reliability, and trust
to vehicle owners and customers. Moreover, they have
managed to achieve security, but without considering the
price optimality factor that can cause severe loss to vehicle
owners and customers involved in the ride sharing in case of
not adequately utilized. Thus, there is a need for a system
that considers an optimal data pricing scheme for both vehicle
owner and customer, allowing customers to book their rides
optimally with a satisfying profit.
B. Research Contributions
The research contributions of this article are as follows.
1) We propose a blockchain-based secure and efficient data
pricing scheme, i.e., Block-CPS for car sharing over a
5G communication network.
2) An IPFS-based data storage system is introduced for
Block-CPS to make the data transactions secure and
cost-efficient.
3) We used a non-cooperative game-theoretic approach for
optimal pricing (both riders and owners earns profit)
between the vehicle owners and customers. Furthermore,
a non-cooperative game integrated with blockchain
enhances security in Block-CPS.
4) Finally, we evaluated the performance of Block-CPS
by considering parameters, such as scalability, network
latency, data storage cost and its computation, network
throughput, profit comparison, communication reliabil-
ity, and convergence for the optimal payoff between
vehicle owners and customers. Results illustrated that
the performance of the proposed system outperforms the
traditional systems.
C. Organization
The remainder of this article is organized as follows.
Section II presents the system model and problem formula-
tion. Section III describes the proposed Block-CPS. Section IV
presents the non-cooperative game-theoretic approach. Results
and discussion is presented in Section V, and finally, this article
is concluded in Section VI.
II. SYSTEM MODEL AND PROBLEM FORMULATION
A. System Model
Fig. 1 shows a blockchain-based data pricing scheme, i.e.,
Block-CPS for the car sharing scheme. It consists of three
entities vehicle owners (Eϑ), registration authority (E�), and
customers (Eθ ), which are connected via 5G communication
network. Blockchain has been used to eliminate third-party
systems to achieve trust and security in data sharing. If
the vehicle owner and customer want to add themselves to
the blockchain, they must first register with the registration
authority. After registration, a smart contract has been exe-
cuted to check whether the vehicle owner or a customer has
a valid certificate for exchanging data transactions over the
blockchain network. They can add data transactions to the
blockchain network if they have a valid certificate. A non-
cooperative game theory has been introduced in Block-CPS
to achieve optimality at data prices and make the system
fair. To overcome the high cost of data storage issues of
ethereum blockchain, the proposed scheme uses an IPFS
storage protocol using hash keys for data storage. IPFS is
a decentralized, immutable, and secure storage system and
is also free of cost. We preferred 5G as a communica-
tion network to enhance the network performance such as
latency, reliability, and availability of the system as it pro-
vides various features, such as ultralow latency (< 1 ms),
high data speed (< 10 Gb/s), and high availability
(< 99.9999%).
Fig. 2 shows the detailed sequence of the Block-CPS to get
the optimal payoff for vehicle owner and customer. We have
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
25782 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 24, 15 DECEMBER 2022
Fig. 1. Block-CPS system model.
Fig. 2. Flow of the Block-CPS.
considered vehicle owners and customer data about the rides
as input. Further, the proposed system consists of three layers,
i.e., data, communication, and blockchain. The output of the
data layer feeds as an input to the communication layer to
further add it to the blockchain. Moreover, a non-cooperative
game theory has been designed with pure strategy, which fur-
ther consists of payoff for different strategies to get a maximal
payoff at the Nash equilibrium.
B. Problem Formulation
We have considered the set of three entities E ∈
{Eϑ ,E�,Eθ }, where Eθ is a set of r registration authorities
θu ∈ {θ1, θ2, . . . , θr} with which multiple customers (∈ E�)
and vehicle owners (∈ Eϑ) are associated for registration. Eϑ
is a set of v vehicle owners {ϑ1, ϑ2, . . . , ϑv}, which can be
associated with multiple customers �j ∈ {�1,�2, . . . , �c}
for ride sharing. Customers (∈ E�) need to be associated with
any mth vehicle owner, i.e., ϑm ∈ Eϑ for ride in exchange of
money (in ether) i.e., ��j (∈ E�) → �ϑm , where ��j and
�ϑm are ethereum wallets of the jth customer and mth vehicle
owner. The relationship between all the entities is mentioned as
follows:
ϑm
ε−→
s∑
j=1
�j and �j
ε−→
t∑
m=1
ϑm (1)
�j
ε−→
s′∑
u=1
θu and ϑm
ε−→
t′∑
u=1
θu (2)
s ≤ c, t ≤ v, s′ ≥ s, t′ ≥ t (3)
j ∈ [1, c],m ∈ [1, v], j,m, u ≥ 0 (4)
where ε signifies the communication between vehicle owner
ϑm, customer �j, and registration authority θu for ride shar-
ing. t and s denote the number of vehicle owners ϑm and
the number of customers �j interacting so that customers can
book the ride with the help of their wallet. t′and s′ denote
the number of vehicle owners ϑm and number of customers
�j registering to r number of registration authorities to get
validated for data storage in IPFS. ϑm and �j are connected
through an IPFS network to store the customer’s request or
vehicle owner’s statement about the data for rides for which
the smart contract approves the certificate if they contain the
valid certificate, i.e., ϕ or not. If they contain the valid certifi-
cate then smart contract can allow vehicle owner or customer’s
data to be stored into the IPFS and IPFS can give back the set
of hash keys γk ∈ {γ1, γ2, . . . , γh} to the vehicle owners and
γe ∈ {γ1, γ2, . . . , γw} the customers. �j can check their data
anytime in the IPFS by using their γe. The mentioned entities
can be denoted as follows:
ϑm
ζ−→
h′∑
k=1
γk k > 0, h′ ≤ h (5)
�j
ζ−→
o∑
e=1
γe; e > 0, o ≤ w (6)
where ζ signifies h′ and o number of hash keys γk and γe
associated with ϑm and �j.
Now, vehicle owners and customers have their own hash
keys associated with them which the IPFS has returned after
validating their certificate with a smart contract. Now, the data
is to be added (vehicle owner’s or customer’s data about the
rides) to the blockchain network. Blockchain consists of a
chain of blocks linked together to store the transactions and
their information and validate the new blocks. When vehicle
owners or customers want to add their data to the blockchain,
their hash keys should correspond to the hash of the block
header in the blockchain. A block comprises of block num-
ber, nonce, timestamp, and block data to validate the vehicle
owner or customer’s data block. The previous hash of the block
(λprev) and the block data (Bd) can be used to compute the
hash of the current block header (λbh), which is elaborated as
follows [17]:
λ : σ → {0, 1}y ∀σ ∈ Aϑm,�j; λ(σ) = σ ′ (7)
λ
(
σ ′
) 	= σ, σ1 	= σ2, λ(σ1) 	= λ(σ2) (8)
where A is the set of matrices of the vehicle owner and cus-
tomer’s data. σ denotes the message of original data of vehicle
owner and customer.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
KAKKAR et al.: Block-CPS: BLOCKCHAIN AND NON-COOPERATIVE GAME-BASED DATA PRICING SCHEME 25783
Fig. 3. Proposed Block-CPS framework.
The hash of block header (λbh) consists of {λprev,Bd} ∈ λbh.
So, if a vehicle owner or customer want to add their data about
the rides, their hash should correspond to the block header’s
hash. The mentioned entities can be shown as follows:
h′∑
k=1
γk
α−→ λbh, k > 0, k ∈ [1, h] (9)
o∑
e=1
γe
α−→ λbh; e > 0, e ∈ [1,w] (10)
where α signifies the particular hash keys associated with ϑm
and �j, which correlate to the block hash of blockchain.
After validating the blocks, vehicle owners have their data
about the prices of car sharing stored in the blockchain.
Customers can view and book their ride according to the loca-
tion and price appropriately. For example, number of rides can
be denoted by {R1,R2,R3, . . . ,Rr} ∈ Rz. A vehicle owner has
three available rides {R1,R2,R3} which customer can check
in the blockchain to book for their visit, and if the customer
finds it appropriate to book, then, the vehicle owner has left
two available rides {R1,R2} for booking. When the vehicle
owner has no available ride to broadcast, then, the customer
has to look for the other rides available. Entities vehicle owner
and customer are connected with each other and can interact
with the help of their �ϑm and ��j addresses which can be
represented as follows [18]:
�ϑm =
{
δϑm ,�ϑm , ϑμm , φϑm , η,Tmerkle
}
(11)
��j =
{
δ�j ,��j ,�
μ
j , φ�j , η,Tmerkle
}
(12)
where δϑm and δ�j denote the private key and �ϑm and ��j
denote the public key for ϑm and �j. Hash can be expressed
with the help of ϑμm and �
μ
j and φϑm and φ�j signify the
timestamp required for ϑm and �j. η denotes the gas required
for a transaction and Tmerkle denotes the Merkle tree.
Entities can interact with each other over the 5G network
as we need a car sharing scheme that should satisfy the
customer’s experience of ride so using a 5G network pro-
vides a fast and reliable service with its characteristics for
the customer’s ride, which are follows:
Avail5G ≈ 99.999%, (13)
DR5G ≤ 10 Gb/s and LE2E < 1 ms (14)
where Avail5G, DR5G, and LE2E denote the high availability,
high data rate, and ultralow latency associated with the 5G
network. 5G offers entities to communicate efficiently with
each other for ride sharing with minimum delay (i.e., < 1 ms)
as per the customer and vehicle owner satisfaction.
III. Block-CPS: THE PROPOSED SCHEME
This section presents the proposed blockchain-based data
pricing scheme for car sharing. A non-cooperative game has
been formulated for the same and the proposed framework is
implemented over the 5G network to make the system reliable
and secure. Fig. 3 presents the Block-CPS framework in detail.
The proposed framework aims to enhance the communication
security between vehicle owners and customers. The proposed
architecture is divided into three layers: 1) data layer; 2) com-
munication layer; and 3) blockchain layer. These three layers
with their functions are explained in detail as follows.
A. Data Layer
Data Layer is the primary layer of Block-CPS, where enti-
ties can communicate with each other. Entities involved in the
communication are vehicle owners and customers associated
with their hash keys. In a ride sharing system, customers want
to book their ride according to their visit, and vehicle own-
ers will provide details about the number of available rides
with their assigned prices in the system. Therefore, customers
and vehicle owners need to store their information on the ride
sharing like vehicle owners will broadcast the available rides
with their prices. In addition, customers need to store details
about the destination of their visit and their willing price. So,
in the data layer, vehicle owners and customers request their
data about the rides to be stored in IPFS, which has to go
through the communication layer to satisfy some conditions
checked by the registration authority.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
25784 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 24, 15 DECEMBER 2022
Fig. 3 shows the registration steps the vehicle owners and
customers must follow before storing the data. The registra-
tion authority will authorize vehicle owners and customers by
sending them an encrypted token to show while keeping the
data in IPFS. The proposed scheme ensures that communi-
cation between the entities and their data should be secured,
trusted, and reliable.
B. Communication Layer
The communication layer is the one through which all data
transmissions can perform securely over the 5G communi-
cation network. The 5G communication network used in the
proposed scheme ensures fast and reliable data transmission
with its multiple features, such as high resolution and high data
rate, facilitating the massive amount of data transmission [19].
In this layer, the smart contract authorizes the vehicle owner’s
and customer’s authorization in the network after registering
with the registration authority. Vehicle owners and customers
have their hash keys associated with them; smart contracts
authorize the certificate of vehicle owners or customers to
check whether they are trusted users. If they are authorized,
they can store their data successfully. But, they will be denied
storing it if they do not have a valid certificate. So, all data
transmission will be securely performed in the communication
layer over the 5G network.
C. Blockchain Layer
All the transmission of data about the rides has been through
the communication layer to verify the authorization of vehi-
cle owners and customers by executing the smart contract to
check their authorization for storing the data in IPFS. Data
storage in IPFS is free of cost and ensures the availability
and reliability of data in a car sharing system. IPFS can store
the data of vehicle owners and customers data after validating
with a smart contract in the following form [20]:
ipfs.files.add
{
Aϑm,�j
}
(15)
where A denotes the set of matrices associated with data of
ϑm and θu. The blockchain layer mainly focuses on storing
data in IPFS, which will then be added to the blockchain
so that the customers can check the details about the rides
broadcasted by vehicle owners. Algorithm 1 demonstrates the
detailed procedure of storing the data in IPFS as requested by
vehicle owners and customers. Vehicle owners and customers
can request to add their data about the rides in the blockchain.
In the algorithm, after executing the smart contract to vali-
date the certificate of the vehicle owner or customer, IPFS
will return the hash keys to the vehicle owner and customer.
If their hash keys correspond to the hash of the blockchain
(λbh), then, they can add their data to the blockchain success-
fully with the time complexity of O(v) and O(c); otherwise,
access will be denied.
Fig. 4 also presents a blockchain-based handshake diagram
in which vehicle owners or customers send a request to add
data to the blockchain. Before that, they have to register them-
selves to the registration authority for the certificate; IPFS will
facilitate the hash keys to the authorized vehicle owners or
Algorithm 1 Blockchain-Based Data Storage Algorithm
Input: IPFS(hash,key), γk , γe, Aϑm , A�j ,ϕ, λbh
Output: Add Aϑm and A�j to the blockchain
1: procedure BLOCKCHAIN_STORAGE(ϑm , �j, γk , γe,RA )
2: if E ∈ Eϑm then
3: for i = 1, 2, . . . , v do
4: IPFS(hash, key)←Request_to_datastore(ϑm)
5: ϑm
token←−−− θu
6: Execute smart contract
7: if ϑm ∈ ϕ then
8: IPFS(hash, key)← Aϑm
9: γk ← IPFS(hash, key)
10: blockchain← Request_to_add (Aϑm )
11: if γk ∈ λbh then
12: Data added successfully
13: else
14: Access denied
15: end if
16: else
17: Invalid Certificate
18: end if
19: end for
20: else if E ∈ E�j then
21: for i = 1, 2, . . . , c do
22: IPFS(hash, key)←Request_to_datastore(�j)
23: �j
token←−−− θu
24: Execute smart contract
25: if �j ∈ ϕ then
26: IPFS(hash, key)← A�j
27: γe ← IPFS(hash, key)
28: blockchain← Request_to_add (A�j )
29: if γe ∈ λbh then
30: Data added successfully
31: else
32: Access denied
33: end if
34: else
35: Invalid Certificate
36: end if
37: end for
38: end if
39: end procedure
Fig. 4. Block-CPS handshake diagram.
customers after validating the certificate. After validating the
certificate, vehicle owners or customers can add their data to
the blockchain. For that, their hashes should be as per the hash
of the blockchain.
IV. NON-COOPERATIVE GAME APPROACH
A non-cooperative game has been formulated for a
blockchain-based data pricing scheme for car sharing, which
comprises vehicle owners and customers who will follow the
pure strategy in the game. It means players make their strate-
gies individually and do not communicate with each other [21].
But both players, vehicle owner, and customer, will try to
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
KAKKAR et al.: Block-CPS: BLOCKCHAIN AND NON-COOPERATIVE GAME-BASED DATA PRICING SCHEME 25785
maximize the profit for the rides leading to a situation where
we need to discuss the data pricing for rides between entities,
vehicle owners, and customers. Therefore, we will analyze the
non-cooperative game to examine the data pricing for entity
customers and vehicle owners.
The game consists of two players vehicle owners
ϑm and customers �j who can check the available
rides {R1,R2,R3, . . . ,Rr} ∈ Rz with its associated prices
{PR1 ,PR2 , . . . ,PRr } assigned by vehicle owners using GPS in
the blockchain. Let Sϑm = {S1, S2} be the pure strategy of
vehicle owners, which are route selection and maximum price
for the ride, it means vehicle owners can maximize their profit
if the available ride takes the long route. They can maximize
the ride price if there is a maximum number of shares in the
car. Let S�j = {S1, S2} be the strategy of customers which
are route selection and minimum price to travel, it means cus-
tomers prefer the ride to take short route so that they have
to pay less price. They want the minimum number of shares
in the ride with the minimum price to take less time to reach
their destination. Vehicle owners and customers both will try
to maximize their payoff, which we can define in terms of
the utility function, i.e., X(ϑm,�j)(Sϑm , S�j) according to their
strategies. Now we can consider the utility function in the form
of a matrix and discuss it.
In the utility matrix, X(ϑm,�j) as a payoff can be calculated
based on the strategies S�j = {S1, S2} for vehicle owners and
S�j = {S1, S2} for customers. Therefore, we can express pay-
off matrix considering the strategies for vehicle owner and
customer, which is defined as follows:
X(ϑm,�j) =
⎡
⎢⎢⎣
(
S1ϑm
, S1�j
)(
S1ϑm
, S2�j
)
(
S2ϑm
, S1�j
)(
S2ϑm
, S2�j
)
⎤
⎥⎥⎦. (16)
Now, we can evaluate payoff X(ϑm,�j) for vehicle owner and
customer with strategies in which vehicle owner want the ride
to take the long route to maximize their price for ride and
customers want to travel through the shortest route so that
they have to pay a lesser price. The number of d routes for
rides is denoted by {ρ1, ρ2, . . . , ρd} ∈ ρp. The payoff X(ϑm,�j)
of vehicle owner and customer with strategy {S1ϑm
, S1�j
} is
represented as follows:
X(ϑm,�j) =
{
S1ϑm
, S1�j
}
(17)
S1ϑm
ι−→ max
d′∑
p=1
ρp; d′ ≤ d, p > 0 (18)
S1�j
ι−→ min
d′∑
p=1
ρp; d′ ≤ d, p > 0 (19)
where ι signifies the strategy of ϑm and �j based on the d′
number of routes for ride sharing, and here, vehicle owner and
customer can select different types of routes, i.e., short route
and long route according to their benefit. In the utility matrix,
X(ϑm,�j) defines the payoff of the vehicle owner and customer
with strategies in which vehicle owners want to ride to take
the long route to their benefits, and customers want to travel
at a minimum price. The payoff X(ϑm,�j) of vehicle owner and
customer with strategy {S1ϑm
, S2�j
}, is represented as follows:
X(ϑm,�j) =
{
S1ϑm
, S2�j
}
(20)
S1ϑm
ι−→ max
d′∑
p=1
ρp; d′ ≤ d, p > 0 (21)
S2�j
π−→ min
r′∑
q=1
PRq; r′ ≤ r, q > 0 (22)
where ι and π denote the strategy of vehicle owners and cus-
tomers based on the d′ number of routes and r′ number of
prices assigned to the rides.
In the utility matrix, X(ϑm,�j) denotes the payoff of the
vehicle owner and customer with strategies in which vehi-
cle owners want to gain maximum price from customers to
maximize their profit and customers want to travel through
the shortest route (minimize) so that they have to pay a lesser
price. The payoff X(ϑm,�j) of vehicle owner and customer with
strategy {S2ϑm
, S1�j
} is represented as follows:
X(ϑm,�j) =
{
S2ϑm
, S1�j
}
(23)
S2ϑm
ξ−→ max
r′∑
q=1
PRq; r′ ≤ r, q > 0 (24)
S1�j
ι−→ min
d′∑
p=1
ρp; d′ ≤ d, p > 0 (25)
where ξ and ι signify the strategy of vehicle owners and
customers based on the r′ number of assigned prices and d′
signifies number of routes for ride sharing. In the utility matrix,
X(ϑm,�j) is considered as the payoff of the vehicle owner and
customer with strategies in which vehicle owners want to gain
the maximum price from the customers for the ride and cus-
tomers want to travel so that they have to pay the minimum
price for the ride. The payoff X(ϑm,�j) of vehicle owner and
customer with strategy {S2ϑm
, S2�j
}, is represented as follows:
X(ϑm,�j) =
{
S2ϑm
, S2�j
}
(26)
S2ϑm
ξ−→ max
r′∑
q=1
PRq; r′ ≤ r, q > 0 (27)
S2�j
π−→ min
r′∑
q=1
PRq; r′ ≤ r, q > 0. (28)
Now, we have discussed all the possible strategies and the
associated payoff that vehicle owners and customers can adapt
in a non-cooperative game through the utility matrix. In a non-
cooperative game, Nash equilibrium is a stable condition after
which players cannot deviate from their strategy after going
through another player’s strategy to gain payoff [22]. In this
situation, vehicle owners want that ride to take a long route,
and the price should be maximum, and customers want to
travel through a short route and pay the minimum price. Still,
it is not always possible to be conditions in their favor when
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
25786 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 24, 15 DECEMBER 2022
we talk about ride sharing. So, there is a need for a condition
that can satisfy both vehicle owners and customers in terms of
profit. For that, a Nash equilibrium exists between the vehicle
owner and customer with the utility matrix X(ϑm,�j) consider-
ing the strategy {S∗ϑm
, S∗�j
}, i.e., route selection lies in between
short route and long route and price can be finalized between
minimum price and maximum price so that both vehicle own-
ers and customers can be satisfied. The payoff XN
(ϑm,�j)
of
the vehicle owner and customer at a Nash equilibrium with
strategy {S∗ϑm
, S∗�j
} is represented as follows:
XN
(ϑm,�j)
=
{
S∗ϑm
, S∗�j
}
(29)
min
d′∑
p=1
ρp < S∗ϑm
< max
d′∑
p=1
ρp (30)
min
r′∑
q=1
PRq < S∗�j
< max
r′∑
q=1
PRq (31)
where S∗ϑm
and S∗�j
denote the strategy of vehicle owner
and customer with the existence of Nash equilibrium using
the applied non-cooperative game theory approach. r′ and
d′ signify the number of assigned prices and routes for the
rides, which lie between minimum and maximum so that both
vehicle owner and customer can get benefit equally.
Definition 1: Nash Equilibrium: The non-cooperative game
theory consists of different pair of pure strategies {S1ϑm
, S1�j
},
{S1ϑm
, S2�j
}, {S2ϑm
, S1�j
}, and {S2ϑm
, S2�j
} in which players
vehicle owner and customer attempt to maximize their payoff
in the ride sharing system. It leads to the existence of Nash
equilibrium with the strategy S∗ϑm
and S∗�j
after which player
cannot diverge from this strategy to gain more payoff than
other players [23].
Theorem 1: The non-cooperative game theory is applied
to obtain the optimal payoff between vehicle owners and
customers along with the strategy {S∗ϑm
, S∗�j
} satisfies the
uniqueness property of the existence Nash Equilibrium.
Proof: The non-cooperative game theory along with the
pure strategies of vehicle owners and customers fulfills the
existence of an optimal payoff at a Nash Equilibrium with
the strategy, i.e., {S∗ϑm
, S∗�j
}. The criteria of uniqueness of the
Nash Equilibrium is defined in the form of a standard function,
i.e., best utility between users. The best utility, i.e., XN
(ϑm,�j)
at a Nash Equilibrium is denoted by a standard function if it
fulfills the following characteristics, such as positivity (�) and
monotonicity (ψ) that can be expressed as follows [24]:
� = XN
(ϑm,�j)
({
Sϑm , S�j
})
, � > 0 (32)
ψ = {
Sϑm , S�j
} ≥
{
S∗ϑm
, S∗�j
}
=⇒ XN
(ϑm,�j)
({
Sϑm , S�j
}) ≥ XN
(ϑm,�j)
({
S∗ϑm
, S∗�j
})
. (33)
Thus, the optimal payoff achieved between vehicle owner
and customer attains a unique Nash Equilibrium using pure
strategy between users so that individuals do not interfere with
each other while deciding the strategy to obtain the optimal
payoff for their benefit.
Algorithm 2 Non-Cooperative Game for Optimal Pricing
Input: γk , γe, Sϑm ,S�j
Output: S∗
ϑm
, S∗
�j
Initialization: p=1, q=1
1: procedure OPTIMAL_PRICE(X(ϑm,�j), Sϑm , S�j , γk , γe )
2: {Sϑm , S�j } = Blockchain_storage{ϑm , �j, γk , γe,RA }
3: for each player {ϑm, �j} with strategy Sϑm , S�j do
4: if Sϑm , S�j == (S1ϑm
, S1�j
) then
5: X(ϑm,�j) = {S1ϑm
, S1�j
}
6: S1ϑm
ξ−→ max
∑d
′
p=1 ρp
7: S1�j
π−→ min
∑d
′
p=1 ρp
8: else if Sϑm , S�j == (S1ϑm
, S2�j
) then
9: X(ϑm,�j) = {S1ϑm
, S2�j
}
10: S1ϑm
ξ−→ max
∑d
′
p=1 ρp
11: S2�j
π−→ min
∑r
′
q=1 PRq
12: else if Sϑm , S�j == (S2ϑm
, S1�j
) then
13: X(ϑm,�j) = {S2ϑm
, S1�j
}
14: S2ϑm
ξ−→ max
∑r
′
q=1 PRq
15: S1�j
π−→ min
∑d
′
p=1 ρp
16: else
17: X(ϑm,�j) = {S2ϑm
, S2�j
}
18: S2ϑm
ξ−→ max
∑r
′
q=1 PRq
19: S2�j
π−→ min
∑r
′
q=1 PRq
20: end if
21: end for
22: for each {ϑm, �j} with strategy S∗
ϑm
, S∗
�j
do
23: XN
(ϑm,�j)
= {S∗
ϑm
, S∗
�j
}
24: min
∑d
′
p=1 ρp < S∗
ϑm
< max
∑d
′
p=1 ρp
25: min
∑r
′
q=1 PRq < S∗
�j
< max
∑r
′
q=1 PRq
26: end for
27: Each player ϑm,�j can communicate new strategy {S∗
ϑm
, S∗
�j
} to blockchain
28: end procedure
We have discussed the existence of Nash equilibrium with
strategy {S∗ϑm
, S∗�j
}, which optimizes the payoff XN
(ϑm,�j)
for
vehicle owner and customer based on the pure strategy in
the non-cooperative game theory approach. But, if there is
an intruder or malicious attacker trying to modify the data in
ride sharing. For example, if a customer tries to book the ride
with minimum price frequently, it can be a loss for the vehicle
owner and lessen the chances of booking rides for another cus-
tomer. Similarly, the vehicle owner can attempt to charge high
prices for booking, which can also cause loss to the customers.
Therefore, to mitigate these security issues, we have used a
non-cooperative game theory with pure strategy in which if
any malicious attacker intrude in the ride sharing system, then
instead of payoff, they can be charged with a penalty (κϑm)
and (κ�j) while booking the ride. So, during the execution of
the smart contract for the authenticity of users, it can declare
them invalid users and discard them with a chargeable penalty.
A. Algorithm for Optimal Pricing
Algorithm 2 demonstrates the detailed procedure for an
optimal pricing in the car sharing system using a non-
cooperative game. The detailed procedure for optimal pricing
using a non-cooperative approach consists of players, vehicle
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
KAKKAR et al.: Block-CPS: BLOCKCHAIN AND NON-COOPERATIVE GAME-BASED DATA PRICING SCHEME 25787
(a) (b) (c)
Fig. 5. Performance comparison of Block-CPS with the traditional schemes. (a) Scalability comparison in Block-CPS. (b) Latency comparison in Block-CPS.
(c) Cost comparison in Block-CPS.
owners who want to maximize the price for rides for their ben-
efits, and customers who want to pay the minimum price for
their visit using their strategies {Sϑm ,S�j}. However, before
discussing the non-cooperative-based algorithm of optimal
pricing for vehicle owners and customers, we need to focus
on the blockchain-based secure data storage, i.e., price and
distance associated with the rides being used to formulate the
strategies for the users. As a result, the secure data obtained
from Algorithm 1 can be forwarded to formulate strategies for
the vehicle owners and customers based on the different sce-
narios to optimize the payoff using a non-cooperative game
theory approach.
So, in the algorithm, we have achieved a nash equilib-
rium in which both vehicle owners and customers can be
satisfied by attaining a new strategy {S∗ϑm
, S∗�j
}. Considering
the new strategy, the price for rides and routes both will lie
between the maximum and minimum so that both vehicle
owners {ϑ1, ϑ2, . . . , ϑv} ∈ ϑm with their time complexity of
O(v) and customers �j ∈ {�1,�2, . . . , �c} with their time
complexity of O(c) can be satisfied.
V. RESULTS AND DISCUSSION
In this section, the performance of Block-CPS has been
evaluated based on scalability, throughput, latency, the cost
for data storage and its computation, profit comparison, and
reliability of the system. These parameters are analyzed by
deploying the smart contract of the ethereum Blockchain-
based proposed system using solidity language in the remix
integrated development environment (IDE) that also specifies
the functionalities involved to formulate the different scenarios
for the non-cooperative game theory approach. The scenarios
are formulated considering the utility matrix, which consists
of four different strategies based on the price and distance
associated with the number of rides for vehicle owners and
customers. Moreover, we have also presented the implemen-
tation interface of the proposed system using remix IDE to
highlight the associated functionalities to achieve the optimal
payoff for users. The detailed evaluation is as follows.
A. Scalability
Fig. 5(a) shows the comparison of scalability of Block-CPS
(car sharing system) with the IPFS and without IPFS storage.
The Block-CPS scalability is higher with IPFS as it stores data
free of cost and returns hash value for future access of data,
but the whole block of data is stored in blockchain. So, the
graph shows that initially, when the number of data blocks
for storage is lesser, the system’s scalability using blockchain
as data storage and IPFS as data storage do not differ from
each other at an extreme level. But, as the number of blocks
needed to store increases, IPFS improves the scalability of the
Block-CPS compared to the blockchain data storage due to
its benefit to store a huge number of transactions as IPFS can
store a huge amount of data in the form of hashes improving
its scalability. In contrast, blockchain needs to store a whole
block of data.
B. Latency
The E2E latency of the Block-CPS can be defined as how the
Block-CPS is reacting with the increase in the number of trans-
actions for rides. Fig. 5(b) presents the comparison of latency
of Block-CPS based on various communication networks, such
as 5G, 4G, and LTE-A technologies. The graph distinguishes
that the 5G communication network latency is relatively low
compared to 4G and LTE-A. Because of its various charac-
teristics, such as high resolution, a high data rate lead to an
end-to-end latency of less than 5 ms, i.e., Latency_E2E < 1
ms. The graph depicts that latency of Block-CPS with 5G is
quite low as compared to the latency of less than 20 ms, i.e.,
Latency_LTE-A < 20 ms with LTE-A and latency of less than
50 ms, i.e., Latency_4G < 50ms with 4G with the increase in
the number of transaction for rides [25].
C. Cost for Data Storage
Fig. 5(c) shows the comparison of cost of Block-CPS for
data storage based on IPFS data storage and blockchain data
storage. The graph depicts that cost of the Block-CPS using
IPFS data storage is quite low compared to blockchain data
storage. Initially, when there are fewer transactions for rides,
both IPFS data storage and blockchain data storage would lie
at the same level. But, as the number of rides increases, stor-
ing the data in IPFS for the Block-CPS is quite improved and
better than blockchain data storage. Because first, IPFS stores
data in the form of hashes, which will lead to a lesser cost than
blockchain data storage, which stores the whole block of data
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
25788 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 24, 15 DECEMBER 2022
(a) (b) (c)
Fig. 6. Comparison of Block-CPS with traditional approaches. (a) Throughput comparison in Block-CPS. (b) Profit analysis in Block-CPS. (c) Reliability
comparison in Block-CPS.
that is quite costly. Furthermore, the cost computation param-
eter can be used to highlight the advantage of the introduced
IPFS protocol with the blockchain network that outperforms
the blockchain in terms of data storage cost.
1) Computation Cost: The computation for data storage
cost can be performed to highlight the benefit of the IPFS
P2P network than usage of blockchain in the proposed system.
The combinatorial framework of blockchain and IPFS allows
secure and efficient transactions between vehicle owners and
customers for ride sharing. Foremost, gas computation is
required to determine 1 kB of data storage denoted by GtKB.
However, before that, gas price of a single word GtSw of
256 bits needs to be computed to further utilize it for gas com-
putation of 1 kB of data. The above-mentioned associations
are represented as follows:
1GtSw = 20 ∗ 103 Gas
(
Gs = 20k
)
(34)
GtKB =
(
210/256
)
∗
(
2 ∗ 104
)
Gas. (35)
After calculating the gas for 1 kB of data, we need to consider
data storage of W number of words, that can be enumerated
with the help of ethereum price Empe and gas price Gape.
Therefore, the required cost for data storage (Cds
W ) of W num-
ber of words with the help of price of 1 ether, i.e., 1Em = 109
can be expressed as follows:
Cds
W =
(
w ∗ Gs)/Em. (36)
Thus, we can use aforementioned parameters, i.e., Cds
W , Empe,
and Gape to evaluate the data storage cost of W words in U.S.
Dollar, which is mentioned as follows:
Cds
WUSD
=
(
Gape ∗ Cds
W
)
∗ Empe. (37)
Therefore, to improve the performance of blockchain-based
proposed system in terms of cost-efficiency, IPFS has been
introduced that overcome the high storage cost issues of
blockchain due to its principle of storing the data in the form
a hash [26].
D. Throughput
Fig. 6(a) presents the comparison of throughput of Block-
CPS with the different communication networks such as 4G,
5G, and LTE-A. Throughput of the network can be defined
as the data rate at which the system will respond differently
according to the used communication network with the increase
in the number of requests for rides. It can be depicted from
the graph that throughput of Block-CPS is less than 10 Gb/s
i.e., Data_rate5G < 10 Gb/s with 5G is quite high as compare
to the throughput of 4G which is Data_rate4G < 100 Mb/s and
throughput of LTE-A which is Data_rateLTE−A < 500 Mb/s
with the increase in number of requests for rides [25].
E. Profit Comparison
Fig. 6(b) shows the profit comparison for Block-CPS with
the increase in the number of requests for rides using a
non-cooperative game theory approach. Furthermore, we have
implemented the proposed model of data pricing between
vehicle owner and customer with the coalition game the-
ory approach to prove enhanced optimality of the proposed
non-cooperative game theory. The graph depicts the improved
optimal payoff of the proposed non-cooperative game theory
approach than the traditional coalition game theory. As, coali-
tion game theory implemented between users works on the
principle that players, i.e., vehicle owner and customer have
to form a coalition in such a way that they have information
about the other user’s strategy and optimal payoff is obtained
based on the defined preference order of the existent Nash
Equilibrium. It means user who does not follow the prefer-
ence order to surpass the other user in terms of payoff can
reduce the overall payoff of the proposed model. On the other
hand, the non-cooperative game theory applied in the proposed
model allows players to decide their own strategy without
any interference with each other. Moreover, the existence of a
unique Nash Equilibrium ensures the optimal and enhanced
payoff than the coalition game theory. It can be observed
from the graph that when there are less number of requests
for rides initially, profit for Block-CPS increases linearly in
case of the non-cooperative game theory. But, as the num-
ber of requests increases, profit increases exponentially as we
are using a non-cooperative game-theoretic approach. Thus,
the improved payoff is being attained with the proposed non-
cooperative game theory of unique Nash Equilibrium than the
coalition game theory due to the factor of preference order.
Fig. 7 depicts the convergence feature of Block-CPS applied
using the non-cooperative game theory. It shows that after a
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
KAKKAR et al.: Block-CPS: BLOCKCHAIN AND NON-COOPERATIVE GAME-BASED DATA PRICING SCHEME 25789
Fig. 7. Convergence.
particular point in the graph, the payoff for vehicle owner and
customer remains stable. That point is called Nash equilibrium
considering the pure strategy.
F. Reliability
Reliability measures how the system performs with the
increase in the number of requests for rides using the
blockchain approach and traditional approach. Fig. 6(c) dis-
tinguish that the proposed system with a blockchain-based
approach is more reliable as compared to the traditional
approach with a third-party system. Initially, when the num-
ber of requests is less for rides, the blockchain-based and
traditional approaches would lie at approximately the same
level. But as the number of requests increases, the reliability
of the traditional approach would deteriorate as any third-party
system can make it less secure by manipulating with data. But,
when we compare it to the Block-CPS, it will be more secure
and confidential to make the overall system reliability.
G. Proposed System Implementation Interface
Fig. 8 presents a detailed structure of the deployed
smart contract of the proposed non-cooperative game the-
ory approach in remix IDE for achieving the optimal pay-
off between vehicle owner and customer [27]. Moreover, it
shows the associated functions of the smart contract, i.e., for
blockchain-based secure data storage and to implement the
non-cooperative game theory approach between users.
H. Security Verification of Block-CPS
In this section, we have performed security verification
of the Block-CPS to show the secure deployment of the
smart contract using various security analysis tools, such as
smartcheck and verisol, which are explained as follows.
1) Smartcheck Security Analysis: First, the security anal-
ysis of Block-CPS has been performed over the smartcheck
tool. After generating the solidity source code from ethereum,
we have considered the smartcheck tool to validate the various
Fig. 8. Proposed system implementation interface using remix IDE.
(a)
(b)
Fig. 9. Security analysis of Block-CPS over smartcheck tool. (a) Security
analysis over smartcheck (by default). (b) Security analysis over smartcheck.
Fig. 10. Security analysis over Verisol.
vulnerabilities generated in the Block-CPS. Fig. 9(a) depicts
that by default, the system will give one severity for a line
in the source code when implemented over the smartcheck
tool [28]. But, Fig. 9(b) depicts that, when we have removed
the severity from that one line from the source code, it is not
showing any severity or vulnerability contributing to making
the Block-CPS secure against any vulnerability.
2) Verisol Security Analysis: We have also considered one
more security analysis tool, i.e., verisol to check the existence
of any vulnerability in the deployed smart contract of Block-
CPS. Additionally, it performs the formal verification of the
proposed system by generating an intermediate Boogie pro-
gram considering the smart contract code as an input [29].
Fig. 10 shows that formal security verification of the smart
contract over verisol highlights the successful security analysis
of Block-CPS without any vulnerability.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
25790 IEEE INTERNET OF THINGS JOURNAL, VOL. 9, NO. 24, 15 DECEMBER 2022
VI. CONCLUSION
This article proposes a blockchain-based secure data pric-
ing scheme, i.e., Block-CPS using IPFS data storage over the
5G communication network. It eradicates the need for third-
party systems by facilitating a secure, trusted, and reliable
system. We have analyzed the traditional approaches for car
sharing to understand their security, the cost for data stor-
age, latency, throughput, scalability, and reliability issues in
detail. We have discussed that using IPFS in the blockchain-
based data pricing scheme for car sharing over the 5G
communication network facilitates security, low latency, high
throughput, high scalability, and cost-effective data storage
for the car sharing system. We have formulated the non-
cooperative game-theoretic approach to maximize the profit for
vehicle owners, and customers also have to pay the minimum
price. The formulated approach integrated with blockchain
enhances the security of Block-CPS. We have implemented
the source code of Block-CPS on remix IDE to validate the
functions involved in it. Finally, the performance of Block-CPS
has been compared with the traditional approaches in terms of
scalability, network latency, data storage cost and its compu-
tation, network throughput, profit comparison, communication
reliability, and convergence for the optimal payoff between
vehicle owners and customers by differentiating between 4G,
LTE-A, and 5G networks. Performance of Block-CPS shows
that the Block-CPS is quite secure and reliable.
In future, we will incorporate more real-time scenarios
to enable efficient ride sharing for users in a dynamic
environment.
REFERENCES
[1] C. Xu, K. Zhu, C. Yi, and R. Wang, “Data pricing for blockchain-
based car sharing: A Stackelberg game approach,” in Proc. IEEE Global
Commun. Conf., 2020, pp. 1–5.
[2] Q. Zhou, Z. Yang, K. Zhang, K. Zheng, and J. Liu, “A decentralized
car-sharing control scheme based on smart contract in Internet-of-
Vehicles,” in Proc. IEEE 91st Veh. Technol. Conf. (VTC-Spring), 2020,
pp. 1–5.
[3] Y. Wang, J. Gu, S. Wang, and J. Wang, “Understanding consumers’
willingness to use ride-sharing services: The roles of perceived value and
perceived risk,” Transp. Res. C, Emerg. Technol., vol. 105, pp. 504–519,
Aug. 2019.
[4] Z. Yang, K. Yang, L. Lei, K. Zheng, and V. C. M. Leung,
“Blockchain-based decentralized trust management in vehicular
networks,” IEEE Internet Things J., vol. 6, no. 2, pp. 1495–1505,
Apr. 2019.
[5] M. Li et al., “CrowdBC: A blockchain-based decentralized framework
for crowdsourcing,” IEEE Trans. Parallel Distrib. Syst., vol. 30, no. 6,
pp. 1251–1266, Jun. 2019.
[6] M. Baza, N. Lasla, M. M. E. A. Mahmoud, G. Srivastava, and
M. Abdallah, “B-ride: Ride sharing with privacy-preservation, trust and
fair payment atop public blockchain,” IEEE Trans. Netw. Sci. Eng.,
vol. 8, no. 2, pp. 1214–1229, Apr.–Jun. 2021.
[7] H.-N. Dai, Z. Zheng, and Y. Zhang, “Blockchain for Internet of Things:
A survey,” IEEE Internet Things J., vol. 6, no. 5, pp. 8076–8094,
Oct. 2019.
[8] M. A. Ferrag, M. Derdour, M. Mukherjee, A. Derhab, L. Maglaras,
and H. Janicke, “Blockchain technologies for the Internet of Things:
Research issues and challenges,” IEEE Internet Things J., vol. 6, no. 2,
pp. 2188–2204, Apr. 2019.
[9] P. Pal and S. Ruj, “BlockV: A blockchain enabled peer-peer ride shar-
ing service,” in Proc. IEEE Int. Conf. Blockchain (Blockchain), 2019,
pp. 463–468.
[10] D. Wang and X. Zhang, “Secure ride-sharing services based on a consor-
tium blockchain,” IEEE Internet Things J., vol. 8, no. 4, pp. 2976–2991,
Feb. 2021.
[11] C. Huang, R. Lu, J. Ni, and X. Shen, “DAPA: A decentralized, account-
able, and privacy-preserving architecture for car sharing services,” IEEE
Trans. Veh. Technol., vol. 69, no. 5, pp. 4869–4882, May 2020.
[12] M. A. Ferrag and L. Shu, “The performance evaluation of blockchain-
based security and privacy systems for the Internet of Things: A tutorial,”
IEEE Internet Things J., vol. 8, no. 24, pp. 17236–17260, Dec. 2021.
[13] K. Peng, M. Li, H. Huang, C. Wang, S. Wan, and K.-K. R. Choo,
“Security challenges and opportunities for smart contracts in Internet
of Things: A survey,” IEEE Internet Things J., vol. 8, no. 15,
pp. 12004–12020, Aug. 2021.
[14] R. Gupta, S. Tanwar, S. Tyagi, and N. Kumar, “Tactile Internet and its
applications in 5G era: A comprehensive review,” Int. J. Commun. Syst.,
vol. 32, no. 14, p. e3981, 2019.
[15] A. Kumari, S. Tanwar, S. Tyagi, N. Kumar, R. M. Parizi, and
K.-K. R. Choo, “Fog data analytics: A taxonomy and process model,”
J. Netw. Comput. Appl., vol. 128, pp. 90–104, Feb. 2019.
[16] Z. Wei, Y. Yanjiang, Y. Wu, J. Weng, and R. H. Deng, “HIBS-KSharing:
Hierarchical identity-based signature key sharing for automotive,” IEEE
Access, vol. 5, pp. 16314–16323, 2017.
[17] L. Wang, X. Shen, J. Li, J. Shao, and Y. Yang, “Cryptographic primitives
in blockchains,” J. Netw. Comput. Appl., vol. 127, pp. 43–58, Feb. 2019.
[18] V. Buterin, “A next-generation smart contract and decentralized appli-
cation platform,” Ethereum, Zug, Switzerland, White Paper, 2014.
[19] A. Gohil, H. Modi, and S. K. Patel, “5G technology of mobile com-
munication: A survey,” in Proc. Int. Conf. Intell. Syst. Signal Process.
(ISSP), 2013, pp. 288–292.
[20] M. Naz et al., “A secure data sharing platform using blockchain and
interplanetary file system,” Sustainability, vol. 11, no. 24, p. 7054, 2019.
[21] M. Hamidi, H. Liao, and F. Szidarovszky, “Non-cooperative and coop-
erative game-theoretic models for usage-based lease contracts,” Eur. J.
Oper. Res., vol. 255, no. 1, pp. 163–174, 2016.
[22] J.-P. Li, G.-J. Horng, Y.-J. Chen, and S.-T. Cheng, “Using non-
cooperative game theory for taxi-sharing recommendation systems,”
Wireless Pers. Commun., vol. 88, no. 4, pp. 761–786, 2016.
[23] S. M. Ali, M. H. Rahman, T. J. Tumpa, A. A. M. Rifat, and S. K. Paul,
“Examining price and service competition among retailers in a supply
chain under potential demand disruption,” J. Retailing Consum. Serv.,
vol. 40, pp. 40–47, Jan. 2018.
[24] R. Liu, S. Zhu, C. Li, and L. Gao, “A non-cooperative power control
game algorithm based on fairness,” in Proc. IEEE Int. Conf. Inf. Technol.
Big Data Artif. Intell. (ICIBA), vol. 1, 2020, pp. 968–972.
[25] M. Fricke, A. Heckwolf, R. Herber, R. Nitsch, S. Schwarze, and
S. Voß, “Requirements of 4G-based mobile broadband on future trans-
port networks,” J. Telecommun. Inf. Technol., vol. 2, no. 2, pp. 21–28,
2012.
[26] R. Gupta, A. Nair, S. Tanwar, and N. Kumar, “Blockchain-assisted
secure UAV communication in 6G environment: Architecture, opportu-
nities, and challenges,” IET Commun., vol. 15, no. 10, pp. 1352–1367,
2021.
[27] “Remix Solidity IDE.” Accessed: 2018. [Online]. Available: https://
remix.ethereum.org/
[28] A. L. Vivar, A. T. Castedo, A. L. S. Orozco, and L. J. G. Villalba, “An
analysis of smart contracts security threats alongside existing solutions,”
Entropy, vol. 22, no. 2, p. 203, 2020.
[29] M. Almakhour, L. Sliman, A. E. Samhat, and A. Mellouk, “Verification
of smart contracts: A survey,” Pervasive Mobile Comput., vol. 67,
Sep. 2020, Art. no. 101227.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:59:59 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles false
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo false
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts false
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /ComicSansMS
    /ComicSansMS-Bold
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /Helvetica
    /Helvetica-Bold
    /HelveticaBolditalic-BoldOblique
    /Helvetica-BoldOblique
    /Helvetica-Condensed-Bold
    /Helvetica-LightOblique
    /HelveticaNeue-Bold
    /HelveticaNeue-BoldItalic
    /HelveticaNeue-Condensed
    /HelveticaNeue-CondensedObl
    /HelveticaNeue-Italic
    /HelveticaNeueLightcon-LightCond
    /HelveticaNeue-MediumCond
    /HelveticaNeue-MediumCondObl
    /HelveticaNeue-Roman
    /HelveticaNeue-ThinCond
    /Helvetica-Oblique
    /HelvetisADF-Bold
    /HelvetisADF-BoldItalic
    /HelvetisADFCd-Bold
    /HelvetisADFCd-BoldItalic
    /HelvetisADFCd-Italic
    /HelvetisADFCd-Regular
    /HelvetisADFEx-Bold
    /HelvetisADFEx-BoldItalic
    /HelvetisADFEx-Italic
    /HelvetisADFEx-Regular
    /HelvetisADF-Italic
    /HelvetisADF-Regular
    /Impact
    /Kartika
    /Latha
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaConsole
    /LucidaSans
    /LucidaSans-Demi
    /LucidaSans-DemiItalic
    /LucidaSans-Italic
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MonotypeCorsiva
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /MVBoli
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Vrinda
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryITCbyBT-MediumItal
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 200
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Average
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 200
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Average
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 400
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Recommended"  settings for PDF Specification 4.01)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice