untitled
2708 IEEE SYSTEMS JOURNAL, VOL. 15, NO. 2, JUNE 2021
Game-Theoretical Analysis of Mining Strategy for
Bitcoin-NG Blockchain Protocol
Taotao Wang , Member, IEEE, Xiaoqian Bai, Hao Wang , Member, IEEE, Soung Chang Liew , Fellow, IEEE,
and Shengli Zhang , Senior Member, IEEE
Abstract—Bitcoin-NG (next generation), a scalable blockchain
protocol, divides each block into a key block and many microblocks
to effectively improve the transaction processing capacity. Bitcoin-
NG has a special incentive mechanism (i.e., splitting transaction fees
to the current and the next leader) to maintain its security. However,
this incentive mechanism ignores the joint effect of transaction fees,
mint coins, and mining duration lengths on the expected mining
reward. In this article, we identify the advanced mining attack that
deliberately ignores microblocks to enlarge the mining-duration
length to increase the likelihood of winning the mining race. We
first show that an advanced mining attacker can maximize its
expected reward by optimizing its mining-duration length. We
then formulate a game-theoretical model in which multiple mining
players perform advanced mining to compete with each other. We
analyze the Nash equilibrium for the mining game. Our analytical
and simulation results indicate that all mining players in the mining
game converge to having advanced mining at the equilibrium and
have no incentives for deviating from the equilibrium; the trans-
action processing capability of Bitcoin-NG at the equilibrium is
decreased by advanced mining. Therefore, we conclude that the
Bitcoin-NG blockchain protocol is vulnerable to advanced mining.
Index Terms—Bitcoin-NG ( next generation), blockchain, game
theory, incentive mechanism, mining strategy.
I. INTRODUCTION
B ITCOIN [1], the first successful decentralized digital cryp-
tocurrency, has gained much recognition and support from
people in various fields. It has become the 11th largest currency
in the world, with a market capitalization of over 0.21 trillion
US dollars as of August 2019. As the foundation technology
for Bitcoin, blockchain is a decentralized and distributed digital
ledger that stores data in chronological order in a way that the
Manuscript received January 17, 2020; revised March 11, 2020 and June 16,
2020; accepted June 18, 2020. Date of publication July 10, 2020; date of current
version June 16, 2021. This work was supported in part by the National Key R&D
Program of China under Grant 2018YFB2100705, in part by the National Natural
Science Foundation of China under Grants 61701311 and 61771315, in part by
the Guangdong NSF Project under Grant 2017A030310334, in part by the Nat-
ural Science Foundation of Shenzhen under Grant JCYJ20170818095107583,
and in part by a grant from the China Academy of Space Technology (CAST).
(Corresponding author: Shengli Zhang.)
Taotao Wang, Xiaoqian Bai, and Shengli Zhang are with the College
of Electronics and Information Engineering, Shenzhen University, Shen-
zhen 518060, China (e-mail: ttwang@szu.edu.cn; baixiaoqian_szu@163.com;
zsl@szu.edu.cn).
Hao Wang is with the Department of Data Science and Artificial Intelligence,
Faculty of Information Technology, Monash University, Melbourne, VIC 3800,
Australia (e-mail: haowang.sjtu@gmail.com).
Soung Chang Liew is with the Department of Information Engineering, The
Chinese University of Hong Kong, Hong Kong SAR 999077, China (e-mail:
soung@ie.cuhk.edu.hk).
Digital Object Identifier 10.1109/JSYST.2020.3004468
data in the chain cannot be falsified. Blockchain has become a
cutting-edge technology in the fields of FinTech [2], Internet of
Things (IoT) [3], [4], and supply chains [5], thanks to its ability to
enable Byzantine agreement over a permissionless decentralized
network [6].
Despite its strong security and privacy protection, Bitcoin
blockchain faces a significant scalability problem, i.e., the speed
at which it can handle transactions is restricted by the block
size and block interval [7]–[9]. In Bitcoin blockchain network,
miners devote computational powers to solve a hash puzzle in
each round. The miner who has successfully solved the hash
puzzle becomes the leader for that round and broadcasts a block
that contains transactions to the whole network. For the current
Bitcoin blockchain protocol, the maximum size of each block
is set to 2 MB and the average interval between two successive
blocks is fixed to 10 min, which means that Bitcoin blockchain
can only handle up to 8 transactions per second (TPS), given
a typical transaction size of 250 B. This TPS is a very low
transaction processing capacity, compared to the average 2000
TPS of Visa global payment system.
In order to improve its on-chain transaction processing ca-
pacity, Bitcoin blockchain could simply increase the block size
or reduce the block interval. However, increasing the block size
(by packing more transactions into each block) and reducing
the block interval (by decreasing the difficulty of hash puzzles)
both lead to more forks on blockchain, which compromises
the security of blockchain. Without redesigning the blockchain
protocol, it is hard to increase the transaction processing ca-
pacity of Bitcoin blockchain by simply tuning these protocol
parameters.
To solve the scalability problem of Bitcoin blockchain, many
new blockchain protocols have been proposed. For the detail
discussions about the existing blockchain protocols, we refer
the interested reader to the surveys [10], [11] and the references
therein. Among these blockchain protocols, Bitcoin-NG (next
generation) [12] blockchain has attracted much attention, thanks
to its effectiveness in solving the blockchain scalability problem
and its compatibility with the current Bitcoin blockchain pro-
tocol [12]. To achieve a large transaction processing capacity,
Bitcoin-NG decouples each block into two types of blocks: a
key block and a number of microblocks. The key block is used
to elect the leader for this round. The microblocks are used
to record transactions onto the blockchain. According to the
Bitcoin-NG blockchain protocol, the first miner that correctly
solves the current hash puzzle can create a new key block and
becomes the leader for the current round. After placing the new
key block on top of the previous block, the leader is in charge
of packing transactions into the following microblocks. The
creation of microblocks does not require the mining process
1937-9234 © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-9454-4997
https://orcid.org/0000-0001-5182-7938
https://orcid.org/0000-0001-7055-6483
https://orcid.org/0000-0002-7937-5870
mailto:ttwang@szu.edu.cn
mailto:baixiaoqian_szu@163.com
mailto:zsl@szu.edu.cn
mailto:haowang.sjtu@gmail.com
mailto:soung@ie.cuhk.edu.hk
WANG et al.: GAME-THEORETICAL ANALYSIS OF MINING STRATEGY FOR BITCOIN-NG BLOCKCHAIN PROTOCOL 2709
of solving hash puzzles. Bitcoin-NG blockchain can achieve
very fast transaction processing speed, since transactions are
packaged into microblocks that are released much faster than
key blocks.
The incentive mechanism of Bitcoin-NG is different from that
of Bitcoin in which all transaction fees are allocated to the leader
of the current round. In Bitcoin-NG blockchain, the incentive
mechanism distributes a part of the transaction fees contained
in the microblocks to the leader of the current round and the
remaining part of the transaction fees to the leader of the next
round [12]. With this special incentive mechanism, Bitcoin-NG
blockchain encourages miners to behavior honestly, i.e., to
follow the default behaviors of extending the heaviest chain,
including transactions, and extending the longest chain [12]. The
Bitcoin-NG blockchain protocol can significantly improve the
transaction processing capacity of blockchain networks. How-
ever, we point out that Bitcoin-NG blockchain is vulnerable to
advanced mining attack that compromises its security. Advanced
mining attack refers to the mining behavior in which miners
ignore some microblocks issued by the leader of the current
round and intentionally mine the next key block in advance to en-
large their lengths of mining duration (see details in Section IV).
Although mining in advance will earn less transaction fees (since
it ignores and discards some microblocks), it will increase the
probability of mining success and thus increases the rewards
from the mint coins contained in key blocks. Therefore, there is
still a motivation for miners to perform advanced mining attack.
Without considering the joint effect of mining-duration length,
mint coins contained in key blocks, transaction fees contained in
microblocks, the original design of Bitcoin-NG blockchain [12]
is not robust against advanced mining attack.
In this article, we conduct a thoughtful analysis of the ad-
vanced mining behavior for the Bitcoin-NG blockchain protocol,
by taking all the relevant factors (i.e., transaction fees, mint
coins, mining time lengths) into account. Specifically, we have
the following three contributions.
1) First, we analyze the scenario where an attacker can mine
the next key block in advance, while other miners in the
network follow honest mining. We use this scenario to ex-
plain what is the advanced mining attack and why it is more
profitable. We formulate the attacker’s mining problem as
an optimization problem that aims to maximize the ex-
pected mining reward with respect to the length of mining
duration. We find the optimal length of mining duration
to get the maximum expected reward. Our results show
that the attacker can indeed gain more rewards under the
optimal advanced mining strategy than honest miners do.
2) Second, we proceed to analyze the scenario where the
whole Bitcoin-NG blockchain network is divided into two
mining pools, and both mining pools can adopt advanced
mining. The analysis gets different as each pool’s revenue
is affected by the mining-duration length of the other.
We then formulate the mining process of the two-pool
scenario as a two-player game. We analytically find the
Nash equilibrium for this two-player mining game. We
further extend the two-player game to an N -player game
that models the general scenario of N > 2 mining pools.
We find that there always exist a Nash equilibrium for this
N -player game, although its analytical result is hard to
derive.
3) Third, we perform numerical computations and system
simulations to investigate and verify our analytical results.
For different computing power profiles, we numerically
Fig. 1. Illustration for the data structure of Bitcoin blockchain.
compute the optimal mining lengths and corresponding
maximum expected rewards of the attacker’s mining op-
timization problem; we numerically compute the equi-
librium points of the mining game. We also construct a
Bitcoin-NG simulator to investigate the advanced mining
problem. We simulated 210 miners mining at identical
rates that are divided into two and three mining pools who
perform advanced mining to compete with each other. Our
numerical and simulation results confirm our analytical
results and suggest how to alleviate the negative effect of
advanced mining for the Bitcoin-NG blockchain protocol.
The remainder of this article is organized as follows. Section II
gives a blockchain preliminary. Section III reviews the Bitcoin-
NG blockchain protocol. Section IV presents our analysis for
the advanced mining problem. Section V provides numerical
and simulation results and Section IV concludes this article.
II. BLOCKCHAIN PRELIMINARY
Blockchain is first proposed as the decentralized append-only
ledger for the cryptocurrency, Bitcoin. The data of blockchain is
replicated and shared among all participants. Its past recorded
data are tamper-resistant and participants can only append new
data to the tail-end of the chain of blocks. The state of blockchain
is changed according to transactions issued by the payers.
Specifically, the issued transactions are broadcasted over the
blockchain network. Participants then collect and group these
transactions into blocks and append them to the blockchain. Each
block contains a header and a set of transactions. The header of
the block encapsulates the hash of the preceding block, the hash
of this block, the merkle root of all transactions contained in this
block, and a number called nonce that is generated according to
the consensus protocol of proof-of-work (PoW) [1]. Since each
block must refer to its preceding block by placing the hash of its
preceding block in its header, the sequence of blocks then forms
a chain arranged in a chronological order. Fig. 1 illustrates the
data structure of Bitcoin blockchain.
A. PoW and Mining
Bitcoin blockchain adopts the PoW consensus protocol
to validate new blocks in a decentralized manner. In each
round, the PoW protocol selects a leader that is responsi-
ble for packing transactions into a block and appends this
block to blockchain. To prevent adversaries from monopolizing
blockchain, the leader selection must be approximately random.
Since blockchain is permissionless and anonymity is inherently
designed as a goal of blockchain, it must consider the sybil
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
2710 IEEE SYSTEMS JOURNAL, VOL. 15, NO. 2, JUNE 2021
attack where an adversary simply creates many participants with
different identities to increase its probability of being selected
as the leader. To address the above issues, the key idea behind
PoW is that a participant will be randomly selected as the leader
of each round with a probability in proportion to its computing
power.
In particular, blockchain implements PoW using computa-
tional hash puzzles. To create a new block, the nonce placed
into the header of the block must be a solution to the hash puzzle
expressed by the following inequality [10]:
bh = H (x ‖nonce) ≤ T (d) (1)
where x denotes the binary string assembled using the candidate
block data including the Merkle root of all transactions, the hash
of the previous block, etc., nonce denotes the solution string of
the nonce, H(·) is the cryptographic hash function, bh is the
hash of the candidate block and it is a bit stream of length L,
T (d) = 2L−d is a target value, d is the current difficulty level of
the hash puzzle (i.e., the number of leading zeros in the hash of
a valid candidate block). Using the blockchain terminology, the
process of computing hashes to find a nonce is called mining,
and the participants involved are called miners.
With a difficult level d and the corresponding target T (d) =
2L−d in (1), each single query to the PoW puzzle expressed in
(1) is an i.i.d. Bernoulli test whose success probability is given
by
Pr (y : H (x ‖y) ≤ T (d)) =
T (d)
2L
= 2−d. (2)
When d is very large, the above success probability of a single
query is very tiny. Moreover, it is known that with a secure hash
algorithm (e.g., the SHA-256 hash used for Bitcoin), the only
way to solve (1) is to query a large number of nonces one by one
to check if (1) is fulfilled until one lucky nonce is found (i.e., to
exhaustively search for the nonce). Therefore, the probability of
finding such nonce is proportional to the computing power of the
participant—the faster the hash function in (1) can be computed
in each trial, the more number of nonces can be tried per unit
time.
Miners need to compute hash queries as fast as possible to win
the race of mining, which is a very computationally intensive
task. Let wn denote the number of hash queries that miner n can
compute per unit time, i.e., wn is the hash rate of miner n. Then,
the number of success queries that miner n can make converges
to a Poisson process with rate λn
Δ
= wn/2
d [10]. Moreover,
the computation time between two successful queries made
by miner n (represented by a random variable Xn) fulfills the
exponential distribution with rate λn [10]. Thus, the probability
that at least one successful query made by miner n within the
duration of length t is given by
Pr (Xn < t) = 1− e−
wn
2d
t (3)
which is proportional to the hash rate wn and the mining-
duration length t. It is evident from (3) that more computation
power (faster hash rate) and more computation time (longer
mining duration) lead to larger probability of successful mining.
Consider there are totally N miners in the network and each
performs mining to solve the PoW puzzle independently. Since
the combination of the N independent Poisson processes is still
a Poisson process with a rate obtained by summing up the rates
of the N independent Poisson processes [13], the number of
success queries per unit time made by the whole network is a
Poisson processes with rate
λ =
N∑
n=1
λn =
1
2d
N∑
n=1
wn (4)
which is also the expectation of the successful queries made
by the whole network per unit time. Therefore, the average
number of blocks mined during the given block interval T is
λT = (T/2d)
∑N
n=1 wn. The difficulty control of blockchain
aims at fixing the average number of the mined blocks per block
interval T to one by adjusting the difficulty level d to adapt to the
fluctuations in the total computation power of the network [14].
B. Honest Mining Strategy
When a miner tries to append a new block to the latest legal
block by placing the hash of the latest block in the header of
the new block, we say that the miner mines on the latest block.
Bitcoin blockchain is maintained by miners in the following
manner.
To encourage all miners to mine on (maintain) the current
blockchain, each legal block distributes a reward to the miner
as incentives. The reward of each block consists of two parts.
The first part of the reward is a certain amount of new coins.
When a miner mines a new block, the miner is allowed to place
a coin-mint transaction in its mined block that credits this miner
with some new coins as a part of the reward. The other part of
the reward is the transaction fees contained in the transactions
packaged in the block. If the block is verified and accepted by the
blockchain network (i.e., it becomes a legal block), the reward is
effective and thus can be spent on the blockchain. When a miner
has found an eligible nonce, it publishes his block to the whole
blockchain network. Other miners then verify the nonce and
verify the transactions contained in that block. If the verification
of the block is passed, other miners will mine on the block;
otherwise, other miners discard the block and will continue to
mine on the previous legal block.
If two miners publish two different legal blocks that refer to
the same preceding block at the same time, the blockchain is
then forked into two branches. This is called forking of the
blockchain. Forking is an undesirable feature of blockchain,
since it threatens the security of blockchain [9]. To resolve
forking, PoW prescribes that only the rewards of blocks on
the longest branch (called the main chain) are effective. Then,
miners are incentivized to mine on the longest branch, i.e.,
miners always add new blocks after the last block on the longest
main chain that is observed from their local perspectives. If
the forked branches are of equal length, miners may mine
subsequent blocks on either branch randomly. This is referred
to as the rule of longest chain extension.
The mining strategy of adhering to the rule of longest chain
extension and publishing a block immediately after the block
is mined is referred to as the honest mining strategy [10]. The
miners that comply with honest mining are called honest miners.
It was widely believed that the most profitable mining strategy
for miners is the honest mining strategy; and that when all
miners adopt the honest mining strategy, each miner is rewarded
proportionally to the ratio of its computing power to the total
computing power of all miners [10]. As a result, any rational
miner will not deviate from honest mining. This belief was later
shown to be ill-founded for Bitcoin blockchain and that other
mining strategies with higher profits are possible, such as selfish
mining [15], withholding mining [16], etc.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: GAME-THEORETICAL ANALYSIS OF MINING STRATEGY FOR BITCOIN-NG BLOCKCHAIN PROTOCOL 2711
Fig. 2. Illustration for the data structure of Bitcoin-NG blockchain. A key
block (the square) is followed with a set of microblocks (the circle). Transaction
fees are divided into two parts: α for the current leader and 1− α for the next
leader.
To restrain forks on blockchain that will threaten the security,
the generation rate of key blocks cannot be too small and the
block size cannot too large [7]. Therefore, the drawback of
Bitcoin blockchain—its low TPS throughput—cannot be solved
by just shortening the interblock interval and inserting more
transactions into each block.
III. BITCOIN-NG BLOCKCHAIN PROTOCOL
Compared with Bitcoin, Bitcoin-NG is a scalable blockchain
protocol that allows for greater TPS throughputs without induc-
ing extra communication latency. To separate the functionalities
of selecting leaders (using PoW) and recording transactions, the
Bitcoin-NG blockchain protocol introduces two types of blocks:
key blocks and microblocks. Bitcoins block and Bitcoin-NGs
key block have the same effectiveness expect that the latter
contains no transactions. In Bitcoin-NG, the first miner that
correctly solves the current hash puzzle creates a new key block
and becomes the leader for the current round. After placing the
new key block on the previous block, the leader is in charge of
packing transactions into microblocks. Intuitively, the Bitcoin-
NG protocol divides a Bitcoin block into the key block and the
microblock to achieve TPS throughput improvement.
A. Key Blocks and Microblocks
Fig. 2 illustrates the data structure of Bitcoin-NG blockchain.
In each round (e.g., the ith round), once a miner who finds a
correct nonce to solve the PoW problem, this miner becomes the
new leader and immediately creates a new key block Ki. Unlike
the block of Bitcoin, this key block contains no transactions. It
still contains the hash of the preceding block, the hash of this
block, the nonce, a coin-base transaction to pay out the reward;
moreover, it contains an extra public key. This public key must
match the private key contained in the subsequent microblocks.
After the key block, the miner generates many consecutive
microblocks, {Mi,1,Mi,2, . . . ,Mi,j , . . .}, that are used to pack
transactions. Unlike the key block, the generation of these mi-
croblocks does not need PoW. Thus, the leader can generate
consecutive microblocks quickly without extra computational
overhead until the next key block is published. The header of
each microblock encapsulates the hash of the preceding block,
the Unix time, the hash of ledger entries and a signature of the
header. The signature is signed with the private key that matches
the public key contained in the key block Ki. By packing many
transactions into each microblock and publishing microblocks in
a relatively high rate, Bitcoin-NG is allowed to achieve very high
TPS throughputs [12]. In [9], it is also theoretically analyzed that
Bitcoin-NG-like protocols, which decouple the functionalities of
leader selection and transaction recording into different types of
blocks, can achieve the optimal transaction processing capacity
of the network.
B. Incentives
Bitcoin-NG employs its specially designed incentive mech-
anism to motivate rational miners to follow the three honest
actions: 1) extending the heaviest chain; 2) extending the longest
chain; 3) including transactions into the microblocks.
1) Heaviest Chain Extension: Assuming a majority of miners
in the network are honest, Bitcoin-NG is designed to incentivize
miners to always extend the heaviest chain that contains the
largest amount of PoW. In Bitcoin, the heaviest chain is the
longest chain, since each block (that contains PoW) is given a
weight. In Bitcoin-NG, only key blocks are given weights and
microblocks are given no weight (since microblocks contain no
PoW). Without assigning weights to microblocks, Bitcoin-NG
does not increase the system’s vulnerability to a kind of selfish
mining [15] where the leader of the current round will hide some
microblocks and mine on a hidden microblock privately.
2) Longest Chain Extension: In Bitcoin-NG, the transaction
fees contained in the microblocks are split to the two leaders:
a fraction α of the transaction fees is released to the leader of
the current round and a fraction 1− α of the transaction fees
is rewarded to the leader of the next round, as shown in Fig. 2.
This is different from the incentive mechanism of Bitcoin that
rewards the current leader with all transaction fees contained in
the current block. This incentive mechanism of Bitcoin-NG can
encourage miners to extend the longest chain.
Suppose that all transaction fees contained in these mi-
croblocks will be rewarded to the current leader. To earn more
revenue, a malicious miner may deliberately discard the latest
published microblock and mine on an earlier published mi-
croblock. If this miner succeeds in doing that, he will pack
the transactions of the discarded microblock into his own mi-
croblocks to get all transaction fees. Splitting the transaction
fees into two parts can incentivize miners to mine on the longest
chain that contains the already published microblocks, since to
become the next leader can still earn transaction fees from these
microblocks.
However, even with this incentive mechanism, it is still possi-
ble that miners can earn more revenue by deliberately discarding
the latest published microblock and mining on an earlier pub-
lished microblock. The more possible revenue can be achieved
using the following mining strategy. If one miner succeeds in
mining the one key block, he will then pack the transactions (that
contained in the previous microblock discarded by her/him) into
his own microblock and continue to mine on the next key block.
Hence, the value of α should be designed such that the revenue
of the leader taking this mining strategy must be smaller than
his/her revenue of expanding the longest chain [12].
3) Transaction Inclusion: Moreover, the value of parameter α
should be chosen to motivate the current leader to spontaneously
pack transactions into its published microblock. Since the trans-
action fees are split to the current leader and the next leader,
the current leader has a general incentive to pack transactions
into a hidden microblock and mine on the hidden microblock to
potentially obtain 100% of the transaction fees. The value of α
should to be chosen such that the leader’s revenue of withholding
the microblock must be smaller than his revenue of abiding by
the protocol [12].
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
2712 IEEE SYSTEMS JOURNAL, VOL. 15, NO. 2, JUNE 2021
Considering the above possible malicious mining behaviors,
the value of α is suggested to α = 0.4 by the incentive mech-
anism in the original design of Bitcoin-NG [12]. However, the
analysis on the incentive mechanism of Bitcoin-NG is flawed.
Yin et al. [17] points out that there is a negligence and an
oversimplification on the original analysis of Bitcoin-NG in-
centive mechanism, and it corrects the optimal value of α as
α = 3/11. Niu et al. [18] investigates the incentive mechanism
of Bitcoin-NG by considering the selfish mining of key blocks
and microblocks jointly. In this article, we reveal that besides
the above discussed malicious mining behaviors that are solved
by the incentive mechanism of Bitcoin-NG, there still exists a
possible malicious mining behavior in the Bitcoin-NG network.
IV. GAME-THEORETICAL ANALYSIS OF BITCOIN-NG MINING
In this section, we study a new identified malicious mining—
advanced mining attack—for Bitcoin-NG blockchain.
A. One-Attacker Mining Optimization
First, we consider the scenario where an attacker can change
its mining-duration length to perform advanced mining attack
to other honest miners who follow the rule of mining in a
fixed default duration. We formulate the advanced mining attack
problem as an optimization problem for the attacker to find
the optimal length of the mining duration that maximizes the
attacker’s revenue.
It is theoretically shown in [9] that blockchain protocols can
achieve optimal transaction throughputs by decoupling each
block into two kinds of blocks where one is used for selecting the
leader and the other is used for recording transactions. In [9],
such decouple is achieved by setting different mining targets:
the mining target of blocks for recording transactions is smaller
than that of blocks for selecting leaders. Bitcoin-NG is a special
implementation of such blockchain protocol, i.e., Bitcoin-NG
assigns mining target T (d) = 2L−d to key blocks and no mining
target to microblocks. The mining target T (d) = 2L−d is deter-
mined by the difficult control that aims to maintain the average
interval between two consecutive key blocks at a constant value.
After the key block of the current round is published, the
leader broadcasts consecutive microblocks to the network within
a duration of length Tb. Following the latest microblock, miners
try to compute the next key block. We denote Tm as the length
of the duration between the last microblock of this round and the
key block of the next round, and assume that all the honest miners
adopt this duration as the default mining duration. Therefore,
the length of the interval between two adjacent key blocks is
given by T = Tb + Tm. Since Tm is the length of the default
mining duration, the difficulty control of Bitcoin-NG is made
with respect to Tm, i.e., by adjusting the difficult level d to
maintain (Tm/2d)
∑N
n=1 wn = 1. With this design of difficult
control for Bitcoin-NG, we can fix the average interval between
two adjacent key blocks to a constant.1
1In the original Bitcoin-NG protocol that follows the security designs of
Bitcoin, the difficulty control is made with respect to T ; and all miners mine
immediately after the key block; then after each microblock is published by the
current leader, all miners change to mine on the new microblock (like mining
a new block in Bitcoin). However, this design of Bitcoin-NG cannot fix the
average interval between two adjacent key blocks to a constant. This is because
that when miners change to mine on a new microblock, the mining process of the
next key block is restarted due to that the mining poison process is memoryless;
then, the average time between this microblock and the next successful mined
key block is still T .
Although the default mining duration is preset, miners still
can freely decide when to begin their mining due to the decen-
tralized nature of the system. On one hand, since 1–α of the
transaction fees contained in the microblocks of this round are
distributed to the next leader, miners generally turn to mine on
the latest published microblock to earn transaction fees as many
as possible. On the other hand, if miners choose to mine on an
early microblock, they will lose a part of the transaction fees
but have more time to make more hash queries for computing
the nonce. The greater number of nonces being tried admits a
higher probability of finding the correct nonce. If an early miner
succeeds to find the next key block earlier than other miners,
the lost transaction fee can be compensated by the reward of the
new coins mint in the next key block. Therefore, the possible
revenue motivates miners to mine on an early microblock. We
refer to such mining strategy as advanced mining attack.
We now consider that there is one attacker making advanced
mining attack in the Bitcoin-NG network. During the interval
between the current key block and the next key block, this
attacker uses the last duration of length τ to compute the next
key block, where τ > Tm. Without loss of generality, we group
all other miners in the network as a single honest miner, who
uses the last duration of lengthTm to compute the next key block
according to the default mining rule. In Fig. 2, we illustrate the
relationship among the variables of T , Tb, Tm, and τ defined
above. LetwA denote the hash rate of the attacker, andwB denote
the hash rate of the honest miner. If the perfect difficulty control
with respect toTm is achieved, we haveTm(wA + wB)/2
d = 1.
Actually, the attacker and the honest miner devote their com-
putation powers to perform a mining race: the one who computes
a valid nonce earlier than the other is the winner. The winner will
be the leader of the next round and can earn the corresponding
rewards. Therefore, devoting more computation resources (i.e.,
longer mining duration) can increase the winning chance. We
denote the probability that the attacker wins the mining race by
a function of the length of its mining duration τ , P (τ). Note that
P (τ) is monotonically increasing with respect to τ , indicating
that the attacker achieves a higher wining probability when a
longer mining duration is devoted.
We denote the lengths of the mining duration needed for
successful mining of the attacker and the honest miner as random
variables XA and XB , respectively. The random variables XA
and XB are independent and both fulfill the exponential distri-
bution with rates λA
Δ
= wA/2
d and λB
Δ
= wB/2
d [14]. Hence,
the winning probability P (τ) of the attacker is given by
P (τ) = Pr (XA − τ < XB − Tm)
= Pr (XA −XB < τ − Tm) (5)
where XA − τ and XB − Tm are the time instances when the
attacker and the honest miner successfully find the next key
block. Since the difference between two independent exponen-
tial distributed random variables, e.g., XA −XB , is a Laplace
distributed random variable, the probability expressed in (5) can
be calculated as [17] follows:
P (τ) = 1− λB
λA + λB
e−(τ−Tm)λA . (6)
If we consider that there is no advanced mining attack, i.e.,
τ = Tm, the probability in (6) is reduced to P (τ = Tm) =
λA/(λA + λB), which is the successful probability of honest
mining that equals the ratio of the miner’s computation power
over the totally computation power of the network [10].
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: GAME-THEORETICAL ANALYSIS OF MINING STRATEGY FOR BITCOIN-NG BLOCKCHAIN PROTOCOL 2713
We assume that each key block contains a reward R (i.e.,
the value of the mint coins), each microblock contains a re-
ward r (i.e., the value of the transaction fees), and the cur-
rent leader can generate L microblocks after its key block
Ki within the duration of length Tb. If the advanced mining
attacker can mine the next key block Ki+1, it can earn the
transaction fees from the first L(T − τ)/Tb microblocks, where
L(T − τ)/Tb < L, since T − τ < Tb. Therefore, after the key
blockKi+1 is published by the attacker, the total reward obtained
by the attacker in the last block interval includes both the
rewards from the new key block Ki+1 and the rewards from the
microblocks {Mi,1,Mi,2, . . . ,Mi,L(T−τ)/Tb
} that are included
onto the blockchain. When computing the total reward for the
attacker, we consider two different situations: 1) the previous
key block Ki is mined by the honest miner (i.e., Ki ∈ Bhonest);
2) the previous key block Ki is mined by the attacker (i.e.,
Ki ∈ Battacker), where Battacker (Bhonest) is the set of the key
blocks mined by the attacker (honest miners).
We first consider that the previous key block Ki is mined by
the honest miner (Ki ∈ Bhonest). If the attacker can succeed to
find the next key block Ki+1, the total reward of the attacker
includes both the rewards from the new key block and the
(1− α)-fraction of the rewards from the microblocks, i.e., the
total reward is given by
Q (τ) = (1− α) rL
T − τ
Tb
+R (7)
which is also a function of its mining-duration length. The
expected reward of the attacker [denoted by π(τ)] is the total
revenue when its mining is successful Q(τ) multiplied by the
probability of successful mining P (τ)
π (τ) = Q (τ)P (τ)
=
(
(1− α) rLT−τ
Tb
+R
)(
1− λB
λA+λB
e−(τ−Tm)λA
)
.
(8)
The reward function π(τ) is concave and continuous in τ , and
we can obtain the maximum value of π(τ) when
dπ(τ)
dτ
= 0. (9)
Solving (9), we find that the reward function π(τ) achieves its
maximum value at
τ ∗ =
R
(1−α)rLλATb + λAT + 1−W
(
1
1−λATm
e(
R
(1−α)rL
+1)λATb+1
)
λA
(10)
where W (·) denotes the Lambert W Function [19].
We then consider that the previous key block Ki is also
mined by the attacker (Ki ∈ Battacker). Now, if the attacker can
succeed to find the next key block Ki+1, the total reward of the
miner includes both the rewards from the new key block and all
the rewards from the microblocks
Q (τ) = rL
T − τ
Tb
+R. (11)
Following the same way, we can compute the optimal mining
length that achieves the maximum mining reward as follows:
τ ∗ =
R
rLλATb + λAT + 1−W
(
1
1−λATm
e(
R
rL+1)λATb+1
)
λA
.
(12)
According to whether the previous key block is mined by the
attacker, the attacker can choose its optimal mining length τ ∗
according to (10) or (12). In Section V, we numerically compute
the corresponding maximum expected reward π(τ ∗) that is
showed to be larger than the expected reward earned by the
honest mining π(Tm). The result indicates that when all other
miners adopt honest mining, the attacker’s advanced mining over
the last duration τ ∗ > Tm of the block interval is the optimal
strategy to earn the highest expected reward.
B. Two-Player Mining Game
We next proceed to analyze the scenario where all miners
in the network are divided into two mining pools that both try
to make advanced mining attack (i.e., changing their mining-
duration lengths) and thus compete with each other. We will see
that this setup leads to a game-theoretical model and we derive
the Nash equilibrium mining strategies for the two mining pools.
We denote the two mining pools as pool A and pool B with hash
rates wA and wB , respectively. Pool A (B) attempts to carry out
advanced mining using the mining duration of length τA (τB).
The mining behaviors of the two pools in this scenario can be
analyzed through a two-player game.
We formulate the two-pool advanced mining problem as
a two-player game as follows. The two players, pool A and
pool B, strategically choose their mining-duration lengths to
compete for the reward of successful mining. The two mining
pools are rational and their interaction can be modeled as a
noncooperative game [20]. Each pool has a set of pure strategies
in S = [Tm, T ]. Let τn ∈ S be the mining strategy of pool n,
where n ∈ {A,B}. A two-tuple of strategies of the two mining
pools is τ = (τA, τB) and a two-tuple of corresponding payoffs
is π = (πA(τ), πB(τ)), where πn(τ) is the utility of player n
given the chosen strategies of the two mining pools. Each mining
pool chooses its best strategy τ ∗n to maximize its utility. A set
of strategies τ ∗ = (τ ∗A, τ
∗
B) is the Nash equilibrium if no miner
can gain higher utility by unilaterally changing its own strategy
when the strategies of the other miners remain unchanged, i.e.,
∀τ = (τA, τB) ∈ S × S :
{
πA (τ ∗A, τ
∗
B) ≥ πA (τA, τ
∗
B)
πB (τ ∗A, τ
∗
B) ≥ πB (τ ∗A, τB) .
(13)
The inequalities in (13) define the equilibrium state of the game.
At the Nash equilibrium if it exists, the players have no incentive
to deviate from their equilibrium strategies.
For the advanced mining problem, we adopt the expected
mining rewards as the utilities in the game formulation. We
compute the utilities as follows. After the two mining pools
have successful mined the next key block Ki+1, their rewards
are {
QA (τA) = (1− α) rLT−τA
Tb
+R
QB (τB) = rLT−τB
Tb
+R
(14)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
2714 IEEE SYSTEMS JOURNAL, VOL. 15, NO. 2, JUNE 2021
if the previous block Ki is mined by mining pool B (Ki ∈ BB),
or
{
QA (τA) = rLT−τA
Tb
+R
QB (τB) = (1− α) rLT−τB
Tb
+R
(15)
if the previous block Ki is mined by mining pool A (Ki ∈ BA).
Only if the time instance for a pool finding a nonce is earlier
than the time instance for its opponent does, that mining pool
can earn the reward. Since the mining pools both can change
the lengths of their mining duration, τA and τB , the successful
mining probability of pool n is a function of mining-duration
lengths of both pools, i.e., τ = (τA, τB). We write the successful
mining probabilities of pool A and pool B as follows:
⎧⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
PA (τ) = Pr (XA − τA < XB − τB)
= Pr (XA −XB < τA − τB)
PB (τ) = Pr (XB − τB < XA − τA)
= Pr (XB −XA < τB − τA)
(16)
where XA and XB are the random variables representing the
lengths of the mining duration needed for the successful mining
of mining pools A and B, respectively. We find that the com-
putation of probabilities PA(τ) and PB(τ) depends on the sign
of τA − τB , and thus we can analyze the cases of τA − τB < 0
and τA − τB > 0, respectively.
We derive the Nash equilibrium for the two-player mining
game when τA − τB < 0 in the following. The differences
of two independent exponential distributed random variables,
XA −XB , are Laplace distributed. When τA − τB < 0, the
probabilities PA(τ) and PB(τ) in (16) can be computed as
follows:
⎧⎪⎪⎨
⎪⎪⎩
PA (τ) =
λA
λA + λB
e(τA−τB)λB
PB (τ) = 1− λA
λA + λB
e−(τB−τA)λB
(17)
where λA = wA/2
d and λB = wB/2
d.
We assume that the previous block Ki is mined by mining
pool B (Ki ∈ BB). Using (14) and (17), the utilities of the two
players (i.e., their expected mining rewards) are given by
⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
πA (τ) = QA (τA)PA (τ)
=
(
(1− α) rL
T − τA
Tb
+R
)
λA
λA + λB
e(τA−τB)λB
πB (τ) = QB (τB)PB (τ)
=
(
rL
T − τB
Tb
+R
)(
1− λA
λA + λB
e(τA−τB)λB
)
.
(18)
The utilities πA(τ) and πB(τ) are concave and continuous in τA
and τB , and thus the Nash equilibrium must satisfy the condition
{
∂πA (τA, τB)
∂τA
= 0,
∂πB (τA, τB)
∂τB
= 0
}
. (19)
Solving (19), we obtain the Nash equilibrium for the two-player
mining game when τA − τB < 0 and Ki ∈ BB⎧⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
τ ∗A = T +
R
(1− α) rL
Tb − 1
λA
τ ∗B =
R
rLλBTb + λBT + 1−W
(
1
1−λBTm
e2−
R
rL λBTb
α
1−α
)
λB
(20)
where we have used the difficulty control result Tm(λA+λB)=
1. Similarly, when τA − τB < 0 and the previous block Ki is
mined by mining pool A (Ki ∈ BA), the Nash equilibrium for
the two-player mining game is⎧⎨
⎩
τ ∗A = T + R
rLTb − 1
λB
τ ∗B =
R
(1−α)rL
λBTb+λBT+1−W
(
1
1−λBTm
e
2+ R
rL
λBTb
α
1−α
)
λB
.
(21)
For the case of τA − τB > 0, the derivation for the Nash
equilibrium is similar to the case of τA − τB < 0. We omit it
here to save space. The mining lengths achieved at the Nash
equilibrium indicate that for all cases, the two mining pools will
deviate from mining with the default mining-duration length.
C. N -Player Mining Game
We finally extend the two-player mining game to a N -player
mining game. We consider that the miners in the network are
grouped into N mining pools and all mining pools execute
advanced mining. Mining pool n ∈ {1, 2, . . . , N} with hash
rates wn uses the mining duration of length τn to carry out
advanced mining. The mining behaviors of the N pools can
also be modeled as a noncooperative game.
In theN -player game, allN mining pools strategically choose
the lengths of their mining duration to maximize their revenue.
Each pool n has a set of pure strategies S = [Tm, T ]. Let τn ∈ S
be the strategy of mining pool n. The vector of the strategies
of N mining pools is τ = (τ1, τ2, . . . , τN ), and the vector of
the corresponding utilities is π = (π1(τ), π2(τ), . . . , πN (τ)),
where πn(τ) is the utility of player n given the chosen strategies
of the N mining pools. Each mining pool chooses its best
strategy τ ∗n to maximize its utility. The vector of the strategies
τ ∗ = (τ ∗1 , τ
∗
2 , . . . , τ
∗
N ) is the Nash equilibrium if no mining pool
can gain higher utility by changing its own strategy when the
strategies of the other miners remain unchanged, i.e.,
∀n ∈ {1, 2, . . . , N} , ∀τn ∈ S : πn (τ
∗
n, τ̄
∗
n) ≥ πn (τn, τ̄
∗
n)
(22)
where τ̄ ∗n = (τ ∗1 , . . . , τ
∗
n−1, τ
∗
n+1 . . . , τ
∗
N ) is the vector of the
best strategies of the other N − 1 mining pools except mining
pool n.
Then we compute the utility of pool n in this game as follows.
When we compute it, we assume the previous key block Ki is
mined by the mining pool N (the results for other N − 1 cases
can be obtained similarly). If mining pool n succeeds to find the
next key block Ki+1 via advanced mining with mining duration
of length τn, its reward is given by
Qn (τn) =
{
(1− α) rLT−τn
Tb
+R, n = 1, 2, . . . , N − 1
rLT−τn
Tb
+R, n = N.
(23)
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: GAME-THEORETICAL ANALYSIS OF MINING STRATEGY FOR BITCOIN-NG BLOCKCHAIN PROTOCOL 2715
Since the successful mining probability of mining pool n is
impacted not only by its own strategy but also other competitors’
strategies, it can be written as a function of τ = (τ1, τ2, . . . , τN )
and computed as
Pn (τ)
= Pr (Xn − τn < X1 − τ1, . . . , Xn − τn < Xn−1 − τn−1,
Xn − τn < Xn+1 − τn+1, . . . , Xn − τn < XN − τN )
=
∏
m∈{1,...n−1,n+1,...,N}
Pr (Xn −Xm < τn − τm)
(24)
where Xn is the random variable representing the length of the
mining duration needed for the successful mining of pool n. To
compute the probabilities Pn(τ) for all n ∈ {1, 2, . . . , N}
according to (24), we need to consider (N2 ) cases for
the signs of {τn − τm, n = 1, . . . , N,m = n+ 1, . . . , N}.
For example, considering the case of N = 3 and
{τ1 − τ2 < 0, τ1 − τ3 < 0, τ2 − τ3 < 0}, we have⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
P1 (τ) = Pr (X1 −X2 < τ1 − τ2) Pr (X1 −X3 < τ1 − τ3)
=
(
λ1
λ1 + λ2
e(τ1−τ2)λ2
)(
λ1
λ1 + λ3
e(τ1−τ3)λ3
)
P2 (τ) = Pr (X2 −X1 < τ2 − τ1) Pr (X2 −X3 < τ2 − τ3)
=
(
1− λ1
λ1 + λ2
e(τ1−τ2)λ2
)(
λ2
λ2 + λ3
e(τ2−τ3)λ3
)
P3 (τ) = Pr (X3 −X1 < τ3 − τ1) Pr (X3 −X2 < τ3 − τ2)
=
(
1− λ1
λ1 + λ3
e(τ1−τ3)λ3
)(
1− λ2
λ2 + λ3
e(τ2−τ3)λ3
)
.
(25)
Using (23) and (24), the utility of mining pool n can be
expressed as
πn (τ) = Qn (τn)Pn (τ) (26)
for all n. Then, we can find the Nash equilibrium τ ∗ =
(τ ∗1 , τ
∗
2 , . . . , τ
∗
N ) by solving the equation system{
∂π1 (τ)
∂τ1
= 0, . . . ,
∂πn (τ)
∂τn
= 0, . . . ,
∂πN (τ)
∂τN
= 0
}
. (27)
We can find that the utility functions showed in (18) for the two-
player game and in (26) for the N -player game are all strictly
concave. Therefore, we can conclude that the Nash equilibrium
achieved in the advanced mining game is unique [21]. However,
we cannot derive the explicit form of the Nash equilibrium for
the N -player game. In the next section, we will solve the Nash
equilibrium in different cases using numerical computations.
V. NUMERICAL COMPUTATIONS AND SYSTEM SIMULATIONS
In this section, we present the results of numerical computa-
tions and system simulations to investigate the advanced mining
problem for the Bitcoin-NG protocol.
A. Numerical Computations
We first numerically compute the analytical results provided
in Section IV. In our numerical computations and simulations,
we set T = 10, Tm = 2, L = 10, α = 3/11, r = 1, and R ∈
{1, 5, 10}.
Fig. 3. Expected reward of the attacker π(τ) in the one-attacker mining
optimization problem are given as the functions of the mining-duration length τ .
We first numerically analyze the one-attacker mining op-
timization problem. We compute the expected reward of the
attacker π(τ) that is a function of the length of the mining
duration τ , given the mining power λA as the parameter. Note
that since Tm = 2, we have λA + λB = 1/Tm = 0.5. Fig. 3(a)
presents the reward functions for the case of Ki−1 ∈ Bhonest;
and Fig. 3(b) presents the reward function for the case of
Ki ∈ Battacker. We set to R = 10 when computing the ex-
pected reward. For a specific mining power, each red round
represents the maximum expected reward achieved by the cor-
responding optimal mining-duration length τ ∗ expressed in (10)
for Ki ∈ Bhonest and in (12) for Ki ∈ Battacker; each black
square represents the expected reward achieved by the default
mining-duration length Tm. From Fig. 3, we can see that higher
mining powers decrease the required mining-duration lengths
to achieve the maximum expected rewards. Intuitively, higher
mining powers increase the probabilities of finding a key block,
thus the attacker can mine slightly later and wait for more
microblocks to earn more transaction fees. Higher mining power
also increase the maximum expected reward of the attacker.
It is also observed that the optimal mining-duration length for
Ki ∈ Bhonest is larger than that for Ki ∈ Battacker. Since if the
previous key block is mined by the attacker (Ki ∈ Battacker), the
attacker is prone to include more microblocks onto blockchain to
earn the transaction fees and thus it reduces its mining-duration
length. Moreover, we can observe that, whatever is the mining
power, the maximum expected reward achieved by advanced
mining is higher than that achieved by honest mining.
For this one-attacker scenario, we also compare the advanced
mining attack with the block withhold (BWH) attack with power
splitting [22]. BHW attack with power splitting for Bitcoin aims
at gaining higher mining rewards by splitting the mining power
of the attacker pool into multiple subparts and using some sub-
parts to cancel the mining powers of other mining pools and some
subparts to mine for itself. For comparison purpose, we apply
BHW attack with power splitting to Bitcoin-NG. The BWH
attacker adopts the optimal power splitting strategy derived
in [22] for attacking and fixes its mining length to the default
length Tm. We can compute the expected rewards achieved by
BHW attack according to the result given in [22]. In Fig. 3,
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
2716 IEEE SYSTEMS JOURNAL, VOL. 15, NO. 2, JUNE 2021
Fig. 4. Optimal mining-duration lengths of the two mining pools in the mining game model are given as functions of the mining power λA (R = {1, 5, 10}).
each blue triangle represents the expected reward achieved by
BWH attack for a specific mining power. We can observe that the
achieved expected rewards of BHW attack are indeed higher than
that of honest mining; the maximum expected rewards achieved
by advanced mining are higher than that achieved by BWH
attack. This indicates that in Bitcoin-NG blockchain, advanced
mining attack is more effective than BWH attack.
We then investigate the two-player mining game. We compute
the optimal mining strategies (i.e., the optimal mining-duration
lengths derived in Section IV-B). Fig. 4 depicts the optimal
mining-duration lengths of the two mining pools that are given
as the functions of pool A’s mining power for R = 1, 5, 10,
respectively. We can see that when λA < λB , the optimal mining
length of pool A is larger than that of pool B. This fulfills the
intuition that to achieve an equilibrium, the mining pool with
less mining power needs to mine earlier to enlarge its successful
mining probability. The situation is the same for the case of
λA > λB . When we increase the reward of mint coins contained
in key blocks (i.e., we increase R), we observe that the optimal
mining-duration lengths of the two pools approach T = 10 for
many parts of the mining power profile. This is because that
large R encourages mining in advance to earn the reward of
mint coins in key blocks.
We finally numerically compute the optimal mining-duration
lengths for the N -player mining game by setting N = 3 (i.e.,
we have three mining pools denoted by A, B, and C). When we
do that, we fix the mining power of the mining pool B λB , and
vary the mining power of mining pool A λA. For a given λB , the
computed optimal mining-duration lengths are functions of λA.
The results are shown in Fig. 5 when λB = {0.1, 0.2, 0.3} and
R = 1. We can see that for different power mining profiles, the
mining pools need to employ different mining-duration lengths
to achieve the equilibrium; mining pools with larger mining
powers will converge to using shorter mining-duration lengths.
B. System Simulations
We conduct system simulations to investigate the advanced
mining problem in the Bitcoin-NG network. Following the
simulation approach used in [15] for Bitcoin-like systems, we
constructed a simulator that captures all the relevant Bitcoin-NG
network details described in the previous sections, except that the
crypto puzzle solving processing was replaced by a Monte Carlo
simulator that simulates the time required for block discovery
without actually attempting to compute a hash function. We
simulated 210 miners mining at identical rates (i.e., they each can
Fig. 5. Optimal mining-duration lengths of the three mining pools are given
as the functions of the mining power λA for λB = {0.1, 0.2, 0.3}.
have one simulated hash test at each time step of the Monte Carlo
simulations and each test is a successful mining with probability
2−d). The total hash rate of the whole network thus is 210. The
difficulty level d is set to ensure that in average one key block
is found by the network during the mining time Tm = 2, i.e.,
(210/2d)Tm = 1 which gives d = 11.
The first simulation is to investigate the one-attacker min-
ing optimization problem. In the simulation, the attacker’s
mining pool includes ωA miners (thus its hash ratio is
λA = ωA/2
d ∈ [0, 0.5]); the honest mining pool includes the
remaining 210 − ωA miners (thus its hash ratio is λB =
(210 − ωA)/2
d = 0.5− λA). The reward contained in each key
block is set to as R = {1, 10}. The simulation results are given
in Fig. 6(a) for the average mining reward of the attacker and in
Fig. 6(b) for the frequency of mining success of the attacker. The
hash ratio of the attacker is treated as a parameter and is set to as
λA = {0.1, 0.2, 0.3, 0.4}. The averaging is performed over 1000
rounds. From Fig. 6(a), we can see that for different hash ratios
of the attacker, the attacker can get more profits by performing
advanced mining than by performing honest mining; the gain of
advanced mining over honest mining gets large, as the reward
contain in key blocks R gets large; the gain gets small, as the
attacker’s hash ratio λA gets large. From Fig. 6(b), we can see
that compared to having honest mining, the attacker increase its
frequency of mining success by having advanced mining; the
attacker with less computation power (smaller hash ratio) can
increase more its frequency of mining success, compared to the
attacker with higher computation power.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: GAME-THEORETICAL ANALYSIS OF MINING STRATEGY FOR BITCOIN-NG BLOCKCHAIN PROTOCOL 2717
Fig. 6. Simulation results for the one-attacker mining optimization problem.
(a) Average mining reward of the attacker. (b) Frequency of mining success of
the attacker.
Fig. 7. Simulation results of the average mining reward for the two-player
mining game when R = 10.
The second simulation is to investigate the two-player mining
game problem, where mining pools A and B compete with each
other using advanced mining. Similarly, the mining pool A in-
cludes ωA miners (thus its hash ratio is λA = ωA/2
d ∈ [0, 0.5]);
the mining pool B includes the remaining 210 − ωA miners
(thus its hash ratio is λB = (210 − ωA)/2
d = 0.5− λA). We
investigate the following four setups of mining strategies:
1) (τ ∗A, τ
∗
B): both pools adopt advanced mining with their
optimal mining-duration lengths given by the Nash
equilibrium.
2) (Tm, Tm): both pools adopt honest mining with the default
mining-duration lengths.
3) (τ ∗A, Tm): poolA adopts advanced mining with its optimal
mining-duration length given by the Nash equilibrium and
poolB adopts honest mining with default mining-duration
length.
4) (Tm, τ ∗B): pool A adopts honest mining with default
mining-duration length and pool B adopts advanced min-
ing with its optimal mining-duration length given by the
Nash equilibrium.
The simulation results for the two mining pools under the
above four setups of mining strategies are given in Figs. 7 and
8 . Under parameters λA = {0.05, 0.15, 0.25} and R = 10, the
Fig. 8. Simulation results of the frequency of mining success for the two-player
mining game when R = 10.
Fig. 9. Simulation results of the sum average mining rewards of the two mining
pools both adopting advanced mining and both adopting honest mining. (a)
R = 1. (b) R = 10.
average mining rewards of the two mining pools are shown in
Fig. 7, and the frequency of mining success of the two mining
pools are shown in Fig. 8. We see from Fig. 7 that the average
mining rewards of the two mining pools with mining strategies
(τ ∗A, τ
∗
B) are lower than that when mining strategies (Tm, Tm)
are adopted. If one pool deviates from advanced mining to honest
mining, its average reward decreases when the other pool sticks
to the advanced mining strategies. From the results in Fig. 8, we
see that when the mining strategy of the other mining pool is
fixed, the frequency of mining success of one particular mining
pool is increased by its own advanced mining. Therefore, we
conclude that both of the mining pools have no motivation to
have honest mining due to their selfish and noncooperative
nature. From Fig. 8, we also find that a mining pool with
less computation power (i.e., smaller hash ratio) has a higher
motivation to perform advanced mining, since the advanced
mining can increase its frequency of mining success regardless
of what mining strategies the other mining pool adopts.
Fig. 9 presents the sum and individual average mining rewards
of mining pools A and B that both adopt advanced mining
[(τ ∗A, τ
∗
B)] and or honest mining [(Tm, Tm)] for R = 1 and
R = 10. For a particular setup of hash ratios, e.g., λA and
λB = 0.5− λA, there is a difference between the sum reward
of the pools both having advanced mining (τ ∗A, τ
∗
B), and the
sum reward of the pools both having honest mining (Tm, Tm).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
2718 IEEE SYSTEMS JOURNAL, VOL. 15, NO. 2, JUNE 2021
Fig. 10. Simulation results for the three-player mining game when λA =
0.25, λB = 0.1, λC = 0.15, R = 10. (a) Average mining reward. (b) Fre-
quency of mining success.
This difference in the sum rewards of the two mining pools is
a system penalty caused by advanced mining. This penalty is
in accordance with the reduced TPS—it is the number of the
microblocks that are not included in the blockchain. Comparing
the average mining reward results in Fig. 9(a) (for R = 1) and in
Fig. 9(b) (for R = 10), we can also see that the penalty caused
by advanced mining increases as the increase of R.
Based on the observations, we can conclude: the advanced
mining strategy setup (τ ∗A, τ
∗
B) is indeed the equilibrium of
the mining game problem; advanced mining is harmful to the
Bitcoin-NG network and it reduces the TPS of Bitcoin-NG; the
TPS penalty caused by advanced mining decreases as the de-
crease of the reward contained in each key block (R). Therefore,
if the total volume of the issued coins by Bitcoin-NG blockchain
is fixed, releasing a small amount of new coins in each key block
and letting the issue of coins last for a long time can alleviate the
negative impact of advanced mining. Although zero key block
reward can reduce the negative impact of advanced mining to
the lowest, it will cause the blockchain unstable [23].
We investigate the mining game of N -players by considering
the scenario where three mining poolsA,B, andC (i.e.,N = 3)
play the mining game. In the simulation, the three mining pools
have hash ratios λA = 0.25, λB = 0.1, and λC = 0.15, respec-
tively. We consider three setups of mining strategies for them: 1)
all three mining pools adopt advanced mining [(τ ∗A, τ
∗
B , τ
∗
C)]; 2)
all three mining pools adopt honest mining [(Tm, Tm, Tm)]; 3)
mining pool A adopts advanced mining and the other two adopt
honest mining [(τ ∗A, Tm, Tm)], where τ ∗A, τ ∗B , and τ ∗C are the
optimal mining-duration lengths given by the Nash equilibrium.
The simulation results are given in Fig. 10 when R = 10, where
Fig. 10(a) presents the results of the average mining reward,
and Fig. 10(b) presents the results of the frequency of mining
success. From the simulation results, we can see that for the
mining game where N = 3, the best strategy of a particular
player (e.g., mining pool A) is advanced mining. This validates
the Nash equilibrium for the mining game where N = 3.
We also compare advanced mining attack with BHW attack
[22] in the three-player scenario. For the game-theoretical model
of BHW attack, we assume that the mining pools B and C can
access the mining pool A to adopt the optimal power-splitting
strategies proposed in [22] to play the mining game. The simula-
tion results of the BHW attack game are presented in Fig. 10. We
can observe that in the simulated three-player scenario, the BHW
attack game gives less severe attack effects than the advanced
mining game dose, i.e., the advanced mining game changes the
distribution of mining rewards more severely.
VI. CONCLUSION
In this article, we investigated the advanced mining problem
for the Bitcoin-NG blockchain protocol. Although Bitcoin-NG
is scalable, it is vulnerable to the malicious advanced mining in
which attackers intentionally ignore some microblocks issued by
the current leader and mine on an early microblock to enlarge
their successful mining probabilities. We find that although
advanced mining will lose some transaction fees contained in
later microblocks, it is still more profit than honest mining (i.e.,
mining on the latest microblock). Moreover, we show that when
mining pools adopt advanced mining, the mining problem of
Bitcoin-NG can be formulated as a noncooperative game and
each mining pool individually decides when to mine. We then
find the equilibrium of this mining game. Numerical results are
provided to confirm our analytical results. We have performed
system simulations to investigate the advanced mining prob-
lem. Based on the simulation results, we have the following
conclusions: the analytically derived advanced mining strategy
is indeed the equilibrium of the mining game; advanced mining
will reduce the TPS of Bitcoin-NG; mining pools with less com-
putation power have higher motivations to perform advanced
mining.
REFERENCES
[1] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” 2008.
[Online]. Available: http://bitcoin.org
[2] K. Fanning and D. P. Centers, “Blockchain and its coming impact on
financial services,” J. Corporate Accounting Finance, vol. 27, no. 5,
pp. 53–57, 2016.
[3] M. A. Ferrag, M. Derdour, M. Mukherjee, A. Derhab, L. Maglaras, and
H. Janicke, “Blockchain technologies for the internet of things: Re-
search issues and challenges,” IEEE Internet Things J., vol. 6, no. 2,
pp. 2188–2204, Apr. 2019.
[4] H.-N. Dai, Z. Zheng, and Y. Zhang, “Blockchain for internet of things: A
survey,” IEEE Internet Things J., vol. 6, no. 5, pp. 8076–8094, Oct. 2019.
[5] S. A. Abeyratne and R. P. Monfared, “Blockchain ready manufacturing
supply chain using distributed ledger,” Int. J. Res. Eng. Technol., vol. 05,
no. 09, pp. 1–10, 2016.
[6] J. Garay, A. Kiayias, and N. Leonardos, “The Bitcoin backbone protocol:
Analysis and applications,” in Proc. 34th Annu. Int. Conf. Theory Appl.
Cryptogr. Techn., 2015, pp. 281–310.
[7] C. Decker and R. Wattenhofer, “Information propagation in the Bitcoin
network,” in Proc. IEEE 13th Int. Conf. Peer-to-Peer Comput., 2013,
pp. 1–10.
[8] Y. Sompolinsky and A. Zohar, “Accelerating Bitcoin’s transaction process-
ing: Fast money grows on trees, not chains,” IACR Cryptol. ePrint Arch.,
vol. 2013, no. 881, 2013.
[9] V. Bagaria, S. Kannan, D. Tse, G. Fanti, and P. Viswanath, “Prism:
deconstructing the blockchain to approach physical limits,” in Proc. 2019
ACM SIGSAC Conf. Comput. Communications Security (CCS’19), 2019,
pp. 585–602.
[10] W. Wang et al., “A survey on consensus mechanisms and mining strategy
management in blockchain networks,” IEEE Access, vol. 7, pp. 22 328–
22 370, 2019.
[11] C. Natoli, J. Yu, V. Gramoli, and P. Esteves-Verissimo, “Deconstructing
blockchains: A comprehensive survey on consensus, membership and
structure,” 2019. [Online]. Available: https://arxiv.org/abs/1908.08316
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
http://bitcoin.org
https://arxiv.org/abs/1908.08316
WANG et al.: GAME-THEORETICAL ANALYSIS OF MINING STRATEGY FOR BITCOIN-NG BLOCKCHAIN PROTOCOL 2719
[12] I. Eyal, A. E. Gencer, E. G. Sirer, and R. Van Renesse, “Bitcoin-NG: A
scalable blockchain protocol,” in Proc. 13th USENIX Symp. Netw. Syst.
Des. Implement., 2016, pp. 45–59.
[13] M. Fisz and R. Bartoszyński, Probability Theory and Mathematical Statis-
tics, vol. 3. Hoboken, NJ, USA: Wiley, 2018.
[14] D. Kraft, “Difficulty control for blockchain-based consensus systems,”
Peer-to-Peer Netw. Appl., vol. 9, no. 2, pp. 397–413, 2016.
[15] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is
vulnerable,” Commun. ACM, vol. 61, no. 7, pp. 95–102, 2018.
[16] S. Bag, S. Ruj, and K. Sakurai, “Bitcoin block withholding attack: Anal-
ysis and mitigation,” IEEE Trans. Inf. Forensics Secur., vol. 12, no. 8,
pp. 1967–1978, Aug. 2017.
[17] J. Yin, C. Wang, Z. Zhang, and J. Liu, “Revisiting the incentive mecha-
nism of Bitcoin-NG,” in Proc. Australas. Conf. Inf. Secur. Privacy, 2018,
pp. 706–719.
[18] J. Niu, Z. Wang, F. Gai, and C. Feng, “Incentive Analysis of Bitcoin-NG,
Revisited,” 2020. [Online]. Available: https://arxiv.org/abs/2001.05082
[19] R. M. Corless, G. H. Gonnet, D. E. Hare, D. J. Jeffrey, and D. E. Knuth, “On
the LambertW function,” Adv. Comput. Math., vol. 5, no. 1, pp. 329–359,
1996.
[20] M. S. Abdalzaher, K. Seddik, M. Elsabrouty, O. Muta, H. Furukawa, and
A. Abdel-Rahman, “Game theory meets wireless sensor networks security
requirements and threats mitigation: A survey,” Sensors, vol. 16, no. 7,
pp. 1–27, 2016.
[21] J. B. Rosen, “Existence and uniqueness of equilibrium points for concave
n-person games,” Econometrica: J. Econometric Soc., pp. 520–534, 1965.
[22] L. Luu, R. Saha, I. Parameshwaran, P. Saxena, and A. Hobor, “On
power splitting games in distributed computation: The case of Bitcoin
pooled mining,” in Proc. IEEE 28th Comput. Secur. Found. Symp., 2015,
pp. 397–411.
[23] M. Carlsten, H. Kalodner, S. M. Weinberg, and A. Narayanan, “On the
instability of Bitcoin without the block reward,” in Proc. ACM SIGSAC
Conf. Comput. Commun. Secur., 2016, pp. 154–167.
Taotao Wang (Member, IEEE) received the B.S.
degree in electrical engineering from the Univer-
sity of Electronic Science and Technology of China,
Chengdu, China, in 2008, the M.S. degree in informa-
tion and signal processing from the Beijing University
of Posts and Telecommunications, Beijing, China, in
2011, and the Ph.D. degree in information engineer-
ing from the Chinese University of Hong Kong, Hong
Kong, in 2015.
From 2015 to 2016, he was a Postdoctoral Re-
search Fellow with the Institute of Network Coding,
The Chinese University of Hong Kong. After that, he joined the College of
Information Engineering, Shenzhen University as an Assistant Professor. His
main research interests include distributed network and blockchain technology,
wireless communications and networking, statistical signal and data processing.
Dr. Wang is a recipient of the Hong Kong Ph.D. Fellowship.
Xiaoqian Bai received the B.S. degree in electronics
and information engineering from Guilin University
of Electronic Technology, Guilin, China in 2018.
She is currently working toward the master’s degree
with Shenzhen University, Shenzhen, China, under
the supervision of Prof. T. Wang.
Her research interests include distributed network
and blockchain technology.
Hao Wang (Member, IEEE) received the B.Eng.
degree in electrical engineering from East China Uni-
versity of Science and Technology, Shanghai, China,
in 2007, M.S. degree in engineering from Shanghai
Jiao Tong University, Shanghai, China, in 2010, and
the Ph.D. degree in information engineering from the
Chinese University of Hong Kong, Hong Kong, in
2016.
He is currently a Lecturer (Assistant Professor)
with the Department of Data Science and Artifi-
cial Intelligence, Faculty of Information Technology,
Monash University, Clayton VIC, Australia. He was a Postdoctoral Research
Fellow with Stanford University. His main research interests include optimiza-
tion, machine learning, and data analytics of cyber-physical systems.
Dr. Wang is a recipient of the Washington Research Foundation Innovation
Fellowship, the University of Washington, Seattle, WA, USA.
Soung Chang Liew (Fellow, IEEE) received the S.B.,
S.M., E.E., and Ph.D. degrees from the Massachusetts
Institute of Technology, Cambridge, MA, USA, in
1984, 1986, and 1988, respectively.
From 1984 to 1988, he was with the MIT Labora-
tory for Information and Decision Systems, where he
investigated Fiber-Optic Communications Networks.
From 1988 to 1993, he was at Bellcore (now Tel-
cordia), where he had been engaged in Broadband
Network Research. He has been a Professor with the
Department of Information Engineering, the Chinese
University of Hong Kong (CUHK), since 1993. He is currently the Division
Head of the Department of Information Engineering and a Co-Director of the
Institute of Network Coding, CUHK. His research interests include wireless
networks, Internet-of-Things, intelligent transport systems, Internet protocols,
multimedia communications, and packet switch design.
Dr. Liew is the holder of 15 U.S. patents and a Fellow of IET and HKIE.
He is also a Board Member with Hong Kong Applied Science and Technology
Institute. He is the recipient of the first Vice-Chancellor Exemplary Teaching
Award in 2000 and the Research Excellence Award in 2013 at the Chinese
University of Hong Kong.
Shengli Zhang (Senior Member, IEEE) received
the B.Eng. degree in electronic engineering and the
M.Eng. degree in communication and information
engineering from the University of Science and Tech-
nology of China, Hefei, China, in 2002 and 2005,
respectively, and the Ph.D. degree from The Chinese
University of Hong Kong, in 2008.
Since 2008, he has been with Shenzhen University
as a Faculty Member, where he is currently a Profes-
sor. From 2014 to 2015, he was with Stanford Uni-
versity as a Visiting Professor. His current research
interests include wireless networks and wireless communications, especially
physical layer network coding and cooperative wireless networks.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:13:37 UTC from IEEE Xplore.  Restrictions apply. 
https://arxiv.org/abs/2001.05082
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages false
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages false
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice