SDoS: Selfish Mining-Based Denial-of-Service Attack
IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 17, 2022 3335
SDoS: Selfish Mining-Based
Denial-of-Service Attack
Qiuhua Wang, Tianyu Xia, Dong Wang , Yizhi Ren, Gongxun Miao,
and Kim-Kwang Raymond Choo , Senior Member, IEEE
Abstract— In this paper, we focus on mining attacks targeting1
the Proof of Work (PoW) consensus mechanism in blockchain-2
based systems. Specifically, we model mining as a game and3
propose a mining attack – the Selfish mining-based denial of ser-4
vice (SDoS) attack. By studying the choices (mining or stopping)5
of honest miners under the attack and the adversary’s revenue,6
we demonstrate that selfish mining is incentive-compatible with7
game-level denial of service attack, and that SDoS can be more8
threatening than existing mining attacks. Even under the worst9
assumption, the adversary only needs to master more than 19.6%10
of the total mining power to increase the revenue, and can launch11
a 51% attack with much less than 50%. In addition, we show12
that honest miners may make decisions based on the overall or13
current utility, and choosing the current utility is more beneficial14
to the adversary.15
Index Terms— Mining attack, blockchain, bitcoin, selfish min-16
ing, denial of service.17
I. INTRODUCTION18
CRYPTOCURRENCY is increasingly popular, with an19
estimated global crypto market capital of over $1.76 tril-20
lion (as of March 5, 20221). Among the tens of thousands21
of cryptocurrencies, Bitcoin is the most popular with an22
estimated global crypto market capital of over $0.74 tril-23
lion dollars. In cryptocurrencies and blockchain systems that24
rely on the Proof of Work (PoW) consensus to maintain a25
decentralized and distributed ledger, miners with more mining26
Manuscript received 7 April 2022; revised 14 July 2022 and 17 August
2022; accepted 17 August 2022. Date of publication 29 August 2022; date of
current version 28 September 2022. This work was supported in part by the
“Pioneer” and “Leading Goose” Research and Development Program of Zhe-
jiang under Grant 2022C03174, in part by the Fundamental Research Funds
for the Provincial Universities of Zhejiang under Grant GK229909299001-
023, and in part by the Scientific Research Fund of Zhejiang Provincial
Education Department under Grant Y202147115. The work of Kim-Kwang
Raymond Choo was supported by the Cloud Technology Endowed Profes-
sorship. The associate editor coordinating the review of this manuscript and
approving it for publication was Dr. Dusit Niyato. (Corresponding authors:
Dong Wang; Yizhi Ren.)
Qiuhua Wang, Dong Wang, and Yizhi Ren are with the School of
Cyberspace, Hangzhou Dianzi University, Hangzhou 310018, China (e-mail:
wangqiuhua@hdu.edu.cn; wangdong@hdu.edu.cn; renyz@hdu.edu.cn).
Tianyu Xia is with the School of Cyberspace, Hangzhou Dianzi Univer-
sity, Hangzhou 310018, China, and also with the National Secrecy Sci-
ence and Technology Evaluation Center, Beijing 100044, China (e-mail:
191270010@hdu.edu.cn).
Gongxun Miao is with Zhongfu Information Company Ltd., Jinan 250101,
China (e-mail: miaogx@zhongfu.net).
Kim-Kwang Raymond Choo is with the Department of Information Systems
and Cyber Security, The University of Texas at San Antonio, San Antonio,
TX 78249 USA (e-mail: raymond.choo@fulbrightmail.org).
Digital Object Identifier 10.1109/TIFS.2022.3202696
1https://coinmarketcap.com/
power (computing power) are more likely to find blocks 27
(win the bookkeeping rights). Given the financial incentives 28
(e.g., rising cryptocurrency value), this reward mechanism 29
effectively encourages people to invest more (and more) 30
mining power to develop the blockchain, and the massively 31
large collective mining power makes the system less vulner- 32
able to the 51% (majority) attack (e.g., double spending). 33
In Bitcoin, for example, to successfully carry out a 51% 34
attack, the adversary’s mining power must exceed half of the 35
total (otherwise the probability of achieving a double-spending 36
attack is negligible). In the history of Bitcoin, it is reported 37
that only in 2014 the GHash mining pool accounted for 38
more than half of the total mining power, and they actively 39
reduced this propotion to avoid the risk of 51% attack [1]. 40
Although Goldfinger and bribery attacks [2], [3], [4] can help 41
the adversary obtain more mining power, no successful 51% 42
attack has yet occurred in the Bitcoin system, whose total 43
mining power keeps increasing. However, in some small-scale 44
blockchain systems, there have been instances of success 51% 45
attacks such as the attacks against two smaller-sized clones of 46
Ethereum (i.e., Krypton and Shift) in August 2016 [5]. 47
The range of threats affecting blockchain systems (including 48
cryptocurrencies) is wide, and example attacks include Selfish 49
Mining (SM) [6], Block Withholding Attack(BWA) [7], [8], 50
and other attack variants [2], [9], [10], [11]. These example 51
attacks are generally designed to consume significant mining 52
power (e.g., wasting as much mining power of the other 53
parties as possible while minimizing the consumption of the 54
adversary’s mining power) with the goal of reducing mining 55
difficulty and obtaining more revenue. In other words, the 56
adversary seeks to compensate for the power consumption 57
with additional revenue since performing such attacks still 58
consumes mining power (usually less than half of the total). 59
For example, in a SM attack [10], the adversary can increase 60
revenue only when his/her mining power is greater than 25% 61
of the total. 62
Traditional network-level distributed denial-of-service 63
(DoS) attacks drain the target’s resources, causing it to 64
passively stop working. However, it is challenging to carry 65
out such an attack against the blockchain system, partly 66
because of the large number and scattered server nodes 67
(miners). In a selfish DoS (SDoS) attack, the adversary does 68
not directly interact with other miners since the adversary 69
only provides a game for all honest miners. In other words, 70
the SDoS adversary aims to make honest miners voluntarily 71
choose to stop mining in the game, and hence such an attack 72
is also referred to as a game-level DoS attack. 73
1556-6021 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-9246-204X
https://orcid.org/0000-0001-9208-5336
3336 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 17, 2022
Our main contributions are summarized as follows:74
1) We propose a novel mining attack, selfish mining-based75
DoS (SDoS) attack. The attack’s target is blockchain76
systems based on the POW mechanism and without77
uncle block rewards, such as Bitcoin.78
2) We demonstrate that SDoS is more threatening to the79
blockchain system than several other existing attacks,80
and our simulations show that in SDoS attacks, the81
adversary can more easily force honest miners to choose82
to stop (compared with BDoS [12]), and the adversary’s83
revenue in SDoS is higher (compared with SM). Even84
under the worst assumption, the adversary only needs85
to master more than 19.6% of the total mining power86
to increase revenue, and can launch a 51% attack with87
much less than 50%.88
3) We also consider the impact of each round of difficulty89
adjustment in our evaluation, and calculate the final90
stable and credible adversary’s revenue in SDoS.91
4) We propose that honest miners may make decisions92
based on overall or current utility. However, the simula-93
tion results show that making decisions based on current94
utility is more beneficial to the adversary. We also95
believe that the overall utility is the choice of most96
honest miners.97
II. RELATED LITERATURE98
Under the premise that the adversary’s mining power is not99
dominant (i.e., less than half), many mining attacks [6], [7],100
[8], [9] have been proposed to increase the adversary’s revenue101
through special mining strategies. Eyal et al. [6], for example,102
proposed a SM attack, in which the adversary keeps the block103
private locally to reduce the others’ revenue and increase104
his/her revenue. Nayak et al. [9] proposed the SM attack to105
extend selfish mining, they showed how an adversary can106
adjust his/her “selfishness” (the strategy of retaining blocks)107
to maximize the revenue under different conditions. Both SM108
and SbM attacks can be completely executed locally, while the109
BWA attack proposed by Luu et al. [8] required the adversary110
to interact with others. In BWA, the adversary divides his/her111
mining power into two parts, one part is used to honestly mines112
locally, and the other part is used to complete the mining tasks113
from other mining pools without submitting the target block.114
Combining selfish mining [10] and strategically adjusting the115
ratio of the two mining power [11], the adversary’s revenue can116
be improved in BWA. However, SM and SbM still require high117
computing power (25%) for attackers; in BWA, it is difficult118
to implement (since the administrator can censor and restrict119
miners from entering the pool), and there is a dilemma that120
miners attack each other at the same time.121
The typical application of DoS attack on the blockchain net-122
work is the Eclipse attack. Each Bitcoin node is connectedup123
to 125 nodes via TCP (Transmission Control Protocol ). Given124
this, Heilman et al. [13] proposed a method to implement an125
Eclipse attack on the Bitcoin network. The adversary tries to126
take over all the connections of the target node, thereby eclips-127
ing that node from the network. Nayak et al. [9] combined128
the Eclipse attack and SM attack. They demonstrated how the129
adversary can utilize an eclipsed node to increase revenue.130
But they did not analyze the cost of the eclipse attack itself.131
Moreover, the Eclipse attack can only affect the target node, 132
not all nodes. As we said before, traditional network-level DoS 133
attacks are inefficient in blockchain networks. 134
Many studies [12], [14], [15], [16], [17], [18], [19] regard 135
the maintenance process of blockchain systems as a game. 136
When legal mining behavior contradicts the equilibrium, min- 137
ers may choose the latter, i.e., the illegal behavior but with the 138
highest revenue. Goren et al. [16] proposed that the miners 139
would adopt an intermittent mining strategy to reduce costs. 140
They claimed that this strategy (stop mining for a certain 141
period of time) could increase the risk of 51% attacks. In the 142
BDoS proposed by Mirkin et al. [12], the adversary discloses 143
the block header (or other proof methods) in order to force 144
rational, honest miners to choose to stop mining in the game. 145
However, in BDoS, the adversary actually halts the attack 146
following the proof of the block. What they care about is 147
whether honest miners choose to mine, not the adversary’s 148
revenue. 149
In summary, existing attacks are costly and difficult to 150
implement. To this end, we propose SDoS and find that 151
SM is incentive-compatible with DoS attack (game-level). 152
In SDoS, the adversary does not directly interact with the 153
attack target, and there are no other implement costs (except 154
the mining cost) and difficulties. And under certain conditions, 155
the adversary only needs to master 20% or less mining power 156
to increase the revenue, and even launch a 51% attack. 157
III. MINING MODEL AND GAME-THEORETIC MODEL 158
To make the mining attack situation analyzable, we model 159
the system in a similar way to [12]. Moreover, we take the 160
difficulty adjustments and honest miners’ fork choices into 161
account realistically. 162
A. Participants 163
There is an adversary A and n honest miners P1, P2,…, Pn 164
in the system. The adversary A has mining power αA, and the 165
honest miner Pi has mining power αi , i ∈ {1, 2, . . . , n}. The 166
total mining power is normalized to 1, i.e., αA+∑n
i=1 αi = 1. 167
Anyone can mine on a complete block that is pulicly available 168
(which has been proved in [12] SPV mining (mine on block 169
headers) will not happen). 170
B. Blockchain 171
Suppose that the number of the genesis block is 1, and 172
the number of the subsequent block is increased by one, and 173
the same afterward. In this paper, for simplicity, we do not 174
consider the influence of network structure and communication 175
delay. Everyone can receive the public block in an instant. 176
Honest miners will immediately publish the found blocks, and 177
treat the longest chain as the only legitimate main chain. Then, 178
when everyone is honestly mining, the blockchain will not 179
fork, but the adversary A can create forks maliciously (the 180
adversary does not publish the found block immediately but 181
publishes it at the same time as others publish). The length 182
of the fork is at least 1, and it must exist at the end of the 183
blockchain. When the length of a branch in the fork is longer, 184
it means this branch has won the fork competition, and honest 185
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: SDoS: SELFISH MINING-BASED DENIAL-OF-SERVICE ATTACK 3337
miners will regard it as the main chain. We refer to the blocks186
contained in the failed branch as invalid blocks. Miners cannot187
get rewards for invalid blocks. Others that can be redeemed188
for rewards are called valid blocks.189
We do not elaborate on the data structure and basic theory of190
cryptography involved in blockchain here. Interested readers191
can refer to [20].192
C. Choice of Branch193
If the blockchain forks, honest miners will choose the194
branch that contains the blocks found by themselves to con-195
tinue mining. If neither branches contain such blocks, honest196
miners will choose one branch at random.197
D. Expected Block Output Time TE and Difficulty Adjustment198
There is a fixed default block output time TE in the199
blockchain system. For example, in Bitcoin, TE = 600 seconds200
means that the system is supposed to produce a block every201
ten minutes. TE is used to adjust the difficulty factor λ (λ also202
denotes the probability of finding a block per unit of mining203
power and time), so as to prevent the growth speed of the204
blockchain from being affected by the fluctuation of mining205
power. The system “hopes” λ = 1
TE α∗ , where α∗ denotes the206
total active mining power in the system, α∗ ∈ [0, 1]. But α∗ is207
difficult to calculate accurately in the decentralized blockchain208
system. The practical method is, to use the current difficulty209
factor λ′, actual time TF of S blocks produced before, and210
TE to estimate the new difficulty factor λ. The calculation211
formula is λ = λ′ TF
TE S . Difficulty adjustment is executed every212
time S new blocks are produced. We use difficulty adjustment213
to define the mining cycles. Block difficulty adjustment marks214
the end of the old mining cycle and the beginning of a new215
one.216
E. Utility and Profitability Factor wi217
Assume that the reward of a block is fixed at K and the218
mining cost per unit of mining power and time for Pi is ci .219
Then miner Pi ’s expected mining revenue per unit time is220
Ri � αiλK (with no attack). Pi ’s expected mining profit per221
unit time is Wi � Ri − αi ci . Normalizing Wi by the mining222
power αi , we get the utility of Pi is:223
Ui � Wi
αi
= λK − ci (1)224
The profitability factor wi denotes the return on investment225
for honest miner Pi . So it is defined as:226
wi � Ri
αi ci
= λK
ci
(2)227
Note that Ui > 0 is equivalent to wi > 1, and Ui < 0 is228
equivalent to wi < 1.229
F. Actions230
Rational miners will take the most profitable action. In this231
paper, each honest miner has three possible actions:232
i Mine.233
ii Stop mining.234
Fig. 1. State 0.
iii Mine for tmax time. And stop mining after tmax time, 235
if there is still no new complete block produced in the 236
system. 237
We propose that honest miners may make decisions based on 238
overall or current utility. When based on overall utility, honest 239
miners choose between actions i and ii; otherwise, they choose 240
between actions ii and iii. 241
IV. SDOS 242
In this section, we introduce our proposed mining attack 243
SDoS. In Sections IV-A and IV-B, we describe SDoS through 244
the attack strategy and the possible blockchain states during 245
the attack, respectively. In section IV-C, we summarize the 246
revenues of honest miners and attackers during the attack. 247
A. Attack Strategy 248
In this section, we describe the adversary’s attack strategy. 249
In SDoS, the adversary retains a private chain in local, and in 250
some cases, publishes a full block or a block header (excluding 251
the block body), as shown in Algorithm 1. Where Alead 252
denotes the adversary’s lead, i.e., the length of the adversary’s 253
private chain minus that of the public chain. In addition, I f F 254
denotes whether the public chain forks. I f F = 1 means the 255
public chain forks, otherwise, it does not. 256
At the beginning of the attack, the adversary accepts the 257
public chain as the private chain. At this time, there is no fork 258
in the public chain, and the adversary is not leading. As shown 259
in lines 1-3 of Algorithm 1. 260
When the adversary finds a block N , he/she adds it to the 261
private chain. If the public chain forks and the adversary does 262
not lead, the adversary publishes the private chain to replace 263
the public chain, then there is no fork. If the public chain 264
does not fork and the adversary is not leading, the adversary 265
publishes the header of block N , and the lead increases by 266
one. If the lead is greater than 0, the adversary does not 267
take any action, and the lead increases by one. As shown in 268
lines 5-15 of Algorithm 1. 269
When an honest miner finds a block N , he/she publishes it, 270
i.e., adds it to the public chain. If the adversary is not leading, 271
the adversary accepts the public chain as the private chain. 272
If the lead is 1, the adversary publishes the private chain, 273
then the public chain forks and the lead is 0. If the lead is 2, 274
the adversary publishes the private chain to replace the public 275
chain, then there is no fork and the lead is 0. If the lead is 276
greater than 2, the adversary publishes the block N and the 277
header of the block N +1 of the private chain, then the public 278
chain forks and the lead minus one. As shown in lines 17-33 279
of Algorithm 1. 280
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
3338 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 17, 2022
Algorithm 1 Attack Strategy
1: Initialization:
2: PrivateBlockchain← PublicBlockchain
3: Alead, I f F ← 0
4:
5: When the adversary finds a block N:
6: Append block N to PrivateBlockchain.
7: if I f F = 0 and Alead = 0 then
8: Publish the header of block N .
9: Alead ← Alead + 1
10: else if I f F = 1 and Alead = 0 then
11: Publish the PrivateBlockchain.
12: PublicBlockchain← PrivateBlockchain
13: I f F ← 0
14: else if Alead > 0 then
15: Alead ← Alead + 1
16: end if
17:
18: When other miners find a block N and append it to
PublicBlockchain:
19: if Alead = 0 then
20: PrivateBlockchain← PublicBlockchain
21: I f F ← 0
22: else if Alead = 1 then
23: Publish the PrivateBlockchain.
24: Alead ← 0
25: I f F ← 1
26: else if Alead = 2 then
27: Publish the PrivateBlockchain.
28: PublicBlockchain← PrivateBlockchain
29: Alead, I f F ← 0
30: else if Alead > 2 then
31: Publish block N of PrivateBlockchain.
32: Publish the header of block N + 1 of
PrivateBlockchain.
33: Alead ← Alead − 1
34: I f F ← 1
35: end if
B. Blockchain State281
In this section, we describe the possible blockchain states282
during the attack. We use Plen, Alen, Alead , and Flen to283
denote the length of the public chain, the length of private284
chain, the lead of the adversary, and the length of the fork,285
respectively.286
1) State 0: The public chain does not fork, and all miners287
mine on block N , as shown in Figure 1 (The green and red288
arrows point to the mining locations of honest miners and289
the adversary, respectively. And the gray and blue blocks290
denote the blocks found by honest miners and the adversary,291
respectively.). At this state, the adversary accepts the public292
chain as the private chain, Alen = Plen = N , Alead = 0,293
and Flen = 0.294
0-1. If honest miners find block N + 1, publish it, Plen =295
N + 1. Enter state 0.296
0-2. If the adversary finds block N+1, adds it to the private297
chain and publishes the header of it, Alen = N + 1. Enter298
state 1.299
Fig. 2. State 1.
2) State 1: Now Alead = 1, Flen = 0. The adversary 300
mines on block N +1 of the private chain. The honest miners 301
decide whether to mine on block N of the public chain, 302
as shown in Figure 2. 303
1-1. If honest miners find block N + 1, publish it, Plen = 304
N + 1, Alead = 0. The adversary publishes the private chain, 305
the public chain forks on the block N + 1, Flen = 1. Enter 306
state 0′. 307
1-2. If the adversary finds block N+2, adds it to the private 308
chain, Alen = N + 2, Alead = 2. Enter state 2. 309
3) State 0′: Now Alead = 0, Flen = 1. The adversary and 310
honest miners mine on block N+1 of the public chain. But the 311
public chain forks on block N+1. The adversary mines on the 312
block N+1 he found. And the mining power of honest miners 313
are scattered into two branches, as shown in Figure 3(a). 314
0′-1. If honest miners find block N+2 after the adversary’s 315
block N+1, publish it, as shown in Figure 3(b). Enter state 0. 316
0′-2. If honest miners find block N +2 after honest miner’s 317
block N+1, publish it, as shown in Figure 3(c). Enter state 0. 318
0′-3. If the adversary finds block N + 2, publishes it, 319
as shown in Figure 3(d). Enter state 0. 320
4) State 2: Now Alead = 2. The adversary mines on 321
block Alen of the private chain. Honest miners decide whether 322
to mine on block Plen of the public chain. If Flen = 0, 323
the public chain does not fork, as shown in Figure 4(a). 324
If Flen > 0, the public chain forks, and the mining power 325
of honest miners are scattered in two branches, as shown in 326
Figure 4(b). 327
2-1. If honest miners find block Plen + 1, publish it. The 328
adversary publishes the private chain to replace the public 329
chain. Enter state 0. 330
2-2. If the adversary finds block Alen + 1, adds it to the 331
private chain, Alen = Alen + 1, Alead = 3. Enter state 3. 332
5) State n (n>2): Now Alead = n. The adversary mines on 333
block Alen of the private chain. Honest miners decide whether 334
to mine on block Plen of the public chain. If Flen = 0, 335
the public chain does not fork, as shown in Figure 5(a). 336
If Flen > 0, the public chain forks, and the mining power 337
of honest miners are scattered in two branches, as shown in 338
Figure 5(b). 339
n-1. If honest miners find block Plen + 1, publish it. 340
The adversary publishes block Plen and the header of block 341
Plen + 1 of the private chain, then the public chain forks 342
on block Plen. If Flen = 0 before, then Flen = 1 now. 343
If Flen > 0, then there are two possible situations: if honest 344
miners find block Plen + 1 after honest miner’s block Plen, 345
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: SDoS: SELFISH MINING-BASED DENIAL-OF-SERVICE ATTACK 3339
Fig. 3. State 0′, Event 0′ − 1, Event 0′ − 2 and Event 0′ − 3.
Fig. 4. State 2.
Fig. 5. State n.
then Flen = Flen+1; if after the adversary’s, then Flen = 1.346
Plen = Plen + 1, Alead = Alead − 1. Enter state Alead .347
n-2. If the adversary finds block Plen + 1, adds it to the 348
private chain, Alen = Alen+1, Alead = 3. Enter state Alead . 349
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
3340 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 17, 2022
Fig. 6. Markov chain.
C. Revenue Events350
In this section, based on the blockchain states listed in351
section IV-B, we summarize the revenue events of honest352
miners and the adversary.353
1) Honest Miners: In events 0-1, 0′-1 or 0′-2, the honest354
miner who finds the block wins 1 block reward. And in event355
0′-2, the honest miner who finds the block N+1 (the previous356
one) wins 1 block reward.357
2) The Adversary: In event 0′-1, the adversary wins 1 block358
reward. In event 0′-3, he wins 2 block rewards. And in359
event 1-2, the adversary actually wins 2 block rewards (due360
to keeping the private chain, the rewards are temporarily not361
redeemed); similarly, in event n-2, he actually wins 1 block362
reward.363
V. ANALYSIS364
From the perspective of an honest miner Pi , Pi can only365
learn that there is an attack when the adversary publishes a366
block header. Since the adversary only publishes one block367
header at a time, Pi has no way of learning the adversary’s368
lead, i.e., the blockchain may be in any of the states 1, 2,369
3,…,n. Facing the known but unavoidable attacks, rational370
miners will take the most profitable action. Miner Pi may371
make decisions based on overall utility or current utility, which372
are analyzed in Sections V-A and V-B respectively.373
A. Overall Utility374
In this section, an honest miner analyzes his utility by375
Markov chains; we say that an honest miner makes decision376
based on the overall utility. In section V-A.1, we prove that377
there is a critical profitability factor w∗i . When wi < w∗i ,378
facing the block header published by the adversary, Pi chooses379
to stop mining. In section V-A.4, we analyze the adversary’s380
revenue increase rate during the attack. And the simulation381
results are shown in section V-A.11.382
1) Critical Profitability Factor w∗i : We let the honest miner 383
Pi use Markov chains to describe and analyze the game. 384
Figures 6(a) and 6(b) show the Markov chain when the honest 385
miner Pi chooses to mine and stop, respectively. Each of 386
these states corresponds to the blockchain state described in 387
section IV-B. In Figure 6(a), we split the state 0′ into 0′1 and 0′2. 388
In state 0′1, the two blocks found by Pi and the adversary form 389
a fork. In state 0′2, the blocks found by other honest miners 390
and the adversary form a fork. Obviously, there is no state 0′2 391
when Pi chooses to stop. αB denotes, in Pi ’s mind, the total 392
mining power of other honest miners who choose to mine. αB 393
will greatly affect Pi ’s decision-making, which is elaborated 394
below. 395
2) State Probability: According to the equation set (3), the 396
state probabilities (pM
0 , pM
0′1
, pM
0′2
, pM
1 , pM
2 . . . , pM
n . . . , where 397
n ∈ (2,∞)) of the Markov chain in Figure 6(a) can be 398
calculated as (4): 399⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
pM
0 =(1− λαA)pM
0 + λpM
0′1
+ λpM
0′2
+λ(αB + αi )pM
2
pM
1 = λαA pM
0 + (1− λαA − λαB − λαi )pM
1
pM
0′1
= λαB pM
1 + (1− λ)pM
0′1
pM
0′2
= λαi pM
1 + (1− λ)pM
0′2
pM
2 = λαA pM
1 + (1− λαA − λαB − λαi )pM
2
+λ(αB + αi )pM
3
pM
3 = λαA pM
2 + (1− λαA − λαB − λαi )pM
3
+λ(αB + αi )pM
4
. . .
pM
n = λαA pM
n−1 + (1− λαA − λαB − λαi )pM
n
+λ(αB + αi )pM
n+1
. . .
pM
0 +pM
0′1
+ pM
0′2
+ pM
1 + pM
2 + pM
3 + . . . pM
n + . . .=1
400
(3) 401
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: SDoS: SELFISH MINING-BASED DENIAL-OF-SERVICE ATTACK 3341
⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
pM
0 =
αA + αB + αi
αA
pM
1
pM
0′1
= αB pM
1
pM
0′2
= αi pM
1⎧⎪⎪⎪⎨⎪⎪⎪⎩
pM
1 =
1
αA+αB+αi
αA
+1+αB+
αi + αA
αB+αi−αA
, αA < αB + αi
pM
1 → 0, αA >= αB + αi
pM
2 =
αA
αB + αi
pM
1
pM
3 = (
αA
αB + αi
)2 pM
1
. . .
pM
n = (
αA
αB + αi
)(n−1) pM
1
. . .
402
(4)403
According to the equation set (5), the state probabilities404
(p0, pS
1 , pS
0′1
, pS
0′2
, pS
2 . . . , pS
n . . . , where n ∈ (2,∞)) of the405
Markov chain in Figure 6(b) can be calculated as (6):406 ⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
pS
0 = (1− λαA)pS
0 + λpS
0′ + λαB pS
2
pS
0′ = λαB pS
1 + (1− λ)pS
0′
pS
1 = λαA pS
0 + (1− λαA − λαB)pS
1
pS
2 =λαA pS
1 + (1− λαA − λαB )pS
2 + λαB pS
3
pS
3 =λαA pS
2 + (1− λαA − λαB )pS
3 + λαB pS
4
. . .
pS
n = λαA pS
(n−1) + (1− λαA − λαB )pS
n
+λαB pS
n+1
. . .
pS
0 +pS
1 + pS
0′ + pS
2 + pS
3 + . . . pS
n + . . . = 1
407
(5)408 ⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
pS
0 =
αA + αB
αA
pS
1
pM
0′ = αB pS
1⎧⎪⎨⎪⎩
pS
1 =
1
αA+αB
αA
+ 1+ αB + αA
αB−αA
, αA < αB + αi
pS
1 → 0, αA >= αB + αi
pS
2 =
αA
αB
pM
1
pS
3 = (
αA
αB
)2 pM
1
. . .
pS
n = (
αA
αB
)n−1 pM
1
. . .
409
(6)410
3) Utility Analysis: According to the revenue events (see411
section IV-C) and the state probabilities, the expected revenues412
per unit time RM
i and RS
i that Pi chooses to mine and stop413
are:414
RM
i = (pM
0 + pM
0′1
+ 2 pM
0′2
)αiλK + 1
2
(1− αi − αA)pM
0′2
λK415
(7)416
RS
i = (pS
0 + pS
0′)αiλK (8)417
The expected costs per unit time C M
i and C S
i that Pi chooses 418
to mine and stop are: 419
C M
i = αi ci (9) 420
C S
i = (pS
0 + pS
0′)αi ci (10) 421
The expected utility U M
i and U S
i that Pi chooses to mine 422
and stop are: 423
U M
i =
RM
i − C M
i
αi
424
= (pM
0 + pM
0′1
+ 2 pM
0′2
+ 1− αi − αA
2αi
pM
0′2
)λK − ci 425
(11) 426
U S
i =
RS
i − C S
i
αi
= (pS
0 + pS
0′)λK − ci (12) 427
Obviously, when U M
i < U S
i , i.e., formula (13) is true, 428
Pi chooses to stop: 429
(pM
0 + pM
0′1
+ 2 pM
0′2
+ 1− αi − αA
2αi
pM
0′2
− pS
0 − pS
0′)λK 430
− (1− pS
0 − pS
0′)ci < 0 (13) 431
And this can be divided into three cases. If αA ≥ αB + αi , 432
formula (13) can be derived as: 433
0× λK − ci < 0 (14) 434
Formula (14) is true anyway, and Pi chooses to stop. 435
If αB ≤ αA < αB + αi , formula (13) can be derived as: 436
wi = λK
ci
<
1
pM
0 + pM
0′1
+ 2 pM
0′2
+ 1−αi−αA
2αi
pM
0′2
= w∗i (15) 437
If αA < αB , formula (13) can be derived as: 438
wi = λK
ci
<
1− pS
0 − pS
0′
pM
0 + pM
0′1
+ 2 pM
0′2
+ 1−αi−αA
2αi
pM
0′2
− pS
0 − pS
0′
439
= w∗i 440
(16) 441
Obviously, in the latter two, when the actual profitability 442
factor wi is small (smaller than the critical profitability factor 443
w∗i ), Pi chooses to stop. 444
4) Adversary’s Revenue Increase Rate R∗A : The Markov 445
chains in Figure 6 are established from Pi ’s perspcetive 446
(αB depends on Pi ’s consideration). The Markov chain that 447
objectively describes the blockchain state is shown in Figure 7. 448
Where αm denotes the total mining power of honest miners 449
who choose to mine in fact, 0 ≤ αm ≤ 1− αA. 450
5) Fork Mining Power α′: We use α′ to denote the mining 451
power of mining on the honest miner’s block in state 0′. And 452
we denote the set of honest miners who choose to mine by P̃M , 453
P̃M = {PM1 , PM2 . . . , PMn }, where αM1+αM2 . . .+αMn = αm . 454
According to “Choice of branch” in section III, if the honest 455
miner block belongs to the honest miner PMi , PMi will choose 456
the branch containing it, and other honest miners have the 457
same probability to choose one of the branches, i.e., the mining 458
power on the honest miner block is αMi + 0.5(1− αA − αM ). 459
And this is based on the inability to accurately identify 460
the adversary’s branch. (Obviously, the adversary is easily 461
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
3342 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 17, 2022
Fig. 7. Objective Markov chain.
confused with honest miners in a decentralized and anonymous462
blockchain system.). Then the expected α′ is:463
α′ =
n∑
i=1
αMi
αm
× (αMi + 0.5(1− αm − αMi )) (17)464
6) Expected Active Mining Power α∗: In the states 0 and 0′,465
the total active mining power in the system is 1, and in other466
states, it is (αA + αm). Therefore, the expected active mining467
power α∗ is:468
α∗ = (p0 + p0′)+ (1− p0 − p0′)(αA + αm) (18)469
7) The Block Generation Rates rH and rA: When there is no470
attack, rH+rA = 1. But when the adversary launches an SDoS471
attack, some mining power will be wasted, i.e., some of the472
generated blocks are invalidated, which results in rH+rA < 1.473
The state probabilities of the Markov chain in Figure 7 can474
be calculated as (19):475 ⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
p0 = αA+αm
αA
p1
p0′ = αm p1⎧⎨⎩p1 = 1
αA+αm
αA
+1+αm+ αA
αm−αA
, αA < αm
p1→ 0, αA ≥ αm
p2 = αA
αm
p1
p3 = ( αA
αm
)2 p1
. . .
(19)476
According to the revenue events (see section IV-C) and the477
state probabilities, rH and rA can be calculated (αA < αm ):478
rH = p0(1− αA)+ p0′(1− αA − α′)+ 2 p0′α′
α∗
(20)479
rA =
p0′(1−αA−α′)+2 p0′αA+ (p1
2αA
αA+αm
+
p[i≥2] αA
αA+αm
)(αA + αm)
α∗
(21)480
The adversary’s occupation ratio of the valid blocks is rA
rH+rA
.481
But when αA ≥ αm , rH and rA are:482
rH = 0 (22)483
rA = αA
αA + αm
(23)484
All valid blocks belong to the adversary, and the mining power485
of honest miners is completely wasted.486
8) Adversary’s Revenue: Suppose that the adversary con- 487
ducts an SDoS attack continuously, and the difficulty factor 488
is adjusted every time S blocks are added to the blockchain. 489
In the nth mining cycle from the attack beginning, we use 490
λn, αn
m , αn∗ , rn
H and rn
A to denote the difficulty factor, the 491
mining power of the honest miners who choose to mine, the 492
expected active mining power, and the block generation rates 493
of the honest miner and the adversary, respectively. 494
In the nth mining cycle, the adversary’s expected revenue 495
per unit time is (αA < αm ): 496
Rn
A =
rn
A
rn
H + rn
A
(rn
H + rn
A)αn∗λn K = rn
Aαn∗λn K (24) 497
After the nth difficulty adjustment, the new difficulty factor 498
λn+1 is: 499
λn+1 = (rn−1
H + rn−1
A )αn−1∗
(rn
H + rn
A)αn∗
λn (25) 500
If n = 1 (Suppose that all miners mine honestly before the 501
attack.), λ2 is: 502
λ2 = 1
(r1
H + r1
A)α1∗
λ1 (26) 503
Then in the n + 1th mining cycle, the adversary’s expected 504
revenue per unit time is: 505
Rn+1
A = rn+1
A αn+1∗ λn+1 K (27) 506
When αA ≥ αm , i.e., rH = 0, honest miners can no longer 507
produce valid blocks. The adversary can even do a 51% attack. 508
In theory, the adversary’s revenue is now unlimited. So when 509
we analyze the stability problem and the adversary’s revenue 510
increase rate below, we only consider the case of αA < αm . 511
9) Stability: After each difficulty adjustment, the adver- 512
sary’s revenue per unit time may change. The reason is that 513
once the difficulty changes, the profitability factor wi changes 514
as well, which may lead to the change of αm . But this change 515
will also tend to be stable, and this stability can be summarized 516
into three cases: 517
I αn
m = αn+2
m = . . . = αn+2k
m , αn+1
m = αn+3
m = . . . = 518
αn+2k+1
m , αn
m 
= αn+1
m , where k ∈ N. Every time the 519
difficulty adjustment, αm varies between two different 520
values. 521
II αn
m = αn+1
m = . . . = αn+k
m < 1 − αA . αm remains 522
unchanged, and the system is truly stable. 523
III αn
m = αn+1
m = . . . = αn+k
m = 1−αA. The reason for this 524
case is that the profitability factor wi is so high, that all 525
honest miners choose to mine even if they are attacked. 526
The attack degenerates into a SM attack. 527
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: SDoS: SELFISH MINING-BASED DENIAL-OF-SERVICE ATTACK 3343
Fig. 8. Critical profitability factor w∗i .
In section V-A.11, we prove that different wi before the528
attack and the adversary’s mining power lead the system to529
different stability.530
10) Adversary’s Revenue Increase Rate R∗A: From the531
above three cases, when αm remains stable, there must be532
αn
m = αn+2
m . Therefore, the adversary’s revenue increase rate533
R∗A can be objectively expressed by the average value of it534
during two consecutive mining cycles after stabilization:535
R∗A =
Rn
A(rn+1
H + rn+1
A )αn+1∗ + Rn+1
A (rn
H + rn
A)αn∗
(rn
H + rn
A)αn∗ + (rn+1
H + rn+1
A )αn+1∗
1
αAλ1 K
536
(28)537
If αm stablizes in case i or ii, R∗A can also be expressed as:538
R∗A =
Rn
A
αAλ1 K
(29)539
11) Simulation : In sections V-A.1 and V-A.4, we introduce540
the theoretical calculation of the critical profitability factor541
w∗i and the adversary’s revenue increase rate R∗A , respectively.542
Based on these, we conduct simulation experiments and get543
some conclusions in this section. In addition, all experiments 544
in this paper are implemented on a PC (CPU: amd ryzen 7 545
4800U CPU @1.80 GHz, RAM: 16G, OS: Windows 10). 546
a) Critical profitability factor w∗i : A smaller w∗i means a 547
stronger willingness of honest miners to mine. Under different 548
αi , αA, and αB , w∗i and the ratio of w∗i in SDoS to w∗i in BDoS 549
are shown in Figure 8, from which we conclude: 550
Empirical Conclusion 5.1: w∗i does not change monoto- 551
nously with αB and αA . In Figure 8, we find that if αA < 552
0.5(1 − αi ), w∗i takes the minimum value when αB = αA; 553
if 0.5(1 − αi ) < αA < 0.5, the larger αB is, the smaller w∗i 554
is. But we also find that for the miners with very low mining 555
power (for example αi = 0.0035), the above rule no longer 556
exists. 557
Empirical Conclusion 5.2: Compared with BDoS, in SDoS 558
is always lower, i.e., w∗i in SDoS is always larger than w∗i in 559
BDoS. For example, in Figure 8(f), when αi = 0.2, the area 560
with the ratio of less than 1 only accounts for about 10% of 561
the total. And the smaller the αi , the lower this ratio. 562
b) Adversary’s revenue increase rate R∗A: When analyz- 563
ing the adversary’s revenue, it is necessary to consider the 564
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
3344 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 17, 2022
Fig. 9. Mining power distribution in real.
Fig. 10. The R∗A after one mining cycle.
distribution of honest miners’ mining power. At the time565
of writing this paper, the 18 mining pools in the Bitcoin566
system account for 99.98% of the total mining power [21],567
as shown in Figure 9. We take the mining power distrib-568
ution of these 18 mining pools as that of honest miners,569
i.e., α1∑18
i=1 αi
= 0.1637
0.9998 , α2∑18
i=1 αi
= 0.1559
0.9998 , . . . , α18∑18
i=1 αi
= 0.0039
0.9998 .570
For honest miners, αB greatly affects the critical profitability571
factor w∗i calculated, thereby affecting the decision-making.572
In this paper, we set αB for honest miners according to573
the following assumption: αB is selected so that Pi can574
calculate the minimum critical profit factor, which is the most575
unfavorable for the adversary (The worst αB assumption for576
the adversary).577
We denote by wo
i the profitability factor before the attack.578
Under different wo
i , perform a complete mining cycle SDoS579
attack (including a difficulty adjustment), the adversary’s580
revenue increase rate in the second mining cycle is shown581
in Figure 10. In Figure 10, each line does not extend to582
αA = 0.5. The reason is that when αA is close to 0.5, αA > αm583
happens in the first mining cycle (the adversary’s revenue is584
theoretically infinite).585
As we said in section V-A.4, different wo
i and αA lead586
the blockchain system to three different stabilities, and the587
simulation result is shown in Figure 11. Under different wo
i588
and αA, the adversary’s revenue increase rate R∗A is shown in589
Figure 12. And the ratio of R∗A in SDoS to R∗A in SM [6] is590
shown in Figure 13, where the black area indicates that the591
ratio is less than 1, i.e., R∗A in SDoS is lower. The gray area in592
Figures 12 and 13 indicates that αA > αm happens in SDoS;593
at this time, the adversary can launch a 51% attack, and R∗A594
is infinite. We can conclude:595
Empirical Conclusion 5.3: The larger αA, the higher R∗A.596
Mastering more mining power is still the priority for the597
adversary.598
Fig. 11. Three different stabilities of blockchain systems.
Fig. 12. Adversary’s revenue increase rate R∗A .
Fig. 13. The ratio of R∗A in SDoS and R∗A in SM.
Empirical Conclusion 5.4: If αA > 0.013, the larger wo
i , 599
the lower R∗A; otherwise, the situation is the opposite. α′ is 600
the reason for this phenomenon, and we discuss it in detail in 601
section VII. 602
Empirical Conclusion 5.5: Even under the worst αB 603
assumption, the adversary always gets higher revenue in SDoS 604
than in SM. First, even if αA < 0.5, the adversary has a chance 605
to launch a 51% attack. In SM, when αA < 0.25, R∗A is less 606
than 1, i.e., the adversary is losing money. But in SDoS, for 607
example, when wo
i = 1.62 (From October 2018 to April 2019, 608
the profitability factor wi in the Bitcoin system was close 609
to 1.5 [12].), R∗A is higher than 1 as long as αA > 0.196. 610
However, when αA < 0.032 and wo
i is within a certain range, 611
the R∗A in SDoS is lower than R∗A in BDoS, which is also 612
caused by α′. 613
Empirical Conclusion 5.6: In theory, when wo
i → 1, even 614
if αA is small, αA > αM can happen, which is fatal to the 615
blockchain system. 616
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: SDoS: SELFISH MINING-BASED DENIAL-OF-SERVICE ATTACK 3345
B. Current Utility617
Based on the current utility means that the honest miner618
Pi only considers the utility of current mining , i.e., the619
honest miners only consider whether they can benefit from620
the currently mined block. We prove that for Pi , there is an621
optimal mining time tmax
i . After the adversary publishes the622
block header, Pi stops mining after tmax
i (no complete block623
is published during tmax
i ).624
We consider the mining as a Bernoulli experiment. The625
probability of honest miner Pi with a mining power αi to626
find a block in a second is λαi . Then the probability that Pi627
finds no block within t0 seconds is (1− λαi )
t0 .628
1) Optimal Mining Time tmax
i : Whether the public chain629
forks affects the honest miner’s action.630
a) Not fork: Honest miner Pi is mining on the block N .631
Suppose that after the adversary publishes the header of block632
N + 1A, Pi has mined for t seconds, and others have not633
published block N+1. If Pi continues to mine, the probability634
that Pi finds block N + 1i in next second is Q1 = λαi . The635
probability that the adversary does not find the block N + 2A636
in t + 1 second is Q2(t) = (1 − λαA)t+1. If Pi finds block637
N + 1i and the blockchian forks here, the excepted mining638
power of mining on block N + 1i is αk = αi+0.5(1−αi−αA),639
i.e., the probability that block N + 1i be valid is Q3 = αk .640
The expected revenue of mining in the next second for Pi can641
be calculated:642
Ri (t) = Q1 Q2(t)Q3 K (30)643
And the expected utility of Pi is:644
Ui (t) = (1− λαA)t+1αkλK − ci (31)645
Obviously, Ui (t) > 0, i.e., when formula (32) holds,646
Pi chooses to mine:647
t < log(1−λαA)
1
wiαk
= ft (αi , αA) (32)648
ft can be regarded as a function whose input is αi and αA.649
Then the optimal mining time tmax
i is:650
tmax
i =
{
0 , ft (αi , αA) < 0
ft (αi , αA) , ft (αi , αA) ≥ 0
(33)651
where ft < 0 can be derived as:652
wi <
1
αk
= w∗i (34)653
The critical profitability factor w∗i now is 1
αk
. When654
wi ≤ w∗i , there is tmax
i = 0, i.e., Pi stops mining immediately.655
b) Public chain forks: If the blockchain forks and there656
is a published block header from the adversary in the system,657
the honest miner Pi can be sure that the blockchain is not658
in state 1, i.e., the adversary’s lead is at least 2. Now Q3 in659
equation (30) is 0 (the adversary has already found N + 2A),660
even if Pi mines the block, he will get no reward (the661
block will be invalidated), i.e., Ri = 0. Therefore, Pi will662
immediately choose to stop mining, tmax
i = 0.663
2) Simulation: Based on the theoretical calculation methods664
of tmax
i and w∗i in section V-B.1, we conduct simulation665
experiments and get some conclusions.666
Fig. 14. Critical profitability factor w∗i .
a) Optimal mining time tmax
i : We start with the case 667
where the blockchain does not fork and tmax
i = 0. At this 668
point, wi < w∗i , facing the block header from the adversary, 669
Pi chooses to stop immediately. The simulation results are 670
shown in Figure 14, from which we can conclude: 671
Empirical Conclusion 5.7: w∗i is positively correlated 672
with αA , negatively correlated with αi . 673
When wi > w∗i , Pi chooses to mine for tmax
i time. tmax
i 674
under different inputs is shown in Figure 15, from which we 675
can conclude: 676
Empirical Conclusion 5.8: tmax
i is positively correlated 677
with αi , wi , negatively with αA . λ is also an influencing factor. 678
Fixing wi , the smaller λ, the larger tmax
i . 679
b) The profitability of all honest miners surrendering: If 680
no miners finds the block in tmax
i or the adversary expands 681
the lead to 2, the adversary will be the only one still mining 682
in the system. Based on the distribution of mining power in 683
section V-A.11, we evaluate the probability of this situation, 684
as shown in Figure 16. Note that this is the probability that all 685
surrender after the adversary publishes a block header for one 686
time. It is even worse when the adversary keeps attacking. But 687
the premise is that all honest miners make decisions based on 688
the current utility. This is almost impossible (see section VII), 689
and the main purpose of section V-B is to put forward this 690
possibility. 691
VI. SIMULATED ATTACK EXPERIMENT 692
We set up 18 honest miners based on the mining power 693
distribution introduced in section V-A.11. We set TE = 600s, 694
S = 2016 (same as Bitcoin) and the initial difficulty coefficient 695
λ = 1/600s−1. And we set different K for different wo
i . 696
In addition, we introduce a Bitcoin rule: limit the range of 697
one difficulty adjustment [22], i.e., 1
4 ≤ λn+1
λn ≤ 4. 698
The simulated attack experiment method is shown in Algo- 699
rithm 2. When the adversary leads, the honest miners will 700
consider whether to mine according to wi , as shown in 701
lines 5-11. If the adversary’s mining power exceeds the sum 702
of the mining power of honest miners who choose to mine, the 703
adversary can launch 51% attacks, and the blockchain system 704
will die, as shown in lines 12-13. Each round has a probability 705
of λαnow to produce a winner, that is, a new block is generated 706
(the owner of the new block is determined by the mining power 707
distribution), as shown in lines 14-15. The difficulty is adjusted 708
once every 2016 new blocks are generated, and the experiment 709
ends after 200 mining cycles, as shown in lines 19-27. 710
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
3346 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 17, 2022
Fig. 15. Optimal mining time tmax
i .
Fig. 16. The profitability of all honest miners surrendering.
Fig. 17. The fluctuation of R∗A during mining cycles.
In fact, mining is a random event with no absolute stability,711
as shown in Figure 17 (set wo
i = 2.5, αA = 0.3). In addition,712
in Figure 17, R∗A fluctuates wildly during the first few mining713
cycles and then stabilizes.714
We simulate that honest miners make decisions based on715
the overall utility, and the adversary conducts SDoS attack for716
Fig. 18. Honest miners’ revenue increase rate R∗A .
200 mining cycles. Under different αA and wo
i , the experi- 717
mental results (R∗A) are shown in Figure 18. The gray area in 718
Figure 18 represents the terrible situation of αA > αM . The 719
experimental results in Figure 18 accord with that in Figure 12. 720
In addition, when we simulate that all honest miners make 721
decisions based on the current utility, although the adversary’s 722
mining power is low (aA = 0.01), after a period of attack, all 723
the miners choose to stop, i.e., am = 0. Based on the above 724
results of the simulated attack experiment, we can conclude: 725
Empirical Conclusion 6.1: It is more beneficial for the 726
adversary if honest miners make decisions based on the current 727
utility. If a majority of honest miners make decisions based on 728
the current utility, the adversary can easily rule the blockchain. 729
VII. DISCUSSION 730
A. The Influence of α′ 731
In almost all mining attacks, the proportion of the adver- 732
sary’s mining power is positively correlated with the revenue 733
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: SDoS: SELFISH MINING-BASED DENIAL-OF-SERVICE ATTACK 3347
Algorithm 2 Simulated Attack Experiment Method
1: T ime← 0, λ← 1/600
2: PrivateBlockchain, PublicBlockchain← []
3: while 1 do
4: TIME++
5: if Alead � 1 then
6: αnow ← αA
7: for each honest miner Pi do
8: if wi > w∗i then
9: αnow ← αnow + αi
10: end if
11: end for
12: else
13: αnow ← 1
14: end if
15: if αnow < 2αA then
16: system.dead()
17: end if
18: if Rand() < λαnow then
19: Winner ← FindWinner()
20: if Winner is a honest miner then
21: PublicBlockchain ← PublicBlockchain +
Winner.NewBlock
22: end if
23: AttackStrategy() // The adversary executes the attack
strategy in algorithm 1
24: if PublicBlockchain.length%2016 = 0 and
PublicBlockChain! = [] then
25: x ← T I M E
600×2016
26: if x < 1 then
27: λ← λ× max(0.25, x)
28: else
29: λ← λ× min(4, x)
30: end if
31: T I M E ← 0
32: end if
33: if PublicBlockchain.length = 2016× 200 then
34: return
35: end if
36: end if
37: end while
increase rate. We denote by A the expected proportion. In SM,734
AS M = αA . In SDoS, when the adversary’s lead is greater735
than 0, some honest miners may stop mining, and the propor-736
tion is higher than αA; in the remaining time, the proportion737
is αA . So AS DoS = αA(1− p[i≥1])+ αA
αA+αm
p[i≥1], obviously,738
AS DoS ≥ αA = AS M . In addition, lower wi means lower αm739
and higher p[i≥1], i.e., higher AS DoS. It is natural to think740
that, first, the smaller wi , the higher R∗A; second, R∗A in SDoS741
should never be lower than that in SM (same mining power742
distribution). But in section V-A.11, unexpected situations743
happen in these two areas, due to α′.744
In SM, according to the “Choice of branch” in section III,745
the expected α′S M is:746
α′S M �
n∑
i=1
αi (αi + 0.5(1− αA − αi )) (35)747
In SDoS, the competing block in state 0′ must have been 748
found by the honest miners who choose to mine, so α′ is 749
calculated as formula (17). And honest miners with lower 750
mining power are more likely to choose to stop. So when 751
αM < 1−αA (some choose to stop), there must be α′ > α′S M . 752
Then the smaller wi , the larger α′, the lower the adversary’s 753
expected revenue in the state 0′. Therefore, the above two 754
situations will happen. And when αA is greater than 0.032 755
(based on the mining power distribution in section V-A.11, 756
since p[i≥1] is large and p0′ is small, the influence of α′ is 757
diluted. 758
However, if we use rushing ability γ to define α′ same as 759
[6], [12], i.e., α′ = γ (1−αA), the above unexpected situations 760
will not happen. Because α′ at this time is not affected by 761
the distribution of mining power. In fact, using the rushing 762
ability is unfair. [12] believes that when γ = 0.5, it is fair 763
between the adversary and honest miners. However, according 764
to formula (17), unless all honest miners have equal mining 765
power, there must be α′ > 0.5(1− αA). And equation (17) is 766
based on the “Choice of branch” in section III, obviously, it is 767
more realistic and objective. 768
B. The Game Between Honest Miners 769
Same as SM [6], SbM [9], and BDoS [12], honest miners 770
cannot prevent the occurrence of SDoS. As a result, these 771
attacks can ultimately be simplified to a game between honest 772
miners’ mining power and the adversary’s. But in SDoS, things 773
are different. When honest miners make decisions based on 774
the overall utility, αB is a very important factor. The choices 775
of other honest miners affect “mine”, i.e., there is a game 776
between honest miners. And different from BDoS (where w∗i 777
is negatively correlated with αB), in SDoS, as αB increases, 778
w∗i decreases and then increases, reaches the minimum when 779
αB = αA . In this paper, the setting of αB is the most 780
unfavorable for the adversary. In reality, the situation will be 781
worse and more complicated. 782
C. Practical wi 783
The survey by Mirkin et al. [12] shows that during 784
2018 and 2019, the wi of different mining equipment fluctu- 785
ated between 1 and 10 (assuming the same price of electricity). 786
Obviously, it is possible to launch an SDoS attack. 787
But in fact, it is difficult to accurately estimate wi in reality. 788
Both the capital expenditure (such as purchasing a mining 789
machines) and the operating expense (i.e. the mining cost ci in 790
this paper) should be taken in account. And different miners 791
have different operating expenses at different times (for the 792
price of electricity at different places and times). But this is 793
not the focus of this paper, and interested readers can refer to 794
[12], [23], [24]. 795
D. Current Utility is the Choice of the Minority 796
Making decisions based on current utility can cause great 797
harm. But we believe that is the choice of the minority. First, 798
since the miners who master a lot of mining power have 799
invested a lot of capital expense, they must consider the game 800
from a longer-term perspective. Second, if the blockchain sys- 801
tem is severely attacked or threatened, the cryptocurrency will 802
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
3348 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 17, 2022
depreciate sharply. Miners with high mining power generally803
also hold a considerable amount of cryptocurrency. So they804
will not choose the current utility, which puts the system at805
serious risk.806
E. Mitigation807
The uncle block mechanism can mitigate the threat of SDoS808
attacks. In addition, the zeroblock scheme [25] and freshness809
preferred (FP) [26] can also effectively defend against SDoS810
attacks. However, all the above methods require to modify811
the blockchain protocol, which is difficult and risky for the812
established blockchain system. Currently, stable large-scale813
mining pools are the most important mining force. It seems814
to be a feasible approach to establish a spontaneous and815
decentralized reward and punishment mechanism based on816
cryptography and game theory. It is similar to the study of817
norm emergence [27], which is our focus in the future.818
VIII. CONCLUSION819
In this paper, we propose a novel mining attack SDoS,820
and prove that Selfish mining is incentive-compatible with821
the game-level DoS attack through theoretical analysis and822
experimental simulation. In SDoS, honest miners are less823
willing to mine in most cases (compared with BDoS [12]),824
and the adversary’s revenue is higher (compared with SM [6]).825
And we propose that honest miners may make decisions based826
on two different utilities. The simulation results in Section VI827
show that the system is very fragile when honest miners make828
decisions based on current utility.829
The success of SDoS attack essentially comes from two830
points: one is the adversary’s special mining strategy, and the831
other is the mining game of honest miners. The reality is far832
more complicated and disturbing than what we discuss in this833
paper. The game between honest miners, how the adversary834
adjusts his “selfishness” during the game to maximize revenue,835
and how the attack will evolve when honest miners can choose836
among multiple cryptocurrencies, are all worthy of our further837
study. In addition, another research interest is introducing838
machine learning-based information stealing attacks [28] into839
the attacks on the blockchain, which we believe will greatly840
enhance the attacks’ deterrence and benefits.841
REFERENCES842
[1] Ghash.io: We Will Never Launch a 51% Attack Against843
Bitcoin. Accessed: Jul. 17, 2021. [Online]. Available:844
https://www.coindesk.com/ghash-io-never-launch-51-attack845
[2] J. Bonneau, “Why buy when you can rent?” in Financial Cryptography846
and Data Security. Berlin, Germany: Springer, 2016, pp. 19–26.847
[3] J. Bonneau, “Hostile blockchain takeovers (short paper),” in Financial848
Cryptography and Data Security. Berlin, Germany: Springer, 2018, pp.849
92–100.850
[4] P. McCorry, A. Hicks, and S. Meiklejohn, “Smart contracts for bribing851
miners,” in Financial Cryptography and Data Security. Berlin, Germany:852
Springer, 2018, pp. 3–18.853
[5] Small Ethereum Clones Getting Attacked by Mysterious854
‘51 Crew’. Accessed: Jul. 17, 2021. [Online]. Available:855
https://news.bitcoin.com/ethereum-clones-susceptible-51-attacks/856
[6] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining857
is vulnerable,” in Financial Cryptography and Data Security. Christ858
Church, Barbados: Springer, 2014, pp. 436–454.859
[7] M. Rosenfeld, “Analysis of bitcoin pooled mining reward systems,”860
2011, arXiv:1112.4980.861
[8] L. Luu, R. Saha, I. Parameshwaran, P. Saxena, and A. Hobor, “On power 862
splitting games in distributed computation: The case of bitcoin pooled 863
mining,” in Proc. IEEE 28th Comput. Secur. Found. Symp., Jul. 2015, 864
pp. 397–411. 865
[9] K. Nayak, S. Kumar, A. Miller, and E. Shi, “Stubborn mining: Gener- 866
alizing selfish mining and combining with an eclipse attack,” in Proc. 867
IEEE Eur. Symp. Secur. Privacy (EuroSP), Mar. 2016, pp. 305–320. 868
[10] Y. Kwon, D. Kim, Y. Son, E. Vasserman, and Y. Kim, “Be selfish 869
and avoid dilemmas: Fork after withholding (FAW) attacks on bitcoin,” 870
in Proc. ACM SIGSAC Conf. Comput. Commun. Secur., Oct. 2017, 871
pp. 195–209. 872
[11] S. Gao, Z. Li, Z. Peng, and B. Xiao, “Power adjusting and bribery racing: 873
Novel mining attacks in the bitcoin system,” in Proc. ACM SIGSAC 874
Conf. Comput. Commun. Secur., Nov. 2019, pp. 833–850. 875
[12] M. Mirkin, Y. Ji, J. Pang, A. Klages-Mundt, I. Eyal, and A. Juels, 876
“BDoS: Blockchain denial-of-service,” in Proc. ACM SIGSAC Conf. 877
Comput. Commun. Secur. (CCS), 2020, pp. 601–619. 878
[13] E. Heilman, A. Kendler, A. Zohar, and S. Goldberg, “Eclipse attacks 879
on bitcoin’s peer-to-peer network,” in Proc. 24th USENIX Conf. Secur. 880
Symp. (SEC), 2015, pp. 129–144. 881
[14] Q. Bai, X. Zhou, X. Wang, Y. Xu, X. Wang, and Q. Kong, “A deep 882
dive into blockchain selfish mining,” in Proc. IEEE Int. Conf. Commun. 883
(ICC), May 2019, pp. 1–6. 884
[15] A. Kiayias, E. Koutsoupias, M. Kyropoulou, and Y. Tselekounis, 885
“Blockchain mining games,” in Proc. ACM Conf. Econ. Comput., 886
Jul. 2016, pp. 365–382. 887
[16] G. Goren and A. Spiegelman, “Mind the mining,” in Proc. ACM Conf. 888
Econ. Comput., Jun. 2019, pp. 475–487. 889
[17] A. Sapirshtein, Y. Sompolinsky, and A. Zohar, “Optimal selfish mining 890
strategies in Bitcoin,” in Financial Cryptography and Data Security. 891
Berlin, Germany: Springer, 2016, pp. 515–532. 892
[18] W. Wang et al., “A survey on consensus mechanisms and mining 893
strategy management in blockchain networks,” IEEE Access, vol. 7, 894
pp. 22328–22370, 2019. 895
[19] Z. Xiong, Y. Zhang, D. Niyato, P. Wang, and Z. Han, “When mobile 896
blockchain meets edge computing,” IEEE Commun. Mag., vol. 56, no. 8, 897
pp. 33–39, Aug. 2018. 898
[20] C. S. Wright, “Bitcoin: A peer-to-peer electronic cash system,” 899
Aug. 2008. 900
[21] Bitcoin Real-Time Data. Accessed: May 13, 2021. [Online]. Available: 901
https://btc.bitaps.com/ 902
[22] X. Zhang, R. Qin, Y. Yuan, and F.-Y. Wang, “An analysis of blockchain- 903
based bitcoin mining difficulty: Techniques and principles,” in Proc. 904
Chin. Autom. Congr. (CAC), 2018, pp. 1184–1189. 905
[23] A. S. Hayes, “Cryptocurrency value formation: An empirical study 906
leading to a cost of production model for valuing bitcoin,” Telematics 907
Inform., vol. 34, pp. 1308–1321, Nov. 2017. 908
[24] H. Nourali and M. Osanloo, “Mining capital cost estimation using 909
support vector regression (SVR),” Resour. Policy, vol. 62, pp. 527–540, 910
Aug. 2019. 911
[25] S. Solat and M. Potop-Butucaru, “ZeroBlock: Timestamp-free preven- 912
tion of block-withholding attack in bitcoin,” 2016, arXiv:1605.02435. 913
[26] E. Heilman, “One weird trick to stop selfish miners: Fresh Bitcoins, 914
a solution for the honest miner,” in Financial Cryptography and Data 915
Security. Berlin, Germany: Springer, 2014, pp. 161–162. 916
[27] S. Mahmoud, N. Griffiths, J. Keppens, and M. Luck, “Establishing norms 917
with metanorms over interaction topologies,” Auto. Agents Multi-Agent 918
Syst., vol. 31, no. 6, pp. 1344–1376, Nov. 2017. 919
[28] Y. Miao, C. Chen, L. Pan, Q.-L. Han, J. Zhang, and Y. Xiang, “Machine 920
learning–based cyber attacks targeting on controlled information: A 921
survey,” ACM Comput. Surv., vol. 54, no. 7, pp. 1–36, Sep. 2022. 922
Qiuhua Wang received the B.S. and M.S. degrees 923
in communication engineering from Liaoning Tech- 924
nical University, Fuxin, China, in 2000 and 925
2003, respectively, and the Ph.D. degree in 926
communications and information systems from Zhe- 927
jiang University, Hangzhou, China, in 2013. She is 928
currently an Associate Professor with the School 929
of Cyberspace, Hangzhou Dianzi University. Her 930
current research interests include network security, 931
security issues in wireless networks, key manage- 932
ment, and physical layer security. 933
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
WANG et al.: SDoS: SELFISH MINING-BASED DENIAL-OF-SERVICE ATTACK 3349
Tianyu Xia received the B.S. degree in infor-934
mation security from Hangzhou Dianzi University,935
Hangzhou, China, in 2019, and the M.S. degree936
from the School of Cyberspace, Hangzhou Dianzi937
University, in 2022. He is currently working at the938
National Secrecy Science and Technology Evalua-939
tion Center, Beijing, China. His research interests940
include blockchain technology, privacy preserving,941
and confidential technology.942
Dong Wang received the Ph.D. degree in com-943
munication and information system from Wuhan944
University. She is currently a Lecturer with the945
School of Cyberspace, Hangzhou Dianzi University.946
Her research interests include data privacy and dif-947
ferential privacy, and machine learning of big data.948
Yizhi Ren received the Ph.D. degree in computer949
software and theory from the Dalian University of950
Technology, China, in 2011. From 2008 to 2010,951
he was a Research Fellow at Kyushu University,952
Japan. He is currently a Full Professor with the953
School of Cyberspace, Hangzhou Dianzi University,954
China. His research interests include data security,955
privacy preserving, and trust management. He has956
published over 70 research papers in refereed jour-957
nals and conference proceedings. He served as the958
Local Chair/a PC Member of more than 20 interna-959
tional conferences, such as, ICCCN 2018, ICC 2018, and DSC 2019. He won960
IEEE Trustcom 2018 Best Paper Award, CSS 2009 Student Paper Award, and961
AINA 2011 Best Student Paper Award.962
Gongxun Miao received the B.S. degree in com- 963
puter science and technology from the Shandong 964
Institute of Management in 2012 and the M.S. 965
degree from the Shandong University for Science 966
and Technology in 2018. He is currently a member 967
of the Standardization Technical Committee Infor- 968
mation in Shandong Province and the Deputy Chief 969
Engineer of Zhongfu Information Company Ltd. 970
He is mainly engaged in information security in the 971
field of technical research and development work. 972
Kim-Kwang Raymond Choo (Senior Member, 973
IEEE) received the Ph.D. degree in information 974
security from the Queensland University of Tech- 975
nology, Australia, in 2006. He currently holds the 976
Cloud Technology Endowed Professorship at The 977
University of Texas at San Antonio. He was a 978
recipient of the IEEE Systems, Man, and Cyber- 979
netics Technical Committee on Homeland Security 980
Research and Innovation Award in 2022 and the 981
2019 IEEE Technical Committee on Scalable Com- 982
puting Award for Excellence in Scalable Computing 983
(Middle Career Researcher), and paper awards from the IEEE SYSTEMS 984
JOURNAL in 2021, the IEEE Computer Society’s Bio-Inspired Computing 985
Special Technical Committee Outstanding Paper Award in 2021, the IEEE 986
DSC 2021, the IEEE Consumer Electronics Magazine in 2020, the Journal 987
of Network and Computer Applications in 2020, the EURASIP Journal on 988
Wireless Communications and Networking in 2019, the IEEE TrustCom 2018, 989
and the ESORICS 2015. He is the Founding Co-Editor-in-Chief of the ACM 990
Distributed Ledger Technologies: Research & Practice, the Founding Chair of 991
the IEEE TEMS Technical Committee on Blockchain and Distributed Ledger 992
Technologies, an ACM Distinguished Speaker and IEEE Computer Society 993
Distinguished Visitor (2021–2023), and a Web of Science’s Highly Cited 994
Researcher (Computer Science-2021 and Cross-Field-2020). 995
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:24:31 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Black & White)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Tags
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 524288
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments true
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /AdobeArabic-Bold
    /AdobeArabic-BoldItalic
    /AdobeArabic-Italic
    /AdobeArabic-Regular
    /AdobeHebrew-Bold
    /AdobeHebrew-BoldItalic
    /AdobeHebrew-Italic
    /AdobeHebrew-Regular
    /AdobeHeitiStd-Regular
    /AdobeMingStd-Light
    /AdobeMyungjoStd-Medium
    /AdobePiStd
    /AdobeSansMM
    /AdobeSerifMM
    /AdobeSongStd-Light
    /AdobeThai-Bold
    /AdobeThai-BoldItalic
    /AdobeThai-Italic
    /AdobeThai-Regular
    /ArborText
    /Arial-Black
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /BellGothicStd-Black
    /BellGothicStd-Bold
    /BellGothicStd-Light
    /ComicSansMS
    /ComicSansMS-Bold
    /Courier
    /Courier-Bold
    /Courier-BoldOblique
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /Courier-Oblique
    /CourierStd
    /CourierStd-Bold
    /CourierStd-BoldOblique
    /CourierStd-Oblique
    /EstrangeloEdessa
    /EuroSig
    /FranklinGothic-Medium
    /FranklinGothic-MediumItalic
    /Gautami
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Helvetica
    /Helvetica-Bold
    /Helvetica-BoldOblique
    /Helvetica-Oblique
    /Impact
    /KozGoPr6N-Medium
    /KozGoProVI-Medium
    /KozMinPr6N-Regular
    /KozMinProVI-Regular
    /Latha
    /LetterGothicStd
    /LetterGothicStd-Bold
    /LetterGothicStd-BoldSlanted
    /LetterGothicStd-Slanted
    /LucidaConsole
    /LucidaSans-Typewriter
    /LucidaSans-TypewriterBold
    /LucidaSansUnicode
    /Mangal-Regular
    /MicrosoftSansSerif
    /MinionPro-Bold
    /MinionPro-BoldIt
    /MinionPro-It
    /MinionPro-Regular
    /MinionPro-Semibold
    /MinionPro-SemiboldIt
    /MVBoli
    /MyriadPro-Black
    /MyriadPro-BlackIt
    /MyriadPro-Bold
    /MyriadPro-BoldIt
    /MyriadPro-It
    /MyriadPro-Light
    /MyriadPro-LightIt
    /MyriadPro-Regular
    /MyriadPro-Semibold
    /MyriadPro-SemiboldIt
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Raavi
    /Shruti
    /Sylfaen
    /Symbol
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /Times-Bold
    /Times-BoldItalic
    /Times-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Tunga-Regular
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /Webdings
    /Wingdings-Regular
    /ZapfDingbats
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 600
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 600
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 300
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 900
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.33333
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /Unknown
  /CreateJDFFile false
  /Description <<
    /ENU ()
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice