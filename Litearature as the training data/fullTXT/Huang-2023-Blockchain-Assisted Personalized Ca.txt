Blockchain-Assisted Personalized Car Insurance With Privacy Preservation and Fraud Resistance
IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 72, NO. 3, MARCH 2023 3777
Blockchain-Assisted Personalized Car Insurance
With Privacy Preservation and Fraud Resistance
Cheng Huang , Member, IEEE, Wei Wang , Member, IEEE, Dongxiao Liu , Member, IEEE,
Rongxing Lu , Fellow, IEEE, and Xuemin Shen , Fellow, IEEE
Abstract—It is well known that auto insurance companies (ICs)
use personalized car insurance (PCI) to continuously track drivers’
behavior to determine their auto premiums. However, drivers
inevitably have concerns about the transparency of data collec-
tion/processing and the potential privacy leakage. In this paper,
we propose a new PCI scheme to achieve privacy preservation
and transparency with the assistance of a consortium blockchain.
Specifically, a blockchain is first established by a group of con-
sortium members, and each IC can deploy insurance contracts
on the blockchain to support public verification of data collec-
tion/processing and thus fulfill the transparency requirement. Then
a verifiable and privacy-preserving driving behavior evaluation
protocol is designed by tailoring partially homomorphic encryp-
tion and zero-knowledge proof techniques. Drivers can use the
protocol to interact with ICs through the contracts, and ICs can
learn drivers’ behavior and set corresponding auto premiums by
analyzing encrypted driving data. Furthermore, a third-party au-
ditor (TPA) is authorized by drivers and ICs to audit encrypted
driving data on the contracts and resist fraud attacks. We model the
contract-based auditing as a recursive inspection game where TPA
can minimize the number of audits to detect data fraud and penalize
malicious drivers according to Nash equilibrium. Therefore, the
proposed PCI scheme can guarantee that most of the collected
driving data are not biased. Formal simulation-based security
analysis is given to prove the security of the proposed scheme, and
a proof-of-concept prototype is also developed on an open-source
blockchain to demonstrate the feasibility.
Index Terms—Blockchain, data auditing, fraud resistance,
personalized car insurance, privacy preservation.
I. INTRODUCTION
P ERSONALIZED Car Insurance (PCI, a.k.a. usage-based
insurance and pay-as-you-go insurance) has been widely
Manuscript received 25 March 2022; revised 12 June 2022; accepted 20
September 2022. Date of publication 19 October 2022; date of current version
14 March 2023. This work was supported in part by the National Natural
Science Foundation of China under Grant 62001220, in part by the Natural
Science Foundation of Jiangsu Province under Grant BK20200440, in part by
the Research Grants from Huawei Technologies Canada, and in part by the
Natural Sciences and Engineering Research Council of Canada. The review of
this article was coordinated by Prof. Liehuang Zhu. (Corresponding author:
Cheng Huang.)
Cheng Huang, Dongxiao Liu, and Xuemin Shen are with the Depart-
ment of Electrical and Computer Engineering, University of Waterloo, Wa-
terloo, ON N2L 3G1, Canada (e-mail: c225huan@uwaterloo.ca; dongx-
iao.liu@uwaterloo.ca; sshen@uwaterloo.ca).
Wei Wang is with the College of Electronic and Information Engineering,
Nanjing University of Aeronautics and Astronautics, Nanjing 210016, China
(e-mail: wei_wang@nuaa.edu.cn).
Rongxing Lu is with the Faculty of Computer Science, University of New
Brunswick, Fredericton, NB E3B 5A3, Canada (e-mail: rlu1@unb.ca).
Digital Object Identifier 10.1109/TVT.2022.3215811
adopted by many auto insurance companies (ICs) in recent
years, as a more flexible auto insurance scheme compared with
traditional schemes [1]. By continuously tracking the driving
data of drivers such as daily trajectories, ICs can analyze their
behavior based on particular driving safety evaluation models,
and adaptively adjust their auto premiums based on the evalua-
tion results. With the rapid advancement in mobile sensing tech-
nologies, PCI can be easily and conveniently deployed. Drivers
only need to install and run applications published by ICs on
their smartphones, and the applications can automatically collect
and upload telematics data in the background. Apparently, PCI
brings mutual advantages to both drivers and ICs, since it not
only motivates drivers to drive safely with less insurance fee,
but also helps companies reduce accident claim costs.
In spite of the aforementioned advantages, PCI still faces
several barriers, and one of which is the lack of transparency,
i.e., the rules of PCI are opaque and how drivers’ auto premiums
are calculated based on their behavior is unknown. According to
a recent report, some PCI schemes used by ICs are not fair and
may penalize people who are a group disproportionately made
up of low-income people driving to or from a late shift [2]. To
achieve the transparency requirement, consortium blockchain
has been introduced into vehicular applications such as PCI
[3], [4], [5]. The blockchain-assisted PCI is a more robust PCI
scheme, as a group of ICs can offer decentralized trusts for
drivers, compared with conventional centralized schemes. Based
on the decentralization, two extensive properties, immutability
and transparency, are guaranteed such that drivers’ behavior and
their auto premiums can be evaluated unbiasedly and also be
verifiable with the assistance of smart contracts deployed in the
blockchain. Moreover, the blockchain-assisted PCI is believed to
be a promising scheme for sharing driving records and behavior,
which is easier for drivers to switch ICs [6].
However, it becomes very challenging for not only drivers but
also ICs to achieve privacy preservation in such a blockchain-
assisted scheme, to meet the requirements of privacy regu-
lations such as GDPR [7]. In light of the characteristics of
the blockchain, drivers’ sensitive driving data are stored and
analyzed distributedly, making it hard for drivers to manage
and protect their data. From another perspective, the private
and valuable parameters of the driving safety evaluation models
trained by different ICs must be exposed for distributed model
evaluation, which also violates model privacy [8]. Aiming at
these points, a straightforward method is to apply homomorphic
encryption [9]: driving data and model parameters are encrypted
0018-9545 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See https://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0003-3769-7211
https://orcid.org/0000-0002-6104-7908
https://orcid.org/0000-0003-2595-6757
https://orcid.org/0000-0001-5720-0941
https://orcid.org/0000-0002-4140-287X
mailto:c225huan@uwaterloo.ca
mailto:dongxiao.liu@uwaterloo.ca
mailto:dongxiao.liu@uwaterloo.ca
mailto:sshen@uwaterloo.ca
mailto:wei_wang@nuaa.edu.cn
mailto:rlu1@unb.ca
3778 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 72, NO. 3, MARCH 2023
using a shared public key generated by a group of consortium
companies, and driving behavior can be analyzed in ciphertext
to determine personalized auto premiums. Yet, the approach
has two drawbacks: 1) ICs must work together to decrypt final
evaluation results, which costs additional computational and
communication resources; and 2) the model parameters can still
be extracted under the model extraction attacks with the inputs of
the evaluation results, which cannot guarantee the model privacy
[10].
To address the issues, we propose a new verifiable and privacy-
preserving driving behavior evaluation protocol between a driver
and an insurance company. The protocol is designed based on
Paillier cryptosystem [11], which allows both a driver and an
insurance company to cooperatively evaluate the driver’s behav-
ior atop a carefully-designed insurance contract deployed in the
blockchain. The evaluation results only reveal whether the driver
has a safe trip or not, since the encrypted evaluation results are
randomized by both sides before disclosing them. Furthermore,
to ensure the correctness and verifiability of auto premiums
received by drivers, we design several efficient zero-knowledge
proof protocols, and seamlessly integrate them into the proposed
protocol to resist malicious adversaries that aim to bias the
evaluation results.
It is noted that the encryption of driving data also raises
another security challenge, i.e., how to detect intentioned data
fraud in ciphertext [12]. To audit the cheats in the encrypted
driving data, ICs can authorize a trusted third-party auditor such
as government to decrypt the encrypted data and conduct a
detection algorithm on every driving record. Nevertheless, the
involvement of a trusted party increases the risk of unintentional
privacy exposure and also becomes a bottleneck. To achieve
fraud resistance while minimizing the participation of the trusted
party, we propose a contract-based auditing method where the
auditing process is modeled as a recursive inspection game
between ICs and drivers on top of smart contracts. In the game,
ICs set an auditing strategy based on probability and audit part
of the data uploaded by drivers. Malicious drivers can also
set their cheating strategies based on probability and upload
fabricated driving data accordingly. With the Nash equilibrium,
the parameters of an optimal auditing strategy can be calculated
from the perspective of ICs, which can maximize the chance
of detecting the cheating behavior of malicious drivers with
minimized auditing attempts. In this way, a rationally malicious
driver will not upload fabricated driving data since there is
no benefit. Our method can significantly reduce the number
of audits performed by the auditor to minimize the risk of
privacy leakage, as a Nash equilibrium can always be found.
For example, for a total number of 300 uploaded trips, although
the auditor is only allowed to audit at most 3 trips (auditing 1%
of all reported driving data), the possibility that a driver never
cheats is 97%.
In summary, we propose a blockchain-assisted PCI scheme
that simultaneously achieves privacy preservation and fraud
resistance under a rationally malicious model, and the main
contributions are four-folds:
� We propose a consortium-blockchain-assisted PCI scheme
that achieves transparent driving behavior evaluation and
Fig. 1. System model under consideration.
auto premium calculations on the top of a well-designed
smart contract of car insurance.
� We propose a verifiable and privacy-preserving driving
behavior evaluation protocol, which allows ICs to correctly
analyze drivers’ behavior without leaking either drivers’
sensitive data or companies’ model parameters.
� We propose a contract-based auditing method that signifi-
cantly reduces the number of audits needed to achieve fraud
resistance and minimize the risk of privacy leakage due to
auditing.
� We formally analyze the security of the proposed scheme
based on a simulation-based approach and develop a proof-
of-concept prototype to demonstrate the feasibility of our
scheme using an open-source consortium blockchain and
a real-world dataset.
The remainder of this paper is organized as follows. In
Section II, we introduce the system model, define the adver-
sarial model, and identify the design goals. Then, we propose
our blockchain-assisted personalized car insurance scheme that
achieves privacy preservation and fraud resistance in Section IV.
Subsequently, security analysis and performance evaluation are
presented in Sections V and VI, respectively. Finally, Section VII
reviews some related works and Section VIII draws the conclu-
sion of this work.
II. MODELS AND DESIGN GOALS
In this section, we formalize the system model and adver-
sarial model, and also present our design goals for achieving
transparent, verifiable, and privacy-preserving personalized car
insurance.
A. System Model
As shown in Fig. 1, our system model consists of four entities:
drivers, an auto insurance company (IC), distributed moderators
(DMs), and a third-party auditor (TPA).
� Drivers are users of an auto insurance company who are
required to upload their driving data to IC over a long
period of time (e.g., six months) using a mobile App
published by IC. Based on collected driving data, IC can
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
HUANG et al.: BLOCKCHAIN-ASSISTED PERSONALIZED CAR INSURANCE WITH PRIVACY PRESERVATION AND FRAUD RESISTANCE 3779
determine a driver’s safety scores and accordingly give
different discounts on drivers’ auto insurance premiums.
� IC builds a driving safety evaluation model for measur-
ing drivers’ behavior. By monitoring a driver’s uploaded
driving data trip by trip, IC can calculate the driver’s auto
premiums based on his/her overall safety rating which is
decided by the aggregation of all driving safety scores.
Drivers with higher ratings can enjoy more discounts on
auto premiums.
� DMs are responsible for establishing a consortium
blockchain to record each driver’s driving data and auto
premiums transparently as a distributed ledger. Smart con-
tracts can be deployed in the blockchain and can be trig-
gered by drivers, IC, and TPA to reach an agreement about
auto premiums without trusted intermediates. In the real
world, they can be a group of consortium auto insurance
companies.
� TPA is maintained by the government. A driver and IC can
authorize TPA to audit the driver’s data. TPA generally
owns other data sources, e.g., deployed roadside cameras,
and is able to identify the manipulated driving data up-
loaded by a driver who wants to cheat IC.
B. Adversarial Model
Based on the system model, adversaries are considered to
be rationally malicious. Compared with fully malicious adver-
saries, rational adversaries only perform maliciously to max-
imize their profits. Their malicious behaviors are outcome-
driven, i.e., adversaries will take the action that results in the
best outcome. Concretely, IC may behave maliciously to infer
sensitive information from collected drivers’ data. Although
various privacy laws are enforced to regulate IC’s privacy poli-
cies, they cannot technically prevent internal adversaries from
compromising data privacy as internal attacks are hard to be
detected. To maximize its payoff, IC may choose to decrease
the safety score of a driver who drives safely, by deviating from
the scheme. We do not consider the situation that IC deliberately
modifies their model parameters, since the attack can be easily
handled by the technique proposed in [13], where IC is required
to prove the model accuracy of a public dataset while preserving
model privacy. From another perspective, drivers may behave
maliciously to cheat IC by uploading fake driving data. By
doing so, they can obtain more discounts on their auto insurance
premium. In addition, drivers may be curious about the model
parameters trained by IC and behave maliciously to compromise
the model privacy.
Following the literature that is designed based on a consortium
blockchain [14], [15], our scheme’s security is established on an
assumption that only a minority of DMs can be compromised
by malicious drivers and IC, and the majority of them are
honest (e.g., more than 2
3 DMs are honest if Practical Byzantine
Fault Tolerance protocol (PBFT) is chosen as the consensus
protocol used in the consortium blockchain) [16], [17]. As a
government department whose purpose is to identify data fraud
in our scheme, TPA is conditionally trusted. TPA is normally
trusted to some extent, but to make the model more realistic,
less auditing information should be shared with TPA, since the
information shared with TPA may be leaked unintentionally.
Strong collusion attacks are also considered in our scheme,
where malicious drivers can collude with each other to perform
attacks on model parameters. Malicious drivers can also collude
with IC to infer other drivers’ reported data. Note that we mainly
focus on the application-layer attacks and thus other attacks are
beyond the scope of the paper.
C. Design Goals
Based on the system model and adversarial model, we have
the following objectives:
� Driver Privacy: The driving data collected from a driver
should not be exposed to IC, other drivers, or external
adversaries to achieve privacy preservation in the system.
� Model Privacy: The model parameters hold by ICs for
evaluating a driver’s safety score should not be obtained
by any internal or external adversaries.
� Fraud Resistance: The scheme should prevent drivers from
reporting fabricated driving data as much as possible, with
the help of TPA.
� Transparency of Auto Insurance: How ICs collect drivers’
driving data and calculate their insurance fees are transpar-
ent. To achieve the objective, the following two sub-goals
should be guaranteed:
– Public Verifiability: Each driver’s safety score can be
verified by any entity to ensure that the score is calculated
following the evaluation model defined by ICs.
– Permission-based Audit: Every audit is performed based
on the permission of drivers, i.e., TPA and ICs cannot
audit the data of a driver without the permission of the
driver.
III. PRELIMINARIES
In this section, we present some preliminaries including cryp-
tographic building blocks, a driving safety evaluation model for
calculating personalized auto premiums, the basic knowledge
about game theory, and consortium blockchain.
A. Building Blocks
1) Paillier Cryptosystem: Paillier Cryptosystem is a partially
homomorphic cryptosystem that supports additions of cipher-
texts and multiplications of plaintexts [11]. It achieves semantic
security against chosen-plaintext attacks (IND-CPA) and con-
sists of five algorithms:
• KeyGen: The algorithm generates an RSA modulus N =
pq (ϕ(N) = (p− 1)(q − 1)), where p and q are safe primes,
and outputs public key pk = N and private key sk = (q, p, λ =
Lcm(p− 1, q − 1)), whereLcm() is an algorithm for calculating
least common multiple;
• Encryption: The algorithm inputs a message m ∈ ZN
and pk, chooses a random number Γ ∈ Z∗N , and outputs c =
Enc(m) = (1 +N)mΓN mod N 2;
•Decryption: The algorithm inputs a ciphertext c and sk, and
outputs m = L(cλ mod N 2)
L((1+N)λ mod N 2) , where L(x) = x−1
N ;
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
3780 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 72, NO. 3, MARCH 2023
• Addition: The algorithm inputs c1 = Enc(m1) and c2 =
Enc(m2), and outputs c1 · c2 = c3 = Enc(m1 +m2);
• Multiplication: The algorithm inputs c1 = Enc(m1) and
m2 ∈ ZN , and outputs c2 = cm2
1 = Enc(m1 ·m2).
2) Fujisaki-Okamoto Commitment: Given an RSA modulus
N , let g and h be two elements of large orders in Z∗N , and
the discrete logarithms of g base h or vice versa are unknown,
a Fujisaki-Okamoto (FO) commitment to an integer m can be
defined as C = gmhr mod N , where r is a random number
chosen from [0, 2τN ], where τ is a security parameter [18]. The
commitment has two properties:
– Statistically Hiding:C statistically reveals no information,
i.e., there exists a simulator S that can output simulated
commitments which are statistically indistinguishable from
the real one;
– Computationally Binding: A polynomial-time adversary
cannot generate two commitmentsC1 = gm1hr1 andC2 =
gm2hr2 on (m1, r1) and (m2, r2), where C1 = C2 but
m1 �= m2.
3) Zero-Knowledge Proof: A zero-knowledge proof of
knowledge (ZkPoK) protocol involves two parties: a prover and
a verifier. The prover can prove to the verifier that (x,w) ∈ R,
i.e., some NP relation R is correct about a statement x without
revealing a witness w. Similar to [19], we denote a proof as
π ← ZkPoK{(w) : (x,w) ∈ R}, which has three properties:
– Completeness: The verifier will always acceptπ if (x,w) ∈
R;
– Soundness: The verifier will accept π with negligible prob-
ability if (x,w) /∈ R, i.e, there exist a knowledge extractor
who can extract the witness, w, by using rewinding tech-
niques.
– Zero-Knowledge: A simulator S can be constructed, who
accesses the verifier as a black box and can generate a
transcript for a true statement x. The generated transcript is
computationally indistinguishable from the real transcript
received by the verifier.
B. Driving Safety Evaluation Model
IC uses a logistic regression (LR) model to evaluate the
driving safety of a driver in a trip as y = �w · �x+ ε, where (�w =
(w1, w2, ...), ε) are the model parameters and the model inter-
cept, �x = (x1, x2, ...) are the driving features extracted from the
detailed driving data of the driver’s one trip, and sigmoid(y) ∈
[0, 1] is the model classification result where sigmoid is the
Sigmoid function. sigmoid(y) ≥ 0.5 means the driving behavior
in the trip is measured to be safe (the probability that the driver
drives safely is equal to or larger than 0.5) and sigmoid(y) < 0.5
means the opposite. The LR model is believed to be an effective
and popular model for calculating the driving safety score based
on drivers’ behavior in existing research works [20], [21], [22].
Without loss of generality, Extract is a feature extraction
function used by IC, we have �x = Extract(info), where info
is the time-series driving data, including the telematics data of
a trip and other information. The feature dimension is set as n,
i.e., the lengths of �w and �x are n. We denote ψ as a pre-defined
predicate of the model parameters, i.e., ψ(�w, ε) = 1, which
Fig. 2. A typical game with two players P0 and P1.
meanswi ∈ [−2lw + 1, 2lw − 1] for i = 1 to n and ε ∈ [−2lε +
1, 2lε − 1]. We denote φ as a pre-defined predicate of the driving
features, i.e., φ(�x) = 1, which means xi ∈ [−2lx + 1, 2lx − 1]
for i = 1 to n. With such predicates, y locates in a range of
[−2κ + 1, 2κ − 1] (κ ≥ max(lw + lx + 5, lε + 5)). To obtain
the PCI premium, the total number of trips that need to be
uploaded by a driver isN , i.e. the driver’s total uploaded driving
features are (�x1, �x2, ..., �xN ) and the driver obtains N driving
safety evaluation results (y1, y2, ..., yN ). The initial rating of
the driver behavior is set as R = 0 and for trip i, if yi ≥ 0
(sigmoid(yi) ≥ 0.5), the trip is classified to be safe,R = R+ 1;
otherwise, sigmoid(yi) < 0.5, and R = R− 1. Supposing that
the basic auto insurance quote of the driver is Q, if R < 0, Q̂ =
(1 + 20% ∗ |R|N ) ∗Q or if R ≥ 0, Q̂ = (1− 25% ∗ |R|N ) ∗Q,
where Q̂ is the PCI premium1.
C. Games & Nash Equilibrium
We describe a non-cooperative game of multiple players as a
game tree in this paper. Each node in the game tree represents
a player, and routes from the root node to one leaf node denote
different strategies adopted by participating players. Each leaf
node points to the players’ payoffs which are decided by how
they choose strategies. As shown in Fig. 2, two players, P0
and P1, play the game and do not cooperate. The game starts
from P0. If P0 chooses the strategy S1, the game ends, and
P0 obtains the payoff +1 while P1 gets the payoff −1. If
P1 chooses the strategy S2, P1 can choose different routes
with different outcomes. In most of the realistic cases, a game
runs in a situation where players have imperfect informa-
tion, i.e., a player does not know the actions taken by other
players.
One of the most common decision-making theorems to locate
an optimal solution of a non-cooperative game is the Nash
equilibrium. With the theorem, one route of a game tree can
be found, which guarantees that each player’s payoff is best
considering other players’ strategies. When a Nash equilibrium
is reached, no one can gain more by changing strategies if other
players do not change their strategies. In a standard multiplayer
non-cooperative game, if the number of players and the strategies
of each player are finite, at least one Nash equilibrium can be
found, which may contain mixed strategies. More detailed and
1The discount percentages follow https://www.desjardinsgeneralinsurance.
com/auto-insurance/ajusto
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
https://www.desjardinsgeneralinsurance.com/auto-insurance/ajusto
https://www.desjardinsgeneralinsurance.com/auto-insurance/ajusto
HUANG et al.: BLOCKCHAIN-ASSISTED PERSONALIZED CAR INSURANCE WITH PRIVACY PRESERVATION AND FRAUD RESISTANCE 3781
formal definitions of game trees and Nash equilibrium can be
found in [23].
D. Consortium Blockchain
A consortium blockchain is a distributed service maintained
by a group of pre-selected entities (they are named moderators
in our system). The blockchain mainly offer two types of trusted
services: storage service and computation service. Data can
be sent to the storage service and stored by the blockchain to
guarantee data integrity. A computer program that involves many
functions can also be outsourced to the computation service,
and the program is named “smart contract” in the blockchain.
Each function of a contract can be triggered and executed by the
blockchain, and each execution of a function may result in some
state changes of the contract, and the changes are also updated
and stored by the blockchain.
For auto insurance companies, they can easily build a consor-
tium blockchain for the business of car insurance by using open-
source consortium blockchains such as Hyperledger fabric.
Compared with public blockchains, the consortium blockchain
has low transaction confirmation delay and high transaction
throughput, which makes it more suitable for real-world mobile
applications.
IV. PROPOSED BLOCKCHAIN-ASSISTED PERSONALIZED CAR
INSURANCE SCHEME
In this section, we propose a blockchain-assisted scheme for
achieving secure personalized car insurance (PCI). The scheme
mainly involves three high-level ideas and their detailed con-
structions: 1) designing the smart contract for achieving PCI
atop blockchain and initializing the blockchain; 2) verifiable and
privacy-preserving evaluation of a driver’s overall safety rating
based on a series of trip-based driving safety scores; and 3) a
contract-based auditing method for detecting malicious drivers.
A. Contract Design & System Setup
The core of a blockchain-assisted scheme is the design of the
contract for PCI among a driver, IC, and TPA. The whole proce-
dures of our scheme center around the contract that incorporates
nine functions, as shown in Fig. 3.
Function Init defines a driver’s unique insurance number
(DIN), a basic auto insurance premium (Q), committed model
parameters ( �C), encrypted model parameters ( �E), the public
keys of IC and TPA (pk and p̂k, respectively), the required
deposit (DP) and the number of uploaded trips (N ), and the
permitted number of audits (M). Also, some parameters related
to the driver are initialized, including the serial number of
updated trips (NUM), the initial rating of the driver (R), the
personalized insurance premium (Q̂), and the state of the driver’s
PCI (STATE). There are 8 states indicating different stages of the
driver’s car insurance, and finally the states will be transitioned
to 6, 7, or 8, that implies the end, as shown in Fig. 4. IC deploys
the contract into the blockchain to trigger Init, which implies
the beginning of the evaluation of the driver’s auto premiums.
Fig. 3. The contract for personalized car insurance.
In the contract, function Deposit needs to be triggered firstly
by the driver to deposit DP into the contract. When the deposit
is completed, each time the driver drives a trip i, a transaction
consisting of the encrypted driving features (DDi), the proof of
the driving features (πDDi ), the encrypted raw driving data (DAi)
is sent to the contract, and function Record is triggered by the
driver to verify and store DDi and DAi (we use Store to denote
the procedures of storing the data in the contract). After the
encrypted driving features ofN trips are documented, function
Evaluate can be triggered by IC to generate the corresponding
overall rating of the driver (R) and the personalized auto insur-
ance premium (Q̂). To trigger the function, IC needs to send the
transaction involving the private results of driving safety scores
of N trips and the proof of the private results, {DSi}Ni=1 and
{πDSi}Ni=1, to the contract.
The premium (Q̂) is not confirmed yet. IC will follow the
contract-based auditing method defined in Section IV-C, and
can choose to either trigger function Confirm to confirm the pre-
mium without auditing or trigger function Audit to initialize an
auditing event (we useAuditEvent to represent the procedures of
starting an audit event in the contract) to audit uploaded driving
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
3782 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 72, NO. 3, MARCH 2023
Fig. 4. The state transitions in the contract.
TABLE I
THE FUNCTIONS DEFINED IN THE CONTRACT
data of up toM trips. If IC would like to audit the uploaded data
by triggering Audit, IC can send the serial numbers of the chosen
M trips, {NUMi}Mi=1 to the contract. If the audit event is received,
the driver should also trigger function Authorize to authorize
the auditing event posted by IC. Similar to the transaction sent
by IC, the driver also needs to send the serial numbers of the
chosen M trips, {NUM′i}Mi=1, the authorization keys, {DKi}Mi=1,
and the proof of authorization keys, πDK, to the contract and
trigger an authorization event (we use AuthEvent to represent
the procedures of starting an authorization event in the contract).
After receiving the audit event and the authorization event,
by using the authorization keys and its private key, TPA can
recover the raw driving data of up toM trips and detect whether
the trips are real or fabricated, and trigger function Inspect
to report the result and end the contract. Without auditing, IC
can directly trigger function Confirm by sending ‘confirm’ and
end the contract. According to the contract, when no malicious
behavior is detected, Q̂ is confirmed and the deposit will be
return (Return); otherwise, the driver will be punished by losing
the deposit. The driver can also choose to quit the contract
by sending ‘quit’ to trigger function Quit before the auditing
happens. We summarize the descriptions of the functions in
Table I.
In addition to these functions, there are other redundant
functions such as making written data accessible and readable
and allowing the driver or IC to end the contract in case of
timeout. Since these functions are trivial, we omit them for
brevity. In the contract, we use Verify1 and Verify2 to denote two
verification algorithms that verify the zero-knowledge proofs of
the correctness of encrypted driving features and the driver’s
driving safety scores, and use Check to denote the checking
algorithm that rates a trip-based driving safety score as high or
low. How to encrypt the driving features and the raw driving data,
the proofs, the verifications algorithms (a.k.a. zero-knowledge
proofs), and the checking algorithm are not discussed here and
will be given in Sections IV-B and IV-C.
One-time Setup: Before IC deploys the contract for drivers,
some public parameters need to be negotiated once among
drivers, IC, and TPA, including a security parameter τ , an RSA
modulus N = pq where p and q are two safe primes, two ele-
ments of large orders in Z∗N , g ∈ Z∗N and h ∈ Z∗N , a symmetric-
key encryption/decryption algorithm SEnc(·)/SDec(·), and a
public key encryption/encryption algorithm PEnc(·)/PDec(·).
Note that, the discrete logarithms of g base h or vice versa
are unknown to drivers, IC, and TPA. The factorization of N
should be only known to IC and unknown to drivers and TPA.
For this purpose, our scheme can rely on DMs to generate and
publish N , g, and h, and shares two safe primes, p and q, with
IC in a decentralized setting [24], [25]. The bit length of N
is ζ. Based on the parameters, IC can generate and publish its
public key, pk = N , and keep its private key sk = (q, p, λ =
Lcm(p− 1, q − 1)). IC additionally chooses 2(n+ 1) random
numbers {ri}n+1
i=1 and {Γi}n+1
i=1 , where ri ∈ [0, 2τN) and Γi ∈
(0, N). IC then generate the committed model parameters, �C =
(C1, C2, ..., Cn, Cn+1), and the encrypted model parameters,
�E = (E1, E2, ..., En, En+1), where Ci = gwihri mod N and
Ei = (1 +N)wiΓN
i mod N 2 for i = 1, 2, ..., n and Cn+1 =
gεhrn+1 mod N and En+1 = (1 +N)εΓN
n+1 mod N 2. A cor-
responding zero knowledge proof, πParams can be constructed
and verified publicly, as shown in Fig. 5, whose objective is to
certify the model parameters are correct formed and consistent
withψ. TPA also publishes its public key p̂k, and keep its private
key ŝk.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
HUANG et al.: BLOCKCHAIN-ASSISTED PERSONALIZED CAR INSURANCE WITH PRIVACY PRESERVATION AND FRAUD RESISTANCE 3783
Fig. 5. Proof of the correctness of committed and encrypted model parameters.
Fig. 6. Proof of the correctness of encrypted driving features that can be
verified by Verify1 algorithm.
B. Privacy-Preserving Evaluation of Drivers’ Behavior
A driver’s overall rating (R) is determined by N driving
safety scores received by the driver ({yi}Ni=1). Hence, privacy-
preserving evaluation ofRmeans secure calculations of {yi}Ni=1
without exposing �w, ε, and {�xi}Ni=1, where {�xi}Ni=1 are the
driver’s driving features of N trips. A straightforward idea is
to utilize Paillier homomorphic encryption to achieve secure
calculations of {yi}Ni=1. However, as the relationship among yi,
�w, �xi, and ε is linear, a malicious driver can easily extract �w and
ε since yi is deterministic based on �xi, if n+ 1 driving safety
scores {yi}n+1
i=1 is revealed based on Gaussian elimination. To
hide the relationship amongyi, �w, �xi, and ε, our idea is to disclose
a randomized value of yi, δi = αi(aiyi + bi) + βi, where αi
and βi are random numbers chosen by IC and ai and bi are
random numbers chosen by the driver. By carefully selecting
the bit lengths of (αi, βi, ai, bi), δi only shows whether yi ≥ 0
or yi < 0 for trip i, which is sufficient to determine the updates of
R. To achieve the goal, we design a privacy-preserving driving
behavior evaluation protocol between the driver and IC, as
shown in Protocol 1. In the protocol, a driver will report DDi
and DAi for trip i, and IC will monitor the contract until enough
data are collected, and evaluate the encrypted driving features
to obtain the driver’s overall safety rating and auto premium.
Considering that the driver and IC may behave maliciously
in the protocol, zero-knowledge proof is applied to guarantee
that the driver and IC do not deviate from the protocol. From
the driver side, a zero-knowledge proof protocol is designed,
πDDi , as shown in Fig. 6, which can be verified to ensure that
Ei is a valid Paillier ciphertext that is calculated correctly based
on the driver’s logistic regression model (yi = �w · �xi + ε) and
E′i can be decrypted by IC to obtain aiyi + bi for trip i. As IC
holds the private key, sk, Fig. 6 is not straightforward. Our idea
is to introduce a random number, ri, into the proof and use ri
to hide the private driving safety score yi of trip i. Our design
first enables the driver to prove Ei is a valid Paillier ciphertext
Protocol 1: Privacy-Preserving Evaluation of Driving Be-
havior.
1: (Driver) Reporting Driving Data (Trip i for i = 1 to
N ):
1) chooses a random number ri whose bit length is lr
(lr > κ);
2) calculates Ei, the Paillier ciphertext of �w · �xi + ε+ ri:
Ei =
n∏
j=1
E
xi,j
j · En+1 · (1 +N)ri mod N 2;
3) chooses two random numbers ai and bi whose bit
lengths are la and lb, respectively (lb > κ);
4) calculates r′i = airi, and computes E′i, the Paillier
ciphertext of
ai(�w · �xi + ε+ ri)− airi + bi = aiyi + bi:
E′i = Eai
i · (1 +N)−r
′
i · (1 +N)bi mod N 2;
5) chooses a random number vi ∈ [0, 2τN), calculates
v′i = aivi, and commits to ri and r′i as comi = grihvi
and com′i = gr
′
ihv
′
i ;
6) sets DDi = (Ei, E′i, comi, com′i) and generates the proof
πDDi ;
7) chooses a symmetric key ki, and encrypts �xi||infoi as
cti = SEnc(ki, (�xi||infoi)), where infoi is the raw
driving data of the trip;
8) sets DAi = cti, and sends (DDi, πDDi , DAi) to trigger
function Record.
2: (IC) Evaluating Driving Safety (All N trips):
1) downloads {i, E′i}Ni=1 for i = 1 to N ;
2) chooses 2N random numbers {αi, βi}Ni=1, and the bit
lengths of αi and βi (for i = 1 to N ) are lα and lβ
(lβ > la + κ);
3) calculates Ei = (E′i)αi(1 +N)βi for i = 1 to N ;
4) decrypts Ei using λ to obtain
mi = αi(aiyi + bi) + βi = αiaiyi + αibi + βi for
i = 1 to N ;
5) chooses a random number, Υi ∈ (0, N), and encrypts
mi as Ui = (1 +N)miΥN
i mod N 2 for i = 1 to N ;
6) calculates Di = Ei · U−1
i = ZN
i mod N 2 for i = 1 to
N ;
7) extracts Zi from Di, i.e., Zi = DN−1 mod ϕ(N)
i mod N
for i = 1 to N , where ϕ(·) is the Euler function;
8) sets DSi = (mi,Ei,Ui,Di) and generates the proof
πDSi for i = 1 to N ;
9) sends ({DSi}Ni=1, {πDSi}Ni=1) to trigger function
Evaluate.
of yi + ri, and then allows the driver to prove that E′i is another
valid Paillier ciphertext of aiyi + bi that eliminates ri from Ei
and adds two addition random numbers, (ai, bi). By doing so, IC
can only decrypt Ei and E′i to obtain the random values, yi + ri
and aiyi + bi.
Another zero-knowledge proof is designed for IC, πDSi , as
shown in Fig. 7, which can be verified to show that Ei is a
valid Paillier ciphertext that encrypts αiaiyi + αibi + βi and
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
3784 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 72, NO. 3, MARCH 2023
Fig. 7. Proof of the correctness of driving safety scores that can be verified by
Verify2 algorithm.
mi = αiaiyi + αibi + βi. To prove thatmi is the exact plaintext
without exposing IC’s private key, two additional ciphertexts,Ui
andDi, are introduced, where U is a new Paillier ciphertext that
encryptsmi andDi is the multiplication ofEi andU−1. Based on
Paillier’s homomorphic property, if mi = αiaiyi + αibi + βi,
we have Di = ZN
i mod N 2, where Zi is a random number
located in (0, N). Using the private key, IC can extract Zi,
and conduct the proof, πDSi . The random value, mi = αiaiyi +
αibi + βi, can be used for testing whether yi ≥ 0 or yi < 0 if
αi and βi follows some settings. When yi ≥ 0, mi mod N is a
random value whose bit length is much smaller than ζ, and the
checking algorithm, Check, output 1; otherwise the value’s bit
length is close to ζ, and Check outputs 0.
Instantiations of πParams, πDDi , πDSi : The proposed three
zero-knowledge proofs can be efficiently instantiated using the
Sigma-protocol and can be securely transformed to the non-
interactive zero-knowledge proofs using Fiat-Shamir heuristic in
the random oracle model. We can achieve efficient range proofs
for �w, ε, {�xi}Ni=1, {ai}Ni=1, {bi}Ni=1, {αi}Ni=1, and {βi}Ni=1, by
using the techniques proposed in [26].
Correctness Analysis: The proposed protocol is correct when
parameters are selected properly. Since our protocol is con-
structed based on Paillier cryptosystem, the inputs and out-
puts of the calculations in the protocol should be in the field
Z∗N . Therefore, the following conditions should be satisfied:
lr << ζ, κ << ζ, la + κ << ζ, lb << ζ, lα + la + κ << ζ,
lα + lb << ζ, and lβ << ζ. Moreover, to guarantee that the
final result of the evaluation model, mi = αiaiyi + αibi + βi,
can be correctly decrypted from the Paillier ciphertext, we need
to set la > lb, and lα > lβ . Under the circumstance, we have
Len(mi) ≈ ζ if yi < 0 and Len(mi) << ζ if yi ≥ 0, where
Len(mi) denotes the bit length of mi. In addition, the pro-
posed protocol correctly calculates yi in ciphertext by using the
homomorphic property of Paillier cryptosystem, e.g., Ei is the
ciphertext of yi + ri, which can be easily verified.
C. Contract-Based Auditing
After a driver’s personalized auto premium is calculated, IC
should determine whether to audit the driving data uploaded
by the driver, and we design a new auditing method based on
a recursive inspection game [27]. The auditing process can be
viewed as a sequential game between a driver and IC. Specifi-
cally, since the number of total uploaded trips is N , we require
IC can only auditM trips and try to minimizeM to achieve our
goal.
Fig. 8. The sequential game of determining whether to cheat (Driver) or audit
(IC) on trip i (for i = 1 to N ).
We can describe the game between IC and a driver in extensive
form with imperfect information, which is a game tree as shown
in Fig. 8. The game is a non-cooperative zero-sum sequential
game that involvesN stages (corresponding toN trips uploaded
by the driver, i = 1 to N ), and the game tree shows the actions
of IC and the driver and the payoffs of IC and the driver. For
trip i, the driver may cheat with the probability, Pi ∈ [0, 1],
and may not cheat with (1− Pi). IC may choose to audit the
trip with the probability, P̂i ∈ [0, 1], and may not audit with
(1− P̂i). Ni, Mi, and Si are three variables that indicates
the number of needed trips, permitted auditing actions, and the
number of intended cheats before trip i’s data is uploaded, i.e.,
N1 = N ,M1 =M, and S1 = S ∈ [0,N −M]. For the most
cautious (malicious) drivers, S = 1 and for the most aggressive
(malicious) drivers, S = N −M. The payoff of IC before the
driver uploads the driving data of trip i can be denoted as a
function, Θ(Ni,Mi,Si). If trip i is cheated and is audited,
according to Fig. 4, the game will end immediately and the
deposit of the driver, DP, will be transferred to IC. If the driver
successfully makes a cheat without being audited at trip i, the
payoff of IC is updated as Θ(Ni − 1,Mi,Si − 1)− χ, where
χ is the reward of each cheat behavior. In our model, χ =
25% ∗ 1
N ∗Q+ 20% ∗ 1
N ∗Q and DP = η · χ, where η is a pos-
itive number determined by IC. When the driver does not cheat at
trip i, if IC makes an audit, the payoff isΘ(Ni − 1,Mi − 1,Si);
otherwise, the payoff is Θ(Ni − 1,Mi,Si). Since the game is
zero-sum, the payoff of the driver is the opposite. For concise
expression of equations in the following calculations, we denote
Θ(Ni − 1,Mi − 1,Si) by μi,1, denoteΘ(Ni − 1,Mi,Si − 1)
by μi,2, and denote Θ(Ni − 1,Mi,Si) by μi,3.
Based on the adversarial model, the game can lead to a unique
mixed Nash equilibrium where both players choose their actions
with fixed positive probabilities. For the stage that the driver
uploads the driving data of trip i, the equilibrium choice of P̂i
is to make the driver’s payoff indifferent no matter whether the
driver chooses to cheat or not, i.e.,
P̂i · (−μi,1) + (1− P̂i) · (−μi,3)
= P̂i · (−DP) + (1− P̂i) · (−μi,2 + χ); (1)
similarly, the equilibrium choice of Pi is to make IC’s payoff
indifferent no matter whether IC chooses to audit or not, that is,
Pi · (μi,2 − χ) + (1− Pi) · μi,3
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
HUANG et al.: BLOCKCHAIN-ASSISTED PERSONALIZED CAR INSURANCE WITH PRIVACY PRESERVATION AND FRAUD RESISTANCE 3785
= Pi · DP+ (1− Pi) · μi,1. (2)
Based on two equations above, we can calculate the probability
of auditing as
P̂i =
μi,3 − μi,2 + χ
μi,3 − μi,2 + χ+ DP− μi,1
= f ′(Ni,Mi,Si, χ, DP), (3)
and
Pi =
μi,3 − μi,1
μi,3 − μi,2 + χ+ DP− μi,1
= f(Ni,Mi,Si, χ, DP). (4)
Both sides of (2) denote IC’s payoff Θ(Ni,Mi,Si), and we
substitute Pi to obtain
Θ(Ni,Mi,Si) =
DP · μi,3 + χ · μi,1 − μi,1μi,2
μi,3 − μi,2 + χ+ DP− μi,1
. (5)
Based on Theorem 1 in [27], forNi >Mi > 0 and Si > 0, we
can get
Θ(Ni,Mi,Si) =
−
∑Si
j=1 χ ·
(Ni−j
Mi
)
∑Mi
j=0 DP
Mi−j ·
(Ni
j
) . (6)
The objective of our auditing method is to adjust M and
DP and find the appropriate M and DP that minimizes Pi.
Equation 4 shows that Pi is function f() ofNi,Mi, Si, χ, and
DP, i.e., P1 = f(N1,M1,S1, χ, DP), if we substitute μi,1, μi,2,
and μi,3 with Θ(Ni − 1,Mi − 1,Si), Θ(Ni − 1,Mi,Si − 1),
and Θ(Ni − 1,Mi,Si) based on Equation 6. Obviously, the
function is monotonic withMi and DP, and thus the minimum
of Pi means the maximum ofMi and DP.
P̂i is a function f ′() of Ni,Mi, Si, χ, and DP based on (3)
(P̂i = 0 if Mi = 0), i.e., P̂i = f ′(Ni,Mi,Si, χ, DP), and IC
can create a randomness algorithm Randomi(P̂i) that returns
1 with P̂i and 0 otherwise. IC then follows Algorithm 1 to
generate its auditing strategies based on probabilities. Although
IC does not have the information about the left number of
the malicious driver’s attempts, S , to report fabricated driving
data, IC can make a reasonable assumption that a malicious
driver will set Si ∈ [0,Ni −Mi], because the malicious behav-
ior will be detected if Si > Ni −Mi. Therefore, IC can set
S = N −M in the real implementation. The algorithm finally
outputs {NUMj}Mj=1. If NUMj = 0 for j = 1 toM, IC sends ‘con-
firm’ to trigger function Confirm without auditing; otherwise,
IC sends {NUMj}Mj=1 to trigger function Audit. According to the
contract, the driver needs to authorize the auditing requests by
sending ({NUM′j}Mj=1, {DKj = PEnc(p̂k, k
NUM
′
j
)}Mj=1), and πDK,
as shown in Fig. 9, by triggering Authorize. Then, TPA can
decrypt {ctNUMj}Mj=1 to obtain detailed driving data of trips,
audit the data, and report the auditing result to end the contract
by triggering Inspect. The whole auditing procedures are public
and authorized by drivers and IC such that permission-based
audit can be achieved.
Algorithm 1: AuditSelection.
Input:N ,M, S , χ, DP;
Output:{NUMj}Mj=1;
1: N1 = N ,M1 =M, S1 = S;
2: for j = 1→M do
3: NUMj = 0;
4: end for
5: j = 1;
6: for i = 1→ N do
7: P̂1 = f ′(Ni,Mi,Si, χ, DP);
8: if 1 == Randomi(P̂i) then
9: NUMj = i, j = j + 1,Mi+1 =Mi − 1;
10: else if 0 == Randomi(P̂i) then
11: Mi+1 =Mi;
12: end if
13: Ni+1 = Ni − 1;
14: if Si > Ni+1 −Mi+1 then
15: Si+1 = Ni+1 −Mi+1
16: else if Si ≤ Ni+1 −Mi+1 then
17: Si+1 = Si
18: end if
19: ifM == j then
20: break;
21: end if
22: end for
23: Output {NUMj}Mj=1;
Fig. 9. Proof of the correctness of encrypted authorization keys that can be
verified by Verify3 algorithm.
V. SECURITY ANALYSIS
A. Simulation-Based Security Analysis
We use a simulation-based approach to capture the security
notions of our proposed scheme, including driver privacy, model
privacy, and verifiability, and transparency [28]. The idea is to
prove that, a real world where drivers, DMs, IC, and TPA exe-
cute the proposed scheme, is computationally indistinguishable
from an ideal world where the same players achieve the same
functions relying on a trusted party, T . In other words, the ideal
world is built that fulfills all desirable security properties, and
we also construct a simulator as an ideal-world adversary, S ,
who externally communicates with T and honest players in the
ideal world, and also pretends to be honest players and internally
executes the proposed scheme with a real-world adversary,A. If
A cannot computationally distinguish the inputs and the outputs
of the “simulated” world and the real world, it indicates that A
obtains no information except the information leaked in the ideal
world. In our proof, we consider a static model where malicious
drivers, IC, and DMs are fixed.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
3786 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 72, NO. 3, MARCH 2023
Four main phases in our proposed scheme require private
inputs from drivers and IC according to Fig. 4, and these inputs
affect the outputs. Thus, we focus on constructing the ideal
functionalities of these four phases in the ideal world by relying
on T : 1) setup phase; 2) recording phase; 3) evaluation phase;
and 4) authorization phase:
� Phase-1: (Real world) IC generates and publishes ( �E, �C,
πparams). (Ideal world) IC needs to submit �w and ε to T ,
and T verifies the consistency of the model parameters;
� Phase-2: (Real world) Drivers upload (DDi, πDDi , DAi) to
the blockchain and the blockchain accepts or rejects the
report. (Ideal world) Drivers submit �xi to T , and T can
judge the correctness of �xi with acceptance or rejection.
� Phase-3: (Real world) IC submits ({DSi}Ni=1, {πDSi}Ni=1) to
the blockchain and the blockchain calculates and publishes
R and Q̂. (Ideal world) As T knows all information, IC
only needs to trigger T and T calculates R and Q̂ in
plaintext and publish how R and Q̂ are calculated for each
trip.
� Phase-4: (Real world) Drivers submit {DKj}Mi=1 and πDK to
the blockchain, and TPA uses {DKi}Mi=1 to audit the driving
data and submit the auditing result to the blockchain. (Ideal
World) Drivers submits {info
NUM
′
j
}Mj=1 to T who can audit
and publish the auditing result.
According to the ideal functionalities, we can easily conclude
that the ideal world provides all desirable security properties.
Assuming that D is a probabilistic polynomial-time (PPT) al-
gorithm used for distinguishing the ideal world and the real
world controlled by A (D outputs 1 when running in the real
world), RealA and IdealS are the views (inputs and outputs) of
the real execution of our proposed scheme and the “simulated”
execution, respectively, we can have the following definition of
security for our scheme:
Definition 1 (Security): Our proposed scheme is secure if for
all PPT algorithms D, the following expression holds:
|Pr[D(RealA) = 1]− Pr[D(IdealS) = 1]| = negl(τ, ζ),
where Pr[·] is the probability function and negl(τ, ζ) denotes
a negligible function in security parameters (τ, ζ).
We analyze the security of our proposed scheme by proving
the above equation holds when the following conditions are
satisfied: 1) ZkPoK is simulation-extractable zero-knowledge
proof of knowledge in the random oracle model; 2) FO com-
mitment is statistically hiding and computationally binding; 3)
Paillier cryptosystem is semantic secure; 4) PEnc(·)/PDec(·) is
a semantic secure public-key cryptosystem; 5) SEnc(·)/SDec(·)
is a secure symmetric-key cryptosystem; and 6) lr > κ, lb > κ,
and lβ > la + κ.
The security proofs are categorized into two cases since
different players are controlled by A. In case-1, A controls
drivers and a subset of DMs, and intend to compromise model
privacy. In case-2, A controls IC and a subset of DMs, whose
target is driver privacy. We sketch how S can be constructed in
two cases.
(Case-1) S internally simulates the proposed scheme by rep-
resenting honest IC to A, and externally communicates with T
in the ideal world as malicious drivers:
� Phase-1: S randomly chooses n+ 1 model parameters
(�w′ = (w′1, w
′
2, ..., w
′
n), ε
′) which satisfies ψ(�w′, ε′) = 1,
and encrypts �w′ and ε′ as �E ′ = (E ′1, E
′
2, ..., E
′
n, E
′
n+1)
where E ′i is a valid Paillier ciphertext using N . Similarly,
S can construct �C ′ = (C ′1, C
′
2, ..., C
′
n, C
′
n+1) where C ′i is
a valid FO commitment. S can use the zero-knowledge
simulator to simulate the proof, π′Params, and publishes
( �E ′, �C ′, π′Params) internally to A;
� Phase-2: By interacting A internally, S stores cti and
extracts �xi using the knowledge extractor of the proof πDDi ,
and submits �xi to T for i = 1 to N in the ideal world;
� Phase-3: S retrieves the evaluation results of personalized
auto insurance premium (R′, Q̂′) from T in the ideal
world, and accordingly construct DS′i. For trip i, if yi ≥
0, S chooses a random number γi whose bit length is
chosen uniformly between (lα + la, lα + la + κ) and sets
m′i = γi; otherwise, m′i = −γi mod N . S then randomly
chooses α′i ∈ (2lα−1, 2lα − 1], β′i ∈ (2lβ−1, 2lβ − 1], and
Γ′i ∈ (0, N), and generates Paillier ciphertexts E′i, U′i, D′i
based on (α′i, β
′
i,m
′
i,Γ
′
i). S sets DS′i = (m′i,E
′
i,U′i,D′i)
and uses the zero-knowledge simulator to simulate the
proof, π′DSi for i = 1 to N ;
� Phase-4: S extracts ki using the knowledge extractor of
the proof πDK, and use k
NUM
′
j
to decrypt ct
NUM
′
j
to recover
info
NUM
′
j
for j = 1 toM.
Analysis of Case-1: For phase-1, if D can distinguish
RealA = ( �E, �C, πParams) and IdealS = ( �E ′, �C ′, π′Params), it
means D can be used to break the semantic security of Paillier
cryptosystem, the statistically hiding property of the FO com-
mitment, and the zero-knowledge property of ZkPoK, which
happens with negligible probability. For phase-2 and phase-3,
if D can distinguish RealA = ({DSi}Ni=1, {πDSi}Ni=1, R, Q̂) and
IdealS = ({DS′i}Ni=1, {π′DSi}Ni=1, R
′, Q̂′), it means S not only
breaks the semantic security of Paillier cryptosystem but also
fails to extract �xi and simulate {π′DSi}Ni=1, which happens with
negligible probability under the soundness property and the
zero-knowledge property ofZkPoK. For phase-4, the simulation
of S is perfect as long as the soundness property is achieved in
the proof, πDK, since the auditing result, RES is fully determined
by {info
NUM′j
}Mj=1 when {k
NUM′j
}Mj=1 can be correctly extracted.
(Case-2) S internally simulates the proposed scheme by rep-
resenting honest drivers toA, and externally communicates with
T in the ideal world as malicious IC:
� Phase-1: S uses the knowledge extractor of the proof,
πParams, to extract �w and ε by interacting A internally, and
submits �w and ε to T in the ideal world;
� Phase-2: In the ideal world, S triggers T and retrieves
the personalized auto insurance premiums (R̃, Q̃) from
T , and then generates �x′i = (x′i,1, x
′
i,2, ..., x
′
i,n) accord-
ing to yi = �w · �x′i + ε. Specifically, if yi ≥ 0, yi is cho-
sen uniformly from [0, 2κ − 1]; otherwise, yi is chosen
from [−2κ + 1, 0), and S can calculate �x′i accordingly.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
HUANG et al.: BLOCKCHAIN-ASSISTED PERSONALIZED CAR INSURANCE WITH PRIVACY PRESERVATION AND FRAUD RESISTANCE 3787
S then chooses random numbers r̃i ∈ (2lr−1, 2lr − 1],
ãi ∈ (2la−1, 2la − 1], b̃i ∈ (2lb−1, 2lb − 1], ṽi ∈ [0, 2τN)
and sets r̃′i = ãir̃i and ṽ′i = ãiṽi. Based on the inputs ofA
( �E),S can create Paillier ciphertexts and FO commitments,
D̃Di = (Ẽi, Ẽ ′i, ˜comi, ˜com′i), as follows:
Ẽi =
n∏
j=1
E
x′i,j
j · En+1 · (1 +N)r̃i , ˜comi = gr̃ihṽi ,
Ẽ ′i = Ẽai
i · (1 +N)−r
′
i · (1 +N)bi , ˜com′i = gr̃
′
ihṽ
′
i .
Based on D̃Di, S uses the zero-knowledge simulator to
simulate the proof, π̃ ˜DDi
, chooses a random permutation,
c̃ti, and sets D̃Ai = c̃ti;
� Phase-3: There is no need for S to simulate the phase since
S has no input nor output in this phase in the real world;
� Phase-4: S randomly chooses symmetric keys {k̃
NUM
′
j
}Mj=1,
and uses the public key cryptosystem to generate {D̃Kj =
PEnc(k̃pk,NUM′j
)}Mj=1. Next, S uses the zero-knowledge
simulator to simulate the proof, π̃D̃K.
Analysis of Case-2: For phase-1, the probability that S fails
to extract �w and ε is negligible according to the soundness
property of ZkPoK. For phase-2, if D can distinguish RealA =
(DDi, πDDi , DAi, R, Q̂) and IdealS = (D̃Di, π̃ ˜DDi
, D̃Ai, R̃, Q̃), it
means that the semantic security of Paillier cryptosystem
can be broken, the FO commitments are not statistically
hiding, and ZkPoK is the zero-knowledge, which happens
with negligible probability. For phase-4, if D can distin-
guish RealA = ({k
NUM
′
j
}Mj=1, {DKj}Mj=1, πDK) and IdealS =
({k̃
NUM
′
j
}Mj=1, {D̃Kj}Mj=1, π̃D̃K), we can useD to break the seman-
tic security of the public key cryptosystem and the symmetric
key cryptosystem used in our proposed scheme, and also the
probability that S fails to simulate π̃D̃K is negligible according
to the zero-knowledge property of ZkPoK.
As a consequence, we can conclude that the views of the
ideal world, IdealS , and the views of the real world, RealA are
computationally indistinguishable in two cases, and completes
the security proof.
B. Analysis of Fraud Resistance
Whether a driver chooses to cheat or not depends on the payoff
received after cheating. According to (6), if IC increases DP and
M, the average payoff is reduced. From Fig. 10, we can see that
when DP = 1500 andM = 3, the payoff Θ ≈ 0 indicating the
driver can gain approximate zero from the cheating and has no
motivation to cheat in our proposed scheme.
We also analyze the situation from a different angle: how to
ensure a driver does not cheat in all N reports based on (4).
As the driver only knows M1 =M and has no information
aboutMi(1 < i ≤ N ), the driver is believed to set Si = Ni −
M (as the most aggressive attacker), and we can calculate the
probability, P̃ , that the driver never chooses to cheat in all N
reports as follows:
Fig. 10. The payoff of a malicious driver (N = 300, S = N −M, Q =
1800, and χ = 2.7).
P̃ =
N−M∏
k=0
(1− f(N − k,M,N − k −M, χ, DP)) (7)
The probability, P̃ , is affected by N , M, χ, and DP. The
number of permitted auditing,M, should be a relatively small
value compared toN and DP should be a reasonable value that is
not much larger than the driver’s basic auto insurance premium,
Q. Under the circumstance, P̃-fraud resistance can be defined
as follows:
Definition 2 (P̃-Fraud Resistance): GivenN ,M, χ, and DP,
the probability that a driver does not cheat in all N reports of
driving data is equal to P̃ .
For easy understanding, an instance is set where N = 300,
M = 1, 2, 3, S = N −M, andQ = 2400. We set the different
deposits DP = (50% ∗Q, 100% ∗Q, 100% ∗Q), and draw the
varies of the probability that the driver does not cheat at trip
i = 1 toN , the varies of the probability that the driver does not
cheat until trip i = 1 to N , and the mean number of cheats in
Fig. 11(a), (b), and (c), respectively. From Fig. 11(a) and (b),
we can see that appropriate parameter selections are extremely
important, with a few deposits and permitted auditing numbers,
the chance that a driver chooses to cheat is largely increased.
From Fig. 11(c), we can see that the permitted auditing number,
M, is a dominant parameter that influences a malicious driver’s
behavior compared to the deposit, DP. It can be found that when
N = 150% ∗Q andM = 3, P̃ ≥ 97%, which is a reasonable
setting, i.e., the driver never cheats with the probability of 97%
in uploading the driving data of all 300 trips. In other words,
our proposed scheme only requires TPA to audit at most 1%
driving data to ensure that drivers will behave honestly with the
probability 97% when uploading their driving data.
VI. PERFORMANCE EVALUATION
A. Real-World Dataset
We use a public real-world dataset published by Grab2 for
measuring driving safety and personalized car insurance, which
2https://www.grab.com/sg/aiforsea/aiforseachallenges/
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
3788 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 72, NO. 3, MARCH 2023
Fig. 11. Under the setting DP = (50% ∗Q, 100% ∗Q, 150% ∗Q) andM = (1, 2, 3), we have (a) the probability that the driver does not cheat at trip i = 1→
300; (b) the probability that the driver does not cheat until trip i = 1→ 300; and (c) the mean number of cheats in all 300 trips.
includes around 20,000 real-world trips. Each trip record has
the telematics attributes such as GPS accuracy, GPS bearing,
acceleration data, gyroscope data, timestamp, speed, and a label
indicating whether the trip is safe or not.
We perform some features engineering techniques on the
raw data. Specifically, we clean the dataset by removing the
unrealistic records where the speed is larger than 400km/h, and
extract additional features of a trip including the mean, max,
and min values of acceleration, speed, and gyroscope, etc. We
choose mean, max, and min values because these values capture
the driving behavior of a driver, e.g., preferring a sudden brake.
After feature engineering, we obtain a new dataset of extracted
features, and the dimension of the features is 34 (n = 34).
B. Proof-of-Concept Implementation and Experiments
In order to evaluate the performance of the proposed scheme,
we implement a proof-of-concept prototype using Java and built
our implementation on the testnet of an open-source consor-
tium blockchain, Hyperledger Fabric [29]. We have a smart-
phone (OS: Android, CPU: Krin 980, RAM: 6G) as the client
and a laptop (OS: MAC OS, CPU: Dual-Core Intel Core i7,
RAM: 16GB) as the server which simulates the testnet of the
consortium blockchain and simulates the server of the auto
insurance company. The blockchain adopts the default setting
of Hyperledger Fabric v2.1: two peer nodes belonging to two
organizations and one order node with the RAFT consensus
protocol, and they are connected in a local network. We develop
a Java library which realizes function modules defined in our
proposed scheme, including the driving feature extraction mod-
ule, the encryption/decryption module, the evaluation results
proof/verification module, etc. The developed Java library is
integrated with Hyperledger Fabric SDKs (Java) to construct
the smartphone client, the server of IC, and the contract de-
ployed in the blockchain. The source codes can be found at
https://github.com/EnderCheng/PCI.
Since the applications of personalized car insurance do not
require to be real-time, the requirements of the computational
and the communication efficiency can be relaxed to some extent,
and we put more efforts on testing the feasibility of the proposed
scheme. Although there are some existing works related to
privacy-preserving personalized car insurance as discussed in
Section VII, they do not have the same driving safety evaluation
model as ours (the LR model) or do not design their schemes un-
der a malicious security model as shown in Table III. That is the
reason that we do not compare our scheme with their schemes in
terms of computational costs and communication overheads, as
the comparison cannot be performed fairly. It is explicit that our
scheme achieves a more rigorous security model with flexible
functions by sacrificing a little efficiency. Therefore, instead of
comparing with existing works, we compare the scheme with a
plaintext-based personalized car insurance scheme to measure
the efficiency loss caused by applying the privacy-preserving
techniques. The plaintext-based scheme implies that the driver
calculates yi = �w · �xi + ε and uploads yi in plaintext to the
blockchain and only the detailed driving data are encrypted using
a symmetric key cryptosystem.
In our experiments, the security parameters are chosen to
fulfill essential security requirements, i.e., τ = 256, ζ = 2048,
lr = la = 300, lb = 250, lα = 600, and lβ = 350. The symmet-
ric key cryptosystem is AES-CBC-128, and the public key cryp-
tosystem is EC-Elgamal with BN254 curve. The configuration
of the consortium blockchain also affects the throughput and
the latency of the system, and we follow the default setting of
Hyperledger Fabric v2.1 testnet where a block is generated every
2 seconds and at most 10 transactions are allowed in one block.
System Initialization: It takes around 37 seconds to set up
the consortium blockchain on the laptop. Two DMs, one IC,
and one TPA, take fewer than 13 seconds to generate public
parameters and public/private key pairs. Since the initialization
only runs once, it can fulfill the requirements of real-world
applications.
Accuracy: Since the inputs fields of Paillier cryptosystem
is ZN while the weights, �w, the intercept, ε, and a driver’s
features �x are floating numbers, we need to magnify the number
with the decimal places and transform the number into ZN
and determine the corresponding lw, lε, lx, and κ, e.g., when
one of the weights is 1.043235465, we need to transform the
number to 1,043,235,465 by magnifying 109 times if we want
to keep the full precision. The times of magnifying also affect
the choices of lw, lε, lx, and κ, and the efficiency of the proposed
scheme since the range proofs are affected by the bit lengths. For
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
https://github.com/EnderCheng/PCI
HUANG et al.: BLOCKCHAIN-ASSISTED PERSONALIZED CAR INSURANCE WITH PRIVACY PRESERVATION AND FRAUD RESISTANCE 3789
Fig. 12. (a) Similarity ratio of driving safety classification results (with 1 and
4 decimal precision) and (b) computational costs of one range proof (lx = 24
and lx = 87).
TABLE II
THE OFF-CHAIN COSTS FOR DRIVERS AND IC (n = 34)
the real-world dataset, the features extracted from the datasets
need to be magnified 1023 times (lx = 87) to guarantee the
full precision, which leads to large computational burdens on
the client side. To reduce the costs, we approximate the model
parameters and the driver’s features and notice that the classifi-
cation accuracy is hardly affected. As shown in Fig. 12(a), when
we maintain the whole integer precision and keep the decimal
precision to only 4, the classification results of the original model
and the model with approximated parameters and features are
slightly different, and around 99.9% results are same. Under
the circumstance, the features only need to be enlarged 104
times, and we have 2lw ≈ 105(lw = 17), 2lε ≈ 105(lε = 17),
and 2lx ≈ 107(lx = 24). When the decimal precision is set to
1 (lw = 7, lε = 7, lx = 14), we can still guarantee that around
97% classification results are same. Also, we run a range proof
100 times, and chooses different lx to evaluate the computational
efficiency. From Fig. 12(b), the execution time of a single range
proof is less when lx (similar to lw and lε) is smaller, and
the trade-off between accuracy and efficiency can be obtained
by adjusting lw, lε, and lx. In the following evaluations, we
choose lw = lε = 17 and lx = 24 to guarantee both efficiency
and accuracy.
Computational Costs: The computational costs involve two
parts: 1) the off-chain costs at the client side (the driver’s
smartphone and IC’s server) and 2) the on-chain costs. For the
off-chain costs, we mainly evaluate the execution time spent
by a driver to generate one driving report (Time-Rep), and
the execution time spent by the server to generate one evalu-
ation result based on the report (Time-Eval). The experiment
results are the average results with 20 trials and are shown in
Table II. Our proposed scheme leads to second-level delays due
to the ciphertext operations, compared with the plaintext-based
scheme. However, the Android insurance App can be run in the
background as services, which does not affect user experience,
since the driving report is only generated when the driver is
Fig. 13. The on-chain costs of core functions defined in the personalized auto
insurance contract.
driving. In the meantime, IC’s server can be more powerful
cloud server with multiple threads to support more drivers.
For the on-chain costs, we evaluate the core functions defined
in Fig. 3. The average experiment results with 20 trials are
shown in Fig. 13. The y-axis of Fig. 13 denotes the transaction
confirmation delay of each core function when the function is
triggered, and it can be seen that the transaction confirmation
delay of the proposed scheme and the plaintext-based scheme
are almost the same. The exception is that our proposed scheme
has obvious longer confirmation delay when triggering functions
Record and Evaluate. According to our setting, this situation
happens because the consortium blockchain needs to wait at
least 2 seconds to package a confirmation transaction into a
block. With the setting, no matter how efficient the on-chain
computations can be, e.g., just taking 5 ms to run on-chain
operations, a transaction (that triggers a function) still needs to
wait 2 seconds to be confirmed. It is noticed that except for func-
tions Record and Evaluate, other on-chain operations defined in
our scheme can be done in around 2 seconds, which makes the
transaction delay is around 2 seconds for these functions (similar
to the plaintext-based scheme). Functions Record and Evaluate
require more than 2.5 seconds to run, and thus they have longer
transaction confirmation delay. From another perspective, the
block generation/confirmation delay in the blockchain cannot be
arbitrarily shortened since a short delay may seriously degrade
the blockchain throughput. These reasons together lead to the
result: our proposed scheme has almost the same on-chain delay
as the plaintext-based scheme.
Communication & Storage Overheads: We also evaluate the
communication and on-chain storage overheads. We can store
the hash values of the data in the blockchain while maintaining
the data contents in an off-chain storage such as IPFS. In our
experiments, the size of personalized auto insurance contract is
6.5MB (since we package several open-source java libraries).
The data uploaded by the driver vary according to the size of
the driving data (how many trips), and the data stored in the
blockchain also vary accordingly. For a real trip with around
1500 records, the data size uploaded by a driver is around
327KB, and the on-chain storage is hundreds of bytes (i.e., hash
values).
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
3790 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 72, NO. 3, MARCH 2023
TABLE III
COMPARISON BETWEEN OUR SCHEME AND EXISTING WORKS
VII. RELATED WORKS
In this section, we review existing works on securing personal-
ized car insurance (PCI). Popa et al. [30] proposed an anonymous
scheme for protecting driver privacy in PCI. In their scheme,
drivers’ reports are anonymized by using random tags generated
from homomorphic commitments, and the data such as locations
are bound with random tags. Only a pair of the driver’s reports
can be linked for counting the number of speed violations to
measure the driving safety. To prevent data fraud, an auditable
tamper-evident transponders are installed at drivers’ vehicles
[31]. The similar idea is also adopted by a following work
proposed by Troncoso et al., where a black box is deployed at
the driver’s vehicle [32]. The black box includes sensors such as
GPS modules to collect the necessary information and generate
statistical data for calculating a driver’s insurance premium.
Moreover, third parties named policyholders can use USB sticks
to physically extract detailed data from the black box, and detect
the cheating behavior of the driver.
Instead of being concentrated on privacy protection, Zhou
et al. proposed a privacy attack on PCI where drivers’ trajectories
are recovered based on collected telematics data [33]. They also
proposed a privacy-preserving speed data aggregation protocol
in which the driving safety can be analyzed based on the sum
of the speed data that exceeds a threshold. To prevent data
forgery, they assume that there are two kinds of data collected
from a vehicle: one from the vehicle’s on-board unit and the
other from the driver’s smartphone, and at least one of the data
are unhampered. Based on the assumption, they proposed an
auditing method to compare these two data to detect potential ad-
versaries. The above-mentioned three schemes use aggregation
methods for calculating driving safety scores, while Rizzo et al.
proposed a privacy-preserving driver style recognition protocol
based on secure multi-computations, which can evaluate driving
safety privately under a decision-tree model [34]. There exists
another similar work that applies the K-means model using
secure multi-party computations, but since these protocols are
designed based on a semi-honest adversarial model, they do not
consider the data fraud attack performed by malicious drivers
[35].
Recently, blockchain has been introduced into PCI, as
blockchain can provide many additional properties for PCI,
such as immutable, distributed, and transparent data exchange
and management, which brings many advantages [36], [37],
[38], [39], [40]. Accordingly, Wan et al. proposed a blockchain-
assisted usage-based insurance scheme which relies on hidden-
vector encryption [41]. In their scheme, driving time, speed,
acceleration data are encoded using binaries and encrypted using
the hidden-vector encryption, and the ciphertext are published
in the blockchain that supports privacy-preserving comparison,
which can be used to measure the driving statistics including
the number of speed violations and sudden accelerations/brakes.
To reduce the large storage costs due to the hidden-vector
encryption and binary vectors, Qi et al. built another design based
on compact cryptographic commitments where the binaries are
hidden in the commitments [42]. Average speed and acceleration
for a time period can be extracted from the commitments with
zero-knowledge proof in the blockchain, which can be used for
calculating driving safety scores and insurance premiums. These
two schemes both assume that the driver will faithfully follow
the protocol and the data fraud behavior can be easily detected
as long as the traffic accidents happen.
Table III summarizes the difference between our proposed
scheme and existing works, in terms of: (a) architecture, (b)
driver privacy, (c) model privacy, (d) adversarial model, (e)
public verifiability, (f) fraud resistance, (g) driving safety evalu-
ation model, and (h) permission-based audit. Note that, although
most of the existing works also consider data privacy, their data
privacy definitions are different from our scheme. In the existing
works, the statistics of the driving data such as the aggregated
average speed data will be exposed for evaluating driving safety,
while our work only reveals whether a trip of a driver is safe or
not without leaking any driving data.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
HUANG et al.: BLOCKCHAIN-ASSISTED PERSONALIZED CAR INSURANCE WITH PRIVACY PRESERVATION AND FRAUD RESISTANCE 3791
VIII. CONCLUSION
We have proposed a blockchain-assisted personalized car
insurance scheme, which not only allows auto insurance compa-
nies to analyze drivers’ behavior in a privacy-preserving manner
but also resists fraud attacks launched by malicious drivers.
Since our scheme is designed on a consortium blockchain,
drivers can verify that auto insurance companies indeed use
publicly recognized models to customize their auto premiums
based on long-term driving data, which is more transparent
than centralized schemes. We have conducted formal security
analysis and implemented a proof-of-concept prototype based
on an open-source consortium blockchain to demonstrate our
scheme’s feasibility. For the future work, we will investigate
a new blockchain-assisted privacy-preserving scheme that en-
ables auto insurance companies to transparently and privately
train driving safety evaluation models through federated learn-
ing, and explore more advanced blockchain-assisted vehicular
applications.
REFERENCES
[1] J.-L. Yin and B.-H. Chen, “An advanced driver risk measurement system
for usage-based insurance on big driving data,” IEEE Trans. Intell. Veh.,
vol. 3, no. 4, pp. 585–594, Dec. 2018.
[2] K. Waddell, “What you’re giving up when you let your car insurer track
you in exchange for discounts,” 2021. Accessed: Feb. 28, 2022. [On-
line]. Available: https://www.consumerreports.org/car-insurance/how-
car-insurance-telematics-discounts-really-work-a1549580662/
[3] L. Wang, X. Lin, E. Zima, and C. Ma, “Towards airbnb-like privacy-
enhanced private parking spot sharing based on blockchain,” IEEE Trans.
Veh. Technol., vol. 69, no. 3, pp. 2411–2423, Mar. 2020.
[4] C. Zhang, L. Zhu, and C. Xu, “BPAF: Blockchain-enabled reliable and
privacy-preserving authentication for fog-based IoT devices,” IEEE Con-
sum. Electron. Mag., vol. 11, no. 2, pp. 88–96, Mar. 2022.
[5] Q. Kong, R. Lu, F. Yin, and S. Cui, “Blockchain-based privacy-preserving
driver monitoring for MaaS in the vehicular IoT,” IEEE Trans. Veh.
Technol., vol. 70, no. 4, pp. 3788–3799, Apr. 2021.
[6] X. Shen et al., “Data management for future wireless networks: Archi-
tecture, privacy preservation, and regulation,” IEEE Netw., vol. 35, no. 1,
pp. 8–15, Jan./Feb. 2021.
[7] D. Chulerttiyawong and A. Jamalipour, “A blockchain assisted vehicular
pseudonym issuance and management system for conditional privacy
enhancement,” IEEE Access, vol. 9, pp. 127305–127319, 2021.
[8] S. Gyawali, Y. Qian, and R. Q. Hu, “Machine learning and reputation
based misbehavior detection in vehicular communication networks,” IEEE
Trans. Veh. Technol., vol. 69, no. 8, pp. 8871–8885, Aug. 2020.
[9] A. Viand, P. Jattke, and A. Hithnawi, “SoK: Fully homomorphic encryption
compilers,” in Proc. IEEE Symp. Secur. Privacy, 2021, pp. 1092–1108.
[10] J. Hou, H. Liu, Y. Liu, Y. Wang, P.-J. Wan, and X.-Y. Li, “Model Protec-
tion: Real-time privacy-preserving inference service for model privacy at
the edge,” IEEE Trans. Dependable Secure Comput., early access, Nov.
9, 2021, doi: 10.1109/TDSC.2021.3126315.
[11] P. Paillier, “Public-key cryptosystems based on composite degree resid-
uosity classes,” in Proc. Int. Conf. Theory Appl. Cryptographic Techn.,
1999, pp. 223–238.
[12] C. Zhang, L. Zhu, J. Ni, C. Huang, and X. Shen, “Verifiable and privacy-
preserving traffic flow statistics for advanced traffic management systems,”
IEEE Trans. Veh. Technol., vol. 69, no. 9, pp. 10336–10347, Sep. 2020.
[13] T. Liu, X. Xie, and Y. Zhang, “ZkCNN: Zero knowledge proofs for
convolutional neural network predictions and accuracy,” in Proc. ACM
SIGSAC Conf. Comput. Commun. Secur., 2021, pp. 2968–2985.
[14] Z. Xiong, S. Feng, W. Wang, D. Niyato, P. Wang, and Z. Han, “Cloud/Fog
computing resource management and pricing for blockchain networks,”
IEEE Internet Things J., vol. 6, no. 3, pp. 4585–4600, Jun. 2019.
[15] Z. Xiong, J. Kang, D. Niyato, P. Wang, and H. V. Poor, “Cloud/edge
computing service management in blockchain networks: Multi-leader
multi-follower game-based ADMM for pricing,” IEEE Trans. Serv. Com-
put., vol. 13, no. 2, pp. 356–367, Mar./Apr. 2020.
[16] J. Kang et al., “Optimizing task assignment for reliable blockchain-
empowered federated edge learning,” IEEE Trans. Veh. Technol., vol. 70,
no. 2, pp. 1910–1923, Feb. 2021.
[17] M. Baza et al., “Privacy-preserving blockchain-based energy trading
schemes for electric vehicles,” IEEE Trans. Veh. Technol., vol. 70, no. 9,
pp. 9369–9384, Sep. 2021.
[18] I. Damgård and E. Fujisaki, “A statistically-hiding integer commitment
scheme based on groups with hidden order,” in Proc. Int. Conf. Theory
Appl. Cryptol. Inf. Secur., 2002, pp. 125–142.
[19] C. Huang, R. Lu, J. Ni, and X. Shen, “DAPA: A decentralized, accountable,
and privacy-preserving architecture for car sharing services,” IEEE Trans.
Veh. Technol., vol. 69, no. 5, pp. 4869–4882, May 2020.
[20] Z. Fang et al., “MoCha: Large-scale driving pattern characterization for
usage-based insurance,” in Proc. 27th ACM SIGKDD Conf. Knowl. Discov.
Data Mining, 2021, pp. 2849–2857.
[21] Y. Bian, C. Yang, J. L. Zhao, and L. Liang, “Good drivers pay less: A study
of usage-based vehicle insurance models,” Transp. Res. Part A: Policy
Pract., vol. 107, pp. 20–34, 2018.
[22] M. Winlaw, S. H. Steiner, R. J. MacKay, and A. R. Hilal, “Using telematics
data to find risky driver behaviour,” Accident Anal. Prevention, vol. 131,
pp. 131–136, 2019.
[23] C. Dong, Y. Wang, A. Aldweesh, P. McCorry, and A. van Moorsel,
“Betrayal, distrust, and rationality: Smart counter-collusion contracts for
verifiable cloud computing,” in Proc. ACM SIGSAC Conf. Comput. Com-
mun. Secur., 2017, pp. 211–227.
[24] R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin, “Secure distributed key
generation for discrete-log based cryptosystems,” J. Cryptology, vol. 20,
no. 1, pp. 51–83, 2007.
[25] C. Hazay, G. L. Mikkelsen, T. Rabin, T. Toft, and A. A. Nicolosi, “Efficient
RSA key generation and threshold paillier in the two-party setting,” J.
Cryptology, vol. 32, no. 2, pp. 265–323, 2019.
[26] G. Couteau, T. Peters, and D. Pointcheval, “Removing the strong RSA
assumption from arguments over the integers,” in Proc. Int. Conf. Theory
Appl. Cryptographic Techn., 2017, pp. 321–350.
[27] B. von Stengel, “Recursive inspection games,” Math. Operations Res.,
vol. 41, no. 3, pp. 935–952, 2016.
[28] Y. Lindell, “How to simulate it–a tutorial on the simulation proof tech-
nique,” in Proc. Tut. Found. Cryptography, 2017, pp. 277–346.
[29] E. Androulaki et al., “Hyperledger fabric: A distributed operating system
for permissioned blockchains,” in Proc. 13th EuroSys Conf., 2018, pp. 1–
15.
[30] R. A. Popa, H. Balakrishnan, and A. J. Blumberg, “VPriv: Protecting
privacy in location-based vehicular services,” in Proc. 18th Conf. USENIX
Secur. Symp., 2009, pp. 335–350.
[31] K. Fu and W. Xu, “Risks of trusting the physics of sensors,” Commun.
ACM, vol. 61, no. 2, pp. 20–23, 2018.
[32] C. Troncoso et al., “PriPAYD: Privacy-friendly pay-as-you-drive in-
surance,” IEEE Trans. Dependable Secure Comput., vol. 8, no. 5,
pp. 742–755, Sep./Oct. 2011.
[33] L. Zhou, S. Du, H. Zhu, C. Chen, K. Ota, and M. Dong, “Location
privacy in usage-based automotive insurance: Attacks and countermea-
sures,” IEEE Trans. Inf. Forensics Secur., vol. 14, no. 1, pp. 196–211,
Jan. 2019.
[34] N. Rizzo, E. Sprissler, Y. Hong, and S. Goel, “Privacy preserving driving
style recognition,” in Proc. Int. Conf. Connected Veh. Expo, 2015, pp. 232–
237.
[35] O. E. Omri, A. Boudguiga, M. Izabachene, and W. Klaudel, “Privacy-
preserving k-means clustering: An application to driving style recogni-
tion,” in Proc. Int. Conf. Netw. Syst. Secur., 2019, pp. 685–696.
[36] A. Dorri, M. Steger, S. S. Kanhere, and R. Jurdak, “BlockChain: A
distributed solution to automotive security and privacy,” IEEE Commun.
Mag., vol. 55, no. 12, pp. 119–125, Dec. 2017.
[37] L. Campanile, M. Iacono, A. H. Levis, F. Marulli, and M. Mastroianni,
“Privacy regulations, smart roads, blockchain, and liability insurance:
Putting technologies to work,” IEEE Secur. Privacy, vol. 19, no. 1,
pp. 34–43, Jan./Feb. 2021.
[38] Y. Hui et al., “BCC: Blockchain-based collaborative crowdsensing in
autonomous vehicular networks,” IEEE Internet Things J., vol. 9, no. 6,
pp. 4518–4532, Mar. 2022.
[39] X. Shen et al., “Blockchain for transparent data management toward 6G,”
Engineering, vol. 8, pp. 74–85, 2022.
[40] Y. Tian, T. Li, J. Xiong, M. Z. A. Bhuiyan, J. Ma, and C. Peng,
“A blockchain-based machine learning framework for edge services
in IIoT,” IEEE Trans. Ind. Inform., vol. 18, no. 3, pp. 1918–1929,
Mar. 2022.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
https://www.consumerreports.org/car-insurance/how-car-insurance-telematics-discounts-really-work-a1549580662/
https://www.consumerreports.org/car-insurance/how-car-insurance-telematics-discounts-really-work-a1549580662/
https://dx.doi.org/10.1109/TDSC.2021.3126315
3792 IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 72, NO. 3, MARCH 2023
[41] Z. Wan, Z. Guan, and X. Cheng, “PRIDE: A private and decentralized
usage-based insurance using blockchain,” in Proc. IEEE Int. Conf. Internet
Things IEEE Green Comput. Commun. IEEE Cyber Phys. Soc. Comput.
IEEE Smart Data, 2018, pp. 1349–1354.
[42] H. Qi, Z. Wan, Z. Guan, and X. Cheng, “Scalable decentralized privacy-
preserving usage-based insurance for vehicles,” IEEE Internet Things J.,
vol. 8, no. 6, pp. 4472–4484, Mar. 2021.
Cheng Huang (Member, IEEE) received the B.Eng.
and M.Eng. degrees in information security from
Xidian University, Xi’an, China, in 2013 and 2016,
respectively, and the Ph.D. degree in electrical and
computer engineering, University of Waterloo, Wa-
terloo, ON, Canada, in 2020. He is currently a Post-
doctoral Research Fellow with the Department of
Electrical and Computer Engineering, University of
Waterloo. His research interests include the areas of
applied cryptography, cyber security, and privacy in
the mobile network.
Wei Wang (Member, IEEE) received the B.Eng.
degree in information countermeasure technology
and the M.Eng. degree in signal and information
processing from Xidian University, Xi’an, China, in
2011 and 2014, respectively, and the Ph.D. degree in
electrical and electronic engineering from Nanyang
Technological University, Singapore, in 2018. From
September 2018 to August 2019, he was a Postdoc-
toral Fellow with the Department of Electrical and
Computer Engineering, University of Waterloo, Wa-
terloo, ON, Canada. He is Currently a Professor with
the Nanjing University of Aeronautics and Astronautics, Nanjing, China. His
research interests include wireless communications, space-air-ground integrated
networks, wireless security, and blockchain. He was the recipient of the Chinese
Government Award for Outstanding Self-financed Students Abroad in 2018, and
Young Elite Scientist Sponsorship Program, China Association for Science and
Technology in 2021.
Dongxiao Liu (Member, IEEE) received the Ph.D.
degree from the Department of Electrical and Com-
puter Engineering, University of Waterloo, Waterloo,
ON, Canada, in 2020. He is currently a Postdoctoral
Research Fellow with the Department of Electrical
and Computer Engineering, University of Waterloo.
His research interests include security and privacy
in intelligent transportation systems, blockchain, and
mobile networks.
Rongxing Lu (Fellow, IEEE) received the Ph.D. de-
gree from the Department of Electrical and Computer
Engineering, University of Waterloo, Waterloo, ON,
Canada, in 2012. From May 2012 to April 2013,
he was a Postdoctoral Fellow with the University
of Waterloo. He is currently a Mastercard IoT Re-
search Chair, University Research Scholar, and an
Associate Professor with the Faculty of Computer
Science, University of New Brunswick, Fredericton,
NB, Canada. Before that, he was an Assistant Pro-
fessor with the School of Electrical and Electronic
Engineering, Nanyang Technological University, Singapore, from April 2013
to August 2016. He has authored or coauthored extensively in his areas of
expertise. His research interests include applied cryptography, privacy enhancing
technologies, and IoT-big data security, and privacy. He was the recipient of nine
best (student) paper awards from some reputable journals and conferences, most
prestigious Governor General’s Gold Medal, when he received the Ph.D. degree,
and Eighth IEEE Communications Society Asia Pacific Outstanding Young
Researcher Award in 2013. He is also the Chair of IEEE Communications and
Information Security Technical Committee (ComSoc CIS- TC), and Founding
Co-Chair of IEEE TEMS Blockchain and Distributed Ledgers Technologies
Technical Committee. He was also the recipient of the Winner of 2016–2017
Excellence in Teaching Award, FCS, UNB.
Xuemin (Sherman) Shen (Fellow, IEEE) received
the Ph.D. degree in electrical engineering from Rut-
gers University, New Brunswick, NJ, USA, in 1990.
He is currently a University Professor with the De-
partment of Electrical and Computer Engineering,
University of Waterloo, Waterloo, ON, Canada. His
research interests include network resource manage-
ment, wireless network security, Internet of Things,
5G and beyond, and vehicular ad hoc and sensor
networks. He is a registered Professional Engineer of
Ontario, Canada, an Engineering Institute of Canada
Fellow, a Canadian Academy of Engineering Fellow, Royal Society of Canada
Fellow, Chinese Academy of Engineering Foreign Member, and Distinguished
Lecturer of the IEEE Vehicular Technology Society and Communications Soci-
ety. Dr. Shen was the recipient of the Canadian Award for Telecommunications
Research from the Canadian Society of Information Theory in 2021, R.A. Fes-
senden Award in 2019 from IEEE, Canada, Award of Merit from the Federation
of Chinese Canadian Professionals (Ontario) in 2019, James Evans Avant Garde
Award in 2018 from the IEEE Vehicular Technology Society, Joseph LoCicero
Award in 2015 and Education Award in 2017 from the IEEE Communications
Society, and Technical Recognition Award from Wireless Communications
Technical Committee (2019) and AHSN Technical Committee (2013). He was
also the recipient of the Excellent Graduate Supervision Award in 2006 from
the University of Waterloo and Premier’s Research Excellence Award (PREA)
in 2003 from the Province of Ontario, Canada. He was the Technical Program
Committee Chair/Co-Chair for IEEE Globecom’ 16, IEEE Infocom’14, IEEE
VTC’10 Fall, IEEE Globecom’07, and Chair for the IEEE Communications
Society Technical Committee on Wireless Communications. Dr. Shen is the
President of the IEEE Communications Society. He was the Vice President
for Technical and Educational Activities, Vice President for Publications, a
Member-at-Large on the Board of Governors, the Chair of the Distinguished
Lecturer Selection Committee, a Member of IEEE Fellow Selection Committee
of the ComSoc. He was the Editor-in-Chief of the IEEE IOT JOURNAL, IEEE
NETWORK, and IET Communications.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:11:51 UTC from IEEE Xplore.  Restrictions apply. 
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice