Dissecting Mining Pools of Bitcoin Network: Measurement, Analysis and Modeling
Dissecting Mining Pools of Bitcoin Network:
Measurement, Analysis and Modeling
Canhui Wang , Student Member, IEEE,
Xiaowen Chu , Senior Member, IEEE, and Yang Qin, Senior Member, IEEE
Abstract—Bitcoin network is one of the most popular blockchain
systems. Mining pools are the main components of the Bitcoin
network that invest a large amount of computing power to
maximize their expected mining payoffs, which guarantees the
security of the Bitcoin network. Although many existing works
about mining pools are available, the long-term evolution of mining
pools, and their effects on both the Bitcoin system and end-users,
remain to be investigated. To fill this gap, we trace over 2.54
hundred thousand blocks from Feb 2016 to Nov 2020 and collect
over 12 million unconfirmed transactions from Mar 2018 to Nov
2020. We then conduct a broad range of analyses, including the
pool evolution, labeled transactions, and labeled blocks. We make
the following observations from our measured data: 1) A few
mining pools control most of the peer-to-peer network’s computing
power. 2) The long-term computing power of top mining pools
grows exponentially while its continuous-time mining strategy
decreases linearly. 3) The computing power of the Bitcoin network
converges to the Nash equilibrium. We then propose game-based
strategies for mining activity analysis, i.e., the best-response
strategies for mining pools when the mining revenue increases or
decreases sharply. Moreover, we study the transaction fee dilemma
of mining pools and the transaction fee strategies for end-users.
Our models and analysis can help to understand and improve the
Bitcoin system quantitatively.
Index Terms—Bitcoin network, mining pool, proof-of-work,
mining strategy, incentive mechanism.
I. INTRODUCTION
B ITCOIN (BTC) is one of the most popular cryptocurren-
cies that was first proposed in 2008. Each BTC is associ-
ated with a series of cryptographic operations based on the
asymmetric-key algorithm and the digital signature algorithm.
It hence gains specific cryptographic properties [1], [2], [3],
[4], such as data integrity and non-repudiation. Another out-
standing property of Bitcoin is that it does not rely on any
centralized third party; instead, it resorts to an immutable dis-
tributed ledger technology (DLT) called blockchain [1], [5] for
transaction clearing. A blockchain is essentially a chain of
blocks that contains all valid historical transactions for future
reference, and thus can determine whether a new coming trans-
action is valid or not. Blockchains are continuously updated
and completely replicated among participants on the Bitcoin
peer-to-peer (P2P) network. How to achieve a consistent state
among these blockchain replicas across a large-scale P2P net-
work is a classical consensus problem.
Proof of Work (PoW) is Nakamoto’s solution to the classical
consensus problem. People traditionally used the Byzantine
Fault Tolerance (BFT) protocol to achieve a consistent state.
Although a loose security model allows PoW consensus algo-
rithms to tolerate more malicious participants than BFT con-
sensus algorithms [6], [7], [8], it brings performance issues to
PoW. The Bitcoin protocol’s design of ten minutes per block,
on the one hand, contributes to an expensive cost of double-
spending attacks on the Bitcoin network; but on the other hand,
limits the system throughput by roughly seven transactions per
second, which might be too low to satisfy many real-world
applications. The PoW’s security relies on an incentive
scheme [9], [10], [11], in which a group of miners compete to
solve cryptographic hash puzzles round by round. The miner
who first settles the puzzle might create a new block, append
the new block to the Bitcoin blockchain, and eventually get
some BTC cryptocurrencies as a mining reward. Driven by this
scheme, a majority of miners will follow up on the PoW proto-
col, from which the PoW’s security will be guaranteed [12],
[13], [14].
However, with the sharp increase of the BTC market price,
the Bitcoin network’s computing power, i.e., the hash rate,
tends to increase sharply. Such a trend results in a problem that
small miners may find it difficult to settle the puzzle in ten
minutes, and thus a new mining approach called pooled mining
appeared in 2010. Specifically, with this approach, miners in a
mining pool trust the operator of the mining pool. First of all,
the operator proposes a new block, in which most of the fields
have been filled by the operator, including the field of previous
block hash, the fields of coinbase transaction and non-coinbase
transactions [15], [16], [17], except the field of nonce that
requires all miners to work on it cooperatively. Second, the
operator divides the nonce value into many small pieces of
tasks and assigns them to miners. Third, once a solution is
found by a miner, and the operator’s coinbase transaction
Manuscript received 13 July 2022; revised 20 September 2022; accepted 25
September 2022. Date of publication 3 October 2022; date of current version
6 January 2023. This work was supported by Hong Kong CRF under Grant
C2004-21GF. Recommended for acceptance by Dr. Fan Wu. (Corresponding
author: Xiaowen Chu).
Canhui Wang is with the Department of Computer Science, Hong Kong
Baptist University, Kowloon Tong, Hong Kong (e-mail: chwang@comp.
hkbu.edu.hk).
Xiaowen Chu is with the Data Science and Analytics Thrust, The Hong
Kong University of Science and Technology, Clear Water Bay, Hong Kong,
and also with the Department of Computer Science, Hong Kong Baptist Uni-
versity, Kowloon Tong, Hong Kong (e-mail: xwchu@ust.hk).
Yang Qin is with the Department of Computer Science, Harbin Institute of
Technology, Shenzhen 150001, China (e-mail: csyqin@hitsz.edu.cn).
Digital Object Identifier 10.1109/TNSE.2022.3210537
398 IEEE TRANSACTIONS ON NETWORK SCIENCE AND ENGINEERING, VOL. 10, NO. 1, JANUARY/FEBRUARY 2023
2327-4697 © 2022 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.
See ht_tps://www.ieee.org/publications/rights/index.html for more information.
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
https://orcid.org/0000-0001-7869-9083
https://orcid.org/0000-0001-7869-9083
https://orcid.org/0000-0001-7869-9083
https://orcid.org/0000-0001-7869-9083
https://orcid.org/0000-0001-7869-9083
https://orcid.org/0000-0001-9745-4372
https://orcid.org/0000-0001-9745-4372
https://orcid.org/0000-0001-9745-4372
https://orcid.org/0000-0001-9745-4372
https://orcid.org/0000-0001-9745-4372
mailto:
mailto:
mailto:
mailto:
receives the corresponding mining reward, the operator will
redistribute part of the mining reward to all participating miners
of the mining pool according to a predefined agreement. Gener-
ally, this mining approach helps reduce mining risks and stabi-
lize the expected mining payoffs, and thus quickly dominates
the Bitcoin network.
Our motivations of measurement, analysis, and modeling of
the Bitcoin mining pools can be summarized as follows. First,
mining pools control most of the Bitcoin computing power
and impact Bitcoin’s security. Unlike small PoW-based block-
chains such as Bitcoin-Gold that suffered from the double-
spending attacks in May 2018 [18] due to low computing
power, Bitcoin has vast computing power such that attacks
require a tremendous amount of computing power. The cost of
these computing power could be too expensive to become eco-
nomically feasible, and hence the security of the Bitcoin
blockchain is guaranteed. Many recent works [2], [12], [19],
[20], [21] studied the impact of computing power distribution
on the security of the Bitcoin system. For example, a recent
work [19] formulated the interactive competition among min-
ing pools as a general-sum stochastic game and proposed strat-
egies to maximize the expected mining payoff of DDoS
attacks on the Bitcoin network. Many works on mining behav-
ior were based on simulation [19], [22], [23]. Different from
these works, we measured the long-term mining behavior of
mining pools and aim to dive into the underlying principle of
the mining behaviors which are essential for better under-
standing both the mining mechanism and the PoW-based
blockchain.
Second, mining competition is intense among mining pools,
and many related works [19], [22], [23], [24] studied strategies
to maximize the expected mining payoff of a mining pool.
However, few related works consider the impacts of game
dynamics on the Bitcoin mining game. An illustration of the
game dynamics is shown in Fig. 1, where mining pools in the
open Bitcoin playground are exploring rational strategies to
maximize their own expected payoffs over time. A mining
pool can freely choose strategies to maximize the expected
mining payoff via adjusting its computing power, and miners
can freely join or leave a mining pool or even create a new
mining pool. The game dynamics greatly affect the computing
power of a PoW-based blockchain, i.e., without the game
dynamics, the computing power of a PoW-based blockchain
may not be competitive against malicious attackers since no
new mining pools join the mining game to challenge the exist-
ing mining pools. The game dynamics are also crucial for the
expected mining payoff of mining pools, i.e., the mining strat-
egy of mining pools is continually adjusted in a real-world
playground. In particular, in this setting, our research question
is how mining pools respond to the inevitable mining revenue
fluctuation caused by events like halving Bitcoin block
rewards or BTC market price fluctuation.
Third, mining pools process most of the new transactions on
the Bitcoin network. These mining pools apply a set of poli-
cies called transaction selection policy to determine whether a
new transaction will be enrolled in the next block. Recent
measurements [24], [25], [26] showed that a feerate-first heu-
ristic could well explain the transaction selection policy of
mining pools. We aim to analyze the logic behind mining
pools’ transaction selection policy. It helps to understand why
mining pools apply the transaction selection policy and how
end-users respond to the policy. The analysis is important for
both mining pools and Bitcoin end-users.
The main contributions of this paper can be summarized as
follows.
� We perform long-term measurements and analysis on
both confirmed transactions and blocks from Feb 2016
to Nov 2020, and unconfirmed transactions of the Bit-
coin network from Mar 2018 to Nov 2020. Besides, we
develop a measurement framework and open-source
toolkit for processing Bitcoin transactions and blocks.
� We observe the long-term mining behavior of mining
pools and find that the mining pool’s computing power
grows exponentially while its continuous-time mining
strategy decreases linearly.
� Based on the observation, we model and analyze the
relationship between mining revenue and mining
behavior. We find that mining revenue plays an essen-
tial role in Bitcoin’s security level; specifically, given a
mining revenue, the computing power of the Bitcoin
network will converge to a Nash equilibrium point.
� We apply our model to the inevitable mining revenue
fluctuation such as halving Bitcoin block rewards and
market price fluctuation. Then we propose game-based
strategies for mining pools when mining revenue
increases or decreases sharply.
� We model the transaction selection policy of mining
pools as a transaction fee maximization problem and
consider the double-spending attack as an expected pay-
off maximization problem. We find that the transaction
fee of a coming transaction depends on its size in vbytes
instead of the amount of BTCs transacted.
The remainder of this paper is organized as follows.
Section II discusses related work in Bitcoin network measure-
ment and modeling. Section III presents the measurement
framework. Section IV shows the measurement results, mod-
els, and analysis of mining pools. Section V discusses the
impact of mining pools on end-users. Finally, Section VI con-
cludes this paper.
Fig. 1. An illustration of the game dynamics in the Bitcoin mining game is
shown, where there are two main components: existing mining pools (e.g., A,
B, C) and new miners. The game dynamics mean that mining activities are in
an open playground, where 1) the existing mining pool can freely choose strat-
egies to maximize its expected mining payoff via adjusting its computing
power, e.g., the mining pool can purchase (or sell) new miners to increase (or
decrease) its computing power; 2) miners and new miners can freely join or
leave a mining pool, or even create a new mining pool.
WANG et al.: DISSECTING MINING POOLS OF BITCOIN NETWORK: MEASUREMENT, ANALYSIS AND MODELING 399
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
II. RELATED WORK
Most related research works on the Bitcoin network can be
categorized into two types. First, measurement and analysis
are essential to understanding the Bitcoin network. Some stud-
ies [15], [27], [28] collect and analyze the information from
the Bitcoin network. Wu et al. [15] proposed a Bitcoin transac-
tion network analytic method for facilitating blockchain foren-
sic investigation based on Petri Net. They extended Petri Net
to define the static and dynamic features of Bitcoin transac-
tions. Then they applied nineteen features to define Bitcoin
transaction patterns for analyzing and finding suspected
addresses and used the model to improve the accuracy of sus-
pected address identification.
Second, some works [29], [30] focus on modeling the Bit-
coin system. In particular, several works [23], [31], [32], [33]
apply game theory to analyze the Bitcoin mining activity.
Haghighat et al. [31] considered Bitcoin attacks as a stochastic
game with finitely many states and actions. Then they used a
reinforcement learning method to analyze the important fac-
tors of block withholding attack on the Bitcoin network. Ding
et al. [32] modeled the interaction between the blockchain
platform and IoT devices as a Stackelberg game and aimed to
attract IoT devices to purchase more computational power
from edge servers to join the mining process. Liu et al. [33]
proposed a blockchain mining framework for mobile edge
computing, where the computing-intensive mining tasks were
offloaded to nearby edge computing nodes and the crypto-
graphic hashes of blocks were cached on the server. Guo
et al. [23] modeled the edge computing on a mining network
as a collaborative game. They adopted a Stackelberg game to
model interactions between edge cloud operators and different
mining networks to obtain the optimal resource price and
device resource demands.
However, there are a few limitations of the existing works.
First, irrational factors [34] such as market sentiment would
highly affect the empirical research on Bitcoin price. Instead
of predicting the Bitcoin price, we will focus on the effects of
Bitcoin price on the Bitcoin mining revenue, which directly
affects the computing power of mining pools. Second, few
related works considered the effects of new mining pools on
mining activity. We will demonstrate the importance of new
mining pools and show that the ratio of daily mining revenue
to daily computing power would converge to a low-incentive
state due to the existence of new mining pools. Third, different
from our prior work [35], this work focuses on modeling the
mining activities of mining pools. In particular, we care about
the events when the revenue fluctuates dramatically such as
halving of block rewards and BTC price variation. Note that
these events are essential for mining pools, which motivate us
to apply game theory models to understand how mining pools
respond to the mining revenue fluctuation.
III. MEASUREMENT SETUP
This section will set up a measurement framework to collect
data from the Bitcoin network, including unconfirmed transac-
tions, confirmed transactions, confirmed blocks, and block
creators. Transactions on the Bitcoin network can be grouped
into two categories: confirmed transactions and unconfirmed
transactions. Confirmed transactions are valid transactions ver-
ified and accepted by block creators, where each confirmed
transaction will be stored in one specific confirmed block, and a
chain of these confirmed blocks is called a blockchain. From
confirmed transactions, we can identify the corresponding
block creator and then analyze the mining behavior of mining
pools. Unconfirmed transactions are pending transactions not
accepted by block creators yet. They are stored in a local mem-
ory space called Mempool. From unconfirmed transactions, we
can measure the information like transaction delay (i.e., the
total time a new transaction takes to be accepted by a block cre-
ator), and transaction selection policy (i.e., the policy adopted
by mining pools for selecting unconfirmed transactions into a
new block).
Fig. 2 shows our measurement framework for collecting rel-
evant information for both confirmed transactions (e.g., block
creator) and unconfirmed transactions (e.g., a list of observa-
tion times for each unconfirmed transaction). We maintain
one Bitcoin Full Node in the long term. Specifically, in
step 1), we set up the measurement framework to synchronize
real-world blockchain data with other peers on the Bitcoin net-
work via the network protocol of Bitcoin Core v0.14.2. One
common technical problem is that Bitcoin transaction data
processing is slow due to the inevitable increasing transaction
data of around 312 GB until Nov 25, 2020, and hence massive
transaction indexes. Our measurement framework provides a
scalable method to handle this problem in parallel among mul-
tiple peers. Mining pool labels can be obtained because most
mining pools will show their achievements in order to attract
more users. People can also connect to a mining pool’s public
network IP address and trace the blocks it created. Based on
our study, we found that 97.43% of confirmed blocks with cor-
responding mining pool labels can be obtained from block-
chain explorer services such as Blockchain.Info and BTC.
com. Then, in steps 2) and 3), we develop a Python crawler to
collect mining pool labels from the blockchain explore service
to identify the block creator of each confirmed block. Mean-
while, we develop Bitcoin RPC-based Python scripts to inter-
act with the Bitcoin Full Node, from which most information
about transactions and blocks, including transaction size,
transaction creation timestamp, block size, block creation
Fig. 2. The measurement framework.
400 IEEE TRANSACTIONS ON NETWORK SCIENCE AND ENGINEERING, VOL. 10, NO. 1, JANUARY/FEBRUARY 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
timestamp, the number of transactions, protocol version, are
available.
However, both the transaction creation timestamp and block
creation timestamp in the blockchain may have a problem of dif-
ferent system clocks. As a Bitcoin peer, we propose Algorithm 1
to solve the problem of different system clocks of different peers
on the Bitcoin network. Specifically, we use the local system
clock as the standard clock. We run the Bitcoin Full Node with
initial configuration of ‘txindex=1’. Then we perform a full scan
of unconfirmed transactions at local Mempool using the
‘bitcoin-cli getrawmempool true’ command every two seconds,
and maintain a list of first observation time for unconfirmed
transactions, where the first observation time of an unconfirmed
transaction is available using the command ‘bitcoin-cli
getmempoolentry’. And the observed block creation timestamp
is available at ‘debug.log’ file in the Bitcoin home directory. In
our method, we trace each unconfirmed transaction every two
seconds, and record the time when we first observe it. This
method works efficiently especially for thousands of uncon-
firmed transactions in localMempool since it does not need extra
Bitcoin queries about the first observation times of unconfirmed
transactions. Our method brings an extra latency of up to two
seconds for each unconfirmed transaction, which is tolerable as
compared to the 600 seconds of Bitcoin block time.
Another problem is that there is nomining pool label in block-
chain data. We propose Algorithm 2 to solve this problem,
where we obtain the corresponding block creators of 254,566
confirmed blocks during the measurement span via interacting
with the blockchain explorer service BTC.com. Besides, for
more block samples, we collect the timestamp that BTC.com
first observed a block. We then used this timestamp as the stan-
dard timestamp to calculate the block time (i.e., the duration of
generating a new block).
Table I shows the label processing results, where for those
blocks whose mining pool labels are available, we group
them into known pools. Conversely, for those blocks whose
mining pool labels are unavailable, we group them into
unknown pools. We can see that 97.43 percent of block crea-
tors are available, and only 2.57 percent of block creators are
unavailable.
Table II shows an overview of top 25 mining pools during
the measurement span from February 26, 2016 to November
25, 2020. The measurement span began on February 26, 2016,
since many top mining pools such as BTC.com and ViaBTC
appeared since then. And the Bitcoin network’s computing
power and the Bitcoin price increased dramatically since then.
There are many public mining pools on the Bitcoin network
according to blockchain explorer services. We crawl blocks of
mining pools and trace relevant information, such as alias, the
number of blocks, and time span. In the following sections,
Algorithm 1. Unconfirmed Transaction Timestamp.
Input: Each unconfirmed transaction (transaction id) at Mempool.
Output: The first observation time list for each transaction id at
Mempool.
1: while number of unconfirmed transactions at Mempool > 0 do
2: request the Bitcoin Full Node for each unconfirmed transaction
(transaction id) every two seconds;
3: if the unconfirmed transaction (transaction id) has not yet been
removed from Mempool and not at the first observation time
list then
4: append the first observation time of the unconfirmed
transaction (transaction id) to the first observation time list,
where the first observation time of the unconfirmed
transaction is available using the command ‘bitcoin-cli
getmempoolentry’;
5: else
6: continue;
TABLE I
LABEL PROCESSING RESULTS
TABLE II
AN OVERVIEW OF THE TOP 25 BITCOIN MINING POOLS
Algorithm 2. Label Processing Algorithm.
Input: Each confirmed block (block id); The data server BTC.com.
Output: Each confirmed block (block id), labeled with
corresponding mining pool label.
1: while number of confirmed blocks > 0 do
request the data server for each confirmed block (block id).
2: if successfully get the mining pool label for the confirmed
block (block id) then
3: update themining pool label for the confirmed block
(block id);
4: else
5: label the confirmed block (block id) as ‘unknown’;
WANG et al.: DISSECTING MINING POOLS OF BITCOIN NETWORK: MEASUREMENT, ANALYSIS AND MODELING 401
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
for simplicity, we will mainly focus on studying the top four
mining pools, i.e., AntPool, F2Pool, BTC.com, and ViaBTC.
IV. MEASUREMENT RESULTS AND MODELS
This section will present our measurement results of the Bit-
coin network, including the computing power distribution, the
evolution of mining pools, and transaction delay. Moreover,
to quantitatively understand the underlying mechanism of
PoW-based blockchains, we propose game-based models to
analyze these measurement results.
A. Notations and Assumptions
Table III summarizes the key notations. There are a total of
N mining pools which play a PoW-based mining game round
by round. Each round takes d seconds on average, e.g.,
d ¼ 600 seconds for the Bitcoin network. The Bitcoin’s mar-
ket price at time t is denoted by pðtÞ. The hash rate of mining
pool i at time t is denoted by hiðtÞ. Although mining pools
may have different mining costs in different countries, to
make it simple, we consider the average cost per hash of min-
ing pools on the Bitcoin network and all mining pools share
the same mining cost c.
Let an equal-length time interval ðtk�1; tk� be Ik where k is a
positive integer. The total mined Bitcoin block reward during
this interval is denoted by bðIkÞ. The total mined transaction
fee during this interval is denoted by eðIkÞ. We use a payoff
function fiðIkÞ to represent the net gain of mining pool i in
interval Ik, which equals the market value of the mined Bit-
coins and transaction fees minus the cost of mining. We
assume that mining pools are immediately rewarded [36],
[37] after each interval. Also, we assume that both the
BTC price and transaction fee fluctuate among intervals
and they are stable within each interval. Based on the
PoW-based mining mechanism, a mining pool’s expected
mining reward is proportional to the number of hashes it
invested in this interval. Therefore, at the end of the
interval Ik, the expected payoff function of mining pool i
can be defined as follows,
E fiðIkÞ½ � ¼
pðtkÞ bðIkÞ þ eðIkÞ½ � R tktk�1
hiðtÞdtPN
i¼1
R tk
tk�1
hiðtÞdt
� c
Z tk
tk�1
hiðtÞdt (1)
where 8t 2 ðtk�1; tk�, hiðtÞ > 0, meaning that mining pool i
is always alive in this interval. The integral
R tk
tk�1
hiðtÞdt repre-
sents the number of hashes of mining pool i in this interval.
The summation term
PN
i¼1
R tk
tk�1
hiðtÞdt represents the number
of hashes of the Bitcoin network in this interval.
We assume that the mining game among mining pools is a
perfect game. It is reasonable because mining pools in prac-
tice can know all the previous game results and hence know
other mining pools’ past strategies. Moreover, we assume
that mining pools are in a non-cooperative mining game,
meaning that each mining pool does not know the opponent’s
next strategy. To make it simple, we consider that it is a
static game, in which all mining pools choose next strategies
simultaneously.
At the end of an interval, we assume that a mining pool
takes a certain strategy to determine the number of its hashes
for the next interval. We define the mining strategy as follows,
R tkþDt
tk�1þDt
hiðtÞdt�
R tk
tk�1
hiðtÞdt
Dt
R tk
tk�1
hiðtÞdt
(2)
More details about themining strategy can be found inAppendix
A(available at: https://github.com/Canhui/AppendixBTC).
Now, we define siðIkÞ, the strategy of mining pool i in the
interval Ik, as the discrete-time mining strategy with Dt ¼
jtkþ1 � tkj, i.e., the length of one interval, as follows,
siðIkÞ ¼
R tkþ tkþ1�tkj j
tk�1þ tkþ1�tkj j hiðtÞdt�
R tk
tk�1
hiðtÞdt
tkþ1 � tkj j R tktk�1
hiðtÞdt
¼
R tkþ1
tk
hiðtÞdt�
R tk
tk�1
hiðtÞdtR tk
tk�1
hiðtÞdt
(3)
TABLE III
KEY NOTATIONS
402 IEEE TRANSACTIONS ON NETWORK SCIENCE AND ENGINEERING, VOL. 10, NO. 1, JANUARY/FEBRUARY 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
https://github.com/Canhui/AppendixBTC
where the strategies of N mining pools in the interval Ik, lead
to a strategy combination s�ðIkÞ ¼ fs1ðIkÞ; s2ðIkÞ; s3ðIkÞ; . . . ;
sNðIkÞg. Note that the expected payoff function of mining
pool i in the next interval Ikþ1 depends on the strategy combi-
nation in the current interval Ik.
We assume that all mining pools are rational. Then, we ratio-
nalize the mining activity of each mining pool as a payoff-maxi-
mization game. Specifically, at the end of an interval say Ik, the
objective function of mining pool i is to maximize its expected
mining payoff function in the next interval Ikþ1 as follows,
max:
siðIkÞ
E fiðIkþ1Þ½ � (4)
To achieve this objective function, mining pool i will try to
find a good strategy siðIkÞ, where i’s strategy depends on its
opponents’ strategies, and each mining pool does not know
what the next interval’s strategies the opponents will take in
such a non-cooperative mining game. For the purpose of game
analysis, we have the following definitions.
Definition 4.1 (Strictly Dominant Strategy): At the end of
an interval Ik, the number of hashes of mining pool i isR tk
tk�1
hiðtÞdt. Given any two candidate strategies siðIkÞ
and si0 ðIkÞ. In the next interval Ikþ1, the numbers of hashes of
mining pool i are
R tkþ1
tk
hiðtÞdt ¼ ð1þ siðIkÞÞ
R tk
tk�1
hiðtÞdt
and
R tkþ1
tk
hi0 ðtÞdt ¼ ð1þ si0 ðIkÞÞ
R tk
tk�1
hiðtÞdt. The corre-
sponding expected mining payoffs are E½fiðIkþ1Þ� and
E½fi0 ðIkþ1Þ�. If E½fiðIkþ1Þ� > E½fi0 ðIkþ1Þ�, then we say siðIkÞ
is a strictly dominant strategy.
Definition 4.2 (Weakly Dominant Strategy): At the end of an
interval Ik, the number of hashes of mining pool i is
R tk
tk�1
hiðtÞdt. Given any two candidate strategies siðIkÞ and si0 ðIkÞ,
if E½fiðIkþ1Þ� � E½fi0 ðIkþ1Þ�, then we say siðIkÞ is a weakly
dominant strategy.
Definition 4.3 (Nash Equilibrium): At the end of an
interval Ik, the numbers of hashes of mining pools are
R tk
tk�1
h1ðtÞdt,
R tk
tk�1
h2ðtÞdt, � � � , R tktk�1
hNðtÞdt, respectively. Nash
equilibrium holds if there exists a strategy combination s�ðIkÞ ¼
fs1ðIkÞ; s2ðIkÞ; . . . ; sNðIkÞg such that for any other strategy
combination s0ðIkÞ ¼ fs10 ðIkÞ; s20 ðIkÞ; . . . ; sN 0 ðIkÞg, all the
following inequalities hold in the next interval Ikþ1,
E f1ðIkþ1Þ½ � � E f10 ðIkþ1Þ½ �
E f2ðIkþ1Þ½ � � E f20 ðIkþ1Þ½ �
� � �
E fNðIkþ1Þ½ � � E fN 0 ðIkþ1Þ½ �
8>><
>>:
meaning that no rational mining pool has motivation to devi-
ate from s�ðIkÞ. Besides, every single strategy in s�ðIkÞ is
called a best-response strategy for the corresponding mining
pool.
Definition 4.4 (Profitable): At the end of an interval Ik, the
number of hashes of the Bitcoin network is
PN
i¼1
R tk
tk�1
hiðtÞdt.
If
pðtkÞ½bðIkÞþeðIkÞ�PN
i¼1
R tk
tk�1
hiðtÞdt
> c, then we say mining activities are prof-
itable. Otherwise, we say mining activities are non-profitable.
B. Characterizing and Modeling Mining Activities
We are going to investigate mining activities over time,
where the method of estimating daily computing power is dis-
cussed in Appendix BIV-A.
1) The Distribution of Daily Computing Power: Fig. 3. (a)
shows the block proportion of top-x mining pools, where 1 �
x � 5. Fig. 3. (b) shows the cumulative block proportion of
top three and top five mining pools. We can see a phenomenon
that computing power centralization appears at any time dur-
ing the measurement span. Specifically, more than 33 percent
of Bitcoin blocks are created by top 3 mining pools every day.
Similarly, more than 51 percent of the Bitcoin blocks are cre-
ated by top 5 pools every day. It implies that the top three min-
ing pools are able to launch a selfish mining attack, and the top
five mining pools are able to launch a 51 percent attack jointly.
Such a trend of computing power centralization may raise
security concerns, such as the 51% attacks and selfish mining
attacks [38], in case these top mining pools align to create
new blocks. Note that both 51% attacks and selfish mining
attacks have been observed in many real-world cases, such as
Namecoin [39], [40] and Bitcoin-Gold [18].
2) How and Why Mining Strategy siðIkÞ: Mining strategy
is important since it determines how a mining pool is derived
by the Bitcoin incentive scheme over time. Understanding
mining strategy helps both mining pools and Bitcoin’s mining
mechanism. However, few existing works studied the mining
strategy. We aim to understand both the long-term evolution
and the underlying rationality of the mining strategy.
Hence, we care about the evolution of these mining strate-
gies over intervals. Say, how does the mining strategy of min-
ing pool i evolve from siðIkÞ to siðIkþ1Þ? A problem is that
given two intervals, the corresponding computing power of
mining pools is unstable and may change dramatically caused
by real-world factors like Bitcoin price fluctuation. It means
that the mining strategy between two or a few intervals may
be unstable. To smooth it, we consider the long-term evolution
of the mining strategy of mining pools.
In our model, we use some interesting properties of the con-
tinuous-time mining strategy in (2) by taking limDt!0 to calcu-
late the daily hashes
R tk
tk�1
hiðtÞdt, from which the discrete-
time mining strategy in (3) is simply available. It is reasonable
since the hash rate function is a continuous function. Let the
continuous-time mining strategy at time tk be siðtkÞ in (5),
which has the following interesting properties. If siðtkÞ > 0,
then the number of hashes of an interval increases exponen-
tially over time. If siðtkÞ ¼ 0, then the number of hashes of an
Fig. 3. The daily block proportion of top-x mining pools on the Bitcoin net-
work, where 1 � x � 5, from Feb 26, 2016 to Nov 25, 2020.
WANG et al.: DISSECTING MINING POOLS OF BITCOIN NETWORK: MEASUREMENT, ANALYSIS AND MODELING 403
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
interval is stable and nothing changes over time. If siðtkÞ < 0,
then the number of hashes of an interval decreases exponen-
tially over time.
siðtkÞ ¼ lim
Dt!0
R tkþDt
tk�1þDt hiðtÞdt�
R tk
tk�1
hiðtÞdt
Dt
R tk
tk�1
hiðtÞdt
(5)
We model the continuous-time mining strategy as a linear
function, i.e.,
siðtkÞ ¼ 2a1tk þ a2 (6)
From Eqs. (5) and (6), we have an analytic solution, i.e., the
number of hashes of mining pool i in the interval Ik is calcu-
lated as follows, Z tk
tk�1
hiðtÞdt ¼ ea1t
2
k
þa2tkþa3 (7)
where a1, a2, a3 are constants, and tk is the ending time of the
interval Ik, k ¼ 1; 2; � � � .
From Eqs. (3) and (7), we have siðIkÞ as follows,
siðIkÞ ¼ ea1 t2
kþ1
�t2
k
� �
þa2 tkþ1�tkð Þ � 1 (8)
Next, we are going to fit parameters in (7). Specifically, we
transform (7) into a polynomial function via a logarithm map-
ping function and have ln
� R tk
tk�1
hiðtÞdt
� ¼ a1t
2
k þ a2tk þ a3.
We then use the real-world data to fit the three constants: a1,
a2, and a3 via the least squares method [41], [42].
Table IV shows the fitting results of constants a1, a2, and
a3. The high values of R-squared indicate that our linear min-
ing strategy model can well describe the behavior of the top
mining pools. We find that the fitted parameters a1 < 0, a2 >
0 for those mining pools, meaning that the number of hashes
per interval grows exponentially while the continuous-time
mining strategy decreases linearly.
Fig. 4 shows the hash rate evolution of top mining pools.
Our measurement results show that macroscopically, the num-
ber of hashes per day of top mining pools grows exponentially.
Fig. 5 shows the ratio of daily mining revenue to daily com-
puting power of top mining pools. Combining Figs. 4 with 5,
our measurement results show that microscopically, mining
pools have a higher continuous-time mining strategy at the
very beginning when mining activities were highly profitable.
Then the continuous-time mining strategies drop down when
the mining activities were not as highly profitable as before.
Why does the strategy ofmining pools evolve in this way? It is
not easy in the real world with much uncertainty. Hence, we will
try to bound the strategy of mining pools by the process of elimi-
nation. First, the continuous-time mining strategy should not be
a positive constant or above, meaning that the daily hashes will
increase exponentially. That is not rational since Bitcoin’s min-
ing rewards do not grow exponentially. Second, the continuous-
time mining strategy should not be a negative constant or below,
meaning that the daily hashes will decrease exponentially. That
is not rational since Bitcoin’s market pricemay increase dramati-
cally. In summary, the continuous-time mining strategy in the
long run is bounded between a negative constant and a positive
constant, meaning that the daily hashes of mining pools will nei-
ther increase exponentially nor decrease exponentially. Instead,
the continuous-time mining strategy is between a positive con-
stant and a negative constant in the long run.
3) The Overall Computing Power of the Bitcoin Network:
One social impact of Bitcoin network is its high energy con-
sumption caused by the vast computing power invested in Bit-
coin mining activities [43], [44], [45], [46], [47], [48], [49].
Fig. 4. The daily number of hashes of top mining pools on the Bitcoin network from Feb 26, 2016 to Nov 25, 2020. The value of y-axis is lnðR tktk�1
hiðtÞdtÞ,
where
R tk
tk�1
hiðtÞdt means the number of hashes of mining pool i in the interval ðtk�1; tk�, day t means interval Ik. For example, the number of hashes of mining
pool i of day one is
R t1
t0
hiðtÞdt. After taking the logarithm, the value of y-axis of day one is lnðR t1t0 hiðtÞdtÞ. The number of hashes of mining pool i of day two isR t2
t1
hiðtÞdt. After taking the logarithm, the value of y-axis of day two is lnðR t2t1 hiðtÞdtÞ, etc.
TABLE IV
THE FITTING RESULTS OF CONSTANTS a1, a2, AND a3 IN
R tk
tk�1
hiðtÞdt ¼ ea1t
2
k
þa2Tkþa3 , WHERE THE NUMBER OF HASHES OF MINING POOL i
OF DAY ONE IS
R t1
t0
hiðtÞdt. THE NUMBER OF HASHES OF MINING POOL i OF DAY TWO IS
R t2
t1
hiðtÞdt, ETC
404 IEEE TRANSACTIONS ON NETWORK SCIENCE AND ENGINEERING, VOL. 10, NO. 1, JANUARY/FEBRUARY 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
The energy problem may result in negative environmental
effects, e.g., 51.9 Mt CO2 in 2020. Thus, we aim to model the
overall computing power in Bitcoin mining activities and try
to understand whether Bitcoin’s computing power will keep
growing over time.
We consider both the existing mining pools and new mining
pools due to the game dynamics in the Bitcoin mining game. The
Bitcoin mining reward is the result of adding transaction fee to
block reward. Thus, given an interval Ik, the mining revenue of
Bitcoin network is denoted by RðIkÞ, where RðIkÞ ¼
pðtkÞ½bðIkÞ þ eðIkÞ�. Besides, for simplicity, we let the number of
hashes of mining pool i in this interval beHiðIkÞ ¼
R tk
tk�1
hiðtÞdt.
Proposition 4.5 (profitable, new mining pools): Suppose
that RðIkÞ and
PN
t¼1 HiðIkÞ are stable, and the mining activi-
ties are profitable (i.e.,
RðIkÞPN
i¼1
HiðIkÞ
> c). Then the optimal
strategy for new mining pools is to add
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞ
PN
i¼1
HiðIkÞ
c
r
�PN
i¼1 HiðIkÞ hashes to the Bitcoin network in the next
interval.
Proof: Please refer to Appendix C.1IV-A.& &
Example: Let RðIkÞ ¼ 100,
PN
i¼1 HiðIkÞ ¼ 30 and c ¼ 2 in
the interval Ik. If RðIkÞ and
PN
i¼1 HiðIkÞ are stable, and the
mining activities are profitable, then in the interval Ikþ1
the optimal strategy for new mining pools is to addffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞ
PN
i¼1
HiðIkÞ
c
r
�PN
i¼1 HiðIkÞ ¼
ffiffiffiffiffiffiffiffiffiffi
1500
p � 30 ¼ 8:7298 hashes
to the Bitcoin network according to the proposition 4.5, mean-
ing that the number of hashes of the Bitcoin network in the
interval Ikþ1 will be
PN
i¼1 HiðIkÞþ
 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞ
PN
i¼1
HiðIkÞ
c
r
�PN
i¼1 HiðIkÞ
�
¼ 38:7298 hashes.
Proposition 4.6 (profitable, existing mining pools): Suppose
that RðIkÞ and
PN
i¼1 HiðIkÞ are stable, the mining activities
are profitable (i.e.,
RðIkÞPN
i¼1
HiðIkÞ
> c), and there are no new min-
ing pools in the next interval. Then for an existing mining
pool i whose hashes satisfy HiðIkÞ <
�
1� c
PN
i¼1
HiðIkÞ
RðIkÞ
	
PN
i¼1 HiðIkÞ, the optimal strategy of the next interval is to addffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞð�HiðIkÞþ
PN
i¼1
HiðIkÞÞ
c
r
�PN
i¼1 HiðIkÞ hashes to the Bit-
coin network. For an existing mining pool i whose hashes
satisfy HiðIkÞ �
�
1� c
PN
i¼1
HiðIkÞ
RðIkÞ
	PN
i¼1 HiðIkÞ, the optimal
strategy of the next interval is to decrease
PN
i¼1 HiðIkÞ�ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞð�HiðIkÞþ
PN
i¼1
HiðIkÞÞ
c
r
hashes from the Bitcoin network.
Proof: Please refer to Appendix C.2IV-A.& &
Example 1: Let RðIkÞ ¼ 100,
PN
i¼1 HiðIkÞ ¼ 30, HiðIkÞ ¼
10 and c ¼ 2. If RðIkÞ and
PN
i¼1 HiðIkÞ are stable, the mining
activities are profitable, and there are no new mining pools,
then the optimal strategy for mining pool i is to addffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞð�HiðIkÞþ
PN
i¼1
HiðIkÞÞ
c
r
�PN
i¼1 HiðIkÞ ¼ 1:6228 hashes to
the Bitcoin network in the next interval.
Example 2: Let RðIkÞ ¼ 100,
PN
i¼1 HiðIkÞ ¼ 30, HiðIkÞ ¼
15 and c ¼ 2. If RðIkÞ and
PN
i¼1 HiðIkÞ are stable, the mining
activities are profitable and there are no new mining pools,
then the optimal strategy for mining pool i is to decrease
PN
i¼1 HiðIkÞ �
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞð�HiðIkÞþ
PN
i¼1
HiðIkÞÞ
c
r
¼ 2:6139 hashes from
the Bitcoin network in the next interval.
Proposition 4.7 (non-profitable, new mining pools): Sup-
pose that RðIkÞ and
PN
i¼1 HiðIkÞ are stable, and the mining
activities are non-profitable (i.e.,
RðIkÞPN
i¼1
HiðIkÞ
� c). Then for
new mining pools, the optimal strategy in the next interval is
to keep zero hash. Thus, by default, we will consider the zero
hash of new mining pools when mining activities are non-
profitable.
Proposition 4.8 (non-profitable, existing mining pools):
Suppose that RðIkÞ and
PN
i¼1 HiðIkÞ are stable, and the
mining activities are non-profitable (i.e.,
RðIkÞPN
i¼1
HiðIkÞ
� c).
Then for an existing mining pool i whose hashes satisfy
RðIkÞ
�HiðIkÞþ
PN
i¼1
HiðIkÞ
> c, the optimal strategy is to decrease
PN
i¼1 HiðIkÞ �
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞð�HiðIkÞþ
PN
i¼1
HiðIkÞÞ
c
r
hashes from the
Bitcoin network in the next interval. For an existing mining
pool iwhose hashes satisfy RðIkÞ
�HiðIkÞþ
PN
i¼1
HiðIkÞ
� c, the optimal
strategy is to decrease all hashes, i.e., HiðIkÞ, from the Bitcoin
network in the next interval.
Proof: Please refer to Appendix C.3IV-A.& &
Example 1: LetRðIkÞ ¼ 100,
PN
i¼1 HiðIkÞ ¼ 60, and c ¼ 2.
If RðIkÞ and
PN
i¼1 HiðIkÞ are stable, and the mining activities
are non-profitable, then the optimal strategy for an existing min-
ing pool i with HiðIkÞ ¼ 10 is to decrease Hi0 ðIkþ1Þ ¼
10 hashes from the Bitcoin network in the next interval.
Example 2: Let RðIkÞ ¼ 100,
PN
i¼1 HiðIkÞ ¼ 60, and c ¼
2. If RðIkÞ and
PN
i¼1 HiðIkÞ are stable, and the mining
activities are non-profitable, then the optimal strategy for
an existing mining pool i with HiðIkÞ ¼ 25 is to decreasePN
i¼1 HiðIkÞ �
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞð�HiðIkÞþ
PN
i¼1
HiðIkÞÞ
c
r
¼ 60� ffiffiffiffiffiffiffiffiffiffi
1750
p ¼
18:1670 hashes from the Bitcoin network in the next interval.
Theorem 4.9: Given a stable mining revenue R, the num-
ber of hashes of the Bitcoin network in an interval will
converge to a Nash equilibrium point R
c in limit, among
mining pools, i.e., the existing mining pools and new min-
ing pools.
Proof: Please refer to Appendix C.4IV-A.& &
Example: Given that mining revenue R is in a steady state,
say R ¼ 100 and c ¼ 2. After n intervals of mining games,
the number of hashes of the Bitcoin network will converge to
R
c ¼ 50 hashes in limit.
Fig. 5 shows the ratio of a pool’s daily mining revenue to the
pool’s daily computing power. We can see that the mining
activities were highly profitable in the early days. We find that
the Bitcoin network moves towards a stable and relatively low-
profitable state, i.e., the average ratio of daily mining revenue
to daily computing power from day 1320 to 1735 is 1.2 USD/
(EH/Day). More details about the 1.2 USD/(EH/Day) can be
found in Appendix GIV-A.
WANG et al.: DISSECTING MINING POOLS OF BITCOIN NETWORK: MEASUREMENT, ANALYSIS AND MODELING 405
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
4) Impacts of Mining Revenue Fluctuation: Mining reve-
nue fluctuation is important for Bitcoin mining activities. We
are interested in the impacts of fluctuation of mining revenue,
including the block reward, transaction fee, and Bitcoin price,
on mining pools.
Fig. 6. (a) shows the daily block reward of the Bitcoin net-
work. Fig. 6. (b) shows the daily transaction fee of the Bitcoin
network. Correspondingly, Fig. 6. (c) shows the daily ratio of
the transaction fee over the mining reward. The measurement
result shows that the ratio of transaction fee over mining
reward is small, meaning that the transaction fee takes a small
proportion in the mining reward. Table V shows all the events
of halving block reward of the Bitcoin network from the gene-
sis block in 2009 to Nov 25, 2020. The measurement results
show that neither transaction fee nor Bitcoin price is sensitive
to the events of halving block reward. Thus, the events of
halving block reward almost equally mean halving the mining
revenue of mining pools.
The incentive scheme of the Bitcoin network basically
involves block reward and transaction fee. According to
Nakamoto’s protocol, the block reward will eventually be cut
half to zero. Until that time, the incentive scheme will entirely
rely on the transaction fee. An implicit belief inside this incen-
tive scheme is that whether miners are paid by block reward or
transaction fee will not affect the security of the Bitcoin net-
work. However, our measurement result shows that both trans-
action fee and Bitcoin price are not sensitive to the events of
halving block reward, meaning that both cannot compensate
for half of the block reward. According to Theorem 4.9, after
intervals of mining games, the number of hashes of the Bitcoin
network in an interval will converge eventually. Therefore, the
block reward, the transaction fee, and the Bitcoin price are of
great importance to the security of the Bitcoin network. A
high incentive scheme may rationally lead to high energy
costs. Therefore, a stable and environment-friendly incentive
scheme for mining pools is essential to the security of PoW-
based blockchains.
C. Case Study
The above results show that the mining revenue of mining
pools is heavily affected by two key factors: halving of Bitcoin
mining rewards and fluctuation of Bitcoin market price. It is
therefore important to investigate how mining pools handle
the mining revenue fluctuations. We assume that each mining
pool is rational to maximize its expected mining payoffs, and
analyze the best-response strategy of mining pools for two dif-
ferent scenarios: 1) the mining revenue increases dramatically,
and 2) the mining revenue decreases dramatically.
Fig. 5. The ratio of a pool’s daily mining revenue to the pool’s daily computing power from Feb 26, 2016 to Nov 25, 2020. Specifically, the mining revenue of
mining pool i in the interval Ik is RðIkÞ
R tk
tk�1
hiðtÞdt=
PN
i¼1
R tk
tk�1
hiðtÞdt and the computing power of mining pool i in the interval Ik is
R tk
tk�1
hiðtÞdt, where
RðIkÞ means the Bitcoin’s mining revenue in the interval Ik,
R tk
tk�1
hiðtÞdt means the number of hashes of mining pool i in the interval Ik,
PN
i¼1
R tk
tk�1
hiðtÞdt
means the number of hashes of the Bitcoin network in the interval Ik, day t means interval Ik. For example, the ratio of a pool’s daily mining revenue to the
pool’s daily computing power of day one is RðI1Þ=
PN
i¼1
R t1
t0
hiðtÞdt. The ratio of a pool’s daily mining revenue to the pool’s daily computing power of day two
is RðI2Þ=
PN
i¼1
R t2
t1
hiðtÞdt, etc.
Fig. 6. The daily block reward, transaction fee, and the ratio of transaction fee over mining reward of the Bitcoin network from Feb 26, 2016 to Nov 25, 2020.
TABLE V
ALL EVENTS OF HALVING BLOCK REWARD UP TO NOV 25, 2020
406 IEEE TRANSACTIONS ON NETWORK SCIENCE AND ENGINEERING, VOL. 10, NO. 1, JANUARY/FEBRUARY 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
1) The Mining Game When Mining Revenue Increases Dra-
matically: Firstly, we will analyze the best-response strategy
if the mining revenue increases dramatically. We make the
following assumptions:
Assumption 1.1: Two existing mining pools X, Y , and one
new mining pool Z with corresponding hashes of HxðIkÞ,
HyðIkÞ,HzðIkÞ in the interval Ik, where,
HxðIkÞ > 0;HyðIkÞ > 0;HzðIkÞ ¼ 0 (9)
XN
i¼1
HiðIkÞ ¼ HxðIkÞ þHyðIkÞ þHzðIkÞ (10)
Assumption 1.2: The mining activities are profitable and
satisfy the following conditions,
HxðIkÞ < 1� c
PN
i¼1 HiðIkÞ
RðIkÞ
 !XN
i¼1
HiðIkÞ
HyðIkÞ < 1� c
PN
i¼1 HiðIkÞ
RðIkÞ
 !XN
i¼1
HiðIkÞ (11)
Assumption 1.3: The mining revenue increases dramatically
and it is highly profitable, where,
RðIkþ1Þ ¼ RðIkÞ (12)
Now, we are going to analyze the best-response strategy of
mining pools. Each mining pool can choose to either increase
its hashes or remain unchanged. There is no option of decrease
hashes since the option of remain unchanged dominates the
option of decrease hashes according to propositions 4.5 & 4.6.
An event is denoted by fIncrease; Increase; Unchangeg,
meaning that mining pool X follows its optimal strategy, Y
also follows its optimal strategy, but Z does not follows its
optimal strategy. Due to limited space, we only present one
case here. The complete discussion on all eight cases can be
found in Appendix D.1IV-A.
Case 1 fIncrease; Increase; Increaseg. If mining pools X,
Y apply the strategy in proposition 4.6 and pool Z applies
the strategy in proposition 4.5 in the interval Ik, then
the number of hashes of pool X, Y , Z in the next interval
Ikþ1 will be,
HxðIkþ1Þ¼HxðIkÞþ
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞ �HxðIkÞþ
PN
i¼1HiðIkÞ
� 	
c
vuut �
XN
i¼1
HiðIkÞ (13)
HyðIkþ1Þ¼HyðIkÞþ
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞ �HyðIkÞþ
PN
i¼1HiðIkÞ
� 	
c
vuut �
XN
i¼1
HiðIkÞ (14)
HzðIkþ1Þ ¼ HzðIkÞ þ
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞ
PN
i¼1 HiðIkÞ
c
s
�
XN
i¼1
HiðIkÞ (15)
Therefore, the expected payoff of mining pool X, Y , Z in
the interval Ikþ1 will be,
E fxðIkþ1Þ½ � ¼ RðIkþ1ÞHxðIkþ1Þ
HxðIkþ1Þ þHyðIkþ1Þ þHzðIkþ1Þ � cHxðIkþ1Þ (16)
E fyðIkþ1Þ
� � ¼ RðIkþ1ÞHyðIkþ1Þ
HxðIkþ1Þ þHyðIkþ1Þ þHzðIkþ1Þ � cHyðIkþ1Þ (17)
E fzðIkþ1Þ½ � ¼ RðIkþ1ÞHzðIkþ1Þ
HxðIkþ1Þ þHyðIkþ1Þ þHzðIkþ1Þ � cHzðIkþ1Þ (18)
Heuristic 4.10: If there are two or more Nash Equilibriums,
we apply a computing-power-first heuristic in the PoW-based
blockchains and choose one Nash Equilibrium such that the larg-
est mining pool gets the maximum payoff among these Nash
Equilibriums. If there are two or more optimal solutions for the
largest mining pool, we switch to the second-largest mining
pool and so on, until eventually, only one solution is available.
Example 1.1: In case RðIkÞ ¼ 900, HxðIkÞ ¼ 16, HyðIkÞ ¼
25, HzðIkÞ ¼ 0, c ¼ 2, where mining activities are profitable
and HxðIkÞ <
�
1� c
PN
i¼1
HiðIkÞ
RðIkÞ
	PN
i¼1 HiðIkÞ, HyðIkÞ <�
1� c
PN
i¼1
HiðIkÞ
RðIkÞ
	PN
i¼1 HiðIkÞ, the expected payoff in the
interval Ikþ1 is shown in Table VI. We can see that
fIncrease; Increase; Increaseg is a Nash Equilibrium by
definition. It implies that the best-response strategy in this
example is fIncrease; Increase; Increaseg.
Example 1.2: In case RðIkÞ ¼ 900, HxðIkÞ ¼ 85:1,
HyðIkÞ ¼ 87:8, HzðIkÞ ¼ 0, c ¼ 2, where mining activities
are profitable and HxðIkÞ <
�
1� c
PN
i¼1
HiðIkÞ
RðIkÞ
	PN
i¼1 HiðIkÞ,
HyðIkÞ <
�
1� c
PN
i¼1
HiðIkÞ
RðIkÞ
	PN
i¼1 HiðIkÞ, the expected pay-
off in the interval Ikþ1 is shown in Table VII. We can see that
TABLE VI
THE EXPECTED PAYOFF IN THE INTERVAL Ikþ1 IN CASE RðIkÞ ¼ 900,HxðIkÞ ¼ 16,HyðIkÞ ¼ 25, c ¼ 2
TABLE VII
THE EXPECTED PAYOFF IN THE INTERVAL Ikþ1 IN CASE RðIkÞ ¼ 900,HxðIkÞ ¼ 85:1,HyðIkÞ ¼ 87:8, c ¼ 2
WANG et al.: DISSECTING MINING POOLS OF BITCOIN NETWORK: MEASUREMENT, ANALYSIS AND MODELING 407
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
there are two Nash Equilibriums by definition. Applying heu-
ristic 4.10, the best-response strategy in this example is
fUnchange; Increase; Increaseg.
2) The Mining Game When Mining Revenue Decreases
Dramatically: Secondly, we will analyze the best-response
strategy if the mining revenue decreases dramatically. We
make the following assumptions:
Assumption 2.1: Two existing mining pools X, Y , and one
new mining pool Z with corresponding hashes of HxðIkÞ,
HyðIkÞ,HzðIkÞ in the interval Ik, where,
HxðIkÞ > 0;HyðIkÞ > 0;HzðIkÞ ¼ 0 (19)
XN
i¼1
HiðIkÞ ¼ HxðIkÞ þHyðIkÞ þHzðIkÞ (20)
Assumption 2.2: The mining activities are profitable and
satisfy the following conditions,
HxðIkÞ � 1� c
PN
i¼1 HiðIkÞ
RðIkÞ
 !XN
i¼1
HiðIkÞ
HyðIkÞ � 1� c
PN
i¼1 HiðIkÞ
RðIkÞ
 !XN
i¼1
HiðIkÞ (21)
Assumption 2.3: The mining revenue decreases dramati-
cally and it is still profitable, where,
RðIkþ1Þ ¼ RðIkÞ (22)
Now, we are going to analyze the best-response strategy
of mining pools. Each existing mining pool can choose to
either decrease its hashes or remain unchanged. There is no
option of increase hashes for an existing mining pool since
the option of remain unchanged dominates the option of
increase hashes according to proposition 4.6. And similarly,
there is no option of decrease hashes for an new mining
pool according to proposition 4.5. An event is denoted by
fDecrease;Decrease; Unchangeg, meaning that mining
pool X follows its optimal strategy, Y also follows its optimal
strategy, but Z does not follows its optimal strategy. Due to
limited space, we will discuss one case here. The complete dis-
cussion of all eight cases can be found in Appendix D.2IV-A.
Case 1 fDecrease;Decrease; Increaseg. If mining poolsX,
Y apply the strategy in proposition 4.6 and pool Z applies the
strategy in proposition 4.5 in the interval Ik, then the number
of hashes of poolX, Y , Z in the next interval Ikþ1 will be,
HxðIkþ1Þ
¼ HxðIkÞ�
XN
i¼1
HiðIkÞ�
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞ �HxðIkÞþ
PN
i¼1 HiðIkÞ
� 	
c
vuut
0
BB@
1
CCA (23)
HyðIkþ1Þ
¼ HyðIkÞ�
XN
i¼1
HiðIkÞ�
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞ �HyðIkÞþ
PN
i¼1 HiðIkÞ
� 	
c
vuut
0
BB@
1
CCA (24)
HzðIkþ1Þ¼HzðIkÞ þ
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
RðIkÞ
PN
i¼1 HiðIkÞ
c
s
�
XN
i¼1
HiðIkÞ (25)
Therefore, the expected payoff of mining pool X, Y , Z in
the interval Ikþ1 will be,
E fxðIkþ1Þ½ �¼ RðIkþ1ÞHxðIkþ1Þ
HxðIkþ1Þ þHyðIkþ1Þ þHzðIkþ1Þ � cHxðIkþ1Þ (26)
E fyðIkþ1Þ
� �¼ RðIkþ1ÞHyðIkþ1Þ
HxðIkþ1Þ þHyðIkþ1Þ þHzðIkþ1Þ � cHyðIkþ1Þ (27)
E fzðIkþ1Þ½ �¼ RðIkþ1ÞHzðIkþ1Þ
HxðIkþ1Þ þHyðIkþ1Þ þHzðIkþ1Þ � cHzðIkþ1Þ (28)
Example 2.1: In case RðIkÞ ¼ 130, HxðIkÞ ¼ 16,
HyðIkÞ ¼ 25, HzðIkÞ ¼ 0, c ¼ 2, where mining activities are
profitable and HxðIkÞ �
�
1� c
PN
i¼1
HiðIkÞ
RðIkÞ
	PN
i¼1 HiðIkÞ,
HyðIkÞ � ð1� c
PN
i¼1
HiðIkÞ
RðIkÞ ÞPN
i¼1 HiðIkÞ, the expected pay-
off in the interval Ikþ1 is shown in Table VIII. We can see
that fDecrease; Decrease; Increaseg is a Nash Equilibrium
by definition. It implies that the best-response strategy in this
example is fDecrease; Decrease; Increaseg.
Example 2.2: In case RðIkÞ ¼ 600, HxðIkÞ ¼ 16,
HyðIkÞ ¼ 25, HzðIkÞ ¼ 0, c ¼ 2, where mining activities
are profitable and HxðIkÞ �
�
1� c
PN
i¼1
HiðIkÞ
RðIkÞ
	PN
i¼1 HiðIkÞ,
HyðIkÞ �
�
1� c
PN
i¼1
HiðIkÞ
RðIkÞ
	PN
i¼1 HiðIkÞ, the expected
TABLE VIII
THE EXPECTED PAYOFF IN THE INTERVAL Ikþ1 IN CASE RðIkÞ ¼ 130,HxðIkÞ ¼ 16,HyðIkÞ ¼ 25, c ¼ 2
TABLE IX
THE EXPECTED PAYOFF IN THE INTERVAL Ikþ1 IN CASE RðIkÞ ¼ 600,HxðIkÞ ¼ 85:1,HyðIkÞ ¼ 87:8, c ¼ 2
408 IEEE TRANSACTIONS ON NETWORK SCIENCE AND ENGINEERING, VOL. 10, NO. 1, JANUARY/FEBRUARY 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
payoff in the interval Ikþ1 is shown in Table IX. We can see
that fDecrease; Decrease; Increaseg is a Nash Equilibrium
by definition. It implies that the best-response strategy in this
example is fDecrease; Decrease; Increaseg.
V. THE IMPACTS OF MINING POOLS ON END-USERS
Mining pools process most of the unconfirmed transactions on
the Bitcoin network. These pools choose a specific Bitcoin pro-
tocol that defines specific Bitcoin parameters such as block time
and block size. Mining pools apply a set of policies called trans-
action selection policy to determine whether an unconfirmed
transaction will be enrolled in the next block. We are interested
in the impact of mining pools on end-users, such as block size,
block time, transaction delay, transaction selection policy.
1) Block Size and Block Time: Segregated Witness (Seg-
Wit) is a soft fork of the Bitcoin protocol that separates the wit-
ness data (i.e., digital signatures) from the total transaction data
and allows more base transaction data (i.e., without the witness
data) to be stored in a single block. SegWit introduces the
weight unit (WU) concept and transitions to a block limit of
4 millionWU, where a transaction’s weight unit (i.e., in WU) is
defined as base transaction size with witness data stripped (i.e.,
in byte) 	 3 + total transaction size with witness data included
(i.e., in byte). And the transaction’s virtual size (i.e., in vbyte)
is defined as the weight unit
4 , meaning that the SegWit block limit
measured in virtual size is 1 million vbytes. Though a SegWit
block with a limit of 1 million vbytes possibly has a block size
larger than 1 MB, a SegWit node is compliant with a non-Seg-
Wit node with the 1 MB block limit [50], [51]. Specifically, the
SegWit node receives both the base transaction data and the
witness data, while the non-SegWit node only receives the base
transaction data. In other words, the non-SegWit node receives
a SegWit block without the witness data such that the 1 MB
block limit still holds for the non-SegWit node [52], [53], [54].
Fig. 7 shows the impacts of the segregated witness on block
size on a SegWit-compatible node. Table X shows the impact
of the segregated witness on the number of transactions per
block. Together with Fig. 7, we find that the segregated wit-
ness effectively increases the block size on a SegWit-compati-
ble node, while the block time is a stable constant of around
ten minutes on average. Specifically, for 95 percent of blocks
of AntPool, before the segregated witness, the maximum
block size is 975 KB, and the number of transactions is
bounded by 2,811 transactions per block. After the segregated
witness, the maximum block size is increased to 1,363 KB,
and the maximum number of transactions is increased to
3,077 transactions per block.
Table XI shows the activation time of the segregated wit-
ness of top mining pools. An agreement on the segregated wit-
ness among top mining pools will bring more transaction fees,
and hence more expected mining payoffs. Therefore, they
have no motivation to reject it. Moreover, the observed activa-
tion time of the segregated witness of three top mining pools
occurred on the same day. We are concerned that the agree-
ment of protocol update achieved by only a few top mining
pools may further raise a protocol level centralization.
Fig. 8 shows the block time of top mining pools. We find that
the block time of empty blocks is significantly less than the
block time of non-empty blocks, where the empty block [35]
means the block only contains the coinbase transaction from
the block miner, and no non-coinbase transactions from Bitcoin
end-users. On average, the block time of empty blocks is
around one minute, while the block time of non-empty blocks
is around ten minutes. It indicates that generating empty blocks
can significantly reduce block time compared to generating
non-empty blocks. It matters in the early days when transaction
fees are so low that the expected payoff of mining an empty
block is higher than the profit of mining a non-empty block.
However, with the events of halving block rewards, the propor-
tion of transaction fees will gradually increase to one hundred
percent, and empty blocks will lose their advantages.
2) Transaction Delay: The transaction delay of an uncon-
firmed transaction is the delay between the first time we
observed an unconfirmed transaction and the first time we
Fig. 7. Distribution of block size on a SegWit-compatible Bitcoin full node from Feb 26, 2016 to Nov 25, 2020.
TABLE X
NUMBER OF TRANSACTIONS OF 95% BLOCKS
FROM FEB 26, 2016 TO NOV 25, 2020
TABLE XI
ACTIVATION TIME OF THE SEGWIT SOFT FORK OF MINING POOLS
WANG et al.: DISSECTING MINING POOLS OF BITCOIN NETWORK: MEASUREMENT, ANALYSIS AND MODELING 409
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
observed that the transaction was written into a block. The
transaction delay consists of two parts: the service delay and
the queuing delay. The service delay depends on both the
block time (i.e., the constant ten minutes on average) and the
block capacity (i.e., the number of transactions included in a
block). We are interested in the queuing delay that is a gaming
result between mining pools and end-users.
Fig. 9 shows the transaction delay of unconfirmed transac-
tions regarding different mining pools. First, we find no signifi-
cant difference in transaction delays regarding different mining
pools. It equally means no significant difference in queuing
delays regarding different mining pools. Second, we find that
the transaction delay of unconfirmed transactions is roughly 20
minutes on average. It indicates that high queuing delay
remains a performance issue on the current Bitcoin system.
3) Transaction Selection Policy: Transaction selection
policy is the policy adopted by mining pools for selecting
unconfirmed transactions into a new block, which impacts the
transaction fees. For end-users, the policy also impacts the
queuing delay of an unconfirmed transaction. We assume that
mining pools are rational to maximize their mining payoffs.
Given a subset of n unconfirmed transactions on Mempool,
each transaction j has a transaction fee rj and a virtual trans-
action size vj in vbyte. The maximum block size is F, i.e.,
F ¼ 1 million vbytes. Let an indicator random variable be pj,
where pj ¼ 1 means that the mining pool chooses to collect
the transaction j; otherwise, pj ¼ 0. We have,
max
pj
Xn
j¼1
rjpj
s.t.
Xn
j¼1
vjpj � F
pj 2 f0; 1g; j 2 f1; 2; 3; . . .; ng (29)
where the optimization problem (29) is essentially the classic 0-
1 knapsack problem [55], [56] proven to be NP-hard. A classic
near-optimal solution is the feerate-first heuristic, where feer-
ate-first means a heuristic of always choosing the unconfirmed
transaction with the maximum ratio of transaction fee over vir-
tual transaction size. We then use unconfirmed transactions to
detect the remote mining pool’s transaction selection policy and
validate the feerate-first heuristic. Our method is as follows.
First, we sort the local Mempool unconfirmed transactions
according to their feerate in a descending order. Second, we
pick top-x unconfirmed transactions from Mempool and con-
struct a data set of length x, where x is the number of transac-
tions of the next block. Third, we validate how many
transactions of unconfirmed transactions are collected into the
next block by mining pools and analyze the properties of these
unconfirmed transactions. Also, we introduce a new metric
named the acceptance rate to describe the effectiveness of the
feerate-first heuristic. For example, if the acceptance rate is 100
percent, it means 100 percent of the unconfirmed transactions
are collected by mining pools. Otherwise, if the acceptance rate
is 0 percent, it means none of the unconfirmed transactions are
collected by mining pools. Through this approach, we can vali-
date the effectiveness of feerate-first heuristic.
Fig. 10 shows the validation of the feerate-first heuristic. The
high values of the acceptance rate means that the feerate-first
heuristic can well explain the transaction selection behaviors of
topmining pools, which helps end-users decide their transaction
fees. Moreover, we find that mining pools are in a transaction
dilemma where transaction fees depend on a transaction’s vir-
tual size in vbyte, not the amount transacted in BTC, which
implies that Bitcoin is friendly to the large-amount (BTCs) and
low-weight (vbytes) transaction. However, the large-amount
(BTCs) and low-fee transaction in turn will increase the risk of
double-spending attacks because unmatching low transaction
fees provided will lead to unmatching low computing power,
Fig. 8. Distribution of block time from Feb 26, 2016 to Nov 25, 2020.
Fig. 9. Distribution of transaction delay from Mar 6, 2018 to Nov 25, 2020.
410 IEEE TRANSACTIONS ON NETWORK SCIENCE AND ENGINEERING, VOL. 10, NO. 1, JANUARY/FEBRUARY 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
while the large-amount of BTCs transacted leads to the high
profitability of double-spending this transaction.
VI. CONCLUSION
This paper studied the Bitcoin network from the perspective
of mining pools, where mining pools dominate the computing
power and play an essential role in the Bitcoin network’s per-
formance and security. We conducted a broad range of meas-
urements on both confirmed transactions and unconfirmed
transactions. Then we modeled the long-term evolution of min-
ing pools and their effects on the end-users. The model revealed
that mining pools were caught in a dilemma where pools expo-
nentially increased their computing power while the ratio of
daily mining revenue to daily computing power is decreasing.
And the computing power of Bitcoin network converged to a
stable state where the ratio of daily mining revenue to daily
computing power is non-incentive. Moreover, we also dis-
cussed the impacts of the mining pool’s strategies on mining
activities and the Bitcoin system and proposed mining strate-
gies for mining pools and transaction-related strategies for
end-users. Finally, one limitation is that we consider a perfect
competitive mining game with no attacks among mining pools.
One promising future direction is to model the attacks among
mining pools while considering the effect of the BTC price
(e.g., the ixCrypto index).
ACKNOWLEDGMENT
The authors would like to thank the anonymous reviewers
for their insightful and constructive comments.
REFERENCES
[1] S. Zhang and J.-H. Lee, “Double-spending with a sybil attack in the bit-
coin decentralized network,” IEEE Trans. Ind. Informat., vol. 15,
no. 10, pp. 5715–5722, Oct. 2019.
[2] S. Bag, S. Ruj, and K. Sakurai, “Bitcoin block withholding attack: Anal-
ysis and mitigation,” IEEE Trans. Inf. Forensics Secur., vol. 12, no. 8,
pp. 1967–1978, Aug. 2017.
[3] D. Liu, C. Huang, J. Ni, X. Lin, and X. S. Shen, “Blockchain-based smart
advertising network with privacy-preserving accountability,” IEEE
Trans. Netw. Sci. Eng., vol. 8, no. 3, pp. 2118–2130, Jul.–Sep. 2020.
[4] Y. Xu, C. Zhang, Q. Zeng, G. Wang, J. Ren, and Y. Zhang,
“Blockchain-enabled accountability mechanism against information
leakage in vertical industry services,” IEEE Trans. Netw. Sci. Eng.,
vol. 8, no. 2, pp. 1202–1213, Apr.–Jun. 2021.
[5] T.-H. Chang and D. Svetinovic, “Improving bitcoin ownership identifi-
cation using transaction patterns analysis,” IEEE Trans. Syst., Man,
Cybern. Syst., vol. 50, no. 1, pp. 9–20, Jan. 2020.
[6] M. Dibaei et al., “Investigating the prospect of leveraging blockchain
and machine learning to secure vehicular networks: A survey,” IEEE
Trans. Intell. Transp. Syst., vol. 23, no. 2, pp. 683–700, Feb. 2022.
[7] M. Vukoli�c, “The quest for scalable blockchain fabric: Proof-of-work
vs. BFT replication” in Proc. Int. Workshop Open Problems Netw.
Secur., 2015, pp. 112–125.
[8] J. Zou, B. Ye, L. Qu, Y. Wang, M. A. Orgun, and L. Li, “A proof-of-trust
consensus protocol for enhancing accountability in crowdsourcing services,”
IEEE Trans. Serv. Comput., vol. 12, no. 3, pp. 429–445,May-June 2019.
[9] C. Tang, L. Wu, G. Wen, and Z. Zheng, “Incentivizing honest mining in
blockchain networks: A reputation approach,” IEEE Trans. Circuits
Syst. II: Exp. Briefs, vol. 67, no. 1, pp. 117–121, Jan. 2019.
[10] F. Jameel, M. A. Javed, S. Zeadally, and R. J€antti, “Efficient mining clus-
ter selection for blockchain-based cellular V2X communications,” IEEE
Trans. Intell. Transp. Syst., vol. 22, no. 7, pp. 4064–4072, Jul. 2021.
[11] R. Qin, Y. Yuan, and F.-Y. Wang, “Research on the selection strategies
of blockchain mining pools,” IEEE Trans. Computat. Social Syst.,
vol. 5, no. 3, pp. 748–757, Sep. 2018.
[12] M. Conti, E. S. Kumar, C. Lal, and S. Ruj, “A survey on security and pri-
vacy issues of bitcoin,” IEEE Commun. Surveys Tuts., vol. 20, no. 4,
pp. 3416–3452, Apr. 2018.
[13] P. Febrero and J. Pereira, “Cryptocurrency constellations across the
three-dimensional space: Governance decentralization, security, and
scalability,” IEEE Trans. Eng. Manag., to be published, Nov. 10, 2020,
doi: 10.1109/TEM.2020.3030105.
[14] J. Xie, F. R. Yu, T. Huang, R.Xie, J. Liu, and Y. Liu, “A survey on the scal-
ability of blockchain systems,” IEEE Netw., vol. 33, no. 5, pp. 166–173,
Sep./Oct. 2019.
[15] Y. Wu et al., “A bitcoin transaction network analytic method for future
blockchain forensic investigation,” IEEE Trans. Netw. Sci. Eng., vol. 8,
no. 2, pp. 1230–1241, Apr.-Jun., 2020.
[16] F. Aiolli, M. Conti, A. Gangwal, and M. Polato, “Mind your wallet’s pri-
vacy: Identifying bitcoin wallet apps and user’s actions through network
traffic analysis,” in Proc. 34th ACM/SIGAPP Symp. Appl. Comput.,
2019, pp. 1484–1491.
[17] M. H. u. Rehman, K. Salah, E. Damiani, and D. Svetinovic, “Trust in
blockchain cryptocurrency ecosystem,” IEEE Trans. Eng. Manag.,
vol. 67, no. 4, pp. 1196–1212, Nov. 2020.
[18] G. Ramezan and C. Leung, “Analysis of proof-of-work-based block-
chains under an adaptive double-spend attack,” IEEE Trans. Ind. Infor-
mat., vol. 16, no. 11, pp. 7035–7045, Nov. 2020.
[19] S. Wu, Y. Chen, M. Li, X. Luo, Z. Liu, and L. Liu, “Survive and thrive:
A stochastic game for DDos attacks in bitcoin mining pools,” IEEE/
ACM Trans. Netw., vol. 28, no. 2, pp. 874–887, Apr. 2020.
[20] J. Misic, V. B. Misic, and X. Chang, “Performance of bitcoin network
with synchronizing nodes and a mix of regular and compact blocks,”
IEEE Trans. Netw. Sci. Eng., vol. 7, no. 4, pp. 3135–3147, Oct.-Dec 2020.
[21] Y. Shahsavari, K. Zhang, and C. Talhi, “A theoretical model for block
propagation analysis in bitcoin network,” IEEE Trans. Eng. Manag.,
vol. 69, no. 4, pp. 1459–1476, Aug. 2022.
[22] Z. Xiong, J. Kang, D. Niyato, P. Wang, and H. V. Poor, “Cloud/edge
computing service management in blockchain networks: Multi-leader
multi-follower game-based ADMM for pricing,” IEEE Trans. Serv.
Comput., vol. 13, no. 2, pp. 356–367, Mar./Apr. 2020.
[23] S. Guo, Y. Dai, S. Guo, X. Qiu, and F. Qi, “Blockchain meets edge com-
puting: Stackelberg game and double auction based task offloading for
mobile blockchain,” IEEE Trans. Veh. Technol., vol. 69, no. 5,
pp. 5549–5561, May 2020.
[24] J. Li, X. Ni, Y. Yuan, and F. Wang, “A novel GSP auction mechanism
for dynamic confirmation games on bitcoin transactions,” IEEE Trans.
Serv. Comput., vol. 15, no. 3, pp. 1436–1447, May/Jun. 2022.
Fig. 10. Validation of the feerate-first heuristic from Mar 6, 2018 to Nov 25, 2020.
WANG et al.: DISSECTING MINING POOLS OF BITCOIN NETWORK: MEASUREMENT, ANALYSIS AND MODELING 411
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
https://dx.doi.org/10.1109/TEM.2020.3030105
[25] B. B. F. Pontiveros, R. Norvill, and R. State, “Monitoring the transaction
selection policy of bitcoin mining pools,” in Proc. IEEE/IFIP Netw.
Operations Manage. Symp., 2018, pp. 1–6.
[26] M. A. Imtiaz, D. Starobinski, and A. Trachtenberg, “Investigating
orphan transactions in the bitcoin network,” IEEE Trans. Netw. Service
Manag., vol. 18, no. 2, pp. 1718–1731, Jun. 2021.
[27] G. S. Atsalakis, I. G. Atsalaki, F. Pasiouras, and C. Zopounidis, “Bitcoin
price forecasting with neuro-fuzzy techniques,” Eur. J. Oper. Res.,
vol. 276, no. 2, pp. 770–780, 2019.
[28] S. McNally, J. Roche, and S. Caton, “Predicting the price of bitcoin
using machine learning,” in Proc. IEEE 26th Euromicro Int. Conf. Par-
allel, Distrib. Netw.-Based Process., 2018, pp. 339–343.
[29] Y. Yuan and F.-Y. Wang, “Blockchain and cryptocurrencies: Model,
techniques, and applications,” IEEE Trans. Syst., Man, Cybern. Syst.,
vol. 48, no. 9, pp. 1421–1428, Sep. 2018.
[30] J. Mi�si�c, V. B. Mi�si�c, X. Chang, S. G. Motlagh, and M. Z. Ali,
“Modeling of bitcoin’s blockchain delivery network,” IEEE Trans.
Netw. Sci. Eng., vol. 7, no. 3, pp. 1368–1381, Jul.-Sep., 2020.
[31] A. T. Haghighat and M. Shajari, “Block withholding game among bitcoin
mining pools,” Future Gener. Comput. Syst., vol. 97, pp. 482–491, 2019.
[32] X. Ding, J. Guo, D. Li, and W. Wu, “An incentive mechanism for build-
ing a secure blockchain-based Internet of Things,” IEEE Trans. Netw.
Sci. Eng., vol. 8, no. 1, pp. 477–487, Jan.-Mar. 2021.
[33] M. Liu, F. R. Yu, Y. Teng, V. C. Leung, and M. Song, “Computation
offloading and content caching in wireless blockchain networks with
mobile edge computing,” IEEE Trans. Veh. Technol., vol. 67, no. 11,
pp. 11008–11021, Nov. 2018.
[34] Z. Chen, C. Li, and W. Sun, “Bitcoin price prediction using machine
learning: An approach to sample dimension engineering,” J. Comput.
Appl. Math., vol. 365, 2020, Art. no. 112395.
[35] C. Wang, X. Chu, and Y. Qin, “Measurement and analysis of the bitcoin
networks: A view from mining pools,” in Proc. IEEE 6th Int. Conf. Big
Data Comput. Commun., 2020, pp. 180–188.
[36] T. M. Hewa et al., “Blockchain-based network slice broker to facilitate
factory-as-a-service,” IEEE Trans. Ind. Informat., to be published,
May 16, 2022, doi: 10.1109/TII.2022.3173928.
[37] A. M. Seid, H. N. Abishu, Y. H. Yacob, T. A. Ayall, A. Erbad, and
M. Guizan, “Blockchain-based resource trading in multi-UAV-assisted
industrial IoT networks: A multi-agent DRL approach,” IEEE Trans.
Netw. Service Manag., to be published, Aug. 09, 2022, doi: 10.1109/
TNSM.2022.3197309.
[38] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is
vulnerable,” Commun. ACM, vol. 61, no. 7, pp. 95–102, 2018.
[39] M. Ali, J. C. Nelson, R. Shea, and M. J. Freedman, “Blockstack: A
global naming and storage system secured by blockchains,” in Proc.
USENIX Annu. Tech. Conf., 2016, pp. 181–194.
[40] Z. Zheng, S. Xie, H.-N. Dai, X. Chen, and H. Wang, “Blockchain chal-
lenges and opportunities: A survey,” Int. J. Web Grid Serv., vol. 14,
no. 4, pp. 352–375, 2018.
[41] E. Christoforou, A. Nordio, A. Tarable, and E. Leonardi, “Ranking a set
of objects: A graph based least-square approach,” IEEE Trans. Netw.
Sci. Eng., vol. 8, no. 1, pp. 803–813, Jan.-Mar. 2021.
[42] L. Shi et al., “Recovering network structures based on evolutionary
game dynamics via secure dimensional reduction,” IEEE Trans. Netw.
Sci. Eng., vol. 7, no. 3, pp. 2027–2036, Jul.-Sep. 2020.
[43] S. K�ufeo�glu and M. �Ozkuran, “Bitcoin mining: A global review of
energy and power demand,” Energy Res. Soc. Sci., vol. 58, 2019,
Art. no. 101273.
[44] D. Das, “Toward next generation of blockchain using improvized bitcoin-
NG,” IEEE Trans. Computat. Social Syst., vol. 8, no. 2, pp. 512–521,
Apr. 2021.
[45] B. Tao et al., “Complex network analysis of the bitcoin transaction
network,” IEEE Trans. Circuits Syst. II: Exp. Briefs, vol. 69, no. 3,
pp. 1009–1013, Mar. 2022.
[46] M. Hajiaghapour-Moghimi, K. A. Hosseini, E. Hajipour, and M. Vakilian,
“A TOU-IBT pricing strategy to manage the cryptocurrency micro-min-
ers,” IEEE Trans. Smart Grid, vol. 13, no. 3, pp. 1838–1848,May 2021.
[47] X. Guo and W. Cui, “BMP: An evaluation system for bitcoin mining
pools,” IEEE Trans. Computat. Social Syst., to be published, May 16,
2022, doi: 10.1109/TCSS.2022.3172951.
[48] A. Alofi, M. Bokhari, R. Bahsoon, and B. Hendley, “Optimizing the
energy consumption of blockchain-based systems using evolutionary
algorithms: A new problem formulation,” IEEE Trans. Sustain. Comput.,
to be published, Mar. 22, 2022, doi: 10.1109/TSUSC.2022.3160491.
[49] N. Tovanich, N. Souli�e, N. Heulot, and P. Isenberg, “The evolution of min-
ing pools and miners’ behaviors in the bitcoin blockchain,” IEEE Trans.
Netw. Service Manag., to be published, Mar. 14, 2022, doi: 10.1109/
TNSM.2022.3159004.
[50] M. Florian, S. Henningsen, S. Beaucamp, and B. Scheuermann, “Erasing
data from blockchain nodes,” in Proc. IEEE Eur. Symp. Secur. Privacy
Workshops, 2019, pp. 367–376.
[51] M. Kedziora, D. Pieprzka, I. J�o�zwiak, Y. Liu, and H. Song, “Analysis of
segregated witness implementation for increasing efficiency and security
of the bitcoin cryptocurrency,” in Proc. Int. Conf. Comput. Collective
Intell., 2020, pp. 640–651.
[52] D. Mechkaroska, V. Dimitrova, and A. Popovska-Mitrovikj, “Analysis
of the possibilities for improvement of blockchain technology,” in Proc.
IEEE 26th Telecommun. Forum, 2018, pp. 1–4.
[53] C. P�erez-Sol�a, S. Delgado-Segura, J. Herrera-Joancomartı, and
G. Navarro-Arribas, “Analysis of the segWit adoption in bitcoin,” 2019.
[Online]. Available: https://deic-web.uab.cat/guille/publications/papers/
2018.recsi.segwit.pdf(visited on 06/13/2020)
[54] J. Xiaomeng, Z. Fan, L. Shenwen, Y. Jinglin, and H. Ketai, “Data analy-
sis of bitcoin blockchain network nodes,” in Proc. IEEE 15th Conf. Ind.
Electron. Appl., 2020, pp. 1891–1895.
[55] R. Lavi and C. Swamy, “Truthful and near-optimal mechanism design
via linear programming,” J. ACM, vol. 58, no. 6, pp. 1–24, 2011.
[56] K. W. Ross and D. H. Tsang, “The stochastic knapsack problem,” IEEE
Trans. Commun., vol. 37, no. 7, pp. 740–747, Jul. 1989.
Canhui Wang (Student Member, IEEE) received the
B.E. degree from Shandong University, Jinan, China,
in 2016. He is currently working toward the Ph.D.
degree with Department of Computer Science, Hong
Kong Baptist University, Hong Kong, China. His
research interests include distribution systems, mea-
surement, modeling and optimization.
Xiaowen Chu (Senior Member, IEEE) received the
B.E. degree in computer science from Tsinghua Uni-
versity, Beijing, China, in 1999, and the Ph.D. degree
in computer science from the Hong Kong University
of Science and Technology, Hong Kong, in 2003. He
is currently a Full Professor with the Data Science
and Analytics Thrust, The Hong Kong University of
Science and Technology (Guangzhou), Hong Kong,
and a Professor with the Department of Computer
Science, Hong Kong Baptist University, Hong Kong.
His research interests include parallel and distributed
computing, cloud computing and wireless networks. He is an Associate Editor
for the IEEE TRANSACTIONS ON NETWORK SCIENCE AND ENGINEERING and
IEEE ACCESS, and was an Associate Editor for the IEEE INTERNET OF THINGS
JOURNAL, and a Guest Editor of IEEE NETWORKand IEEE TRANSACTIONS ON
INDUSTRIAL INFORMATICS.
Yang Qin (Senior Member, IEEE) received the B.Sc.
degree in computer science from Southwest Jiaotong
University, Chengdu, China, in 1989, the M.S. degree
in computer science from the Huazhong University of
Science&Technology,Wuhan, China, in 1992, and the
Ph.D. degree in computer science, Hong Kong Univer-
sity of Science & Technology, Kowloon, Hong Kong,
in November 1999. She is currently an Associate Pro-
fessor with the Department of Computer Science and
Technology, Shenzhen Graduate School, Harbin Insti-
tute of Technology, Harbin, China. Her research inter-
ests include wireless networks, mobile computing, crosslayer design, QoS of
routing and scheduling, high speed optical networks and so forth.
412 IEEE TRANSACTIONS ON NETWORK SCIENCE AND ENGINEERING, VOL. 10, NO. 1, JANUARY/FEBRUARY 2023
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 09:21:26 UTC from IEEE Xplore.  Restrictions apply. 
https://dx.doi.org/10.1109/TII.2022.3173928
https://dx.doi.org/10.1109/TNSM.2022.3197309
https://dx.doi.org/10.1109/TNSM.2022.3197309
https://dx.doi.org/10.1109/TCSS.2022.3172951
https://dx.doi.org/10.1109/TSUSC.2022.3160491
https://dx.doi.org/10.1109/TNSM.2022.3159004
https://dx.doi.org/10.1109/TNSM.2022.3159004
https://deic-web.uab.cat/guille/publications/papers/2018.recsi.segwit.pdf
https://deic-web.uab.cat/guille/publications/papers/2018.recsi.segwit.pdf
<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /None
  /Binding /Left
  /CalGrayProfile (Gray Gamma 2.2)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Off
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /sRGB
  /DoThumbnails true
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams true
  /MaxSubsetPct 100
  /Optimize true
  /OPM 0
  /ParseDSCComments false
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo false
  /PreserveFlatness true
  /PreserveHalftoneInfo true
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Remove
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
    /Algerian
    /Arial-Black
    /Arial-BlackItalic
    /Arial-BoldItalicMT
    /Arial-BoldMT
    /Arial-ItalicMT
    /ArialMT
    /ArialNarrow
    /ArialNarrow-Bold
    /ArialNarrow-BoldItalic
    /ArialNarrow-Italic
    /ArialUnicodeMS
    /BaskOldFace
    /Batang
    /Bauhaus93
    /BellMT
    /BellMTBold
    /BellMTItalic
    /BerlinSansFB-Bold
    /BerlinSansFBDemi-Bold
    /BerlinSansFB-Reg
    /BernardMT-Condensed
    /BodoniMTPosterCompressed
    /BookAntiqua
    /BookAntiqua-Bold
    /BookAntiqua-BoldItalic
    /BookAntiqua-Italic
    /BookmanOldStyle
    /BookmanOldStyle-Bold
    /BookmanOldStyle-BoldItalic
    /BookmanOldStyle-Italic
    /BookshelfSymbolSeven
    /BritannicBold
    /Broadway
    /BrushScriptMT
    /CalifornianFB-Bold
    /CalifornianFB-Italic
    /CalifornianFB-Reg
    /Centaur
    /Century
    /CenturyGothic
    /CenturyGothic-Bold
    /CenturyGothic-BoldItalic
    /CenturyGothic-Italic
    /CenturySchoolbook
    /CenturySchoolbook-Bold
    /CenturySchoolbook-BoldItalic
    /CenturySchoolbook-Italic
    /Chiller-Regular
    /ColonnaMT
    /ComicSansMS
    /ComicSansMS-Bold
    /CooperBlack
    /CourierNewPS-BoldItalicMT
    /CourierNewPS-BoldMT
    /CourierNewPS-ItalicMT
    /CourierNewPSMT
    /EstrangeloEdessa
    /FootlightMTLight
    /FreestyleScript-Regular
    /Garamond
    /Garamond-Bold
    /Garamond-Italic
    /Georgia
    /Georgia-Bold
    /Georgia-BoldItalic
    /Georgia-Italic
    /Haettenschweiler
    /HarlowSolid
    /Harrington
    /HighTowerText-Italic
    /HighTowerText-Reg
    /Impact
    /InformalRoman-Regular
    /Jokerman-Regular
    /JuiceITC-Regular
    /KristenITC-Regular
    /KuenstlerScript-Black
    /KuenstlerScript-Medium
    /KuenstlerScript-TwoBold
    /KunstlerScript
    /LatinWide
    /LetterGothicMT
    /LetterGothicMT-Bold
    /LetterGothicMT-BoldOblique
    /LetterGothicMT-Oblique
    /LucidaBright
    /LucidaBright-Demi
    /LucidaBright-DemiItalic
    /LucidaBright-Italic
    /LucidaCalligraphy-Italic
    /LucidaConsole
    /LucidaFax
    /LucidaFax-Demi
    /LucidaFax-DemiItalic
    /LucidaFax-Italic
    /LucidaHandwriting-Italic
    /LucidaSansUnicode
    /Magneto-Bold
    /MaturaMTScriptCapitals
    /MediciScriptLTStd
    /MicrosoftSansSerif
    /Mistral
    /Modern-Regular
    /MonotypeCorsiva
    /MS-Mincho
    /MSReferenceSansSerif
    /MSReferenceSpecialty
    /NiagaraEngraved-Reg
    /NiagaraSolid-Reg
    /NuptialScript
    /OldEnglishTextMT
    /Onyx
    /PalatinoLinotype-Bold
    /PalatinoLinotype-BoldItalic
    /PalatinoLinotype-Italic
    /PalatinoLinotype-Roman
    /Parchment-Regular
    /Playbill
    /PMingLiU
    /PoorRichard-Regular
    /Ravie
    /ShowcardGothic-Reg
    /SimSun
    /SnapITC-Regular
    /Stencil
    /SymbolMT
    /Tahoma
    /Tahoma-Bold
    /TempusSansITC
    /TimesNewRomanMT-ExtraBold
    /TimesNewRomanMTStd
    /TimesNewRomanMTStd-Bold
    /TimesNewRomanMTStd-BoldCond
    /TimesNewRomanMTStd-BoldIt
    /TimesNewRomanMTStd-Cond
    /TimesNewRomanMTStd-CondIt
    /TimesNewRomanMTStd-Italic
    /TimesNewRomanPS-BoldItalicMT
    /TimesNewRomanPS-BoldMT
    /TimesNewRomanPS-ItalicMT
    /TimesNewRomanPSMT
    /Times-Roman
    /Trebuchet-BoldItalic
    /TrebuchetMS
    /TrebuchetMS-Bold
    /TrebuchetMS-Italic
    /Verdana
    /Verdana-Bold
    /Verdana-BoldItalic
    /Verdana-Italic
    /VinerHandITC
    /Vivaldii
    /VladimirScript
    /Webdings
    /Wingdings2
    /Wingdings3
    /Wingdings-Regular
    /ZapfChanceryStd-Demi
    /ZWAdobeF
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 150
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages false
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 900
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.00111
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /ColorImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 150
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages false
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 1200
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.00083
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.76
    /HSamples [2 1 1 2] /VSamples [2 1 1 2]
  >>
  /GrayImageDict <<
    /QFactor 0.40
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 15
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages false
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1600
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.00063
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile (None)
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False
  /CreateJDFFile false
  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000410064006f006200650020005000440046002065876863900275284e8e55464e1a65876863768467e5770b548c62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef69069752865bc666e901a554652d965874ef6768467e5770b548c52175370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002c0020006400650072002000650067006e006500720020007300690067002000740069006c00200064006500740061006c006a006500720065007400200073006b00e60072006d007600690073006e0069006e00670020006f00670020007500640073006b007200690076006e0069006e006700200061006600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200075006d002000650069006e00650020007a0075007600650072006c00e40073007300690067006500200041006e007a006500690067006500200075006e00640020004100750073006700610062006500200076006f006e00200047006500730063006800e40066007400730064006f006b0075006d0065006e00740065006e0020007a0075002000650072007a00690065006c0065006e002e00200044006900650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000520065006100640065007200200035002e003000200075006e00640020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f00620065002000500044004600200061006400650063007500610064006f007300200070006100720061002000760069007300750061006c0069007a00610063006900f3006e0020006500200069006d0070007200650073006900f3006e00200064006500200063006f006e006600690061006e007a006100200064006500200064006f00630075006d0065006e0074006f007300200063006f006d00650072006300690061006c00650073002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f006200650020005000440046002000700072006f00660065007300730069006f006e006e0065006c007300200066006900610062006c0065007300200070006f007500720020006c0061002000760069007300750061006c00690073006100740069006f006e0020006500740020006c00270069006d007000720065007300730069006f006e002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA (Utilizzare queste impostazioni per creare documenti Adobe PDF adatti per visualizzare e stampare documenti aziendali in modo affidabile. I documenti PDF creati possono essere aperti con Acrobat e Adobe Reader 5.0 e versioni successive.)
    /JPN <FEFF30d330b830cd30b9658766f8306e8868793a304a3088307353705237306b90693057305f002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e305930023053306e8a2d5b9a3067306f30d530a930f330c8306e57cb30818fbc307f3092884c3044307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020be44c988b2c8c2a40020bb38c11cb97c0020c548c815c801c73cb85c0020bcf4ace00020c778c1c4d558b2940020b3700020ac00c7a50020c801d569d55c002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken waarmee zakelijke documenten betrouwbaar kunnen worden weergegeven en afgedrukt. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200073006f006d002000650072002000650067006e0065007400200066006f00720020007000e5006c006900740065006c006900670020007600690073006e0069006e00670020006f00670020007500740073006b007200690066007400200061007600200066006f0072007200650074006e0069006e006700730064006f006b0075006d0065006e007400650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f00620065002000500044004600200061006400650071007500610064006f00730020007000610072006100200061002000760069007300750061006c0069007a006100e700e3006f002000650020006100200069006d0070007200650073007300e3006f00200063006f006e0066006900e1007600650069007300200064006500200064006f00630075006d0065006e0074006f007300200063006f006d0065007200630069006100690073002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a0061002c0020006a006f0074006b006100200073006f0070006900760061007400200079007200690074007900730061007300690061006b00690072006a006f006a0065006e0020006c0075006f00740065007400740061007600610061006e0020006e00e400790074007400e4006d0069007300650065006e0020006a0061002000740075006c006f007300740061006d0069007300650065006e002e0020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400200073006f006d00200070006100730073006100720020006600f60072002000740069006c006c006600f60072006c00690074006c006900670020007600690073006e0069006e00670020006f006300680020007500740073006b007200690066007400650072002000610076002000610066006600e4007200730064006f006b0075006d0065006e0074002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create PDFs that match the "Suggested"  settings for PDF Specification 4.0)
  >>
>> setdistillerparams
<<
  /HWResolution [600 600]
  /PageSize [612.000 792.000]
>> setpagedevice