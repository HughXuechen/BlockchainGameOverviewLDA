A Game-Theoretic Analysis of Cross-Chain Atomic Swaps with HTLCs
A Game-Theoretic Analysis of
Cross-Chain Atomic Swaps with HTLCs
Jiahua Xu
UCL Centre for Blockchain Technologies
EPFL
Damien Ackerer
Covario
Alevtina Dubovitskaya
Lucerne University of Applied Sciences and Arts
Swisscom
UCL Centre for Blockchain Technologies
Abstract—To achieve interoperability between unconnected
ledgers, hash time lock contracts (HTLCs) are commonly used
for cross-chain asset exchange. The solution tolerates transaction
failure, and can “make the best out of worst” by allowing
transacting agents to at least keep their original assets in case
of an abort. Nonetheless, as an undesired outcome, reoccurring
transaction failures prompt a critical and analytical examination
of the protocol. In this study, we propose a game-theoretic
framework to study the strategic behaviors of agents taking part
in cross-chain atomic swaps implemented with HTLCs. We study
the success rate of the transaction as a function of the exchange
rate of the swap, the token price and its volatility, among other
variables. We demonstrate that in an attempt to maximize one’s
own utility as asset price changes, either agent might withdraw
from the swap. An extension of our model confirms that collateral
deposits can improve the transaction success rate, motivating
further research towards collateralization without a trusted third
party. A second model variation suggests that a swap is more
likely to succeed when agents dynamically adjust the exchange
rate in response to price fluctuations.
Index Terms—atomic swap, blockchain, game theory, stochas-
tic price
I. INTRODUCTION
A. Background
An atomic swap is a coordination task where two parties
are willing to exchange assets such that either both parties
receive each other’s original assets upon successful execution,
or nothing in the event of failure [1]. Atomic swaps are easily
achievable on a single ledger by implementing smart contracts
such as automated market-making protocols [2].
For cross-chain asset swaps, the conventional approach is to
use a centralized exchange, characterized by high efficiency
and transaction speed. However, this requires intermediary
fees and trust in the exchange (in terms of privacy and
transparency of its matching mechanisms). In addition, cen-
tralized exchanges are vulnerable to different kinds of attacks
[3], from wallet hacking [4], to DDoS attacks [5]. Over-the-
counter (OTC) operations [6], [7] remain frequent for financial
transactions. In the financial industry, it is common to use
trusted third parties for OTC settlements, such as central
clearing counterparties or broker-dealers, that have similar
disadvantages as centralized exchanges.
To address some of the issues with centralized exchanges,
and transactions with an intermediary in general, distributed
exchanges (DEXs) have recently become a popular tool for
cross-chain asset exchange [8]–[11]. In such a peer-to-peer
(P2P) environment, the transacting agents typically do not
know each other and are thus exposed to malicious behaviors
from their counterparty in DEXs that only provide match-
making services. Therefore, the major challenge in such set-
tings is to achieve atomicity of the cross-ledger transaction;
that is, either the entirety of the transaction is executed, or, in
case of failure, nothing occurs [1].
HTLCs,1 first proposed on a Bitcoin forum by TierNolan
[12], have been adopted by some DEXs [9], [10] to achieve
atomicity of cross-chain transactions without direct communi-
cations between the ledgers. Studying and improving HTLCs
has since been of high interest [13]–[15].
A hash time lock contract (HTLC) requires the two agents
separately locking their assets on the respective blockchains,
using the hash of a secret, generated by one of the users. The
assets can then be unlocked upon revealing the preimage of a
hash.
The users have accounts (wallets) on two disconnected
ledgers (Chaina and Chainb) executing smart contracts. Con-
sider that Alice wants to send assets on Chaina to Bob, in
exchange for assets on Chainb from Bob. At Step 1, Alice
initiates the transaction by generating a secret (a key) that
will be used to unlock the asset transfers later on. She then
deploys a smart contract on Chaina, that will lock her assets
until time ta. This contract will transfer to Bob the assets only
if the secret generated by Alice is revealed and entered into the
smart contract. To verify the secret, Alice reveals its hash as
part of the smart contract (cf. Figure 1 Step 1). One important
feature of this contract is that after time ta, should the secret
have not been revealed, the smart contract expires and Alice’s
assets will be unlocked and returned to her wallet.
Next, Bob can verify the contract deployed by Alice on
Chaina (assets, delivery address, etc.) and use the hash sub-
mitted by Alice in order to deploy a similar contract on Chainb
(cf. Figure 1 Step 2), specifying the amount he is willing to
transfer to Alice and expiry time tb. Until then Bob’s assets
are locked on Chainb.
At Step 3, Alice can verify the contract deployed on Chainb,
unlock the assets, and initiate their transfer to her wallet by
revealing the secret on Chainb. As early as when the secret
is revealed in the mempool of Chainb (even before Alice’s
1The full name may be found with the suffix “ed” after hash or lock in
research papers. There is no official convention as far as we know.
584
2021 IEEE 41st International Conference on Distributed Computing Systems (ICDCS)
2575-8411/21/$31.00 ©2021 IEEE
DOI 10.1109/ICDCS51616.2021.00062
20
21
 IE
EE
 4
1s
t I
nt
er
na
tio
na
l C
on
fe
re
nc
e 
on
 D
ist
rib
ut
ed
 C
om
pu
tin
g 
Sy
st
em
s (
IC
DC
S)
 |
 9
78
-1
-6
65
4-
45
13
-9
/2
1/
$3
1.
00
 ©
20
21
 IE
EE
 |
 D
O
I: 
10
.1
10
9/
IC
DC
S5
16
16
.2
02
1.
00
06
2
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 1: Hash time lock contract (HTLC).
transfer is confirmed), Bob can use the secret to unlock the
assets on Chaina and complete the cross-ledger transaction. In
the best-case scenario, this mechanism enables atomic cross-
ledger exchange of the assets without relying on a trusted
party and without connection between ledgers. If Alice does
not unlock the assets on Chainb before tb, then the assets are
transferred back to Bob, thus, she has no incentive to reveal the
secret as that would allow Bob to execute the smart contract
on Chaina and transfer the assets to his wallet while keeping
his assets on Chainb. In turn, once the secret is revealed,
Bob’s assets are transferred to Alice and he should execute the
smart contract on Chaina immediately in order to complete
the transaction, otherwise he transferred his assets without
receiving Alice’s assets.
B. Contributions
In this paper, we focus on the standard implementation of
a cross-ledger atomic swap with hash time lock contracts,
HTLCs between two agents who wish to exchange tokens.
In our framework, we assume a stochastic token price and
that the counterparties can choose to either continue or stop
at any stage of the transaction.
We define a game-theoretic framework to study the agents’
behaviors and the transaction outcome in atomic swaps. We
focus on the standard protocol with HTLCs, yet the approach
can be applied to different setups. The agents’ utility functions
depend on
1. the transaction outcome (success or failure),
2. the asset price variation (trading profits),
3. the duration of the transaction (locked in the game).
The agents’ utility functions are symmetric, but the agents
may have a different idiosyncratic willingness to complete
the transaction, the so-called success premium. By backward
induction, we derive the agents’ optimal decisions, as well as
the transaction success rate as a function of the agreed swap
rate, actual token price and its volatility, among other variables.
The standard setup has complete information symmetry, and
we study the game with uncertainty in counterparties’ success
premium.
In an extension, we show that if agents would be required
to post collateral, everything else being equal, the transaction
success rate would be higher. In another extension, we show
that if agents can adjust the amount of tokens that they lock
in the HTLCs, everything else being equal, the transaction
success rate would be higher.
To the best of our knowledge, our work is the first to
perform a thorough step-by-step examination of HTLC agents’
behavior through a game-theoretic model with numerical sim-
ulations.
II. RELATED WORK
Recent years have witnessed a plethora of cross-ledger
transaction solutions besides HTLC. Wanchain [16] enables
interfacing and asset conversion to the native Wanchain to-
ken (Wancoins) in order to perform a cross-ledger asset
exchange subsequently. Wanchain implements a privacy pro-
tection mechanism through a ring signature scheme [17] and a
one-time account mechanism via one-time use wallets created
for each transaction. Interledger [18] uses Byzantine notaries
to construct a payment chain from sender to recipient over
multiple ledgers, and the STREAM Interledger Transport
protocol [19] apply packetized payments [20]. Relays [21],
sidechains [22], [23], off-chain payment channels [24]–[26],
and solutions based on chain relays [27] require building
interfaces to such systems, similar to the case of a blockchain-
based medium like Wanchain.
Cross-ledger transaction protocols are actively studied by
the distributed ledger community: Borkowski et al. [28] sur-
veyed atomic swaps for distributed ledgers, Herlihy provided
a first extensive analysis of the scheme and demonstrated
that HTLCs are still vulnerable to attacks, such as DDoS or
secret hack [29]. Moreover, asset price volatility and malicious
behaviour from agents driven by an attempt to maximize finan-
cial profits could negatively affect the transaction counterpart.
For instance, if Alice becomes inactive before completion of
the transaction, then the assets will be blocked on both ledgers
[27], [30]. While it can be tolerated by an agent, this can incur
significant losses to a counterparty.
To reduce the risk of agents being exposed to adverse
behaviour, collateral deposits or transaction fees can be used.
In a recent work, Han et al. [30] view atomic swaps as
American options (without premium), and discuss “optional-
ity” as a risk imposed by the swap initiator. The initiator can
choose at any moment before revealing the secret whether to
proceed with the swap or to abort it. To reduce the risk of
malicious behaviour by the swap initiator, the authors propose
to implement a premium mechanism. In our work, we do
not define honest or malicious actors explicitly. Instead, we
assume that both actors act rationally in their attempts to
maximize their utility, and may appear as either “honest”
or “malicious” depending on the movement of the token
price. One of the trading protocols that support atomic swaps
between parties and exchanges is Arwen. Arwen leverages off-
chain RFQ trades and uses an escrow-fee mechanism based on
blockchain to incentivize a swap initiator to unlock the coins
in a timely manner and address lockup griefing in HTLC [31].
Zamyatin et al. [27] suggested posting collateral at least
equal to the assets locked on the blockchain for a trade. The
585
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
authors also proposed overcollateralization and a liquidation
mechanism to mitigate extreme price fluctuations for both
short and long term cross-ledger transactions. While such
approach reduces economically rational agents’ incentive to
misbehave, it is disadvantageous in that if an agent would like
to transfer all his assets of one kind, he will be obliged to
execute multiple transactions, each with an amount (approx-
imately) equal to half the amount of the assets he currently
possesses. In the extension of our model (Section IV), we
also propose that both agents place collateral on one of the
chains. We then study the impact of the collateralization on the
transaction success rate. This analysis allows us to determine
the optimal level of collateral for both agents.
Zakhary et al. [32] highlight that even if both participants
are honest, the atomicity of HTLC can be violated due to
crash failures, preventing smart contract execution before the
expiry time of the contract. To address this problem, the
authors present all-or-nothing atomic cross-chain commitment
protocols and discuss their implementations: the AC3TW -
atomic cross-chain commitment protocol with centralized
trusted witness and the AC3WN -atomic cross-chain com-
mitment protocol that uses another blockchain as a witness
network. This approach shares some similarities with the
recently proposed notion of a so-called cross-chain deal [33],
which, as a generalization of the atomic swap, aims to enhance
its expressive power to support various types of commercial
practices. Both cross-chain deals and the protocols proposed
in [32] are based on exchange of “proofs” or “votes” instead
of relying on hashed time locks.
Belotti et al. [34] are among the first to conduct a game-
theoretical analysis of cross-chain swaps (including HTLC
as presented in [29], [35] and commitment-based protocols
AC3TW and AC3WN from [32]) and characterise their
equilibria. In our work, we focus on the intuition behind the
strategic behavior of the participants of HTLC and show that
it heavily depends on parameters such as the token price trend
and volatility, as well as transaction confirmation time on the
employed blockchains.
III. A GAME-THEORETIC ANALYSIS
We seek to establish a model with a good balance of
simplicity and fidelity. To this end, we apply reasonable and
justifiable assumptions, and set realistic parameter values for
numeric demonstration.
A. Basic setup
Alice, denoted by A, wishes to trade some amount of
Tokena for 1 unit of Tokenb, while Bob, denoted by B, is
willing to do the opposite. Tokena and Tokenb are assets from
two different blockchains, namely Chaina and Chainb. A and
B intend to swap assets with each other and agree on the
exchange rate: P∗ Tokena = 1 Tokenb. Table I summarizes
the expected balance change of A’s and B’s assets on the two
chains through the swap.
For simplification, we make the following assumptions:
TABLE I: Agents’ expected balance change by swap.
Expected balance change by swap
Agent on Chaina on Chainb
Alice (A) −P∗ Tokena +1 Tokenb
Bob (B) +P∗ Tokena −1 Tokenb
1. The time it takes for a transaction to be confirmed
on Chaina or Chainb is constant, equal to τa and τb
respectively.
2. Transaction fees are negligible relative to transaction
volume.
3. Tokena is the numéraire, in which Tokenb is priced and
in which both transacting agents’ utilities are measured.
4. Tokenb’s price (denominated in Tokena), Pt, follows a
geometric Brownian motion:
ln Pt+τ
Pt
=
(
µ− σ2
2
)
τ + σ (Wt+τ −Wt) (1)
where W follows a Wiener process with drift µ and
infinitesimal variance σ2.
5. A and B are fully rational, which means they always
choose the option that maximizes their utility.
6. A and B have the same parametric utility function:
U it = E
[
(1+αi S)V
t+Tit
er
i Tit
]
(2)
where
i: agent indicator, i ∈ {A,B}
t: time when the utility is assessed
V : asset value denominated in Tokena
T : time until end of game, when no further events directly
connected to swap will occur
r: discount rate, r > 0
S: success indicator, 1 if the swap succeeds (i.e. agents
balance change follows Table I), 0 if fails
α: success premium
7. A and B are aware of the value of each other’s parameter
set, i.e. A knows (rB, αB), and B knows (rA, αA).
According to Equation (1), given Tokenb’s price at time t,
Pt, the expectation (denoted by E), probability density func-
tion (PDF, denoted by P), and cumulative density function
(CDF, denoted by C) of its price at t+ τ can be expressed as:
E(Pt, τ) := E[Pt+τ |Pt] = Pte
µτ
P(x, Pt, τ) := P[Pt+τ = x |Pt] = e
−
(
ln x
Pt
−
(
µ−σ
2
2
)
τ
)2
2τσ2√
2πτσx
C(x, Pt, τ) := P[Pt+τ ≤ x |Pt] =
erfc
( ln x
Pt
−
(
µ−σ
2
2
)
τ
√
2τσ
)
2
where erfc is the complementary error function, and x > 0.
All actors act rationally to maximize their utility as defined
in Equation (2). Intuitively, actors with a higher success
premium α will act more “honestly”, i.e. ceteris paribus, they
are more likely to continue the game; on the other hand, actors
with a lower success premium α may appear “malicious”,
since ceteris paribus, they are more likely to withdraw from
586
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
TABLE II: Notations summary.
Notation Description
A, B Alice, Bob
τa, τb Transaction confirmation time on Chaina, Chainb
εb Time for an initiated transaction to become discoverable
in the mempool of Chainb
t Point in time
ta, tb Points in time when the HTLCs on Chaina, Chainb expire
P Price of Tokenb denominated in Tokena
P∗ Agreed price of Tokenb denominated in Tokena
U Agent’s utility denominated in Tokena
V Asset value denominated in Tokena
r Discount rate representing time preference
S Indicator of whether the swap succeeds (= 1) or not (= 0)
α Success premium
T Time until end of game
µ Wiener Process drift, see Equation (1)
σ2 Wiener Process variance, see Equation (1)
E(Pt, τ) Expectation of Tokenb price at t+ τ given its time-t price Pt
P(·, Pt, τ) PDF of Tokenb price at t+ τ given its time-t price Pt
C(·, Pt, τ) CDF of Tokenb price at t+ τ given its time-t price Pt
the game.
B. Decision timeline
Let εb denote the time needed to look up a transaction in
the mempool of Chainb after it has been initiated. This time is
smaller than the transaction confirmation time on Chainb, i.e.
εb < τb (3)
Let {tn}n∈N denote the points in time when agents have to
make a decision, and ta (tb) denote the point in time when
the HTLC on Chaina (Chainb) expires. See Table II for a
comprehensive list of notations used in this paper.
According the HTLC protocol described in Section I-A, an
atomic swap should work as follows:
1) Agreement and preparation:
t0: A and B agree on the swap conditions, including
exchange rate P∗, contract lock expiration time ta and tb etc.
A generates a secret and its hash.
2) Action:
t1: A uses the hash generated at t0 to lock P∗ Tokena
on Chaina through an HTLC that expires at ta; thus,
t1 ≥ t0 (4)
t2: B uses the same hash to lock 1 Tokenb on Chainb
through another HTLC that expires at tb.
B does so only after verifying that A’s contract is in order
and that its deployment has been confirmed on Chaina; thus,
t2 ≥ t1 + τa (5)
t3: A uses the secret to unlock the 1 Tokenb on Chainb.
A does so only after verifying that B’s contract is in order
and that its deployment has been confirmed on Chainb; thus,
t3 ≥ t2 + τb (6)
𝑡!𝑡" 𝑡# 𝑡$ 𝑡% 𝑡& 𝑡' 𝑡( 𝑡)
𝜏* 𝜏+ 𝜀+ 𝜏+ 𝜏* 𝜏+ 𝜏*
𝑡*𝑡+
(a) Timeline with arbitrary amount of waiting time
𝑡!
𝑡"
𝑡# 𝑡$ 𝑡% 𝑡& 𝑡' 𝑡(𝑡)
𝑡*𝑡+
𝜏* 𝜏+ 𝜀+ 𝜏+ 𝜏* 𝜏+𝜏*
(b) Idealized timeline with zero waiting time
Fig. 2: Swap timeline as described in Section III-B.
At t4: B uses the same secret to unlock the P∗ Tokena on
Chaina. B does so only after seeing the secret been revealed
by A in the mempool of Chainb; thus
t4 ≥ t3 + τε (7)
3) Receipt:
Which token an agent receives, and when, depends on the
outcome of the swap. If both A and B hold on to their
agreement by following the steps during the action phase as
described in Section III-B2, then the swap succeeds and A
and B receive tokens at the following two points in time
respectively:
t5: A receives the 1 Tokenb after her transaction is
confirmed on Chainb, and this must take place before the lock
contract expires at tb; thus
t5 = t3 + τb ≤ tb (8)
t6: B receives the P∗ Tokena after his transaction is
confirmed on Chaina, and this must take place before the lock
contract expires at ta; thus
t6 = t4 + τa ≤ ta (9)
If, however, A or B withdraws at any point during the action
phase as described in III-B2, then the swap fails and A and
B have their original tokens returned to them at the following
two points in time respectively:
t7: the HTLC on Chainb returns B’s original 1 Tokenb
to him when the time lock expires at tb, and B receives the 1
Tokenb at t7; thus
t7 = tb + τb (10)
t8: the HTLC on Chaina returns A’s original 1 Tokena
to her when the time lock expires at ta, and A receives the
P∗ Tokena at t8; thus
t8 = ta + τa (11)
Combining (3)–(11), we get
t0 ≤ t1 < t1 + τa ≤ t2 < t2 + τb ≤ t3 < t3 + εb
t3 + εb < t3 + τb = t5 ≤ tb < tb + τb = t7
t3 + εb ≤ t4 < t4 + τa = t6 ≤ ta < ta + τa = t8
(12)
The relationship between different points in time can thus
be illustrated as Figure 2a.
587
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
C. Zero waiting time
An idealized decision-making time of 0 allows the game to
be characterized as a discrete one, where actions can only be
taken at a specified, finite set of points in time. In this way,
we can express the relationships between the critical points in
time as (Figure 2b):
t5 =
t0︷︸︸︷
t1 +τa︸ ︷︷ ︸
t2
+τb + τb = tb t7 = tb + τb
t6 =
t3︷ ︸︸ ︷
t2 + τb+εb︸ ︷︷ ︸
t4
+τa = ta t8 = ta + τa
(13)
This model simplification can be justified for multiple
reasons. Firstly, at the outset of the swap, it should be of
both agents’ interest to agree on the terms such that the
swap can be carried out in a swift manner. From a game-
theoretical perspective, lengthening the decision-making time
increases optionality for A at t3, thus reducing the expected
utility for B. B in turn would postpone his decision at t2
until as late as possible, to maximize his own optionality and
minimize A’s future optionality. A in turn would wait as long
as possible at t1 to kick off the swap in order to minimize
B’s future optionality and maximize her own. In turn at t0, B
is incentivised to only agree to the shortest time possible to
reduce A’s optionality at t1.
In addition, a long lock time can reduce liquidity for A
and B collectively. Formally, the negative impact of lock time
on agents’ utility is captured by their positive discount rate r,
as shown in (2). Therefore, the agents would set the contract
expiration time as early as possible, to reduce the time of
assets being locked, in two ways:
1. An agent can receive his/her counterparty’s original asset
earlier rather than later in case the swap eventually
succeeds. This is because an agent is forced to choose
whether to continue or to withdraw immediately each
time it is his/her turn to take an action; no immediate
action (i.e. waiting) is equivalent to withdrawal since
it precludes timely completion of necessary transactions
before the contract expiration time, and thus lead to
failure of the swap.
2. An agent can get back his/her original asset as soon as
the counterparty withdraws from the swap, i.e. when the
swap eventually fails.
D. Default parameters
We use backward induction to derive the optimal strategy
for each agent. We solve for agents’ best strategy numerically
and graphically, as we show later in Section III-E that it
quickly becomes non-trivial to analytically derive a closed-
form expression. To this end, we set the default value of certain
parameters as in Table III. We additionally specify the unit of
parameters to put the model into perspective. In the following,
we discuss the plausibility of selected values for blockchain-
specific parameters.
TABLE III: Default value of parameters.
α
A
= 0.3 r
A
= 0.01 (/hour) τa = 3 (hour) εb = 1 (hour) µ = 0.002 (/hour)
α
B
= 0.3 r
B
= 0.01 (/hour) τb = 4 (hour) Pt0
= 2 (Tokena) σ = 0.1 (/
√
hour)
Transaction confirmation time τ : We set the confirmation
time on both chains to be in the order of hours. Confirmation
time in this paper refers to the time needed to reach transaction
finality with a high probability, which typically equals a
multiple of the block time. Given the wide adoption of the
computationally heavy consensus mechanism—Proof of Work
[36], it is to date still common for a blockchain to have an
hour-long confirmation time.2
Price trend µ: The default value of a positive price trend
suggests the deflationary nature of Tokenb, for example caused
by higher levels of token buyback and burn compared to
Tokena [37]. In Section III-F, we explore the possibility when
Tokenb is inflationary, i.e. µ < 0, and when µ = 0.
Volatility σ: The default hourly volatility value of 10%
aligns with empirical evidence [38].
In Section III-F, we inspect modelling results with an array
of different values for each parameter.
As per assumption, the values of all the parameters dis-
played in Table III are common knowledge (i.e. A knows, B
knows, and A knows that B knows etc).
E. Backward induction
With backward induction, we start from t4, the last possible
action point. We then move backward to an earlier action point
each time, assuming the swap is still ongoing (i.e. nobody has
withdrawn up until that point). Recall that we use the idealized
framework where decision-making time is reduced to a point
in time. That is, at each decision-making point in time, agents
choose an action from the two-element action set {cont , stop}.
1) t4: B decides whether to unlock Tokena (cont) or not
(stop). Once A has unlocked Tokenb with her pre-generated
secret, it does not make sense for B to withdraw and forgo
the locked Tokena (which yields to zero utility). Therefore,
as soon as B sees the secret revealed through A’s transaction
from Chainb’s mempool, B uses the secret to unlock Tokena.
Thus, B chooses to continue with certainty.
2) t3: A decides whether to unlock Tokenb (cont) or not
(stop).
cont: A unlocks the 1 Tokenb, and receives it at t5 =
t3+τb, in which case B gets P∗ Tokena at t6 = t3+(εb+τa).
UAt3 (cont) =
(1+αA)E(Pt3 ,τb)
er
Aτb
(14)
UBt3(cont) =
(1+αB)P∗
er
B(εb+τa)
(15)
2See e.g. https://support.kraken.com/hc/en-us/articles/203325283-
Cryptocurrency-deposit-processing-times
588
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t3, Pt3
A
li
ce
’s
u
ti
li
ty
at
t 3
,
U
A t 3 P∗ = 1.6
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t3, Pt3
A
li
ce
’s
u
ti
li
ty
at
t 3
,
U
A t 3 P∗ = 2
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t3, Pt3
A
li
ce
’s
u
ti
li
ty
at
t 3
,
U
A t 3 P∗ = 2.4
Pt3
UAt3 (cont)
UAt3 (stop)
Fig. 3: Alice’s utility at t3, (UAt3 ) with different strategies
(cont , stop), Tokenb price values (Pt3 ), and exchange rate
values (P∗).
stop: A waives the contract and has the P∗ Tokena
returned to her at t8 = t3 + (εb + 2τa), in which case B
gets 1 Tokenb at t7 = t3 + 2τb.
UAt3 (stop) =
P∗
er
A(εb+2τa )
(16)
UBt3(stop) =
E(Pt3 ,2τb)
er
B 2τb
(17)
By assumption, A chooses the option that maximizes her
utility. Intuitively, when current Tokenb price Pt3 is sufficiently
large, A chooses to stop so that she receives Tokenb in the end;
when Pt3 is sufficiently small, A chooses to continue so that
she receives Tokena in the end.
Let Pt3 denote the cut-off price that equates UAt3 (cont) and
UAt3 (stop), i.e.
(1+αA)E(Pt3 ,τb)
er
Aτb
= P∗
er
A(εb+2τa )
Pt3 = e(r
A−µ)τb−r
A(εb+2τa)P∗
1+αA
(18)
Clearly, Pt3 increases with P∗ (see also Figure 3). This is
because higher P∗ makes the option stop more attractive for
A, driving the threshold price Pt3 higher.
A’s strategy at t3 can be summarized as:{
cont , Pt3 > Pt3
stop, Pt3 ≤ Pt3
(19)
3) t2: B decides whether to write an HTLC on Chainb
(cont) or not (stop).
cont: Even when B chooses to continue, whether the
swap eventually succeeds depends on how Tokenb price
evolves until t3. Therefore, the utility of A and B at t2 can be
expressed with their time-discounted, expected utility at t3:
UAt2 (cont) =
∫∞
Pt3
P(x,Pt2 ,τb)UAt3 (cont)dx
+C(Pt3 ,Pt2 ,τb)U
A
t3
(stop)
er
Aτb
(20)
UBt2(cont) =
[1−C(Pt3 ,Pt2 ,τb)]UBt3 (cont)
+
∫Pt3
0 P(x,Pt2 ,τb)UBt3 (stop)dx
er
Bτb
(21)
stop: B withdraws from the deal and keeps 1 Tokenb at
t2. Since A already locked P∗ Tokena, she will receive her
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t2, Pt2
B
ob
’s
u
ti
li
ty
at
t 2
,
U
B t 2 P∗ = 1.6
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t2, Pt2
B
ob
’s
u
ti
li
ty
at
t 2
,
U
B t 2 P∗ = 2
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t2, Pt2
B
ob
’s
u
ti
li
ty
at
t 2
,
U
B t 2 P∗ = 2.4
Pt2
Pt2
UBt2(cont)
UBt2(stop)
Fig. 4: Bob’s utility at t2, (UBt2 ) with different strategies
(cont , stop), Tokenb price values (Pt2 ), and exchange rate
values (P∗).
original Tokena back at t8 = t2 + (τb + εb + 2τa).
UAt2 (stop) =
P∗
er
A(τb+εb+2τa)
(22)
UBt2(stop) = Pt2 (23)
By assumption, B also chooses the option that maximizes
his utility. In Figure 3, UBt3(cont) and UBt3(stop) are plotted
as a function of Pt3 . Intuitively, if current Tokenb price Pt2
is very low, then although B would want to swap to receive
Tokena, he can safely assume that Alice would not honor the
agreement at t3 anyway, so B will not bother to continue; if
Pt2 is very high, then B would like to keep Tokenb and won’t
swap at all.
Therefore, Bob chooses cont when Pt2 falls in a feasible
range, denoted by (Pt2 , Pt2). Figure 4 shows that this range
expands and shifts to the higher end with larger P∗.
B’s strategy at t2 can be summarized as:{
cont , Pt2 < Pt2 ≤ Pt2
stop, Pt2 ≤ Pt2 or Pt2 > Pt2
(24)
Note that depending on the value of parameters, the two
utility curves might not always have two intersections (dis-
regarding the origin). For example, the lower αB is, the
narrower the feasible range of Pt2 is, because B is less
desperate to swap. When αB is sufficiently small, UBt2(cont) <
UBt2(stop), ∀Pt2 > 0, and the swap always fails. This will be
further discussed in Section III-F.
4) t1: A decides whether to initiate the swap by writing an
HTLC on Chaina (cont) or not (stop).
cont: The utility of A and B at t1 can be expressed by
time-discounting their expected utility at t2 = t1 + τa:
UAt1 (cont) =
∫Pt2
Pt2
P(Pt2
,Pt1
,τa)UAt2
(cont)dPt2
+[
1−C(Pt2 ,Pt1 ,τa)+C(Pt2 ,Pt1 ,τa)
]
UAt2
(stop)
erAτa
(25)
UBt1(cont) =
∫Pt2
Pt2
P(Pt2
,Pt1
,τa)UBt2
(cont)dPt2
+
∫Pt2
0 P(Pt2
,Pt1
,τa)UBt2
(stop)dPt2
e
rBτa
(26)
589
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Exchange rate P∗
A
li
ce
’s
u
ti
li
ty
at
t 1
,
U
A t 1
P∗
P∗
UAt1 (cont)
UAt1 (stop)
Fig. 5: Alice’s utility at t1, (UAt1 ) with different strategies
(cont , stop), and exchange rate values (P∗).
stop: A does not initiate the swap and keeps P∗ Tokena
at t1. B also keeps his 1 Tokenb.
UAt1 (stop) = P∗ (27)
UBt1(stop) = Pt1 (28)
Recall that in our idealized swap game, A must initiate
the swap immediately after the terms of swap are agreed
upon, as allowing for waiting time only reduces agents’ utility.
Therefore, A and B must agree on a rate P∗ that makes A
willing to take the first step. Intuitively, if P∗ is too high,
then A would not want to swap; if P∗ is too low, then A
understands the high likelihood of fail because B would not
want to continue at t2, so A would not start the swap either.
Thus, the exchange rate P∗ must lie within a range (P∗, P∗)
to ensure the start of the swap (see Figure 5). Using the values
from Table III we numerically solve the feasible range as:3
(P∗, P∗) = (1.5, 2.5) (29)
A’s strategy at t1 can be summarized as:{
cont , P∗ < P∗ ≤ P∗
stop, P∗ ≤ P∗ or P∗ > P∗
(30)
F. Success rate
We define the success rate (SR) of a swap to be the
likelihood of completion of the swap after it has been initiated,
i.e. after A has made the first move at t1. With the values of
all other parameters being fixed (Table III), SR is a function
of P∗, and can be expressed as:
SR(P∗) =
∫ Pt2 (P∗)
Pt2 (P∗)
P (x, Pt1 , τa)
[
1− C(Pt3(P∗), x, τb)
]
dx,
P∗ < P∗ ≤ P∗ (31)
In Figure 6, we show how success rate SR changes with the
exchange rate P∗. SR curves with the default parameter setting
(Table III) are plotted in blue line ( ), which are compared
with SR curves with different parameter values. Irrespective
of the parameter values, the SR(P∗) curve is always concave,
with the SR-maximizing point residing between P∗ and P∗.
As suggested in Section III-E, this is because overly low P∗
reduces the likelihood of continuation at t3 and t2, while
overly high P∗ reduces the likelihood of continuation at t2.
3Note that Pt1 = Pt0 since t1 = t0 is assumed in (13).
0 1 2 3
0.
0
0.
4
0.
8
Exchange rate P∗
S
u
cc
es
s
ra
te
S
R
αA
0.1
0.2
0.3
0.4
0 1 2 3
0.
0
0.
4
0.
8
Exchange rate P∗
S
u
cc
es
s
ra
te
S
R
rA
0.005
0.01
0.015
0.02
0 1 2 3
0.
0
0.
4
0.
8
Exchange rate P∗
S
u
cc
es
s
ra
te
S
R
τa
1
3
5
7
0 1 2 3
0.
0
0.
4
0.
8
Exchange rate P∗
S
u
cc
es
s
ra
te
S
R
µ
-0.002
0
0.002
0.004
0 1 2 3
0.
0
0.
4
0.
8
Exchange rate P∗
S
u
cc
es
s
ra
te
S
R
αB
0.1
0.2
0.3
0.4
0 1 2 3
0.
0
0.
4
0.
8
Exchange rate P∗
S
u
cc
es
s
ra
te
S
R
rB
0.005
0.01
0.02
0.03
0 1 2 3
0.
0
0.
4
0.
8
Exchange rate P∗
S
u
cc
es
s
ra
te
S
R
τb
2
4
6
8
0 1 2 3
0.
0
0.
4
0.
8
Exchange rate P∗
S
u
cc
es
s
ra
te
S
R
σ
0.05
0.1
0.15
0.2
Fig. 6: Swap success rate SR as a function of exchange rate
P∗ with different parameter values. Default parameter values
are set in Table III. Line plots illustrate SR curves with viable
parameter values; non-viable values are marked with �.
Next, we discuss how the value setting of other parameters
affects the success rate.
1) Success premium α: The parameter success premium
describes the excess utility that an agent receives when the
swap succeeds. The parameter captures not only the excess
utility an agent gains from possessing the counterparty’s token
over his/her own token, but also the utility of guarding his/her
reputation. That is to say, the more an agent cares about
honoring an agreement, the higher α will be. As shown in
Figure 6, ceteris paribus, higher α leads to higher SR. This
is true for both αA and αB. In addition, higher α renders a
bigger feasible range of P∗. Note that when α is too small
(either with A or B), the swap would never be initiated.
2) Time preference r: The parameter time preference de-
scribes an agent’s impatience level. Larger r suggests a higher
degree of impatience, i.e. possessing an asset right now is
more valuable for the agent than obtaining it later. As an
HTLC swap requires an asset-locking period, a certain degree
of patience is needed for both A and B to enter the agreement.
Thus, as shown in Figure 6, larger r results in a narrower
viable range of values for P∗; exceedingly high r renders any
P∗ value infeasible, i.e. the swap would never be initiated.
3) Transaction confirmation time τ : With the presence of
time preference (rA, rB > 0), longer transaction confirmation
time, either on Chaina or Chainb, reduces agents’ utility in
engaging in a swap. Therefore, higher τa or τb shrinks the
viable range of P∗. When P∗ is always chosen optimally (as
to maximize SR), lower τa or τb increases SR.
4) Price trend µ and volatility σ: Figure 6 shows that,
ceteris paribus, higher degree of upward price trend of Tokenb
increases SR. In contrast, higher volatility reduces max SR.
IV. MODEL EXTENSION
In this section, we expand on our basic model described in
Section III and discuss two derivations.
A. HTLC with collateral
In this section, we discuss an HTLC game where both
agents place collateral into a smart contract before the actual
590
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
Q = 0.01
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t2, Pt2
B
ob
’s
u
ti
li
ty
at
t 2
,
U
B t 2 P∗ = 1.6
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t2, Pt2
B
ob
’s
u
ti
li
ty
at
t 2
,
U
B t 2 P∗ = 2
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t2, Pt2
B
ob
’s
u
ti
li
ty
at
t 2
,
U
B t 2 P∗ = 2.4
UBt2,c(cont)
UBt2(stop)
Q = 0.1
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t2, Pt2
B
ob
’s
u
ti
li
ty
at
t 2
,
U
B t 2 P∗ = 1.6
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t2, Pt2
B
ob
’s
u
ti
li
ty
at
t 2
,
U
B t 2 P∗ = 2
0.0 1.0 2.0 3.0
0.
0
1.
0
2.
0
3.
0
Tokenb price at t2, Pt2
B
ob
’s
u
ti
li
ty
at
t 2
,
U
B t 2 P∗ = 2.4
UBt2,c(cont)
UBt2(stop)
Fig. 7: Bob’s utility at t2, (UBt2 ). Indifference points between
cont and stop are marked with �.
.
swap. All assumptions from Section III-A with the exception
of Assumption 6. remain unchanged. We assume additionally:
1) A and B move an allowance to a trusted smart contract on
Chaina in order to charge each of them simultaneously the
same amount of collateral, Q Tokena, before the swap;
2) the smart contract is connected to an Oracle which
observes the transaction outcomes on Chaina and Chainb;
3) if the swap succeeds, the Oracle transfers to each agent
their original collateral; if an agent chooses stop at any
point during the swap, the other agent receives both
agents’ collateral from the Oracle;
4) agent’s utility function is as follows:
U it,c = E
[
(1+αi S)V
t+Tit
er
i Tit
+
Cit
eri tc
]
(32)
where
C: value of collateral to be received back,
tc: time until receiving the collateral.
We use subscript “c” only when an expression differs from
the one in the basic setup (Section III-E).
This setup is theoretical as there is presently no Oracle
service that would be able to monitor the actions as described,
to the best of our knowledge. Yet, the Bisq framework is
similar in spirit with the key difference that a human arbitrator
replaces the Oracle. The goal of this section is to study the
impact of collateralization on the agents’ behaviors and thus
on the transaction outcome. A new atomic swap protocol with
collateral will be discussed in a follow-up work.
We again employ backward induction to derive agents’
utility-maximizing strategy.
1) t4: At this point, if A has released the secret, the Oracle
will determine that A has fulfilled all her obligations and
releases her collateral Q Tokena at t4. Thus, A will receive
Q = 0.01 Q = 0.1
0.0 1.0 2.0 3.0
0.
0
1
.0
2
.0
3
.0
Exchange rate P∗
A
li
ce
’s
u
ti
li
ty
a
t
t 1
,
U
A t 1
UAt1,c(cont)
UAt1,c(stop)
0.0 1.0 2.0 3.0
0.
0
1
.0
2
.0
3
.0
Exchange rate P∗
A
li
ce
’s
u
ti
li
ty
a
t
t 1
,
U
A t 1
UBt1,c(cont)
UBt1,c(stop)
Fig. 8: Alice’s and Bob’s utility at t1 (UAt1 , U
B
t1 ). Each agent’s
indifference points between cont and stop are marked with �.
Q Tokena at t4 + τa. Same as in the basic scenario described
in Section III-E1, B chooses to unlock Tokena (cont) with
certainty. If A has not released the secret, the Oracle will
transfer A’s collateral to B.
2) t3: At this point, B has written an HTLC on Chainb as
agreed, and hence has no further chance for foul play. The
Oracle thus return’s B’s collateral, and B receives Q Tokena
at τ3+τα. If now A waives the contract, then her utility equals
UAt3 (stop) as described in Equation (16) and her collateral will
be transferred to be in the next step. If A chooses to unlocks
the 1 Tokenb, the swap succeeds and she receives Tokenb at
t5 plus her collateral Q Tokena at τ4 + τα.
Therefore, A chooses cont over stop if:
UAt3 (stop) < UAt3 (cont) +
Q
er
A(εb+τa)
Pt3 >
(
P∗
erA(τε+2τa)
− Q
er
A(εb+τa)
)
e(r
A−µ)τb
1+αA
(33)
Since Pt3 ≥ 0, we express Pt3 ’s lower bound as:
Pt3,c =
e(r
A−µ)τb
1+αA
·max
(
P∗
erA(τε+2τa )
− Q
er
A(εb+τa)
, 0
)
3) t2: B decides whether to write an HTLC on Chainb
(cont) or not (stop).
cont: As discussed in Section IV-A2, if B chooses cont
at this point, the Oracle will determine at t3 that B has fulfilled
his obligations, and will return his collateral at that time.
In addition, B expects that at t4, A will honour the deal
when Pt3 > Pt3,c in which case B gets P∗ Tokena at t6, and
waive the deal otherwise in which case Bob gets 1 Tokenb at
t7 plus A’s collateral Q at t3 + τa.
Therefore, the utility of A and B utility at t2 is:
UAt2,c(cont) =
∫∞
Pt3,c
P(x,Pt2 ,τb)
(
UAt3
(cont)+
Q
er
A(εb+τa)
)
dx
+C(Pt3,c,Pt2 ,τb)UAt3 (stop)
er
Aτb
(34)
UBt2,c(cont) =
Q
er
Bτa
+[1−C(Pt3,c,Pt2 ,τb)]UBt3 (cont)
+
∫Pt3
0 P(x,Pt2
,τb)
(
UBt3
(stop)+
Q
er
B(εb+τa)
)
dx
er
Bτb
(35)
stop: B withdraws from the deal and keep 1 Tokenb. B’s
utility is the same as Equation (23). The swap stops due to
B’s foul play. The Oracle thus releases both agents collateral,
2Q in total, to A at t3, who will receive the fund at τ3 + τa.
Intuitively, if Pt2 is too high, then B would like to keep
the valuable Tokenb and wouldn’t want to swap, and B would
therefore choose stop; if Pt2 is too low (say, close to zero),
591
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
0.0 1.0 2.0 3.0
0.
0
0
.4
0
.8
Exchange rate P∗
S
u
cc
es
s
ra
te
S
R
Collateral Q
0 (basic setup)
0.01
0.1
Fig. 9: Swap success rate SR as a function of exchange rate
P∗ with different collateral values Q.
forfeiting the valuable collateral to keep the worthless TokenB
would not be sensible—even if A chooses not to reveal secret
in the next step, B would at least be able to receive the
collateral; therefore, B would choose cont .
Thus, Equation UBt2,c(cont) = UBt2(stop) has an odd number
of roots. Figure 7 shows that there can be 1 or 3 intercepts
between curve UBt2,c(cont) and UBt2(stop), depending on the
value of Q and P∗. Define set Pt2 such that:
Pt2 ∈ Pt2 ⇐⇒ UBt2,c(cont) > UBt2(stop)
Hence, B would choose cont if and only if Pt2 falls in Pt2 .
4) t1: A and B simultaneously make the decision on
whether to engage in the swap (cont) or not (stop).
cont: The utility of A and B at t2 can be expressed with
their time-discounted, expected utility at t2 = t1 + τa:
UAt1,c(cont) =
∫
x∈Pt2
P(x,Pt1
,τa)UAt2,c
(cont)dx+(∫
x∈R+\Pt2
P(x,Pt1
,τa)dx
)(
UAt2
(stop)+
2Q
er
A(τb+τa)
)
erAτa
(36)
UBt1,c(cont) =
∫
x∈Pt2
P(x,Pt1
,τa)UBt2,c
(cont)dx+∫
x∈R+\Pt2
P(x,Pt1
,τa)UBt2
(stop)dx
erAτa
(37)
stop: A and B decide not to engage in the swap so that
they can keep their original token and the collateral. Thus:
UAt1,c(stop) = UAt1 (stop) +Q = P∗ +Q (38)
UBt1,c(stop) = UBt1(stop) +Q = Pt1 +Q (39)
Define set PA∗ and PB∗ such that:
Pt2 ∈ PAt2 ⇐⇒ UAt2,c(cont) > UAt2,c(stop)
Pt2 ∈ PBt2 ⇐⇒ UBt2,c(cont) > UBt2,c(stop)
Hence, the exchange rate P∗ must be in P∗ = PAt2 ∪PBt2 ,
since otherwise agents’ external utility (stop) exceeds the
expected utility from the swap (cont) and the swap would
not be initiated (see Figure 8).
The swap’s success rate SR can thus be expressed as:
SR(P∗) =
∫
x∈Pt2
P (x, Pt1 , τa)
[
1− C(Pt3,c(P∗), x, τb)
]
dx,
P∗ ∈ P∗ (40)
Figure 9 shows SR increases with collateral amount Q.
This is because higher Q allows for larger price movement,
0 2 4 6 8 10 12
0
1
2
3
4
5
Tokenb price at t2, Pt2
O
p
ti
m
a
l
T
o
ke
n
b
X
∗
Tokena amount P∗
0.02
4
8.91
(a) Optimal Tokenb amount X∗
for Bob to lock based on Pt2 and
Tokena amount P∗ locked at t1.
0 2 4 6 8 10 12
0.
0
0
.1
0
.2
0
.3
0
.4
Amount Tokena locked, P∗
A
li
ce
’s
u
ti
li
ty
a
t
t 1
,
U
A t 1
,x P∗
P∗
(b) Alice’s utility at t1, UAt1,x as a
function of the amount of Tokena
to lock P∗.
Fig. 10: Agents’ decision making with uncertain swap rate.
by expanding the feasible Tokenb price range at both t2 (see
Figure 7) and t1 (see Equation (33)).
B. Uncertain exchange rate
In this model variation, we discuss an HTLC game in which
agents not only choose between cont and stop, but also the
exact amount of funds to lock in: P∗ Tokena at t1 and X
Tokenb t2, respectively. This renders the actual exchange rate
uncertain at the outset of the game. We apply subscript “x”
for expressions different from their counterpart in the baseline
model.
1) t4: Same as Section III-E1
2) t3: Similar to Section III-E2, there exists a minimum
feasible Tokenb price, expressed as Pt3,x(X) since it depends
on X , the actual transferred amount at t2. It can be easily
derived that
Pt3,x(X) = Pt3/X, with Pt3,x(0) =∞ (41)
where Pt3 is expressed in Equation (18).
3) t2: B determines the value of X ≥ 0 that maximizes his
excess utility, namely the utility he obtains by proceeding with
locking X less the utility he keeps by retaining X Tokenb.
UAt2,x(X) =
X
∫∞
Pt3,x(X)
P(x,Pt2 ,τb)UAt3 (cont)dx
+C(Pt3,x(X),Pt2
,τb)U
A
t3
(stop)
er
Aτb
(42)
UBt2,x(X) =
[1−C(Pt3,x(X),Pt2
,τb)]UBt3 (cont)
+X
∫Pt3,x(X)
0 P(x,Pt2 ,τb)UBt3 (stop)dx
er
Bτb
−XPt2 (43)
Denote the optimal X as X∗(Pt2), a function of Pt2 . Thus,
X∗(Pt2) = argmax
X≥0
UBt2,x(X) (44)
Figure 10a shows at any given amount of Tokena that A
has locked at t1, P∗, the optimal amount of Tokenb that B
should lock first increases and then decreases with Pt2 .
This aligns with the intuition that when Pt2 is too low, i.e.
Tokenb is valueless, then the likelihood of A’s withdrawal at
t3 is high, making B unwilling to lock in big funds at t2; when
Pt2 is too high, i.e. Tokenb is very valuable, then the amount
of Tokenb that B needs to commit also becomes low to make
the deal worthwhile for himself. Generally at a given Pt2 , X∗
increases with P∗, reflecting a degree of fairness of the game.
592
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
0 2 4 6 8
0.
0
0
.4
0
.8
Amount Tokena locked P∗
S
u
cc
es
s
ra
te
S
R
basic setup
uncertain exchange
Fig. 11: Swap success rate SR as a function of initial amount
of Tokena locked in by Alice P∗.
4) t1: A takes into account the fact that B will choose an
amount of Tokenb to lock in at t2 that maximizes his own
utility, based on Tokenb price at t2 and the amount of Tokena
that she commits, P∗.
A thus chooses the value of P∗ that maximizes her excess
utility, namely the utility she obtains by entering the swap with
P∗ Tokena in excess of the utility she keeps by retaining P∗
Tokena. Therefore,
UAt1,x(P∗) =
∫∞
0
P(Pt2 ,Pt1 ,τa)U
A
t2,x
(X∗(Pt2 ))dPt2
erAτa
− P∗
(45)
Similar to Figure 5, Figure 10b shows that the excess utility
first increases and then decreases with P∗. P∗ represents the
amount that maximizes UAt1,x. Nevertheless, A might only
be able to afford a lesser amount due to a possible budget
constraint on her side. P∗ represents the lowest possible
amount that A needs to enter for a non-negative excess utility.
We can express the swap’s success rate SR under uncertain
exchange rate as:
SR(P∗) =
∫ ∞
0
P (x, Pt1 , τa)
[
1− C(Pt3,x(X(x)), x, τb)
]
dx,
(46)
Figure 11 compares the success rate between the basic setup
and the scenario with uncertain exchange rate. Interestingly,
absence of pre-determined interest rate boosts the success rate.
V. DISCUSSION
A. Interpretation of findings
Multiple findings can be drawn from our analysis that are
relevant for real-world applications. It has previously been
mentioned that the agent completing the transaction receives
a free American option, meaning that she has the choice to
complete the transaction, or not, based on whether the asset
price changes at her advantage. However, in this work, we
show that the other agent (not only the swap initiator) may also
leave the game midway, incentivized by a potentially higher
financial gain. This scenario has thus far been neglected in the
literature.
Our analysis also suggests that the collateral deposits can
be dynamically adjusted depending on the terms of the swap
(e.g. exchange rate) and optimization goal (e.g. maximizing
utility, or maximizing success rate).
In the last model extension we show that the likelihood
of completing the transaction is higher when the agents
dynamically adjust the exchange rate to account for token price
fluctuations. This is because an arbitrarily fixed exchange rate
takes away the flexibility for agents to adjust their commitment
based on the latest market condition (price change in our case).
B. Limitations and future work
Our work motivates multiple future research directions.
Firstly, simulation studies can be performed based on our
model framework and its derivation using real market data.
Secondly, trustless protocols supporting collateral deposit
without a third party can be designed. To date, collaterals
are typically deposited at a trusted third party in practice
which is then responsible for resolving payment disputes. For
instance, Bisq [8], an information platform for quotes and
P2P transactions with arbitrators, uses a postage of collateral
with possible intervention of an arbitrator, thus providing only
a limited level of “distributiveness” and still requiring some
trust in the arbitration system. Note that transactions executed
via Bisq require a collateral deposit and an arbitrator fee.
Discussion with community members revealed that 3-5% of
transactions fail and go to arbitration, and that this percentage
increases during periods of higher market volatility.
Thirdly, HTCL protocols can be further improved. HTLCs
have known limitations [27], [39], including strong assump-
tions required to maintain security, interactiveness, exclusive-
ness to public blockchains (for public mempools), and the need
for synchronizing clocks between blockchains and temporal
locking of assets.
Lastly, a more realistic and sophisticated setup can be
brought into our framework. For example, future models may
incorporate different risk-free rates for the two exchanged
tokens, which resembles the settings of the Garman Kohlha-
gen model. In addition, blockchain transaction fees or coin
stacking (similar to earning dividends or interest on a locked-
in asset) may have an impact on agents’ actions. Our model
can also be extended to consider repeated games, stochastic
individual utility, success premium as a random variable, etc.
VI. CONCLUSION
We introduce a game-theoretic approach to model agent
behaviors in cross-ledger transactions. This allows us to study
the viability and sensitivity of different protocols with re-
spect to environment variables: agents’ knowledge and utility
functions, and the price dynamics. We study in-depth the
atomic swap as implemented with hash time lock contracts,
for which we derived the success rate of a transaction. In
particular, we showed that both transacting counterparties can
rationally decide to walk away from the transaction, and at
different times. This is a more realistic setup that relaxes the
assumptions from previous works [30], [40] that only the swap
initiator can benefit from price variation and act upon it. A
sensitivity analysis reveals that price volatility significantly
affects the success rate of the transaction.
593
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply. 
We extend our basic setup along two directions. First, we
show that introducing collateral deposit, in a purely theoretical
way, increases the success rate of the transaction. Second, we
sketch out the scenario where agents are uncertain about the
amount of funds their counterparty intends to commit.
Two important conclusions are therefore that cross-ledger
atomic swap trustless protocols could benefit from the use of
disciplinary mechanisms, such as collateral deposit, and that
allowing agents to dynamically adjust the swap amount can
increase the success rate.
REFERENCES
[1] H. Garcia-Molina, “Using semantic knowledge for transaction process-
ing in a distributed database,” ACM Transactions on Database Systems
(TODS), vol. 8, no. 2, pp. 186–213, 1983.
[2] J. Xu, N. Vavryk, K. Paruch, and S. Cousaert, “SoK: Decentralized
Exchanges (DEX) with Automated Market Maker (AMM) protocols,”
3 2021. [Online]. Available: http://arxiv.org/abs/2103.12732
[3] T. Moore and N. Christin, “Beware the middleman: Empirical analysis
of Bitcoin-exchange risk,” in International Conference on Financial
Cryptography and Data Security. Springer, 2013, pp. 25–33.
[4] “Details of $5 Million Bitstamp Hack Revealed.” [Online].
Available: https://www.coindesk.com/unconfirmed-report-5-million-
bitstamp-bitcoin-exchange
[5] “Crypto Exchange Bitfinex Bounces Back after a DDoS Attack.”
[Online]. Available: https://www.ccn.com/crypto-exchange-bitfinex-
bounces-back-after-a-ddos-attack
[6] “itBit.” [Online]. Available: https://www.itbit.com/otc
[7] “HiveEx-Large Volume Cryptocurrency OTC Brokerage.” [Online].
Available: https://www.hiveex.com
[8] “Bisq White Paper.” [Online]. Available: https://docs.bisq.network/
exchange/whitepaper.html
[9] “Decred-compatible cross-chain atomic swapping,” 2018. [Online].
Available: https://github.com/decred/atomicswap/
[10] Komodo, “Komodo’s Atomic-Swap Powered, Decentralized
Exchange: Barterdex,” 2021. [Online]. Available: https://
docs.komodoplatform.com/whitepaper/chapter6.html
[11] “0x White paper.” [Online]. Available: https://0x.org/pdfs/0x white
paper.pdf
[12] “Bitcoin Wiki: Atomic cross-chain trading.” [Online]. Available:
https://en.bitcoin.it/wiki/
[13] J. Kirsten and H. Davarpanah, “Anonymous Atomic Swaps Using
Homomorphic Hashing,” Available at SSRN 3235955, 2018.
[14] G. Zyskind, C. Kisagun, and C. Fromknecht, “Enigma Catalyst: A
machine-based investing platform and infrastructure for crypto-assets,”
2018.
[15] J. A. Liu, “Atomic Swaptions: Cryptocurrency Derivatives,” arXiv
preprint arXiv:1807.08644, 2018.
[16] “Building Super Financial Markets for the New Economy.”
[Online]. Available: https://wanchain.org/files/Wanchain-Whitepaper-
EN-version.pdf
[17] R. L. Rivest, A. Shamir, and Y. Tauman, “How to leak a secret: Theory
and applications of ring signatures,” in Theoretical Computer Science.
Springer, 2006, pp. 164–186.
[18] S. Thomas and E. Schwartz, “A protocol for interledger payments,”
2015. [Online]. Available: https://interledger.org/interledger.pdf
[19] Interledger, “STREAM: A Multiplexed Money and Data Transport
for ILP,” 2020. [Online]. Available: https://github.com/interledger/rfcs/
blob/master/0029-stream/0029-stream.md
[20] A. Dubovitskaya, D. Ackerer, and J. Xu, “A Game-Theoretic Analysis
of Cross-Ledger Swaps with Packetized Payments,” in Workshop Pro-
ceedings of Financial Cryptography and Data Security, 2021.
[21] “Btc relay.” [Online]. Available: https://github.com/ethereum/btcrelay
[22] A. Back, M. Corallo, L. Dashjr, M. Friedenbach, G. Maxwell,
A. Miller, A. Poelstra, J. Timón, and P. Wuille, “Enabling
blockchain innovations with pegged sidechains,” URL: http://www.
opensciencereview. com/papers/123/enablingblockchain-innovations-
with-pegged-sidechains, 2014.
[23] S. Johnson, P. Robinson, and J. Brainard, “Sidechains and interoperabil-
ity,” arXiv preprint arXiv:1903.04077, 2019.
[24] J. Poon and T. Dryja, “The bitcoin lightning network: Scalable off-chain
instant payments,” 2016.
[25] L. Luu, V. Narayanan, C. Zheng, K. Baweja, S. Gilbert, and P. Saxena,
“A secure sharding protocol for open blockchains,” in Proceedings of
the 2016 ACM SIGSAC Conference on Computer and Communications
Security. ACM, 2016, pp. 17–30.
[26] A. Miller, I. Bentov, R. Kumaresan, and P. McCorry, “Sprites: Payment
channels that go faster than lightning,” arXiv preprint arXiv:1702.05812,
2017.
[27] A. Zamyatin, D. Harz, J. Lind, P. Panayiotou, A. Gervais, and
W. Knottenbelt, “XCLAIM: Trustless, interoperable, cryptocurrency-
backed assets,” in IEEE Symposium on Security and Privacy. IEEE,
5 2019, pp. 193–210. [Online]. Available: https://ieeexplore.ieee.org/
document/8835387/
[28] M. Borkowski, D. McDonald, C. Ritzer, and S. Schulte, “Towards
Atomic Cross-Chain Token Transfers: State of the Art and Open Ques-
tions within TAST,” Distributed Syste ms Group, TU Wien (Technische
Universität Wien), Vienna, Austria, Tech. Rep, 2018.
[29] M. Herlihy, “Atomic cross-chain swaps,” in Proceedings of the 2018
ACM Symposium on Principles of Distributed Computing, ACM. As-
sociation for Computing Machinery, 7 2018, pp. 245–254.
[30] R. Han, H. Lin, and J. Yu, “On the optionality and fairness
of Atomic Swaps,” in AFT 2019 - Proceedings of the 1st ACM
Conference on Advances in Financial Technologies. New York,
New York, USA: ACM Press, 2019, pp. 62–75. [Online]. Available:
http://dl.acm.org/citation.cfm?doid=3318041.3355460
[31] E. Heilman, S. Lipmann, and S. Goldberg, “The Arwen Trading
Protocols (Full Version).” [Online]. Available: https://eprint.iacr.org/
2020/024.pdf
[32] V. Zakhary, D. Agrawal, and A. E. Abbadi, “Atomic commitment across
blockchains,” arXiv preprint arXiv:1905.02847, 2019.
[33] M. Herlihy, B. Liskov, and L. Shrira, “Cross-chain Deals and
Adversarial Commerce,” Proceedings of the VLDB Endowment,
vol. 13, no. 2, pp. 100–113, 2019. [Online]. Available: http:
//www.vldb.org/pvldb/vol13/p100-herlihy.pdf
[34] M. Belotti, S. Moretti, M. Potop-Butucaru, and S. Secci, “Game
theoretical analysis of Atomic Cross-Chain Swaps,” 2020. [Online].
Available: https://hal.archives-ouvertes.fr/hal-02414356
[35] TierNolan, “Atomic swaps using cut and choose,” 2016. [Online].
Available: https://bitcointalk.org/index.php?topic=1364951
[36] M. S. Ferdous, M. J. M. Chowdhury, M. A. Hoque, and A. Colman,
“Blockchain Consensus Algorithms: A Survey,” 1 2020. [Online].
Available: http://arxiv.org/abs/2001.07091
[37] S. Tang and S. S. Chow, “Systematic market control of cryptocurrency
inflations: Work-in-progress,” in BCC 2018 - Proceedings of the
2nd ACM Workshop on Blockchains, Cryptocurrencies, and Contracts,
Co-located with ASIA CCS 2018. New York, New York, USA:
ACM Press, 2018, pp. 61–63. [Online]. Available: http://dl.acm.org/
citation.cfm?doid=3205230.3205240
[38] Digiconomist, “Guide to Cryptocurrency Volatility,” 2014. [Online].
Available: https://digiconomist.net/guide to cryptocurrency volatility/
[39] T. Koensa and E. Polla, “Assessing Interoperability Solutions for Dis-
tributed Ledgers.” [Online]. Available: https://www.ingwb.com/media/
2667864/assessing-interoperability-solutions-for-distributed-ledgers.pdf
[40] T. Eizinger, L. Fournier, and P. Hoenisch, “The state of atomic
swaps,” 2018. [Online]. Available: http://diyhpl.us/wiki/transcripts/
scalingbitcoin/tokyo-2018/atomic-swaps/
594
Authorized licensed use limited to: CITY UNIV OF HONG KONG. Downloaded on April 15,2023 at 08:12:43 UTC from IEEE Xplore.  Restrictions apply.